[{'key': 2806, 'parent': -1, 'tfidf_word': 'manager native io digest permission flush restarter code tunnel ip ', 'tfidf_method': 'interrupt_kernel finish_shutdown cleanup_resources test_validate_kernel_name MyKSM find_kernel_specs __len__ signal_kernel test_signal_kernel_subprocesses msg_header ', 'lda_word': ' msg,header,kernel,extract,client,', 'lda_method': ' start,msg,multikernelmanager,session,wrap,', 'lsi_word': ' msg,kernel,header,start,test,', 'lsi_method': ' msg,msg_id,msg_header,extract_header,asynckernelclient,', 'spm_method': '  &#187; execute(utils.py) &rarr; execute(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; execute(client.py) &rarr; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; AsyncKernelClient(client.py) &rarr; execute(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; BlockingKernelClient(client.py) &rarr; execute(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; kernel_info(client.py) &rarr; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; start_channels(client.py) &rarr; kernel_info(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; inspect(client.py) &rarr; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; comm_info(client.py) &rarr; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; shutdown(client.py) &rarr; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; complete(client.py) &rarr; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; history(client.py) &rarr; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; restart_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) &rarr; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; request_shutdown(manager.py) &rarr; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; start_new_async_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; do_execute(signalkernel.py) &rarr; poll(restarter.py) &rarr; restart_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; poll(restarter.py) &rarr; restart_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; restart_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) &rarr; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; start(kernelspecapp.py) &rarr; start(runapp.py) &rarr; execute_interactive(client.py) &rarr; _stdin_hook_default(client.py) &rarr; input(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; start(runapp.py) &rarr; execute_interactive(client.py) &rarr; _stdin_hook_default(client.py) &rarr; input(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; execute_interactive(client.py) &rarr; _stdin_hook_default(client.py) &rarr; input(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; _stdin_hook_default(client.py) &rarr; input(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; input(client.py) &rarr; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; execute_interactive(client.py) &rarr; _stdin_hook_default(client.py) &rarr; input(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; _stdin_hook_default(client.py) &rarr; input(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; test_start_parallel_thread_kernels(test_multikernelmanager.py) &rarr; raw_tcp_lifecycle(test_multikernelmanager.py) &rarr; _get_tcp_km(test_multikernelmanager.py) &rarr; AsyncMultiKernelManager(multikernelmanager.py) &rarr; MultiKernelManager(multikernelmanager.py) &rarr; kernel_method(multikernelmanager.py) &rarr; wrapped(multikernelmanager.py) . <br> &#187; tcp_lifecycle_with_loop(test_multikernelmanager.py) &rarr; raw_tcp_lifecycle(test_multikernelmanager.py) &rarr; _get_tcp_km(test_multikernelmanager.py) &rarr; AsyncMultiKernelManager(multikernelmanager.py) &rarr; MultiKernelManager(multikernelmanager.py) &rarr; kernel_method(multikernelmanager.py) &rarr; wrapped(multikernelmanager.py) . <br> &#187; raw_tcp_lifecycle(test_multikernelmanager.py) &rarr; _get_tcp_km(test_multikernelmanager.py) &rarr; AsyncMultiKernelManager(multikernelmanager.py) &rarr; MultiKernelManager(multikernelmanager.py) &rarr; kernel_method(multikernelmanager.py) &rarr; wrapped(multikernelmanager.py) . <br> &#187; test_start_parallel_process_kernels(test_multikernelmanager.py) &rarr; raw_tcp_lifecycle(test_multikernelmanager.py) &rarr; _get_tcp_km(test_multikernelmanager.py) &rarr; AsyncMultiKernelManager(multikernelmanager.py) &rarr; MultiKernelManager(multikernelmanager.py) &rarr; kernel_method(multikernelmanager.py) &rarr; wrapped(multikernelmanager.py) . <br> &#187; test_start_parallel_thread_kernels(test_multikernelmanager.py) &rarr; test_tcp_lifecycle(test_multikernelmanager.py) &rarr; _get_tcp_km(test_multikernelmanager.py) &rarr; MultiKernelManager(multikernelmanager.py) &rarr; kernel_method(multikernelmanager.py) &rarr; wrapped(multikernelmanager.py) . <br> &#187; tcp_lifecycle_with_loop(test_multikernelmanager.py) &rarr; test_tcp_lifecycle(test_multikernelmanager.py) &rarr; _get_tcp_km(test_multikernelmanager.py) &rarr; MultiKernelManager(multikernelmanager.py) &rarr; kernel_method(multikernelmanager.py) &rarr; wrapped(multikernelmanager.py) . <br> &#187; test_start_parallel_process_kernels(test_multikernelmanager.py) &rarr; test_tcp_lifecycle(test_multikernelmanager.py) &rarr; _get_tcp_km(test_multikernelmanager.py) &rarr; MultiKernelManager(multikernelmanager.py) &rarr; kernel_method(multikernelmanager.py) &rarr; wrapped(multikernelmanager.py) . <br> &#187; run_kernel(manager.py) &rarr; start_new_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; start_new_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; initialize(test_connect.py) &rarr; init_connection_file(consoleapp.py) &rarr; load_connection_file(connect.py) &rarr; load_connection_info(connect.py) &rarr; _ip_default(connect.py) &rarr; localhost(localinterfaces.py) . <br> &#187; initialize(runapp.py) &rarr; handle_sigint(runapp.py) &rarr; interrupt_kernel(manager.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; tunnel_to_kernel(connect.py) &rarr; try_passwordless_ssh(tunnel.py) &rarr; _try_passwordless_paramiko(tunnel.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; handle_sigint(runapp.py) &rarr; interrupt_kernel(manager.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; tunnel_connection(tunnel.py) &rarr; open_tunnel(tunnel.py) &rarr; paramiko_tunnel(tunnel.py) &rarr; _try_passwordless_paramiko(tunnel.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; open_tunnel(tunnel.py) &rarr; paramiko_tunnel(tunnel.py) &rarr; _try_passwordless_paramiko(tunnel.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; paramiko_tunnel(tunnel.py) &rarr; _try_passwordless_paramiko(tunnel.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; _try_passwordless_paramiko(tunnel.py) &rarr; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; init_kernel_info(runapp.py) &rarr; kernel_info(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; start(kernelspecapp.py) &rarr; input(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; try_passwordless_ssh(tunnel.py) &rarr; _try_passwordless_paramiko(tunnel.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; finish_shutdown(manager.py) &rarr; _kill_kernel(manager.py) &rarr; _async_wait(manager.py) &rarr; is_alive(manager.py) &rarr; has_kernel(manager.py) &rarr; _launch_kernel(manager.py) . <br>', 'text_summary': "Subclasses may override  Prepares a kernel for startup in a separate process. return ip for localhost (almost always 127.0.0.1) test `ipython console --existing` loads a connection file. Create a client configured to connect to our kernel. return ip for localhost (almost always 127.0.0.1)   Ensure that a sequence of kernel startups doesn't break anything. return zmq Socket connected to the IOPub channel. Pass a message to the ZMQ socket to send. return ip for localhost (almost always 127.0.0.1)   set up ssh tunnels, if needed. Start a new kernel, and return its Manager and Client. Send a string of raw input to the kernel. Return the connection info as a dict. Ensure that a sequence of kernel startups doesn't break anything. load ip addresses with socket.gethostbyname_ex uniq_stable(elems) -> list. return ip for localhost (almost always 127.0.0.1) test load_connection_file() after. Output hook when running inside an IPython kernel. Launches a localhost kernel, binding to the specified ports. test `ipython console --existing` loads a connection file. Get entries from the kernel's history list. find a connection file, and return its absolute path. return ip for localhost (almost always 127.0.0.1)      find a connection file, and return its absolute path. tunnel connections to a kernel via ssh. For tests, create a file to indicate that we've started. Connect a socket to an address via an ssh tunnel. Returns a dict mapping kernel names to kernelspecs. handle kernel info reply. Given a message or header, return the header. Get the hb channel object for this kernel. Returns the id to associate with the kernel for this request. {connection_file})   Prepares a kernel for startup in a separate process. {connection_file})  Restarts a kernel with the arguments that were used to launch it. Make a blocking client connected to my kernel. populate local and public IPs from flat list of all IPs. return the IP addresses that point to this machine. return ip for localhost (almost always 127.0.0.1)       return ip for localhost (almost always 127.0.0.1)   find the connection file, and load the info if found. Load connection info from JSON dict in self.connection_file. return ip for localhost (almost always 127.0.0.1)  Write connection info to JSON dict in self.connection_file. Return the number of running kernels. Verify realpath is used when formatting connection file. return zmq Socket connected to the Shell channel. Receive and return the reply for a given request. Request kernel info. {connection_file})  Context manager to create a kernel in a subprocess. Create an ssh tunnel using command-line ssh that connects port lport. populate local and public IPs from flat list of all IPs. return the IP addresses for this machine that are visible to other machines. This is run in the ioloop thread when the kernel info reply is received. return zmq Socket connected to the StdIn channel. return zmq Socket connected to the Heartbeat channel. return ip for localhost (almost always 127.0.0.1)   find the connection file, and load the info if found. find the connection file, and load the info if found. Return a mapping of kernel names to resource directories from dir. populate local and public IPs from flat list of all IPs. decorator to ensure load_ips has been run before f. Returns a :class:`KernelSpec` instance for a given kernel_name. Send a shutdown request via control channel. Context manager to create a kernel in a subprocess. return zmq Socket connected to the Control channel. test load_connection_file() after. Write connection info to JSON dict in self.connection_file. Create a zmq Socket and connect it to the kernel. Forgets randomly assigned port numbers and cleans up the connection file.", 'files_count': 36, 'files': ['utils.py', 'client.py', 'test_adapter.py', 'session.py', 'test_session.py', 'manager.py', 'forward.py', 'signalkernel.py', 'restarter.py', 'adapter.py', 'connect.py', 'threaded.py', 'channels.py', 'managerabc.py', 'multikernelmanager.py', 'channelsabc.py', 'kernelspec.py', 'localinterfaces.py', 'kernelspecapp.py', 'runapp.py', 'jsonutil.py', 'consoleapp.py', 'test_connect.py', 'test_multikernelmanager.py', 'test_manager.py', 'test_kernelspec.py', 'kernelapp.py', 'test_localinterfaces.py', 'test_jsonutil.py', 'test_client.py', 'tunnel.py', 'test_ssh.py', 'test_kernelmanager.py', 'test_kernelapp.py', 'win_interrupt.py', 'launcher.py'], 'execution_path_count': 1404, 'function_id_to_name_file': {'704': 'execute(utils.py)', '155': 'execute(client.py)', '520': 'msg(test_adapter.py)', '534': 'msg(test_adapter.py)', '476': 'msg(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '90': 'AsyncKernelClient(client.py)', '116': 'BlockingKernelClient(client.py)', '167': 'kernel_info(client.py)', '170': 'start_channels(client.py)', '163': 'inspect(client.py)', '152': 'comm_info(client.py)', '169': 'shutdown(client.py)', '153': 'complete(client.py)', '161': 'history(client.py)', '526': 'test_input_request(test_adapter.py)', '523': 'test_display_data(test_adapter.py)', '527': 'test_kernel_info_reply(test_adapter.py)', '530': 'test_object_info_reply_not_found(test_adapter.py)', '529': 'test_object_info_reply(test_adapter.py)', '531': 'test_object_info_request(test_adapter.py)', '521': 'test_complete_reply(test_adapter.py)', '522': 'test_complete_request(test_adapter.py)', '524': 'test_execute_reply(test_adapter.py)', '525': 'test_execute_request(test_adapter.py)', '532': 'test_rename_type(test_adapter.py)', '528': 'test_no_adapt(test_adapter.py)', '533': 'test_same_version(test_adapter.py)', '695': 'test_send_raw(test_session.py)', '692': 'test_feed_identities(test_session.py)', '694': 'test_send(test_session.py)', '696': 'test_serialize(test_session.py)', '693': 'test_msg(test_session.py)', '328': 'interrupt_kernel(manager.py)', '166': 'is_complete(client.py)', '539': 'test_input_request(test_adapter.py)', '537': 'test_display_data(test_adapter.py)', '543': 'test_kernel_info_reply(test_adapter.py)', '540': 'test_inspect_reply(test_adapter.py)', '542': 'test_inspect_request_token(test_adapter.py)', '541': 'test_inspect_request(test_adapter.py)', '535': 'test_complete_reply(test_adapter.py)', '536': 'test_complete_request(test_adapter.py)', '538': 'test_execute_request(test_adapter.py)', '545': 'test_rename_type(test_adapter.py)', '546': 'test_same_version(test_adapter.py)', '544': 'test_no_adapt(test_adapter.py)', '330': 'restart_kernel(manager.py)', '331': 'shutdown_kernel(manager.py)', '362': 'request_shutdown(manager.py)', '480': 'send(session.py)', '322': 'start_new_async_kernel(manager.py)', '492': 'handle(forward.py)', '698': 'test_tracking(test_session.py)', '699': 'test_unique_msg_ids(test_session.py)', '516': 'test_default_version(test_adapter.py)', '444': 'extract_header(session.py)', '510': 'do_execute(signalkernel.py)', '236': 'poll(restarter.py)', '363': 'restart_kernel(manager.py)', '364': 'shutdown_kernel(manager.py)', '50': 'adapt(adapter.py)', '450': 'utcnow(session.py)', '482': 'serialize(session.py)', '483': 'sign(session.py)', '440': 'Message(session.py)', '338': '_connect_control_socket(manager.py)', '192': '_create_connected_socket(connect.py)', '196': '_make_url(connect.py)', '734': 'send(threaded.py)', '738': 'thread_send(threaded.py)', '88': 'send(channels.py)', '114': 'send(channels.py)', '346': '_kill_kernel(manager.py)', '365': 'signal_kernel(manager.py)', '354': 'has_kernel(manager.py)', '347': '_launch_kernel(manager.py)', '352': 'finish_shutdown(manager.py)', '357': 'is_alive(manager.py)', '350': 'cleanup_resources(manager.py)', '201': 'cleanup_ipc_files(connect.py)', '211': 'ports(connect.py)', '349': 'cleanup(manager.py)', '368': 'stop_restarter(manager.py)', '200': 'cleanup_connection_file(connect.py)', '373': 'is_alive(managerabc.py)', '428': '_fire_callbacks(restarter.py)', '412': 'is_alive(multikernelmanager.py)', '140': 'is_alive(channelsabc.py)', '419': 'restart_kernel(multikernelmanager.py)', '375': 'restart_kernel(managerabc.py)', '732': 'is_alive(threaded.py)', '239': 'stop(restarter.py)', '86': 'is_alive(channels.py)', '112': 'is_alive(channels.py)', '366': 'start_kernel(manager.py)', '360': 'pre_start_kernel(manager.py)', '212': 'write_connection_file(connect.py)', '197': '_record_random_port_names(connect.py)', '353': 'format_kernel_cmd(manager.py)', '369': 'from_ns(manager.py)', '358': 'kernel_spec(manager.py)', '253': 'KernelSpec(kernelspec.py)', '341': '_get_env_substitutions(manager.py)', '314': 'local_ips(localinterfaces.py)', '312': 'is_local_ip(localinterfaces.py)', '202': 'cleanup_random_ports(connect.py)', '359': 'post_start_kernel(manager.py)', '367': 'start_restarter(manager.py)', '291': 'start(kernelspecapp.py)', '439': 'start(runapp.py)', '122': 'execute_interactive(client.py)', '121': '_stdin_hook_default(client.py)', '162': 'input(client.py)', '113': 'msg_ready(channels.py)', '87': 'msg_ready(channels.py)', '120': '_recv_reply(client.py)', '156': 'get_control_msg(client.py)', '158': 'get_shell_msg(client.py)', '110': 'get_msg(channels.py)', '108': '_recv(channels.py)', '84': 'get_msg(channels.py)', '82': '_recv(channels.py)', '119': '_output_hook_kernel(client.py)', '118': '_output_hook_default(client.py)', '117': 'reqrep(client.py)', '124': 'wrapped(client.py)', '97': 'execute_interactive(client.py)', '96': '_stdin_hook_default(client.py)', '95': '_recv_reply(client.py)', '100': 'get_shell_msg(client.py)', '98': 'get_control_msg(client.py)', '91': 'reqrep(client.py)', '105': 'wrapped(client.py)', '94': '_output_hook_kernel(client.py)', '93': '_output_hook_default(client.py)', '683': 'test_bad_roundtrip(test_session.py)', '457': '__init__(session.py)', '459': '_check_packers(session.py)', '244': 'squash_dates(jsonutil.py)', '685': 'test_bad_unpacker(test_session.py)', '682': 'test_bad_packer(test_session.py)', '684': 'test_bad_unpack(test_session.py)', '681': 'test_bad_pack(test_session.py)', '687': 'test_cull_digest_history(test_session.py)', '700': 'test_zero_digest_history(test_session.py)', '697': 'test_session_id(test_session.py)', '678': 'setUp(test_session.py)', '680': 'test_args(test_session.py)', '215': '__init__(consoleapp.py)', '198': '_session_default(connect.py)', '565': 'test_load_connection_file_session_with_kn(test_connect.py)', '564': 'test_load_connection_file_session(test_connect.py)', '519': 'setUp(test_adapter.py)', '690': 'test_datetimes_pickle(test_session.py)', '689': 'test_datetimes_msgpack(test_session.py)', '649': 'test_start_sequence_ipc_kernels(test_multikernelmanager.py)', '638': '_get_ipc_km(test_multikernelmanager.py)', '379': 'AsyncMultiKernelManager(multikernelmanager.py)', '381': 'MultiKernelManager(multikernelmanager.py)', '382': 'kernel_method(multikernelmanager.py)', '425': 'wrapped(multikernelmanager.py)', '645': 'test_ipc_lifecycle(test_multikernelmanager.py)', '644': 'test_ipc_cinfo(test_multikernelmanager.py)', '650': 'test_start_sequence_tcp_kernels(test_multikernelmanager.py)', '639': '_get_tcp_km(test_multikernelmanager.py)', '646': 'test_shutdown_all(test_multikernelmanager.py)', '651': 'test_tcp_cinfo(test_multikernelmanager.py)', '648': 'test_start_parallel_thread_kernels(test_multikernelmanager.py)', '643': 'tcp_lifecycle_with_loop(test_multikernelmanager.py)', '642': 'raw_tcp_lifecycle(test_multikernelmanager.py)', '647': 'test_start_parallel_process_kernels(test_multikernelmanager.py)', '652': 'test_tcp_lifecycle(test_multikernelmanager.py)', '653': 'test_tcp_lifecycle_with_kernel_id(test_multikernelmanager.py)', '664': 'test_start_sequence_ipc_kernels(test_multikernelmanager.py)', '654': '_get_ipc_km(test_multikernelmanager.py)', '660': 'test_ipc_lifecycle(test_multikernelmanager.py)', '659': 'test_ipc_cinfo(test_multikernelmanager.py)', '665': 'test_start_sequence_tcp_kernels(test_multikernelmanager.py)', '655': '_get_tcp_km(test_multikernelmanager.py)', '666': 'test_tcp_cinfo(test_multikernelmanager.py)', '668': 'test_tcp_lifecycle_with_kernel_id(test_multikernelmanager.py)', '661': 'test_shutdown_all(test_multikernelmanager.py)', '663': 'test_start_parallel_thread_kernels(test_multikernelmanager.py)', '658': 'tcp_lifecycle_with_loop(test_multikernelmanager.py)', '667': 'test_tcp_lifecycle(test_multikernelmanager.py)', '662': 'test_start_parallel_process_kernels(test_multikernelmanager.py)', '319': 'AsyncKernelManager(manager.py)', '320': 'KernelManager(manager.py)', '254': 'KernelSpecManager(kernelspec.py)', '224': 'AsyncIOLoopKernelManager(manager.py)', '225': 'IOLoopKernelManager(manager.py)', '635': 'test_connection_file_real_path(test_manager.py)', '629': 'test_subclass(test_kernelspec.py)', '618': 'setUp(test_kernelspec.py)', '289': '_kernel_spec_manager_default(kernelspecapp.py)', '345': '_kernel_spec_manager_default(manager.py)', '295': '_kernel_spec_manager_default(kernelspecapp.py)', '286': '_kernel_spec_manager_default(kernelspecapp.py)', '245': 'KernelApp(kernelapp.py)', '292': '_kernel_spec_manager_default(kernelspecapp.py)', '631': 'MyKSM(test_kernelspec.py)', '282': 'KernelSpecApp(kernelspecapp.py)', '284': 'RemoveKernelSpec(kernelspecapp.py)', '283': 'ListKernelSpecs(kernelspecapp.py)', '280': 'InstallKernelSpec(kernelspecapp.py)', '281': 'InstallNativeKernelSpec(kernelspecapp.py)', '321': 'run_kernel(manager.py)', '323': 'start_new_kernel(manager.py)', '188': 'ConnectionFileMixin(connect.py)', '351': 'client(manager.py)', '208': 'get_connection_info(connect.py)', '310': '_requires_ips(localinterfaces.py)', '318': 'ips_loaded(localinterfaces.py)', '301': '_load_ips(localinterfaces.py)', '306': '_load_ips_ipconfig(localinterfaces.py)', '300': '_get_output(localinterfaces.py)', '309': '_populate_from_list(localinterfaces.py)', '299': 'NoIPAddresses(localinterfaces.py)', '316': 'public_ips(localinterfaces.py)', '311': '_uniq_stable(localinterfaces.py)', '304': '_load_ips_ifconfig(localinterfaces.py)', '305': '_load_ips_ip(localinterfaces.py)', '307': '_load_ips_netifaces(localinterfaces.py)', '302': '_load_ips_dumb(localinterfaces.py)', '634': 'test_load_ips(test_localinterfaces.py)', '303': '_load_ips_gethostbyname(localinterfaces.py)', '465': '_new_auth(session.py)', '560': 'test_find_connection_file(test_connect.py)', '572': 'initialize(test_connect.py)', '219': 'init_connection_file(consoleapp.py)', '209': 'load_connection_file(connect.py)', '210': 'load_connection_info(connect.py)', '195': '_ip_default(connect.py)', '315': 'localhost(localinterfaces.py)', '559': 'test_app_load_connection_file(test_connect.py)', '437': 'initialize(runapp.py)', '223': 'initialize(consoleapp.py)', '222': 'init_ssh(consoleapp.py)', '220': 'init_kernel_client(consoleapp.py)', '221': 'init_kernel_manager(consoleapp.py)', '255': 'NoSuchKernel(kernelspec.py)', '568': 'test_mixin_record_random_ports(test_connect.py)', '567': 'test_mixin_cleanup_random_ports(test_connect.py)', '621': 'test_find_all_specs(test_kernelspec.py)', '273': 'get_all_specs(kernelspec.py)', '272': 'find_kernel_specs(kernelspec.py)', '258': '_list_kernels_in(kernelspec.py)', '257': '_is_valid_kernel_name(kernelspec.py)', '256': '_is_kernel_dir(kernelspec.py)', '627': 'test_remove_kernel_spec(test_kernelspec.py)', '277': 'remove_kernel_spec(kernelspec.py)', '625': 'test_install_kernel_spec_prefix(test_kernelspec.py)', '626': 'test_kernel_spec_priority(test_kernelspec.py)', '624': 'test_install_kernel_spec(test_kernelspec.py)', '259': 'find_kernel_specs(kernelspec.py)', '622': 'test_find_kernel_specs(test_kernelspec.py)', '479': 'recv(session.py)', '474': 'deserialize(session.py)', '242': 'extract_dates(jsonutil.py)', '243': 'parse_date(jsonutil.py)', '240': '_ensure_tzinfo(jsonutil.py)', '484': 'unserialize(session.py)', '578': 'test_parse_ms_precision(test_jsonutil.py)', '679': '_datetime_test(test_session.py)', '688': 'test_datetimes(test_session.py)', '575': 'test_date_default(test_jsonutil.py)', '576': 'test_extract_date_from_naive(test_jsonutil.py)', '577': 'test_extract_dates(test_jsonutil.py)', '333': 'start_kernel(manager.py)', '326': '_launch_kernel(manager.py)', '623': 'test_get_kernel_spec(test_kernelspec.py)', '267': '_find_spec_directory(kernelspec.py)', '632': 'find_kernel_specs(test_kernelspec.py)', '274': 'get_kernel_spec(kernelspec.py)', '633': 'get_kernel_spec(test_kernelspec.py)', '549': 'setUp(test_client.py)', '269': '_get_kernel_spec_by_name(kernelspec.py)', '278': '__init__(kernelspec.py)', '260': 'get_kernel_spec(kernelspec.py)', '191': 'write_connection_file(connect.py)', '109': 'close(channels.py)', '83': 'close(channels.py)', '730': 'close(threaded.py)', '132': 'close(channels.py)', '718': 'close(threaded.py)', '570': 'test_write_connection_file(test_connect.py)', '686': 'test_clone(test_session.py)', '458': '_add_digest(session.py)', '460': '_cull_digest_history(session.py)', '558': 'DummyConsoleApp(test_connect.py)', '214': 'JupyterConsoleApp(consoleapp.py)', '441': 'Session(session.py)', '213': 'IPythonConsoleApp(consoleapp.py)', '434': 'RunApp(runapp.py)', '392': '__init__(multikernelmanager.py)', '190': 'tunnel_to_kernel(connect.py)', '503': 'select_random_ports(tunnel.py)', '701': 'test_random_ports(test_ssh.py)', '386': 'shutdown_all(multikernelmanager.py)', '383': 'finish_shutdown(multikernelmanager.py)', '410': 'get_kernel(multikernelmanager.py)', '394': '_check_kernel_id(multikernelmanager.py)', '388': 'signal_kernel(multikernelmanager.py)', '385': 'restart_kernel(multikernelmanager.py)', '384': 'interrupt_kernel(multikernelmanager.py)', '387': 'shutdown_kernel(multikernelmanager.py)', '421': 'shutdown_kernel(multikernelmanager.py)', '420': 'shutdown_all(multikernelmanager.py)', '104': 'wait_for_ready(client.py)', '103': 'is_alive(client.py)', '123': 'wait_for_ready(client.py)', '165': 'is_alive(client.py)', '641': '_run_lifecycle(test_multikernelmanager.py)', '135': 'run(channels.py)', '128': '_create_socket(channels.py)', '101': 'get_stdin_msg(client.py)', '85': 'get_msgs(channels.py)', '99': 'get_iopub_msg(client.py)', '111': 'get_msgs(channels.py)', '620': 'test_cant_install_kernel_spec(test_kernelspec.py)', '275': 'install_kernel_spec(kernelspec.py)', '268': '_get_destination_dir(kernelspec.py)', '261': 'install_kernel_spec(kernelspec.py)', '614': 'test_start_sequence_process_kernels(test_kernelmanager.py)', '610': '_run_signaltest_lifecycle(test_kernelmanager.py)', '615': 'execute(test_kernelmanager.py)', '609': '_prepare_kernel(test_kernelmanager.py)', '611': 'test_start_parallel_process_kernels(test_kernelmanager.py)', '613': 'test_start_sequence_kernels(test_kernelmanager.py)', '612': 'test_start_parallel_thread_kernels(test_kernelmanager.py)', '398': '_kernel_manager_class_changed(multikernelmanager.py)', '396': '_create_kernel_manager_factory(multikernelmanager.py)', '424': 'create_kernel_manager(multikernelmanager.py)', '397': '_find_available_port(multikernelmanager.py)', '395': '_context_default(multikernelmanager.py)', '399': '_kernel_manager_factory_default(multikernelmanager.py)', '485': '__init__(session.py)', '147': 'KernelClient(client.py)', '139': 'HBChannelABC(channelsabc.py)', '138': 'ChannelABC(channelsabc.py)', '657': '_run_lifecycle(test_multikernelmanager.py)', '148': 'validate_string_dict(client.py)', '423': 'start_kernel(multikernelmanager.py)', '415': 'pre_start_kernel(multikernelmanager.py)', '380': 'DuplicateKernelError(multikernelmanager.py)', '414': 'new_kernel_id(multikernelmanager.py)', '389': 'start_kernel(multikernelmanager.py)', '238': 'start(restarter.py)', '430': 'poll(restarter.py)', '433': 'stop(restarter.py)', '501': 'openssh_tunnel(tunnel.py)', '494': 'SSHException(tunnel.py)', '497': '_stop_tunnel(tunnel.py)', '475': 'feed_identities(session.py)', '106': 'ZMQSocketChannel(channels.py)', '226': 'as_zmqstream(manager.py)', '233': 'wrapped(manager.py)', '557': 'DummyConfigurable(test_connect.py)', '235': 'IOLoopKernelRestarter(restarter.py)', '426': 'KernelRestarter(restarter.py)', '234': 'AsyncIOLoopKernelRestarter(restarter.py)', '251': 'start(kernelapp.py)', '249': 'setup_signals(kernelapp.py)', '252': 'shutdown_handler(kernelapp.py)', '250': 'shutdown(kernelapp.py)', '248': 'log_connection_info(kernelapp.py)', '199': 'blocking_client(connect.py)', '725': 'stop_channels(threaded.py)', '676': '_bad_unpacker(test_session.py)', '517': 'adapt(test_adapter.py)', '562': 'test_find_connection_file_local(test_connect.py)', '189': 'find_connection_file(connect.py)', '493': 'SubHander(forward.py)', '490': 'Handler(forward.py)', '241': 'date_default(jsonutil.py)', '597': 'test_subclasses(test_kernelmanager.py)', '703': 'AsyncKernelManagerWithCleanup(utils.py)', '595': 'test_signal_kernel_subprocesses(test_kernelmanager.py)', '598': 'execute(test_kernelmanager.py)', '702': 'AsyncKernelManagerSubclass(utils.py)', '591': 'transport(test_kernelmanager.py)', '606': 'test_templated_kspec_env(test_kernelmanager.py)', '599': '_env_test_body(test_kernelmanager.py)', '607': 'execute(test_kernelmanager.py)', '604': 'test_signal_kernel_subprocesses(test_kernelmanager.py)', '608': 'execute(test_kernelmanager.py)', '586': 'env(test_kernelmanager.py)', '712': 'stop(utils.py)', '711': 'start(utils.py)', '705': 'test_env(utils.py)', '630': 'test_validate_kernel_name(test_kernelspec.py)', '506': 'SignalTestApp(signalkernel.py)', '507': 'SignalTestKernel(signalkernel.py)', '617': '_install_sample_kernel(test_kernelspec.py)', '640': '_run_cinfo(test_multikernelmanager.py)', '619': 'tearDown(test_kernelspec.py)', '656': '_run_cinfo(test_multikernelmanager.py)', '569': 'test_secure_write(test_connect.py)', '573': 'check_user_only_permissions(test_connect.py)', '574': 'fetch_win32_permissions(test_connect.py)', '563': 'test_find_connection_file_relative(test_connect.py)', '561': 'test_find_connection_file_abspath(test_connect.py)', '514': 'V5toV4TestCase(test_adapter.py)', '512': 'AdapterTest(test_adapter.py)', '513': 'V4toV5TestCase(test_adapter.py)', '515': 'test_code_to_line_no_code(test_adapter.py)', '51': 'code_to_line(adapter.py)', '157': 'get_iopub_msg(client.py)', '710': '__exit__(utils.py)', '709': '__enter__(utils.py)', '580': 'test_kernelapp_lifecycle(test_kernelapp.py)', '579': '_launch(test_kernelapp.py)', '473': 'clone(session.py)', '481': 'send_raw(session.py)', '675': '_bad_packer(test_session.py)', '445': 'msg_header(session.py)', '674': 'TestSession(test_session.py)', '673': 'SessionTestCase(test_session.py)', '556': 'test_shutdown(test_client.py)', '548': '_check_reply(test_client.py)', '550': 'test_comm_info(test_client.py)', '555': 'test_kernel_info(test_client.py)', '551': 'test_complete(test_client.py)', '554': 'test_inspect(test_client.py)', '553': 'test_history(test_client.py)', '150': '_handle_kernel_info_reply(client.py)', '125': 'HBChannel(channels.py)', '102': 'hb_channel(client.py)', '80': 'ZMQSocketChannel(channels.py)', '154': 'control_channel(client.py)', '723': 'ioloop(threaded.py)', '160': 'hb_channel(client.py)', '171': 'stdin_channel(client.py)', '164': 'iopub_channel(client.py)', '168': 'shell_channel(client.py)', '740': 'send_interrupt(win_interrupt.py)', '334': '__del__(manager.py)', '293': 'start(kernelspecapp.py)', '294': 'path_key(kernelspecapp.py)', '735': 'start(threaded.py)', '720': 'start(threaded.py)', '141': 'start(channelsabc.py)', '432': 'start(restarter.py)', '288': 'start(kernelspecapp.py)', '89': 'start(channels.py)', '115': 'start(channels.py)', '290': 'start(kernelspecapp.py)', '438': 'parse_command_line(runapp.py)', '218': 'build_kernel_argv(consoleapp.py)', '308': '_only_once(localinterfaces.py)', '317': 'wrapped(localinterfaces.py)', '47': 'V4toV5(adapter.py)', '46': 'Adapter(adapter.py)', '77': 'object_info_request(adapter.py)', '52': 'extract_oname_v4(adapter.py)', '70': 'complete_request(adapter.py)', '75': 'kernel_info_reply(adapter.py)', '49': '_version_str_to_list(adapter.py)', '48': 'V5toV4(adapter.py)', '53': '__call__(adapter.py)', '54': 'handle_reply_status_error(adapter.py)', '57': 'update_msg_type(adapter.py)', '56': 'update_metadata(adapter.py)', '55': 'update_header(adapter.py)', '247': 'initialize(kernelapp.py)', '246': '_record_started(kernelapp.py)', '585': 'config(test_kernelmanager.py)', '262': 'install_native_kernel_spec(kernelspec.py)', '276': 'install_native_kernel_spec(kernelspec.py)', '265': 'to_json(kernelspec.py)', '264': 'to_dict(kernelspec.py)', '449': 'test_msg2obj(session.py)', '453': '__init__(session.py)', '470': '_signature_scheme_changed(session.py)', '463': '_key_default(session.py)', '447': 'new_id_bytes(session.py)', '462': '_key_changed(session.py)', '443': 'default_secure(session.py)', '469': '_session_default(session.py)', '446': 'new_id(session.py)', '413': 'list_kernel_ids(multikernelmanager.py)', '721': 'stop(threaded.py)', '724': 'start_channels(threaded.py)', '722': '_check_kernel_info_reply(threaded.py)', '716': '__init__(threaded.py)', '416': 'remove_kernel(multikernelmanager.py)', '713': 'IOLoopThread(threaded.py)', '714': 'ThreadedKernelClient(threaded.py)', '715': 'ThreadedZMQSocketChannel(threaded.py)', '731': 'flush(threaded.py)', '727': '_flush(threaded.py)', '418': 'request_shutdown(multikernelmanager.py)', '402': 'cleanup_resources(multikernelmanager.py)', '408': 'finish_shutdown(multikernelmanager.py)', '393': '__len__(multikernelmanager.py)', '298': 'launch_kernel(launcher.py)', '739': 'create_interrupt_event(win_interrupt.py)', '741': 'SECURITY_ATTRIBUTES(win_interrupt.py)', '509': '__init__(signalkernel.py)', '127': '__init__(channels.py)', '126': 'InvalidPortNumber(channels.py)', '107': '__init__(channels.py)', '81': '__init__(channels.py)', '726': '__init__(threaded.py)', '737': 'setup_stream(threaded.py)', '728': '_handle_recv(threaded.py)', '729': 'call_handlers(threaded.py)', '136': 'stop(channels.py)', '133': 'is_beating(channels.py)', '145': 'time_to_dead(channelsabc.py)', '131': 'call_handlers(channels.py)', '130': '_poll(channels.py)', '435': 'handle_sigint(runapp.py)', '355': 'interrupt_kernel(manager.py)', '411': 'interrupt_kernel(multikernelmanager.py)', '372': 'interrupt_kernel(managerabc.py)', '505': 'tunnel_connection(tunnel.py)', '500': 'open_tunnel(tunnel.py)', '502': 'paramiko_tunnel(tunnel.py)', '499': '_try_passwordless_paramiko(tunnel.py)', '496': '_split_server(tunnel.py)', '495': '_paramiko_tunnel(tunnel.py)', '491': 'forward_tunnel(forward.py)', '436': 'init_kernel_info(runapp.py)', '137': 'unpause(channels.py)', '146': 'unpause(channelsabc.py)', '297': 'start(kernelspecapp.py)', '504': 'try_passwordless_ssh(tunnel.py)', '498': '_try_passwordless_openssh(tunnel.py)', '337': '_close_control_socket(manager.py)', '203': 'connect_control(connect.py)', '207': 'connect_stdin(connect.py)', '206': 'connect_shell(connect.py)', '205': 'connect_iopub(connect.py)', '204': 'connect_hb(connect.py)', '228': 'start_restarter(manager.py)', '231': 'start_restarter(manager.py)', '327': 'finish_shutdown(manager.py)', '324': '_async_wait(manager.py)', '329': 'is_alive(manager.py)', '325': '_kill_kernel(manager.py)', '332': 'signal_kernel(manager.py)'}}, {'key': 2793, 'parent': 2806, 'tfidf_word': 'found token msg unique default handle tracking shutdown execute send ', 'tfidf_method': 'test_object_info_reply test_object_info_request test_rename_type test_same_version test_input_request test_kernel_info_reply test_default_version handle test_tracking test_unique_msg_ids ', 'lda_word': ' msg,kernel,header,client,async,', 'lda_method': ' msg,msg_id,msg_header,asynckernelclient,blockingkernelclient,', 'lsi_word': ' msg,header,kernel,test,client,', 'lsi_method': ' msg,msg_header,msg_id,blockingkernelclient,asynckernelclient,', 'spm_method': '  &#187; execute(utils.py) &rarr; execute(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; execute(client.py) &rarr; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; AsyncKernelClient(client.py) &rarr; execute(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; BlockingKernelClient(client.py) &rarr; execute(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; kernel_info(client.py) &rarr; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; start_channels(client.py) &rarr; kernel_info(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; inspect(client.py) &rarr; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; comm_info(client.py) &rarr; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; shutdown(client.py) &rarr; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; complete(client.py) &rarr; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; history(client.py) &rarr; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; restart_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) &rarr; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; request_shutdown(manager.py) &rarr; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; start_new_async_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br>', 'text_summary': 'wrapper for doing common steps for validating an execution request. Pass a message to the ZMQ socket to send. Request kernel info. Request comm info. Send a shutdown request via control channel.', 'files_count': 7, 'files': ['utils.py', 'client.py', 'test_adapter.py', 'session.py', 'test_session.py', 'manager.py', 'forward.py'], 'execution_path_count': 183, 'function_id_to_name_file': {'704': 'execute(utils.py)', '155': 'execute(client.py)', '520': 'msg(test_adapter.py)', '534': 'msg(test_adapter.py)', '476': 'msg(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '90': 'AsyncKernelClient(client.py)', '116': 'BlockingKernelClient(client.py)', '167': 'kernel_info(client.py)', '170': 'start_channels(client.py)', '163': 'inspect(client.py)', '152': 'comm_info(client.py)', '169': 'shutdown(client.py)', '153': 'complete(client.py)', '161': 'history(client.py)', '526': 'test_input_request(test_adapter.py)', '523': 'test_display_data(test_adapter.py)', '527': 'test_kernel_info_reply(test_adapter.py)', '530': 'test_object_info_reply_not_found(test_adapter.py)', '529': 'test_object_info_reply(test_adapter.py)', '531': 'test_object_info_request(test_adapter.py)', '521': 'test_complete_reply(test_adapter.py)', '522': 'test_complete_request(test_adapter.py)', '524': 'test_execute_reply(test_adapter.py)', '525': 'test_execute_request(test_adapter.py)', '532': 'test_rename_type(test_adapter.py)', '528': 'test_no_adapt(test_adapter.py)', '533': 'test_same_version(test_adapter.py)', '695': 'test_send_raw(test_session.py)', '692': 'test_feed_identities(test_session.py)', '694': 'test_send(test_session.py)', '696': 'test_serialize(test_session.py)', '693': 'test_msg(test_session.py)', '328': 'interrupt_kernel(manager.py)', '166': 'is_complete(client.py)', '539': 'test_input_request(test_adapter.py)', '537': 'test_display_data(test_adapter.py)', '543': 'test_kernel_info_reply(test_adapter.py)', '540': 'test_inspect_reply(test_adapter.py)', '542': 'test_inspect_request_token(test_adapter.py)', '541': 'test_inspect_request(test_adapter.py)', '535': 'test_complete_reply(test_adapter.py)', '536': 'test_complete_request(test_adapter.py)', '538': 'test_execute_request(test_adapter.py)', '545': 'test_rename_type(test_adapter.py)', '546': 'test_same_version(test_adapter.py)', '544': 'test_no_adapt(test_adapter.py)', '330': 'restart_kernel(manager.py)', '331': 'shutdown_kernel(manager.py)', '362': 'request_shutdown(manager.py)', '480': 'send(session.py)', '322': 'start_new_async_kernel(manager.py)', '492': 'handle(forward.py)', '698': 'test_tracking(test_session.py)', '699': 'test_unique_msg_ids(test_session.py)', '516': 'test_default_version(test_adapter.py)'}}, {'key': 2805, 'parent': 2806, 'tfidf_word': 'manager native io digest flush permission restarter code tunnel ip ', 'tfidf_method': 'interrupt_kernel finish_shutdown cleanup_resources test_validate_kernel_name MyKSM find_kernel_specs __len__ signal_kernel interrupt_kernel msg_header ', 'lda_word': ' kernel,spec,get,manager,test,', 'lda_method': ' start,execute_interactive,load_ips,session,make_url,', 'lsi_word': ' kernel,msg,start,shutdown,spec,', 'lsi_method': ' msg,extract_header,start,msg_id,msg_header,', 'spm_method': '  &#187; do_execute(signalkernel.py) &rarr; poll(restarter.py) &rarr; restart_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; poll(restarter.py) &rarr; restart_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; restart_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) &rarr; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; request_shutdown(manager.py) &rarr; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; start(kernelspecapp.py) &rarr; start(runapp.py) &rarr; execute_interactive(client.py) &rarr; _stdin_hook_default(client.py) &rarr; input(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; start(runapp.py) &rarr; execute_interactive(client.py) &rarr; _stdin_hook_default(client.py) &rarr; input(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; execute_interactive(client.py) &rarr; _stdin_hook_default(client.py) &rarr; input(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; _stdin_hook_default(client.py) &rarr; input(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; input(client.py) &rarr; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; execute_interactive(client.py) &rarr; _stdin_hook_default(client.py) &rarr; input(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; _stdin_hook_default(client.py) &rarr; input(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; test_start_parallel_thread_kernels(test_multikernelmanager.py) &rarr; raw_tcp_lifecycle(test_multikernelmanager.py) &rarr; _get_tcp_km(test_multikernelmanager.py) &rarr; AsyncMultiKernelManager(multikernelmanager.py) &rarr; MultiKernelManager(multikernelmanager.py) &rarr; kernel_method(multikernelmanager.py) &rarr; wrapped(multikernelmanager.py) . <br> &#187; tcp_lifecycle_with_loop(test_multikernelmanager.py) &rarr; raw_tcp_lifecycle(test_multikernelmanager.py) &rarr; _get_tcp_km(test_multikernelmanager.py) &rarr; AsyncMultiKernelManager(multikernelmanager.py) &rarr; MultiKernelManager(multikernelmanager.py) &rarr; kernel_method(multikernelmanager.py) &rarr; wrapped(multikernelmanager.py) . <br> &#187; raw_tcp_lifecycle(test_multikernelmanager.py) &rarr; _get_tcp_km(test_multikernelmanager.py) &rarr; AsyncMultiKernelManager(multikernelmanager.py) &rarr; MultiKernelManager(multikernelmanager.py) &rarr; kernel_method(multikernelmanager.py) &rarr; wrapped(multikernelmanager.py) . <br> &#187; test_start_parallel_process_kernels(test_multikernelmanager.py) &rarr; raw_tcp_lifecycle(test_multikernelmanager.py) &rarr; _get_tcp_km(test_multikernelmanager.py) &rarr; AsyncMultiKernelManager(multikernelmanager.py) &rarr; MultiKernelManager(multikernelmanager.py) &rarr; kernel_method(multikernelmanager.py) &rarr; wrapped(multikernelmanager.py) . <br> &#187; test_start_parallel_thread_kernels(test_multikernelmanager.py) &rarr; test_tcp_lifecycle(test_multikernelmanager.py) &rarr; _get_tcp_km(test_multikernelmanager.py) &rarr; MultiKernelManager(multikernelmanager.py) &rarr; kernel_method(multikernelmanager.py) &rarr; wrapped(multikernelmanager.py) . <br> &#187; tcp_lifecycle_with_loop(test_multikernelmanager.py) &rarr; test_tcp_lifecycle(test_multikernelmanager.py) &rarr; _get_tcp_km(test_multikernelmanager.py) &rarr; MultiKernelManager(multikernelmanager.py) &rarr; kernel_method(multikernelmanager.py) &rarr; wrapped(multikernelmanager.py) . <br> &#187; test_start_parallel_process_kernels(test_multikernelmanager.py) &rarr; test_tcp_lifecycle(test_multikernelmanager.py) &rarr; _get_tcp_km(test_multikernelmanager.py) &rarr; MultiKernelManager(multikernelmanager.py) &rarr; kernel_method(multikernelmanager.py) &rarr; wrapped(multikernelmanager.py) . <br> &#187; start_new_async_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; finish_shutdown(manager.py) &rarr; _async_wait(manager.py) &rarr; is_alive(manager.py) &rarr; has_kernel(manager.py) &rarr; _launch_kernel(manager.py) . <br> &#187; run_kernel(manager.py) &rarr; start_new_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; start_new_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; initialize(test_connect.py) &rarr; init_connection_file(consoleapp.py) &rarr; load_connection_file(connect.py) &rarr; load_connection_info(connect.py) &rarr; _ip_default(connect.py) &rarr; localhost(localinterfaces.py) . <br> &#187; initialize(runapp.py) &rarr; handle_sigint(runapp.py) &rarr; interrupt_kernel(manager.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; restart_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; finish_shutdown(manager.py) &rarr; _async_wait(manager.py) &rarr; is_alive(manager.py) &rarr; has_kernel(manager.py) &rarr; _launch_kernel(manager.py) . <br> &#187; tunnel_to_kernel(connect.py) &rarr; try_passwordless_ssh(tunnel.py) &rarr; _try_passwordless_paramiko(tunnel.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; handle_sigint(runapp.py) &rarr; interrupt_kernel(manager.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; tunnel_connection(tunnel.py) &rarr; open_tunnel(tunnel.py) &rarr; paramiko_tunnel(tunnel.py) &rarr; _try_passwordless_paramiko(tunnel.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; open_tunnel(tunnel.py) &rarr; paramiko_tunnel(tunnel.py) &rarr; _try_passwordless_paramiko(tunnel.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; paramiko_tunnel(tunnel.py) &rarr; _try_passwordless_paramiko(tunnel.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; _try_passwordless_paramiko(tunnel.py) &rarr; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; init_kernel_info(runapp.py) &rarr; kernel_info(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; start(kernelspecapp.py) &rarr; input(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; try_passwordless_ssh(tunnel.py) &rarr; _try_passwordless_paramiko(tunnel.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; shutdown_kernel(manager.py) &rarr; finish_shutdown(manager.py) &rarr; _kill_kernel(manager.py) &rarr; _async_wait(manager.py) &rarr; is_alive(manager.py) &rarr; has_kernel(manager.py) &rarr; _launch_kernel(manager.py) . <br> &#187; finish_shutdown(manager.py) &rarr; _kill_kernel(manager.py) &rarr; _async_wait(manager.py) &rarr; is_alive(manager.py) &rarr; has_kernel(manager.py) &rarr; _launch_kernel(manager.py) . <br>', 'text_summary': "Subclasses may override  Prepares a kernel for startup in a separate process. return ip for localhost (almost always 127.0.0.1) test `ipython console --existing` loads a connection file. Create a client configured to connect to our kernel. return ip for localhost (almost always 127.0.0.1)   Ensure that a sequence of kernel startups doesn't break anything. return zmq Socket connected to the IOPub channel. Pass a message to the ZMQ socket to send. return ip for localhost (almost always 127.0.0.1)   set up ssh tunnels, if needed. Start a new kernel, and return its Manager and Client. Send a string of raw input to the kernel. Return the connection info as a dict. Ensure that a sequence of kernel startups doesn't break anything. load ip addresses with socket.gethostbyname_ex uniq_stable(elems) -> list. return ip for localhost (almost always 127.0.0.1) test load_connection_file() after. Output hook when running inside an IPython kernel. test `ipython console --existing` loads a connection file. Get entries from the kernel's history list. find a connection file, and return its absolute path. return ip for localhost (almost always 127.0.0.1)      find a connection file, and return its absolute path. tunnel connections to a kernel via ssh. For tests, create a file to indicate that we've started. Connect a socket to an address via an ssh tunnel. Returns a dict mapping kernel names to kernelspecs. handle kernel info reply. Given a message or header, return the header. Get the hb channel object for this kernel. Returns the id to associate with the kernel for this request. {connection_file})   Prepares a kernel for startup in a separate process. {connection_file})  Restarts a kernel with the arguments that were used to launch it. Make a blocking client connected to my kernel. populate local and public IPs from flat list of all IPs. return the IP addresses that point to this machine. return ip for localhost (almost always 127.0.0.1)       return ip for localhost (almost always 127.0.0.1)   find the connection file, and load the info if found. Load connection info from JSON dict in self.connection_file. return ip for localhost (almost always 127.0.0.1)  Write connection info to JSON dict in self.connection_file. Return the number of running kernels. Verify realpath is used when formatting connection file. return zmq Socket connected to the Shell channel. Receive and return the reply for a given request. Request kernel info. {connection_file})  Context manager to create a kernel in a subprocess. Create an ssh tunnel using command-line ssh that connects port lport. populate local and public IPs from flat list of all IPs. return the IP addresses for this machine that are visible to other machines. This is run in the ioloop thread when the kernel info reply is received. return zmq Socket connected to the StdIn channel. return zmq Socket connected to the Heartbeat channel. return ip for localhost (almost always 127.0.0.1)   find the connection file, and load the info if found. find the connection file, and load the info if found. Return a mapping of kernel names to resource directories from dir. populate local and public IPs from flat list of all IPs. decorator to ensure load_ips has been run before f. Returns a :class:`KernelSpec` instance for a given kernel_name. Send a shutdown request via control channel. Context manager to create a kernel in a subprocess. return zmq Socket connected to the Control channel. test load_connection_file() after. Write connection info to JSON dict in self.connection_file. Create a zmq Socket and connect it to the kernel. Forgets randomly assigned port numbers and cleans up the connection file.", 'files_count': 36, 'files': ['client.py', 'test_adapter.py', 'session.py', 'utils.py', 'test_session.py', 'manager.py', 'forward.py', 'signalkernel.py', 'restarter.py', 'adapter.py', 'connect.py', 'threaded.py', 'channels.py', 'managerabc.py', 'multikernelmanager.py', 'channelsabc.py', 'kernelspec.py', 'localinterfaces.py', 'kernelspecapp.py', 'runapp.py', 'jsonutil.py', 'consoleapp.py', 'test_connect.py', 'test_multikernelmanager.py', 'test_manager.py', 'test_kernelspec.py', 'kernelapp.py', 'test_localinterfaces.py', 'test_jsonutil.py', 'test_client.py', 'tunnel.py', 'test_ssh.py', 'test_kernelmanager.py', 'test_kernelapp.py', 'win_interrupt.py', 'launcher.py'], 'execution_path_count': 1221, 'function_id_to_name_file': {'116': 'BlockingKernelClient(client.py)', '167': 'kernel_info(client.py)', '520': 'msg(test_adapter.py)', '534': 'msg(test_adapter.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '170': 'start_channels(client.py)', '90': 'AsyncKernelClient(client.py)', '704': 'execute(utils.py)', '155': 'execute(client.py)', '163': 'inspect(client.py)', '152': 'comm_info(client.py)', '169': 'shutdown(client.py)', '153': 'complete(client.py)', '161': 'history(client.py)', '526': 'test_input_request(test_adapter.py)', '523': 'test_display_data(test_adapter.py)', '527': 'test_kernel_info_reply(test_adapter.py)', '530': 'test_object_info_reply_not_found(test_adapter.py)', '529': 'test_object_info_reply(test_adapter.py)', '531': 'test_object_info_request(test_adapter.py)', '521': 'test_complete_reply(test_adapter.py)', '522': 'test_complete_request(test_adapter.py)', '524': 'test_execute_reply(test_adapter.py)', '525': 'test_execute_request(test_adapter.py)', '532': 'test_rename_type(test_adapter.py)', '533': 'test_same_version(test_adapter.py)', '528': 'test_no_adapt(test_adapter.py)', '695': 'test_send_raw(test_session.py)', '694': 'test_send(test_session.py)', '692': 'test_feed_identities(test_session.py)', '696': 'test_serialize(test_session.py)', '693': 'test_msg(test_session.py)', '328': 'interrupt_kernel(manager.py)', '166': 'is_complete(client.py)', '536': 'test_complete_request(test_adapter.py)', '538': 'test_execute_request(test_adapter.py)', '545': 'test_rename_type(test_adapter.py)', '544': 'test_no_adapt(test_adapter.py)', '546': 'test_same_version(test_adapter.py)', '539': 'test_input_request(test_adapter.py)', '537': 'test_display_data(test_adapter.py)', '543': 'test_kernel_info_reply(test_adapter.py)', '542': 'test_inspect_request_token(test_adapter.py)', '540': 'test_inspect_reply(test_adapter.py)', '535': 'test_complete_reply(test_adapter.py)', '541': 'test_inspect_request(test_adapter.py)', '698': 'test_tracking(test_session.py)', '480': 'send(session.py)', '492': 'handle(forward.py)', '516': 'test_default_version(test_adapter.py)', '510': 'do_execute(signalkernel.py)', '236': 'poll(restarter.py)', '363': 'restart_kernel(manager.py)', '364': 'shutdown_kernel(manager.py)', '362': 'request_shutdown(manager.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '50': 'adapt(adapter.py)', '450': 'utcnow(session.py)', '482': 'serialize(session.py)', '483': 'sign(session.py)', '440': 'Message(session.py)', '338': '_connect_control_socket(manager.py)', '192': '_create_connected_socket(connect.py)', '196': '_make_url(connect.py)', '734': 'send(threaded.py)', '738': 'thread_send(threaded.py)', '88': 'send(channels.py)', '114': 'send(channels.py)', '346': '_kill_kernel(manager.py)', '365': 'signal_kernel(manager.py)', '354': 'has_kernel(manager.py)', '347': '_launch_kernel(manager.py)', '352': 'finish_shutdown(manager.py)', '357': 'is_alive(manager.py)', '350': 'cleanup_resources(manager.py)', '201': 'cleanup_ipc_files(connect.py)', '211': 'ports(connect.py)', '349': 'cleanup(manager.py)', '368': 'stop_restarter(manager.py)', '200': 'cleanup_connection_file(connect.py)', '373': 'is_alive(managerabc.py)', '428': '_fire_callbacks(restarter.py)', '412': 'is_alive(multikernelmanager.py)', '140': 'is_alive(channelsabc.py)', '419': 'restart_kernel(multikernelmanager.py)', '375': 'restart_kernel(managerabc.py)', '732': 'is_alive(threaded.py)', '239': 'stop(restarter.py)', '86': 'is_alive(channels.py)', '112': 'is_alive(channels.py)', '366': 'start_kernel(manager.py)', '360': 'pre_start_kernel(manager.py)', '212': 'write_connection_file(connect.py)', '197': '_record_random_port_names(connect.py)', '353': 'format_kernel_cmd(manager.py)', '369': 'from_ns(manager.py)', '358': 'kernel_spec(manager.py)', '253': 'KernelSpec(kernelspec.py)', '341': '_get_env_substitutions(manager.py)', '314': 'local_ips(localinterfaces.py)', '312': 'is_local_ip(localinterfaces.py)', '202': 'cleanup_random_ports(connect.py)', '359': 'post_start_kernel(manager.py)', '367': 'start_restarter(manager.py)', '291': 'start(kernelspecapp.py)', '439': 'start(runapp.py)', '122': 'execute_interactive(client.py)', '121': '_stdin_hook_default(client.py)', '162': 'input(client.py)', '113': 'msg_ready(channels.py)', '87': 'msg_ready(channels.py)', '120': '_recv_reply(client.py)', '156': 'get_control_msg(client.py)', '158': 'get_shell_msg(client.py)', '110': 'get_msg(channels.py)', '108': '_recv(channels.py)', '84': 'get_msg(channels.py)', '82': '_recv(channels.py)', '119': '_output_hook_kernel(client.py)', '118': '_output_hook_default(client.py)', '117': 'reqrep(client.py)', '124': 'wrapped(client.py)', '97': 'execute_interactive(client.py)', '96': '_stdin_hook_default(client.py)', '95': '_recv_reply(client.py)', '100': 'get_shell_msg(client.py)', '98': 'get_control_msg(client.py)', '91': 'reqrep(client.py)', '105': 'wrapped(client.py)', '94': '_output_hook_kernel(client.py)', '93': '_output_hook_default(client.py)', '683': 'test_bad_roundtrip(test_session.py)', '457': '__init__(session.py)', '459': '_check_packers(session.py)', '244': 'squash_dates(jsonutil.py)', '685': 'test_bad_unpacker(test_session.py)', '682': 'test_bad_packer(test_session.py)', '684': 'test_bad_unpack(test_session.py)', '681': 'test_bad_pack(test_session.py)', '687': 'test_cull_digest_history(test_session.py)', '700': 'test_zero_digest_history(test_session.py)', '697': 'test_session_id(test_session.py)', '678': 'setUp(test_session.py)', '680': 'test_args(test_session.py)', '215': '__init__(consoleapp.py)', '198': '_session_default(connect.py)', '565': 'test_load_connection_file_session_with_kn(test_connect.py)', '564': 'test_load_connection_file_session(test_connect.py)', '519': 'setUp(test_adapter.py)', '690': 'test_datetimes_pickle(test_session.py)', '689': 'test_datetimes_msgpack(test_session.py)', '649': 'test_start_sequence_ipc_kernels(test_multikernelmanager.py)', '638': '_get_ipc_km(test_multikernelmanager.py)', '379': 'AsyncMultiKernelManager(multikernelmanager.py)', '381': 'MultiKernelManager(multikernelmanager.py)', '382': 'kernel_method(multikernelmanager.py)', '425': 'wrapped(multikernelmanager.py)', '645': 'test_ipc_lifecycle(test_multikernelmanager.py)', '644': 'test_ipc_cinfo(test_multikernelmanager.py)', '650': 'test_start_sequence_tcp_kernels(test_multikernelmanager.py)', '639': '_get_tcp_km(test_multikernelmanager.py)', '646': 'test_shutdown_all(test_multikernelmanager.py)', '651': 'test_tcp_cinfo(test_multikernelmanager.py)', '648': 'test_start_parallel_thread_kernels(test_multikernelmanager.py)', '643': 'tcp_lifecycle_with_loop(test_multikernelmanager.py)', '642': 'raw_tcp_lifecycle(test_multikernelmanager.py)', '647': 'test_start_parallel_process_kernels(test_multikernelmanager.py)', '652': 'test_tcp_lifecycle(test_multikernelmanager.py)', '653': 'test_tcp_lifecycle_with_kernel_id(test_multikernelmanager.py)', '664': 'test_start_sequence_ipc_kernels(test_multikernelmanager.py)', '654': '_get_ipc_km(test_multikernelmanager.py)', '660': 'test_ipc_lifecycle(test_multikernelmanager.py)', '659': 'test_ipc_cinfo(test_multikernelmanager.py)', '665': 'test_start_sequence_tcp_kernels(test_multikernelmanager.py)', '655': '_get_tcp_km(test_multikernelmanager.py)', '666': 'test_tcp_cinfo(test_multikernelmanager.py)', '668': 'test_tcp_lifecycle_with_kernel_id(test_multikernelmanager.py)', '661': 'test_shutdown_all(test_multikernelmanager.py)', '663': 'test_start_parallel_thread_kernels(test_multikernelmanager.py)', '658': 'tcp_lifecycle_with_loop(test_multikernelmanager.py)', '667': 'test_tcp_lifecycle(test_multikernelmanager.py)', '662': 'test_start_parallel_process_kernels(test_multikernelmanager.py)', '322': 'start_new_async_kernel(manager.py)', '319': 'AsyncKernelManager(manager.py)', '320': 'KernelManager(manager.py)', '254': 'KernelSpecManager(kernelspec.py)', '224': 'AsyncIOLoopKernelManager(manager.py)', '225': 'IOLoopKernelManager(manager.py)', '635': 'test_connection_file_real_path(test_manager.py)', '629': 'test_subclass(test_kernelspec.py)', '618': 'setUp(test_kernelspec.py)', '289': '_kernel_spec_manager_default(kernelspecapp.py)', '345': '_kernel_spec_manager_default(manager.py)', '295': '_kernel_spec_manager_default(kernelspecapp.py)', '286': '_kernel_spec_manager_default(kernelspecapp.py)', '245': 'KernelApp(kernelapp.py)', '292': '_kernel_spec_manager_default(kernelspecapp.py)', '631': 'MyKSM(test_kernelspec.py)', '282': 'KernelSpecApp(kernelspecapp.py)', '284': 'RemoveKernelSpec(kernelspecapp.py)', '283': 'ListKernelSpecs(kernelspecapp.py)', '280': 'InstallKernelSpec(kernelspecapp.py)', '281': 'InstallNativeKernelSpec(kernelspecapp.py)', '321': 'run_kernel(manager.py)', '323': 'start_new_kernel(manager.py)', '188': 'ConnectionFileMixin(connect.py)', '351': 'client(manager.py)', '208': 'get_connection_info(connect.py)', '310': '_requires_ips(localinterfaces.py)', '318': 'ips_loaded(localinterfaces.py)', '301': '_load_ips(localinterfaces.py)', '306': '_load_ips_ipconfig(localinterfaces.py)', '300': '_get_output(localinterfaces.py)', '309': '_populate_from_list(localinterfaces.py)', '299': 'NoIPAddresses(localinterfaces.py)', '316': 'public_ips(localinterfaces.py)', '311': '_uniq_stable(localinterfaces.py)', '304': '_load_ips_ifconfig(localinterfaces.py)', '305': '_load_ips_ip(localinterfaces.py)', '307': '_load_ips_netifaces(localinterfaces.py)', '302': '_load_ips_dumb(localinterfaces.py)', '634': 'test_load_ips(test_localinterfaces.py)', '303': '_load_ips_gethostbyname(localinterfaces.py)', '465': '_new_auth(session.py)', '560': 'test_find_connection_file(test_connect.py)', '572': 'initialize(test_connect.py)', '219': 'init_connection_file(consoleapp.py)', '209': 'load_connection_file(connect.py)', '210': 'load_connection_info(connect.py)', '195': '_ip_default(connect.py)', '315': 'localhost(localinterfaces.py)', '559': 'test_app_load_connection_file(test_connect.py)', '437': 'initialize(runapp.py)', '223': 'initialize(consoleapp.py)', '222': 'init_ssh(consoleapp.py)', '220': 'init_kernel_client(consoleapp.py)', '221': 'init_kernel_manager(consoleapp.py)', '255': 'NoSuchKernel(kernelspec.py)', '568': 'test_mixin_record_random_ports(test_connect.py)', '567': 'test_mixin_cleanup_random_ports(test_connect.py)', '621': 'test_find_all_specs(test_kernelspec.py)', '273': 'get_all_specs(kernelspec.py)', '272': 'find_kernel_specs(kernelspec.py)', '258': '_list_kernels_in(kernelspec.py)', '257': '_is_valid_kernel_name(kernelspec.py)', '256': '_is_kernel_dir(kernelspec.py)', '627': 'test_remove_kernel_spec(test_kernelspec.py)', '277': 'remove_kernel_spec(kernelspec.py)', '625': 'test_install_kernel_spec_prefix(test_kernelspec.py)', '626': 'test_kernel_spec_priority(test_kernelspec.py)', '624': 'test_install_kernel_spec(test_kernelspec.py)', '259': 'find_kernel_specs(kernelspec.py)', '622': 'test_find_kernel_specs(test_kernelspec.py)', '479': 'recv(session.py)', '474': 'deserialize(session.py)', '242': 'extract_dates(jsonutil.py)', '243': 'parse_date(jsonutil.py)', '240': '_ensure_tzinfo(jsonutil.py)', '484': 'unserialize(session.py)', '578': 'test_parse_ms_precision(test_jsonutil.py)', '679': '_datetime_test(test_session.py)', '688': 'test_datetimes(test_session.py)', '575': 'test_date_default(test_jsonutil.py)', '576': 'test_extract_date_from_naive(test_jsonutil.py)', '577': 'test_extract_dates(test_jsonutil.py)', '330': 'restart_kernel(manager.py)', '333': 'start_kernel(manager.py)', '326': '_launch_kernel(manager.py)', '623': 'test_get_kernel_spec(test_kernelspec.py)', '267': '_find_spec_directory(kernelspec.py)', '632': 'find_kernel_specs(test_kernelspec.py)', '274': 'get_kernel_spec(kernelspec.py)', '633': 'get_kernel_spec(test_kernelspec.py)', '549': 'setUp(test_client.py)', '269': '_get_kernel_spec_by_name(kernelspec.py)', '278': '__init__(kernelspec.py)', '260': 'get_kernel_spec(kernelspec.py)', '191': 'write_connection_file(connect.py)', '109': 'close(channels.py)', '83': 'close(channels.py)', '730': 'close(threaded.py)', '132': 'close(channels.py)', '718': 'close(threaded.py)', '570': 'test_write_connection_file(test_connect.py)', '686': 'test_clone(test_session.py)', '458': '_add_digest(session.py)', '460': '_cull_digest_history(session.py)', '558': 'DummyConsoleApp(test_connect.py)', '214': 'JupyterConsoleApp(consoleapp.py)', '441': 'Session(session.py)', '213': 'IPythonConsoleApp(consoleapp.py)', '434': 'RunApp(runapp.py)', '392': '__init__(multikernelmanager.py)', '190': 'tunnel_to_kernel(connect.py)', '503': 'select_random_ports(tunnel.py)', '701': 'test_random_ports(test_ssh.py)', '386': 'shutdown_all(multikernelmanager.py)', '383': 'finish_shutdown(multikernelmanager.py)', '410': 'get_kernel(multikernelmanager.py)', '394': '_check_kernel_id(multikernelmanager.py)', '388': 'signal_kernel(multikernelmanager.py)', '385': 'restart_kernel(multikernelmanager.py)', '384': 'interrupt_kernel(multikernelmanager.py)', '387': 'shutdown_kernel(multikernelmanager.py)', '421': 'shutdown_kernel(multikernelmanager.py)', '420': 'shutdown_all(multikernelmanager.py)', '104': 'wait_for_ready(client.py)', '103': 'is_alive(client.py)', '123': 'wait_for_ready(client.py)', '165': 'is_alive(client.py)', '641': '_run_lifecycle(test_multikernelmanager.py)', '135': 'run(channels.py)', '128': '_create_socket(channels.py)', '101': 'get_stdin_msg(client.py)', '85': 'get_msgs(channels.py)', '99': 'get_iopub_msg(client.py)', '111': 'get_msgs(channels.py)', '620': 'test_cant_install_kernel_spec(test_kernelspec.py)', '275': 'install_kernel_spec(kernelspec.py)', '268': '_get_destination_dir(kernelspec.py)', '261': 'install_kernel_spec(kernelspec.py)', '614': 'test_start_sequence_process_kernels(test_kernelmanager.py)', '610': '_run_signaltest_lifecycle(test_kernelmanager.py)', '615': 'execute(test_kernelmanager.py)', '609': '_prepare_kernel(test_kernelmanager.py)', '611': 'test_start_parallel_process_kernels(test_kernelmanager.py)', '613': 'test_start_sequence_kernels(test_kernelmanager.py)', '612': 'test_start_parallel_thread_kernels(test_kernelmanager.py)', '398': '_kernel_manager_class_changed(multikernelmanager.py)', '396': '_create_kernel_manager_factory(multikernelmanager.py)', '424': 'create_kernel_manager(multikernelmanager.py)', '397': '_find_available_port(multikernelmanager.py)', '395': '_context_default(multikernelmanager.py)', '399': '_kernel_manager_factory_default(multikernelmanager.py)', '485': '__init__(session.py)', '147': 'KernelClient(client.py)', '139': 'HBChannelABC(channelsabc.py)', '138': 'ChannelABC(channelsabc.py)', '657': '_run_lifecycle(test_multikernelmanager.py)', '148': 'validate_string_dict(client.py)', '423': 'start_kernel(multikernelmanager.py)', '415': 'pre_start_kernel(multikernelmanager.py)', '380': 'DuplicateKernelError(multikernelmanager.py)', '414': 'new_kernel_id(multikernelmanager.py)', '389': 'start_kernel(multikernelmanager.py)', '238': 'start(restarter.py)', '430': 'poll(restarter.py)', '433': 'stop(restarter.py)', '501': 'openssh_tunnel(tunnel.py)', '494': 'SSHException(tunnel.py)', '497': '_stop_tunnel(tunnel.py)', '475': 'feed_identities(session.py)', '106': 'ZMQSocketChannel(channels.py)', '226': 'as_zmqstream(manager.py)', '233': 'wrapped(manager.py)', '557': 'DummyConfigurable(test_connect.py)', '235': 'IOLoopKernelRestarter(restarter.py)', '426': 'KernelRestarter(restarter.py)', '234': 'AsyncIOLoopKernelRestarter(restarter.py)', '251': 'start(kernelapp.py)', '249': 'setup_signals(kernelapp.py)', '252': 'shutdown_handler(kernelapp.py)', '250': 'shutdown(kernelapp.py)', '248': 'log_connection_info(kernelapp.py)', '199': 'blocking_client(connect.py)', '725': 'stop_channels(threaded.py)', '676': '_bad_unpacker(test_session.py)', '517': 'adapt(test_adapter.py)', '562': 'test_find_connection_file_local(test_connect.py)', '189': 'find_connection_file(connect.py)', '493': 'SubHander(forward.py)', '490': 'Handler(forward.py)', '241': 'date_default(jsonutil.py)', '597': 'test_subclasses(test_kernelmanager.py)', '703': 'AsyncKernelManagerWithCleanup(utils.py)', '595': 'test_signal_kernel_subprocesses(test_kernelmanager.py)', '598': 'execute(test_kernelmanager.py)', '702': 'AsyncKernelManagerSubclass(utils.py)', '591': 'transport(test_kernelmanager.py)', '606': 'test_templated_kspec_env(test_kernelmanager.py)', '599': '_env_test_body(test_kernelmanager.py)', '607': 'execute(test_kernelmanager.py)', '604': 'test_signal_kernel_subprocesses(test_kernelmanager.py)', '608': 'execute(test_kernelmanager.py)', '586': 'env(test_kernelmanager.py)', '712': 'stop(utils.py)', '711': 'start(utils.py)', '705': 'test_env(utils.py)', '630': 'test_validate_kernel_name(test_kernelspec.py)', '506': 'SignalTestApp(signalkernel.py)', '507': 'SignalTestKernel(signalkernel.py)', '617': '_install_sample_kernel(test_kernelspec.py)', '640': '_run_cinfo(test_multikernelmanager.py)', '619': 'tearDown(test_kernelspec.py)', '656': '_run_cinfo(test_multikernelmanager.py)', '569': 'test_secure_write(test_connect.py)', '573': 'check_user_only_permissions(test_connect.py)', '574': 'fetch_win32_permissions(test_connect.py)', '563': 'test_find_connection_file_relative(test_connect.py)', '561': 'test_find_connection_file_abspath(test_connect.py)', '514': 'V5toV4TestCase(test_adapter.py)', '512': 'AdapterTest(test_adapter.py)', '513': 'V4toV5TestCase(test_adapter.py)', '515': 'test_code_to_line_no_code(test_adapter.py)', '51': 'code_to_line(adapter.py)', '157': 'get_iopub_msg(client.py)', '710': '__exit__(utils.py)', '709': '__enter__(utils.py)', '580': 'test_kernelapp_lifecycle(test_kernelapp.py)', '579': '_launch(test_kernelapp.py)', '473': 'clone(session.py)', '481': 'send_raw(session.py)', '675': '_bad_packer(test_session.py)', '699': 'test_unique_msg_ids(test_session.py)', '445': 'msg_header(session.py)', '674': 'TestSession(test_session.py)', '673': 'SessionTestCase(test_session.py)', '556': 'test_shutdown(test_client.py)', '548': '_check_reply(test_client.py)', '550': 'test_comm_info(test_client.py)', '555': 'test_kernel_info(test_client.py)', '551': 'test_complete(test_client.py)', '554': 'test_inspect(test_client.py)', '553': 'test_history(test_client.py)', '150': '_handle_kernel_info_reply(client.py)', '125': 'HBChannel(channels.py)', '102': 'hb_channel(client.py)', '80': 'ZMQSocketChannel(channels.py)', '154': 'control_channel(client.py)', '723': 'ioloop(threaded.py)', '160': 'hb_channel(client.py)', '171': 'stdin_channel(client.py)', '164': 'iopub_channel(client.py)', '168': 'shell_channel(client.py)', '740': 'send_interrupt(win_interrupt.py)', '334': '__del__(manager.py)', '293': 'start(kernelspecapp.py)', '294': 'path_key(kernelspecapp.py)', '735': 'start(threaded.py)', '720': 'start(threaded.py)', '141': 'start(channelsabc.py)', '432': 'start(restarter.py)', '288': 'start(kernelspecapp.py)', '89': 'start(channels.py)', '115': 'start(channels.py)', '290': 'start(kernelspecapp.py)', '438': 'parse_command_line(runapp.py)', '218': 'build_kernel_argv(consoleapp.py)', '308': '_only_once(localinterfaces.py)', '317': 'wrapped(localinterfaces.py)', '47': 'V4toV5(adapter.py)', '46': 'Adapter(adapter.py)', '77': 'object_info_request(adapter.py)', '52': 'extract_oname_v4(adapter.py)', '70': 'complete_request(adapter.py)', '75': 'kernel_info_reply(adapter.py)', '49': '_version_str_to_list(adapter.py)', '48': 'V5toV4(adapter.py)', '53': '__call__(adapter.py)', '54': 'handle_reply_status_error(adapter.py)', '57': 'update_msg_type(adapter.py)', '56': 'update_metadata(adapter.py)', '55': 'update_header(adapter.py)', '247': 'initialize(kernelapp.py)', '246': '_record_started(kernelapp.py)', '585': 'config(test_kernelmanager.py)', '262': 'install_native_kernel_spec(kernelspec.py)', '276': 'install_native_kernel_spec(kernelspec.py)', '265': 'to_json(kernelspec.py)', '264': 'to_dict(kernelspec.py)', '449': 'test_msg2obj(session.py)', '453': '__init__(session.py)', '470': '_signature_scheme_changed(session.py)', '463': '_key_default(session.py)', '447': 'new_id_bytes(session.py)', '462': '_key_changed(session.py)', '443': 'default_secure(session.py)', '469': '_session_default(session.py)', '446': 'new_id(session.py)', '413': 'list_kernel_ids(multikernelmanager.py)', '721': 'stop(threaded.py)', '724': 'start_channels(threaded.py)', '722': '_check_kernel_info_reply(threaded.py)', '716': '__init__(threaded.py)', '416': 'remove_kernel(multikernelmanager.py)', '713': 'IOLoopThread(threaded.py)', '714': 'ThreadedKernelClient(threaded.py)', '715': 'ThreadedZMQSocketChannel(threaded.py)', '731': 'flush(threaded.py)', '727': '_flush(threaded.py)', '418': 'request_shutdown(multikernelmanager.py)', '402': 'cleanup_resources(multikernelmanager.py)', '408': 'finish_shutdown(multikernelmanager.py)', '393': '__len__(multikernelmanager.py)', '298': 'launch_kernel(launcher.py)', '739': 'create_interrupt_event(win_interrupt.py)', '741': 'SECURITY_ATTRIBUTES(win_interrupt.py)', '509': '__init__(signalkernel.py)', '127': '__init__(channels.py)', '126': 'InvalidPortNumber(channels.py)', '107': '__init__(channels.py)', '81': '__init__(channels.py)', '726': '__init__(threaded.py)', '737': 'setup_stream(threaded.py)', '728': '_handle_recv(threaded.py)', '729': 'call_handlers(threaded.py)', '136': 'stop(channels.py)', '133': 'is_beating(channels.py)', '145': 'time_to_dead(channelsabc.py)', '131': 'call_handlers(channels.py)', '130': '_poll(channels.py)', '435': 'handle_sigint(runapp.py)', '355': 'interrupt_kernel(manager.py)', '411': 'interrupt_kernel(multikernelmanager.py)', '372': 'interrupt_kernel(managerabc.py)', '505': 'tunnel_connection(tunnel.py)', '500': 'open_tunnel(tunnel.py)', '502': 'paramiko_tunnel(tunnel.py)', '499': '_try_passwordless_paramiko(tunnel.py)', '496': '_split_server(tunnel.py)', '495': '_paramiko_tunnel(tunnel.py)', '491': 'forward_tunnel(forward.py)', '436': 'init_kernel_info(runapp.py)', '137': 'unpause(channels.py)', '146': 'unpause(channelsabc.py)', '297': 'start(kernelspecapp.py)', '504': 'try_passwordless_ssh(tunnel.py)', '498': '_try_passwordless_openssh(tunnel.py)', '331': 'shutdown_kernel(manager.py)', '337': '_close_control_socket(manager.py)', '203': 'connect_control(connect.py)', '207': 'connect_stdin(connect.py)', '206': 'connect_shell(connect.py)', '205': 'connect_iopub(connect.py)', '204': 'connect_hb(connect.py)', '228': 'start_restarter(manager.py)', '231': 'start_restarter(manager.py)', '327': 'finish_shutdown(manager.py)', '324': '_async_wait(manager.py)', '329': 'is_alive(manager.py)', '325': '_kill_kernel(manager.py)', '332': 'signal_kernel(manager.py)'}}, {'key': 2717, 'parent': 2793, 'tfidf_word': 'identity feed display data channels version found token msg execute ', 'tfidf_method': 'test_no_adapt test_kernel_info_reply test_input_request test_execute_request test_execute_reply test_display_data test_complete_request test_complete_reply test_display_data test_object_info_reply ', 'lda_word': ' msg,header,kernel,test,client,', 'lda_method': ' msg,msg_header,msg_id,test_complete_reply,test_send_raw,', 'lsi_word': ' msg,header,kernel,test,client,', 'lsi_method': ' msg,msg_id,msg_header,asynckernelclient,blockingkernelclient,', 'spm_method': '  &#187; execute(utils.py) &rarr; execute(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; execute(client.py) &rarr; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; AsyncKernelClient(client.py) &rarr; execute(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; BlockingKernelClient(client.py) &rarr; execute(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; kernel_info(client.py) &rarr; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; start_channels(client.py) &rarr; kernel_info(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; inspect(client.py) &rarr; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; comm_info(client.py) &rarr; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; shutdown(client.py) &rarr; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; complete(client.py) &rarr; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; history(client.py) &rarr; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br>', 'text_summary': "Tab complete text in the kernel's namespace. Get metadata information about an object in the kernel's namespace. Request kernel info. Ask the kernel whether some code is complete and ready to execute.", 'files_count': 6, 'files': ['utils.py', 'client.py', 'test_adapter.py', 'session.py', 'test_session.py', 'manager.py'], 'execution_path_count': 71, 'function_id_to_name_file': {'704': 'execute(utils.py)', '155': 'execute(client.py)', '520': 'msg(test_adapter.py)', '534': 'msg(test_adapter.py)', '476': 'msg(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '90': 'AsyncKernelClient(client.py)', '116': 'BlockingKernelClient(client.py)', '167': 'kernel_info(client.py)', '170': 'start_channels(client.py)', '163': 'inspect(client.py)', '152': 'comm_info(client.py)', '169': 'shutdown(client.py)', '153': 'complete(client.py)', '161': 'history(client.py)', '526': 'test_input_request(test_adapter.py)', '523': 'test_display_data(test_adapter.py)', '527': 'test_kernel_info_reply(test_adapter.py)', '530': 'test_object_info_reply_not_found(test_adapter.py)', '529': 'test_object_info_reply(test_adapter.py)', '531': 'test_object_info_request(test_adapter.py)', '521': 'test_complete_reply(test_adapter.py)', '522': 'test_complete_request(test_adapter.py)', '524': 'test_execute_reply(test_adapter.py)', '525': 'test_execute_request(test_adapter.py)', '532': 'test_rename_type(test_adapter.py)', '528': 'test_no_adapt(test_adapter.py)', '533': 'test_same_version(test_adapter.py)', '695': 'test_send_raw(test_session.py)', '692': 'test_feed_identities(test_session.py)', '694': 'test_send(test_session.py)', '696': 'test_serialize(test_session.py)', '693': 'test_msg(test_session.py)', '328': 'interrupt_kernel(manager.py)', '166': 'is_complete(client.py)', '539': 'test_input_request(test_adapter.py)', '537': 'test_display_data(test_adapter.py)', '543': 'test_kernel_info_reply(test_adapter.py)', '540': 'test_inspect_reply(test_adapter.py)', '542': 'test_inspect_request_token(test_adapter.py)', '541': 'test_inspect_request(test_adapter.py)', '535': 'test_complete_reply(test_adapter.py)', '536': 'test_complete_request(test_adapter.py)', '538': 'test_execute_request(test_adapter.py)', '545': 'test_rename_type(test_adapter.py)', '546': 'test_same_version(test_adapter.py)', '544': 'test_no_adapt(test_adapter.py)'}}, {'key': 2774, 'parent': 2793, 'tfidf_word': 'shutdown unique default found handle token tracking msg execute send ', 'tfidf_method': 'test_display_data test_execute_request test_no_adapt test_object_info_reply test_object_info_request test_rename_type test_same_version test_complete_reply test_input_request test_kernel_info_reply ', 'lda_word': ' msg,blocking,client,kernel,header,', 'lda_method': ' msg,msg_header,msg_id,asynckernelclient,blockingkernelclient,', 'lsi_word': ' msg,header,kernel,test,client,', 'lsi_method': ' msg,msg_id,msg_header,asynckernelclient,blockingkernelclient,', 'spm_method': '  &#187; execute(utils.py) &rarr; execute(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; execute(client.py) &rarr; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; AsyncKernelClient(client.py) &rarr; execute(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; BlockingKernelClient(client.py) &rarr; execute(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; kernel_info(client.py) &rarr; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; start_channels(client.py) &rarr; kernel_info(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; inspect(client.py) &rarr; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; comm_info(client.py) &rarr; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; shutdown(client.py) &rarr; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; complete(client.py) &rarr; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; history(client.py) &rarr; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; restart_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) &rarr; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; request_shutdown(manager.py) &rarr; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; start_new_async_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br>', 'text_summary': 'Request kernel info. Send a shutdown request via control channel. Request comm info. Pass a message to the ZMQ socket to send.', 'files_count': 7, 'files': ['utils.py', 'client.py', 'test_adapter.py', 'session.py', 'test_session.py', 'manager.py', 'forward.py'], 'execution_path_count': 112, 'function_id_to_name_file': {'704': 'execute(utils.py)', '155': 'execute(client.py)', '534': 'msg(test_adapter.py)', '520': 'msg(test_adapter.py)', '476': 'msg(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '90': 'AsyncKernelClient(client.py)', '116': 'BlockingKernelClient(client.py)', '167': 'kernel_info(client.py)', '170': 'start_channels(client.py)', '163': 'inspect(client.py)', '152': 'comm_info(client.py)', '169': 'shutdown(client.py)', '153': 'complete(client.py)', '161': 'history(client.py)', '539': 'test_input_request(test_adapter.py)', '537': 'test_display_data(test_adapter.py)', '543': 'test_kernel_info_reply(test_adapter.py)', '540': 'test_inspect_reply(test_adapter.py)', '542': 'test_inspect_request_token(test_adapter.py)', '541': 'test_inspect_request(test_adapter.py)', '535': 'test_complete_reply(test_adapter.py)', '536': 'test_complete_request(test_adapter.py)', '538': 'test_execute_request(test_adapter.py)', '545': 'test_rename_type(test_adapter.py)', '544': 'test_no_adapt(test_adapter.py)', '546': 'test_same_version(test_adapter.py)', '695': 'test_send_raw(test_session.py)', '692': 'test_feed_identities(test_session.py)', '694': 'test_send(test_session.py)', '696': 'test_serialize(test_session.py)', '693': 'test_msg(test_session.py)', '328': 'interrupt_kernel(manager.py)', '166': 'is_complete(client.py)', '526': 'test_input_request(test_adapter.py)', '523': 'test_display_data(test_adapter.py)', '527': 'test_kernel_info_reply(test_adapter.py)', '530': 'test_object_info_reply_not_found(test_adapter.py)', '529': 'test_object_info_reply(test_adapter.py)', '531': 'test_object_info_request(test_adapter.py)', '521': 'test_complete_reply(test_adapter.py)', '522': 'test_complete_request(test_adapter.py)', '524': 'test_execute_reply(test_adapter.py)', '525': 'test_execute_request(test_adapter.py)', '532': 'test_rename_type(test_adapter.py)', '533': 'test_same_version(test_adapter.py)', '528': 'test_no_adapt(test_adapter.py)', '330': 'restart_kernel(manager.py)', '331': 'shutdown_kernel(manager.py)', '362': 'request_shutdown(manager.py)', '480': 'send(session.py)', '322': 'start_new_async_kernel(manager.py)', '492': 'handle(forward.py)', '698': 'test_tracking(test_session.py)', '699': 'test_unique_msg_ids(test_session.py)', '516': 'test_default_version(test_adapter.py)'}}, {'key': 2800, 'parent': 2805, 'tfidf_word': 'data input adapt found token handle default tracking execute send ', 'tfidf_method': 'test_kernel_info_reply test_no_adapt test_object_info_reply_not_found test_object_info_request test_same_version test_input_request test_object_info_reply test_default_version handle test_tracking ', 'lda_word': ' msg,kernel,client,extract,header,', 'lda_method': ' msg,extract_header,asynckernelclient,blockingkernelclient,execute,', 'lsi_word': ' msg,header,extract,kernel,test,', 'lsi_method': ' msg,extract_header,asynckernelclient,blockingkernelclient,execute,', 'spm_method': ' ', 'text_summary': "wrapper for doing common steps for validating an execution request. Ask the kernel whether some code is complete and ready to execute. Pass a message to the ZMQ socket to send. Tab complete text in the kernel's namespace. Request kernel info. Request comm info. Given a message or header, return the header. message format.", 'files_count': 7, 'files': ['client.py', 'test_adapter.py', 'session.py', 'utils.py', 'test_session.py', 'manager.py', 'forward.py'], 'execution_path_count': 170, 'function_id_to_name_file': {'116': 'BlockingKernelClient(client.py)', '167': 'kernel_info(client.py)', '520': 'msg(test_adapter.py)', '534': 'msg(test_adapter.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '170': 'start_channels(client.py)', '90': 'AsyncKernelClient(client.py)', '704': 'execute(utils.py)', '155': 'execute(client.py)', '163': 'inspect(client.py)', '152': 'comm_info(client.py)', '169': 'shutdown(client.py)', '153': 'complete(client.py)', '161': 'history(client.py)', '526': 'test_input_request(test_adapter.py)', '523': 'test_display_data(test_adapter.py)', '527': 'test_kernel_info_reply(test_adapter.py)', '530': 'test_object_info_reply_not_found(test_adapter.py)', '529': 'test_object_info_reply(test_adapter.py)', '531': 'test_object_info_request(test_adapter.py)', '521': 'test_complete_reply(test_adapter.py)', '522': 'test_complete_request(test_adapter.py)', '524': 'test_execute_reply(test_adapter.py)', '525': 'test_execute_request(test_adapter.py)', '532': 'test_rename_type(test_adapter.py)', '533': 'test_same_version(test_adapter.py)', '528': 'test_no_adapt(test_adapter.py)', '695': 'test_send_raw(test_session.py)', '694': 'test_send(test_session.py)', '692': 'test_feed_identities(test_session.py)', '696': 'test_serialize(test_session.py)', '693': 'test_msg(test_session.py)', '328': 'interrupt_kernel(manager.py)', '166': 'is_complete(client.py)', '536': 'test_complete_request(test_adapter.py)', '538': 'test_execute_request(test_adapter.py)', '545': 'test_rename_type(test_adapter.py)', '544': 'test_no_adapt(test_adapter.py)', '546': 'test_same_version(test_adapter.py)', '539': 'test_input_request(test_adapter.py)', '537': 'test_display_data(test_adapter.py)', '543': 'test_kernel_info_reply(test_adapter.py)', '542': 'test_inspect_request_token(test_adapter.py)', '540': 'test_inspect_reply(test_adapter.py)', '535': 'test_complete_reply(test_adapter.py)', '541': 'test_inspect_request(test_adapter.py)', '698': 'test_tracking(test_session.py)', '480': 'send(session.py)', '492': 'handle(forward.py)', '516': 'test_default_version(test_adapter.py)'}}, {'key': 2804, 'parent': 2805, 'tfidf_word': 'native io msg digest flush permission restarter code tunnel ip ', 'tfidf_method': 'test_extract_dates test_parse_ms_precision _launch test_kernelapp_lifecycle config test_signal_kernel_subprocesses _env_test_body test_signal_kernel_subprocesses _key_changed finish_shutdown ', 'lda_word': ' kernel,test,start,spec,get,', 'lda_method': ' start,is_alive,launch_kernel,has_kernel,execute_interactive,', 'lsi_word': ' kernel,start,spec,shutdown,manager,', 'lsi_method': ' msg,start,extract_header,msg_header,msg_id,', 'spm_method': '  &#187; do_execute(signalkernel.py) &rarr; poll(restarter.py) &rarr; restart_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; poll(restarter.py) &rarr; restart_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; restart_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) &rarr; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; request_shutdown(manager.py) &rarr; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; start(kernelspecapp.py) &rarr; start(runapp.py) &rarr; execute_interactive(client.py) &rarr; _stdin_hook_default(client.py) &rarr; input(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; start(runapp.py) &rarr; execute_interactive(client.py) &rarr; _stdin_hook_default(client.py) &rarr; input(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; execute_interactive(client.py) &rarr; _stdin_hook_default(client.py) &rarr; input(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; _stdin_hook_default(client.py) &rarr; input(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; input(client.py) &rarr; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; execute_interactive(client.py) &rarr; _stdin_hook_default(client.py) &rarr; input(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; _stdin_hook_default(client.py) &rarr; input(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; test_start_parallel_thread_kernels(test_multikernelmanager.py) &rarr; raw_tcp_lifecycle(test_multikernelmanager.py) &rarr; _get_tcp_km(test_multikernelmanager.py) &rarr; AsyncMultiKernelManager(multikernelmanager.py) &rarr; MultiKernelManager(multikernelmanager.py) &rarr; kernel_method(multikernelmanager.py) &rarr; wrapped(multikernelmanager.py) . <br> &#187; tcp_lifecycle_with_loop(test_multikernelmanager.py) &rarr; raw_tcp_lifecycle(test_multikernelmanager.py) &rarr; _get_tcp_km(test_multikernelmanager.py) &rarr; AsyncMultiKernelManager(multikernelmanager.py) &rarr; MultiKernelManager(multikernelmanager.py) &rarr; kernel_method(multikernelmanager.py) &rarr; wrapped(multikernelmanager.py) . <br> &#187; raw_tcp_lifecycle(test_multikernelmanager.py) &rarr; _get_tcp_km(test_multikernelmanager.py) &rarr; AsyncMultiKernelManager(multikernelmanager.py) &rarr; MultiKernelManager(multikernelmanager.py) &rarr; kernel_method(multikernelmanager.py) &rarr; wrapped(multikernelmanager.py) . <br> &#187; test_start_parallel_process_kernels(test_multikernelmanager.py) &rarr; raw_tcp_lifecycle(test_multikernelmanager.py) &rarr; _get_tcp_km(test_multikernelmanager.py) &rarr; AsyncMultiKernelManager(multikernelmanager.py) &rarr; MultiKernelManager(multikernelmanager.py) &rarr; kernel_method(multikernelmanager.py) &rarr; wrapped(multikernelmanager.py) . <br> &#187; test_start_parallel_thread_kernels(test_multikernelmanager.py) &rarr; test_tcp_lifecycle(test_multikernelmanager.py) &rarr; _get_tcp_km(test_multikernelmanager.py) &rarr; MultiKernelManager(multikernelmanager.py) &rarr; kernel_method(multikernelmanager.py) &rarr; wrapped(multikernelmanager.py) . <br> &#187; tcp_lifecycle_with_loop(test_multikernelmanager.py) &rarr; test_tcp_lifecycle(test_multikernelmanager.py) &rarr; _get_tcp_km(test_multikernelmanager.py) &rarr; MultiKernelManager(multikernelmanager.py) &rarr; kernel_method(multikernelmanager.py) &rarr; wrapped(multikernelmanager.py) . <br> &#187; test_start_parallel_process_kernels(test_multikernelmanager.py) &rarr; test_tcp_lifecycle(test_multikernelmanager.py) &rarr; _get_tcp_km(test_multikernelmanager.py) &rarr; MultiKernelManager(multikernelmanager.py) &rarr; kernel_method(multikernelmanager.py) &rarr; wrapped(multikernelmanager.py) . <br> &#187; start_new_async_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; finish_shutdown(manager.py) &rarr; _async_wait(manager.py) &rarr; is_alive(manager.py) &rarr; has_kernel(manager.py) &rarr; _launch_kernel(manager.py) . <br> &#187; run_kernel(manager.py) &rarr; start_new_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; start_new_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; initialize(test_connect.py) &rarr; init_connection_file(consoleapp.py) &rarr; load_connection_file(connect.py) &rarr; load_connection_info(connect.py) &rarr; _ip_default(connect.py) &rarr; localhost(localinterfaces.py) . <br> &#187; initialize(runapp.py) &rarr; handle_sigint(runapp.py) &rarr; interrupt_kernel(manager.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; restart_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; finish_shutdown(manager.py) &rarr; _async_wait(manager.py) &rarr; is_alive(manager.py) &rarr; has_kernel(manager.py) &rarr; _launch_kernel(manager.py) . <br> &#187; tunnel_to_kernel(connect.py) &rarr; try_passwordless_ssh(tunnel.py) &rarr; _try_passwordless_paramiko(tunnel.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; handle_sigint(runapp.py) &rarr; interrupt_kernel(manager.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; tunnel_connection(tunnel.py) &rarr; open_tunnel(tunnel.py) &rarr; paramiko_tunnel(tunnel.py) &rarr; _try_passwordless_paramiko(tunnel.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; open_tunnel(tunnel.py) &rarr; paramiko_tunnel(tunnel.py) &rarr; _try_passwordless_paramiko(tunnel.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; paramiko_tunnel(tunnel.py) &rarr; _try_passwordless_paramiko(tunnel.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; _try_passwordless_paramiko(tunnel.py) &rarr; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; init_kernel_info(runapp.py) &rarr; kernel_info(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; start(kernelspecapp.py) &rarr; input(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; try_passwordless_ssh(tunnel.py) &rarr; _try_passwordless_paramiko(tunnel.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; shutdown_kernel(manager.py) &rarr; finish_shutdown(manager.py) &rarr; _kill_kernel(manager.py) &rarr; _async_wait(manager.py) &rarr; is_alive(manager.py) &rarr; has_kernel(manager.py) &rarr; _launch_kernel(manager.py) . <br> &#187; finish_shutdown(manager.py) &rarr; _kill_kernel(manager.py) &rarr; _async_wait(manager.py) &rarr; is_alive(manager.py) &rarr; has_kernel(manager.py) &rarr; _launch_kernel(manager.py) . <br>', 'text_summary': "Subclasses may override  Prepares a kernel for startup in a separate process. return ip for localhost (almost always 127.0.0.1) test `ipython console --existing` loads a connection file. Prepares a kernel for startup in a separate process. Create a client configured to connect to our kernel. return ip for localhost (almost always 127.0.0.1)   Ensure that a sequence of kernel startups doesn't break anything. Sends a signal to the process group of the kernel (this. return zmq Socket connected to the IOPub channel. Pass a message to the ZMQ socket to send. return ip for localhost (almost always 127.0.0.1)   set up ssh tunnels, if needed. Start a new kernel, and return its Manager and Client. Send a string of raw input to the kernel. Return the connection info as a dict. Subclasses may override Start the polling of the kernel. Ensure that a sequence of kernel startups doesn't break anything. load ip addresses with socket.gethostbyname_ex uniq_stable(elems) -> list. return ip for localhost (almost always 127.0.0.1) test load_connection_file() after. Output hook when running inside an IPython kernel. Launches a localhost kernel, binding to the specified ports. decorator to ensure load_ips has been run before f. test `ipython console --existing` loads a connection file. find a connection file, and return its absolute path. return ip for localhost (almost always 127.0.0.1)      find a connection file, and return its absolute path. tunnel connections to a kernel via ssh. decorator for proxying MKM.method(kernel_id) to individual KMs by ID    decorator for proxying MKM.method(kernel_id) to individual KMs by ID    decorator for proxying MKM.method(kernel_id) to individual KMs by ID    decorator for proxying MKM.method(kernel_id) to individual KMs by ID      decorator for proxying MKM.method(kernel_id) to individual KMs by ID      decorator for proxying MKM.method(kernel_id) to individual KMs by ID     decorator for proxying MKM.method(kernel_id) to individual KMs by ID     decorator for proxying MKM.method(kernel_id) to individual KMs by ID  Verify realpath is used when formatting connection file. For tests, create a file to indicate that we've started. Connect a socket to an address via an ssh tunnel. Returns a dict mapping kernel names to kernelspecs. handle kernel info reply. Given a message or header, return the header. Get the hb channel object for this kernel. Returns the id to associate with the kernel for this request. Get a message from the control channel. {connection_file})   Prepares a kernel for startup in a separate process. Send a raw message via ident path. {connection_file})  Restarts a kernel with the arguments that were used to launch it. Make a blocking client connected to my kernel. populate local and public IPs from flat list of all IPs. return the IP addresses that point to this machine. return ip for localhost (almost always 127.0.0.1)       return ip for localhost (almost always 127.0.0.1)   find the connection file, and load the info if found. Load connection info from JSON dict in self.connection_file. return ip for localhost (almost always 127.0.0.1)  Write connection info to JSON dict in self.connection_file. Get a message from the stdin channel. Immediately processes all pending messages on this channel. Return the number of running kernels. Verify realpath is used when formatting connection file. return zmq Socket connected to the Shell channel. Unserialize a msg_list to a nested message dict. Receive and return the reply for a given request. Request kernel info. {connection_file}) Write connection info to JSON dict in self.connection_file. {connection_file})  Context manager to create a kernel in a subprocess. Get a message from the iopub channel. Create an ssh tunnel using command-line ssh that connects port lport. Get a message from the shell channel. populate local and public IPs from flat list of all IPs. return the IP addresses for this machine that are visible to other machines. This is run in the ioloop thread when the kernel info reply is received. return zmq Socket connected to the StdIn channel. return the IP addresses that point to this machine. return zmq Socket connected to the Heartbeat channel. return ip for localhost (almost always 127.0.0.1)   find the connection file, and load the info if found. find the connection file, and load the info if found. Return a mapping of kernel names to resource directories from dir. populate local and public IPs from flat list of all IPs. decorator to ensure load_ips has been run before f. Returns a :class:`KernelSpec` instance for a given kernel_name. Send a shutdown request via control channel. Context manager to create a kernel in a subprocess. return zmq Socket connected to the Control channel. test load_connection_file() after. Write connection info to JSON dict in self.connection_file. Create a zmq Socket and connect it to the kernel. Forgets randomly assigned port numbers and cleans up the connection file.", 'files_count': 36, 'files': ['signalkernel.py', 'restarter.py', 'manager.py', 'session.py', 'test_adapter.py', 'adapter.py', 'connect.py', 'threaded.py', 'channels.py', 'managerabc.py', 'multikernelmanager.py', 'channelsabc.py', 'kernelspec.py', 'localinterfaces.py', 'kernelspecapp.py', 'runapp.py', 'client.py', 'test_session.py', 'jsonutil.py', 'consoleapp.py', 'test_connect.py', 'test_multikernelmanager.py', 'test_manager.py', 'test_kernelspec.py', 'kernelapp.py', 'test_localinterfaces.py', 'forward.py', 'test_jsonutil.py', 'test_client.py', 'tunnel.py', 'test_ssh.py', 'test_kernelmanager.py', 'utils.py', 'test_kernelapp.py', 'win_interrupt.py', 'launcher.py'], 'execution_path_count': 1051, 'function_id_to_name_file': {'510': 'do_execute(signalkernel.py)', '236': 'poll(restarter.py)', '363': 'restart_kernel(manager.py)', '364': 'shutdown_kernel(manager.py)', '362': 'request_shutdown(manager.py)', '476': 'msg(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '480': 'send(session.py)', '520': 'msg(test_adapter.py)', '534': 'msg(test_adapter.py)', '444': 'extract_header(session.py)', '50': 'adapt(adapter.py)', '450': 'utcnow(session.py)', '482': 'serialize(session.py)', '483': 'sign(session.py)', '440': 'Message(session.py)', '338': '_connect_control_socket(manager.py)', '192': '_create_connected_socket(connect.py)', '196': '_make_url(connect.py)', '734': 'send(threaded.py)', '738': 'thread_send(threaded.py)', '88': 'send(channels.py)', '114': 'send(channels.py)', '346': '_kill_kernel(manager.py)', '365': 'signal_kernel(manager.py)', '354': 'has_kernel(manager.py)', '347': '_launch_kernel(manager.py)', '352': 'finish_shutdown(manager.py)', '357': 'is_alive(manager.py)', '350': 'cleanup_resources(manager.py)', '201': 'cleanup_ipc_files(connect.py)', '211': 'ports(connect.py)', '349': 'cleanup(manager.py)', '368': 'stop_restarter(manager.py)', '200': 'cleanup_connection_file(connect.py)', '373': 'is_alive(managerabc.py)', '428': '_fire_callbacks(restarter.py)', '412': 'is_alive(multikernelmanager.py)', '140': 'is_alive(channelsabc.py)', '419': 'restart_kernel(multikernelmanager.py)', '375': 'restart_kernel(managerabc.py)', '732': 'is_alive(threaded.py)', '239': 'stop(restarter.py)', '86': 'is_alive(channels.py)', '112': 'is_alive(channels.py)', '366': 'start_kernel(manager.py)', '360': 'pre_start_kernel(manager.py)', '212': 'write_connection_file(connect.py)', '197': '_record_random_port_names(connect.py)', '353': 'format_kernel_cmd(manager.py)', '369': 'from_ns(manager.py)', '358': 'kernel_spec(manager.py)', '253': 'KernelSpec(kernelspec.py)', '341': '_get_env_substitutions(manager.py)', '314': 'local_ips(localinterfaces.py)', '312': 'is_local_ip(localinterfaces.py)', '202': 'cleanup_random_ports(connect.py)', '359': 'post_start_kernel(manager.py)', '367': 'start_restarter(manager.py)', '291': 'start(kernelspecapp.py)', '439': 'start(runapp.py)', '122': 'execute_interactive(client.py)', '121': '_stdin_hook_default(client.py)', '162': 'input(client.py)', '113': 'msg_ready(channels.py)', '87': 'msg_ready(channels.py)', '120': '_recv_reply(client.py)', '156': 'get_control_msg(client.py)', '158': 'get_shell_msg(client.py)', '110': 'get_msg(channels.py)', '108': '_recv(channels.py)', '84': 'get_msg(channels.py)', '82': '_recv(channels.py)', '119': '_output_hook_kernel(client.py)', '118': '_output_hook_default(client.py)', '117': 'reqrep(client.py)', '124': 'wrapped(client.py)', '97': 'execute_interactive(client.py)', '96': '_stdin_hook_default(client.py)', '95': '_recv_reply(client.py)', '100': 'get_shell_msg(client.py)', '98': 'get_control_msg(client.py)', '91': 'reqrep(client.py)', '105': 'wrapped(client.py)', '94': '_output_hook_kernel(client.py)', '93': '_output_hook_default(client.py)', '683': 'test_bad_roundtrip(test_session.py)', '457': '__init__(session.py)', '459': '_check_packers(session.py)', '244': 'squash_dates(jsonutil.py)', '685': 'test_bad_unpacker(test_session.py)', '682': 'test_bad_packer(test_session.py)', '684': 'test_bad_unpack(test_session.py)', '681': 'test_bad_pack(test_session.py)', '687': 'test_cull_digest_history(test_session.py)', '700': 'test_zero_digest_history(test_session.py)', '697': 'test_session_id(test_session.py)', '678': 'setUp(test_session.py)', '680': 'test_args(test_session.py)', '215': '__init__(consoleapp.py)', '198': '_session_default(connect.py)', '565': 'test_load_connection_file_session_with_kn(test_connect.py)', '564': 'test_load_connection_file_session(test_connect.py)', '516': 'test_default_version(test_adapter.py)', '519': 'setUp(test_adapter.py)', '690': 'test_datetimes_pickle(test_session.py)', '689': 'test_datetimes_msgpack(test_session.py)', '649': 'test_start_sequence_ipc_kernels(test_multikernelmanager.py)', '638': '_get_ipc_km(test_multikernelmanager.py)', '379': 'AsyncMultiKernelManager(multikernelmanager.py)', '381': 'MultiKernelManager(multikernelmanager.py)', '382': 'kernel_method(multikernelmanager.py)', '425': 'wrapped(multikernelmanager.py)', '645': 'test_ipc_lifecycle(test_multikernelmanager.py)', '644': 'test_ipc_cinfo(test_multikernelmanager.py)', '650': 'test_start_sequence_tcp_kernels(test_multikernelmanager.py)', '639': '_get_tcp_km(test_multikernelmanager.py)', '646': 'test_shutdown_all(test_multikernelmanager.py)', '651': 'test_tcp_cinfo(test_multikernelmanager.py)', '648': 'test_start_parallel_thread_kernels(test_multikernelmanager.py)', '643': 'tcp_lifecycle_with_loop(test_multikernelmanager.py)', '642': 'raw_tcp_lifecycle(test_multikernelmanager.py)', '647': 'test_start_parallel_process_kernels(test_multikernelmanager.py)', '652': 'test_tcp_lifecycle(test_multikernelmanager.py)', '653': 'test_tcp_lifecycle_with_kernel_id(test_multikernelmanager.py)', '664': 'test_start_sequence_ipc_kernels(test_multikernelmanager.py)', '654': '_get_ipc_km(test_multikernelmanager.py)', '660': 'test_ipc_lifecycle(test_multikernelmanager.py)', '659': 'test_ipc_cinfo(test_multikernelmanager.py)', '665': 'test_start_sequence_tcp_kernels(test_multikernelmanager.py)', '655': '_get_tcp_km(test_multikernelmanager.py)', '666': 'test_tcp_cinfo(test_multikernelmanager.py)', '668': 'test_tcp_lifecycle_with_kernel_id(test_multikernelmanager.py)', '661': 'test_shutdown_all(test_multikernelmanager.py)', '663': 'test_start_parallel_thread_kernels(test_multikernelmanager.py)', '658': 'tcp_lifecycle_with_loop(test_multikernelmanager.py)', '667': 'test_tcp_lifecycle(test_multikernelmanager.py)', '662': 'test_start_parallel_process_kernels(test_multikernelmanager.py)', '322': 'start_new_async_kernel(manager.py)', '319': 'AsyncKernelManager(manager.py)', '320': 'KernelManager(manager.py)', '254': 'KernelSpecManager(kernelspec.py)', '224': 'AsyncIOLoopKernelManager(manager.py)', '225': 'IOLoopKernelManager(manager.py)', '635': 'test_connection_file_real_path(test_manager.py)', '629': 'test_subclass(test_kernelspec.py)', '618': 'setUp(test_kernelspec.py)', '289': '_kernel_spec_manager_default(kernelspecapp.py)', '345': '_kernel_spec_manager_default(manager.py)', '295': '_kernel_spec_manager_default(kernelspecapp.py)', '286': '_kernel_spec_manager_default(kernelspecapp.py)', '245': 'KernelApp(kernelapp.py)', '292': '_kernel_spec_manager_default(kernelspecapp.py)', '631': 'MyKSM(test_kernelspec.py)', '282': 'KernelSpecApp(kernelspecapp.py)', '284': 'RemoveKernelSpec(kernelspecapp.py)', '283': 'ListKernelSpecs(kernelspecapp.py)', '280': 'InstallKernelSpec(kernelspecapp.py)', '281': 'InstallNativeKernelSpec(kernelspecapp.py)', '321': 'run_kernel(manager.py)', '323': 'start_new_kernel(manager.py)', '188': 'ConnectionFileMixin(connect.py)', '351': 'client(manager.py)', '208': 'get_connection_info(connect.py)', '310': '_requires_ips(localinterfaces.py)', '318': 'ips_loaded(localinterfaces.py)', '301': '_load_ips(localinterfaces.py)', '306': '_load_ips_ipconfig(localinterfaces.py)', '300': '_get_output(localinterfaces.py)', '309': '_populate_from_list(localinterfaces.py)', '299': 'NoIPAddresses(localinterfaces.py)', '316': 'public_ips(localinterfaces.py)', '311': '_uniq_stable(localinterfaces.py)', '304': '_load_ips_ifconfig(localinterfaces.py)', '305': '_load_ips_ip(localinterfaces.py)', '307': '_load_ips_netifaces(localinterfaces.py)', '302': '_load_ips_dumb(localinterfaces.py)', '634': 'test_load_ips(test_localinterfaces.py)', '303': '_load_ips_gethostbyname(localinterfaces.py)', '465': '_new_auth(session.py)', '560': 'test_find_connection_file(test_connect.py)', '572': 'initialize(test_connect.py)', '219': 'init_connection_file(consoleapp.py)', '209': 'load_connection_file(connect.py)', '210': 'load_connection_info(connect.py)', '195': '_ip_default(connect.py)', '315': 'localhost(localinterfaces.py)', '559': 'test_app_load_connection_file(test_connect.py)', '437': 'initialize(runapp.py)', '223': 'initialize(consoleapp.py)', '222': 'init_ssh(consoleapp.py)', '220': 'init_kernel_client(consoleapp.py)', '221': 'init_kernel_manager(consoleapp.py)', '255': 'NoSuchKernel(kernelspec.py)', '568': 'test_mixin_record_random_ports(test_connect.py)', '567': 'test_mixin_cleanup_random_ports(test_connect.py)', '621': 'test_find_all_specs(test_kernelspec.py)', '273': 'get_all_specs(kernelspec.py)', '272': 'find_kernel_specs(kernelspec.py)', '258': '_list_kernels_in(kernelspec.py)', '257': '_is_valid_kernel_name(kernelspec.py)', '256': '_is_kernel_dir(kernelspec.py)', '627': 'test_remove_kernel_spec(test_kernelspec.py)', '277': 'remove_kernel_spec(kernelspec.py)', '625': 'test_install_kernel_spec_prefix(test_kernelspec.py)', '626': 'test_kernel_spec_priority(test_kernelspec.py)', '624': 'test_install_kernel_spec(test_kernelspec.py)', '259': 'find_kernel_specs(kernelspec.py)', '622': 'test_find_kernel_specs(test_kernelspec.py)', '694': 'test_send(test_session.py)', '479': 'recv(session.py)', '474': 'deserialize(session.py)', '242': 'extract_dates(jsonutil.py)', '243': 'parse_date(jsonutil.py)', '240': '_ensure_tzinfo(jsonutil.py)', '492': 'handle(forward.py)', '695': 'test_send_raw(test_session.py)', '484': 'unserialize(session.py)', '696': 'test_serialize(test_session.py)', '578': 'test_parse_ms_precision(test_jsonutil.py)', '679': '_datetime_test(test_session.py)', '688': 'test_datetimes(test_session.py)', '575': 'test_date_default(test_jsonutil.py)', '576': 'test_extract_date_from_naive(test_jsonutil.py)', '577': 'test_extract_dates(test_jsonutil.py)', '330': 'restart_kernel(manager.py)', '333': 'start_kernel(manager.py)', '326': '_launch_kernel(manager.py)', '623': 'test_get_kernel_spec(test_kernelspec.py)', '267': '_find_spec_directory(kernelspec.py)', '632': 'find_kernel_specs(test_kernelspec.py)', '274': 'get_kernel_spec(kernelspec.py)', '633': 'get_kernel_spec(test_kernelspec.py)', '549': 'setUp(test_client.py)', '269': '_get_kernel_spec_by_name(kernelspec.py)', '278': '__init__(kernelspec.py)', '260': 'get_kernel_spec(kernelspec.py)', '698': 'test_tracking(test_session.py)', '328': 'interrupt_kernel(manager.py)', '191': 'write_connection_file(connect.py)', '109': 'close(channels.py)', '83': 'close(channels.py)', '730': 'close(threaded.py)', '132': 'close(channels.py)', '718': 'close(threaded.py)', '570': 'test_write_connection_file(test_connect.py)', '686': 'test_clone(test_session.py)', '458': '_add_digest(session.py)', '460': '_cull_digest_history(session.py)', '558': 'DummyConsoleApp(test_connect.py)', '214': 'JupyterConsoleApp(consoleapp.py)', '441': 'Session(session.py)', '213': 'IPythonConsoleApp(consoleapp.py)', '434': 'RunApp(runapp.py)', '392': '__init__(multikernelmanager.py)', '190': 'tunnel_to_kernel(connect.py)', '503': 'select_random_ports(tunnel.py)', '701': 'test_random_ports(test_ssh.py)', '386': 'shutdown_all(multikernelmanager.py)', '383': 'finish_shutdown(multikernelmanager.py)', '410': 'get_kernel(multikernelmanager.py)', '394': '_check_kernel_id(multikernelmanager.py)', '388': 'signal_kernel(multikernelmanager.py)', '385': 'restart_kernel(multikernelmanager.py)', '384': 'interrupt_kernel(multikernelmanager.py)', '387': 'shutdown_kernel(multikernelmanager.py)', '421': 'shutdown_kernel(multikernelmanager.py)', '420': 'shutdown_all(multikernelmanager.py)', '104': 'wait_for_ready(client.py)', '103': 'is_alive(client.py)', '123': 'wait_for_ready(client.py)', '165': 'is_alive(client.py)', '641': '_run_lifecycle(test_multikernelmanager.py)', '135': 'run(channels.py)', '128': '_create_socket(channels.py)', '101': 'get_stdin_msg(client.py)', '85': 'get_msgs(channels.py)', '99': 'get_iopub_msg(client.py)', '111': 'get_msgs(channels.py)', '620': 'test_cant_install_kernel_spec(test_kernelspec.py)', '275': 'install_kernel_spec(kernelspec.py)', '268': '_get_destination_dir(kernelspec.py)', '261': 'install_kernel_spec(kernelspec.py)', '614': 'test_start_sequence_process_kernels(test_kernelmanager.py)', '610': '_run_signaltest_lifecycle(test_kernelmanager.py)', '615': 'execute(test_kernelmanager.py)', '609': '_prepare_kernel(test_kernelmanager.py)', '611': 'test_start_parallel_process_kernels(test_kernelmanager.py)', '613': 'test_start_sequence_kernels(test_kernelmanager.py)', '612': 'test_start_parallel_thread_kernels(test_kernelmanager.py)', '398': '_kernel_manager_class_changed(multikernelmanager.py)', '396': '_create_kernel_manager_factory(multikernelmanager.py)', '424': 'create_kernel_manager(multikernelmanager.py)', '397': '_find_available_port(multikernelmanager.py)', '395': '_context_default(multikernelmanager.py)', '399': '_kernel_manager_factory_default(multikernelmanager.py)', '485': '__init__(session.py)', '90': 'AsyncKernelClient(client.py)', '147': 'KernelClient(client.py)', '139': 'HBChannelABC(channelsabc.py)', '138': 'ChannelABC(channelsabc.py)', '116': 'BlockingKernelClient(client.py)', '657': '_run_lifecycle(test_multikernelmanager.py)', '704': 'execute(utils.py)', '155': 'execute(client.py)', '148': 'validate_string_dict(client.py)', '423': 'start_kernel(multikernelmanager.py)', '415': 'pre_start_kernel(multikernelmanager.py)', '380': 'DuplicateKernelError(multikernelmanager.py)', '414': 'new_kernel_id(multikernelmanager.py)', '389': 'start_kernel(multikernelmanager.py)', '238': 'start(restarter.py)', '430': 'poll(restarter.py)', '433': 'stop(restarter.py)', '501': 'openssh_tunnel(tunnel.py)', '494': 'SSHException(tunnel.py)', '497': '_stop_tunnel(tunnel.py)', '475': 'feed_identities(session.py)', '106': 'ZMQSocketChannel(channels.py)', '226': 'as_zmqstream(manager.py)', '233': 'wrapped(manager.py)', '557': 'DummyConfigurable(test_connect.py)', '235': 'IOLoopKernelRestarter(restarter.py)', '426': 'KernelRestarter(restarter.py)', '234': 'AsyncIOLoopKernelRestarter(restarter.py)', '251': 'start(kernelapp.py)', '249': 'setup_signals(kernelapp.py)', '252': 'shutdown_handler(kernelapp.py)', '250': 'shutdown(kernelapp.py)', '248': 'log_connection_info(kernelapp.py)', '199': 'blocking_client(connect.py)', '725': 'stop_channels(threaded.py)', '676': '_bad_unpacker(test_session.py)', '536': 'test_complete_request(test_adapter.py)', '517': 'adapt(test_adapter.py)', '562': 'test_find_connection_file_local(test_connect.py)', '189': 'find_connection_file(connect.py)', '493': 'SubHander(forward.py)', '490': 'Handler(forward.py)', '241': 'date_default(jsonutil.py)', '597': 'test_subclasses(test_kernelmanager.py)', '703': 'AsyncKernelManagerWithCleanup(utils.py)', '595': 'test_signal_kernel_subprocesses(test_kernelmanager.py)', '598': 'execute(test_kernelmanager.py)', '702': 'AsyncKernelManagerSubclass(utils.py)', '591': 'transport(test_kernelmanager.py)', '606': 'test_templated_kspec_env(test_kernelmanager.py)', '599': '_env_test_body(test_kernelmanager.py)', '607': 'execute(test_kernelmanager.py)', '604': 'test_signal_kernel_subprocesses(test_kernelmanager.py)', '608': 'execute(test_kernelmanager.py)', '586': 'env(test_kernelmanager.py)', '712': 'stop(utils.py)', '711': 'start(utils.py)', '705': 'test_env(utils.py)', '630': 'test_validate_kernel_name(test_kernelspec.py)', '506': 'SignalTestApp(signalkernel.py)', '507': 'SignalTestKernel(signalkernel.py)', '617': '_install_sample_kernel(test_kernelspec.py)', '640': '_run_cinfo(test_multikernelmanager.py)', '619': 'tearDown(test_kernelspec.py)', '656': '_run_cinfo(test_multikernelmanager.py)', '569': 'test_secure_write(test_connect.py)', '573': 'check_user_only_permissions(test_connect.py)', '574': 'fetch_win32_permissions(test_connect.py)', '563': 'test_find_connection_file_relative(test_connect.py)', '561': 'test_find_connection_file_abspath(test_connect.py)', '539': 'test_input_request(test_adapter.py)', '537': 'test_display_data(test_adapter.py)', '540': 'test_inspect_reply(test_adapter.py)', '543': 'test_kernel_info_reply(test_adapter.py)', '542': 'test_inspect_request_token(test_adapter.py)', '535': 'test_complete_reply(test_adapter.py)', '541': 'test_inspect_request(test_adapter.py)', '538': 'test_execute_request(test_adapter.py)', '545': 'test_rename_type(test_adapter.py)', '544': 'test_no_adapt(test_adapter.py)', '546': 'test_same_version(test_adapter.py)', '514': 'V5toV4TestCase(test_adapter.py)', '512': 'AdapterTest(test_adapter.py)', '526': 'test_input_request(test_adapter.py)', '523': 'test_display_data(test_adapter.py)', '527': 'test_kernel_info_reply(test_adapter.py)', '530': 'test_object_info_reply_not_found(test_adapter.py)', '529': 'test_object_info_reply(test_adapter.py)', '531': 'test_object_info_request(test_adapter.py)', '521': 'test_complete_reply(test_adapter.py)', '522': 'test_complete_request(test_adapter.py)', '524': 'test_execute_reply(test_adapter.py)', '532': 'test_rename_type(test_adapter.py)', '525': 'test_execute_request(test_adapter.py)', '528': 'test_no_adapt(test_adapter.py)', '533': 'test_same_version(test_adapter.py)', '513': 'V4toV5TestCase(test_adapter.py)', '515': 'test_code_to_line_no_code(test_adapter.py)', '51': 'code_to_line(adapter.py)', '157': 'get_iopub_msg(client.py)', '710': '__exit__(utils.py)', '709': '__enter__(utils.py)', '580': 'test_kernelapp_lifecycle(test_kernelapp.py)', '579': '_launch(test_kernelapp.py)', '473': 'clone(session.py)', '481': 'send_raw(session.py)', '675': '_bad_packer(test_session.py)', '699': 'test_unique_msg_ids(test_session.py)', '445': 'msg_header(session.py)', '674': 'TestSession(test_session.py)', '673': 'SessionTestCase(test_session.py)', '556': 'test_shutdown(test_client.py)', '548': '_check_reply(test_client.py)', '550': 'test_comm_info(test_client.py)', '555': 'test_kernel_info(test_client.py)', '551': 'test_complete(test_client.py)', '554': 'test_inspect(test_client.py)', '553': 'test_history(test_client.py)', '150': '_handle_kernel_info_reply(client.py)', '125': 'HBChannel(channels.py)', '102': 'hb_channel(client.py)', '80': 'ZMQSocketChannel(channels.py)', '154': 'control_channel(client.py)', '723': 'ioloop(threaded.py)', '160': 'hb_channel(client.py)', '171': 'stdin_channel(client.py)', '164': 'iopub_channel(client.py)', '168': 'shell_channel(client.py)', '740': 'send_interrupt(win_interrupt.py)', '334': '__del__(manager.py)', '293': 'start(kernelspecapp.py)', '294': 'path_key(kernelspecapp.py)', '735': 'start(threaded.py)', '720': 'start(threaded.py)', '141': 'start(channelsabc.py)', '432': 'start(restarter.py)', '288': 'start(kernelspecapp.py)', '89': 'start(channels.py)', '115': 'start(channels.py)', '290': 'start(kernelspecapp.py)', '438': 'parse_command_line(runapp.py)', '218': 'build_kernel_argv(consoleapp.py)', '308': '_only_once(localinterfaces.py)', '317': 'wrapped(localinterfaces.py)', '47': 'V4toV5(adapter.py)', '46': 'Adapter(adapter.py)', '77': 'object_info_request(adapter.py)', '52': 'extract_oname_v4(adapter.py)', '70': 'complete_request(adapter.py)', '75': 'kernel_info_reply(adapter.py)', '49': '_version_str_to_list(adapter.py)', '48': 'V5toV4(adapter.py)', '53': '__call__(adapter.py)', '54': 'handle_reply_status_error(adapter.py)', '57': 'update_msg_type(adapter.py)', '56': 'update_metadata(adapter.py)', '55': 'update_header(adapter.py)', '247': 'initialize(kernelapp.py)', '246': '_record_started(kernelapp.py)', '585': 'config(test_kernelmanager.py)', '262': 'install_native_kernel_spec(kernelspec.py)', '276': 'install_native_kernel_spec(kernelspec.py)', '265': 'to_json(kernelspec.py)', '264': 'to_dict(kernelspec.py)', '449': 'test_msg2obj(session.py)', '453': '__init__(session.py)', '470': '_signature_scheme_changed(session.py)', '463': '_key_default(session.py)', '447': 'new_id_bytes(session.py)', '462': '_key_changed(session.py)', '443': 'default_secure(session.py)', '469': '_session_default(session.py)', '446': 'new_id(session.py)', '413': 'list_kernel_ids(multikernelmanager.py)', '721': 'stop(threaded.py)', '724': 'start_channels(threaded.py)', '722': '_check_kernel_info_reply(threaded.py)', '716': '__init__(threaded.py)', '416': 'remove_kernel(multikernelmanager.py)', '713': 'IOLoopThread(threaded.py)', '714': 'ThreadedKernelClient(threaded.py)', '715': 'ThreadedZMQSocketChannel(threaded.py)', '731': 'flush(threaded.py)', '727': '_flush(threaded.py)', '418': 'request_shutdown(multikernelmanager.py)', '402': 'cleanup_resources(multikernelmanager.py)', '408': 'finish_shutdown(multikernelmanager.py)', '393': '__len__(multikernelmanager.py)', '298': 'launch_kernel(launcher.py)', '739': 'create_interrupt_event(win_interrupt.py)', '741': 'SECURITY_ATTRIBUTES(win_interrupt.py)', '509': '__init__(signalkernel.py)', '127': '__init__(channels.py)', '126': 'InvalidPortNumber(channels.py)', '107': '__init__(channels.py)', '81': '__init__(channels.py)', '726': '__init__(threaded.py)', '737': 'setup_stream(threaded.py)', '728': '_handle_recv(threaded.py)', '729': 'call_handlers(threaded.py)', '136': 'stop(channels.py)', '133': 'is_beating(channels.py)', '145': 'time_to_dead(channelsabc.py)', '131': 'call_handlers(channels.py)', '130': '_poll(channels.py)', '435': 'handle_sigint(runapp.py)', '355': 'interrupt_kernel(manager.py)', '411': 'interrupt_kernel(multikernelmanager.py)', '372': 'interrupt_kernel(managerabc.py)', '505': 'tunnel_connection(tunnel.py)', '500': 'open_tunnel(tunnel.py)', '502': 'paramiko_tunnel(tunnel.py)', '499': '_try_passwordless_paramiko(tunnel.py)', '496': '_split_server(tunnel.py)', '495': '_paramiko_tunnel(tunnel.py)', '491': 'forward_tunnel(forward.py)', '436': 'init_kernel_info(runapp.py)', '137': 'unpause(channels.py)', '146': 'unpause(channelsabc.py)', '167': 'kernel_info(client.py)', '297': 'start(kernelspecapp.py)', '504': 'try_passwordless_ssh(tunnel.py)', '498': '_try_passwordless_openssh(tunnel.py)', '331': 'shutdown_kernel(manager.py)', '337': '_close_control_socket(manager.py)', '203': 'connect_control(connect.py)', '207': 'connect_stdin(connect.py)', '206': 'connect_shell(connect.py)', '205': 'connect_iopub(connect.py)', '204': 'connect_hb(connect.py)', '228': 'start_restarter(manager.py)', '231': 'start_restarter(manager.py)', '327': 'finish_shutdown(manager.py)', '324': '_async_wait(manager.py)', '329': 'is_alive(manager.py)', '325': '_kill_kernel(manager.py)', '332': 'signal_kernel(manager.py)'}}, {'key': 2239, 'parent': 2717, 'tfidf_word': 'type identity found feed display data channels version execute msg ', 'tfidf_method': 'test_input_request test_execute_request test_execute_reply execute test_complete_request test_complete_reply interrupt_kernel start_channels test_object_info_reply test_display_data ', 'lda_word': ' msg,header,test,kernel,client,', 'lda_method': ' msg,msg_id,msg_header,blockingkernelclient,asynckernelclient,', 'lsi_word': ' msg,header,kernel,test,client,', 'lsi_method': ' msg,msg_id,msg_header,asynckernelclient,blockingkernelclient,', 'spm_method': '  &#187; execute(client.py) &rarr; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; AsyncKernelClient(client.py) &rarr; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; BlockingKernelClient(client.py) &rarr; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; kernel_info(client.py) &rarr; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; inspect(client.py) &rarr; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; comm_info(client.py) &rarr; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; shutdown(client.py) &rarr; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; complete(client.py) &rarr; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; history(client.py) &rarr; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br>', 'text_summary': "Tab complete text in the kernel's namespace. Request kernel info. Ask the kernel whether some code is complete and ready to execute.", 'files_count': 6, 'files': ['utils.py', 'client.py', 'test_adapter.py', 'session.py', 'test_session.py', 'manager.py'], 'execution_path_count': 36, 'function_id_to_name_file': {'704': 'execute(utils.py)', '155': 'execute(client.py)', '520': 'msg(test_adapter.py)', '534': 'msg(test_adapter.py)', '476': 'msg(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '90': 'AsyncKernelClient(client.py)', '116': 'BlockingKernelClient(client.py)', '167': 'kernel_info(client.py)', '170': 'start_channels(client.py)', '163': 'inspect(client.py)', '152': 'comm_info(client.py)', '169': 'shutdown(client.py)', '153': 'complete(client.py)', '161': 'history(client.py)', '526': 'test_input_request(test_adapter.py)', '523': 'test_display_data(test_adapter.py)', '527': 'test_kernel_info_reply(test_adapter.py)', '530': 'test_object_info_reply_not_found(test_adapter.py)', '529': 'test_object_info_reply(test_adapter.py)', '531': 'test_object_info_request(test_adapter.py)', '521': 'test_complete_reply(test_adapter.py)', '522': 'test_complete_request(test_adapter.py)', '524': 'test_execute_reply(test_adapter.py)', '525': 'test_execute_request(test_adapter.py)', '532': 'test_rename_type(test_adapter.py)', '528': 'test_no_adapt(test_adapter.py)', '533': 'test_same_version(test_adapter.py)', '695': 'test_send_raw(test_session.py)', '692': 'test_feed_identities(test_session.py)', '694': 'test_send(test_session.py)', '696': 'test_serialize(test_session.py)', '693': 'test_msg(test_session.py)', '328': 'interrupt_kernel(manager.py)', '166': 'is_complete(client.py)'}}, {'key': 2289, 'parent': 2717, 'tfidf_word': 'type identity feed display data channels raw version msg execute ', 'tfidf_method': 'test_inspect_request test_inspect_reply test_execute_request test_display_data execute test_complete_reply interrupt_kernel start_channels test_inspect_request_token test_complete_request ', 'lda_word': ' msg,display,data,test,header,', 'lda_method': ' msg,msg_id,msg_header,asynckernelclient,blockingkernelclient,', 'lsi_word': ' msg,header,kernel,test,client,', 'lsi_method': ' msg,msg_header,msg_id,asynckernelclient,blockingkernelclient,', 'spm_method': ' ', 'text_summary': "Tab complete text in the kernel's namespace. Request kernel info. Ask the kernel whether some code is complete and ready to execute.", 'files_count': 6, 'files': ['utils.py', 'client.py', 'test_adapter.py', 'session.py', 'test_session.py', 'manager.py'], 'execution_path_count': 35, 'function_id_to_name_file': {'704': 'execute(utils.py)', '155': 'execute(client.py)', '534': 'msg(test_adapter.py)', '476': 'msg(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '90': 'AsyncKernelClient(client.py)', '116': 'BlockingKernelClient(client.py)', '167': 'kernel_info(client.py)', '170': 'start_channels(client.py)', '163': 'inspect(client.py)', '152': 'comm_info(client.py)', '169': 'shutdown(client.py)', '153': 'complete(client.py)', '161': 'history(client.py)', '539': 'test_input_request(test_adapter.py)', '537': 'test_display_data(test_adapter.py)', '543': 'test_kernel_info_reply(test_adapter.py)', '540': 'test_inspect_reply(test_adapter.py)', '542': 'test_inspect_request_token(test_adapter.py)', '541': 'test_inspect_request(test_adapter.py)', '535': 'test_complete_reply(test_adapter.py)', '536': 'test_complete_request(test_adapter.py)', '538': 'test_execute_request(test_adapter.py)', '545': 'test_rename_type(test_adapter.py)', '546': 'test_same_version(test_adapter.py)', '544': 'test_no_adapt(test_adapter.py)', '695': 'test_send_raw(test_session.py)', '694': 'test_send(test_session.py)', '692': 'test_feed_identities(test_session.py)', '696': 'test_serialize(test_session.py)', '693': 'test_msg(test_session.py)', '328': 'interrupt_kernel(manager.py)', '166': 'is_complete(client.py)'}}, {'key': 2718, 'parent': 2774, 'tfidf_word': 'identity feed display data channels version found token msg execute ', 'tfidf_method': 'test_no_adapt test_kernel_info_reply test_input_request test_execute_request test_execute_reply test_display_data test_complete_request test_complete_reply test_display_data test_object_info_reply ', 'lda_word': ' msg,header,kernel,test,client,', 'lda_method': ' msg,msg_header,msg_id,asynckernelclient,blockingkernelclient,', 'lsi_word': ' msg,header,kernel,test,client,', 'lsi_method': ' msg,msg_id,msg_header,blockingkernelclient,asynckernelclient,', 'spm_method': '  &#187; execute(utils.py) &rarr; execute(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; execute(client.py) &rarr; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; AsyncKernelClient(client.py) &rarr; execute(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; BlockingKernelClient(client.py) &rarr; execute(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; kernel_info(client.py) &rarr; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; start_channels(client.py) &rarr; kernel_info(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; inspect(client.py) &rarr; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; comm_info(client.py) &rarr; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; shutdown(client.py) &rarr; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; complete(client.py) &rarr; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; history(client.py) &rarr; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br>', 'text_summary': "Tab complete text in the kernel's namespace. Get metadata information about an object in the kernel's namespace. Request kernel info. Ask the kernel whether some code is complete and ready to execute.", 'files_count': 6, 'files': ['utils.py', 'client.py', 'test_adapter.py', 'session.py', 'test_session.py', 'manager.py'], 'execution_path_count': 71, 'function_id_to_name_file': {'704': 'execute(utils.py)', '155': 'execute(client.py)', '534': 'msg(test_adapter.py)', '520': 'msg(test_adapter.py)', '476': 'msg(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '90': 'AsyncKernelClient(client.py)', '116': 'BlockingKernelClient(client.py)', '167': 'kernel_info(client.py)', '170': 'start_channels(client.py)', '163': 'inspect(client.py)', '152': 'comm_info(client.py)', '169': 'shutdown(client.py)', '153': 'complete(client.py)', '161': 'history(client.py)', '539': 'test_input_request(test_adapter.py)', '537': 'test_display_data(test_adapter.py)', '543': 'test_kernel_info_reply(test_adapter.py)', '540': 'test_inspect_reply(test_adapter.py)', '542': 'test_inspect_request_token(test_adapter.py)', '541': 'test_inspect_request(test_adapter.py)', '535': 'test_complete_reply(test_adapter.py)', '536': 'test_complete_request(test_adapter.py)', '538': 'test_execute_request(test_adapter.py)', '545': 'test_rename_type(test_adapter.py)', '544': 'test_no_adapt(test_adapter.py)', '546': 'test_same_version(test_adapter.py)', '695': 'test_send_raw(test_session.py)', '692': 'test_feed_identities(test_session.py)', '694': 'test_send(test_session.py)', '696': 'test_serialize(test_session.py)', '693': 'test_msg(test_session.py)', '328': 'interrupt_kernel(manager.py)', '166': 'is_complete(client.py)', '526': 'test_input_request(test_adapter.py)', '523': 'test_display_data(test_adapter.py)', '527': 'test_kernel_info_reply(test_adapter.py)', '530': 'test_object_info_reply_not_found(test_adapter.py)', '529': 'test_object_info_reply(test_adapter.py)', '531': 'test_object_info_request(test_adapter.py)', '521': 'test_complete_reply(test_adapter.py)', '522': 'test_complete_request(test_adapter.py)', '524': 'test_execute_reply(test_adapter.py)', '525': 'test_execute_request(test_adapter.py)', '532': 'test_rename_type(test_adapter.py)', '533': 'test_same_version(test_adapter.py)', '528': 'test_no_adapt(test_adapter.py)'}}, {'key': 2734, 'parent': 2774, 'tfidf_word': 'raw default serialize channels tracking identity version msg send execute ', 'tfidf_method': 'test_default_version execute test_feed_identities test_msg start_channels test_send_raw test_serialize test_tracking test_unique_msg_ids is_complete ', 'lda_word': ' msg,kernel,header,shutdown,client,', 'lda_method': ' msg_id,msg_header,msg,blockingkernelclient,asynckernelclient,', 'lsi_word': ' msg,kernel,header,shutdown,request,', 'lsi_method': ' msg,msg_header,msg_id,request_shutdown,shutdown_kernel,', 'spm_method': '  &#187; restart_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) &rarr; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; request_shutdown(manager.py) &rarr; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; start_new_async_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br>', 'text_summary': 'Send a shutdown request via control channel. Request comm info. Pass a message to the ZMQ socket to send.', 'files_count': 7, 'files': ['manager.py', 'session.py', 'test_adapter.py', 'forward.py', 'test_session.py', 'utils.py', 'client.py'], 'execution_path_count': 41, 'function_id_to_name_file': {'330': 'restart_kernel(manager.py)', '331': 'shutdown_kernel(manager.py)', '362': 'request_shutdown(manager.py)', '480': 'send(session.py)', '476': 'msg(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '322': 'start_new_async_kernel(manager.py)', '520': 'msg(test_adapter.py)', '534': 'msg(test_adapter.py)', '492': 'handle(forward.py)', '698': 'test_tracking(test_session.py)', '328': 'interrupt_kernel(manager.py)', '694': 'test_send(test_session.py)', '699': 'test_unique_msg_ids(test_session.py)', '704': 'execute(utils.py)', '155': 'execute(client.py)', '90': 'AsyncKernelClient(client.py)', '116': 'BlockingKernelClient(client.py)', '167': 'kernel_info(client.py)', '170': 'start_channels(client.py)', '163': 'inspect(client.py)', '152': 'comm_info(client.py)', '169': 'shutdown(client.py)', '153': 'complete(client.py)', '161': 'history(client.py)', '516': 'test_default_version(test_adapter.py)', '695': 'test_send_raw(test_session.py)', '692': 'test_feed_identities(test_session.py)', '693': 'test_msg(test_session.py)', '696': 'test_serialize(test_session.py)', '166': 'is_complete(client.py)'}}, {'key': 2747, 'parent': 2800, 'tfidf_word': 'identity feed display data channels interrupt version found token execute ', 'tfidf_method': 'test_no_adapt test_kernel_info_reply test_input_request test_execute_request test_execute_reply test_display_data test_complete_request test_complete_reply test_display_data test_object_info_reply_not_found ', 'lda_word': ' msg,extract,header,test,kernel,', 'lda_method': ' msg,extract_header,test_input_request,test_execute_reply,test_inspect_request,', 'lsi_word': ' msg,header,extract,kernel,test,', 'lsi_method': ' msg,extract_header,blockingkernelclient,asynckernelclient,execute,', 'spm_method': ' ', 'text_summary': "Tab complete text in the kernel's namespace. Request kernel info. Given a message or header, return the header. Ask the kernel whether some code is complete and ready to execute.", 'files_count': 6, 'files': ['client.py', 'test_adapter.py', 'session.py', 'utils.py', 'test_session.py', 'manager.py'], 'execution_path_count': 71, 'function_id_to_name_file': {'116': 'BlockingKernelClient(client.py)', '167': 'kernel_info(client.py)', '520': 'msg(test_adapter.py)', '534': 'msg(test_adapter.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '170': 'start_channels(client.py)', '90': 'AsyncKernelClient(client.py)', '704': 'execute(utils.py)', '155': 'execute(client.py)', '163': 'inspect(client.py)', '152': 'comm_info(client.py)', '169': 'shutdown(client.py)', '153': 'complete(client.py)', '161': 'history(client.py)', '526': 'test_input_request(test_adapter.py)', '523': 'test_display_data(test_adapter.py)', '527': 'test_kernel_info_reply(test_adapter.py)', '530': 'test_object_info_reply_not_found(test_adapter.py)', '529': 'test_object_info_reply(test_adapter.py)', '531': 'test_object_info_request(test_adapter.py)', '521': 'test_complete_reply(test_adapter.py)', '522': 'test_complete_request(test_adapter.py)', '524': 'test_execute_reply(test_adapter.py)', '525': 'test_execute_request(test_adapter.py)', '532': 'test_rename_type(test_adapter.py)', '533': 'test_same_version(test_adapter.py)', '528': 'test_no_adapt(test_adapter.py)', '695': 'test_send_raw(test_session.py)', '694': 'test_send(test_session.py)', '692': 'test_feed_identities(test_session.py)', '696': 'test_serialize(test_session.py)', '693': 'test_msg(test_session.py)', '328': 'interrupt_kernel(manager.py)', '166': 'is_complete(client.py)', '536': 'test_complete_request(test_adapter.py)', '538': 'test_execute_request(test_adapter.py)', '545': 'test_rename_type(test_adapter.py)', '544': 'test_no_adapt(test_adapter.py)', '546': 'test_same_version(test_adapter.py)', '539': 'test_input_request(test_adapter.py)', '537': 'test_display_data(test_adapter.py)', '543': 'test_kernel_info_reply(test_adapter.py)', '542': 'test_inspect_request_token(test_adapter.py)', '540': 'test_inspect_reply(test_adapter.py)', '535': 'test_complete_reply(test_adapter.py)', '541': 'test_inspect_request(test_adapter.py)'}}, {'key': 2781, 'parent': 2800, 'tfidf_word': 'data input adapt handle found default token tracking execute send ', 'tfidf_method': 'test_display_data test_execute_request test_kernel_info_reply test_no_adapt test_object_info_reply_not_found test_object_info_request test_same_version test_complete_reply test_input_request test_object_info_reply ', 'lda_word': ' msg,execute,header,extract,client,', 'lda_method': ' msg,extract_header,comm_info,test_msg,kernel_info,', 'lsi_word': ' msg,header,extract,kernel,client,', 'lsi_method': ' msg,extract_header,blockingkernelclient,asynckernelclient,execute,', 'spm_method': ' ', 'text_summary': "wrapper for doing common steps for validating an execution request. Ask the kernel whether some code is complete and ready to execute. Pass a message to the ZMQ socket to send. Tab complete text in the kernel's namespace. Request kernel info. Request comm info. Given a message or header, return the header. message format.", 'files_count': 7, 'files': ['test_session.py', 'session.py', 'forward.py', 'manager.py', 'client.py', 'utils.py', 'test_adapter.py'], 'execution_path_count': 99, 'function_id_to_name_file': {'698': 'test_tracking(test_session.py)', '480': 'send(session.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '492': 'handle(forward.py)', '328': 'interrupt_kernel(manager.py)', '694': 'test_send(test_session.py)', '116': 'BlockingKernelClient(client.py)', '167': 'kernel_info(client.py)', '170': 'start_channels(client.py)', '90': 'AsyncKernelClient(client.py)', '704': 'execute(utils.py)', '155': 'execute(client.py)', '163': 'inspect(client.py)', '152': 'comm_info(client.py)', '169': 'shutdown(client.py)', '153': 'complete(client.py)', '161': 'history(client.py)', '516': 'test_default_version(test_adapter.py)', '695': 'test_send_raw(test_session.py)', '692': 'test_feed_identities(test_session.py)', '696': 'test_serialize(test_session.py)', '693': 'test_msg(test_session.py)', '166': 'is_complete(client.py)', '534': 'msg(test_adapter.py)', '520': 'msg(test_adapter.py)', '539': 'test_input_request(test_adapter.py)', '537': 'test_display_data(test_adapter.py)', '543': 'test_kernel_info_reply(test_adapter.py)', '540': 'test_inspect_reply(test_adapter.py)', '542': 'test_inspect_request_token(test_adapter.py)', '541': 'test_inspect_request(test_adapter.py)', '535': 'test_complete_reply(test_adapter.py)', '536': 'test_complete_request(test_adapter.py)', '538': 'test_execute_request(test_adapter.py)', '545': 'test_rename_type(test_adapter.py)', '546': 'test_same_version(test_adapter.py)', '544': 'test_no_adapt(test_adapter.py)', '524': 'test_execute_reply(test_adapter.py)', '525': 'test_execute_request(test_adapter.py)', '532': 'test_rename_type(test_adapter.py)', '528': 'test_no_adapt(test_adapter.py)', '533': 'test_same_version(test_adapter.py)', '526': 'test_input_request(test_adapter.py)', '523': 'test_display_data(test_adapter.py)', '527': 'test_kernel_info_reply(test_adapter.py)', '530': 'test_object_info_reply_not_found(test_adapter.py)', '531': 'test_object_info_request(test_adapter.py)', '529': 'test_object_info_reply(test_adapter.py)', '522': 'test_complete_request(test_adapter.py)', '521': 'test_complete_reply(test_adapter.py)'}}, {'key': 2772, 'parent': 2804, 'tfidf_word': 'n message send kernel socket connect start spec cleanup msg ', 'tfidf_method': '_get_env_substitutions kernel_spec is_alive start_restarter stop_restarter from_ns is_alive restart_kernel is_alive send ', 'lda_word': ' kernel,shutdown,msg,execute,poll,', 'lda_method': ' restart_kernel,do_execute,poll,start_kernel,pre_start_kernel,', 'lsi_word': ' kernel,shutdown,execute,poll,restart,', 'lsi_method': ' poll,do_execute,restart_kernel,shutdown_kernel,msg,', 'spm_method': '  &#187; do_execute(signalkernel.py) &rarr; poll(restarter.py) &rarr; restart_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; poll(restarter.py) &rarr; restart_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; restart_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br>', 'text_summary': 'Attempts to stop the kernel process cleanly. return the IP addresses that point to this machine. Restarts a kernel with the arguments that were used to launch it. Cleanup connection file *if we wrote it*. {connection_file})    Restarts a kernel with the arguments that were used to launch it. Sends a signal to the process group of the kernel (this. Pass a message to the ZMQ socket to send. Given a message or header, return the header. Create a zmq Socket and connect it to the kernel. Write connection info to JSON dict in self.connection_file. Forgets randomly assigned port numbers and cleans up the connection file.', 'files_count': 14, 'files': ['signalkernel.py', 'restarter.py', 'manager.py', 'session.py', 'test_adapter.py', 'adapter.py', 'connect.py', 'threaded.py', 'channels.py', 'managerabc.py', 'multikernelmanager.py', 'channelsabc.py', 'kernelspec.py', 'localinterfaces.py'], 'execution_path_count': 52, 'function_id_to_name_file': {'510': 'do_execute(signalkernel.py)', '236': 'poll(restarter.py)', '363': 'restart_kernel(manager.py)', '364': 'shutdown_kernel(manager.py)', '362': 'request_shutdown(manager.py)', '476': 'msg(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '480': 'send(session.py)', '520': 'msg(test_adapter.py)', '534': 'msg(test_adapter.py)', '444': 'extract_header(session.py)', '50': 'adapt(adapter.py)', '450': 'utcnow(session.py)', '482': 'serialize(session.py)', '483': 'sign(session.py)', '440': 'Message(session.py)', '338': '_connect_control_socket(manager.py)', '192': '_create_connected_socket(connect.py)', '196': '_make_url(connect.py)', '734': 'send(threaded.py)', '738': 'thread_send(threaded.py)', '88': 'send(channels.py)', '114': 'send(channels.py)', '346': '_kill_kernel(manager.py)', '365': 'signal_kernel(manager.py)', '354': 'has_kernel(manager.py)', '347': '_launch_kernel(manager.py)', '352': 'finish_shutdown(manager.py)', '357': 'is_alive(manager.py)', '350': 'cleanup_resources(manager.py)', '201': 'cleanup_ipc_files(connect.py)', '211': 'ports(connect.py)', '349': 'cleanup(manager.py)', '368': 'stop_restarter(manager.py)', '200': 'cleanup_connection_file(connect.py)', '373': 'is_alive(managerabc.py)', '428': '_fire_callbacks(restarter.py)', '412': 'is_alive(multikernelmanager.py)', '140': 'is_alive(channelsabc.py)', '419': 'restart_kernel(multikernelmanager.py)', '375': 'restart_kernel(managerabc.py)', '732': 'is_alive(threaded.py)', '239': 'stop(restarter.py)', '86': 'is_alive(channels.py)', '112': 'is_alive(channels.py)', '366': 'start_kernel(manager.py)', '360': 'pre_start_kernel(manager.py)', '212': 'write_connection_file(connect.py)', '197': '_record_random_port_names(connect.py)', '353': 'format_kernel_cmd(manager.py)', '369': 'from_ns(manager.py)', '358': 'kernel_spec(manager.py)', '253': 'KernelSpec(kernelspec.py)', '341': '_get_env_substitutions(manager.py)', '314': 'local_ips(localinterfaces.py)', '312': 'is_local_ip(localinterfaces.py)', '202': 'cleanup_random_ports(connect.py)', '359': 'post_start_kernel(manager.py)', '367': 'start_restarter(manager.py)'}}, {'key': 2803, 'parent': 2804, 'tfidf_word': 'native io digest msg flush permission restarter code tunnel ip ', 'tfidf_method': 'fetch_win32_permissions test_extract_date_from_naive test_extract_dates test_parse_ms_precision _launch test_kernelapp_lifecycle config test_signal_kernel_subprocesses _key_changed interrupt_kernel ', 'lda_word': ' test,connection,file,init,session,', 'lda_method': ' init,adapt,deserialize,new_auth,ensure_tzinfo,', 'lsi_word': ' kernel,start,spec,manager,shutdown,', 'lsi_method': ' msg,start,extract_header,msg_header,msg_id,', 'spm_method': '  &#187; start(kernelspecapp.py) &rarr; start(runapp.py) &rarr; execute_interactive(client.py) &rarr; _stdin_hook_default(client.py) &rarr; input(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; start(runapp.py) &rarr; execute_interactive(client.py) &rarr; _stdin_hook_default(client.py) &rarr; input(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; execute_interactive(client.py) &rarr; _stdin_hook_default(client.py) &rarr; input(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; _stdin_hook_default(client.py) &rarr; input(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; input(client.py) &rarr; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; execute_interactive(client.py) &rarr; _stdin_hook_default(client.py) &rarr; input(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; _stdin_hook_default(client.py) &rarr; input(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; test_start_parallel_thread_kernels(test_multikernelmanager.py) &rarr; raw_tcp_lifecycle(test_multikernelmanager.py) &rarr; _get_tcp_km(test_multikernelmanager.py) &rarr; AsyncMultiKernelManager(multikernelmanager.py) &rarr; MultiKernelManager(multikernelmanager.py) &rarr; kernel_method(multikernelmanager.py) &rarr; wrapped(multikernelmanager.py) . <br> &#187; tcp_lifecycle_with_loop(test_multikernelmanager.py) &rarr; raw_tcp_lifecycle(test_multikernelmanager.py) &rarr; _get_tcp_km(test_multikernelmanager.py) &rarr; AsyncMultiKernelManager(multikernelmanager.py) &rarr; MultiKernelManager(multikernelmanager.py) &rarr; kernel_method(multikernelmanager.py) &rarr; wrapped(multikernelmanager.py) . <br> &#187; raw_tcp_lifecycle(test_multikernelmanager.py) &rarr; _get_tcp_km(test_multikernelmanager.py) &rarr; AsyncMultiKernelManager(multikernelmanager.py) &rarr; MultiKernelManager(multikernelmanager.py) &rarr; kernel_method(multikernelmanager.py) &rarr; wrapped(multikernelmanager.py) . <br> &#187; test_start_parallel_process_kernels(test_multikernelmanager.py) &rarr; raw_tcp_lifecycle(test_multikernelmanager.py) &rarr; _get_tcp_km(test_multikernelmanager.py) &rarr; AsyncMultiKernelManager(multikernelmanager.py) &rarr; MultiKernelManager(multikernelmanager.py) &rarr; kernel_method(multikernelmanager.py) &rarr; wrapped(multikernelmanager.py) . <br> &#187; test_start_parallel_thread_kernels(test_multikernelmanager.py) &rarr; test_tcp_lifecycle(test_multikernelmanager.py) &rarr; _get_tcp_km(test_multikernelmanager.py) &rarr; MultiKernelManager(multikernelmanager.py) &rarr; kernel_method(multikernelmanager.py) &rarr; wrapped(multikernelmanager.py) . <br> &#187; tcp_lifecycle_with_loop(test_multikernelmanager.py) &rarr; test_tcp_lifecycle(test_multikernelmanager.py) &rarr; _get_tcp_km(test_multikernelmanager.py) &rarr; MultiKernelManager(multikernelmanager.py) &rarr; kernel_method(multikernelmanager.py) &rarr; wrapped(multikernelmanager.py) . <br> &#187; test_start_parallel_process_kernels(test_multikernelmanager.py) &rarr; test_tcp_lifecycle(test_multikernelmanager.py) &rarr; _get_tcp_km(test_multikernelmanager.py) &rarr; MultiKernelManager(multikernelmanager.py) &rarr; kernel_method(multikernelmanager.py) &rarr; wrapped(multikernelmanager.py) . <br> &#187; start_new_async_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; finish_shutdown(manager.py) &rarr; _async_wait(manager.py) &rarr; is_alive(manager.py) &rarr; has_kernel(manager.py) &rarr; _launch_kernel(manager.py) . <br> &#187; run_kernel(manager.py) &rarr; start_new_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; start_new_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; initialize(test_connect.py) &rarr; init_connection_file(consoleapp.py) &rarr; load_connection_file(connect.py) &rarr; load_connection_info(connect.py) &rarr; _ip_default(connect.py) &rarr; localhost(localinterfaces.py) . <br> &#187; initialize(runapp.py) &rarr; handle_sigint(runapp.py) &rarr; interrupt_kernel(manager.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; restart_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; finish_shutdown(manager.py) &rarr; _async_wait(manager.py) &rarr; is_alive(manager.py) &rarr; has_kernel(manager.py) &rarr; _launch_kernel(manager.py) . <br> &#187; tunnel_to_kernel(connect.py) &rarr; try_passwordless_ssh(tunnel.py) &rarr; _try_passwordless_paramiko(tunnel.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; do_execute(signalkernel.py) &rarr; poll(restarter.py) &rarr; restart_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; cleanup_resources(manager.py) &rarr; _close_control_socket(manager.py) &rarr; _create_connected_socket(connect.py) &rarr; _make_url(connect.py) . <br> &#187; handle_sigint(runapp.py) &rarr; interrupt_kernel(manager.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; tunnel_connection(tunnel.py) &rarr; open_tunnel(tunnel.py) &rarr; paramiko_tunnel(tunnel.py) &rarr; _try_passwordless_paramiko(tunnel.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; open_tunnel(tunnel.py) &rarr; paramiko_tunnel(tunnel.py) &rarr; _try_passwordless_paramiko(tunnel.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; paramiko_tunnel(tunnel.py) &rarr; _try_passwordless_paramiko(tunnel.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; _try_passwordless_paramiko(tunnel.py) &rarr; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; init_kernel_info(runapp.py) &rarr; kernel_info(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; start(kernelspecapp.py) &rarr; input(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; try_passwordless_ssh(tunnel.py) &rarr; _try_passwordless_paramiko(tunnel.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; shutdown_kernel(manager.py) &rarr; finish_shutdown(manager.py) &rarr; _kill_kernel(manager.py) &rarr; _async_wait(manager.py) &rarr; is_alive(manager.py) &rarr; has_kernel(manager.py) &rarr; _launch_kernel(manager.py) . <br> &#187; poll(restarter.py) &rarr; restart_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; cleanup_resources(manager.py) &rarr; _close_control_socket(manager.py) &rarr; _create_connected_socket(connect.py) &rarr; _make_url(connect.py) . <br> &#187; restart_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; cleanup_resources(manager.py) &rarr; _close_control_socket(manager.py) &rarr; _create_connected_socket(connect.py) &rarr; _make_url(connect.py) . <br> &#187; finish_shutdown(manager.py) &rarr; _kill_kernel(manager.py) &rarr; _async_wait(manager.py) &rarr; is_alive(manager.py) &rarr; has_kernel(manager.py) &rarr; _launch_kernel(manager.py) . <br>', 'text_summary': "Subclasses may override  Prepares a kernel for startup in a separate process. return ip for localhost (almost always 127.0.0.1) test `ipython console --existing` loads a connection file. Prepares a kernel for startup in a separate process. Create a client configured to connect to our kernel. return ip for localhost (almost always 127.0.0.1)   Ensure that a sequence of kernel startups doesn't break anything. Sends a signal to the process group of the kernel (this. return zmq Socket connected to the IOPub channel. Pass a message to the ZMQ socket to send. return ip for localhost (almost always 127.0.0.1)   set up ssh tunnels, if needed. Start a new kernel, and return its Manager and Client. Send a string of raw input to the kernel. Return the connection info as a dict. Subclasses may override Start the polling of the kernel. Ensure that a sequence of kernel startups doesn't break anything. load ip addresses with socket.gethostbyname_ex uniq_stable(elems) -> list. return ip for localhost (almost always 127.0.0.1) test load_connection_file() after. Output hook when running inside an IPython kernel. Launches a localhost kernel, binding to the specified ports. test `ipython console --existing` loads a connection file. find a connection file, and return its absolute path. return ip for localhost (almost always 127.0.0.1)      find a connection file, and return its absolute path. tunnel connections to a kernel via ssh. decorator for proxying MKM.method(kernel_id) to individual KMs by ID    decorator for proxying MKM.method(kernel_id) to individual KMs by ID    decorator for proxying MKM.method(kernel_id) to individual KMs by ID    decorator for proxying MKM.method(kernel_id) to individual KMs by ID      decorator for proxying MKM.method(kernel_id) to individual KMs by ID      decorator for proxying MKM.method(kernel_id) to individual KMs by ID     decorator for proxying MKM.method(kernel_id) to individual KMs by ID     decorator for proxying MKM.method(kernel_id) to individual KMs by ID  Verify realpath is used when formatting connection file. For tests, create a file to indicate that we've started. Connect a socket to an address via an ssh tunnel. Returns a dict mapping kernel names to kernelspecs. handle kernel info reply. Given a message or header, return the header. Get the hb channel object for this kernel. Returns the id to associate with the kernel for this request. Get a message from the control channel. {connection_file})   Prepares a kernel for startup in a separate process. Send a raw message via ident path. {connection_file})  Restarts a kernel with the arguments that were used to launch it. Make a blocking client connected to my kernel. populate local and public IPs from flat list of all IPs. return the IP addresses that point to this machine. return ip for localhost (almost always 127.0.0.1)       return ip for localhost (almost always 127.0.0.1)   find the connection file, and load the info if found. Load connection info from JSON dict in self.connection_file. return ip for localhost (almost always 127.0.0.1)  Write connection info to JSON dict in self.connection_file. Get a message from the stdin channel. Immediately processes all pending messages on this channel. Return the number of running kernels. Verify realpath is used when formatting connection file. return zmq Socket connected to the Shell channel. Unserialize a msg_list to a nested message dict. Receive and return the reply for a given request. Request kernel info. {connection_file}) Write connection info to JSON dict in self.connection_file. {connection_file})  Context manager to create a kernel in a subprocess. Get a message from the iopub channel. Create an ssh tunnel using command-line ssh that connects port lport. Get a message from the shell channel. populate local and public IPs from flat list of all IPs. return the IP addresses for this machine that are visible to other machines. This is run in the ioloop thread when the kernel info reply is received. return zmq Socket connected to the StdIn channel. return the IP addresses that point to this machine. return zmq Socket connected to the Heartbeat channel. return ip for localhost (almost always 127.0.0.1)   find the connection file, and load the info if found. find the connection file, and load the info if found. Return a mapping of kernel names to resource directories from dir. populate local and public IPs from flat list of all IPs. decorator to ensure load_ips has been run before f. Returns a :class:`KernelSpec` instance for a given kernel_name. Send a shutdown request via control channel. Context manager to create a kernel in a subprocess. return zmq Socket connected to the Control channel. test load_connection_file() after. Write connection info to JSON dict in self.connection_file. Create a zmq Socket and connect it to the kernel. Forgets randomly assigned port numbers and cleans up the connection file.", 'files_count': 36, 'files': ['kernelspecapp.py', 'runapp.py', 'client.py', 'test_adapter.py', 'session.py', 'channels.py', 'managerabc.py', 'multikernelmanager.py', 'channelsabc.py', 'threaded.py', 'test_session.py', 'jsonutil.py', 'consoleapp.py', 'connect.py', 'test_connect.py', 'test_multikernelmanager.py', 'manager.py', 'kernelspec.py', 'test_manager.py', 'test_kernelspec.py', 'kernelapp.py', 'localinterfaces.py', 'adapter.py', 'test_localinterfaces.py', 'forward.py', 'test_jsonutil.py', 'test_client.py', 'tunnel.py', 'test_ssh.py', 'test_kernelmanager.py', 'utils.py', 'restarter.py', 'signalkernel.py', 'test_kernelapp.py', 'win_interrupt.py', 'launcher.py'], 'execution_path_count': 999, 'function_id_to_name_file': {'291': 'start(kernelspecapp.py)', '439': 'start(runapp.py)', '122': 'execute_interactive(client.py)', '121': '_stdin_hook_default(client.py)', '162': 'input(client.py)', '520': 'msg(test_adapter.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '534': 'msg(test_adapter.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '113': 'msg_ready(channels.py)', '87': 'msg_ready(channels.py)', '120': '_recv_reply(client.py)', '156': 'get_control_msg(client.py)', '158': 'get_shell_msg(client.py)', '110': 'get_msg(channels.py)', '108': '_recv(channels.py)', '84': 'get_msg(channels.py)', '82': '_recv(channels.py)', '119': '_output_hook_kernel(client.py)', '118': '_output_hook_default(client.py)', '117': 'reqrep(client.py)', '124': 'wrapped(client.py)', '112': 'is_alive(channels.py)', '373': 'is_alive(managerabc.py)', '412': 'is_alive(multikernelmanager.py)', '140': 'is_alive(channelsabc.py)', '86': 'is_alive(channels.py)', '732': 'is_alive(threaded.py)', '97': 'execute_interactive(client.py)', '96': '_stdin_hook_default(client.py)', '95': '_recv_reply(client.py)', '100': 'get_shell_msg(client.py)', '98': 'get_control_msg(client.py)', '91': 'reqrep(client.py)', '105': 'wrapped(client.py)', '94': '_output_hook_kernel(client.py)', '93': '_output_hook_default(client.py)', '683': 'test_bad_roundtrip(test_session.py)', '457': '__init__(session.py)', '459': '_check_packers(session.py)', '450': 'utcnow(session.py)', '244': 'squash_dates(jsonutil.py)', '685': 'test_bad_unpacker(test_session.py)', '682': 'test_bad_packer(test_session.py)', '684': 'test_bad_unpack(test_session.py)', '681': 'test_bad_pack(test_session.py)', '687': 'test_cull_digest_history(test_session.py)', '700': 'test_zero_digest_history(test_session.py)', '697': 'test_session_id(test_session.py)', '678': 'setUp(test_session.py)', '680': 'test_args(test_session.py)', '215': '__init__(consoleapp.py)', '198': '_session_default(connect.py)', '565': 'test_load_connection_file_session_with_kn(test_connect.py)', '564': 'test_load_connection_file_session(test_connect.py)', '516': 'test_default_version(test_adapter.py)', '519': 'setUp(test_adapter.py)', '690': 'test_datetimes_pickle(test_session.py)', '689': 'test_datetimes_msgpack(test_session.py)', '649': 'test_start_sequence_ipc_kernels(test_multikernelmanager.py)', '638': '_get_ipc_km(test_multikernelmanager.py)', '379': 'AsyncMultiKernelManager(multikernelmanager.py)', '381': 'MultiKernelManager(multikernelmanager.py)', '382': 'kernel_method(multikernelmanager.py)', '425': 'wrapped(multikernelmanager.py)', '645': 'test_ipc_lifecycle(test_multikernelmanager.py)', '644': 'test_ipc_cinfo(test_multikernelmanager.py)', '650': 'test_start_sequence_tcp_kernels(test_multikernelmanager.py)', '639': '_get_tcp_km(test_multikernelmanager.py)', '646': 'test_shutdown_all(test_multikernelmanager.py)', '651': 'test_tcp_cinfo(test_multikernelmanager.py)', '648': 'test_start_parallel_thread_kernels(test_multikernelmanager.py)', '643': 'tcp_lifecycle_with_loop(test_multikernelmanager.py)', '642': 'raw_tcp_lifecycle(test_multikernelmanager.py)', '647': 'test_start_parallel_process_kernels(test_multikernelmanager.py)', '652': 'test_tcp_lifecycle(test_multikernelmanager.py)', '653': 'test_tcp_lifecycle_with_kernel_id(test_multikernelmanager.py)', '664': 'test_start_sequence_ipc_kernels(test_multikernelmanager.py)', '654': '_get_ipc_km(test_multikernelmanager.py)', '660': 'test_ipc_lifecycle(test_multikernelmanager.py)', '659': 'test_ipc_cinfo(test_multikernelmanager.py)', '665': 'test_start_sequence_tcp_kernels(test_multikernelmanager.py)', '655': '_get_tcp_km(test_multikernelmanager.py)', '666': 'test_tcp_cinfo(test_multikernelmanager.py)', '668': 'test_tcp_lifecycle_with_kernel_id(test_multikernelmanager.py)', '661': 'test_shutdown_all(test_multikernelmanager.py)', '663': 'test_start_parallel_thread_kernels(test_multikernelmanager.py)', '658': 'tcp_lifecycle_with_loop(test_multikernelmanager.py)', '667': 'test_tcp_lifecycle(test_multikernelmanager.py)', '662': 'test_start_parallel_process_kernels(test_multikernelmanager.py)', '322': 'start_new_async_kernel(manager.py)', '319': 'AsyncKernelManager(manager.py)', '320': 'KernelManager(manager.py)', '254': 'KernelSpecManager(kernelspec.py)', '253': 'KernelSpec(kernelspec.py)', '224': 'AsyncIOLoopKernelManager(manager.py)', '225': 'IOLoopKernelManager(manager.py)', '635': 'test_connection_file_real_path(test_manager.py)', '629': 'test_subclass(test_kernelspec.py)', '618': 'setUp(test_kernelspec.py)', '289': '_kernel_spec_manager_default(kernelspecapp.py)', '345': '_kernel_spec_manager_default(manager.py)', '295': '_kernel_spec_manager_default(kernelspecapp.py)', '286': '_kernel_spec_manager_default(kernelspecapp.py)', '245': 'KernelApp(kernelapp.py)', '292': '_kernel_spec_manager_default(kernelspecapp.py)', '631': 'MyKSM(test_kernelspec.py)', '282': 'KernelSpecApp(kernelspecapp.py)', '284': 'RemoveKernelSpec(kernelspecapp.py)', '283': 'ListKernelSpecs(kernelspecapp.py)', '280': 'InstallKernelSpec(kernelspecapp.py)', '281': 'InstallNativeKernelSpec(kernelspecapp.py)', '321': 'run_kernel(manager.py)', '323': 'start_new_kernel(manager.py)', '366': 'start_kernel(manager.py)', '360': 'pre_start_kernel(manager.py)', '341': '_get_env_substitutions(manager.py)', '314': 'local_ips(localinterfaces.py)', '312': 'is_local_ip(localinterfaces.py)', '212': 'write_connection_file(connect.py)', '197': '_record_random_port_names(connect.py)', '353': 'format_kernel_cmd(manager.py)', '369': 'from_ns(manager.py)', '358': 'kernel_spec(manager.py)', '347': '_launch_kernel(manager.py)', '359': 'post_start_kernel(manager.py)', '338': '_connect_control_socket(manager.py)', '192': '_create_connected_socket(connect.py)', '196': '_make_url(connect.py)', '367': 'start_restarter(manager.py)', '364': 'shutdown_kernel(manager.py)', '362': 'request_shutdown(manager.py)', '480': 'send(session.py)', '50': 'adapt(adapter.py)', '482': 'serialize(session.py)', '483': 'sign(session.py)', '440': 'Message(session.py)', '734': 'send(threaded.py)', '738': 'thread_send(threaded.py)', '88': 'send(channels.py)', '114': 'send(channels.py)', '188': 'ConnectionFileMixin(connect.py)', '351': 'client(manager.py)', '208': 'get_connection_info(connect.py)', '346': '_kill_kernel(manager.py)', '365': 'signal_kernel(manager.py)', '354': 'has_kernel(manager.py)', '352': 'finish_shutdown(manager.py)', '357': 'is_alive(manager.py)', '350': 'cleanup_resources(manager.py)', '201': 'cleanup_ipc_files(connect.py)', '211': 'ports(connect.py)', '349': 'cleanup(manager.py)', '368': 'stop_restarter(manager.py)', '200': 'cleanup_connection_file(connect.py)', '310': '_requires_ips(localinterfaces.py)', '318': 'ips_loaded(localinterfaces.py)', '301': '_load_ips(localinterfaces.py)', '306': '_load_ips_ipconfig(localinterfaces.py)', '300': '_get_output(localinterfaces.py)', '309': '_populate_from_list(localinterfaces.py)', '299': 'NoIPAddresses(localinterfaces.py)', '316': 'public_ips(localinterfaces.py)', '311': '_uniq_stable(localinterfaces.py)', '304': '_load_ips_ifconfig(localinterfaces.py)', '305': '_load_ips_ip(localinterfaces.py)', '307': '_load_ips_netifaces(localinterfaces.py)', '302': '_load_ips_dumb(localinterfaces.py)', '634': 'test_load_ips(test_localinterfaces.py)', '303': '_load_ips_gethostbyname(localinterfaces.py)', '465': '_new_auth(session.py)', '560': 'test_find_connection_file(test_connect.py)', '572': 'initialize(test_connect.py)', '219': 'init_connection_file(consoleapp.py)', '209': 'load_connection_file(connect.py)', '210': 'load_connection_info(connect.py)', '195': '_ip_default(connect.py)', '315': 'localhost(localinterfaces.py)', '559': 'test_app_load_connection_file(test_connect.py)', '437': 'initialize(runapp.py)', '223': 'initialize(consoleapp.py)', '222': 'init_ssh(consoleapp.py)', '220': 'init_kernel_client(consoleapp.py)', '221': 'init_kernel_manager(consoleapp.py)', '255': 'NoSuchKernel(kernelspec.py)', '568': 'test_mixin_record_random_ports(test_connect.py)', '567': 'test_mixin_cleanup_random_ports(test_connect.py)', '621': 'test_find_all_specs(test_kernelspec.py)', '273': 'get_all_specs(kernelspec.py)', '272': 'find_kernel_specs(kernelspec.py)', '258': '_list_kernels_in(kernelspec.py)', '257': '_is_valid_kernel_name(kernelspec.py)', '256': '_is_kernel_dir(kernelspec.py)', '627': 'test_remove_kernel_spec(test_kernelspec.py)', '277': 'remove_kernel_spec(kernelspec.py)', '625': 'test_install_kernel_spec_prefix(test_kernelspec.py)', '626': 'test_kernel_spec_priority(test_kernelspec.py)', '624': 'test_install_kernel_spec(test_kernelspec.py)', '259': 'find_kernel_specs(kernelspec.py)', '622': 'test_find_kernel_specs(test_kernelspec.py)', '694': 'test_send(test_session.py)', '479': 'recv(session.py)', '474': 'deserialize(session.py)', '242': 'extract_dates(jsonutil.py)', '243': 'parse_date(jsonutil.py)', '240': '_ensure_tzinfo(jsonutil.py)', '492': 'handle(forward.py)', '695': 'test_send_raw(test_session.py)', '484': 'unserialize(session.py)', '696': 'test_serialize(test_session.py)', '578': 'test_parse_ms_precision(test_jsonutil.py)', '679': '_datetime_test(test_session.py)', '688': 'test_datetimes(test_session.py)', '575': 'test_date_default(test_jsonutil.py)', '576': 'test_extract_date_from_naive(test_jsonutil.py)', '577': 'test_extract_dates(test_jsonutil.py)', '330': 'restart_kernel(manager.py)', '333': 'start_kernel(manager.py)', '326': '_launch_kernel(manager.py)', '623': 'test_get_kernel_spec(test_kernelspec.py)', '267': '_find_spec_directory(kernelspec.py)', '632': 'find_kernel_specs(test_kernelspec.py)', '274': 'get_kernel_spec(kernelspec.py)', '633': 'get_kernel_spec(test_kernelspec.py)', '549': 'setUp(test_client.py)', '269': '_get_kernel_spec_by_name(kernelspec.py)', '278': '__init__(kernelspec.py)', '260': 'get_kernel_spec(kernelspec.py)', '698': 'test_tracking(test_session.py)', '328': 'interrupt_kernel(manager.py)', '191': 'write_connection_file(connect.py)', '109': 'close(channels.py)', '83': 'close(channels.py)', '730': 'close(threaded.py)', '132': 'close(channels.py)', '718': 'close(threaded.py)', '570': 'test_write_connection_file(test_connect.py)', '686': 'test_clone(test_session.py)', '458': '_add_digest(session.py)', '460': '_cull_digest_history(session.py)', '558': 'DummyConsoleApp(test_connect.py)', '214': 'JupyterConsoleApp(consoleapp.py)', '441': 'Session(session.py)', '213': 'IPythonConsoleApp(consoleapp.py)', '434': 'RunApp(runapp.py)', '392': '__init__(multikernelmanager.py)', '190': 'tunnel_to_kernel(connect.py)', '503': 'select_random_ports(tunnel.py)', '701': 'test_random_ports(test_ssh.py)', '386': 'shutdown_all(multikernelmanager.py)', '383': 'finish_shutdown(multikernelmanager.py)', '410': 'get_kernel(multikernelmanager.py)', '394': '_check_kernel_id(multikernelmanager.py)', '388': 'signal_kernel(multikernelmanager.py)', '385': 'restart_kernel(multikernelmanager.py)', '384': 'interrupt_kernel(multikernelmanager.py)', '387': 'shutdown_kernel(multikernelmanager.py)', '421': 'shutdown_kernel(multikernelmanager.py)', '420': 'shutdown_all(multikernelmanager.py)', '104': 'wait_for_ready(client.py)', '103': 'is_alive(client.py)', '123': 'wait_for_ready(client.py)', '165': 'is_alive(client.py)', '641': '_run_lifecycle(test_multikernelmanager.py)', '135': 'run(channels.py)', '128': '_create_socket(channels.py)', '101': 'get_stdin_msg(client.py)', '85': 'get_msgs(channels.py)', '99': 'get_iopub_msg(client.py)', '111': 'get_msgs(channels.py)', '620': 'test_cant_install_kernel_spec(test_kernelspec.py)', '275': 'install_kernel_spec(kernelspec.py)', '268': '_get_destination_dir(kernelspec.py)', '261': 'install_kernel_spec(kernelspec.py)', '614': 'test_start_sequence_process_kernels(test_kernelmanager.py)', '610': '_run_signaltest_lifecycle(test_kernelmanager.py)', '615': 'execute(test_kernelmanager.py)', '609': '_prepare_kernel(test_kernelmanager.py)', '611': 'test_start_parallel_process_kernels(test_kernelmanager.py)', '613': 'test_start_sequence_kernels(test_kernelmanager.py)', '612': 'test_start_parallel_thread_kernels(test_kernelmanager.py)', '398': '_kernel_manager_class_changed(multikernelmanager.py)', '396': '_create_kernel_manager_factory(multikernelmanager.py)', '424': 'create_kernel_manager(multikernelmanager.py)', '397': '_find_available_port(multikernelmanager.py)', '395': '_context_default(multikernelmanager.py)', '399': '_kernel_manager_factory_default(multikernelmanager.py)', '485': '__init__(session.py)', '90': 'AsyncKernelClient(client.py)', '147': 'KernelClient(client.py)', '139': 'HBChannelABC(channelsabc.py)', '138': 'ChannelABC(channelsabc.py)', '116': 'BlockingKernelClient(client.py)', '657': '_run_lifecycle(test_multikernelmanager.py)', '704': 'execute(utils.py)', '155': 'execute(client.py)', '148': 'validate_string_dict(client.py)', '423': 'start_kernel(multikernelmanager.py)', '415': 'pre_start_kernel(multikernelmanager.py)', '380': 'DuplicateKernelError(multikernelmanager.py)', '414': 'new_kernel_id(multikernelmanager.py)', '389': 'start_kernel(multikernelmanager.py)', '238': 'start(restarter.py)', '430': 'poll(restarter.py)', '433': 'stop(restarter.py)', '428': '_fire_callbacks(restarter.py)', '510': 'do_execute(signalkernel.py)', '501': 'openssh_tunnel(tunnel.py)', '494': 'SSHException(tunnel.py)', '497': '_stop_tunnel(tunnel.py)', '475': 'feed_identities(session.py)', '202': 'cleanup_random_ports(connect.py)', '106': 'ZMQSocketChannel(channels.py)', '226': 'as_zmqstream(manager.py)', '233': 'wrapped(manager.py)', '557': 'DummyConfigurable(test_connect.py)', '235': 'IOLoopKernelRestarter(restarter.py)', '426': 'KernelRestarter(restarter.py)', '234': 'AsyncIOLoopKernelRestarter(restarter.py)', '251': 'start(kernelapp.py)', '249': 'setup_signals(kernelapp.py)', '252': 'shutdown_handler(kernelapp.py)', '250': 'shutdown(kernelapp.py)', '248': 'log_connection_info(kernelapp.py)', '199': 'blocking_client(connect.py)', '725': 'stop_channels(threaded.py)', '676': '_bad_unpacker(test_session.py)', '536': 'test_complete_request(test_adapter.py)', '517': 'adapt(test_adapter.py)', '562': 'test_find_connection_file_local(test_connect.py)', '189': 'find_connection_file(connect.py)', '493': 'SubHander(forward.py)', '490': 'Handler(forward.py)', '241': 'date_default(jsonutil.py)', '597': 'test_subclasses(test_kernelmanager.py)', '703': 'AsyncKernelManagerWithCleanup(utils.py)', '595': 'test_signal_kernel_subprocesses(test_kernelmanager.py)', '598': 'execute(test_kernelmanager.py)', '702': 'AsyncKernelManagerSubclass(utils.py)', '591': 'transport(test_kernelmanager.py)', '606': 'test_templated_kspec_env(test_kernelmanager.py)', '599': '_env_test_body(test_kernelmanager.py)', '607': 'execute(test_kernelmanager.py)', '604': 'test_signal_kernel_subprocesses(test_kernelmanager.py)', '608': 'execute(test_kernelmanager.py)', '586': 'env(test_kernelmanager.py)', '712': 'stop(utils.py)', '711': 'start(utils.py)', '705': 'test_env(utils.py)', '630': 'test_validate_kernel_name(test_kernelspec.py)', '506': 'SignalTestApp(signalkernel.py)', '507': 'SignalTestKernel(signalkernel.py)', '617': '_install_sample_kernel(test_kernelspec.py)', '640': '_run_cinfo(test_multikernelmanager.py)', '619': 'tearDown(test_kernelspec.py)', '656': '_run_cinfo(test_multikernelmanager.py)', '569': 'test_secure_write(test_connect.py)', '573': 'check_user_only_permissions(test_connect.py)', '574': 'fetch_win32_permissions(test_connect.py)', '563': 'test_find_connection_file_relative(test_connect.py)', '561': 'test_find_connection_file_abspath(test_connect.py)', '539': 'test_input_request(test_adapter.py)', '537': 'test_display_data(test_adapter.py)', '540': 'test_inspect_reply(test_adapter.py)', '543': 'test_kernel_info_reply(test_adapter.py)', '542': 'test_inspect_request_token(test_adapter.py)', '535': 'test_complete_reply(test_adapter.py)', '541': 'test_inspect_request(test_adapter.py)', '538': 'test_execute_request(test_adapter.py)', '545': 'test_rename_type(test_adapter.py)', '544': 'test_no_adapt(test_adapter.py)', '546': 'test_same_version(test_adapter.py)', '514': 'V5toV4TestCase(test_adapter.py)', '512': 'AdapterTest(test_adapter.py)', '526': 'test_input_request(test_adapter.py)', '523': 'test_display_data(test_adapter.py)', '527': 'test_kernel_info_reply(test_adapter.py)', '530': 'test_object_info_reply_not_found(test_adapter.py)', '529': 'test_object_info_reply(test_adapter.py)', '531': 'test_object_info_request(test_adapter.py)', '521': 'test_complete_reply(test_adapter.py)', '522': 'test_complete_request(test_adapter.py)', '524': 'test_execute_reply(test_adapter.py)', '532': 'test_rename_type(test_adapter.py)', '525': 'test_execute_request(test_adapter.py)', '528': 'test_no_adapt(test_adapter.py)', '533': 'test_same_version(test_adapter.py)', '513': 'V4toV5TestCase(test_adapter.py)', '515': 'test_code_to_line_no_code(test_adapter.py)', '51': 'code_to_line(adapter.py)', '157': 'get_iopub_msg(client.py)', '710': '__exit__(utils.py)', '709': '__enter__(utils.py)', '580': 'test_kernelapp_lifecycle(test_kernelapp.py)', '579': '_launch(test_kernelapp.py)', '473': 'clone(session.py)', '481': 'send_raw(session.py)', '675': '_bad_packer(test_session.py)', '699': 'test_unique_msg_ids(test_session.py)', '445': 'msg_header(session.py)', '674': 'TestSession(test_session.py)', '673': 'SessionTestCase(test_session.py)', '556': 'test_shutdown(test_client.py)', '548': '_check_reply(test_client.py)', '550': 'test_comm_info(test_client.py)', '555': 'test_kernel_info(test_client.py)', '551': 'test_complete(test_client.py)', '554': 'test_inspect(test_client.py)', '553': 'test_history(test_client.py)', '150': '_handle_kernel_info_reply(client.py)', '125': 'HBChannel(channels.py)', '102': 'hb_channel(client.py)', '80': 'ZMQSocketChannel(channels.py)', '154': 'control_channel(client.py)', '723': 'ioloop(threaded.py)', '160': 'hb_channel(client.py)', '171': 'stdin_channel(client.py)', '164': 'iopub_channel(client.py)', '168': 'shell_channel(client.py)', '740': 'send_interrupt(win_interrupt.py)', '334': '__del__(manager.py)', '293': 'start(kernelspecapp.py)', '294': 'path_key(kernelspecapp.py)', '735': 'start(threaded.py)', '720': 'start(threaded.py)', '141': 'start(channelsabc.py)', '432': 'start(restarter.py)', '288': 'start(kernelspecapp.py)', '89': 'start(channels.py)', '115': 'start(channels.py)', '290': 'start(kernelspecapp.py)', '438': 'parse_command_line(runapp.py)', '218': 'build_kernel_argv(consoleapp.py)', '308': '_only_once(localinterfaces.py)', '317': 'wrapped(localinterfaces.py)', '47': 'V4toV5(adapter.py)', '46': 'Adapter(adapter.py)', '77': 'object_info_request(adapter.py)', '52': 'extract_oname_v4(adapter.py)', '70': 'complete_request(adapter.py)', '75': 'kernel_info_reply(adapter.py)', '49': '_version_str_to_list(adapter.py)', '48': 'V5toV4(adapter.py)', '53': '__call__(adapter.py)', '54': 'handle_reply_status_error(adapter.py)', '57': 'update_msg_type(adapter.py)', '56': 'update_metadata(adapter.py)', '55': 'update_header(adapter.py)', '247': 'initialize(kernelapp.py)', '246': '_record_started(kernelapp.py)', '585': 'config(test_kernelmanager.py)', '262': 'install_native_kernel_spec(kernelspec.py)', '276': 'install_native_kernel_spec(kernelspec.py)', '265': 'to_json(kernelspec.py)', '264': 'to_dict(kernelspec.py)', '449': 'test_msg2obj(session.py)', '453': '__init__(session.py)', '470': '_signature_scheme_changed(session.py)', '463': '_key_default(session.py)', '447': 'new_id_bytes(session.py)', '462': '_key_changed(session.py)', '443': 'default_secure(session.py)', '469': '_session_default(session.py)', '446': 'new_id(session.py)', '413': 'list_kernel_ids(multikernelmanager.py)', '721': 'stop(threaded.py)', '724': 'start_channels(threaded.py)', '722': '_check_kernel_info_reply(threaded.py)', '716': '__init__(threaded.py)', '416': 'remove_kernel(multikernelmanager.py)', '713': 'IOLoopThread(threaded.py)', '714': 'ThreadedKernelClient(threaded.py)', '715': 'ThreadedZMQSocketChannel(threaded.py)', '731': 'flush(threaded.py)', '727': '_flush(threaded.py)', '418': 'request_shutdown(multikernelmanager.py)', '402': 'cleanup_resources(multikernelmanager.py)', '408': 'finish_shutdown(multikernelmanager.py)', '393': '__len__(multikernelmanager.py)', '298': 'launch_kernel(launcher.py)', '739': 'create_interrupt_event(win_interrupt.py)', '741': 'SECURITY_ATTRIBUTES(win_interrupt.py)', '509': '__init__(signalkernel.py)', '127': '__init__(channels.py)', '126': 'InvalidPortNumber(channels.py)', '107': '__init__(channels.py)', '81': '__init__(channels.py)', '726': '__init__(threaded.py)', '737': 'setup_stream(threaded.py)', '728': '_handle_recv(threaded.py)', '729': 'call_handlers(threaded.py)', '136': 'stop(channels.py)', '133': 'is_beating(channels.py)', '145': 'time_to_dead(channelsabc.py)', '131': 'call_handlers(channels.py)', '130': '_poll(channels.py)', '435': 'handle_sigint(runapp.py)', '355': 'interrupt_kernel(manager.py)', '411': 'interrupt_kernel(multikernelmanager.py)', '372': 'interrupt_kernel(managerabc.py)', '505': 'tunnel_connection(tunnel.py)', '500': 'open_tunnel(tunnel.py)', '502': 'paramiko_tunnel(tunnel.py)', '499': '_try_passwordless_paramiko(tunnel.py)', '496': '_split_server(tunnel.py)', '495': '_paramiko_tunnel(tunnel.py)', '491': 'forward_tunnel(forward.py)', '436': 'init_kernel_info(runapp.py)', '137': 'unpause(channels.py)', '146': 'unpause(channelsabc.py)', '167': 'kernel_info(client.py)', '297': 'start(kernelspecapp.py)', '504': 'try_passwordless_ssh(tunnel.py)', '498': '_try_passwordless_openssh(tunnel.py)', '331': 'shutdown_kernel(manager.py)', '337': '_close_control_socket(manager.py)', '236': 'poll(restarter.py)', '363': 'restart_kernel(manager.py)', '203': 'connect_control(connect.py)', '207': 'connect_stdin(connect.py)', '206': 'connect_shell(connect.py)', '205': 'connect_iopub(connect.py)', '204': 'connect_hb(connect.py)', '228': 'start_restarter(manager.py)', '231': 'start_restarter(manager.py)', '327': 'finish_shutdown(manager.py)', '324': '_async_wait(manager.py)', '329': 'is_alive(manager.py)', '325': '_kill_kernel(manager.py)', '332': 'signal_kernel(manager.py)'}}, {'key': 1434, 'parent': 2239, 'tfidf_word': 'header id client kernel execute async blocking msg ', 'tfidf_method': 'execute msg msg_header msg_id msg msg BlockingKernelClient execute AsyncKernelClient ', 'lda_word': ' msg,header,execute,client,kernel,', 'lda_method': ' msg,execute,msg_header,msg_id,blockingkernelclient,', 'lsi_word': ' msg,execute,header,kernel,client,', 'lsi_method': ' msg,execute,msg_header,msg_id,asynckernelclient,', 'spm_method': '  &#187; execute(client.py) &rarr; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br>', 'text_summary': '', 'files_count': 4, 'files': ['utils.py', 'client.py', 'test_adapter.py', 'session.py'], 'execution_path_count': 3, 'function_id_to_name_file': {'704': 'execute(utils.py)', '155': 'execute(client.py)', '520': 'msg(test_adapter.py)', '534': 'msg(test_adapter.py)', '476': 'msg(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '90': 'AsyncKernelClient(client.py)', '116': 'BlockingKernelClient(client.py)'}}, {'key': 2233, 'parent': 2239, 'tfidf_word': 'input type identity found feed display data channels version msg ', 'tfidf_method': 'test_execute_request test_execute_reply test_serialize test_complete_request test_complete_reply is_complete interrupt_kernel start_channels test_no_adapt test_display_data ', 'lda_word': ' msg,header,test,kernel,client,', 'lda_method': ' msg,msg_id,msg_header,blockingkernelclient,asynckernelclient,', 'lsi_word': ' msg,header,test,kernel,client,', 'lsi_method': ' msg,msg_header,msg_id,blockingkernelclient,asynckernelclient,', 'spm_method': '  &#187; BlockingKernelClient(client.py) &rarr; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; kernel_info(client.py) &rarr; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; AsyncKernelClient(client.py) &rarr; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; inspect(client.py) &rarr; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; comm_info(client.py) &rarr; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; shutdown(client.py) &rarr; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; complete(client.py) &rarr; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; history(client.py) &rarr; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br>', 'text_summary': "Tab complete text in the kernel's namespace. Request kernel info.", 'files_count': 5, 'files': ['client.py', 'test_adapter.py', 'session.py', 'test_session.py', 'manager.py'], 'execution_path_count': 33, 'function_id_to_name_file': {'116': 'BlockingKernelClient(client.py)', '167': 'kernel_info(client.py)', '520': 'msg(test_adapter.py)', '534': 'msg(test_adapter.py)', '476': 'msg(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '170': 'start_channels(client.py)', '90': 'AsyncKernelClient(client.py)', '163': 'inspect(client.py)', '152': 'comm_info(client.py)', '169': 'shutdown(client.py)', '153': 'complete(client.py)', '161': 'history(client.py)', '526': 'test_input_request(test_adapter.py)', '523': 'test_display_data(test_adapter.py)', '527': 'test_kernel_info_reply(test_adapter.py)', '530': 'test_object_info_reply_not_found(test_adapter.py)', '529': 'test_object_info_reply(test_adapter.py)', '531': 'test_object_info_request(test_adapter.py)', '521': 'test_complete_reply(test_adapter.py)', '522': 'test_complete_request(test_adapter.py)', '524': 'test_execute_reply(test_adapter.py)', '525': 'test_execute_request(test_adapter.py)', '532': 'test_rename_type(test_adapter.py)', '528': 'test_no_adapt(test_adapter.py)', '533': 'test_same_version(test_adapter.py)', '695': 'test_send_raw(test_session.py)', '692': 'test_feed_identities(test_session.py)', '694': 'test_send(test_session.py)', '696': 'test_serialize(test_session.py)', '693': 'test_msg(test_session.py)', '328': 'interrupt_kernel(manager.py)', '166': 'is_complete(client.py)'}}, {'key': 1532, 'parent': 2289, 'tfidf_word': 'header id client kernel execute async blocking msg ', 'tfidf_method': 'execute msg msg_header msg_id msg BlockingKernelClient execute AsyncKernelClient ', 'lda_word': ' msg,execute,header,kernel,client,', 'lda_method': ' execute,msg,msg_header,msg_id,asynckernelclient,', 'lsi_word': ' msg,execute,header,kernel,client,', 'lsi_method': ' msg,execute,msg_header,msg_id,asynckernelclient,', 'spm_method': ' ', 'text_summary': '', 'files_count': 4, 'files': ['utils.py', 'client.py', 'test_adapter.py', 'session.py'], 'execution_path_count': 3, 'function_id_to_name_file': {'704': 'execute(utils.py)', '155': 'execute(client.py)', '534': 'msg(test_adapter.py)', '476': 'msg(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '90': 'AsyncKernelClient(client.py)', '116': 'BlockingKernelClient(client.py)'}}, {'key': 2283, 'parent': 2289, 'tfidf_word': 'type identity feed execute display data channels raw version msg ', 'tfidf_method': 'test_inspect_reply is_complete test_execute_request test_display_data test_serialize test_complete_reply interrupt_kernel start_channels test_inspect_request test_complete_request ', 'lda_word': ' msg,header,kernel,test,client,', 'lda_method': ' msg,msg_id,msg_header,blockingkernelclient,kernel_info,', 'lsi_word': ' msg,header,kernel,test,client,', 'lsi_method': ' msg,msg_id,msg_header,blockingkernelclient,asynckernelclient,', 'spm_method': ' ', 'text_summary': "Tab complete text in the kernel's namespace. Request kernel info.", 'files_count': 5, 'files': ['client.py', 'test_adapter.py', 'session.py', 'test_session.py', 'manager.py'], 'execution_path_count': 32, 'function_id_to_name_file': {'116': 'BlockingKernelClient(client.py)', '167': 'kernel_info(client.py)', '534': 'msg(test_adapter.py)', '476': 'msg(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '170': 'start_channels(client.py)', '90': 'AsyncKernelClient(client.py)', '163': 'inspect(client.py)', '152': 'comm_info(client.py)', '169': 'shutdown(client.py)', '153': 'complete(client.py)', '161': 'history(client.py)', '539': 'test_input_request(test_adapter.py)', '537': 'test_display_data(test_adapter.py)', '543': 'test_kernel_info_reply(test_adapter.py)', '540': 'test_inspect_reply(test_adapter.py)', '542': 'test_inspect_request_token(test_adapter.py)', '541': 'test_inspect_request(test_adapter.py)', '535': 'test_complete_reply(test_adapter.py)', '536': 'test_complete_request(test_adapter.py)', '538': 'test_execute_request(test_adapter.py)', '545': 'test_rename_type(test_adapter.py)', '546': 'test_same_version(test_adapter.py)', '544': 'test_no_adapt(test_adapter.py)', '695': 'test_send_raw(test_session.py)', '694': 'test_send(test_session.py)', '692': 'test_feed_identities(test_session.py)', '696': 'test_serialize(test_session.py)', '693': 'test_msg(test_session.py)', '328': 'interrupt_kernel(manager.py)', '166': 'is_complete(client.py)'}}, {'key': 2238, 'parent': 2718, 'tfidf_word': 'type identity feed display data channels raw version msg execute ', 'tfidf_method': 'test_inspect_reply is_complete test_execute_request test_display_data execute test_complete_reply interrupt_kernel start_channels test_inspect_request_token test_complete_request ', 'lda_word': ' msg,header,kernel,client,test,', 'lda_method': ' msg,msg_header,msg_id,asynckernelclient,blockingkernelclient,', 'lsi_word': ' msg,header,kernel,test,client,', 'lsi_method': ' msg,msg_id,msg_header,blockingkernelclient,asynckernelclient,', 'spm_method': '  &#187; execute(client.py) &rarr; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; AsyncKernelClient(client.py) &rarr; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; BlockingKernelClient(client.py) &rarr; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; kernel_info(client.py) &rarr; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; inspect(client.py) &rarr; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; comm_info(client.py) &rarr; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; shutdown(client.py) &rarr; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; complete(client.py) &rarr; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; history(client.py) &rarr; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br>', 'text_summary': "Tab complete text in the kernel's namespace. Request kernel info. Ask the kernel whether some code is complete and ready to execute.", 'files_count': 6, 'files': ['utils.py', 'client.py', 'test_adapter.py', 'session.py', 'test_session.py', 'manager.py'], 'execution_path_count': 35, 'function_id_to_name_file': {'704': 'execute(utils.py)', '155': 'execute(client.py)', '534': 'msg(test_adapter.py)', '520': 'msg(test_adapter.py)', '476': 'msg(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '90': 'AsyncKernelClient(client.py)', '116': 'BlockingKernelClient(client.py)', '167': 'kernel_info(client.py)', '170': 'start_channels(client.py)', '163': 'inspect(client.py)', '152': 'comm_info(client.py)', '169': 'shutdown(client.py)', '153': 'complete(client.py)', '161': 'history(client.py)', '539': 'test_input_request(test_adapter.py)', '537': 'test_display_data(test_adapter.py)', '543': 'test_kernel_info_reply(test_adapter.py)', '540': 'test_inspect_reply(test_adapter.py)', '542': 'test_inspect_request_token(test_adapter.py)', '541': 'test_inspect_request(test_adapter.py)', '535': 'test_complete_reply(test_adapter.py)', '536': 'test_complete_request(test_adapter.py)', '538': 'test_execute_request(test_adapter.py)', '545': 'test_rename_type(test_adapter.py)', '544': 'test_no_adapt(test_adapter.py)', '546': 'test_same_version(test_adapter.py)', '695': 'test_send_raw(test_session.py)', '692': 'test_feed_identities(test_session.py)', '694': 'test_send(test_session.py)', '696': 'test_serialize(test_session.py)', '693': 'test_msg(test_session.py)', '328': 'interrupt_kernel(manager.py)', '166': 'is_complete(client.py)'}}, {'key': 2290, 'parent': 2718, 'tfidf_word': 'type identity found feed display data channels version msg execute ', 'tfidf_method': 'test_kernel_info_reply test_execute_request test_execute_reply execute test_complete_request test_complete_reply interrupt_kernel start_channels test_object_info_reply test_display_data ', 'lda_word': ' msg,header,test,complete,info,', 'lda_method': ' msg_header,msg,msg_id,blockingkernelclient,asynckernelclient,', 'lsi_word': ' msg,header,kernel,test,client,', 'lsi_method': ' msg,msg_id,msg_header,blockingkernelclient,asynckernelclient,', 'spm_method': ' ', 'text_summary': "Tab complete text in the kernel's namespace. Request kernel info. Ask the kernel whether some code is complete and ready to execute.", 'files_count': 6, 'files': ['utils.py', 'client.py', 'test_adapter.py', 'session.py', 'test_session.py', 'manager.py'], 'execution_path_count': 36, 'function_id_to_name_file': {'704': 'execute(utils.py)', '155': 'execute(client.py)', '520': 'msg(test_adapter.py)', '476': 'msg(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '90': 'AsyncKernelClient(client.py)', '116': 'BlockingKernelClient(client.py)', '167': 'kernel_info(client.py)', '170': 'start_channels(client.py)', '163': 'inspect(client.py)', '152': 'comm_info(client.py)', '169': 'shutdown(client.py)', '153': 'complete(client.py)', '161': 'history(client.py)', '526': 'test_input_request(test_adapter.py)', '523': 'test_display_data(test_adapter.py)', '527': 'test_kernel_info_reply(test_adapter.py)', '530': 'test_object_info_reply_not_found(test_adapter.py)', '529': 'test_object_info_reply(test_adapter.py)', '531': 'test_object_info_request(test_adapter.py)', '521': 'test_complete_reply(test_adapter.py)', '522': 'test_complete_request(test_adapter.py)', '524': 'test_execute_reply(test_adapter.py)', '525': 'test_execute_request(test_adapter.py)', '532': 'test_rename_type(test_adapter.py)', '533': 'test_same_version(test_adapter.py)', '528': 'test_no_adapt(test_adapter.py)', '695': 'test_send_raw(test_session.py)', '694': 'test_send(test_session.py)', '692': 'test_feed_identities(test_session.py)', '696': 'test_serialize(test_session.py)', '693': 'test_msg(test_session.py)', '328': 'interrupt_kernel(manager.py)', '166': 'is_complete(client.py)'}}, {'key': 2354, 'parent': 2734, 'tfidf_word': 'id request async new restart start kernel shutdown send msg ', 'tfidf_method': 'shutdown_kernel request_shutdown msg msg_header msg_id start_new_async_kernel restart_kernel msg msg send ', 'lda_word': ' msg,kernel,shutdown,header,request,', 'lda_method': ' msg,restart_kernel,shutdown_kernel,msg_id,request_shutdown,', 'lsi_word': ' msg,shutdown,kernel,request,header,', 'lsi_method': ' msg,shutdown_kernel,request_shutdown,msg_header,msg_id,', 'spm_method': '  &#187; restart_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) &rarr; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; request_shutdown(manager.py) &rarr; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; start_new_async_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br>', 'text_summary': 'Restarts a kernel with the arguments that were used to launch it. Send a shutdown request via control channel.', 'files_count': 3, 'files': ['manager.py', 'session.py', 'test_adapter.py'], 'execution_path_count': 12, 'function_id_to_name_file': {'330': 'restart_kernel(manager.py)', '331': 'shutdown_kernel(manager.py)', '362': 'request_shutdown(manager.py)', '480': 'send(session.py)', '476': 'msg(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '322': 'start_new_async_kernel(manager.py)', '520': 'msg(test_adapter.py)', '534': 'msg(test_adapter.py)'}}, {'key': 2399, 'parent': 2734, 'tfidf_word': 'serialize identity handle feed default channels unique version send execute ', 'tfidf_method': 'test_tracking test_serialize test_send_raw is_complete test_feed_identities test_default_version execute start_channels test_msg handle ', 'lda_word': ' msg,inspect,client,blocking,kernel,', 'lda_method': ' msg,msg_header,msg_id,blockingkernelclient,asynckernelclient,', 'lsi_word': ' msg,header,kernel,client,test,', 'lsi_method': ' msg_id,msg_header,msg,asynckernelclient,blockingkernelclient,', 'spm_method': ' ', 'text_summary': 'Request kernel info. Request comm info. Pass a message to the ZMQ socket to send.', 'files_count': 7, 'files': ['forward.py', 'session.py', 'test_session.py', 'manager.py', 'utils.py', 'client.py', 'test_adapter.py'], 'execution_path_count': 29, 'function_id_to_name_file': {'492': 'handle(forward.py)', '480': 'send(session.py)', '476': 'msg(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '698': 'test_tracking(test_session.py)', '328': 'interrupt_kernel(manager.py)', '694': 'test_send(test_session.py)', '699': 'test_unique_msg_ids(test_session.py)', '704': 'execute(utils.py)', '155': 'execute(client.py)', '90': 'AsyncKernelClient(client.py)', '116': 'BlockingKernelClient(client.py)', '167': 'kernel_info(client.py)', '170': 'start_channels(client.py)', '163': 'inspect(client.py)', '152': 'comm_info(client.py)', '169': 'shutdown(client.py)', '153': 'complete(client.py)', '161': 'history(client.py)', '516': 'test_default_version(test_adapter.py)', '695': 'test_send_raw(test_session.py)', '692': 'test_feed_identities(test_session.py)', '693': 'test_msg(test_session.py)', '696': 'test_serialize(test_session.py)', '166': 'is_complete(client.py)'}}, {'key': 2291, 'parent': 2747, 'tfidf_word': 'type identity found feed display data channels interrupt version execute ', 'tfidf_method': 'test_input_request test_execute_request execute test_display_data test_complete_request test_complete_reply interrupt_kernel start_channels test_object_info_reply test_execute_reply ', 'lda_word': ' msg,header,extract,test,client,', 'lda_method': ' execute,msg,extract_header,blockingkernelclient,asynckernelclient,', 'lsi_word': ' msg,header,extract,kernel,test,', 'lsi_method': ' msg,extract_header,blockingkernelclient,asynckernelclient,execute,', 'spm_method': ' ', 'text_summary': "Ask the kernel whether some code is complete and ready to execute. Tab complete text in the kernel's namespace. Request kernel info. Given a message or header, return the header. message format.", 'files_count': 6, 'files': ['client.py', 'test_adapter.py', 'session.py', 'utils.py', 'test_session.py', 'manager.py'], 'execution_path_count': 36, 'function_id_to_name_file': {'116': 'BlockingKernelClient(client.py)', '167': 'kernel_info(client.py)', '520': 'msg(test_adapter.py)', '534': 'msg(test_adapter.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '170': 'start_channels(client.py)', '90': 'AsyncKernelClient(client.py)', '704': 'execute(utils.py)', '155': 'execute(client.py)', '163': 'inspect(client.py)', '152': 'comm_info(client.py)', '169': 'shutdown(client.py)', '153': 'complete(client.py)', '161': 'history(client.py)', '526': 'test_input_request(test_adapter.py)', '523': 'test_display_data(test_adapter.py)', '527': 'test_kernel_info_reply(test_adapter.py)', '530': 'test_object_info_reply_not_found(test_adapter.py)', '529': 'test_object_info_reply(test_adapter.py)', '531': 'test_object_info_request(test_adapter.py)', '521': 'test_complete_reply(test_adapter.py)', '522': 'test_complete_request(test_adapter.py)', '524': 'test_execute_reply(test_adapter.py)', '525': 'test_execute_request(test_adapter.py)', '532': 'test_rename_type(test_adapter.py)', '533': 'test_same_version(test_adapter.py)', '528': 'test_no_adapt(test_adapter.py)', '695': 'test_send_raw(test_session.py)', '694': 'test_send(test_session.py)', '692': 'test_feed_identities(test_session.py)', '696': 'test_serialize(test_session.py)', '693': 'test_msg(test_session.py)', '328': 'interrupt_kernel(manager.py)', '166': 'is_complete(client.py)'}}, {'key': 2378, 'parent': 2747, 'tfidf_word': 'interrupt type identity feed display data channels raw version execute ', 'tfidf_method': 'test_inspect_reply test_execute_request execute test_complete_request test_complete_reply interrupt_kernel start_channels is_complete test_inspect_request_token test_display_data ', 'lda_word': ' msg,extract,header,client,kernel,', 'lda_method': ' test_kernel_info_reply,msg,extract_header,blockingkernelclient,asynckernelclient,', 'lsi_word': ' msg,header,extract,kernel,test,', 'lsi_method': ' msg,extract_header,asynckernelclient,blockingkernelclient,execute,', 'spm_method': ' ', 'text_summary': "Ask the kernel whether some code is complete and ready to execute. Tab complete text in the kernel's namespace. Request kernel info. Given a message or header, return the header. message format.", 'files_count': 6, 'files': ['client.py', 'test_adapter.py', 'session.py', 'utils.py', 'test_session.py', 'manager.py'], 'execution_path_count': 35, 'function_id_to_name_file': {'116': 'BlockingKernelClient(client.py)', '167': 'kernel_info(client.py)', '534': 'msg(test_adapter.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '170': 'start_channels(client.py)', '90': 'AsyncKernelClient(client.py)', '704': 'execute(utils.py)', '155': 'execute(client.py)', '163': 'inspect(client.py)', '152': 'comm_info(client.py)', '169': 'shutdown(client.py)', '153': 'complete(client.py)', '161': 'history(client.py)', '536': 'test_complete_request(test_adapter.py)', '538': 'test_execute_request(test_adapter.py)', '545': 'test_rename_type(test_adapter.py)', '544': 'test_no_adapt(test_adapter.py)', '546': 'test_same_version(test_adapter.py)', '695': 'test_send_raw(test_session.py)', '692': 'test_feed_identities(test_session.py)', '694': 'test_send(test_session.py)', '693': 'test_msg(test_session.py)', '696': 'test_serialize(test_session.py)', '328': 'interrupt_kernel(manager.py)', '166': 'is_complete(client.py)', '539': 'test_input_request(test_adapter.py)', '537': 'test_display_data(test_adapter.py)', '543': 'test_kernel_info_reply(test_adapter.py)', '542': 'test_inspect_request_token(test_adapter.py)', '540': 'test_inspect_reply(test_adapter.py)', '535': 'test_complete_reply(test_adapter.py)', '541': 'test_inspect_request(test_adapter.py)'}}, {'key': 2686, 'parent': 2781, 'tfidf_word': 'raw identity handle feed default channels tracking version send execute ', 'tfidf_method': 'start_channels test_default_version test_feed_identities test_msg is_complete test_send_raw test_serialize test_tracking execute handle ', 'lda_word': ' msg,header,extract,test,send,', 'lda_method': ' msg,extract_header,asynckernelclient,shutdown,kernel_info,', 'lsi_word': ' msg,extract,header,kernel,client,', 'lsi_method': ' msg,extract_header,asynckernelclient,blockingkernelclient,execute,', 'spm_method': ' ', 'text_summary': "wrapper for doing common steps for validating an execution request. Ask the kernel whether some code is complete and ready to execute. Pass a message to the ZMQ socket to send. Tab complete text in the kernel's namespace. Request kernel info. Request comm info. Given a message or header, return the header. message format.", 'files_count': 7, 'files': ['test_session.py', 'session.py', 'forward.py', 'manager.py', 'client.py', 'utils.py', 'test_adapter.py'], 'execution_path_count': 28, 'function_id_to_name_file': {'698': 'test_tracking(test_session.py)', '480': 'send(session.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '492': 'handle(forward.py)', '328': 'interrupt_kernel(manager.py)', '694': 'test_send(test_session.py)', '116': 'BlockingKernelClient(client.py)', '167': 'kernel_info(client.py)', '170': 'start_channels(client.py)', '90': 'AsyncKernelClient(client.py)', '704': 'execute(utils.py)', '155': 'execute(client.py)', '163': 'inspect(client.py)', '152': 'comm_info(client.py)', '169': 'shutdown(client.py)', '153': 'complete(client.py)', '161': 'history(client.py)', '516': 'test_default_version(test_adapter.py)', '695': 'test_send_raw(test_session.py)', '692': 'test_feed_identities(test_session.py)', '696': 'test_serialize(test_session.py)', '693': 'test_msg(test_session.py)', '166': 'is_complete(client.py)'}}, {'key': 2748, 'parent': 2781, 'tfidf_word': 'identity feed display data channels interrupt version found token execute ', 'tfidf_method': 'test_no_adapt test_kernel_info_reply test_input_request test_execute_request test_execute_reply test_display_data test_complete_request test_complete_reply test_display_data test_object_info_reply_not_found ', 'lda_word': ' msg,extract,header,test,kernel,', 'lda_method': ' msg,extract_header,blockingkernelclient,history,shutdown,', 'lsi_word': ' msg,extract,header,kernel,test,', 'lsi_method': ' msg,extract_header,asynckernelclient,blockingkernelclient,execute,', 'spm_method': ' ', 'text_summary': "Ask the kernel whether some code is complete and ready to execute. Tab complete text in the kernel's namespace. Request kernel info. Given a message or header, return the header. message format.", 'files_count': 6, 'files': ['client.py', 'test_adapter.py', 'session.py', 'utils.py', 'test_session.py', 'manager.py'], 'execution_path_count': 71, 'function_id_to_name_file': {'116': 'BlockingKernelClient(client.py)', '167': 'kernel_info(client.py)', '534': 'msg(test_adapter.py)', '520': 'msg(test_adapter.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '170': 'start_channels(client.py)', '90': 'AsyncKernelClient(client.py)', '704': 'execute(utils.py)', '155': 'execute(client.py)', '163': 'inspect(client.py)', '152': 'comm_info(client.py)', '169': 'shutdown(client.py)', '153': 'complete(client.py)', '161': 'history(client.py)', '539': 'test_input_request(test_adapter.py)', '537': 'test_display_data(test_adapter.py)', '543': 'test_kernel_info_reply(test_adapter.py)', '540': 'test_inspect_reply(test_adapter.py)', '542': 'test_inspect_request_token(test_adapter.py)', '541': 'test_inspect_request(test_adapter.py)', '535': 'test_complete_reply(test_adapter.py)', '536': 'test_complete_request(test_adapter.py)', '538': 'test_execute_request(test_adapter.py)', '545': 'test_rename_type(test_adapter.py)', '546': 'test_same_version(test_adapter.py)', '544': 'test_no_adapt(test_adapter.py)', '695': 'test_send_raw(test_session.py)', '694': 'test_send(test_session.py)', '692': 'test_feed_identities(test_session.py)', '696': 'test_serialize(test_session.py)', '693': 'test_msg(test_session.py)', '328': 'interrupt_kernel(manager.py)', '166': 'is_complete(client.py)', '524': 'test_execute_reply(test_adapter.py)', '525': 'test_execute_request(test_adapter.py)', '532': 'test_rename_type(test_adapter.py)', '528': 'test_no_adapt(test_adapter.py)', '533': 'test_same_version(test_adapter.py)', '526': 'test_input_request(test_adapter.py)', '523': 'test_display_data(test_adapter.py)', '527': 'test_kernel_info_reply(test_adapter.py)', '530': 'test_object_info_reply_not_found(test_adapter.py)', '531': 'test_object_info_request(test_adapter.py)', '529': 'test_object_info_reply(test_adapter.py)', '522': 'test_complete_request(test_adapter.py)', '521': 'test_complete_reply(test_adapter.py)'}}, {'key': 2713, 'parent': 2772, 'tfidf_word': 'message control alive utcnow send kernel connect socket cleanup msg ', 'tfidf_method': 'sign send utcnow Message stop_restarter thread_send is_alive _connect_control_socket serialize send ', 'lda_word': ' kernel,shutdown,msg,execute,poll,', 'lda_method': ' do_execute,restart_kernel,poll,shutdown_kernel,request_shutdown,', 'lsi_word': ' kernel,shutdown,msg,execute,restart,', 'lsi_method': ' msg,do_execute,restart_kernel,shutdown_kernel,poll,', 'spm_method': '  &#187; do_execute(signalkernel.py) &rarr; poll(restarter.py) &rarr; restart_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; poll(restarter.py) &rarr; restart_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; restart_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br>', 'text_summary': "Cleanup connection file *if we wrote it*. Sends a signal to the process group of the kernel (this. Pass a message to the ZMQ socket to send. Send a shutdown request via control channel. Wait for kernel shutdown, then kill process if it doesn't shutdown. Given a message or header, return the header. Create a zmq Socket and connect it to the kernel. Cleanup ipc files if we wrote them.", 'files_count': 9, 'files': ['signalkernel.py', 'restarter.py', 'manager.py', 'session.py', 'test_adapter.py', 'adapter.py', 'connect.py', 'threaded.py', 'channels.py'], 'execution_path_count': 31, 'function_id_to_name_file': {'510': 'do_execute(signalkernel.py)', '236': 'poll(restarter.py)', '363': 'restart_kernel(manager.py)', '364': 'shutdown_kernel(manager.py)', '362': 'request_shutdown(manager.py)', '476': 'msg(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '480': 'send(session.py)', '520': 'msg(test_adapter.py)', '534': 'msg(test_adapter.py)', '444': 'extract_header(session.py)', '50': 'adapt(adapter.py)', '450': 'utcnow(session.py)', '482': 'serialize(session.py)', '483': 'sign(session.py)', '440': 'Message(session.py)', '338': '_connect_control_socket(manager.py)', '192': '_create_connected_socket(connect.py)', '196': '_make_url(connect.py)', '734': 'send(threaded.py)', '738': 'thread_send(threaded.py)', '88': 'send(channels.py)', '114': 'send(channels.py)', '346': '_kill_kernel(manager.py)', '365': 'signal_kernel(manager.py)', '354': 'has_kernel(manager.py)', '347': '_launch_kernel(manager.py)', '352': 'finish_shutdown(manager.py)', '357': 'is_alive(manager.py)', '350': 'cleanup_resources(manager.py)', '201': 'cleanup_ipc_files(connect.py)', '211': 'ports(connect.py)', '349': 'cleanup(manager.py)', '368': 'stop_restarter(manager.py)', '200': 'cleanup_connection_file(connect.py)'}}, {'key': 2744, 'parent': 2772, 'tfidf_word': 'substitution callback restarter stop start connect socket cleanup spec kernel ', 'tfidf_method': 'is_local_ip KernelSpec stop cleanup_random_ports cleanup_connection_file _make_url _create_connected_socket is_alive kernel_spec is_alive ', 'lda_word': ' execute,poll,stop,kernel,alive,', 'lda_method': ' do_execute,poll,post_start_kernel,restart_kernel,start_kernel,', 'lsi_word': ' kernel,start,execute,poll,restart,', 'lsi_method': ' poll,do_execute,restart_kernel,start_kernel,pre_start_kernel,', 'spm_method': '  &#187; do_execute(signalkernel.py) &rarr; poll(restarter.py) &rarr; restart_kernel(manager.py) &rarr; start_kernel(manager.py) &rarr; pre_start_kernel(manager.py) &rarr; write_connection_file(connect.py) &rarr; _record_random_port_names(connect.py) . <br> &#187; poll(restarter.py) &rarr; restart_kernel(manager.py) &rarr; start_kernel(manager.py) &rarr; pre_start_kernel(manager.py) &rarr; write_connection_file(connect.py) &rarr; _record_random_port_names(connect.py) . <br>', 'text_summary': 'Write connection info to JSON dict in self.connection_file. Restarts a kernel with the arguments that were used to launch it. {connection_file})    Restarts a kernel with the arguments that were used to launch it. Forgets randomly assigned port numbers and cleans up the connection file.', 'files_count': 11, 'files': ['signalkernel.py', 'restarter.py', 'managerabc.py', 'multikernelmanager.py', 'channelsabc.py', 'threaded.py', 'channels.py', 'manager.py', 'connect.py', 'kernelspec.py', 'localinterfaces.py'], 'execution_path_count': 21, 'function_id_to_name_file': {'510': 'do_execute(signalkernel.py)', '236': 'poll(restarter.py)', '373': 'is_alive(managerabc.py)', '428': '_fire_callbacks(restarter.py)', '412': 'is_alive(multikernelmanager.py)', '140': 'is_alive(channelsabc.py)', '419': 'restart_kernel(multikernelmanager.py)', '375': 'restart_kernel(managerabc.py)', '732': 'is_alive(threaded.py)', '239': 'stop(restarter.py)', '86': 'is_alive(channels.py)', '112': 'is_alive(channels.py)', '363': 'restart_kernel(manager.py)', '366': 'start_kernel(manager.py)', '360': 'pre_start_kernel(manager.py)', '212': 'write_connection_file(connect.py)', '197': '_record_random_port_names(connect.py)', '353': 'format_kernel_cmd(manager.py)', '369': 'from_ns(manager.py)', '358': 'kernel_spec(manager.py)', '253': 'KernelSpec(kernelspec.py)', '347': '_launch_kernel(manager.py)', '341': '_get_env_substitutions(manager.py)', '314': 'local_ips(localinterfaces.py)', '312': 'is_local_ip(localinterfaces.py)', '202': 'cleanup_random_ports(connect.py)', '200': 'cleanup_connection_file(connect.py)', '359': 'post_start_kernel(manager.py)', '338': '_connect_control_socket(manager.py)', '192': '_create_connected_socket(connect.py)', '196': '_make_url(connect.py)', '367': 'start_restarter(manager.py)'}}, {'key': 2782, 'parent': 2803, 'tfidf_word': 'ready shell control kernel reqrep wrap get recv msg output ', 'tfidf_method': 'is_alive get_control_msg get_shell_msg get_control_msg wrapped _output_hook_kernel reqrep reqrep _output_hook_kernel wrapped ', 'lda_word': ' start,execute,interactive,wrap,reqrep,', 'lda_method': ' start,execute_interactive,input,msg_id,msg_header,', 'lsi_word': ' msg,start,execute,interactive,hook,', 'lsi_method': ' start,msg,execute_interactive,stdin_hook_default,input,', 'spm_method': '  &#187; start(kernelspecapp.py) &rarr; start(runapp.py) &rarr; execute_interactive(client.py) &rarr; _stdin_hook_default(client.py) &rarr; input(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; start(runapp.py) &rarr; execute_interactive(client.py) &rarr; _stdin_hook_default(client.py) &rarr; input(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; execute_interactive(client.py) &rarr; _stdin_hook_default(client.py) &rarr; input(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; _stdin_hook_default(client.py) &rarr; input(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; input(client.py) &rarr; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; execute_interactive(client.py) &rarr; _stdin_hook_default(client.py) &rarr; input(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; _stdin_hook_default(client.py) &rarr; input(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br>', 'text_summary': 'Output hook when running inside an IPython kernel. Handle an input request. Start the polling of the kernel. Receive and return the reply for a given request. Send a string of raw input to the kernel. Get a message from the shell channel. Given a message or header, return the header. Get a message from the control channel. Is there a message that has been received?. Default hook for redisplaying plain-text output.', 'files_count': 10, 'files': ['kernelspecapp.py', 'runapp.py', 'client.py', 'test_adapter.py', 'session.py', 'channels.py', 'managerabc.py', 'multikernelmanager.py', 'channelsabc.py', 'threaded.py'], 'execution_path_count': 52, 'function_id_to_name_file': {'291': 'start(kernelspecapp.py)', '439': 'start(runapp.py)', '122': 'execute_interactive(client.py)', '121': '_stdin_hook_default(client.py)', '162': 'input(client.py)', '520': 'msg(test_adapter.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '534': 'msg(test_adapter.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '113': 'msg_ready(channels.py)', '87': 'msg_ready(channels.py)', '120': '_recv_reply(client.py)', '156': 'get_control_msg(client.py)', '158': 'get_shell_msg(client.py)', '110': 'get_msg(channels.py)', '108': '_recv(channels.py)', '84': 'get_msg(channels.py)', '82': '_recv(channels.py)', '119': '_output_hook_kernel(client.py)', '118': '_output_hook_default(client.py)', '117': 'reqrep(client.py)', '124': 'wrapped(client.py)', '112': 'is_alive(channels.py)', '373': 'is_alive(managerabc.py)', '412': 'is_alive(multikernelmanager.py)', '140': 'is_alive(channelsabc.py)', '86': 'is_alive(channels.py)', '732': 'is_alive(threaded.py)', '97': 'execute_interactive(client.py)', '96': '_stdin_hook_default(client.py)', '95': '_recv_reply(client.py)', '100': 'get_shell_msg(client.py)', '98': 'get_control_msg(client.py)', '91': 'reqrep(client.py)', '105': 'wrapped(client.py)', '94': '_output_hook_kernel(client.py)', '93': '_output_hook_default(client.py)'}}, {'key': 2802, 'parent': 2803, 'tfidf_word': 'native io digest flush permission restarter msg code tunnel ip ', 'tfidf_method': 'fetch_win32_permissions test_extract_date_from_naive test_extract_dates test_parse_ms_precision _launch test_kernelapp_lifecycle config new_id execute_interactive restart_kernel ', 'lda_word': ' kernel,shutdown,spec,init,test,', 'lda_method': ' is_alive,initialize,close,adapt,launch_kernel,', 'lsi_word': ' kernel,start,spec,manager,shutdown,', 'lsi_method': ' msg,extract_header,shutdown_kernel,msg_header,msg_id,', 'spm_method': '  &#187; test_start_parallel_thread_kernels(test_multikernelmanager.py) &rarr; raw_tcp_lifecycle(test_multikernelmanager.py) &rarr; _get_tcp_km(test_multikernelmanager.py) &rarr; AsyncMultiKernelManager(multikernelmanager.py) &rarr; MultiKernelManager(multikernelmanager.py) &rarr; kernel_method(multikernelmanager.py) &rarr; wrapped(multikernelmanager.py) . <br> &#187; tcp_lifecycle_with_loop(test_multikernelmanager.py) &rarr; raw_tcp_lifecycle(test_multikernelmanager.py) &rarr; _get_tcp_km(test_multikernelmanager.py) &rarr; AsyncMultiKernelManager(multikernelmanager.py) &rarr; MultiKernelManager(multikernelmanager.py) &rarr; kernel_method(multikernelmanager.py) &rarr; wrapped(multikernelmanager.py) . <br> &#187; raw_tcp_lifecycle(test_multikernelmanager.py) &rarr; _get_tcp_km(test_multikernelmanager.py) &rarr; AsyncMultiKernelManager(multikernelmanager.py) &rarr; MultiKernelManager(multikernelmanager.py) &rarr; kernel_method(multikernelmanager.py) &rarr; wrapped(multikernelmanager.py) . <br> &#187; test_start_parallel_process_kernels(test_multikernelmanager.py) &rarr; raw_tcp_lifecycle(test_multikernelmanager.py) &rarr; _get_tcp_km(test_multikernelmanager.py) &rarr; AsyncMultiKernelManager(multikernelmanager.py) &rarr; MultiKernelManager(multikernelmanager.py) &rarr; kernel_method(multikernelmanager.py) &rarr; wrapped(multikernelmanager.py) . <br> &#187; test_start_parallel_thread_kernels(test_multikernelmanager.py) &rarr; test_tcp_lifecycle(test_multikernelmanager.py) &rarr; _get_tcp_km(test_multikernelmanager.py) &rarr; MultiKernelManager(multikernelmanager.py) &rarr; kernel_method(multikernelmanager.py) &rarr; wrapped(multikernelmanager.py) . <br> &#187; tcp_lifecycle_with_loop(test_multikernelmanager.py) &rarr; test_tcp_lifecycle(test_multikernelmanager.py) &rarr; _get_tcp_km(test_multikernelmanager.py) &rarr; MultiKernelManager(multikernelmanager.py) &rarr; kernel_method(multikernelmanager.py) &rarr; wrapped(multikernelmanager.py) . <br> &#187; test_start_parallel_process_kernels(test_multikernelmanager.py) &rarr; test_tcp_lifecycle(test_multikernelmanager.py) &rarr; _get_tcp_km(test_multikernelmanager.py) &rarr; MultiKernelManager(multikernelmanager.py) &rarr; kernel_method(multikernelmanager.py) &rarr; wrapped(multikernelmanager.py) . <br> &#187; start_new_async_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; finish_shutdown(manager.py) &rarr; _async_wait(manager.py) &rarr; is_alive(manager.py) &rarr; has_kernel(manager.py) &rarr; _launch_kernel(manager.py) . <br> &#187; run_kernel(manager.py) &rarr; start_new_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; start_new_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; initialize(test_connect.py) &rarr; init_connection_file(consoleapp.py) &rarr; load_connection_file(connect.py) &rarr; load_connection_info(connect.py) &rarr; _ip_default(connect.py) &rarr; localhost(localinterfaces.py) . <br> &#187; initialize(runapp.py) &rarr; handle_sigint(runapp.py) &rarr; interrupt_kernel(manager.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; restart_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; finish_shutdown(manager.py) &rarr; _async_wait(manager.py) &rarr; is_alive(manager.py) &rarr; has_kernel(manager.py) &rarr; _launch_kernel(manager.py) . <br> &#187; tunnel_to_kernel(connect.py) &rarr; try_passwordless_ssh(tunnel.py) &rarr; _try_passwordless_paramiko(tunnel.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; do_execute(signalkernel.py) &rarr; poll(restarter.py) &rarr; restart_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; cleanup_resources(manager.py) &rarr; _close_control_socket(manager.py) &rarr; _create_connected_socket(connect.py) &rarr; _make_url(connect.py) . <br> &#187; start(kernelspecapp.py) &rarr; start(kernelspecapp.py) &rarr; input(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; handle_sigint(runapp.py) &rarr; interrupt_kernel(manager.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; tunnel_connection(tunnel.py) &rarr; open_tunnel(tunnel.py) &rarr; paramiko_tunnel(tunnel.py) &rarr; _try_passwordless_paramiko(tunnel.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; open_tunnel(tunnel.py) &rarr; paramiko_tunnel(tunnel.py) &rarr; _try_passwordless_paramiko(tunnel.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; paramiko_tunnel(tunnel.py) &rarr; _try_passwordless_paramiko(tunnel.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; _try_passwordless_paramiko(tunnel.py) &rarr; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; init_kernel_info(runapp.py) &rarr; kernel_info(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; start(kernelspecapp.py) &rarr; input(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; try_passwordless_ssh(tunnel.py) &rarr; _try_passwordless_paramiko(tunnel.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; shutdown_kernel(manager.py) &rarr; finish_shutdown(manager.py) &rarr; _kill_kernel(manager.py) &rarr; _async_wait(manager.py) &rarr; is_alive(manager.py) &rarr; has_kernel(manager.py) &rarr; _launch_kernel(manager.py) . <br> &#187; poll(restarter.py) &rarr; restart_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; cleanup_resources(manager.py) &rarr; _close_control_socket(manager.py) &rarr; _create_connected_socket(connect.py) &rarr; _make_url(connect.py) . <br> &#187; restart_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; cleanup_resources(manager.py) &rarr; _close_control_socket(manager.py) &rarr; _create_connected_socket(connect.py) &rarr; _make_url(connect.py) . <br> &#187; finish_shutdown(manager.py) &rarr; _kill_kernel(manager.py) &rarr; _async_wait(manager.py) &rarr; is_alive(manager.py) &rarr; has_kernel(manager.py) &rarr; _launch_kernel(manager.py) . <br>', 'text_summary': "Subclasses may override  Prepares a kernel for startup in a separate process. return ip for localhost (almost always 127.0.0.1) test `ipython console --existing` loads a connection file. Prepares a kernel for startup in a separate process. Create a client configured to connect to our kernel. return ip for localhost (almost always 127.0.0.1)   Ensure that a sequence of kernel startups doesn't break anything. Sends a signal to the process group of the kernel (this. return zmq Socket connected to the IOPub channel. Pass a message to the ZMQ socket to send. return ip for localhost (almost always 127.0.0.1)   set up ssh tunnels, if needed. Start a new kernel, and return its Manager and Client. Send a string of raw input to the kernel. Return the connection info as a dict. Subclasses may override Start the polling of the kernel. Ensure that a sequence of kernel startups doesn't break anything. load ip addresses with socket.gethostbyname_ex uniq_stable(elems) -> list. return ip for localhost (almost always 127.0.0.1) test load_connection_file() after. Launches a localhost kernel, binding to the specified ports. decorator to ensure load_ips has been run before f. test `ipython console --existing` loads a connection file. find a connection file, and return its absolute path. return ip for localhost (almost always 127.0.0.1)      find a connection file, and return its absolute path. tunnel connections to a kernel via ssh. decorator for proxying MKM.method(kernel_id) to individual KMs by ID    decorator for proxying MKM.method(kernel_id) to individual KMs by ID    decorator for proxying MKM.method(kernel_id) to individual KMs by ID    decorator for proxying MKM.method(kernel_id) to individual KMs by ID      decorator for proxying MKM.method(kernel_id) to individual KMs by ID      decorator for proxying MKM.method(kernel_id) to individual KMs by ID     decorator for proxying MKM.method(kernel_id) to individual KMs by ID     decorator for proxying MKM.method(kernel_id) to individual KMs by ID  Verify realpath is used when formatting connection file. For tests, create a file to indicate that we've started. Connect a socket to an address via an ssh tunnel. Returns a dict mapping kernel names to kernelspecs. handle kernel info reply. Given a message or header, return the header. Get the hb channel object for this kernel. Returns the id to associate with the kernel for this request. Send a raw message via ident path. {connection_file})   Prepares a kernel for startup in a separate process. {connection_file})  Restarts a kernel with the arguments that were used to launch it. Make a blocking client connected to my kernel. populate local and public IPs from flat list of all IPs. return the IP addresses that point to this machine. return ip for localhost (almost always 127.0.0.1)       return ip for localhost (almost always 127.0.0.1)   find the connection file, and load the info if found. Load connection info from JSON dict in self.connection_file. return ip for localhost (almost always 127.0.0.1)  Write connection info to JSON dict in self.connection_file. Immediately processes all pending messages on this channel. Return the number of running kernels. Verify realpath is used when formatting connection file. return zmq Socket connected to the Shell channel. Unserialize a msg_list to a nested message dict. Request kernel info. {connection_file}) Write connection info to JSON dict in self.connection_file. {connection_file})  Context manager to create a kernel in a subprocess. Create an ssh tunnel using command-line ssh that connects port lport. Get a message from the shell channel. populate local and public IPs from flat list of all IPs. return the IP addresses for this machine that are visible to other machines. This is run in the ioloop thread when the kernel info reply is received. return zmq Socket connected to the StdIn channel. return the IP addresses that point to this machine. return zmq Socket connected to the Heartbeat channel. return ip for localhost (almost always 127.0.0.1)   find the connection file, and load the info if found. find the connection file, and load the info if found. Return a mapping of kernel names to resource directories from dir. populate local and public IPs from flat list of all IPs. decorator to ensure load_ips has been run before f. Returns a :class:`KernelSpec` instance for a given kernel_name. Context manager to create a kernel in a subprocess. return zmq Socket connected to the Control channel. test load_connection_file() after. Write connection info to JSON dict in self.connection_file. Create a zmq Socket and connect it to the kernel. Forgets randomly assigned port numbers and cleans up the connection file.", 'files_count': 36, 'files': ['test_session.py', 'session.py', 'jsonutil.py', 'consoleapp.py', 'connect.py', 'test_connect.py', 'test_adapter.py', 'test_multikernelmanager.py', 'multikernelmanager.py', 'manager.py', 'kernelspec.py', 'test_manager.py', 'test_kernelspec.py', 'kernelspecapp.py', 'kernelapp.py', 'localinterfaces.py', 'adapter.py', 'threaded.py', 'channels.py', 'test_localinterfaces.py', 'runapp.py', 'forward.py', 'test_jsonutil.py', 'test_client.py', 'tunnel.py', 'test_ssh.py', 'client.py', 'managerabc.py', 'channelsabc.py', 'test_kernelmanager.py', 'utils.py', 'restarter.py', 'signalkernel.py', 'test_kernelapp.py', 'win_interrupt.py', 'launcher.py'], 'execution_path_count': 947, 'function_id_to_name_file': {'683': 'test_bad_roundtrip(test_session.py)', '457': '__init__(session.py)', '459': '_check_packers(session.py)', '450': 'utcnow(session.py)', '244': 'squash_dates(jsonutil.py)', '685': 'test_bad_unpacker(test_session.py)', '682': 'test_bad_packer(test_session.py)', '684': 'test_bad_unpack(test_session.py)', '681': 'test_bad_pack(test_session.py)', '687': 'test_cull_digest_history(test_session.py)', '700': 'test_zero_digest_history(test_session.py)', '697': 'test_session_id(test_session.py)', '678': 'setUp(test_session.py)', '680': 'test_args(test_session.py)', '215': '__init__(consoleapp.py)', '198': '_session_default(connect.py)', '565': 'test_load_connection_file_session_with_kn(test_connect.py)', '564': 'test_load_connection_file_session(test_connect.py)', '516': 'test_default_version(test_adapter.py)', '519': 'setUp(test_adapter.py)', '690': 'test_datetimes_pickle(test_session.py)', '689': 'test_datetimes_msgpack(test_session.py)', '649': 'test_start_sequence_ipc_kernels(test_multikernelmanager.py)', '638': '_get_ipc_km(test_multikernelmanager.py)', '379': 'AsyncMultiKernelManager(multikernelmanager.py)', '381': 'MultiKernelManager(multikernelmanager.py)', '382': 'kernel_method(multikernelmanager.py)', '425': 'wrapped(multikernelmanager.py)', '645': 'test_ipc_lifecycle(test_multikernelmanager.py)', '644': 'test_ipc_cinfo(test_multikernelmanager.py)', '650': 'test_start_sequence_tcp_kernels(test_multikernelmanager.py)', '639': '_get_tcp_km(test_multikernelmanager.py)', '646': 'test_shutdown_all(test_multikernelmanager.py)', '651': 'test_tcp_cinfo(test_multikernelmanager.py)', '648': 'test_start_parallel_thread_kernels(test_multikernelmanager.py)', '643': 'tcp_lifecycle_with_loop(test_multikernelmanager.py)', '642': 'raw_tcp_lifecycle(test_multikernelmanager.py)', '647': 'test_start_parallel_process_kernels(test_multikernelmanager.py)', '652': 'test_tcp_lifecycle(test_multikernelmanager.py)', '653': 'test_tcp_lifecycle_with_kernel_id(test_multikernelmanager.py)', '664': 'test_start_sequence_ipc_kernels(test_multikernelmanager.py)', '654': '_get_ipc_km(test_multikernelmanager.py)', '660': 'test_ipc_lifecycle(test_multikernelmanager.py)', '659': 'test_ipc_cinfo(test_multikernelmanager.py)', '665': 'test_start_sequence_tcp_kernels(test_multikernelmanager.py)', '655': '_get_tcp_km(test_multikernelmanager.py)', '666': 'test_tcp_cinfo(test_multikernelmanager.py)', '668': 'test_tcp_lifecycle_with_kernel_id(test_multikernelmanager.py)', '661': 'test_shutdown_all(test_multikernelmanager.py)', '663': 'test_start_parallel_thread_kernels(test_multikernelmanager.py)', '658': 'tcp_lifecycle_with_loop(test_multikernelmanager.py)', '667': 'test_tcp_lifecycle(test_multikernelmanager.py)', '662': 'test_start_parallel_process_kernels(test_multikernelmanager.py)', '322': 'start_new_async_kernel(manager.py)', '319': 'AsyncKernelManager(manager.py)', '320': 'KernelManager(manager.py)', '254': 'KernelSpecManager(kernelspec.py)', '253': 'KernelSpec(kernelspec.py)', '224': 'AsyncIOLoopKernelManager(manager.py)', '225': 'IOLoopKernelManager(manager.py)', '635': 'test_connection_file_real_path(test_manager.py)', '629': 'test_subclass(test_kernelspec.py)', '618': 'setUp(test_kernelspec.py)', '289': '_kernel_spec_manager_default(kernelspecapp.py)', '345': '_kernel_spec_manager_default(manager.py)', '295': '_kernel_spec_manager_default(kernelspecapp.py)', '286': '_kernel_spec_manager_default(kernelspecapp.py)', '245': 'KernelApp(kernelapp.py)', '292': '_kernel_spec_manager_default(kernelspecapp.py)', '631': 'MyKSM(test_kernelspec.py)', '282': 'KernelSpecApp(kernelspecapp.py)', '284': 'RemoveKernelSpec(kernelspecapp.py)', '283': 'ListKernelSpecs(kernelspecapp.py)', '280': 'InstallKernelSpec(kernelspecapp.py)', '281': 'InstallNativeKernelSpec(kernelspecapp.py)', '321': 'run_kernel(manager.py)', '323': 'start_new_kernel(manager.py)', '366': 'start_kernel(manager.py)', '360': 'pre_start_kernel(manager.py)', '341': '_get_env_substitutions(manager.py)', '314': 'local_ips(localinterfaces.py)', '312': 'is_local_ip(localinterfaces.py)', '212': 'write_connection_file(connect.py)', '197': '_record_random_port_names(connect.py)', '353': 'format_kernel_cmd(manager.py)', '369': 'from_ns(manager.py)', '358': 'kernel_spec(manager.py)', '347': '_launch_kernel(manager.py)', '359': 'post_start_kernel(manager.py)', '338': '_connect_control_socket(manager.py)', '192': '_create_connected_socket(connect.py)', '196': '_make_url(connect.py)', '367': 'start_restarter(manager.py)', '364': 'shutdown_kernel(manager.py)', '362': 'request_shutdown(manager.py)', '476': 'msg(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '480': 'send(session.py)', '520': 'msg(test_adapter.py)', '534': 'msg(test_adapter.py)', '444': 'extract_header(session.py)', '50': 'adapt(adapter.py)', '482': 'serialize(session.py)', '483': 'sign(session.py)', '440': 'Message(session.py)', '734': 'send(threaded.py)', '738': 'thread_send(threaded.py)', '88': 'send(channels.py)', '114': 'send(channels.py)', '188': 'ConnectionFileMixin(connect.py)', '351': 'client(manager.py)', '208': 'get_connection_info(connect.py)', '346': '_kill_kernel(manager.py)', '365': 'signal_kernel(manager.py)', '354': 'has_kernel(manager.py)', '352': 'finish_shutdown(manager.py)', '357': 'is_alive(manager.py)', '350': 'cleanup_resources(manager.py)', '201': 'cleanup_ipc_files(connect.py)', '211': 'ports(connect.py)', '349': 'cleanup(manager.py)', '368': 'stop_restarter(manager.py)', '200': 'cleanup_connection_file(connect.py)', '310': '_requires_ips(localinterfaces.py)', '318': 'ips_loaded(localinterfaces.py)', '301': '_load_ips(localinterfaces.py)', '306': '_load_ips_ipconfig(localinterfaces.py)', '300': '_get_output(localinterfaces.py)', '309': '_populate_from_list(localinterfaces.py)', '299': 'NoIPAddresses(localinterfaces.py)', '316': 'public_ips(localinterfaces.py)', '311': '_uniq_stable(localinterfaces.py)', '304': '_load_ips_ifconfig(localinterfaces.py)', '305': '_load_ips_ip(localinterfaces.py)', '307': '_load_ips_netifaces(localinterfaces.py)', '302': '_load_ips_dumb(localinterfaces.py)', '634': 'test_load_ips(test_localinterfaces.py)', '303': '_load_ips_gethostbyname(localinterfaces.py)', '465': '_new_auth(session.py)', '560': 'test_find_connection_file(test_connect.py)', '572': 'initialize(test_connect.py)', '219': 'init_connection_file(consoleapp.py)', '209': 'load_connection_file(connect.py)', '210': 'load_connection_info(connect.py)', '195': '_ip_default(connect.py)', '315': 'localhost(localinterfaces.py)', '559': 'test_app_load_connection_file(test_connect.py)', '437': 'initialize(runapp.py)', '223': 'initialize(consoleapp.py)', '222': 'init_ssh(consoleapp.py)', '220': 'init_kernel_client(consoleapp.py)', '221': 'init_kernel_manager(consoleapp.py)', '255': 'NoSuchKernel(kernelspec.py)', '568': 'test_mixin_record_random_ports(test_connect.py)', '567': 'test_mixin_cleanup_random_ports(test_connect.py)', '621': 'test_find_all_specs(test_kernelspec.py)', '273': 'get_all_specs(kernelspec.py)', '272': 'find_kernel_specs(kernelspec.py)', '258': '_list_kernels_in(kernelspec.py)', '257': '_is_valid_kernel_name(kernelspec.py)', '256': '_is_kernel_dir(kernelspec.py)', '627': 'test_remove_kernel_spec(test_kernelspec.py)', '277': 'remove_kernel_spec(kernelspec.py)', '625': 'test_install_kernel_spec_prefix(test_kernelspec.py)', '626': 'test_kernel_spec_priority(test_kernelspec.py)', '624': 'test_install_kernel_spec(test_kernelspec.py)', '259': 'find_kernel_specs(kernelspec.py)', '622': 'test_find_kernel_specs(test_kernelspec.py)', '694': 'test_send(test_session.py)', '479': 'recv(session.py)', '474': 'deserialize(session.py)', '242': 'extract_dates(jsonutil.py)', '243': 'parse_date(jsonutil.py)', '240': '_ensure_tzinfo(jsonutil.py)', '492': 'handle(forward.py)', '695': 'test_send_raw(test_session.py)', '484': 'unserialize(session.py)', '696': 'test_serialize(test_session.py)', '578': 'test_parse_ms_precision(test_jsonutil.py)', '679': '_datetime_test(test_session.py)', '688': 'test_datetimes(test_session.py)', '575': 'test_date_default(test_jsonutil.py)', '576': 'test_extract_date_from_naive(test_jsonutil.py)', '577': 'test_extract_dates(test_jsonutil.py)', '330': 'restart_kernel(manager.py)', '333': 'start_kernel(manager.py)', '326': '_launch_kernel(manager.py)', '623': 'test_get_kernel_spec(test_kernelspec.py)', '267': '_find_spec_directory(kernelspec.py)', '632': 'find_kernel_specs(test_kernelspec.py)', '274': 'get_kernel_spec(kernelspec.py)', '633': 'get_kernel_spec(test_kernelspec.py)', '549': 'setUp(test_client.py)', '269': '_get_kernel_spec_by_name(kernelspec.py)', '278': '__init__(kernelspec.py)', '260': 'get_kernel_spec(kernelspec.py)', '698': 'test_tracking(test_session.py)', '328': 'interrupt_kernel(manager.py)', '191': 'write_connection_file(connect.py)', '109': 'close(channels.py)', '83': 'close(channels.py)', '730': 'close(threaded.py)', '132': 'close(channels.py)', '718': 'close(threaded.py)', '570': 'test_write_connection_file(test_connect.py)', '686': 'test_clone(test_session.py)', '458': '_add_digest(session.py)', '460': '_cull_digest_history(session.py)', '558': 'DummyConsoleApp(test_connect.py)', '214': 'JupyterConsoleApp(consoleapp.py)', '441': 'Session(session.py)', '213': 'IPythonConsoleApp(consoleapp.py)', '434': 'RunApp(runapp.py)', '392': '__init__(multikernelmanager.py)', '190': 'tunnel_to_kernel(connect.py)', '503': 'select_random_ports(tunnel.py)', '701': 'test_random_ports(test_ssh.py)', '386': 'shutdown_all(multikernelmanager.py)', '383': 'finish_shutdown(multikernelmanager.py)', '410': 'get_kernel(multikernelmanager.py)', '394': '_check_kernel_id(multikernelmanager.py)', '388': 'signal_kernel(multikernelmanager.py)', '385': 'restart_kernel(multikernelmanager.py)', '384': 'interrupt_kernel(multikernelmanager.py)', '387': 'shutdown_kernel(multikernelmanager.py)', '421': 'shutdown_kernel(multikernelmanager.py)', '420': 'shutdown_all(multikernelmanager.py)', '104': 'wait_for_ready(client.py)', '103': 'is_alive(client.py)', '412': 'is_alive(multikernelmanager.py)', '373': 'is_alive(managerabc.py)', '140': 'is_alive(channelsabc.py)', '732': 'is_alive(threaded.py)', '86': 'is_alive(channels.py)', '112': 'is_alive(channels.py)', '123': 'wait_for_ready(client.py)', '165': 'is_alive(client.py)', '641': '_run_lifecycle(test_multikernelmanager.py)', '135': 'run(channels.py)', '128': '_create_socket(channels.py)', '84': 'get_msg(channels.py)', '82': '_recv(channels.py)', '101': 'get_stdin_msg(client.py)', '85': 'get_msgs(channels.py)', '99': 'get_iopub_msg(client.py)', '110': 'get_msg(channels.py)', '108': '_recv(channels.py)', '111': 'get_msgs(channels.py)', '620': 'test_cant_install_kernel_spec(test_kernelspec.py)', '275': 'install_kernel_spec(kernelspec.py)', '268': '_get_destination_dir(kernelspec.py)', '261': 'install_kernel_spec(kernelspec.py)', '614': 'test_start_sequence_process_kernels(test_kernelmanager.py)', '610': '_run_signaltest_lifecycle(test_kernelmanager.py)', '615': 'execute(test_kernelmanager.py)', '609': '_prepare_kernel(test_kernelmanager.py)', '611': 'test_start_parallel_process_kernels(test_kernelmanager.py)', '613': 'test_start_sequence_kernels(test_kernelmanager.py)', '612': 'test_start_parallel_thread_kernels(test_kernelmanager.py)', '398': '_kernel_manager_class_changed(multikernelmanager.py)', '396': '_create_kernel_manager_factory(multikernelmanager.py)', '424': 'create_kernel_manager(multikernelmanager.py)', '397': '_find_available_port(multikernelmanager.py)', '395': '_context_default(multikernelmanager.py)', '399': '_kernel_manager_factory_default(multikernelmanager.py)', '485': '__init__(session.py)', '90': 'AsyncKernelClient(client.py)', '147': 'KernelClient(client.py)', '139': 'HBChannelABC(channelsabc.py)', '138': 'ChannelABC(channelsabc.py)', '116': 'BlockingKernelClient(client.py)', '657': '_run_lifecycle(test_multikernelmanager.py)', '704': 'execute(utils.py)', '155': 'execute(client.py)', '148': 'validate_string_dict(client.py)', '423': 'start_kernel(multikernelmanager.py)', '415': 'pre_start_kernel(multikernelmanager.py)', '380': 'DuplicateKernelError(multikernelmanager.py)', '414': 'new_kernel_id(multikernelmanager.py)', '389': 'start_kernel(multikernelmanager.py)', '238': 'start(restarter.py)', '430': 'poll(restarter.py)', '433': 'stop(restarter.py)', '428': '_fire_callbacks(restarter.py)', '510': 'do_execute(signalkernel.py)', '501': 'openssh_tunnel(tunnel.py)', '494': 'SSHException(tunnel.py)', '497': '_stop_tunnel(tunnel.py)', '475': 'feed_identities(session.py)', '202': 'cleanup_random_ports(connect.py)', '106': 'ZMQSocketChannel(channels.py)', '226': 'as_zmqstream(manager.py)', '233': 'wrapped(manager.py)', '557': 'DummyConfigurable(test_connect.py)', '235': 'IOLoopKernelRestarter(restarter.py)', '426': 'KernelRestarter(restarter.py)', '234': 'AsyncIOLoopKernelRestarter(restarter.py)', '291': 'start(kernelspecapp.py)', '251': 'start(kernelapp.py)', '249': 'setup_signals(kernelapp.py)', '252': 'shutdown_handler(kernelapp.py)', '250': 'shutdown(kernelapp.py)', '248': 'log_connection_info(kernelapp.py)', '199': 'blocking_client(connect.py)', '725': 'stop_channels(threaded.py)', '676': '_bad_unpacker(test_session.py)', '536': 'test_complete_request(test_adapter.py)', '517': 'adapt(test_adapter.py)', '562': 'test_find_connection_file_local(test_connect.py)', '189': 'find_connection_file(connect.py)', '493': 'SubHander(forward.py)', '490': 'Handler(forward.py)', '241': 'date_default(jsonutil.py)', '597': 'test_subclasses(test_kernelmanager.py)', '703': 'AsyncKernelManagerWithCleanup(utils.py)', '595': 'test_signal_kernel_subprocesses(test_kernelmanager.py)', '598': 'execute(test_kernelmanager.py)', '702': 'AsyncKernelManagerSubclass(utils.py)', '591': 'transport(test_kernelmanager.py)', '606': 'test_templated_kspec_env(test_kernelmanager.py)', '599': '_env_test_body(test_kernelmanager.py)', '607': 'execute(test_kernelmanager.py)', '604': 'test_signal_kernel_subprocesses(test_kernelmanager.py)', '608': 'execute(test_kernelmanager.py)', '586': 'env(test_kernelmanager.py)', '712': 'stop(utils.py)', '711': 'start(utils.py)', '705': 'test_env(utils.py)', '630': 'test_validate_kernel_name(test_kernelspec.py)', '506': 'SignalTestApp(signalkernel.py)', '507': 'SignalTestKernel(signalkernel.py)', '617': '_install_sample_kernel(test_kernelspec.py)', '640': '_run_cinfo(test_multikernelmanager.py)', '619': 'tearDown(test_kernelspec.py)', '656': '_run_cinfo(test_multikernelmanager.py)', '569': 'test_secure_write(test_connect.py)', '573': 'check_user_only_permissions(test_connect.py)', '574': 'fetch_win32_permissions(test_connect.py)', '563': 'test_find_connection_file_relative(test_connect.py)', '561': 'test_find_connection_file_abspath(test_connect.py)', '539': 'test_input_request(test_adapter.py)', '537': 'test_display_data(test_adapter.py)', '540': 'test_inspect_reply(test_adapter.py)', '543': 'test_kernel_info_reply(test_adapter.py)', '542': 'test_inspect_request_token(test_adapter.py)', '535': 'test_complete_reply(test_adapter.py)', '541': 'test_inspect_request(test_adapter.py)', '538': 'test_execute_request(test_adapter.py)', '545': 'test_rename_type(test_adapter.py)', '544': 'test_no_adapt(test_adapter.py)', '546': 'test_same_version(test_adapter.py)', '514': 'V5toV4TestCase(test_adapter.py)', '512': 'AdapterTest(test_adapter.py)', '526': 'test_input_request(test_adapter.py)', '523': 'test_display_data(test_adapter.py)', '527': 'test_kernel_info_reply(test_adapter.py)', '530': 'test_object_info_reply_not_found(test_adapter.py)', '529': 'test_object_info_reply(test_adapter.py)', '531': 'test_object_info_request(test_adapter.py)', '521': 'test_complete_reply(test_adapter.py)', '522': 'test_complete_request(test_adapter.py)', '524': 'test_execute_reply(test_adapter.py)', '532': 'test_rename_type(test_adapter.py)', '525': 'test_execute_request(test_adapter.py)', '528': 'test_no_adapt(test_adapter.py)', '533': 'test_same_version(test_adapter.py)', '513': 'V4toV5TestCase(test_adapter.py)', '515': 'test_code_to_line_no_code(test_adapter.py)', '51': 'code_to_line(adapter.py)', '158': 'get_shell_msg(client.py)', '157': 'get_iopub_msg(client.py)', '710': '__exit__(utils.py)', '709': '__enter__(utils.py)', '580': 'test_kernelapp_lifecycle(test_kernelapp.py)', '579': '_launch(test_kernelapp.py)', '473': 'clone(session.py)', '481': 'send_raw(session.py)', '675': '_bad_packer(test_session.py)', '699': 'test_unique_msg_ids(test_session.py)', '445': 'msg_header(session.py)', '674': 'TestSession(test_session.py)', '673': 'SessionTestCase(test_session.py)', '556': 'test_shutdown(test_client.py)', '548': '_check_reply(test_client.py)', '550': 'test_comm_info(test_client.py)', '555': 'test_kernel_info(test_client.py)', '551': 'test_complete(test_client.py)', '554': 'test_inspect(test_client.py)', '553': 'test_history(test_client.py)', '117': 'reqrep(client.py)', '124': 'wrapped(client.py)', '150': '_handle_kernel_info_reply(client.py)', '125': 'HBChannel(channels.py)', '102': 'hb_channel(client.py)', '91': 'reqrep(client.py)', '105': 'wrapped(client.py)', '80': 'ZMQSocketChannel(channels.py)', '154': 'control_channel(client.py)', '723': 'ioloop(threaded.py)', '160': 'hb_channel(client.py)', '171': 'stdin_channel(client.py)', '164': 'iopub_channel(client.py)', '168': 'shell_channel(client.py)', '740': 'send_interrupt(win_interrupt.py)', '334': '__del__(manager.py)', '293': 'start(kernelspecapp.py)', '294': 'path_key(kernelspecapp.py)', '735': 'start(threaded.py)', '720': 'start(threaded.py)', '141': 'start(channelsabc.py)', '432': 'start(restarter.py)', '288': 'start(kernelspecapp.py)', '89': 'start(channels.py)', '115': 'start(channels.py)', '290': 'start(kernelspecapp.py)', '438': 'parse_command_line(runapp.py)', '218': 'build_kernel_argv(consoleapp.py)', '308': '_only_once(localinterfaces.py)', '317': 'wrapped(localinterfaces.py)', '47': 'V4toV5(adapter.py)', '46': 'Adapter(adapter.py)', '77': 'object_info_request(adapter.py)', '52': 'extract_oname_v4(adapter.py)', '70': 'complete_request(adapter.py)', '75': 'kernel_info_reply(adapter.py)', '49': '_version_str_to_list(adapter.py)', '48': 'V5toV4(adapter.py)', '53': '__call__(adapter.py)', '54': 'handle_reply_status_error(adapter.py)', '57': 'update_msg_type(adapter.py)', '56': 'update_metadata(adapter.py)', '55': 'update_header(adapter.py)', '247': 'initialize(kernelapp.py)', '246': '_record_started(kernelapp.py)', '585': 'config(test_kernelmanager.py)', '262': 'install_native_kernel_spec(kernelspec.py)', '276': 'install_native_kernel_spec(kernelspec.py)', '265': 'to_json(kernelspec.py)', '264': 'to_dict(kernelspec.py)', '449': 'test_msg2obj(session.py)', '453': '__init__(session.py)', '470': '_signature_scheme_changed(session.py)', '463': '_key_default(session.py)', '447': 'new_id_bytes(session.py)', '462': '_key_changed(session.py)', '443': 'default_secure(session.py)', '469': '_session_default(session.py)', '446': 'new_id(session.py)', '413': 'list_kernel_ids(multikernelmanager.py)', '721': 'stop(threaded.py)', '724': 'start_channels(threaded.py)', '722': '_check_kernel_info_reply(threaded.py)', '716': '__init__(threaded.py)', '416': 'remove_kernel(multikernelmanager.py)', '713': 'IOLoopThread(threaded.py)', '714': 'ThreadedKernelClient(threaded.py)', '715': 'ThreadedZMQSocketChannel(threaded.py)', '731': 'flush(threaded.py)', '727': '_flush(threaded.py)', '418': 'request_shutdown(multikernelmanager.py)', '402': 'cleanup_resources(multikernelmanager.py)', '408': 'finish_shutdown(multikernelmanager.py)', '393': '__len__(multikernelmanager.py)', '298': 'launch_kernel(launcher.py)', '739': 'create_interrupt_event(win_interrupt.py)', '741': 'SECURITY_ATTRIBUTES(win_interrupt.py)', '509': '__init__(signalkernel.py)', '127': '__init__(channels.py)', '126': 'InvalidPortNumber(channels.py)', '107': '__init__(channels.py)', '81': '__init__(channels.py)', '726': '__init__(threaded.py)', '737': 'setup_stream(threaded.py)', '728': '_handle_recv(threaded.py)', '729': 'call_handlers(threaded.py)', '136': 'stop(channels.py)', '133': 'is_beating(channels.py)', '145': 'time_to_dead(channelsabc.py)', '131': 'call_handlers(channels.py)', '130': '_poll(channels.py)', '435': 'handle_sigint(runapp.py)', '355': 'interrupt_kernel(manager.py)', '411': 'interrupt_kernel(multikernelmanager.py)', '372': 'interrupt_kernel(managerabc.py)', '505': 'tunnel_connection(tunnel.py)', '500': 'open_tunnel(tunnel.py)', '502': 'paramiko_tunnel(tunnel.py)', '499': '_try_passwordless_paramiko(tunnel.py)', '496': '_split_server(tunnel.py)', '495': '_paramiko_tunnel(tunnel.py)', '491': 'forward_tunnel(forward.py)', '436': 'init_kernel_info(runapp.py)', '137': 'unpause(channels.py)', '146': 'unpause(channelsabc.py)', '167': 'kernel_info(client.py)', '297': 'start(kernelspecapp.py)', '162': 'input(client.py)', '504': 'try_passwordless_ssh(tunnel.py)', '498': '_try_passwordless_openssh(tunnel.py)', '331': 'shutdown_kernel(manager.py)', '337': '_close_control_socket(manager.py)', '236': 'poll(restarter.py)', '363': 'restart_kernel(manager.py)', '203': 'connect_control(connect.py)', '207': 'connect_stdin(connect.py)', '206': 'connect_shell(connect.py)', '205': 'connect_iopub(connect.py)', '204': 'connect_hb(connect.py)', '228': 'start_restarter(manager.py)', '231': 'start_restarter(manager.py)', '439': 'start(runapp.py)', '122': 'execute_interactive(client.py)', '97': 'execute_interactive(client.py)', '327': 'finish_shutdown(manager.py)', '324': '_async_wait(manager.py)', '329': 'is_alive(manager.py)', '325': '_kill_kernel(manager.py)', '332': 'signal_kernel(manager.py)'}}, {'key': 896, 'parent': 1434, 'tfidf_word': 'EP: 896, Name: execute &rarr; execute &rarr; msg &rarr; msg &rarr; msg &rarr; msg_header &rarr; msg_id', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1430, 'parent': 1434, 'tfidf_word': 'client execute header id kernel async blocking msg ', 'tfidf_method': 'execute msg msg_header msg_id msg msg BlockingKernelClient AsyncKernelClient ', 'lda_word': ' msg,header,execute,client,async,', 'lda_method': ' msg,msg_header,execute,asynckernelclient,msg_id,', 'lsi_word': ' msg,client,header,execute,kernel,', 'lsi_method': ' msg,execute,msg_header,msg_id,blockingkernelclient,', 'spm_method': '  &#187; execute(client.py) &rarr; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br>', 'text_summary': '', 'files_count': 3, 'files': ['client.py', 'test_adapter.py', 'session.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'90': 'AsyncKernelClient(client.py)', '155': 'execute(client.py)', '520': 'msg(test_adapter.py)', '534': 'msg(test_adapter.py)', '476': 'msg(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '116': 'BlockingKernelClient(client.py)'}}, {'key': 1432, 'parent': 2233, 'tfidf_word': 'header id info client kernel async blocking channels start msg ', 'tfidf_method': 'kernel_info msg msg_header msg_id msg msg BlockingKernelClient start_channels AsyncKernelClient ', 'lda_word': ' msg,kernel,info,header,client,', 'lda_method': ' msg,kernel_info,msg_id,msg_header,blockingkernelclient,', 'lsi_word': ' msg,kernel,header,info,client,', 'lsi_method': ' msg,msg_id,msg_header,kernel_info,blockingkernelclient,', 'spm_method': '  &#187; kernel_info(client.py) &rarr; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br>', 'text_summary': '', 'files_count': 3, 'files': ['client.py', 'test_adapter.py', 'session.py'], 'execution_path_count': 3, 'function_id_to_name_file': {'116': 'BlockingKernelClient(client.py)', '167': 'kernel_info(client.py)', '520': 'msg(test_adapter.py)', '534': 'msg(test_adapter.py)', '476': 'msg(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '170': 'start_channels(client.py)', '90': 'AsyncKernelClient(client.py)'}}, {'key': 2018, 'parent': 2233, 'tfidf_word': 'interrupt input type identity found feed display data version msg ', 'tfidf_method': 'test_kernel_info_reply test_input_request test_execute_request test_serialize test_display_data test_complete_request test_complete_reply is_complete test_object_info_reply test_execute_reply ', 'lda_word': ' msg,header,test,kernel,client,', 'lda_method': ' msg,msg_id,msg_header,blockingkernelclient,asynckernelclient,', 'lsi_word': ' msg,header,test,kernel,client,', 'lsi_method': ' msg,msg_id,msg_header,asynckernelclient,blockingkernelclient,', 'spm_method': '  &#187; AsyncKernelClient(client.py) &rarr; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; inspect(client.py) &rarr; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; BlockingKernelClient(client.py) &rarr; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; comm_info(client.py) &rarr; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; shutdown(client.py) &rarr; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; complete(client.py) &rarr; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; history(client.py) &rarr; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br>', 'text_summary': "Tab complete text in the kernel's namespace. Get metadata information about an object in the kernel's namespace.", 'files_count': 5, 'files': ['client.py', 'test_adapter.py', 'session.py', 'test_session.py', 'manager.py'], 'execution_path_count': 30, 'function_id_to_name_file': {'90': 'AsyncKernelClient(client.py)', '163': 'inspect(client.py)', '520': 'msg(test_adapter.py)', '534': 'msg(test_adapter.py)', '476': 'msg(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '116': 'BlockingKernelClient(client.py)', '152': 'comm_info(client.py)', '169': 'shutdown(client.py)', '153': 'complete(client.py)', '161': 'history(client.py)', '526': 'test_input_request(test_adapter.py)', '523': 'test_display_data(test_adapter.py)', '527': 'test_kernel_info_reply(test_adapter.py)', '530': 'test_object_info_reply_not_found(test_adapter.py)', '529': 'test_object_info_reply(test_adapter.py)', '531': 'test_object_info_request(test_adapter.py)', '521': 'test_complete_reply(test_adapter.py)', '522': 'test_complete_request(test_adapter.py)', '524': 'test_execute_reply(test_adapter.py)', '525': 'test_execute_request(test_adapter.py)', '532': 'test_rename_type(test_adapter.py)', '528': 'test_no_adapt(test_adapter.py)', '533': 'test_same_version(test_adapter.py)', '695': 'test_send_raw(test_session.py)', '692': 'test_feed_identities(test_session.py)', '694': 'test_send(test_session.py)', '696': 'test_serialize(test_session.py)', '693': 'test_msg(test_session.py)', '328': 'interrupt_kernel(manager.py)', '166': 'is_complete(client.py)'}}, {'key': 898, 'parent': 1532, 'tfidf_word': 'EP: 898, Name: execute &rarr; execute &rarr; msg &rarr; msg &rarr; msg_header &rarr; msg_id', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1514, 'parent': 1532, 'tfidf_word': 'client execute header id kernel async blocking msg ', 'tfidf_method': 'execute msg msg_header msg_id msg BlockingKernelClient AsyncKernelClient ', 'lda_word': ' msg,kernel,client,blocking,execute,', 'lda_method': ' msg,msg_id,execute,msg_header,asynckernelclient,', 'lsi_word': ' msg,client,header,execute,kernel,', 'lsi_method': ' msg,execute,msg_id,msg_header,blockingkernelclient,', 'spm_method': ' ', 'text_summary': '', 'files_count': 3, 'files': ['client.py', 'test_adapter.py', 'session.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'90': 'AsyncKernelClient(client.py)', '155': 'execute(client.py)', '534': 'msg(test_adapter.py)', '476': 'msg(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '116': 'BlockingKernelClient(client.py)'}}, {'key': 1518, 'parent': 2283, 'tfidf_word': 'header id info client kernel async blocking channels start msg ', 'tfidf_method': 'kernel_info msg msg_header msg_id msg BlockingKernelClient start_channels AsyncKernelClient ', 'lda_word': ' msg,kernel,header,info,client,', 'lda_method': ' msg,msg_header,kernel_info,msg_id,blockingkernelclient,', 'lsi_word': ' msg,kernel,header,info,client,', 'lsi_method': ' msg,msg_id,msg_header,kernel_info,asynckernelclient,', 'spm_method': ' ', 'text_summary': '', 'files_count': 3, 'files': ['client.py', 'test_adapter.py', 'session.py'], 'execution_path_count': 3, 'function_id_to_name_file': {'116': 'BlockingKernelClient(client.py)', '167': 'kernel_info(client.py)', '534': 'msg(test_adapter.py)', '476': 'msg(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '170': 'start_channels(client.py)', '90': 'AsyncKernelClient(client.py)'}}, {'key': 2252, 'parent': 2283, 'tfidf_word': 'interrupt type identity feed execute display data raw version msg ', 'tfidf_method': 'test_inspect_request is_complete test_input_request test_execute_request test_serialize test_complete_request test_complete_reply interrupt_kernel test_inspect_request_token test_display_data ', 'lda_word': ' msg,header,test,kernel,client,', 'lda_method': ' msg,msg_id,msg_header,asynckernelclient,complete,', 'lsi_word': ' msg,header,test,kernel,client,', 'lsi_method': ' msg,msg_header,msg_id,blockingkernelclient,asynckernelclient,', 'spm_method': ' ', 'text_summary': "Tab complete text in the kernel's namespace. Get metadata information about an object in the kernel's namespace.", 'files_count': 5, 'files': ['client.py', 'test_adapter.py', 'session.py', 'test_session.py', 'manager.py'], 'execution_path_count': 29, 'function_id_to_name_file': {'90': 'AsyncKernelClient(client.py)', '163': 'inspect(client.py)', '534': 'msg(test_adapter.py)', '476': 'msg(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '116': 'BlockingKernelClient(client.py)', '152': 'comm_info(client.py)', '169': 'shutdown(client.py)', '153': 'complete(client.py)', '161': 'history(client.py)', '539': 'test_input_request(test_adapter.py)', '537': 'test_display_data(test_adapter.py)', '543': 'test_kernel_info_reply(test_adapter.py)', '540': 'test_inspect_reply(test_adapter.py)', '542': 'test_inspect_request_token(test_adapter.py)', '541': 'test_inspect_request(test_adapter.py)', '535': 'test_complete_reply(test_adapter.py)', '536': 'test_complete_request(test_adapter.py)', '538': 'test_execute_request(test_adapter.py)', '545': 'test_rename_type(test_adapter.py)', '546': 'test_same_version(test_adapter.py)', '544': 'test_no_adapt(test_adapter.py)', '695': 'test_send_raw(test_session.py)', '694': 'test_send(test_session.py)', '692': 'test_feed_identities(test_session.py)', '696': 'test_serialize(test_session.py)', '693': 'test_msg(test_session.py)', '328': 'interrupt_kernel(manager.py)', '166': 'is_complete(client.py)'}}, {'key': 1435, 'parent': 2238, 'tfidf_word': 'header id client kernel execute async blocking msg ', 'tfidf_method': 'execute msg msg_header msg_id msg msg BlockingKernelClient execute AsyncKernelClient ', 'lda_word': ' msg,header,execute,client,kernel,', 'lda_method': ' msg,msg_id,msg_header,execute,asynckernelclient,', 'lsi_word': ' msg,execute,header,kernel,client,', 'lsi_method': ' msg,execute,msg_header,msg_id,asynckernelclient,', 'spm_method': '  &#187; execute(client.py) &rarr; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br>', 'text_summary': '', 'files_count': 4, 'files': ['utils.py', 'client.py', 'test_adapter.py', 'session.py'], 'execution_path_count': 3, 'function_id_to_name_file': {'704': 'execute(utils.py)', '155': 'execute(client.py)', '534': 'msg(test_adapter.py)', '520': 'msg(test_adapter.py)', '476': 'msg(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '90': 'AsyncKernelClient(client.py)', '116': 'BlockingKernelClient(client.py)'}}, {'key': 2232, 'parent': 2238, 'tfidf_word': 'type identity feed execute display data channels raw version msg ', 'tfidf_method': 'test_inspect_reply test_execute_request test_display_data test_serialize test_complete_reply is_complete interrupt_kernel start_channels test_inspect_request test_complete_request ', 'lda_word': ' msg,header,kernel,client,history,', 'lda_method': ' msg,history,blockingkernelclient,msg_header,msg_id,', 'lsi_word': ' msg,header,kernel,test,client,', 'lsi_method': ' msg,msg_id,msg_header,asynckernelclient,blockingkernelclient,', 'spm_method': '  &#187; BlockingKernelClient(client.py) &rarr; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; kernel_info(client.py) &rarr; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; AsyncKernelClient(client.py) &rarr; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; inspect(client.py) &rarr; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; comm_info(client.py) &rarr; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; shutdown(client.py) &rarr; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; complete(client.py) &rarr; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; history(client.py) &rarr; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br>', 'text_summary': "Tab complete text in the kernel's namespace. Request kernel info.", 'files_count': 5, 'files': ['client.py', 'test_adapter.py', 'session.py', 'test_session.py', 'manager.py'], 'execution_path_count': 32, 'function_id_to_name_file': {'116': 'BlockingKernelClient(client.py)', '167': 'kernel_info(client.py)', '534': 'msg(test_adapter.py)', '520': 'msg(test_adapter.py)', '476': 'msg(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '170': 'start_channels(client.py)', '90': 'AsyncKernelClient(client.py)', '163': 'inspect(client.py)', '152': 'comm_info(client.py)', '169': 'shutdown(client.py)', '153': 'complete(client.py)', '161': 'history(client.py)', '539': 'test_input_request(test_adapter.py)', '537': 'test_display_data(test_adapter.py)', '543': 'test_kernel_info_reply(test_adapter.py)', '540': 'test_inspect_reply(test_adapter.py)', '542': 'test_inspect_request_token(test_adapter.py)', '541': 'test_inspect_request(test_adapter.py)', '535': 'test_complete_reply(test_adapter.py)', '536': 'test_complete_request(test_adapter.py)', '538': 'test_execute_request(test_adapter.py)', '545': 'test_rename_type(test_adapter.py)', '544': 'test_no_adapt(test_adapter.py)', '546': 'test_same_version(test_adapter.py)', '695': 'test_send_raw(test_session.py)', '692': 'test_feed_identities(test_session.py)', '694': 'test_send(test_session.py)', '696': 'test_serialize(test_session.py)', '693': 'test_msg(test_session.py)', '328': 'interrupt_kernel(manager.py)', '166': 'is_complete(client.py)'}}, {'key': 1531, 'parent': 2290, 'tfidf_word': 'header id client kernel execute async blocking msg ', 'tfidf_method': 'execute msg msg_header msg_id msg BlockingKernelClient execute AsyncKernelClient ', 'lda_word': ' msg,execute,header,kernel,client,', 'lda_method': ' msg,execute,msg_header,msg_id,blockingkernelclient,', 'lsi_word': ' msg,execute,header,kernel,client,', 'lsi_method': ' msg,execute,msg_header,msg_id,blockingkernelclient,', 'spm_method': ' ', 'text_summary': '', 'files_count': 4, 'files': ['utils.py', 'client.py', 'test_adapter.py', 'session.py'], 'execution_path_count': 3, 'function_id_to_name_file': {'704': 'execute(utils.py)', '155': 'execute(client.py)', '520': 'msg(test_adapter.py)', '476': 'msg(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '90': 'AsyncKernelClient(client.py)', '116': 'BlockingKernelClient(client.py)'}}, {'key': 2285, 'parent': 2290, 'tfidf_word': 'input type identity found feed display data channels version msg ', 'tfidf_method': 'is_complete test_execute_request test_execute_reply test_serialize test_complete_request test_complete_reply interrupt_kernel start_channels test_no_adapt test_display_data ', 'lda_word': ' msg,test,header,request,input,', 'lda_method': ' msg,msg_header,msg_id,kernel_info,asynckernelclient,', 'lsi_word': ' msg,header,test,kernel,client,', 'lsi_method': ' msg,msg_header,msg_id,asynckernelclient,blockingkernelclient,', 'spm_method': ' ', 'text_summary': "Tab complete text in the kernel's namespace. Request kernel info.", 'files_count': 5, 'files': ['client.py', 'test_adapter.py', 'session.py', 'test_session.py', 'manager.py'], 'execution_path_count': 33, 'function_id_to_name_file': {'116': 'BlockingKernelClient(client.py)', '167': 'kernel_info(client.py)', '520': 'msg(test_adapter.py)', '476': 'msg(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '170': 'start_channels(client.py)', '90': 'AsyncKernelClient(client.py)', '163': 'inspect(client.py)', '152': 'comm_info(client.py)', '169': 'shutdown(client.py)', '153': 'complete(client.py)', '161': 'history(client.py)', '526': 'test_input_request(test_adapter.py)', '523': 'test_display_data(test_adapter.py)', '527': 'test_kernel_info_reply(test_adapter.py)', '530': 'test_object_info_reply_not_found(test_adapter.py)', '529': 'test_object_info_reply(test_adapter.py)', '531': 'test_object_info_request(test_adapter.py)', '521': 'test_complete_reply(test_adapter.py)', '522': 'test_complete_request(test_adapter.py)', '524': 'test_execute_reply(test_adapter.py)', '525': 'test_execute_request(test_adapter.py)', '532': 'test_rename_type(test_adapter.py)', '533': 'test_same_version(test_adapter.py)', '528': 'test_no_adapt(test_adapter.py)', '695': 'test_send_raw(test_session.py)', '694': 'test_send(test_session.py)', '692': 'test_feed_identities(test_session.py)', '696': 'test_serialize(test_session.py)', '693': 'test_msg(test_session.py)', '328': 'interrupt_kernel(manager.py)', '166': 'is_complete(client.py)'}}, {'key': 2050, 'parent': 2354, 'tfidf_word': 'id request async new restart send start kernel shutdown msg ', 'tfidf_method': 'shutdown_kernel request_shutdown msg msg_header msg_id start_new_async_kernel restart_kernel send ', 'lda_word': ' shutdown,msg,kernel,request,header,', 'lda_method': ' restart_kernel,msg_header,msg,msg_id,request_shutdown,', 'lsi_word': ' msg,kernel,shutdown,header,request,', 'lsi_method': ' request_shutdown,msg_header,msg,msg_id,shutdown_kernel,', 'spm_method': '  &#187; restart_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) &rarr; send(session.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; start_new_async_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br>', 'text_summary': 'Restarts a kernel with the arguments that were used to launch it. Pass a message to the ZMQ socket to send.', 'files_count': 2, 'files': ['manager.py', 'session.py'], 'execution_path_count': 4, 'function_id_to_name_file': {'330': 'restart_kernel(manager.py)', '331': 'shutdown_kernel(manager.py)', '362': 'request_shutdown(manager.py)', '480': 'send(session.py)', '476': 'msg(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '322': 'start_new_async_kernel(manager.py)'}}, {'key': 2304, 'parent': 2354, 'tfidf_word': 'header id request async new restart start kernel shutdown msg ', 'tfidf_method': 'shutdown_kernel request_shutdown msg msg_header msg_id msg msg start_new_async_kernel restart_kernel ', 'lda_word': ' msg,shutdown,kernel,header,request,', 'lda_method': ' msg,start_new_async_kernel,shutdown_kernel,msg_id,msg_header,', 'lsi_word': ' msg,shutdown,kernel,header,request,', 'lsi_method': ' msg,shutdown_kernel,request_shutdown,msg_header,msg_id,', 'spm_method': '  &#187; restart_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) &rarr; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; request_shutdown(manager.py) &rarr; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; start_new_async_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br>', 'text_summary': '', 'files_count': 3, 'files': ['manager.py', 'test_adapter.py', 'session.py'], 'execution_path_count': 8, 'function_id_to_name_file': {'330': 'restart_kernel(manager.py)', '331': 'shutdown_kernel(manager.py)', '362': 'request_shutdown(manager.py)', '520': 'msg(test_adapter.py)', '534': 'msg(test_adapter.py)', '476': 'msg(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '322': 'start_new_async_kernel(manager.py)'}}, {'key': 1732, 'parent': 2399, 'tfidf_word': 'header id test send handle interrupt kernel tracking msg ', 'tfidf_method': 'msg msg_header msg_id send interrupt_kernel handle test_send test_tracking ', 'lda_word': ' msg,send,header,test,tracking,', 'lda_method': ' send,msg,msg_header,msg_id,test_send,', 'lsi_word': ' msg,send,header,test,tracking,', 'lsi_method': ' send,msg_id,msg_header,msg,handle,', 'spm_method': ' ', 'text_summary': 'Pass a message to the ZMQ socket to send.', 'files_count': 4, 'files': ['forward.py', 'session.py', 'test_session.py', 'manager.py'], 'execution_path_count': 4, 'function_id_to_name_file': {'492': 'handle(forward.py)', '480': 'send(session.py)', '476': 'msg(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '698': 'test_tracking(test_session.py)', '328': 'interrupt_kernel(manager.py)', '694': 'test_send(test_session.py)'}}, {'key': 2382, 'parent': 2399, 'tfidf_word': 'start serialize identity unique feed default channels interrupt version execute ', 'tfidf_method': 'interrupt_kernel execute is_complete test_default_version test_feed_identities test_msg test_send test_send_raw test_serialize test_unique_msg_ids ', 'lda_word': ' msg,kernel,blocking,client,header,', 'lda_method': ' msg_id,msg_header,msg,asynckernelclient,test_send,', 'lsi_word': ' msg,header,kernel,client,async,', 'lsi_method': ' msg_id,msg_header,msg,blockingkernelclient,asynckernelclient,', 'spm_method': ' ', 'text_summary': "Tab complete text in the kernel's namespace. Request kernel info. message format. Ask the kernel whether some code is complete and ready to execute.", 'files_count': 6, 'files': ['test_session.py', 'session.py', 'utils.py', 'client.py', 'test_adapter.py', 'manager.py'], 'execution_path_count': 25, 'function_id_to_name_file': {'699': 'test_unique_msg_ids(test_session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '704': 'execute(utils.py)', '155': 'execute(client.py)', '476': 'msg(session.py)', '90': 'AsyncKernelClient(client.py)', '116': 'BlockingKernelClient(client.py)', '167': 'kernel_info(client.py)', '170': 'start_channels(client.py)', '163': 'inspect(client.py)', '152': 'comm_info(client.py)', '169': 'shutdown(client.py)', '153': 'complete(client.py)', '161': 'history(client.py)', '516': 'test_default_version(test_adapter.py)', '695': 'test_send_raw(test_session.py)', '692': 'test_feed_identities(test_session.py)', '694': 'test_send(test_session.py)', '693': 'test_msg(test_session.py)', '696': 'test_serialize(test_session.py)', '328': 'interrupt_kernel(manager.py)', '166': 'is_complete(client.py)'}}, {'key': 1517, 'parent': 2291, 'tfidf_word': 'extract header info client kernel async blocking channels start msg ', 'tfidf_method': 'kernel_info extract_header msg msg msg BlockingKernelClient start_channels AsyncKernelClient ', 'lda_word': ' msg,kernel,extract,header,info,', 'lda_method': ' msg,extract_header,kernel_info,blockingkernelclient,start_channels,', 'lsi_word': ' msg,kernel,header,info,extract,', 'lsi_method': ' msg,kernel_info,extract_header,blockingkernelclient,asynckernelclient,', 'spm_method': ' ', 'text_summary': '', 'files_count': 3, 'files': ['client.py', 'test_adapter.py', 'session.py'], 'execution_path_count': 3, 'function_id_to_name_file': {'116': 'BlockingKernelClient(client.py)', '167': 'kernel_info(client.py)', '520': 'msg(test_adapter.py)', '534': 'msg(test_adapter.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '170': 'start_channels(client.py)', '90': 'AsyncKernelClient(client.py)'}}, {'key': 2286, 'parent': 2291, 'tfidf_word': 'input type identity found feed display data interrupt version execute ', 'tfidf_method': 'test_kernel_info_reply test_input_request execute test_execute_reply test_display_data test_complete_request test_complete_reply interrupt_kernel test_object_info_reply_not_found test_execute_request ', 'lda_word': ' msg,extract,header,client,kernel,', 'lda_method': ' msg,extract_header,execute,asynckernelclient,comm_info,', 'lsi_word': ' msg,header,extract,test,kernel,', 'lsi_method': ' msg,extract_header,asynckernelclient,blockingkernelclient,execute,', 'spm_method': ' ', 'text_summary': "Tab complete text in the kernel's namespace. wrapper for doing common steps for validating an execution request. Given a message or header, return the header. Ask the kernel whether some code is complete and ready to execute.", 'files_count': 6, 'files': ['utils.py', 'client.py', 'test_adapter.py', 'session.py', 'test_session.py', 'manager.py'], 'execution_path_count': 33, 'function_id_to_name_file': {'704': 'execute(utils.py)', '155': 'execute(client.py)', '520': 'msg(test_adapter.py)', '534': 'msg(test_adapter.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '90': 'AsyncKernelClient(client.py)', '116': 'BlockingKernelClient(client.py)', '163': 'inspect(client.py)', '152': 'comm_info(client.py)', '169': 'shutdown(client.py)', '153': 'complete(client.py)', '161': 'history(client.py)', '526': 'test_input_request(test_adapter.py)', '523': 'test_display_data(test_adapter.py)', '527': 'test_kernel_info_reply(test_adapter.py)', '530': 'test_object_info_reply_not_found(test_adapter.py)', '529': 'test_object_info_reply(test_adapter.py)', '531': 'test_object_info_request(test_adapter.py)', '521': 'test_complete_reply(test_adapter.py)', '522': 'test_complete_request(test_adapter.py)', '524': 'test_execute_reply(test_adapter.py)', '525': 'test_execute_request(test_adapter.py)', '532': 'test_rename_type(test_adapter.py)', '533': 'test_same_version(test_adapter.py)', '528': 'test_no_adapt(test_adapter.py)', '695': 'test_send_raw(test_session.py)', '694': 'test_send(test_session.py)', '692': 'test_feed_identities(test_session.py)', '696': 'test_serialize(test_session.py)', '693': 'test_msg(test_session.py)', '328': 'interrupt_kernel(manager.py)', '166': 'is_complete(client.py)'}}, {'key': 1720, 'parent': 2378, 'tfidf_word': 'extract header info client kernel msg async blocking channels start ', 'tfidf_method': 'kernel_info extract_header msg msg BlockingKernelClient start_channels AsyncKernelClient ', 'lda_word': ' msg,kernel,header,extract,info,', 'lda_method': ' msg,extract_header,kernel_info,asynckernelclient,blockingkernelclient,', 'lsi_word': ' msg,kernel,header,extract,info,', 'lsi_method': ' msg,kernel_info,extract_header,asynckernelclient,start_channels,', 'spm_method': ' ', 'text_summary': '', 'files_count': 3, 'files': ['client.py', 'test_adapter.py', 'session.py'], 'execution_path_count': 3, 'function_id_to_name_file': {'116': 'BlockingKernelClient(client.py)', '167': 'kernel_info(client.py)', '534': 'msg(test_adapter.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '170': 'start_channels(client.py)', '90': 'AsyncKernelClient(client.py)'}}, {'key': 2376, 'parent': 2378, 'tfidf_word': 'input interrupt type identity feed display data raw version execute ', 'tfidf_method': 'test_inspect_request test_input_request execute test_display_data test_complete_request test_complete_reply interrupt_kernel is_complete test_inspect_request_token test_execute_request ', 'lda_word': ' msg,execute,extract,header,request,', 'lda_method': ' msg,extract_header,blockingkernelclient,complete,shutdown,', 'lsi_word': ' msg,header,extract,test,kernel,', 'lsi_method': ' msg,extract_header,blockingkernelclient,asynckernelclient,execute,', 'spm_method': ' ', 'text_summary': "wrapper for doing common steps for validating an execution request. Ask the kernel whether some code is complete and ready to execute. Tab complete text in the kernel's namespace. Given a message or header, return the header. message format.", 'files_count': 6, 'files': ['utils.py', 'client.py', 'test_adapter.py', 'session.py', 'test_session.py', 'manager.py'], 'execution_path_count': 32, 'function_id_to_name_file': {'704': 'execute(utils.py)', '155': 'execute(client.py)', '534': 'msg(test_adapter.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '90': 'AsyncKernelClient(client.py)', '116': 'BlockingKernelClient(client.py)', '163': 'inspect(client.py)', '152': 'comm_info(client.py)', '169': 'shutdown(client.py)', '153': 'complete(client.py)', '161': 'history(client.py)', '536': 'test_complete_request(test_adapter.py)', '538': 'test_execute_request(test_adapter.py)', '545': 'test_rename_type(test_adapter.py)', '544': 'test_no_adapt(test_adapter.py)', '546': 'test_same_version(test_adapter.py)', '695': 'test_send_raw(test_session.py)', '692': 'test_feed_identities(test_session.py)', '694': 'test_send(test_session.py)', '693': 'test_msg(test_session.py)', '696': 'test_serialize(test_session.py)', '328': 'interrupt_kernel(manager.py)', '166': 'is_complete(client.py)', '539': 'test_input_request(test_adapter.py)', '537': 'test_display_data(test_adapter.py)', '543': 'test_kernel_info_reply(test_adapter.py)', '542': 'test_inspect_request_token(test_adapter.py)', '540': 'test_inspect_reply(test_adapter.py)', '535': 'test_complete_reply(test_adapter.py)', '541': 'test_inspect_request(test_adapter.py)'}}, {'key': 1927, 'parent': 2686, 'tfidf_word': 'extract header msg test send handle interrupt kernel tracking ', 'tfidf_method': 'extract_header msg send interrupt_kernel handle test_send test_tracking ', 'lda_word': ' send,header,msg,extract,test,', 'lda_method': ' extract_header,msg,send,test_send,handle,', 'lsi_word': ' send,header,msg,extract,test,', 'lsi_method': ' extract_header,send,msg,handle,test_send,', 'spm_method': ' ', 'text_summary': 'Given a message or header, return the header.', 'files_count': 4, 'files': ['test_session.py', 'session.py', 'forward.py', 'manager.py'], 'execution_path_count': 4, 'function_id_to_name_file': {'698': 'test_tracking(test_session.py)', '480': 'send(session.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '492': 'handle(forward.py)', '328': 'interrupt_kernel(manager.py)', '694': 'test_send(test_session.py)'}}, {'key': 2664, 'parent': 2686, 'tfidf_word': 'serialize raw start identity feed default channels interrupt version execute ', 'tfidf_method': 'start_channels execute is_complete test_default_version test_feed_identities test_msg test_send test_send_raw test_serialize interrupt_kernel ', 'lda_word': ' extract,header,msg,kernel,client,', 'lda_method': ' execute,msg,extract_header,blockingkernelclient,asynckernelclient,', 'lsi_word': ' msg,extract,header,kernel,client,', 'lsi_method': ' msg,extract_header,asynckernelclient,blockingkernelclient,execute,', 'spm_method': ' ', 'text_summary': "Tab complete text in the kernel's namespace. Request kernel info. Given a message or header, return the header. Ask the kernel whether some code is complete and ready to execute.", 'files_count': 6, 'files': ['client.py', 'session.py', 'utils.py', 'test_adapter.py', 'test_session.py', 'manager.py'], 'execution_path_count': 24, 'function_id_to_name_file': {'116': 'BlockingKernelClient(client.py)', '167': 'kernel_info(client.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '170': 'start_channels(client.py)', '90': 'AsyncKernelClient(client.py)', '704': 'execute(utils.py)', '155': 'execute(client.py)', '163': 'inspect(client.py)', '152': 'comm_info(client.py)', '169': 'shutdown(client.py)', '153': 'complete(client.py)', '161': 'history(client.py)', '516': 'test_default_version(test_adapter.py)', '695': 'test_send_raw(test_session.py)', '694': 'test_send(test_session.py)', '692': 'test_feed_identities(test_session.py)', '696': 'test_serialize(test_session.py)', '693': 'test_msg(test_session.py)', '328': 'interrupt_kernel(manager.py)', '166': 'is_complete(client.py)'}}, {'key': 2288, 'parent': 2748, 'tfidf_word': 'interrupt type identity feed display data channels raw version execute ', 'tfidf_method': 'test_inspect_request test_inspect_reply test_execute_request test_display_data execute test_complete_reply interrupt_kernel start_channels test_inspect_request_token test_complete_request ', 'lda_word': ' msg,header,extract,execute,kernel,', 'lda_method': ' msg,extract_header,blockingkernelclient,asynckernelclient,execute,', 'lsi_word': ' msg,header,extract,kernel,test,', 'lsi_method': ' msg,extract_header,blockingkernelclient,asynckernelclient,execute,', 'spm_method': ' ', 'text_summary': "Tab complete text in the kernel's namespace. Request kernel info. Given a message or header, return the header. Ask the kernel whether some code is complete and ready to execute.", 'files_count': 6, 'files': ['client.py', 'test_adapter.py', 'session.py', 'utils.py', 'test_session.py', 'manager.py'], 'execution_path_count': 35, 'function_id_to_name_file': {'116': 'BlockingKernelClient(client.py)', '167': 'kernel_info(client.py)', '534': 'msg(test_adapter.py)', '520': 'msg(test_adapter.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '170': 'start_channels(client.py)', '90': 'AsyncKernelClient(client.py)', '704': 'execute(utils.py)', '155': 'execute(client.py)', '163': 'inspect(client.py)', '152': 'comm_info(client.py)', '169': 'shutdown(client.py)', '153': 'complete(client.py)', '161': 'history(client.py)', '539': 'test_input_request(test_adapter.py)', '537': 'test_display_data(test_adapter.py)', '543': 'test_kernel_info_reply(test_adapter.py)', '540': 'test_inspect_reply(test_adapter.py)', '542': 'test_inspect_request_token(test_adapter.py)', '541': 'test_inspect_request(test_adapter.py)', '535': 'test_complete_reply(test_adapter.py)', '536': 'test_complete_request(test_adapter.py)', '538': 'test_execute_request(test_adapter.py)', '545': 'test_rename_type(test_adapter.py)', '546': 'test_same_version(test_adapter.py)', '544': 'test_no_adapt(test_adapter.py)', '695': 'test_send_raw(test_session.py)', '694': 'test_send(test_session.py)', '692': 'test_feed_identities(test_session.py)', '696': 'test_serialize(test_session.py)', '693': 'test_msg(test_session.py)', '328': 'interrupt_kernel(manager.py)', '166': 'is_complete(client.py)'}}, {'key': 2379, 'parent': 2748, 'tfidf_word': 'type identity found feed display data channels interrupt version execute ', 'tfidf_method': 'test_execute_request test_execute_reply execute test_complete_request test_complete_reply interrupt_kernel start_channels is_complete test_no_adapt test_display_data ', 'lda_word': ' msg,channels,kernel,start,extract,', 'lda_method': ' msg,extract_header,blockingkernelclient,asynckernelclient,execute,', 'lsi_word': ' msg,header,extract,kernel,test,', 'lsi_method': ' msg,extract_header,blockingkernelclient,asynckernelclient,execute,', 'spm_method': ' ', 'text_summary': "Tab complete text in the kernel's namespace. Request kernel info. Given a message or header, return the header. Ask the kernel whether some code is complete and ready to execute.", 'files_count': 6, 'files': ['client.py', 'test_adapter.py', 'session.py', 'utils.py', 'test_session.py', 'manager.py'], 'execution_path_count': 36, 'function_id_to_name_file': {'116': 'BlockingKernelClient(client.py)', '167': 'kernel_info(client.py)', '520': 'msg(test_adapter.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '170': 'start_channels(client.py)', '90': 'AsyncKernelClient(client.py)', '704': 'execute(utils.py)', '155': 'execute(client.py)', '163': 'inspect(client.py)', '152': 'comm_info(client.py)', '169': 'shutdown(client.py)', '153': 'complete(client.py)', '161': 'history(client.py)', '524': 'test_execute_reply(test_adapter.py)', '525': 'test_execute_request(test_adapter.py)', '532': 'test_rename_type(test_adapter.py)', '528': 'test_no_adapt(test_adapter.py)', '533': 'test_same_version(test_adapter.py)', '695': 'test_send_raw(test_session.py)', '692': 'test_feed_identities(test_session.py)', '694': 'test_send(test_session.py)', '693': 'test_msg(test_session.py)', '696': 'test_serialize(test_session.py)', '328': 'interrupt_kernel(manager.py)', '166': 'is_complete(client.py)', '526': 'test_input_request(test_adapter.py)', '523': 'test_display_data(test_adapter.py)', '527': 'test_kernel_info_reply(test_adapter.py)', '530': 'test_object_info_reply_not_found(test_adapter.py)', '531': 'test_object_info_request(test_adapter.py)', '529': 'test_object_info_reply(test_adapter.py)', '522': 'test_complete_request(test_adapter.py)', '521': 'test_complete_reply(test_adapter.py)'}}, {'key': 2405, 'parent': 2713, 'tfidf_word': 'adapt thread sign utcnow message control serialize socket connect msg ', 'tfidf_method': 'send adapt send serialize thread_send utcnow Message _connect_control_socket sign send ', 'lda_word': ' kernel,shutdown,msg,restart,request,', 'lda_method': ' msg,poll,shutdown_kernel,do_execute,request_shutdown,', 'lsi_word': ' msg,kernel,shutdown,poll,restart,', 'lsi_method': ' msg,request_shutdown,restart_kernel,shutdown_kernel,poll,', 'spm_method': '  &#187; do_execute(signalkernel.py) &rarr; poll(restarter.py) &rarr; restart_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; poll(restarter.py) &rarr; restart_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; restart_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br>', 'text_summary': 'Make a ZeroMQ URL for a given channel. Pass a message to the ZMQ socket to send. Send a shutdown request via control channel. Given a message or header, return the header. Create a zmq Socket and connect it to the kernel.', 'files_count': 9, 'files': ['signalkernel.py', 'restarter.py', 'manager.py', 'session.py', 'test_adapter.py', 'adapter.py', 'connect.py', 'threaded.py', 'channels.py'], 'execution_path_count': 20, 'function_id_to_name_file': {'510': 'do_execute(signalkernel.py)', '236': 'poll(restarter.py)', '363': 'restart_kernel(manager.py)', '364': 'shutdown_kernel(manager.py)', '362': 'request_shutdown(manager.py)', '476': 'msg(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '480': 'send(session.py)', '520': 'msg(test_adapter.py)', '534': 'msg(test_adapter.py)', '444': 'extract_header(session.py)', '50': 'adapt(adapter.py)', '450': 'utcnow(session.py)', '482': 'serialize(session.py)', '483': 'sign(session.py)', '440': 'Message(session.py)', '338': '_connect_control_socket(manager.py)', '192': '_create_connected_socket(connect.py)', '196': '_make_url(connect.py)', '734': 'send(threaded.py)', '738': 'thread_send(threaded.py)', '88': 'send(channels.py)', '114': 'send(channels.py)'}}, {'key': 2408, 'parent': 2713, 'tfidf_word': 'resource connection ipc signal port restarter alive stop kernel cleanup ', 'tfidf_method': '_kill_kernel cleanup_resources finish_shutdown cleanup_connection_file cleanup_ipc_files ports cleanup signal_kernel is_alive stop_restarter ', 'lda_word': ' kernel,shutdown,execute,restart,poll,', 'lda_method': ' cleanup_resources,cleanup_connection_file,cleanup,restart_kernel,do_execute,', 'lsi_word': ' kernel,shutdown,execute,poll,restart,', 'lsi_method': ' do_execute,shutdown_kernel,restart_kernel,poll,has_kernel,', 'spm_method': '  &#187; do_execute(signalkernel.py) &rarr; poll(restarter.py) &rarr; restart_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; _kill_kernel(manager.py) &rarr; signal_kernel(manager.py) &rarr; has_kernel(manager.py) &rarr; _launch_kernel(manager.py) . <br> &#187; poll(restarter.py) &rarr; restart_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; _kill_kernel(manager.py) &rarr; signal_kernel(manager.py) &rarr; has_kernel(manager.py) &rarr; _launch_kernel(manager.py) . <br> &#187; restart_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; _kill_kernel(manager.py) &rarr; signal_kernel(manager.py) &rarr; has_kernel(manager.py) &rarr; _launch_kernel(manager.py) . <br>', 'text_summary': "actually launch the kernel. Wait for kernel shutdown, then kill process if it doesn't shutdown. Restarts a kernel with the arguments that were used to launch it.", 'files_count': 4, 'files': ['signalkernel.py', 'restarter.py', 'manager.py', 'connect.py'], 'execution_path_count': 11, 'function_id_to_name_file': {'510': 'do_execute(signalkernel.py)', '236': 'poll(restarter.py)', '363': 'restart_kernel(manager.py)', '364': 'shutdown_kernel(manager.py)', '346': '_kill_kernel(manager.py)', '365': 'signal_kernel(manager.py)', '354': 'has_kernel(manager.py)', '347': '_launch_kernel(manager.py)', '352': 'finish_shutdown(manager.py)', '357': 'is_alive(manager.py)', '350': 'cleanup_resources(manager.py)', '201': 'cleanup_ipc_files(connect.py)', '211': 'ports(connect.py)', '349': 'cleanup(manager.py)', '368': 'stop_restarter(manager.py)', '200': 'cleanup_connection_file(connect.py)'}}, {'key': 2215, 'parent': 2744, 'tfidf_word': 'execute poll alive kernel restart callback fire stop ', 'tfidf_method': 'is_alive is_alive stop is_alive restart_kernel is_alive restart_kernel _fire_callbacks is_alive is_alive ', 'lda_word': ' execute,poll,stop,alive,kernel,', 'lda_method': ' poll,do_execute,is_alive,restart_kernel,fire_callbacks,', 'lsi_word': ' poll,execute,alive,kernel,restart,', 'lsi_method': ' do_execute,poll,is_alive,restart_kernel,fire_callbacks,', 'spm_method': ' ', 'text_summary': '', 'files_count': 7, 'files': ['signalkernel.py', 'restarter.py', 'managerabc.py', 'multikernelmanager.py', 'channelsabc.py', 'threaded.py', 'channels.py'], 'execution_path_count': 10, 'function_id_to_name_file': {'510': 'do_execute(signalkernel.py)', '236': 'poll(restarter.py)', '373': 'is_alive(managerabc.py)', '428': '_fire_callbacks(restarter.py)', '412': 'is_alive(multikernelmanager.py)', '140': 'is_alive(channelsabc.py)', '419': 'restart_kernel(multikernelmanager.py)', '375': 'restart_kernel(managerabc.py)', '732': 'is_alive(threaded.py)', '239': 'stop(restarter.py)', '86': 'is_alive(channels.py)', '112': 'is_alive(channels.py)'}}, {'key': 2371, 'parent': 2744, 'tfidf_word': 'get env create control n kernel socket spec connect cleanup ', 'tfidf_method': '_create_connected_socket from_ns local_ips is_local_ip KernelSpec cleanup_random_ports cleanup_connection_file _make_url _get_env_substitutions _connect_control_socket ', 'lda_word': ' kernel,start,execute,restart,poll,', 'lda_method': ' poll,do_execute,restart_kernel,start_kernel,pre_start_kernel,', 'lsi_word': ' kernel,start,poll,execute,restart,', 'lsi_method': ' do_execute,poll,restart_kernel,start_kernel,pre_start_kernel,', 'spm_method': '  &#187; do_execute(signalkernel.py) &rarr; poll(restarter.py) &rarr; restart_kernel(manager.py) &rarr; start_kernel(manager.py) &rarr; pre_start_kernel(manager.py) &rarr; write_connection_file(connect.py) &rarr; _record_random_port_names(connect.py) . <br> &#187; poll(restarter.py) &rarr; restart_kernel(manager.py) &rarr; start_kernel(manager.py) &rarr; pre_start_kernel(manager.py) &rarr; write_connection_file(connect.py) &rarr; _record_random_port_names(connect.py) . <br>', 'text_summary': 'Write connection info to JSON dict in self.connection_file. Restarts a kernel with the arguments that were used to launch it. {connection_file})    Restarts a kernel with the arguments that were used to launch it. Forgets randomly assigned port numbers and cleans up the connection file.', 'files_count': 6, 'files': ['signalkernel.py', 'restarter.py', 'manager.py', 'connect.py', 'kernelspec.py', 'localinterfaces.py'], 'execution_path_count': 11, 'function_id_to_name_file': {'510': 'do_execute(signalkernel.py)', '236': 'poll(restarter.py)', '363': 'restart_kernel(manager.py)', '366': 'start_kernel(manager.py)', '360': 'pre_start_kernel(manager.py)', '212': 'write_connection_file(connect.py)', '197': '_record_random_port_names(connect.py)', '353': 'format_kernel_cmd(manager.py)', '369': 'from_ns(manager.py)', '358': 'kernel_spec(manager.py)', '253': 'KernelSpec(kernelspec.py)', '347': '_launch_kernel(manager.py)', '341': '_get_env_substitutions(manager.py)', '314': 'local_ips(localinterfaces.py)', '312': 'is_local_ip(localinterfaces.py)', '202': 'cleanup_random_ports(connect.py)', '200': 'cleanup_connection_file(connect.py)', '359': 'post_start_kernel(manager.py)', '338': '_connect_control_socket(manager.py)', '192': '_create_connected_socket(connect.py)', '196': '_make_url(connect.py)', '367': 'start_restarter(manager.py)'}}, {'key': 2731, 'parent': 2782, 'tfidf_word': 'hook ready reply kernel reqrep shell control wrap output msg ', 'tfidf_method': 'get_control_msg is_alive wrapped _output_hook_kernel reqrep msg_ready is_alive get_msg is_alive msg_ready ', 'lda_word': ' start,output,hook,default,execute,', 'lda_method': ' msg,start,stdin_hook_default,execute_interactive,input,', 'lsi_word': ' msg,start,execute,interactive,hook,', 'lsi_method': ' start,msg,execute_interactive,stdin_hook_default,input,', 'spm_method': '  &#187; start(kernelspecapp.py) &rarr; start(runapp.py) &rarr; execute_interactive(client.py) &rarr; _stdin_hook_default(client.py) &rarr; input(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; start(runapp.py) &rarr; execute_interactive(client.py) &rarr; _stdin_hook_default(client.py) &rarr; input(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; execute_interactive(client.py) &rarr; _stdin_hook_default(client.py) &rarr; input(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; _stdin_hook_default(client.py) &rarr; input(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br>', 'text_summary': 'Output hook when running inside an IPython kernel. Handle an input request. Execute code in the kernel interactively. Receive and return the reply for a given request. Send a string of raw input to the kernel. Get a message from the shell channel. Given a message or header, return the header. Get a message from the control channel. Is there a message that has been received?. Default hook for redisplaying plain-text output.', 'files_count': 10, 'files': ['kernelspecapp.py', 'runapp.py', 'client.py', 'test_adapter.py', 'session.py', 'channels.py', 'managerabc.py', 'multikernelmanager.py', 'channelsabc.py', 'threaded.py'], 'execution_path_count': 25, 'function_id_to_name_file': {'291': 'start(kernelspecapp.py)', '439': 'start(runapp.py)', '122': 'execute_interactive(client.py)', '121': '_stdin_hook_default(client.py)', '162': 'input(client.py)', '520': 'msg(test_adapter.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '534': 'msg(test_adapter.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '113': 'msg_ready(channels.py)', '87': 'msg_ready(channels.py)', '120': '_recv_reply(client.py)', '156': 'get_control_msg(client.py)', '158': 'get_shell_msg(client.py)', '110': 'get_msg(channels.py)', '108': '_recv(channels.py)', '84': 'get_msg(channels.py)', '82': '_recv(channels.py)', '119': '_output_hook_kernel(client.py)', '118': '_output_hook_default(client.py)', '117': 'reqrep(client.py)', '124': 'wrapped(client.py)', '112': 'is_alive(channels.py)', '373': 'is_alive(managerabc.py)', '412': 'is_alive(multikernelmanager.py)', '140': 'is_alive(channelsabc.py)', '86': 'is_alive(channels.py)', '732': 'is_alive(threaded.py)'}}, {'key': 2740, 'parent': 2782, 'tfidf_word': 'ready shell control kernel reqrep wrap get recv msg output ', 'tfidf_method': 'is_alive is_alive is_alive msg_ready reqrep msg_ready _output_hook_kernel is_alive wrapped is_alive ', 'lda_word': ' start,ready,interactive,execute,default,', 'lda_method': ' msg,start,execute_interactive,extract_header,input,', 'lsi_word': ' msg,start,interactive,execute,hook,', 'lsi_method': ' start,msg,execute_interactive,stdin_hook_default,input,', 'spm_method': '  &#187; start(kernelspecapp.py) &rarr; start(runapp.py) &rarr; execute_interactive(client.py) &rarr; _stdin_hook_default(client.py) &rarr; input(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; start(runapp.py) &rarr; execute_interactive(client.py) &rarr; _stdin_hook_default(client.py) &rarr; input(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; execute_interactive(client.py) &rarr; _stdin_hook_default(client.py) &rarr; input(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; _stdin_hook_default(client.py) &rarr; input(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br>', 'text_summary': 'Output hook when running inside an IPython kernel. Handle an input request. Execute code in the kernel interactively. Receive and return the reply for a given request. Send a string of raw input to the kernel. Get a message from the shell channel. Given a message or header, return the header. Get a message from the control channel. Is there a message that has been received?. Default hook for redisplaying plain-text output.', 'files_count': 10, 'files': ['kernelspecapp.py', 'runapp.py', 'client.py', 'test_adapter.py', 'session.py', 'channels.py', 'managerabc.py', 'multikernelmanager.py', 'threaded.py', 'channelsabc.py'], 'execution_path_count': 27, 'function_id_to_name_file': {'291': 'start(kernelspecapp.py)', '439': 'start(runapp.py)', '97': 'execute_interactive(client.py)', '96': '_stdin_hook_default(client.py)', '162': 'input(client.py)', '520': 'msg(test_adapter.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '534': 'msg(test_adapter.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '95': '_recv_reply(client.py)', '100': 'get_shell_msg(client.py)', '84': 'get_msg(channels.py)', '82': '_recv(channels.py)', '110': 'get_msg(channels.py)', '108': '_recv(channels.py)', '98': 'get_control_msg(client.py)', '113': 'msg_ready(channels.py)', '87': 'msg_ready(channels.py)', '91': 'reqrep(client.py)', '105': 'wrapped(client.py)', '94': '_output_hook_kernel(client.py)', '93': '_output_hook_default(client.py)', '112': 'is_alive(channels.py)', '373': 'is_alive(managerabc.py)', '412': 'is_alive(multikernelmanager.py)', '86': 'is_alive(channels.py)', '732': 'is_alive(threaded.py)', '140': 'is_alive(channelsabc.py)'}}, {'key': 2350, 'parent': 2802, 'tfidf_word': 'args pickle pack msgpack version kn id cull roundtrip zero ', 'tfidf_method': 'setUp test_args test_session_id test_load_connection_file_session_with_kn test_load_connection_file_session setUp test_default_version __init__ test_bad_pack test_zero_digest_history ', 'lda_word': ' packer,init,check,test,squash,', 'lda_method': ' check_packers,init,squash_dates,utcnow,test_bad_unpacker,', 'lsi_word': ' packer,init,check,test,squash,', 'lsi_method': ' init,check_packers,squash_dates,utcnow,setup,', 'spm_method': ' ', 'text_summary': '', 'files_count': 7, 'files': ['test_session.py', 'session.py', 'jsonutil.py', 'consoleapp.py', 'connect.py', 'test_connect.py', 'test_adapter.py'], 'execution_path_count': 36, 'function_id_to_name_file': {'683': 'test_bad_roundtrip(test_session.py)', '457': '__init__(session.py)', '459': '_check_packers(session.py)', '450': 'utcnow(session.py)', '244': 'squash_dates(jsonutil.py)', '685': 'test_bad_unpacker(test_session.py)', '682': 'test_bad_packer(test_session.py)', '684': 'test_bad_unpack(test_session.py)', '681': 'test_bad_pack(test_session.py)', '687': 'test_cull_digest_history(test_session.py)', '700': 'test_zero_digest_history(test_session.py)', '697': 'test_session_id(test_session.py)', '678': 'setUp(test_session.py)', '680': 'test_args(test_session.py)', '215': '__init__(consoleapp.py)', '198': '_session_default(connect.py)', '565': 'test_load_connection_file_session_with_kn(test_connect.py)', '564': 'test_load_connection_file_session(test_connect.py)', '516': 'test_default_version(test_adapter.py)', '519': 'setUp(test_adapter.py)', '690': 'test_datetimes_pickle(test_session.py)', '689': 'test_datetimes_msgpack(test_session.py)'}}, {'key': 2801, 'parent': 2802, 'tfidf_word': 'io date flush permission digest msg restarter code tunnel ip ', 'tfidf_method': 'fetch_win32_permissions new_id test_extract_date_from_naive test_extract_dates test_parse_ms_precision _launch test_kernelapp_lifecycle config update_msg_type restart_kernel ', 'lda_word': ' kernel,test,connection,file,spec,', 'lda_method': ' msg,start,extract_header,shutdown_kernel,request_shutdown,', 'lsi_word': ' kernel,start,spec,manager,shutdown,', 'lsi_method': ' msg,extract_header,shutdown_kernel,msg_header,msg_id,', 'spm_method': '  &#187; test_start_parallel_thread_kernels(test_multikernelmanager.py) &rarr; raw_tcp_lifecycle(test_multikernelmanager.py) &rarr; _get_tcp_km(test_multikernelmanager.py) &rarr; AsyncMultiKernelManager(multikernelmanager.py) &rarr; MultiKernelManager(multikernelmanager.py) &rarr; kernel_method(multikernelmanager.py) &rarr; wrapped(multikernelmanager.py) . <br> &#187; tcp_lifecycle_with_loop(test_multikernelmanager.py) &rarr; raw_tcp_lifecycle(test_multikernelmanager.py) &rarr; _get_tcp_km(test_multikernelmanager.py) &rarr; AsyncMultiKernelManager(multikernelmanager.py) &rarr; MultiKernelManager(multikernelmanager.py) &rarr; kernel_method(multikernelmanager.py) &rarr; wrapped(multikernelmanager.py) . <br> &#187; raw_tcp_lifecycle(test_multikernelmanager.py) &rarr; _get_tcp_km(test_multikernelmanager.py) &rarr; AsyncMultiKernelManager(multikernelmanager.py) &rarr; MultiKernelManager(multikernelmanager.py) &rarr; kernel_method(multikernelmanager.py) &rarr; wrapped(multikernelmanager.py) . <br> &#187; test_start_parallel_process_kernels(test_multikernelmanager.py) &rarr; raw_tcp_lifecycle(test_multikernelmanager.py) &rarr; _get_tcp_km(test_multikernelmanager.py) &rarr; AsyncMultiKernelManager(multikernelmanager.py) &rarr; MultiKernelManager(multikernelmanager.py) &rarr; kernel_method(multikernelmanager.py) &rarr; wrapped(multikernelmanager.py) . <br> &#187; test_start_parallel_thread_kernels(test_multikernelmanager.py) &rarr; test_tcp_lifecycle(test_multikernelmanager.py) &rarr; _get_tcp_km(test_multikernelmanager.py) &rarr; MultiKernelManager(multikernelmanager.py) &rarr; kernel_method(multikernelmanager.py) &rarr; wrapped(multikernelmanager.py) . <br> &#187; tcp_lifecycle_with_loop(test_multikernelmanager.py) &rarr; test_tcp_lifecycle(test_multikernelmanager.py) &rarr; _get_tcp_km(test_multikernelmanager.py) &rarr; MultiKernelManager(multikernelmanager.py) &rarr; kernel_method(multikernelmanager.py) &rarr; wrapped(multikernelmanager.py) . <br> &#187; test_start_parallel_process_kernels(test_multikernelmanager.py) &rarr; test_tcp_lifecycle(test_multikernelmanager.py) &rarr; _get_tcp_km(test_multikernelmanager.py) &rarr; MultiKernelManager(multikernelmanager.py) &rarr; kernel_method(multikernelmanager.py) &rarr; wrapped(multikernelmanager.py) . <br> &#187; start_new_async_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; finish_shutdown(manager.py) &rarr; _async_wait(manager.py) &rarr; is_alive(manager.py) &rarr; has_kernel(manager.py) &rarr; _launch_kernel(manager.py) . <br> &#187; run_kernel(manager.py) &rarr; start_new_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; start_new_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; initialize(test_connect.py) &rarr; init_connection_file(consoleapp.py) &rarr; load_connection_file(connect.py) &rarr; load_connection_info(connect.py) &rarr; _ip_default(connect.py) &rarr; localhost(localinterfaces.py) . <br> &#187; initialize(runapp.py) &rarr; handle_sigint(runapp.py) &rarr; interrupt_kernel(manager.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; restart_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; finish_shutdown(manager.py) &rarr; _async_wait(manager.py) &rarr; is_alive(manager.py) &rarr; has_kernel(manager.py) &rarr; _launch_kernel(manager.py) . <br> &#187; tunnel_to_kernel(connect.py) &rarr; try_passwordless_ssh(tunnel.py) &rarr; _try_passwordless_paramiko(tunnel.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; do_execute(signalkernel.py) &rarr; poll(restarter.py) &rarr; restart_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; cleanup_resources(manager.py) &rarr; _close_control_socket(manager.py) &rarr; _create_connected_socket(connect.py) &rarr; _make_url(connect.py) . <br> &#187; start(kernelspecapp.py) &rarr; start(kernelspecapp.py) &rarr; input(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; handle_sigint(runapp.py) &rarr; interrupt_kernel(manager.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; tunnel_connection(tunnel.py) &rarr; open_tunnel(tunnel.py) &rarr; paramiko_tunnel(tunnel.py) &rarr; _try_passwordless_paramiko(tunnel.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; open_tunnel(tunnel.py) &rarr; paramiko_tunnel(tunnel.py) &rarr; _try_passwordless_paramiko(tunnel.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; paramiko_tunnel(tunnel.py) &rarr; _try_passwordless_paramiko(tunnel.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; _try_passwordless_paramiko(tunnel.py) &rarr; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; init_kernel_info(runapp.py) &rarr; kernel_info(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; start(kernelspecapp.py) &rarr; input(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; try_passwordless_ssh(tunnel.py) &rarr; _try_passwordless_paramiko(tunnel.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; shutdown_kernel(manager.py) &rarr; finish_shutdown(manager.py) &rarr; _kill_kernel(manager.py) &rarr; _async_wait(manager.py) &rarr; is_alive(manager.py) &rarr; has_kernel(manager.py) &rarr; _launch_kernel(manager.py) . <br> &#187; poll(restarter.py) &rarr; restart_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; cleanup_resources(manager.py) &rarr; _close_control_socket(manager.py) &rarr; _create_connected_socket(connect.py) &rarr; _make_url(connect.py) . <br> &#187; restart_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; cleanup_resources(manager.py) &rarr; _close_control_socket(manager.py) &rarr; _create_connected_socket(connect.py) &rarr; _make_url(connect.py) . <br> &#187; finish_shutdown(manager.py) &rarr; _kill_kernel(manager.py) &rarr; _async_wait(manager.py) &rarr; is_alive(manager.py) &rarr; has_kernel(manager.py) &rarr; _launch_kernel(manager.py) . <br>', 'text_summary': "Subclasses may override  Prepares a kernel for startup in a separate process. return ip for localhost (almost always 127.0.0.1) test `ipython console --existing` loads a connection file. Prepares a kernel for startup in a separate process. Create a client configured to connect to our kernel. return ip for localhost (almost always 127.0.0.1)   Ensure that a sequence of kernel startups doesn't break anything. Sends a signal to the process group of the kernel (this. return zmq Socket connected to the IOPub channel. Pass a message to the ZMQ socket to send. return ip for localhost (almost always 127.0.0.1)   set up ssh tunnels, if needed. Start a new kernel, and return its Manager and Client. Send a string of raw input to the kernel. Return the connection info as a dict. Subclasses may override Start the polling of the kernel. Ensure that a sequence of kernel startups doesn't break anything. load ip addresses with socket.gethostbyname_ex uniq_stable(elems) -> list. return ip for localhost (almost always 127.0.0.1) test load_connection_file() after. Launches a localhost kernel, binding to the specified ports. test `ipython console --existing` loads a connection file. find a connection file, and return its absolute path. return ip for localhost (almost always 127.0.0.1)      find a connection file, and return its absolute path. tunnel connections to a kernel via ssh. decorator for proxying MKM.method(kernel_id) to individual KMs by ID    decorator for proxying MKM.method(kernel_id) to individual KMs by ID    decorator for proxying MKM.method(kernel_id) to individual KMs by ID    decorator for proxying MKM.method(kernel_id) to individual KMs by ID      decorator for proxying MKM.method(kernel_id) to individual KMs by ID      decorator for proxying MKM.method(kernel_id) to individual KMs by ID     decorator for proxying MKM.method(kernel_id) to individual KMs by ID     decorator for proxying MKM.method(kernel_id) to individual KMs by ID  Verify realpath is used when formatting connection file. For tests, create a file to indicate that we've started. Connect a socket to an address via an ssh tunnel. Returns a dict mapping kernel names to kernelspecs. handle kernel info reply. Given a message or header, return the header. Get the hb channel object for this kernel. Returns the id to associate with the kernel for this request. {connection_file})   Prepares a kernel for startup in a separate process. {connection_file})  Restarts a kernel with the arguments that were used to launch it. Make a blocking client connected to my kernel. populate local and public IPs from flat list of all IPs. return the IP addresses that point to this machine. return ip for localhost (almost always 127.0.0.1)       return ip for localhost (almost always 127.0.0.1)   find the connection file, and load the info if found. Load connection info from JSON dict in self.connection_file. return ip for localhost (almost always 127.0.0.1)  Write connection info to JSON dict in self.connection_file. Immediately processes all pending messages on this channel. Return the number of running kernels. Verify realpath is used when formatting connection file. return zmq Socket connected to the Shell channel. Unserialize a msg_list to a nested message dict. Request kernel info. {connection_file}) Write connection info to JSON dict in self.connection_file. {connection_file})  Context manager to create a kernel in a subprocess. Create an ssh tunnel using command-line ssh that connects port lport. Get a message from the shell channel. populate local and public IPs from flat list of all IPs. return the IP addresses for this machine that are visible to other machines. This is run in the ioloop thread when the kernel info reply is received. return zmq Socket connected to the StdIn channel. return the IP addresses that point to this machine. return zmq Socket connected to the Heartbeat channel. return ip for localhost (almost always 127.0.0.1)   find the connection file, and load the info if found. find the connection file, and load the info if found. Return a mapping of kernel names to resource directories from dir. populate local and public IPs from flat list of all IPs. decorator to ensure load_ips has been run before f. Returns a :class:`KernelSpec` instance for a given kernel_name. Context manager to create a kernel in a subprocess. return zmq Socket connected to the Control channel. test load_connection_file() after. Write connection info to JSON dict in self.connection_file. Create a zmq Socket and connect it to the kernel. Forgets randomly assigned port numbers and cleans up the connection file.", 'files_count': 36, 'files': ['test_multikernelmanager.py', 'multikernelmanager.py', 'manager.py', 'kernelspec.py', 'test_manager.py', 'test_kernelspec.py', 'kernelspecapp.py', 'kernelapp.py', 'localinterfaces.py', 'connect.py', 'session.py', 'test_adapter.py', 'adapter.py', 'threaded.py', 'channels.py', 'test_localinterfaces.py', 'test_connect.py', 'test_session.py', 'consoleapp.py', 'runapp.py', 'jsonutil.py', 'forward.py', 'test_jsonutil.py', 'test_client.py', 'tunnel.py', 'test_ssh.py', 'client.py', 'managerabc.py', 'channelsabc.py', 'test_kernelmanager.py', 'utils.py', 'restarter.py', 'signalkernel.py', 'test_kernelapp.py', 'win_interrupt.py', 'launcher.py'], 'execution_path_count': 911, 'function_id_to_name_file': {'649': 'test_start_sequence_ipc_kernels(test_multikernelmanager.py)', '638': '_get_ipc_km(test_multikernelmanager.py)', '379': 'AsyncMultiKernelManager(multikernelmanager.py)', '381': 'MultiKernelManager(multikernelmanager.py)', '382': 'kernel_method(multikernelmanager.py)', '425': 'wrapped(multikernelmanager.py)', '645': 'test_ipc_lifecycle(test_multikernelmanager.py)', '644': 'test_ipc_cinfo(test_multikernelmanager.py)', '650': 'test_start_sequence_tcp_kernels(test_multikernelmanager.py)', '639': '_get_tcp_km(test_multikernelmanager.py)', '646': 'test_shutdown_all(test_multikernelmanager.py)', '651': 'test_tcp_cinfo(test_multikernelmanager.py)', '648': 'test_start_parallel_thread_kernels(test_multikernelmanager.py)', '643': 'tcp_lifecycle_with_loop(test_multikernelmanager.py)', '642': 'raw_tcp_lifecycle(test_multikernelmanager.py)', '647': 'test_start_parallel_process_kernels(test_multikernelmanager.py)', '652': 'test_tcp_lifecycle(test_multikernelmanager.py)', '653': 'test_tcp_lifecycle_with_kernel_id(test_multikernelmanager.py)', '664': 'test_start_sequence_ipc_kernels(test_multikernelmanager.py)', '654': '_get_ipc_km(test_multikernelmanager.py)', '660': 'test_ipc_lifecycle(test_multikernelmanager.py)', '659': 'test_ipc_cinfo(test_multikernelmanager.py)', '665': 'test_start_sequence_tcp_kernels(test_multikernelmanager.py)', '655': '_get_tcp_km(test_multikernelmanager.py)', '666': 'test_tcp_cinfo(test_multikernelmanager.py)', '668': 'test_tcp_lifecycle_with_kernel_id(test_multikernelmanager.py)', '661': 'test_shutdown_all(test_multikernelmanager.py)', '663': 'test_start_parallel_thread_kernels(test_multikernelmanager.py)', '658': 'tcp_lifecycle_with_loop(test_multikernelmanager.py)', '667': 'test_tcp_lifecycle(test_multikernelmanager.py)', '662': 'test_start_parallel_process_kernels(test_multikernelmanager.py)', '322': 'start_new_async_kernel(manager.py)', '319': 'AsyncKernelManager(manager.py)', '320': 'KernelManager(manager.py)', '254': 'KernelSpecManager(kernelspec.py)', '253': 'KernelSpec(kernelspec.py)', '224': 'AsyncIOLoopKernelManager(manager.py)', '225': 'IOLoopKernelManager(manager.py)', '635': 'test_connection_file_real_path(test_manager.py)', '629': 'test_subclass(test_kernelspec.py)', '618': 'setUp(test_kernelspec.py)', '289': '_kernel_spec_manager_default(kernelspecapp.py)', '345': '_kernel_spec_manager_default(manager.py)', '295': '_kernel_spec_manager_default(kernelspecapp.py)', '286': '_kernel_spec_manager_default(kernelspecapp.py)', '245': 'KernelApp(kernelapp.py)', '292': '_kernel_spec_manager_default(kernelspecapp.py)', '631': 'MyKSM(test_kernelspec.py)', '282': 'KernelSpecApp(kernelspecapp.py)', '284': 'RemoveKernelSpec(kernelspecapp.py)', '283': 'ListKernelSpecs(kernelspecapp.py)', '280': 'InstallKernelSpec(kernelspecapp.py)', '281': 'InstallNativeKernelSpec(kernelspecapp.py)', '321': 'run_kernel(manager.py)', '323': 'start_new_kernel(manager.py)', '366': 'start_kernel(manager.py)', '360': 'pre_start_kernel(manager.py)', '341': '_get_env_substitutions(manager.py)', '314': 'local_ips(localinterfaces.py)', '312': 'is_local_ip(localinterfaces.py)', '212': 'write_connection_file(connect.py)', '197': '_record_random_port_names(connect.py)', '353': 'format_kernel_cmd(manager.py)', '369': 'from_ns(manager.py)', '358': 'kernel_spec(manager.py)', '347': '_launch_kernel(manager.py)', '359': 'post_start_kernel(manager.py)', '338': '_connect_control_socket(manager.py)', '192': '_create_connected_socket(connect.py)', '196': '_make_url(connect.py)', '367': 'start_restarter(manager.py)', '364': 'shutdown_kernel(manager.py)', '362': 'request_shutdown(manager.py)', '476': 'msg(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '480': 'send(session.py)', '520': 'msg(test_adapter.py)', '534': 'msg(test_adapter.py)', '444': 'extract_header(session.py)', '50': 'adapt(adapter.py)', '450': 'utcnow(session.py)', '482': 'serialize(session.py)', '483': 'sign(session.py)', '440': 'Message(session.py)', '734': 'send(threaded.py)', '738': 'thread_send(threaded.py)', '88': 'send(channels.py)', '114': 'send(channels.py)', '188': 'ConnectionFileMixin(connect.py)', '351': 'client(manager.py)', '208': 'get_connection_info(connect.py)', '346': '_kill_kernel(manager.py)', '365': 'signal_kernel(manager.py)', '354': 'has_kernel(manager.py)', '352': 'finish_shutdown(manager.py)', '357': 'is_alive(manager.py)', '350': 'cleanup_resources(manager.py)', '201': 'cleanup_ipc_files(connect.py)', '211': 'ports(connect.py)', '349': 'cleanup(manager.py)', '368': 'stop_restarter(manager.py)', '200': 'cleanup_connection_file(connect.py)', '310': '_requires_ips(localinterfaces.py)', '318': 'ips_loaded(localinterfaces.py)', '301': '_load_ips(localinterfaces.py)', '306': '_load_ips_ipconfig(localinterfaces.py)', '300': '_get_output(localinterfaces.py)', '309': '_populate_from_list(localinterfaces.py)', '299': 'NoIPAddresses(localinterfaces.py)', '316': 'public_ips(localinterfaces.py)', '311': '_uniq_stable(localinterfaces.py)', '304': '_load_ips_ifconfig(localinterfaces.py)', '305': '_load_ips_ip(localinterfaces.py)', '307': '_load_ips_netifaces(localinterfaces.py)', '302': '_load_ips_dumb(localinterfaces.py)', '634': 'test_load_ips(test_localinterfaces.py)', '303': '_load_ips_gethostbyname(localinterfaces.py)', '565': 'test_load_connection_file_session_with_kn(test_connect.py)', '457': '__init__(session.py)', '465': '_new_auth(session.py)', '564': 'test_load_connection_file_session(test_connect.py)', '519': 'setUp(test_adapter.py)', '516': 'test_default_version(test_adapter.py)', '689': 'test_datetimes_msgpack(test_session.py)', '690': 'test_datetimes_pickle(test_session.py)', '683': 'test_bad_roundtrip(test_session.py)', '685': 'test_bad_unpacker(test_session.py)', '682': 'test_bad_packer(test_session.py)', '681': 'test_bad_pack(test_session.py)', '684': 'test_bad_unpack(test_session.py)', '687': 'test_cull_digest_history(test_session.py)', '697': 'test_session_id(test_session.py)', '700': 'test_zero_digest_history(test_session.py)', '680': 'test_args(test_session.py)', '678': 'setUp(test_session.py)', '215': '__init__(consoleapp.py)', '198': '_session_default(connect.py)', '560': 'test_find_connection_file(test_connect.py)', '572': 'initialize(test_connect.py)', '219': 'init_connection_file(consoleapp.py)', '209': 'load_connection_file(connect.py)', '210': 'load_connection_info(connect.py)', '195': '_ip_default(connect.py)', '315': 'localhost(localinterfaces.py)', '559': 'test_app_load_connection_file(test_connect.py)', '437': 'initialize(runapp.py)', '223': 'initialize(consoleapp.py)', '222': 'init_ssh(consoleapp.py)', '220': 'init_kernel_client(consoleapp.py)', '221': 'init_kernel_manager(consoleapp.py)', '255': 'NoSuchKernel(kernelspec.py)', '568': 'test_mixin_record_random_ports(test_connect.py)', '567': 'test_mixin_cleanup_random_ports(test_connect.py)', '621': 'test_find_all_specs(test_kernelspec.py)', '273': 'get_all_specs(kernelspec.py)', '272': 'find_kernel_specs(kernelspec.py)', '258': '_list_kernels_in(kernelspec.py)', '257': '_is_valid_kernel_name(kernelspec.py)', '256': '_is_kernel_dir(kernelspec.py)', '627': 'test_remove_kernel_spec(test_kernelspec.py)', '277': 'remove_kernel_spec(kernelspec.py)', '625': 'test_install_kernel_spec_prefix(test_kernelspec.py)', '626': 'test_kernel_spec_priority(test_kernelspec.py)', '624': 'test_install_kernel_spec(test_kernelspec.py)', '259': 'find_kernel_specs(kernelspec.py)', '622': 'test_find_kernel_specs(test_kernelspec.py)', '694': 'test_send(test_session.py)', '479': 'recv(session.py)', '474': 'deserialize(session.py)', '242': 'extract_dates(jsonutil.py)', '243': 'parse_date(jsonutil.py)', '240': '_ensure_tzinfo(jsonutil.py)', '492': 'handle(forward.py)', '695': 'test_send_raw(test_session.py)', '484': 'unserialize(session.py)', '696': 'test_serialize(test_session.py)', '578': 'test_parse_ms_precision(test_jsonutil.py)', '679': '_datetime_test(test_session.py)', '688': 'test_datetimes(test_session.py)', '575': 'test_date_default(test_jsonutil.py)', '576': 'test_extract_date_from_naive(test_jsonutil.py)', '577': 'test_extract_dates(test_jsonutil.py)', '330': 'restart_kernel(manager.py)', '333': 'start_kernel(manager.py)', '326': '_launch_kernel(manager.py)', '623': 'test_get_kernel_spec(test_kernelspec.py)', '267': '_find_spec_directory(kernelspec.py)', '632': 'find_kernel_specs(test_kernelspec.py)', '274': 'get_kernel_spec(kernelspec.py)', '633': 'get_kernel_spec(test_kernelspec.py)', '549': 'setUp(test_client.py)', '269': '_get_kernel_spec_by_name(kernelspec.py)', '278': '__init__(kernelspec.py)', '260': 'get_kernel_spec(kernelspec.py)', '698': 'test_tracking(test_session.py)', '328': 'interrupt_kernel(manager.py)', '191': 'write_connection_file(connect.py)', '109': 'close(channels.py)', '83': 'close(channels.py)', '730': 'close(threaded.py)', '132': 'close(channels.py)', '718': 'close(threaded.py)', '570': 'test_write_connection_file(test_connect.py)', '686': 'test_clone(test_session.py)', '458': '_add_digest(session.py)', '460': '_cull_digest_history(session.py)', '558': 'DummyConsoleApp(test_connect.py)', '214': 'JupyterConsoleApp(consoleapp.py)', '441': 'Session(session.py)', '213': 'IPythonConsoleApp(consoleapp.py)', '434': 'RunApp(runapp.py)', '392': '__init__(multikernelmanager.py)', '190': 'tunnel_to_kernel(connect.py)', '503': 'select_random_ports(tunnel.py)', '701': 'test_random_ports(test_ssh.py)', '386': 'shutdown_all(multikernelmanager.py)', '383': 'finish_shutdown(multikernelmanager.py)', '410': 'get_kernel(multikernelmanager.py)', '394': '_check_kernel_id(multikernelmanager.py)', '388': 'signal_kernel(multikernelmanager.py)', '385': 'restart_kernel(multikernelmanager.py)', '384': 'interrupt_kernel(multikernelmanager.py)', '387': 'shutdown_kernel(multikernelmanager.py)', '421': 'shutdown_kernel(multikernelmanager.py)', '420': 'shutdown_all(multikernelmanager.py)', '104': 'wait_for_ready(client.py)', '103': 'is_alive(client.py)', '412': 'is_alive(multikernelmanager.py)', '373': 'is_alive(managerabc.py)', '140': 'is_alive(channelsabc.py)', '732': 'is_alive(threaded.py)', '86': 'is_alive(channels.py)', '112': 'is_alive(channels.py)', '123': 'wait_for_ready(client.py)', '165': 'is_alive(client.py)', '641': '_run_lifecycle(test_multikernelmanager.py)', '135': 'run(channels.py)', '128': '_create_socket(channels.py)', '84': 'get_msg(channels.py)', '82': '_recv(channels.py)', '101': 'get_stdin_msg(client.py)', '85': 'get_msgs(channels.py)', '99': 'get_iopub_msg(client.py)', '110': 'get_msg(channels.py)', '108': '_recv(channels.py)', '111': 'get_msgs(channels.py)', '620': 'test_cant_install_kernel_spec(test_kernelspec.py)', '275': 'install_kernel_spec(kernelspec.py)', '268': '_get_destination_dir(kernelspec.py)', '261': 'install_kernel_spec(kernelspec.py)', '614': 'test_start_sequence_process_kernels(test_kernelmanager.py)', '610': '_run_signaltest_lifecycle(test_kernelmanager.py)', '615': 'execute(test_kernelmanager.py)', '609': '_prepare_kernel(test_kernelmanager.py)', '611': 'test_start_parallel_process_kernels(test_kernelmanager.py)', '613': 'test_start_sequence_kernels(test_kernelmanager.py)', '612': 'test_start_parallel_thread_kernels(test_kernelmanager.py)', '398': '_kernel_manager_class_changed(multikernelmanager.py)', '396': '_create_kernel_manager_factory(multikernelmanager.py)', '424': 'create_kernel_manager(multikernelmanager.py)', '397': '_find_available_port(multikernelmanager.py)', '395': '_context_default(multikernelmanager.py)', '399': '_kernel_manager_factory_default(multikernelmanager.py)', '485': '__init__(session.py)', '459': '_check_packers(session.py)', '244': 'squash_dates(jsonutil.py)', '90': 'AsyncKernelClient(client.py)', '147': 'KernelClient(client.py)', '139': 'HBChannelABC(channelsabc.py)', '138': 'ChannelABC(channelsabc.py)', '116': 'BlockingKernelClient(client.py)', '657': '_run_lifecycle(test_multikernelmanager.py)', '704': 'execute(utils.py)', '155': 'execute(client.py)', '148': 'validate_string_dict(client.py)', '423': 'start_kernel(multikernelmanager.py)', '415': 'pre_start_kernel(multikernelmanager.py)', '380': 'DuplicateKernelError(multikernelmanager.py)', '414': 'new_kernel_id(multikernelmanager.py)', '389': 'start_kernel(multikernelmanager.py)', '238': 'start(restarter.py)', '430': 'poll(restarter.py)', '433': 'stop(restarter.py)', '428': '_fire_callbacks(restarter.py)', '510': 'do_execute(signalkernel.py)', '501': 'openssh_tunnel(tunnel.py)', '494': 'SSHException(tunnel.py)', '497': '_stop_tunnel(tunnel.py)', '475': 'feed_identities(session.py)', '202': 'cleanup_random_ports(connect.py)', '106': 'ZMQSocketChannel(channels.py)', '226': 'as_zmqstream(manager.py)', '233': 'wrapped(manager.py)', '557': 'DummyConfigurable(test_connect.py)', '235': 'IOLoopKernelRestarter(restarter.py)', '426': 'KernelRestarter(restarter.py)', '234': 'AsyncIOLoopKernelRestarter(restarter.py)', '291': 'start(kernelspecapp.py)', '251': 'start(kernelapp.py)', '249': 'setup_signals(kernelapp.py)', '252': 'shutdown_handler(kernelapp.py)', '250': 'shutdown(kernelapp.py)', '248': 'log_connection_info(kernelapp.py)', '199': 'blocking_client(connect.py)', '725': 'stop_channels(threaded.py)', '676': '_bad_unpacker(test_session.py)', '536': 'test_complete_request(test_adapter.py)', '517': 'adapt(test_adapter.py)', '562': 'test_find_connection_file_local(test_connect.py)', '189': 'find_connection_file(connect.py)', '493': 'SubHander(forward.py)', '490': 'Handler(forward.py)', '241': 'date_default(jsonutil.py)', '597': 'test_subclasses(test_kernelmanager.py)', '703': 'AsyncKernelManagerWithCleanup(utils.py)', '595': 'test_signal_kernel_subprocesses(test_kernelmanager.py)', '598': 'execute(test_kernelmanager.py)', '702': 'AsyncKernelManagerSubclass(utils.py)', '591': 'transport(test_kernelmanager.py)', '606': 'test_templated_kspec_env(test_kernelmanager.py)', '599': '_env_test_body(test_kernelmanager.py)', '607': 'execute(test_kernelmanager.py)', '604': 'test_signal_kernel_subprocesses(test_kernelmanager.py)', '608': 'execute(test_kernelmanager.py)', '586': 'env(test_kernelmanager.py)', '712': 'stop(utils.py)', '711': 'start(utils.py)', '705': 'test_env(utils.py)', '630': 'test_validate_kernel_name(test_kernelspec.py)', '506': 'SignalTestApp(signalkernel.py)', '507': 'SignalTestKernel(signalkernel.py)', '617': '_install_sample_kernel(test_kernelspec.py)', '640': '_run_cinfo(test_multikernelmanager.py)', '619': 'tearDown(test_kernelspec.py)', '656': '_run_cinfo(test_multikernelmanager.py)', '569': 'test_secure_write(test_connect.py)', '573': 'check_user_only_permissions(test_connect.py)', '574': 'fetch_win32_permissions(test_connect.py)', '563': 'test_find_connection_file_relative(test_connect.py)', '561': 'test_find_connection_file_abspath(test_connect.py)', '539': 'test_input_request(test_adapter.py)', '537': 'test_display_data(test_adapter.py)', '540': 'test_inspect_reply(test_adapter.py)', '543': 'test_kernel_info_reply(test_adapter.py)', '542': 'test_inspect_request_token(test_adapter.py)', '535': 'test_complete_reply(test_adapter.py)', '541': 'test_inspect_request(test_adapter.py)', '538': 'test_execute_request(test_adapter.py)', '545': 'test_rename_type(test_adapter.py)', '544': 'test_no_adapt(test_adapter.py)', '546': 'test_same_version(test_adapter.py)', '514': 'V5toV4TestCase(test_adapter.py)', '512': 'AdapterTest(test_adapter.py)', '526': 'test_input_request(test_adapter.py)', '523': 'test_display_data(test_adapter.py)', '527': 'test_kernel_info_reply(test_adapter.py)', '530': 'test_object_info_reply_not_found(test_adapter.py)', '529': 'test_object_info_reply(test_adapter.py)', '531': 'test_object_info_request(test_adapter.py)', '521': 'test_complete_reply(test_adapter.py)', '522': 'test_complete_request(test_adapter.py)', '524': 'test_execute_reply(test_adapter.py)', '532': 'test_rename_type(test_adapter.py)', '525': 'test_execute_request(test_adapter.py)', '528': 'test_no_adapt(test_adapter.py)', '533': 'test_same_version(test_adapter.py)', '513': 'V4toV5TestCase(test_adapter.py)', '515': 'test_code_to_line_no_code(test_adapter.py)', '51': 'code_to_line(adapter.py)', '158': 'get_shell_msg(client.py)', '157': 'get_iopub_msg(client.py)', '710': '__exit__(utils.py)', '709': '__enter__(utils.py)', '580': 'test_kernelapp_lifecycle(test_kernelapp.py)', '579': '_launch(test_kernelapp.py)', '473': 'clone(session.py)', '481': 'send_raw(session.py)', '675': '_bad_packer(test_session.py)', '699': 'test_unique_msg_ids(test_session.py)', '445': 'msg_header(session.py)', '674': 'TestSession(test_session.py)', '673': 'SessionTestCase(test_session.py)', '556': 'test_shutdown(test_client.py)', '548': '_check_reply(test_client.py)', '550': 'test_comm_info(test_client.py)', '555': 'test_kernel_info(test_client.py)', '551': 'test_complete(test_client.py)', '554': 'test_inspect(test_client.py)', '553': 'test_history(test_client.py)', '117': 'reqrep(client.py)', '124': 'wrapped(client.py)', '150': '_handle_kernel_info_reply(client.py)', '125': 'HBChannel(channels.py)', '102': 'hb_channel(client.py)', '91': 'reqrep(client.py)', '105': 'wrapped(client.py)', '80': 'ZMQSocketChannel(channels.py)', '154': 'control_channel(client.py)', '723': 'ioloop(threaded.py)', '160': 'hb_channel(client.py)', '171': 'stdin_channel(client.py)', '164': 'iopub_channel(client.py)', '168': 'shell_channel(client.py)', '740': 'send_interrupt(win_interrupt.py)', '334': '__del__(manager.py)', '293': 'start(kernelspecapp.py)', '294': 'path_key(kernelspecapp.py)', '735': 'start(threaded.py)', '720': 'start(threaded.py)', '141': 'start(channelsabc.py)', '432': 'start(restarter.py)', '288': 'start(kernelspecapp.py)', '89': 'start(channels.py)', '115': 'start(channels.py)', '290': 'start(kernelspecapp.py)', '438': 'parse_command_line(runapp.py)', '218': 'build_kernel_argv(consoleapp.py)', '308': '_only_once(localinterfaces.py)', '317': 'wrapped(localinterfaces.py)', '47': 'V4toV5(adapter.py)', '46': 'Adapter(adapter.py)', '77': 'object_info_request(adapter.py)', '52': 'extract_oname_v4(adapter.py)', '70': 'complete_request(adapter.py)', '75': 'kernel_info_reply(adapter.py)', '49': '_version_str_to_list(adapter.py)', '48': 'V5toV4(adapter.py)', '53': '__call__(adapter.py)', '54': 'handle_reply_status_error(adapter.py)', '57': 'update_msg_type(adapter.py)', '56': 'update_metadata(adapter.py)', '55': 'update_header(adapter.py)', '247': 'initialize(kernelapp.py)', '246': '_record_started(kernelapp.py)', '585': 'config(test_kernelmanager.py)', '262': 'install_native_kernel_spec(kernelspec.py)', '276': 'install_native_kernel_spec(kernelspec.py)', '265': 'to_json(kernelspec.py)', '264': 'to_dict(kernelspec.py)', '449': 'test_msg2obj(session.py)', '453': '__init__(session.py)', '470': '_signature_scheme_changed(session.py)', '463': '_key_default(session.py)', '447': 'new_id_bytes(session.py)', '462': '_key_changed(session.py)', '443': 'default_secure(session.py)', '469': '_session_default(session.py)', '446': 'new_id(session.py)', '413': 'list_kernel_ids(multikernelmanager.py)', '721': 'stop(threaded.py)', '724': 'start_channels(threaded.py)', '722': '_check_kernel_info_reply(threaded.py)', '716': '__init__(threaded.py)', '416': 'remove_kernel(multikernelmanager.py)', '713': 'IOLoopThread(threaded.py)', '714': 'ThreadedKernelClient(threaded.py)', '715': 'ThreadedZMQSocketChannel(threaded.py)', '731': 'flush(threaded.py)', '727': '_flush(threaded.py)', '418': 'request_shutdown(multikernelmanager.py)', '402': 'cleanup_resources(multikernelmanager.py)', '408': 'finish_shutdown(multikernelmanager.py)', '393': '__len__(multikernelmanager.py)', '298': 'launch_kernel(launcher.py)', '739': 'create_interrupt_event(win_interrupt.py)', '741': 'SECURITY_ATTRIBUTES(win_interrupt.py)', '509': '__init__(signalkernel.py)', '127': '__init__(channels.py)', '126': 'InvalidPortNumber(channels.py)', '107': '__init__(channels.py)', '81': '__init__(channels.py)', '726': '__init__(threaded.py)', '737': 'setup_stream(threaded.py)', '728': '_handle_recv(threaded.py)', '729': 'call_handlers(threaded.py)', '136': 'stop(channels.py)', '133': 'is_beating(channels.py)', '145': 'time_to_dead(channelsabc.py)', '131': 'call_handlers(channels.py)', '130': '_poll(channels.py)', '435': 'handle_sigint(runapp.py)', '355': 'interrupt_kernel(manager.py)', '411': 'interrupt_kernel(multikernelmanager.py)', '372': 'interrupt_kernel(managerabc.py)', '505': 'tunnel_connection(tunnel.py)', '500': 'open_tunnel(tunnel.py)', '502': 'paramiko_tunnel(tunnel.py)', '499': '_try_passwordless_paramiko(tunnel.py)', '496': '_split_server(tunnel.py)', '495': '_paramiko_tunnel(tunnel.py)', '491': 'forward_tunnel(forward.py)', '436': 'init_kernel_info(runapp.py)', '137': 'unpause(channels.py)', '146': 'unpause(channelsabc.py)', '167': 'kernel_info(client.py)', '297': 'start(kernelspecapp.py)', '162': 'input(client.py)', '504': 'try_passwordless_ssh(tunnel.py)', '498': '_try_passwordless_openssh(tunnel.py)', '331': 'shutdown_kernel(manager.py)', '337': '_close_control_socket(manager.py)', '236': 'poll(restarter.py)', '363': 'restart_kernel(manager.py)', '203': 'connect_control(connect.py)', '207': 'connect_stdin(connect.py)', '206': 'connect_shell(connect.py)', '205': 'connect_iopub(connect.py)', '204': 'connect_hb(connect.py)', '228': 'start_restarter(manager.py)', '231': 'start_restarter(manager.py)', '439': 'start(runapp.py)', '122': 'execute_interactive(client.py)', '97': 'execute_interactive(client.py)', '327': 'finish_shutdown(manager.py)', '324': '_async_wait(manager.py)', '329': 'is_alive(manager.py)', '325': '_kill_kernel(manager.py)', '332': 'signal_kernel(manager.py)'}}, {'key': 573, 'parent': 1430, 'tfidf_word': 'EP: 573, Name: AsyncKernelClient &rarr; execute &rarr; msg &rarr; msg &rarr; msg &rarr; msg_header &rarr; msg_id', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 688, 'parent': 1430, 'tfidf_word': 'EP: 688, Name: BlockingKernelClient &rarr; execute &rarr; msg &rarr; msg &rarr; msg &rarr; msg_header &rarr; msg_id', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 668, 'parent': 1432, 'tfidf_word': 'EP: 668, Name: BlockingKernelClient &rarr; kernel_info &rarr; msg &rarr; msg &rarr; msg &rarr; msg_header &rarr; msg_id', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1418, 'parent': 1432, 'tfidf_word': 'header id info async channels client start kernel msg ', 'tfidf_method': 'kernel_info msg msg_header msg_id msg msg start_channels AsyncKernelClient ', 'lda_word': ' msg,info,kernel,channels,header,', 'lda_method': ' msg,msg_id,msg_header,kernel_info,asynckernelclient,', 'lsi_word': ' msg,kernel,header,info,async,', 'lsi_method': ' msg,msg_id,msg_header,kernel_info,start_channels,', 'spm_method': '  &#187; kernel_info(client.py) &rarr; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br>', 'text_summary': '', 'files_count': 3, 'files': ['client.py', 'test_adapter.py', 'session.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'170': 'start_channels(client.py)', '167': 'kernel_info(client.py)', '520': 'msg(test_adapter.py)', '534': 'msg(test_adapter.py)', '476': 'msg(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '90': 'AsyncKernelClient(client.py)'}}, {'key': 1428, 'parent': 2018, 'tfidf_word': 'client header id inspect kernel async blocking msg ', 'tfidf_method': 'inspect msg msg_header msg_id msg msg BlockingKernelClient AsyncKernelClient ', 'lda_word': ' msg,kernel,client,header,inspect,', 'lda_method': ' msg,inspect,msg_header,msg_id,asynckernelclient,', 'lsi_word': ' msg,client,inspect,header,kernel,', 'lsi_method': ' msg,inspect,msg_header,msg_id,blockingkernelclient,', 'spm_method': '  &#187; inspect(client.py) &rarr; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br>', 'text_summary': '', 'files_count': 3, 'files': ['client.py', 'test_adapter.py', 'session.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'90': 'AsyncKernelClient(client.py)', '163': 'inspect(client.py)', '520': 'msg(test_adapter.py)', '534': 'msg(test_adapter.py)', '476': 'msg(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '116': 'BlockingKernelClient(client.py)'}}, {'key': 2013, 'parent': 2018, 'tfidf_word': 'interrupt input type identity found feed display data version msg ', 'tfidf_method': 'test_kernel_info_reply test_input_request test_serialize test_execute_reply test_display_data test_complete_request test_complete_reply is_complete test_object_info_reply test_execute_request ', 'lda_word': ' msg,test,header,kernel,client,', 'lda_method': ' msg,msg_id,msg_header,test_object_info_request,comm_info,', 'lsi_word': ' msg,header,test,kernel,client,', 'lsi_method': ' msg,msg_header,msg_id,asynckernelclient,blockingkernelclient,', 'spm_method': '  &#187; AsyncKernelClient(client.py) &rarr; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; comm_info(client.py) &rarr; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; BlockingKernelClient(client.py) &rarr; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; shutdown(client.py) &rarr; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; complete(client.py) &rarr; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; history(client.py) &rarr; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br>', 'text_summary': "Tab complete text in the kernel's namespace. Ask the kernel whether some code is complete and ready to execute.", 'files_count': 5, 'files': ['client.py', 'test_adapter.py', 'session.py', 'test_session.py', 'manager.py'], 'execution_path_count': 28, 'function_id_to_name_file': {'90': 'AsyncKernelClient(client.py)', '152': 'comm_info(client.py)', '520': 'msg(test_adapter.py)', '534': 'msg(test_adapter.py)', '476': 'msg(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '116': 'BlockingKernelClient(client.py)', '169': 'shutdown(client.py)', '153': 'complete(client.py)', '161': 'history(client.py)', '526': 'test_input_request(test_adapter.py)', '523': 'test_display_data(test_adapter.py)', '527': 'test_kernel_info_reply(test_adapter.py)', '530': 'test_object_info_reply_not_found(test_adapter.py)', '529': 'test_object_info_reply(test_adapter.py)', '531': 'test_object_info_request(test_adapter.py)', '521': 'test_complete_reply(test_adapter.py)', '522': 'test_complete_request(test_adapter.py)', '524': 'test_execute_reply(test_adapter.py)', '525': 'test_execute_request(test_adapter.py)', '532': 'test_rename_type(test_adapter.py)', '528': 'test_no_adapt(test_adapter.py)', '533': 'test_same_version(test_adapter.py)', '695': 'test_send_raw(test_session.py)', '692': 'test_feed_identities(test_session.py)', '694': 'test_send(test_session.py)', '696': 'test_serialize(test_session.py)', '693': 'test_msg(test_session.py)', '328': 'interrupt_kernel(manager.py)', '166': 'is_complete(client.py)'}}, {'key': 575, 'parent': 1514, 'tfidf_word': 'EP: 575, Name: AsyncKernelClient &rarr; execute &rarr; msg &rarr; msg &rarr; msg_header &rarr; msg_id', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 690, 'parent': 1514, 'tfidf_word': 'EP: 690, Name: BlockingKernelClient &rarr; execute &rarr; msg &rarr; msg &rarr; msg_header &rarr; msg_id', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 670, 'parent': 1518, 'tfidf_word': 'EP: 670, Name: BlockingKernelClient &rarr; kernel_info &rarr; msg &rarr; msg &rarr; msg_header &rarr; msg_id', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1490, 'parent': 1518, 'tfidf_word': 'header id info async channels client start kernel msg ', 'tfidf_method': 'kernel_info msg msg_header msg_id msg start_channels AsyncKernelClient ', 'lda_word': ' msg,kernel,header,info,async,', 'lda_method': ' msg,msg_id,kernel_info,start_channels,msg_header,', 'lsi_word': ' msg,kernel,info,header,async,', 'lsi_method': ' msg,msg_header,msg_id,kernel_info,asynckernelclient,', 'spm_method': ' ', 'text_summary': '', 'files_count': 3, 'files': ['client.py', 'test_adapter.py', 'session.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'170': 'start_channels(client.py)', '167': 'kernel_info(client.py)', '534': 'msg(test_adapter.py)', '476': 'msg(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '90': 'AsyncKernelClient(client.py)'}}, {'key': 1510, 'parent': 2252, 'tfidf_word': 'client header id inspect kernel async blocking msg ', 'tfidf_method': 'inspect msg msg_header msg_id msg BlockingKernelClient AsyncKernelClient ', 'lda_word': ' msg,header,inspect,kernel,client,', 'lda_method': ' msg,inspect,msg_id,msg_header,blockingkernelclient,', 'lsi_word': ' msg,inspect,header,client,kernel,', 'lsi_method': ' msg,msg_header,msg_id,inspect,asynckernelclient,', 'spm_method': ' ', 'text_summary': '', 'files_count': 3, 'files': ['client.py', 'test_adapter.py', 'session.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'90': 'AsyncKernelClient(client.py)', '163': 'inspect(client.py)', '534': 'msg(test_adapter.py)', '476': 'msg(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '116': 'BlockingKernelClient(client.py)'}}, {'key': 2248, 'parent': 2252, 'tfidf_word': 'interrupt type identity feed execute display data raw version msg ', 'tfidf_method': 'test_inspect_request test_inspect_reply test_input_request test_serialize test_display_data test_complete_request test_complete_reply is_complete test_inspect_request_token test_execute_request ', 'lda_word': ' msg,header,test,kernel,client,', 'lda_method': ' msg,msg_header,msg_id,test_complete_request,test_same_version,', 'lsi_word': ' msg,header,test,kernel,client,', 'lsi_method': ' msg,msg_header,msg_id,asynckernelclient,blockingkernelclient,', 'spm_method': ' ', 'text_summary': "Tab complete text in the kernel's namespace. Ask the kernel whether some code is complete and ready to execute.", 'files_count': 5, 'files': ['client.py', 'test_adapter.py', 'session.py', 'test_session.py', 'manager.py'], 'execution_path_count': 27, 'function_id_to_name_file': {'90': 'AsyncKernelClient(client.py)', '152': 'comm_info(client.py)', '534': 'msg(test_adapter.py)', '476': 'msg(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '116': 'BlockingKernelClient(client.py)', '169': 'shutdown(client.py)', '153': 'complete(client.py)', '161': 'history(client.py)', '539': 'test_input_request(test_adapter.py)', '537': 'test_display_data(test_adapter.py)', '543': 'test_kernel_info_reply(test_adapter.py)', '540': 'test_inspect_reply(test_adapter.py)', '542': 'test_inspect_request_token(test_adapter.py)', '541': 'test_inspect_request(test_adapter.py)', '535': 'test_complete_reply(test_adapter.py)', '536': 'test_complete_request(test_adapter.py)', '538': 'test_execute_request(test_adapter.py)', '545': 'test_rename_type(test_adapter.py)', '546': 'test_same_version(test_adapter.py)', '544': 'test_no_adapt(test_adapter.py)', '695': 'test_send_raw(test_session.py)', '694': 'test_send(test_session.py)', '692': 'test_feed_identities(test_session.py)', '696': 'test_serialize(test_session.py)', '693': 'test_msg(test_session.py)', '328': 'interrupt_kernel(manager.py)', '166': 'is_complete(client.py)'}}, {'key': 900, 'parent': 1435, 'tfidf_word': 'EP: 900, Name: execute &rarr; execute &rarr; msg &rarr; msg &rarr; msg &rarr; msg_header &rarr; msg_id', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1431, 'parent': 1435, 'tfidf_word': 'client execute header id kernel async blocking msg ', 'tfidf_method': 'execute msg msg_header msg_id msg msg BlockingKernelClient AsyncKernelClient ', 'lda_word': ' msg,client,execute,header,kernel,', 'lda_method': ' msg,execute,msg_header,msg_id,asynckernelclient,', 'lsi_word': ' msg,client,header,execute,kernel,', 'lsi_method': ' msg,msg_header,msg_id,execute,blockingkernelclient,', 'spm_method': '  &#187; execute(client.py) &rarr; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br>', 'text_summary': '', 'files_count': 3, 'files': ['client.py', 'test_adapter.py', 'session.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'90': 'AsyncKernelClient(client.py)', '155': 'execute(client.py)', '534': 'msg(test_adapter.py)', '520': 'msg(test_adapter.py)', '476': 'msg(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '116': 'BlockingKernelClient(client.py)'}}, {'key': 1433, 'parent': 2232, 'tfidf_word': 'header id info client kernel async blocking channels start msg ', 'tfidf_method': 'kernel_info msg msg_header msg_id msg msg BlockingKernelClient start_channels AsyncKernelClient ', 'lda_word': ' msg,kernel,header,info,client,', 'lda_method': ' msg,kernel_info,msg_header,msg_id,start_channels,', 'lsi_word': ' msg,kernel,header,info,client,', 'lsi_method': ' msg,msg_id,msg_header,kernel_info,blockingkernelclient,', 'spm_method': '  &#187; kernel_info(client.py) &rarr; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br>', 'text_summary': '', 'files_count': 3, 'files': ['client.py', 'test_adapter.py', 'session.py'], 'execution_path_count': 3, 'function_id_to_name_file': {'116': 'BlockingKernelClient(client.py)', '167': 'kernel_info(client.py)', '534': 'msg(test_adapter.py)', '520': 'msg(test_adapter.py)', '476': 'msg(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '170': 'start_channels(client.py)', '90': 'AsyncKernelClient(client.py)'}}, {'key': 2017, 'parent': 2232, 'tfidf_word': 'interrupt type identity feed execute display data raw version msg ', 'tfidf_method': 'test_inspect_reply test_inspect_request test_input_request test_execute_request test_serialize test_complete_request test_complete_reply is_complete test_inspect_request_token test_display_data ', 'lda_word': ' msg,header,test,kernel,client,', 'lda_method': ' msg,msg_header,msg_id,asynckernelclient,comm_info,', 'lsi_word': ' msg,header,test,kernel,client,', 'lsi_method': ' msg,msg_id,msg_header,asynckernelclient,blockingkernelclient,', 'spm_method': '  &#187; AsyncKernelClient(client.py) &rarr; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; inspect(client.py) &rarr; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; BlockingKernelClient(client.py) &rarr; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; comm_info(client.py) &rarr; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; shutdown(client.py) &rarr; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; complete(client.py) &rarr; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; history(client.py) &rarr; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br>', 'text_summary': "Tab complete text in the kernel's namespace. Get metadata information about an object in the kernel's namespace.", 'files_count': 5, 'files': ['client.py', 'test_adapter.py', 'session.py', 'test_session.py', 'manager.py'], 'execution_path_count': 29, 'function_id_to_name_file': {'90': 'AsyncKernelClient(client.py)', '163': 'inspect(client.py)', '534': 'msg(test_adapter.py)', '520': 'msg(test_adapter.py)', '476': 'msg(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '116': 'BlockingKernelClient(client.py)', '152': 'comm_info(client.py)', '169': 'shutdown(client.py)', '153': 'complete(client.py)', '161': 'history(client.py)', '539': 'test_input_request(test_adapter.py)', '537': 'test_display_data(test_adapter.py)', '543': 'test_kernel_info_reply(test_adapter.py)', '540': 'test_inspect_reply(test_adapter.py)', '542': 'test_inspect_request_token(test_adapter.py)', '541': 'test_inspect_request(test_adapter.py)', '535': 'test_complete_reply(test_adapter.py)', '536': 'test_complete_request(test_adapter.py)', '538': 'test_execute_request(test_adapter.py)', '545': 'test_rename_type(test_adapter.py)', '544': 'test_no_adapt(test_adapter.py)', '546': 'test_same_version(test_adapter.py)', '695': 'test_send_raw(test_session.py)', '692': 'test_feed_identities(test_session.py)', '694': 'test_send(test_session.py)', '696': 'test_serialize(test_session.py)', '693': 'test_msg(test_session.py)', '328': 'interrupt_kernel(manager.py)', '166': 'is_complete(client.py)'}}, {'key': 894, 'parent': 1531, 'tfidf_word': 'EP: 894, Name: execute &rarr; execute &rarr; msg &rarr; msg &rarr; msg_header &rarr; msg_id', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1512, 'parent': 1531, 'tfidf_word': 'client execute header id kernel async blocking msg ', 'tfidf_method': 'execute msg msg_header msg_id msg BlockingKernelClient AsyncKernelClient ', 'lda_word': ' msg,client,execute,kernel,async,', 'lda_method': ' msg,msg_id,execute,msg_header,blockingkernelclient,', 'lsi_word': ' msg,client,execute,kernel,header,', 'lsi_method': ' msg,execute,msg_header,msg_id,asynckernelclient,', 'spm_method': ' ', 'text_summary': '', 'files_count': 3, 'files': ['client.py', 'test_adapter.py', 'session.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'90': 'AsyncKernelClient(client.py)', '155': 'execute(client.py)', '520': 'msg(test_adapter.py)', '476': 'msg(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '116': 'BlockingKernelClient(client.py)'}}, {'key': 1516, 'parent': 2285, 'tfidf_word': 'header id info client kernel async blocking channels start msg ', 'tfidf_method': 'kernel_info msg msg_header msg_id msg BlockingKernelClient start_channels AsyncKernelClient ', 'lda_word': ' msg,kernel,info,header,client,', 'lda_method': ' msg,msg_header,msg_id,kernel_info,asynckernelclient,', 'lsi_word': ' msg,kernel,header,info,client,', 'lsi_method': ' msg,msg_id,msg_header,kernel_info,blockingkernelclient,', 'spm_method': ' ', 'text_summary': '', 'files_count': 3, 'files': ['client.py', 'test_adapter.py', 'session.py'], 'execution_path_count': 3, 'function_id_to_name_file': {'116': 'BlockingKernelClient(client.py)', '167': 'kernel_info(client.py)', '520': 'msg(test_adapter.py)', '476': 'msg(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '170': 'start_channels(client.py)', '90': 'AsyncKernelClient(client.py)'}}, {'key': 2255, 'parent': 2285, 'tfidf_word': 'interrupt input type identity found feed display data version msg ', 'tfidf_method': 'is_complete test_input_request test_execute_request test_serialize test_display_data test_complete_request test_complete_reply interrupt_kernel test_no_adapt test_execute_reply ', 'lda_word': ' msg,header,test,kernel,client,', 'lda_method': ' msg,msg_header,msg_id,asynckernelclient,blockingkernelclient,', 'lsi_word': ' msg,header,test,kernel,client,', 'lsi_method': ' msg,msg_id,msg_header,asynckernelclient,blockingkernelclient,', 'spm_method': ' ', 'text_summary': "Tab complete text in the kernel's namespace. Get metadata information about an object in the kernel's namespace.", 'files_count': 5, 'files': ['client.py', 'test_adapter.py', 'session.py', 'test_session.py', 'manager.py'], 'execution_path_count': 30, 'function_id_to_name_file': {'90': 'AsyncKernelClient(client.py)', '163': 'inspect(client.py)', '520': 'msg(test_adapter.py)', '476': 'msg(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '116': 'BlockingKernelClient(client.py)', '152': 'comm_info(client.py)', '169': 'shutdown(client.py)', '153': 'complete(client.py)', '161': 'history(client.py)', '526': 'test_input_request(test_adapter.py)', '523': 'test_display_data(test_adapter.py)', '527': 'test_kernel_info_reply(test_adapter.py)', '530': 'test_object_info_reply_not_found(test_adapter.py)', '529': 'test_object_info_reply(test_adapter.py)', '531': 'test_object_info_request(test_adapter.py)', '521': 'test_complete_reply(test_adapter.py)', '522': 'test_complete_request(test_adapter.py)', '524': 'test_execute_reply(test_adapter.py)', '525': 'test_execute_request(test_adapter.py)', '532': 'test_rename_type(test_adapter.py)', '533': 'test_same_version(test_adapter.py)', '528': 'test_no_adapt(test_adapter.py)', '695': 'test_send_raw(test_session.py)', '694': 'test_send(test_session.py)', '692': 'test_feed_identities(test_session.py)', '696': 'test_serialize(test_session.py)', '693': 'test_msg(test_session.py)', '328': 'interrupt_kernel(manager.py)', '166': 'is_complete(client.py)'}}, {'key': 1411, 'parent': 2050, 'tfidf_word': 'id request send async new restart start kernel shutdown msg ', 'tfidf_method': 'shutdown_kernel request_shutdown msg msg_header msg_id send start_new_async_kernel restart_kernel ', 'lda_word': ' msg,kernel,header,shutdown,send,', 'lda_method': ' request_shutdown,msg_header,send,msg,shutdown_kernel,', 'lsi_word': ' msg,shutdown,kernel,header,request,', 'lsi_method': ' send,msg_id,msg_header,shutdown_kernel,request_shutdown,', 'spm_method': '  &#187; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) &rarr; send(session.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br>', 'text_summary': 'Attempts to stop the kernel process cleanly. Restarts a kernel with the arguments that were used to launch it.', 'files_count': 2, 'files': ['manager.py', 'session.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'330': 'restart_kernel(manager.py)', '331': 'shutdown_kernel(manager.py)', '362': 'request_shutdown(manager.py)', '480': 'send(session.py)', '476': 'msg(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '322': 'start_new_async_kernel(manager.py)'}}, {'key': 1473, 'parent': 2050, 'tfidf_word': 'header id request async new restart start kernel shutdown msg ', 'tfidf_method': 'shutdown_kernel request_shutdown msg msg_header msg_id start_new_async_kernel restart_kernel ', 'lda_word': ' msg,shutdown,kernel,header,request,', 'lda_method': ' shutdown_kernel,msg_id,msg,request_shutdown,msg_header,', 'lsi_word': ' msg,kernel,shutdown,request,header,', 'lsi_method': ' shutdown_kernel,msg_header,request_shutdown,msg_id,msg,', 'spm_method': ' ', 'text_summary': '', 'files_count': 2, 'files': ['manager.py', 'session.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'330': 'restart_kernel(manager.py)', '331': 'shutdown_kernel(manager.py)', '362': 'request_shutdown(manager.py)', '476': 'msg(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '322': 'start_new_async_kernel(manager.py)'}}, {'key': 2005, 'parent': 2304, 'tfidf_word': 'header id request async new restart start kernel shutdown msg ', 'tfidf_method': 'shutdown_kernel request_shutdown msg msg_header msg_id msg start_new_async_kernel restart_kernel msg ', 'lda_word': ' msg,kernel,shutdown,request,header,', 'lda_method': ' msg,shutdown_kernel,start_new_async_kernel,request_shutdown,msg_id,', 'lsi_word': ' msg,shutdown,kernel,header,request,', 'lsi_method': ' msg,shutdown_kernel,request_shutdown,msg_header,msg_id,', 'spm_method': '  &#187; restart_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) &rarr; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; request_shutdown(manager.py) &rarr; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; start_new_async_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br>', 'text_summary': '', 'files_count': 3, 'files': ['manager.py', 'test_adapter.py', 'session.py'], 'execution_path_count': 4, 'function_id_to_name_file': {'330': 'restart_kernel(manager.py)', '331': 'shutdown_kernel(manager.py)', '362': 'request_shutdown(manager.py)', '520': 'msg(test_adapter.py)', '534': 'msg(test_adapter.py)', '476': 'msg(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '322': 'start_new_async_kernel(manager.py)'}}, {'key': 2007, 'parent': 2304, 'tfidf_word': 'header id request async new restart start kernel shutdown msg ', 'tfidf_method': 'shutdown_kernel request_shutdown msg msg_header msg_id msg start_new_async_kernel restart_kernel msg ', 'lda_word': ' msg,kernel,shutdown,header,request,', 'lda_method': ' msg,request_shutdown,msg_header,shutdown_kernel,msg_id,', 'lsi_word': ' msg,kernel,shutdown,header,request,', 'lsi_method': ' msg,shutdown_kernel,request_shutdown,msg_id,msg_header,', 'spm_method': '  &#187; restart_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) &rarr; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; request_shutdown(manager.py) &rarr; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; start_new_async_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br>', 'text_summary': '', 'files_count': 3, 'files': ['manager.py', 'test_adapter.py', 'session.py'], 'execution_path_count': 4, 'function_id_to_name_file': {'330': 'restart_kernel(manager.py)', '331': 'shutdown_kernel(manager.py)', '362': 'request_shutdown(manager.py)', '534': 'msg(test_adapter.py)', '520': 'msg(test_adapter.py)', '476': 'msg(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '322': 'start_new_async_kernel(manager.py)'}}, {'key': 1390, 'parent': 1732, 'tfidf_word': 'EP: 1390, Name: handle &rarr; send &rarr; msg &rarr; msg_header &rarr; msg_id', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1730, 'parent': 1732, 'tfidf_word': 'header id test send interrupt kernel tracking msg ', 'tfidf_method': 'msg msg_header msg_id send interrupt_kernel test_send test_tracking ', 'lda_word': ' msg,send,header,test,kernel,', 'lda_method': ' msg_id,msg_header,send,msg,test_tracking,', 'lsi_word': ' msg,send,header,test,tracking,', 'lsi_method': ' send,msg_id,msg_header,msg,test_tracking,', 'spm_method': ' ', 'text_summary': 'Pass a message to the ZMQ socket to send.', 'files_count': 3, 'files': ['test_session.py', 'session.py', 'manager.py'], 'execution_path_count': 3, 'function_id_to_name_file': {'698': 'test_tracking(test_session.py)', '480': 'send(session.py)', '476': 'msg(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '328': 'interrupt_kernel(manager.py)', '694': 'test_send(test_session.py)'}}, {'key': 795, 'parent': 2382, 'tfidf_word': 'EP: 795, Name: test_unique_msg_ids &rarr; msg_header &rarr; msg_id', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2375, 'parent': 2382, 'tfidf_word': 'serialize start raw identity feed default channels interrupt version execute ', 'tfidf_method': 'start_channels is_complete test_default_version test_feed_identities test_msg test_send test_send_raw test_serialize execute interrupt_kernel ', 'lda_word': ' msg,header,test,complete,kernel,', 'lda_method': ' msg_id,msg,msg_header,blockingkernelclient,inspect,', 'lsi_word': ' msg,header,kernel,client,async,', 'lsi_method': ' msg_id,msg,msg_header,blockingkernelclient,asynckernelclient,', 'spm_method': ' ', 'text_summary': "Tab complete text in the kernel's namespace. Request kernel info. Ask the kernel whether some code is complete and ready to execute.", 'files_count': 6, 'files': ['utils.py', 'client.py', 'session.py', 'test_adapter.py', 'test_session.py', 'manager.py'], 'execution_path_count': 24, 'function_id_to_name_file': {'704': 'execute(utils.py)', '155': 'execute(client.py)', '476': 'msg(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '90': 'AsyncKernelClient(client.py)', '116': 'BlockingKernelClient(client.py)', '167': 'kernel_info(client.py)', '170': 'start_channels(client.py)', '163': 'inspect(client.py)', '152': 'comm_info(client.py)', '169': 'shutdown(client.py)', '153': 'complete(client.py)', '161': 'history(client.py)', '516': 'test_default_version(test_adapter.py)', '695': 'test_send_raw(test_session.py)', '692': 'test_feed_identities(test_session.py)', '694': 'test_send(test_session.py)', '693': 'test_msg(test_session.py)', '696': 'test_serialize(test_session.py)', '328': 'interrupt_kernel(manager.py)', '166': 'is_complete(client.py)'}}, {'key': 667, 'parent': 1517, 'tfidf_word': 'EP: 667, Name: BlockingKernelClient &rarr; kernel_info &rarr; msg &rarr; msg &rarr; msg &rarr; extract_header', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1489, 'parent': 1517, 'tfidf_word': 'extract header info async channels client start kernel msg ', 'tfidf_method': 'kernel_info extract_header msg msg msg start_channels AsyncKernelClient ', 'lda_word': ' msg,kernel,header,extract,info,', 'lda_method': ' msg,extract_header,asynckernelclient,kernel_info,start_channels,', 'lsi_word': ' msg,kernel,extract,header,info,', 'lsi_method': ' msg,kernel_info,extract_header,start_channels,asynckernelclient,', 'spm_method': ' ', 'text_summary': '', 'files_count': 3, 'files': ['client.py', 'test_adapter.py', 'session.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'170': 'start_channels(client.py)', '167': 'kernel_info(client.py)', '520': 'msg(test_adapter.py)', '534': 'msg(test_adapter.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '90': 'AsyncKernelClient(client.py)'}}, {'key': 1561, 'parent': 2286, 'tfidf_word': 'extract header client kernel execute async blocking msg ', 'tfidf_method': 'execute extract_header msg msg msg BlockingKernelClient execute AsyncKernelClient ', 'lda_word': ' msg,execute,extract,header,client,', 'lda_method': ' msg,execute,extract_header,blockingkernelclient,asynckernelclient,', 'lsi_word': ' msg,execute,header,extract,kernel,', 'lsi_method': ' msg,execute,extract_header,asynckernelclient,blockingkernelclient,', 'spm_method': ' ', 'text_summary': '', 'files_count': 4, 'files': ['utils.py', 'client.py', 'test_adapter.py', 'session.py'], 'execution_path_count': 3, 'function_id_to_name_file': {'704': 'execute(utils.py)', '155': 'execute(client.py)', '520': 'msg(test_adapter.py)', '534': 'msg(test_adapter.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '90': 'AsyncKernelClient(client.py)', '116': 'BlockingKernelClient(client.py)'}}, {'key': 2254, 'parent': 2286, 'tfidf_word': 'adapt input type identity found feed display data interrupt version ', 'tfidf_method': 'test_kernel_info_reply test_input_request test_serialize test_execute_reply test_display_data test_complete_request test_complete_reply interrupt_kernel test_object_info_reply test_execute_request ', 'lda_word': ' msg,header,extract,test,kernel,', 'lda_method': ' shutdown,msg,asynckernelclient,extract_header,blockingkernelclient,', 'lsi_word': ' msg,header,extract,test,kernel,', 'lsi_method': ' msg,extract_header,asynckernelclient,blockingkernelclient,complete,', 'spm_method': ' ', 'text_summary': "Tab complete text in the kernel's namespace. Get metadata information about an object in the kernel's namespace. Given a message or header, return the header.", 'files_count': 5, 'files': ['client.py', 'test_adapter.py', 'session.py', 'test_session.py', 'manager.py'], 'execution_path_count': 30, 'function_id_to_name_file': {'90': 'AsyncKernelClient(client.py)', '163': 'inspect(client.py)', '520': 'msg(test_adapter.py)', '534': 'msg(test_adapter.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '116': 'BlockingKernelClient(client.py)', '152': 'comm_info(client.py)', '169': 'shutdown(client.py)', '153': 'complete(client.py)', '161': 'history(client.py)', '526': 'test_input_request(test_adapter.py)', '523': 'test_display_data(test_adapter.py)', '527': 'test_kernel_info_reply(test_adapter.py)', '530': 'test_object_info_reply_not_found(test_adapter.py)', '529': 'test_object_info_reply(test_adapter.py)', '531': 'test_object_info_request(test_adapter.py)', '521': 'test_complete_reply(test_adapter.py)', '522': 'test_complete_request(test_adapter.py)', '524': 'test_execute_reply(test_adapter.py)', '525': 'test_execute_request(test_adapter.py)', '532': 'test_rename_type(test_adapter.py)', '533': 'test_same_version(test_adapter.py)', '528': 'test_no_adapt(test_adapter.py)', '695': 'test_send_raw(test_session.py)', '694': 'test_send(test_session.py)', '692': 'test_feed_identities(test_session.py)', '696': 'test_serialize(test_session.py)', '693': 'test_msg(test_session.py)', '328': 'interrupt_kernel(manager.py)', '166': 'is_complete(client.py)'}}, {'key': 669, 'parent': 1720, 'tfidf_word': 'EP: 669, Name: BlockingKernelClient &rarr; kernel_info &rarr; msg &rarr; msg &rarr; extract_header', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1699, 'parent': 1720, 'tfidf_word': 'extract header info async channels client start kernel msg ', 'tfidf_method': 'kernel_info extract_header msg msg start_channels AsyncKernelClient ', 'lda_word': ' msg,kernel,info,extract,header,', 'lda_method': ' msg,kernel_info,asynckernelclient,extract_header,start_channels,', 'lsi_word': ' msg,kernel,header,info,extract,', 'lsi_method': ' msg,kernel_info,extract_header,asynckernelclient,start_channels,', 'spm_method': ' ', 'text_summary': '', 'files_count': 3, 'files': ['client.py', 'test_adapter.py', 'session.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'170': 'start_channels(client.py)', '167': 'kernel_info(client.py)', '534': 'msg(test_adapter.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '90': 'AsyncKernelClient(client.py)'}}, {'key': 1737, 'parent': 2376, 'tfidf_word': 'extract header client kernel execute msg async blocking ', 'tfidf_method': 'execute extract_header msg msg BlockingKernelClient execute AsyncKernelClient ', 'lda_word': ' msg,execute,extract,client,kernel,', 'lda_method': ' msg,execute,extract_header,blockingkernelclient,asynckernelclient,', 'lsi_word': ' msg,execute,header,extract,kernel,', 'lsi_method': ' msg,execute,extract_header,asynckernelclient,blockingkernelclient,', 'spm_method': ' ', 'text_summary': '', 'files_count': 4, 'files': ['utils.py', 'client.py', 'test_adapter.py', 'session.py'], 'execution_path_count': 3, 'function_id_to_name_file': {'704': 'execute(utils.py)', '155': 'execute(client.py)', '534': 'msg(test_adapter.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '90': 'AsyncKernelClient(client.py)', '116': 'BlockingKernelClient(client.py)'}}, {'key': 2315, 'parent': 2376, 'tfidf_word': 'input interrupt type identity feed execute display data raw version ', 'tfidf_method': 'test_inspect_reply test_inspect_request test_input_request test_serialize test_display_data test_complete_request test_complete_reply interrupt_kernel test_inspect_request_token test_execute_request ', 'lda_word': ' msg,extract,header,test,request,', 'lda_method': ' msg,extract_header,asynckernelclient,comm_info,history,', 'lsi_word': ' msg,header,extract,test,kernel,', 'lsi_method': ' msg,extract_header,asynckernelclient,blockingkernelclient,comm_info,', 'spm_method': ' ', 'text_summary': "Tab complete text in the kernel's namespace. Get metadata information about an object in the kernel's namespace. message format. Given a message or header, return the header.", 'files_count': 5, 'files': ['client.py', 'test_adapter.py', 'session.py', 'test_session.py', 'manager.py'], 'execution_path_count': 29, 'function_id_to_name_file': {'90': 'AsyncKernelClient(client.py)', '163': 'inspect(client.py)', '534': 'msg(test_adapter.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '116': 'BlockingKernelClient(client.py)', '152': 'comm_info(client.py)', '169': 'shutdown(client.py)', '153': 'complete(client.py)', '161': 'history(client.py)', '536': 'test_complete_request(test_adapter.py)', '538': 'test_execute_request(test_adapter.py)', '545': 'test_rename_type(test_adapter.py)', '544': 'test_no_adapt(test_adapter.py)', '546': 'test_same_version(test_adapter.py)', '695': 'test_send_raw(test_session.py)', '692': 'test_feed_identities(test_session.py)', '694': 'test_send(test_session.py)', '693': 'test_msg(test_session.py)', '696': 'test_serialize(test_session.py)', '328': 'interrupt_kernel(manager.py)', '166': 'is_complete(client.py)', '539': 'test_input_request(test_adapter.py)', '537': 'test_display_data(test_adapter.py)', '543': 'test_kernel_info_reply(test_adapter.py)', '542': 'test_inspect_request_token(test_adapter.py)', '540': 'test_inspect_reply(test_adapter.py)', '535': 'test_complete_reply(test_adapter.py)', '541': 'test_inspect_request(test_adapter.py)'}}, {'key': 1844, 'parent': 1927, 'tfidf_word': 'extract header msg send handle test tracking ', 'tfidf_method': 'extract_header msg send handle test_tracking ', 'lda_word': ' extract,header,msg,send,handle,', 'lda_method': ' msg,send,extract_header,test_tracking,handle,', 'lsi_word': ' header,send,msg,extract,tracking,', 'lsi_method': ' extract_header,send,msg,test_tracking,handle,', 'spm_method': ' ', 'text_summary': 'Given a message or header, return the header.', 'files_count': 3, 'files': ['test_session.py', 'session.py', 'forward.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'698': 'test_tracking(test_session.py)', '480': 'send(session.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '492': 'handle(forward.py)'}}, {'key': 1889, 'parent': 1927, 'tfidf_word': 'extract header msg interrupt kernel test send ', 'tfidf_method': 'extract_header msg send interrupt_kernel test_send ', 'lda_word': ' header,extract,msg,kernel,interrupt,', 'lda_method': ' send,msg,extract_header,interrupt_kernel,test_send,', 'lsi_word': ' send,msg,header,extract,test,', 'lsi_method': ' extract_header,msg,send,interrupt_kernel,test_send,', 'spm_method': ' ', 'text_summary': 'Pass a message to the ZMQ socket to send.', 'files_count': 3, 'files': ['manager.py', 'session.py', 'test_session.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'328': 'interrupt_kernel(manager.py)', '480': 'send(session.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '694': 'test_send(test_session.py)'}}, {'key': 1915, 'parent': 2664, 'tfidf_word': 'extract header info msg client kernel async blocking channels start ', 'tfidf_method': 'kernel_info extract_header msg BlockingKernelClient start_channels AsyncKernelClient ', 'lda_word': ' header,kernel,info,msg,extract,', 'lda_method': ' extract_header,kernel_info,msg,start_channels,blockingkernelclient,', 'lsi_word': ' kernel,header,msg,extract,info,', 'lsi_method': ' extract_header,kernel_info,msg,blockingkernelclient,start_channels,', 'spm_method': ' ', 'text_summary': '', 'files_count': 2, 'files': ['client.py', 'session.py'], 'execution_path_count': 3, 'function_id_to_name_file': {'116': 'BlockingKernelClient(client.py)', '167': 'kernel_info(client.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '170': 'start_channels(client.py)', '90': 'AsyncKernelClient(client.py)'}}, {'key': 2663, 'parent': 2664, 'tfidf_word': 'inspect send raw serialize identity feed default interrupt version execute ', 'tfidf_method': 'complete is_complete interrupt_kernel execute test_default_version test_feed_identities test_msg test_send test_send_raw test_serialize ', 'lda_word': ' kernel,client,header,extract,msg,', 'lda_method': ' msg,extract_header,blockingkernelclient,asynckernelclient,execute,', 'lsi_word': ' msg,header,extract,kernel,client,', 'lsi_method': ' extract_header,msg,asynckernelclient,blockingkernelclient,execute,', 'spm_method': ' ', 'text_summary': "Tab complete text in the kernel's namespace. wrapper for doing common steps for validating an execution request. Given a message or header, return the header. Ask the kernel whether some code is complete and ready to execute.", 'files_count': 6, 'files': ['utils.py', 'client.py', 'session.py', 'test_adapter.py', 'test_session.py', 'manager.py'], 'execution_path_count': 21, 'function_id_to_name_file': {'704': 'execute(utils.py)', '155': 'execute(client.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '90': 'AsyncKernelClient(client.py)', '116': 'BlockingKernelClient(client.py)', '163': 'inspect(client.py)', '152': 'comm_info(client.py)', '169': 'shutdown(client.py)', '153': 'complete(client.py)', '161': 'history(client.py)', '516': 'test_default_version(test_adapter.py)', '695': 'test_send_raw(test_session.py)', '694': 'test_send(test_session.py)', '692': 'test_feed_identities(test_session.py)', '696': 'test_serialize(test_session.py)', '693': 'test_msg(test_session.py)', '328': 'interrupt_kernel(manager.py)', '166': 'is_complete(client.py)'}}, {'key': 1519, 'parent': 2288, 'tfidf_word': 'extract header info client kernel async blocking channels start msg ', 'tfidf_method': 'kernel_info extract_header msg msg msg BlockingKernelClient start_channels AsyncKernelClient ', 'lda_word': ' msg,kernel,info,extract,header,', 'lda_method': ' msg,kernel_info,extract_header,asynckernelclient,start_channels,', 'lsi_word': ' msg,kernel,header,info,extract,', 'lsi_method': ' msg,extract_header,kernel_info,blockingkernelclient,start_channels,', 'spm_method': ' ', 'text_summary': '', 'files_count': 3, 'files': ['client.py', 'test_adapter.py', 'session.py'], 'execution_path_count': 3, 'function_id_to_name_file': {'116': 'BlockingKernelClient(client.py)', '167': 'kernel_info(client.py)', '534': 'msg(test_adapter.py)', '520': 'msg(test_adapter.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '170': 'start_channels(client.py)', '90': 'AsyncKernelClient(client.py)'}}, {'key': 2284, 'parent': 2288, 'tfidf_word': 'input interrupt type identity feed display data raw version execute ', 'tfidf_method': 'test_inspect_request_token test_inspect_request test_input_request test_execute_request execute test_complete_request test_complete_reply interrupt_kernel test_kernel_info_reply test_display_data ', 'lda_word': ' msg,header,extract,client,kernel,', 'lda_method': ' msg,extract_header,blockingkernelclient,execute,asynckernelclient,', 'lsi_word': ' msg,extract,header,test,kernel,', 'lsi_method': ' msg,extract_header,asynckernelclient,blockingkernelclient,execute,', 'spm_method': ' ', 'text_summary': "wrapper for doing common steps for validating an execution request. Ask the kernel whether some code is complete and ready to execute. Tab complete text in the kernel's namespace. Given a message or header, return the header. message format.", 'files_count': 6, 'files': ['utils.py', 'client.py', 'test_adapter.py', 'session.py', 'test_session.py', 'manager.py'], 'execution_path_count': 32, 'function_id_to_name_file': {'704': 'execute(utils.py)', '155': 'execute(client.py)', '534': 'msg(test_adapter.py)', '520': 'msg(test_adapter.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '90': 'AsyncKernelClient(client.py)', '116': 'BlockingKernelClient(client.py)', '163': 'inspect(client.py)', '152': 'comm_info(client.py)', '169': 'shutdown(client.py)', '153': 'complete(client.py)', '161': 'history(client.py)', '539': 'test_input_request(test_adapter.py)', '537': 'test_display_data(test_adapter.py)', '543': 'test_kernel_info_reply(test_adapter.py)', '540': 'test_inspect_reply(test_adapter.py)', '542': 'test_inspect_request_token(test_adapter.py)', '541': 'test_inspect_request(test_adapter.py)', '535': 'test_complete_reply(test_adapter.py)', '536': 'test_complete_request(test_adapter.py)', '538': 'test_execute_request(test_adapter.py)', '545': 'test_rename_type(test_adapter.py)', '546': 'test_same_version(test_adapter.py)', '544': 'test_no_adapt(test_adapter.py)', '695': 'test_send_raw(test_session.py)', '694': 'test_send(test_session.py)', '692': 'test_feed_identities(test_session.py)', '696': 'test_serialize(test_session.py)', '693': 'test_msg(test_session.py)', '328': 'interrupt_kernel(manager.py)', '166': 'is_complete(client.py)'}}, {'key': 1719, 'parent': 2379, 'tfidf_word': 'extract header info client kernel msg async blocking channels start ', 'tfidf_method': 'kernel_info extract_header msg msg BlockingKernelClient start_channels AsyncKernelClient ', 'lda_word': ' msg,kernel,extract,client,header,', 'lda_method': ' msg,extract_header,kernel_info,start_channels,asynckernelclient,', 'lsi_word': ' msg,kernel,header,info,extract,', 'lsi_method': ' msg,extract_header,kernel_info,start_channels,asynckernelclient,', 'spm_method': ' ', 'text_summary': '', 'files_count': 3, 'files': ['client.py', 'test_adapter.py', 'session.py'], 'execution_path_count': 3, 'function_id_to_name_file': {'116': 'BlockingKernelClient(client.py)', '167': 'kernel_info(client.py)', '520': 'msg(test_adapter.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '170': 'start_channels(client.py)', '90': 'AsyncKernelClient(client.py)'}}, {'key': 2377, 'parent': 2379, 'tfidf_word': 'input type identity found feed display data interrupt version execute ', 'tfidf_method': 'test_input_request test_execute_request execute test_display_data test_complete_request test_complete_reply interrupt_kernel is_complete test_object_info_reply test_execute_reply ', 'lda_word': ' header,msg,extract,client,test,', 'lda_method': ' msg,extract_header,blockingkernelclient,shutdown,inspect,', 'lsi_word': ' msg,header,extract,test,kernel,', 'lsi_method': ' msg,extract_header,blockingkernelclient,asynckernelclient,execute,', 'spm_method': ' ', 'text_summary': "wrapper for doing common steps for validating an execution request. Ask the kernel whether some code is complete and ready to execute. Tab complete text in the kernel's namespace. Given a message or header, return the header. message format.", 'files_count': 6, 'files': ['utils.py', 'client.py', 'test_adapter.py', 'session.py', 'test_session.py', 'manager.py'], 'execution_path_count': 33, 'function_id_to_name_file': {'704': 'execute(utils.py)', '155': 'execute(client.py)', '520': 'msg(test_adapter.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '90': 'AsyncKernelClient(client.py)', '116': 'BlockingKernelClient(client.py)', '163': 'inspect(client.py)', '152': 'comm_info(client.py)', '169': 'shutdown(client.py)', '153': 'complete(client.py)', '161': 'history(client.py)', '524': 'test_execute_reply(test_adapter.py)', '525': 'test_execute_request(test_adapter.py)', '532': 'test_rename_type(test_adapter.py)', '528': 'test_no_adapt(test_adapter.py)', '533': 'test_same_version(test_adapter.py)', '695': 'test_send_raw(test_session.py)', '692': 'test_feed_identities(test_session.py)', '694': 'test_send(test_session.py)', '693': 'test_msg(test_session.py)', '696': 'test_serialize(test_session.py)', '328': 'interrupt_kernel(manager.py)', '166': 'is_complete(client.py)', '526': 'test_input_request(test_adapter.py)', '523': 'test_display_data(test_adapter.py)', '527': 'test_kernel_info_reply(test_adapter.py)', '530': 'test_object_info_reply_not_found(test_adapter.py)', '531': 'test_object_info_request(test_adapter.py)', '529': 'test_object_info_reply(test_adapter.py)', '522': 'test_complete_request(test_adapter.py)', '521': 'test_complete_reply(test_adapter.py)'}}, {'key': 1790, 'parent': 2405, 'tfidf_word': 'execute header id poll request restart kernel shutdown send msg ', 'tfidf_method': 'request_shutdown restart_kernel shutdown_kernel msg msg_header msg_id do_execute msg msg send ', 'lda_word': ' msg,shutdown,kernel,request,poll,', 'lda_method': ' poll,do_execute,msg,shutdown_kernel,request_shutdown,', 'lsi_word': ' msg,shutdown,kernel,header,poll,', 'lsi_method': ' msg,do_execute,msg_id,request_shutdown,shutdown_kernel,', 'spm_method': '  &#187; do_execute(signalkernel.py) &rarr; poll(restarter.py) &rarr; restart_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; poll(restarter.py) &rarr; restart_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; restart_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br>', 'text_summary': 'Attempts to stop the kernel process cleanly. Restarts a kernel with the arguments that were used to launch it. Send a shutdown request via control channel.', 'files_count': 5, 'files': ['signalkernel.py', 'restarter.py', 'manager.py', 'session.py', 'test_adapter.py'], 'execution_path_count': 6, 'function_id_to_name_file': {'510': 'do_execute(signalkernel.py)', '236': 'poll(restarter.py)', '363': 'restart_kernel(manager.py)', '364': 'shutdown_kernel(manager.py)', '362': 'request_shutdown(manager.py)', '476': 'msg(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '480': 'send(session.py)', '520': 'msg(test_adapter.py)', '534': 'msg(test_adapter.py)'}}, {'key': 2359, 'parent': 2405, 'tfidf_word': 'adapt thread sign utcnow message control serialize msg socket connect ', 'tfidf_method': 'send send adapt utcnow serialize thread_send Message _connect_control_socket sign send ', 'lda_word': ' kernel,shutdown,utcnow,adapt,send,', 'lda_method': ' restart_kernel,do_execute,shutdown_kernel,request_shutdown,poll,', 'lsi_word': ' kernel,shutdown,restart,request,poll,', 'lsi_method': ' msg,do_execute,request_shutdown,poll,shutdown_kernel,', 'spm_method': '  &#187; do_execute(signalkernel.py) &rarr; poll(restarter.py) &rarr; restart_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br> &#187; poll(restarter.py) &rarr; restart_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br> &#187; restart_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br>', 'text_summary': 'Make a ZeroMQ URL for a given channel. Pass a message to the ZMQ socket to send. Send a shutdown request via control channel. Given a message or header, return the header. Create a zmq Socket and connect it to the kernel.', 'files_count': 9, 'files': ['signalkernel.py', 'restarter.py', 'manager.py', 'session.py', 'test_adapter.py', 'adapter.py', 'connect.py', 'threaded.py', 'channels.py'], 'execution_path_count': 14, 'function_id_to_name_file': {'510': 'do_execute(signalkernel.py)', '236': 'poll(restarter.py)', '363': 'restart_kernel(manager.py)', '364': 'shutdown_kernel(manager.py)', '362': 'request_shutdown(manager.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '480': 'send(session.py)', '520': 'msg(test_adapter.py)', '534': 'msg(test_adapter.py)', '50': 'adapt(adapter.py)', '450': 'utcnow(session.py)', '482': 'serialize(session.py)', '483': 'sign(session.py)', '440': 'Message(session.py)', '338': '_connect_control_socket(manager.py)', '192': '_create_connected_socket(connect.py)', '196': '_make_url(connect.py)', '734': 'send(threaded.py)', '738': 'thread_send(threaded.py)', '88': 'send(channels.py)', '114': 'send(channels.py)'}}, {'key': 2027, 'parent': 2408, 'tfidf_word': 'execute launch poll restart finish kill shutdown signal alive kernel ', 'tfidf_method': 'poll _launch_kernel has_kernel restart_kernel shutdown_kernel do_execute _kill_kernel finish_shutdown signal_kernel is_alive ', 'lda_word': ' kernel,shutdown,execute,launch,poll,', 'lda_method': ' has_kernel,poll,launch_kernel,restart_kernel,shutdown_kernel,', 'lsi_word': ' kernel,shutdown,execute,restart,poll,', 'lsi_method': ' shutdown_kernel,has_kernel,poll,launch_kernel,restart_kernel,', 'spm_method': '  &#187; do_execute(signalkernel.py) &rarr; poll(restarter.py) &rarr; restart_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; _kill_kernel(manager.py) &rarr; signal_kernel(manager.py) &rarr; has_kernel(manager.py) &rarr; _launch_kernel(manager.py) . <br> &#187; poll(restarter.py) &rarr; restart_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; _kill_kernel(manager.py) &rarr; signal_kernel(manager.py) &rarr; has_kernel(manager.py) &rarr; _launch_kernel(manager.py) . <br> &#187; restart_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; _kill_kernel(manager.py) &rarr; signal_kernel(manager.py) &rarr; has_kernel(manager.py) &rarr; _launch_kernel(manager.py) . <br>', 'text_summary': "actually launch the kernel. Restarts a kernel with the arguments that were used to launch it. Wait for kernel shutdown, then kill process if it doesn't shutdown.", 'files_count': 3, 'files': ['signalkernel.py', 'restarter.py', 'manager.py'], 'execution_path_count': 6, 'function_id_to_name_file': {'510': 'do_execute(signalkernel.py)', '236': 'poll(restarter.py)', '363': 'restart_kernel(manager.py)', '364': 'shutdown_kernel(manager.py)', '346': '_kill_kernel(manager.py)', '365': 'signal_kernel(manager.py)', '354': 'has_kernel(manager.py)', '347': '_launch_kernel(manager.py)', '352': 'finish_shutdown(manager.py)', '357': 'is_alive(manager.py)'}}, {'key': 2257, 'parent': 2408, 'tfidf_word': 'shutdown file resource connection ipc port kernel restarter stop cleanup ', 'tfidf_method': 'poll restart_kernel shutdown_kernel do_execute cleanup_resources cleanup_connection_file cleanup_ipc_files ports cleanup stop_restarter ', 'lda_word': ' kernel,shutdown,cleanup,poll,execute,', 'lda_method': ' shutdown_kernel,poll,do_execute,restart_kernel,cleanup_resources,', 'lsi_word': ' cleanup,kernel,shutdown,execute,restart,', 'lsi_method': ' do_execute,shutdown_kernel,restart_kernel,poll,cleanup_resources,', 'spm_method': '  &#187; do_execute(signalkernel.py) &rarr; poll(restarter.py) &rarr; restart_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; cleanup_resources(manager.py) &rarr; cleanup_ipc_files(connect.py) &rarr; ports(connect.py) . <br> &#187; poll(restarter.py) &rarr; restart_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; cleanup_resources(manager.py) &rarr; cleanup_ipc_files(connect.py) &rarr; ports(connect.py) . <br>', 'text_summary': 'Restarts a kernel with the arguments that were used to launch it.', 'files_count': 4, 'files': ['signalkernel.py', 'restarter.py', 'manager.py', 'connect.py'], 'execution_path_count': 5, 'function_id_to_name_file': {'510': 'do_execute(signalkernel.py)', '236': 'poll(restarter.py)', '363': 'restart_kernel(manager.py)', '364': 'shutdown_kernel(manager.py)', '350': 'cleanup_resources(manager.py)', '201': 'cleanup_ipc_files(connect.py)', '211': 'ports(connect.py)', '349': 'cleanup(manager.py)', '368': 'stop_restarter(manager.py)', '200': 'cleanup_connection_file(connect.py)'}}, {'key': 2089, 'parent': 2215, 'tfidf_word': 'execute poll alive kernel restart callback fire ', 'tfidf_method': 'poll do_execute is_alive is_alive restart_kernel is_alive restart_kernel _fire_callbacks ', 'lda_word': ' execute,poll,alive,fire,callback,', 'lda_method': ' poll,do_execute,is_alive,restart_kernel,fire_callbacks,', 'lsi_word': ' execute,poll,alive,kernel,restart,', 'lsi_method': ' do_execute,poll,is_alive,restart_kernel,fire_callbacks,', 'spm_method': ' ', 'text_summary': '', 'files_count': 5, 'files': ['signalkernel.py', 'restarter.py', 'managerabc.py', 'multikernelmanager.py', 'channelsabc.py'], 'execution_path_count': 6, 'function_id_to_name_file': {'510': 'do_execute(signalkernel.py)', '236': 'poll(restarter.py)', '373': 'is_alive(managerabc.py)', '428': '_fire_callbacks(restarter.py)', '412': 'is_alive(multikernelmanager.py)', '140': 'is_alive(channelsabc.py)', '419': 'restart_kernel(multikernelmanager.py)', '375': 'restart_kernel(managerabc.py)'}}, {'key': 2214, 'parent': 2215, 'tfidf_word': 'execute poll alive stop ', 'tfidf_method': 'poll do_execute is_alive stop is_alive is_alive ', 'lda_word': ' execute,poll,alive,stop,', 'lda_method': ' poll,do_execute,is_alive,stop,', 'lsi_word': ' execute,poll,alive,stop,', 'lsi_method': ' do_execute,poll,is_alive,stop,', 'spm_method': ' ', 'text_summary': 'Empty', 'files_count': 4, 'files': ['signalkernel.py', 'restarter.py', 'threaded.py', 'channels.py'], 'execution_path_count': 4, 'function_id_to_name_file': {'510': 'do_execute(signalkernel.py)', '236': 'poll(restarter.py)', '732': 'is_alive(threaded.py)', '239': 'stop(restarter.py)', '86': 'is_alive(channels.py)', '112': 'is_alive(channels.py)'}}, {'key': 2030, 'parent': 2371, 'tfidf_word': 'ip file connection launch get env substitution n kernel spec ', 'tfidf_method': 'format_kernel_cmd _record_random_port_names write_connection_file KernelSpec is_local_ip local_ips _get_env_substitutions _launch_kernel kernel_spec from_ns ', 'lda_word': ' kernel,start,poll,restart,execute,', 'lda_method': ' record_random_port_names,write_connection_file,format_kernel_cmd,pre_start_kernel,poll,', 'lsi_word': ' kernel,start,execute,poll,restart,', 'lsi_method': ' poll,start_kernel,restart_kernel,do_execute,pre_start_kernel,', 'spm_method': '  &#187; do_execute(signalkernel.py) &rarr; poll(restarter.py) &rarr; restart_kernel(manager.py) &rarr; start_kernel(manager.py) &rarr; pre_start_kernel(manager.py) &rarr; write_connection_file(connect.py) &rarr; _record_random_port_names(connect.py) . <br> &#187; poll(restarter.py) &rarr; restart_kernel(manager.py) &rarr; start_kernel(manager.py) &rarr; pre_start_kernel(manager.py) &rarr; write_connection_file(connect.py) &rarr; _record_random_port_names(connect.py) . <br>', 'text_summary': 'Write connection info to JSON dict in self.connection_file. Restarts a kernel with the arguments that were used to launch it. {connection_file})    Restarts a kernel with the arguments that were used to launch it.', 'files_count': 6, 'files': ['signalkernel.py', 'restarter.py', 'manager.py', 'connect.py', 'kernelspec.py', 'localinterfaces.py'], 'execution_path_count': 8, 'function_id_to_name_file': {'510': 'do_execute(signalkernel.py)', '236': 'poll(restarter.py)', '363': 'restart_kernel(manager.py)', '366': 'start_kernel(manager.py)', '360': 'pre_start_kernel(manager.py)', '212': 'write_connection_file(connect.py)', '197': '_record_random_port_names(connect.py)', '353': 'format_kernel_cmd(manager.py)', '369': 'from_ns(manager.py)', '358': 'kernel_spec(manager.py)', '253': 'KernelSpec(kernelspec.py)', '347': '_launch_kernel(manager.py)', '341': '_get_env_substitutions(manager.py)', '314': 'local_ips(localinterfaces.py)', '312': 'is_local_ip(localinterfaces.py)'}}, {'key': 2318, 'parent': 2371, 'tfidf_word': 'url file create control connection kernel connect socket cleanup start ', 'tfidf_method': 'restart_kernel do_execute post_start_kernel start_kernel _create_connected_socket _make_url cleanup_connection_file cleanup_random_ports _connect_control_socket start_restarter ', 'lda_word': ' start,restart,execute,kernel,poll,', 'lda_method': ' start_kernel,post_start_kernel,do_execute,restart_kernel,poll,', 'lsi_word': ' kernel,start,poll,execute,restart,', 'lsi_method': ' restart_kernel,do_execute,poll,start_kernel,post_start_kernel,', 'spm_method': ' ', 'text_summary': 'Create a zmq Socket and connect it to the kernel. Forgets randomly assigned port numbers and cleans up the connection file.', 'files_count': 4, 'files': ['signalkernel.py', 'restarter.py', 'manager.py', 'connect.py'], 'execution_path_count': 3, 'function_id_to_name_file': {'510': 'do_execute(signalkernel.py)', '236': 'poll(restarter.py)', '363': 'restart_kernel(manager.py)', '202': 'cleanup_random_ports(connect.py)', '200': 'cleanup_connection_file(connect.py)', '366': 'start_kernel(manager.py)', '359': 'post_start_kernel(manager.py)', '338': '_connect_control_socket(manager.py)', '192': '_create_connected_socket(connect.py)', '196': '_make_url(connect.py)', '367': 'start_restarter(manager.py)'}}, {'key': 2281, 'parent': 2731, 'tfidf_word': 'execute header hook input interactive stdin extract id start msg ', 'tfidf_method': 'execute_interactive input start start msg msg msg extract_header msg_header msg_id ', 'lda_word': ' msg,start,header,input,execute,', 'lda_method': ' msg,start,stdin_hook_default,execute_interactive,input,', 'lsi_word': ' msg,start,stdin,input,execute,', 'lsi_method': ' msg,start,execute_interactive,input,stdin_hook_default,', 'spm_method': '  &#187; start(kernelspecapp.py) &rarr; start(runapp.py) &rarr; execute_interactive(client.py) &rarr; _stdin_hook_default(client.py) &rarr; input(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; start(runapp.py) &rarr; execute_interactive(client.py) &rarr; _stdin_hook_default(client.py) &rarr; input(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; execute_interactive(client.py) &rarr; _stdin_hook_default(client.py) &rarr; input(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; _stdin_hook_default(client.py) &rarr; input(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br>', 'text_summary': 'Send a string of raw input to the kernel. Start the polling of the kernel.', 'files_count': 5, 'files': ['kernelspecapp.py', 'runapp.py', 'client.py', 'test_adapter.py', 'session.py'], 'execution_path_count': 10, 'function_id_to_name_file': {'291': 'start(kernelspecapp.py)', '439': 'start(runapp.py)', '122': 'execute_interactive(client.py)', '121': '_stdin_hook_default(client.py)', '162': 'input(client.py)', '520': 'msg(test_adapter.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '534': 'msg(test_adapter.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)'}}, {'key': 2302, 'parent': 2731, 'tfidf_word': 'stdin ready reply control kernel reqrep shell wrap hook output ', 'tfidf_method': 'is_alive is_alive wrapped _output_hook_kernel reqrep msg_ready is_alive get_msg get_control_msg msg_ready ', 'lda_word': ' start,interactive,execute,alive,recv,', 'lda_method': ' start,execute_interactive,is_alive,output_hook_default,get_msg,', 'lsi_word': ' start,interactive,execute,msg,alive,', 'lsi_method': ' start,execute_interactive,is_alive,recv,get_msg,', 'spm_method': ' ', 'text_summary': 'Output hook when running inside an IPython kernel. Execute code in the kernel interactively. Receive and return the reply for a given request. Get a message from the shell channel. Get a message from the control channel. Is there a message that has been received?. Default hook for redisplaying plain-text output.', 'files_count': 8, 'files': ['kernelspecapp.py', 'runapp.py', 'client.py', 'channels.py', 'managerabc.py', 'multikernelmanager.py', 'channelsabc.py', 'threaded.py'], 'execution_path_count': 15, 'function_id_to_name_file': {'291': 'start(kernelspecapp.py)', '439': 'start(runapp.py)', '122': 'execute_interactive(client.py)', '121': '_stdin_hook_default(client.py)', '113': 'msg_ready(channels.py)', '87': 'msg_ready(channels.py)', '120': '_recv_reply(client.py)', '156': 'get_control_msg(client.py)', '158': 'get_shell_msg(client.py)', '110': 'get_msg(channels.py)', '108': '_recv(channels.py)', '84': 'get_msg(channels.py)', '82': '_recv(channels.py)', '119': '_output_hook_kernel(client.py)', '118': '_output_hook_default(client.py)', '117': 'reqrep(client.py)', '124': 'wrapped(client.py)', '112': 'is_alive(channels.py)', '373': 'is_alive(managerabc.py)', '412': 'is_alive(multikernelmanager.py)', '140': 'is_alive(channelsabc.py)', '86': 'is_alive(channels.py)', '732': 'is_alive(threaded.py)'}}, {'key': 2282, 'parent': 2740, 'tfidf_word': 'execute header hook input interactive stdin extract id start msg ', 'tfidf_method': 'start start msg _stdin_hook_default execute_interactive msg msg extract_header msg_header msg_id ', 'lda_word': ' msg,stdin,start,hook,interactive,', 'lda_method': ' msg,start,input,stdin_hook_default,execute_interactive,', 'lsi_word': ' msg,start,input,stdin,interactive,', 'lsi_method': ' msg,start,input,stdin_hook_default,execute_interactive,', 'spm_method': '  &#187; start(kernelspecapp.py) &rarr; start(runapp.py) &rarr; execute_interactive(client.py) &rarr; _stdin_hook_default(client.py) &rarr; input(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; start(runapp.py) &rarr; execute_interactive(client.py) &rarr; _stdin_hook_default(client.py) &rarr; input(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; execute_interactive(client.py) &rarr; _stdin_hook_default(client.py) &rarr; input(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; _stdin_hook_default(client.py) &rarr; input(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br>', 'text_summary': 'Send a string of raw input to the kernel. Start the polling of the kernel. Execute code in the kernel interactively.', 'files_count': 5, 'files': ['kernelspecapp.py', 'runapp.py', 'client.py', 'test_adapter.py', 'session.py'], 'execution_path_count': 10, 'function_id_to_name_file': {'291': 'start(kernelspecapp.py)', '439': 'start(runapp.py)', '97': 'execute_interactive(client.py)', '96': '_stdin_hook_default(client.py)', '162': 'input(client.py)', '520': 'msg(test_adapter.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '534': 'msg(test_adapter.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)'}}, {'key': 2670, 'parent': 2740, 'tfidf_word': 'stdin ready msg kernel reqrep wrap recv get hook output ', 'tfidf_method': 'is_alive is_alive msg_ready reqrep msg_ready _output_hook_kernel is_alive wrapped is_alive is_alive ', 'lda_word': ' start,msg,get,recv,execute,', 'lda_method': ' start,execute_interactive,get_msg,recv,is_alive,', 'lsi_word': ' start,interactive,execute,msg,get,', 'lsi_method': ' start,execute_interactive,get_msg,recv,is_alive,', 'spm_method': '  &#187; start(kernelspecapp.py) &rarr; start(runapp.py) &rarr; execute_interactive(client.py) &rarr; _recv_reply(client.py) &rarr; get_msg(channels.py) &rarr; _recv(channels.py) . <br>', 'text_summary': 'Output hook when running inside an IPython kernel. Execute code in the kernel interactively. Receive and return the reply for a given request. Get a message from the shell channel. Get a message from the control channel. Is there a message that has been received?. Default hook for redisplaying plain-text output.', 'files_count': 8, 'files': ['kernelspecapp.py', 'runapp.py', 'client.py', 'channels.py', 'managerabc.py', 'multikernelmanager.py', 'threaded.py', 'channelsabc.py'], 'execution_path_count': 17, 'function_id_to_name_file': {'291': 'start(kernelspecapp.py)', '439': 'start(runapp.py)', '97': 'execute_interactive(client.py)', '95': '_recv_reply(client.py)', '100': 'get_shell_msg(client.py)', '84': 'get_msg(channels.py)', '82': '_recv(channels.py)', '110': 'get_msg(channels.py)', '108': '_recv(channels.py)', '98': 'get_control_msg(client.py)', '96': '_stdin_hook_default(client.py)', '113': 'msg_ready(channels.py)', '87': 'msg_ready(channels.py)', '91': 'reqrep(client.py)', '105': 'wrapped(client.py)', '94': '_output_hook_kernel(client.py)', '93': '_output_hook_default(client.py)', '112': 'is_alive(channels.py)', '373': 'is_alive(managerabc.py)', '412': 'is_alive(multikernelmanager.py)', '86': 'is_alive(channels.py)', '732': 'is_alive(threaded.py)', '140': 'is_alive(channelsabc.py)'}}, {'key': 2344, 'parent': 2350, 'tfidf_word': 'up unpacker unpack pack roundtrip id default cull set zero ', 'tfidf_method': 'setUp test_args test_bad_pack test_bad_packer test_bad_roundtrip test_bad_unpack test_bad_unpacker test_cull_digest_history test_session_id test_zero_digest_history ', 'lda_word': ' check,packer,test,init,digest,', 'lda_method': ' init,check_packers,squash_dates,utcnow,test_bad_unpack,', 'lsi_word': ' packer,init,check,test,date,', 'lsi_method': ' init,check_packers,squash_dates,utcnow,test_bad_packer,', 'spm_method': ' ', 'text_summary': 'check packers for datetime support. squash datetime objects into ISO8601 strings.', 'files_count': 5, 'files': ['test_session.py', 'session.py', 'jsonutil.py', 'consoleapp.py', 'connect.py'], 'execution_path_count': 24, 'function_id_to_name_file': {'683': 'test_bad_roundtrip(test_session.py)', '457': '__init__(session.py)', '459': '_check_packers(session.py)', '450': 'utcnow(session.py)', '244': 'squash_dates(jsonutil.py)', '685': 'test_bad_unpacker(test_session.py)', '682': 'test_bad_packer(test_session.py)', '684': 'test_bad_unpack(test_session.py)', '681': 'test_bad_pack(test_session.py)', '687': 'test_cull_digest_history(test_session.py)', '700': 'test_zero_digest_history(test_session.py)', '697': 'test_session_id(test_session.py)', '678': 'setUp(test_session.py)', '680': 'test_args(test_session.py)', '215': '__init__(consoleapp.py)', '198': '_session_default(connect.py)'}}, {'key': 2346, 'parent': 2350, 'tfidf_word': 'file load session up msgpack pickle kn default set version ', 'tfidf_method': '__init__ _check_packers squash_dates utcnow test_default_version setUp test_load_connection_file_session test_load_connection_file_session_with_kn test_datetimes_msgpack test_datetimes_pickle ', 'lda_word': ' check,packer,init,test,utcnow,', 'lda_method': ' check_packers,init,squash_dates,test_default_version,test_load_connection_file_session,', 'lsi_word': ' init,check,packer,test,squash,', 'lsi_method': ' init,check_packers,utcnow,squash_dates,test_load_connection_file_session_with_kn,', 'spm_method': ' ', 'text_summary': 'Return timezone-aware UTC timestamp. squash datetime objects into ISO8601 strings. check packers for datetime support.', 'files_count': 5, 'files': ['test_connect.py', 'session.py', 'jsonutil.py', 'test_adapter.py', 'test_session.py'], 'execution_path_count': 12, 'function_id_to_name_file': {'565': 'test_load_connection_file_session_with_kn(test_connect.py)', '457': '__init__(session.py)', '459': '_check_packers(session.py)', '450': 'utcnow(session.py)', '244': 'squash_dates(jsonutil.py)', '564': 'test_load_connection_file_session(test_connect.py)', '516': 'test_default_version(test_adapter.py)', '519': 'setUp(test_adapter.py)', '690': 'test_datetimes_pickle(test_session.py)', '689': 'test_datetimes_msgpack(test_session.py)'}}, {'key': 2795, 'parent': 2801, 'tfidf_word': 'remove path new native up ksm file my ipc spec ', 'tfidf_method': '_kernel_spec_manager_default _kernel_spec_manager_default _kernel_spec_manager_default start_new_async_kernel _kernel_spec_manager_default setUp MyKSM test_connection_file_real_path _kernel_spec_manager_default AsyncIOLoopKernelManager ', 'lda_word': ' kernel,manager,spec,multi,tcp,', 'lda_method': ' tcp_lifecycle_with_loop,get_tcp_km,raw_tcp_lifecycle,multikernelmanager,asyncmultikernelmanager,', 'lsi_word': ' kernel,manager,spec,tcp,multi,', 'lsi_method': ' multikernelmanager,get_tcp_km,kernelspec,kernelspecmanager,asyncmultikernelmanager,', 'spm_method': '  &#187; test_start_parallel_thread_kernels(test_multikernelmanager.py) &rarr; raw_tcp_lifecycle(test_multikernelmanager.py) &rarr; _get_tcp_km(test_multikernelmanager.py) &rarr; AsyncMultiKernelManager(multikernelmanager.py) &rarr; MultiKernelManager(multikernelmanager.py) &rarr; kernel_method(multikernelmanager.py) &rarr; wrapped(multikernelmanager.py) . <br> &#187; tcp_lifecycle_with_loop(test_multikernelmanager.py) &rarr; raw_tcp_lifecycle(test_multikernelmanager.py) &rarr; _get_tcp_km(test_multikernelmanager.py) &rarr; AsyncMultiKernelManager(multikernelmanager.py) &rarr; MultiKernelManager(multikernelmanager.py) &rarr; kernel_method(multikernelmanager.py) &rarr; wrapped(multikernelmanager.py) . <br> &#187; raw_tcp_lifecycle(test_multikernelmanager.py) &rarr; _get_tcp_km(test_multikernelmanager.py) &rarr; AsyncMultiKernelManager(multikernelmanager.py) &rarr; MultiKernelManager(multikernelmanager.py) &rarr; kernel_method(multikernelmanager.py) &rarr; wrapped(multikernelmanager.py) . <br> &#187; test_start_parallel_process_kernels(test_multikernelmanager.py) &rarr; raw_tcp_lifecycle(test_multikernelmanager.py) &rarr; _get_tcp_km(test_multikernelmanager.py) &rarr; AsyncMultiKernelManager(multikernelmanager.py) &rarr; MultiKernelManager(multikernelmanager.py) &rarr; kernel_method(multikernelmanager.py) &rarr; wrapped(multikernelmanager.py) . <br> &#187; test_start_parallel_thread_kernels(test_multikernelmanager.py) &rarr; test_tcp_lifecycle(test_multikernelmanager.py) &rarr; _get_tcp_km(test_multikernelmanager.py) &rarr; MultiKernelManager(multikernelmanager.py) &rarr; kernel_method(multikernelmanager.py) &rarr; wrapped(multikernelmanager.py) . <br> &#187; tcp_lifecycle_with_loop(test_multikernelmanager.py) &rarr; test_tcp_lifecycle(test_multikernelmanager.py) &rarr; _get_tcp_km(test_multikernelmanager.py) &rarr; MultiKernelManager(multikernelmanager.py) &rarr; kernel_method(multikernelmanager.py) &rarr; wrapped(multikernelmanager.py) . <br> &#187; test_start_parallel_process_kernels(test_multikernelmanager.py) &rarr; test_tcp_lifecycle(test_multikernelmanager.py) &rarr; _get_tcp_km(test_multikernelmanager.py) &rarr; MultiKernelManager(multikernelmanager.py) &rarr; kernel_method(multikernelmanager.py) &rarr; wrapped(multikernelmanager.py) . <br>', 'text_summary': "Ensure that a sequence of kernel startups doesn't break anything.", 'files_count': 8, 'files': ['test_multikernelmanager.py', 'multikernelmanager.py', 'manager.py', 'kernelspec.py', 'test_manager.py', 'test_kernelspec.py', 'kernelspecapp.py', 'kernelapp.py'], 'execution_path_count': 63, 'function_id_to_name_file': {'649': 'test_start_sequence_ipc_kernels(test_multikernelmanager.py)', '638': '_get_ipc_km(test_multikernelmanager.py)', '379': 'AsyncMultiKernelManager(multikernelmanager.py)', '381': 'MultiKernelManager(multikernelmanager.py)', '382': 'kernel_method(multikernelmanager.py)', '425': 'wrapped(multikernelmanager.py)', '645': 'test_ipc_lifecycle(test_multikernelmanager.py)', '644': 'test_ipc_cinfo(test_multikernelmanager.py)', '650': 'test_start_sequence_tcp_kernels(test_multikernelmanager.py)', '639': '_get_tcp_km(test_multikernelmanager.py)', '646': 'test_shutdown_all(test_multikernelmanager.py)', '651': 'test_tcp_cinfo(test_multikernelmanager.py)', '648': 'test_start_parallel_thread_kernels(test_multikernelmanager.py)', '643': 'tcp_lifecycle_with_loop(test_multikernelmanager.py)', '642': 'raw_tcp_lifecycle(test_multikernelmanager.py)', '647': 'test_start_parallel_process_kernels(test_multikernelmanager.py)', '652': 'test_tcp_lifecycle(test_multikernelmanager.py)', '653': 'test_tcp_lifecycle_with_kernel_id(test_multikernelmanager.py)', '664': 'test_start_sequence_ipc_kernels(test_multikernelmanager.py)', '654': '_get_ipc_km(test_multikernelmanager.py)', '660': 'test_ipc_lifecycle(test_multikernelmanager.py)', '659': 'test_ipc_cinfo(test_multikernelmanager.py)', '665': 'test_start_sequence_tcp_kernels(test_multikernelmanager.py)', '655': '_get_tcp_km(test_multikernelmanager.py)', '666': 'test_tcp_cinfo(test_multikernelmanager.py)', '668': 'test_tcp_lifecycle_with_kernel_id(test_multikernelmanager.py)', '661': 'test_shutdown_all(test_multikernelmanager.py)', '663': 'test_start_parallel_thread_kernels(test_multikernelmanager.py)', '658': 'tcp_lifecycle_with_loop(test_multikernelmanager.py)', '667': 'test_tcp_lifecycle(test_multikernelmanager.py)', '662': 'test_start_parallel_process_kernels(test_multikernelmanager.py)', '322': 'start_new_async_kernel(manager.py)', '319': 'AsyncKernelManager(manager.py)', '320': 'KernelManager(manager.py)', '254': 'KernelSpecManager(kernelspec.py)', '253': 'KernelSpec(kernelspec.py)', '224': 'AsyncIOLoopKernelManager(manager.py)', '225': 'IOLoopKernelManager(manager.py)', '635': 'test_connection_file_real_path(test_manager.py)', '629': 'test_subclass(test_kernelspec.py)', '618': 'setUp(test_kernelspec.py)', '289': '_kernel_spec_manager_default(kernelspecapp.py)', '345': '_kernel_spec_manager_default(manager.py)', '295': '_kernel_spec_manager_default(kernelspecapp.py)', '286': '_kernel_spec_manager_default(kernelspecapp.py)', '245': 'KernelApp(kernelapp.py)', '292': '_kernel_spec_manager_default(kernelspecapp.py)', '631': 'MyKSM(test_kernelspec.py)', '282': 'KernelSpecApp(kernelspecapp.py)', '284': 'RemoveKernelSpec(kernelspecapp.py)', '283': 'ListKernelSpecs(kernelspecapp.py)', '280': 'InstallKernelSpec(kernelspecapp.py)', '281': 'InstallNativeKernelSpec(kernelspecapp.py)'}}, {'key': 2799, 'parent': 2801, 'tfidf_word': 'date flush native permission digest msg restarter code tunnel ip ', 'tfidf_method': 'test_same_version test_rename_type __len__ test_object_info_request signal_kernel test_object_info_reply_not_found restart_kernel interrupt_kernel find_kernel_specs test_validate_kernel_name ', 'lda_word': ' send,connect,test,kernel,socket,', 'lda_method': ' init,make_url,load_ips,execute,adapt,', 'lsi_word': ' kernel,start,shutdown,msg,new,', 'lsi_method': ' msg,extract_header,shutdown_kernel,msg_header,msg_id,', 'spm_method': '  &#187; run_kernel(manager.py) &rarr; start_new_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; start_new_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; start_new_async_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; finish_shutdown(manager.py) &rarr; _async_wait(manager.py) &rarr; is_alive(manager.py) &rarr; has_kernel(manager.py) &rarr; _launch_kernel(manager.py) . <br> &#187; initialize(test_connect.py) &rarr; init_connection_file(consoleapp.py) &rarr; load_connection_file(connect.py) &rarr; load_connection_info(connect.py) &rarr; _ip_default(connect.py) &rarr; localhost(localinterfaces.py) . <br> &#187; initialize(runapp.py) &rarr; handle_sigint(runapp.py) &rarr; interrupt_kernel(manager.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; restart_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; finish_shutdown(manager.py) &rarr; _async_wait(manager.py) &rarr; is_alive(manager.py) &rarr; has_kernel(manager.py) &rarr; _launch_kernel(manager.py) . <br> &#187; tunnel_to_kernel(connect.py) &rarr; try_passwordless_ssh(tunnel.py) &rarr; _try_passwordless_paramiko(tunnel.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; do_execute(signalkernel.py) &rarr; poll(restarter.py) &rarr; restart_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; cleanup_resources(manager.py) &rarr; _close_control_socket(manager.py) &rarr; _create_connected_socket(connect.py) &rarr; _make_url(connect.py) . <br> &#187; start(kernelspecapp.py) &rarr; start(kernelspecapp.py) &rarr; input(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; handle_sigint(runapp.py) &rarr; interrupt_kernel(manager.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; tunnel_connection(tunnel.py) &rarr; open_tunnel(tunnel.py) &rarr; paramiko_tunnel(tunnel.py) &rarr; _try_passwordless_paramiko(tunnel.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; open_tunnel(tunnel.py) &rarr; paramiko_tunnel(tunnel.py) &rarr; _try_passwordless_paramiko(tunnel.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; paramiko_tunnel(tunnel.py) &rarr; _try_passwordless_paramiko(tunnel.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; _try_passwordless_paramiko(tunnel.py) &rarr; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; init_kernel_info(runapp.py) &rarr; kernel_info(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; start(kernelspecapp.py) &rarr; input(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; try_passwordless_ssh(tunnel.py) &rarr; _try_passwordless_paramiko(tunnel.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; shutdown_kernel(manager.py) &rarr; finish_shutdown(manager.py) &rarr; _kill_kernel(manager.py) &rarr; _async_wait(manager.py) &rarr; is_alive(manager.py) &rarr; has_kernel(manager.py) &rarr; _launch_kernel(manager.py) . <br> &#187; poll(restarter.py) &rarr; restart_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; cleanup_resources(manager.py) &rarr; _close_control_socket(manager.py) &rarr; _create_connected_socket(connect.py) &rarr; _make_url(connect.py) . <br> &#187; restart_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; cleanup_resources(manager.py) &rarr; _close_control_socket(manager.py) &rarr; _create_connected_socket(connect.py) &rarr; _make_url(connect.py) . <br> &#187; finish_shutdown(manager.py) &rarr; _kill_kernel(manager.py) &rarr; _async_wait(manager.py) &rarr; is_alive(manager.py) &rarr; has_kernel(manager.py) &rarr; _launch_kernel(manager.py) . <br>', 'text_summary': "Subclasses may override  Prepares a kernel for startup in a separate process. return ip for localhost (almost always 127.0.0.1) test `ipython console --existing` loads a connection file. Prepares a kernel for startup in a separate process. Create a client configured to connect to our kernel. return ip for localhost (almost always 127.0.0.1)   Ensure that a sequence of kernel startups doesn't break anything. Sends a signal to the process group of the kernel (this. return zmq Socket connected to the IOPub channel. Pass a message to the ZMQ socket to send. return ip for localhost (almost always 127.0.0.1)   set up ssh tunnels, if needed. Start a new kernel, and return its Manager and Client. Send a string of raw input to the kernel. Return the connection info as a dict. Subclasses may override Start the polling of the kernel. load ip addresses with socket.gethostbyname_ex uniq_stable(elems) -> list. return ip for localhost (almost always 127.0.0.1) test load_connection_file() after. Launches a localhost kernel, binding to the specified ports. test `ipython console --existing` loads a connection file. find a connection file, and return its absolute path. return ip for localhost (almost always 127.0.0.1)      find a connection file, and return its absolute path. tunnel connections to a kernel via ssh. For tests, create a file to indicate that we've started. Connect a socket to an address via an ssh tunnel. Returns a dict mapping kernel names to kernelspecs. handle kernel info reply. Given a message or header, return the header. Get the hb channel object for this kernel. Returns the id to associate with the kernel for this request. Send a raw message via ident path. {connection_file})   Prepares a kernel for startup in a separate process. {connection_file})  Restarts a kernel with the arguments that were used to launch it. Make a blocking client connected to my kernel. populate local and public IPs from flat list of all IPs. return the IP addresses that point to this machine. return ip for localhost (almost always 127.0.0.1)       return ip for localhost (almost always 127.0.0.1)   find the connection file, and load the info if found. Load connection info from JSON dict in self.connection_file. return ip for localhost (almost always 127.0.0.1)  Write connection info to JSON dict in self.connection_file. Immediately processes all pending messages on this channel. Return the number of running kernels. Verify realpath is used when formatting connection file. return zmq Socket connected to the Shell channel. Unserialize a msg_list to a nested message dict. Request kernel info. {connection_file}) Write connection info to JSON dict in self.connection_file. {connection_file})  Context manager to create a kernel in a subprocess. Create an ssh tunnel using command-line ssh that connects port lport. Get a message from the shell channel. populate local and public IPs from flat list of all IPs. return the IP addresses for this machine that are visible to other machines. This is run in the ioloop thread when the kernel info reply is received. return zmq Socket connected to the StdIn channel. return the IP addresses that point to this machine. return zmq Socket connected to the Heartbeat channel. return ip for localhost (almost always 127.0.0.1)   find the connection file, and load the info if found. find the connection file, and load the info if found. Return a mapping of kernel names to resource directories from dir. populate local and public IPs from flat list of all IPs. decorator to ensure load_ips has been run before f. Returns a :class:`KernelSpec` instance for a given kernel_name. Context manager to create a kernel in a subprocess. return zmq Socket connected to the Control channel. test load_connection_file() after. Write connection info to JSON dict in self.connection_file. Create a zmq Socket and connect it to the kernel. Forgets randomly assigned port numbers and cleans up the connection file.", 'files_count': 36, 'files': ['manager.py', 'localinterfaces.py', 'connect.py', 'kernelspec.py', 'session.py', 'test_adapter.py', 'adapter.py', 'threaded.py', 'channels.py', 'test_localinterfaces.py', 'test_connect.py', 'test_session.py', 'consoleapp.py', 'runapp.py', 'test_kernelspec.py', 'jsonutil.py', 'forward.py', 'test_jsonutil.py', 'test_manager.py', 'test_client.py', 'test_multikernelmanager.py', 'multikernelmanager.py', 'tunnel.py', 'test_ssh.py', 'client.py', 'managerabc.py', 'channelsabc.py', 'test_kernelmanager.py', 'utils.py', 'restarter.py', 'signalkernel.py', 'kernelspecapp.py', 'kernelapp.py', 'test_kernelapp.py', 'win_interrupt.py', 'launcher.py'], 'execution_path_count': 848, 'function_id_to_name_file': {'321': 'run_kernel(manager.py)', '323': 'start_new_kernel(manager.py)', '366': 'start_kernel(manager.py)', '360': 'pre_start_kernel(manager.py)', '341': '_get_env_substitutions(manager.py)', '314': 'local_ips(localinterfaces.py)', '312': 'is_local_ip(localinterfaces.py)', '212': 'write_connection_file(connect.py)', '197': '_record_random_port_names(connect.py)', '353': 'format_kernel_cmd(manager.py)', '369': 'from_ns(manager.py)', '358': 'kernel_spec(manager.py)', '253': 'KernelSpec(kernelspec.py)', '347': '_launch_kernel(manager.py)', '359': 'post_start_kernel(manager.py)', '338': '_connect_control_socket(manager.py)', '192': '_create_connected_socket(connect.py)', '196': '_make_url(connect.py)', '367': 'start_restarter(manager.py)', '364': 'shutdown_kernel(manager.py)', '362': 'request_shutdown(manager.py)', '476': 'msg(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '480': 'send(session.py)', '520': 'msg(test_adapter.py)', '534': 'msg(test_adapter.py)', '444': 'extract_header(session.py)', '50': 'adapt(adapter.py)', '450': 'utcnow(session.py)', '482': 'serialize(session.py)', '483': 'sign(session.py)', '440': 'Message(session.py)', '734': 'send(threaded.py)', '738': 'thread_send(threaded.py)', '88': 'send(channels.py)', '114': 'send(channels.py)', '320': 'KernelManager(manager.py)', '254': 'KernelSpecManager(kernelspec.py)', '188': 'ConnectionFileMixin(connect.py)', '322': 'start_new_async_kernel(manager.py)', '351': 'client(manager.py)', '208': 'get_connection_info(connect.py)', '346': '_kill_kernel(manager.py)', '365': 'signal_kernel(manager.py)', '354': 'has_kernel(manager.py)', '352': 'finish_shutdown(manager.py)', '357': 'is_alive(manager.py)', '350': 'cleanup_resources(manager.py)', '201': 'cleanup_ipc_files(connect.py)', '211': 'ports(connect.py)', '349': 'cleanup(manager.py)', '368': 'stop_restarter(manager.py)', '200': 'cleanup_connection_file(connect.py)', '310': '_requires_ips(localinterfaces.py)', '318': 'ips_loaded(localinterfaces.py)', '301': '_load_ips(localinterfaces.py)', '306': '_load_ips_ipconfig(localinterfaces.py)', '300': '_get_output(localinterfaces.py)', '309': '_populate_from_list(localinterfaces.py)', '299': 'NoIPAddresses(localinterfaces.py)', '316': 'public_ips(localinterfaces.py)', '311': '_uniq_stable(localinterfaces.py)', '304': '_load_ips_ifconfig(localinterfaces.py)', '305': '_load_ips_ip(localinterfaces.py)', '307': '_load_ips_netifaces(localinterfaces.py)', '302': '_load_ips_dumb(localinterfaces.py)', '634': 'test_load_ips(test_localinterfaces.py)', '303': '_load_ips_gethostbyname(localinterfaces.py)', '565': 'test_load_connection_file_session_with_kn(test_connect.py)', '457': '__init__(session.py)', '465': '_new_auth(session.py)', '564': 'test_load_connection_file_session(test_connect.py)', '519': 'setUp(test_adapter.py)', '516': 'test_default_version(test_adapter.py)', '689': 'test_datetimes_msgpack(test_session.py)', '690': 'test_datetimes_pickle(test_session.py)', '683': 'test_bad_roundtrip(test_session.py)', '685': 'test_bad_unpacker(test_session.py)', '682': 'test_bad_packer(test_session.py)', '681': 'test_bad_pack(test_session.py)', '684': 'test_bad_unpack(test_session.py)', '687': 'test_cull_digest_history(test_session.py)', '697': 'test_session_id(test_session.py)', '700': 'test_zero_digest_history(test_session.py)', '680': 'test_args(test_session.py)', '678': 'setUp(test_session.py)', '215': '__init__(consoleapp.py)', '198': '_session_default(connect.py)', '560': 'test_find_connection_file(test_connect.py)', '572': 'initialize(test_connect.py)', '219': 'init_connection_file(consoleapp.py)', '209': 'load_connection_file(connect.py)', '210': 'load_connection_info(connect.py)', '195': '_ip_default(connect.py)', '315': 'localhost(localinterfaces.py)', '559': 'test_app_load_connection_file(test_connect.py)', '437': 'initialize(runapp.py)', '223': 'initialize(consoleapp.py)', '222': 'init_ssh(consoleapp.py)', '220': 'init_kernel_client(consoleapp.py)', '221': 'init_kernel_manager(consoleapp.py)', '255': 'NoSuchKernel(kernelspec.py)', '568': 'test_mixin_record_random_ports(test_connect.py)', '567': 'test_mixin_cleanup_random_ports(test_connect.py)', '621': 'test_find_all_specs(test_kernelspec.py)', '273': 'get_all_specs(kernelspec.py)', '272': 'find_kernel_specs(kernelspec.py)', '258': '_list_kernels_in(kernelspec.py)', '257': '_is_valid_kernel_name(kernelspec.py)', '256': '_is_kernel_dir(kernelspec.py)', '629': 'test_subclass(test_kernelspec.py)', '627': 'test_remove_kernel_spec(test_kernelspec.py)', '277': 'remove_kernel_spec(kernelspec.py)', '625': 'test_install_kernel_spec_prefix(test_kernelspec.py)', '626': 'test_kernel_spec_priority(test_kernelspec.py)', '624': 'test_install_kernel_spec(test_kernelspec.py)', '259': 'find_kernel_specs(kernelspec.py)', '622': 'test_find_kernel_specs(test_kernelspec.py)', '694': 'test_send(test_session.py)', '479': 'recv(session.py)', '474': 'deserialize(session.py)', '242': 'extract_dates(jsonutil.py)', '243': 'parse_date(jsonutil.py)', '240': '_ensure_tzinfo(jsonutil.py)', '492': 'handle(forward.py)', '695': 'test_send_raw(test_session.py)', '484': 'unserialize(session.py)', '696': 'test_serialize(test_session.py)', '578': 'test_parse_ms_precision(test_jsonutil.py)', '679': '_datetime_test(test_session.py)', '688': 'test_datetimes(test_session.py)', '575': 'test_date_default(test_jsonutil.py)', '576': 'test_extract_date_from_naive(test_jsonutil.py)', '577': 'test_extract_dates(test_jsonutil.py)', '330': 'restart_kernel(manager.py)', '333': 'start_kernel(manager.py)', '326': '_launch_kernel(manager.py)', '635': 'test_connection_file_real_path(test_manager.py)', '623': 'test_get_kernel_spec(test_kernelspec.py)', '267': '_find_spec_directory(kernelspec.py)', '632': 'find_kernel_specs(test_kernelspec.py)', '274': 'get_kernel_spec(kernelspec.py)', '633': 'get_kernel_spec(test_kernelspec.py)', '549': 'setUp(test_client.py)', '269': '_get_kernel_spec_by_name(kernelspec.py)', '278': '__init__(kernelspec.py)', '260': 'get_kernel_spec(kernelspec.py)', '698': 'test_tracking(test_session.py)', '328': 'interrupt_kernel(manager.py)', '191': 'write_connection_file(connect.py)', '109': 'close(channels.py)', '83': 'close(channels.py)', '730': 'close(threaded.py)', '132': 'close(channels.py)', '718': 'close(threaded.py)', '570': 'test_write_connection_file(test_connect.py)', '686': 'test_clone(test_session.py)', '458': '_add_digest(session.py)', '460': '_cull_digest_history(session.py)', '558': 'DummyConsoleApp(test_connect.py)', '214': 'JupyterConsoleApp(consoleapp.py)', '441': 'Session(session.py)', '213': 'IPythonConsoleApp(consoleapp.py)', '434': 'RunApp(runapp.py)', '665': 'test_start_sequence_tcp_kernels(test_multikernelmanager.py)', '655': '_get_tcp_km(test_multikernelmanager.py)', '392': '__init__(multikernelmanager.py)', '666': 'test_tcp_cinfo(test_multikernelmanager.py)', '668': 'test_tcp_lifecycle_with_kernel_id(test_multikernelmanager.py)', '661': 'test_shutdown_all(test_multikernelmanager.py)', '663': 'test_start_parallel_thread_kernels(test_multikernelmanager.py)', '658': 'tcp_lifecycle_with_loop(test_multikernelmanager.py)', '667': 'test_tcp_lifecycle(test_multikernelmanager.py)', '662': 'test_start_parallel_process_kernels(test_multikernelmanager.py)', '190': 'tunnel_to_kernel(connect.py)', '503': 'select_random_ports(tunnel.py)', '701': 'test_random_ports(test_ssh.py)', '386': 'shutdown_all(multikernelmanager.py)', '383': 'finish_shutdown(multikernelmanager.py)', '410': 'get_kernel(multikernelmanager.py)', '394': '_check_kernel_id(multikernelmanager.py)', '388': 'signal_kernel(multikernelmanager.py)', '385': 'restart_kernel(multikernelmanager.py)', '384': 'interrupt_kernel(multikernelmanager.py)', '387': 'shutdown_kernel(multikernelmanager.py)', '421': 'shutdown_kernel(multikernelmanager.py)', '420': 'shutdown_all(multikernelmanager.py)', '104': 'wait_for_ready(client.py)', '103': 'is_alive(client.py)', '412': 'is_alive(multikernelmanager.py)', '373': 'is_alive(managerabc.py)', '140': 'is_alive(channelsabc.py)', '732': 'is_alive(threaded.py)', '86': 'is_alive(channels.py)', '112': 'is_alive(channels.py)', '123': 'wait_for_ready(client.py)', '165': 'is_alive(client.py)', '648': 'test_start_parallel_thread_kernels(test_multikernelmanager.py)', '643': 'tcp_lifecycle_with_loop(test_multikernelmanager.py)', '642': 'raw_tcp_lifecycle(test_multikernelmanager.py)', '641': '_run_lifecycle(test_multikernelmanager.py)', '647': 'test_start_parallel_process_kernels(test_multikernelmanager.py)', '652': 'test_tcp_lifecycle(test_multikernelmanager.py)', '653': 'test_tcp_lifecycle_with_kernel_id(test_multikernelmanager.py)', '135': 'run(channels.py)', '128': '_create_socket(channels.py)', '84': 'get_msg(channels.py)', '82': '_recv(channels.py)', '101': 'get_stdin_msg(client.py)', '85': 'get_msgs(channels.py)', '99': 'get_iopub_msg(client.py)', '110': 'get_msg(channels.py)', '108': '_recv(channels.py)', '111': 'get_msgs(channels.py)', '620': 'test_cant_install_kernel_spec(test_kernelspec.py)', '275': 'install_kernel_spec(kernelspec.py)', '268': '_get_destination_dir(kernelspec.py)', '261': 'install_kernel_spec(kernelspec.py)', '614': 'test_start_sequence_process_kernels(test_kernelmanager.py)', '610': '_run_signaltest_lifecycle(test_kernelmanager.py)', '615': 'execute(test_kernelmanager.py)', '609': '_prepare_kernel(test_kernelmanager.py)', '611': 'test_start_parallel_process_kernels(test_kernelmanager.py)', '613': 'test_start_sequence_kernels(test_kernelmanager.py)', '612': 'test_start_parallel_thread_kernels(test_kernelmanager.py)', '398': '_kernel_manager_class_changed(multikernelmanager.py)', '396': '_create_kernel_manager_factory(multikernelmanager.py)', '424': 'create_kernel_manager(multikernelmanager.py)', '397': '_find_available_port(multikernelmanager.py)', '395': '_context_default(multikernelmanager.py)', '399': '_kernel_manager_factory_default(multikernelmanager.py)', '485': '__init__(session.py)', '459': '_check_packers(session.py)', '244': 'squash_dates(jsonutil.py)', '90': 'AsyncKernelClient(client.py)', '147': 'KernelClient(client.py)', '139': 'HBChannelABC(channelsabc.py)', '138': 'ChannelABC(channelsabc.py)', '116': 'BlockingKernelClient(client.py)', '319': 'AsyncKernelManager(manager.py)', '224': 'AsyncIOLoopKernelManager(manager.py)', '225': 'IOLoopKernelManager(manager.py)', '657': '_run_lifecycle(test_multikernelmanager.py)', '704': 'execute(utils.py)', '155': 'execute(client.py)', '148': 'validate_string_dict(client.py)', '664': 'test_start_sequence_ipc_kernels(test_multikernelmanager.py)', '654': '_get_ipc_km(test_multikernelmanager.py)', '660': 'test_ipc_lifecycle(test_multikernelmanager.py)', '659': 'test_ipc_cinfo(test_multikernelmanager.py)', '423': 'start_kernel(multikernelmanager.py)', '415': 'pre_start_kernel(multikernelmanager.py)', '380': 'DuplicateKernelError(multikernelmanager.py)', '414': 'new_kernel_id(multikernelmanager.py)', '389': 'start_kernel(multikernelmanager.py)', '238': 'start(restarter.py)', '430': 'poll(restarter.py)', '433': 'stop(restarter.py)', '428': '_fire_callbacks(restarter.py)', '510': 'do_execute(signalkernel.py)', '501': 'openssh_tunnel(tunnel.py)', '494': 'SSHException(tunnel.py)', '497': '_stop_tunnel(tunnel.py)', '475': 'feed_identities(session.py)', '202': 'cleanup_random_ports(connect.py)', '106': 'ZMQSocketChannel(channels.py)', '226': 'as_zmqstream(manager.py)', '233': 'wrapped(manager.py)', '557': 'DummyConfigurable(test_connect.py)', '235': 'IOLoopKernelRestarter(restarter.py)', '426': 'KernelRestarter(restarter.py)', '234': 'AsyncIOLoopKernelRestarter(restarter.py)', '291': 'start(kernelspecapp.py)', '251': 'start(kernelapp.py)', '249': 'setup_signals(kernelapp.py)', '252': 'shutdown_handler(kernelapp.py)', '250': 'shutdown(kernelapp.py)', '248': 'log_connection_info(kernelapp.py)', '199': 'blocking_client(connect.py)', '725': 'stop_channels(threaded.py)', '676': '_bad_unpacker(test_session.py)', '536': 'test_complete_request(test_adapter.py)', '517': 'adapt(test_adapter.py)', '562': 'test_find_connection_file_local(test_connect.py)', '189': 'find_connection_file(connect.py)', '493': 'SubHander(forward.py)', '490': 'Handler(forward.py)', '241': 'date_default(jsonutil.py)', '597': 'test_subclasses(test_kernelmanager.py)', '703': 'AsyncKernelManagerWithCleanup(utils.py)', '595': 'test_signal_kernel_subprocesses(test_kernelmanager.py)', '598': 'execute(test_kernelmanager.py)', '702': 'AsyncKernelManagerSubclass(utils.py)', '591': 'transport(test_kernelmanager.py)', '606': 'test_templated_kspec_env(test_kernelmanager.py)', '599': '_env_test_body(test_kernelmanager.py)', '607': 'execute(test_kernelmanager.py)', '604': 'test_signal_kernel_subprocesses(test_kernelmanager.py)', '608': 'execute(test_kernelmanager.py)', '586': 'env(test_kernelmanager.py)', '712': 'stop(utils.py)', '711': 'start(utils.py)', '705': 'test_env(utils.py)', '630': 'test_validate_kernel_name(test_kernelspec.py)', '506': 'SignalTestApp(signalkernel.py)', '507': 'SignalTestKernel(signalkernel.py)', '617': '_install_sample_kernel(test_kernelspec.py)', '651': 'test_tcp_cinfo(test_multikernelmanager.py)', '640': '_run_cinfo(test_multikernelmanager.py)', '619': 'tearDown(test_kernelspec.py)', '618': 'setUp(test_kernelspec.py)', '649': 'test_start_sequence_ipc_kernels(test_multikernelmanager.py)', '650': 'test_start_sequence_tcp_kernels(test_multikernelmanager.py)', '644': 'test_ipc_cinfo(test_multikernelmanager.py)', '645': 'test_ipc_lifecycle(test_multikernelmanager.py)', '656': '_run_cinfo(test_multikernelmanager.py)', '569': 'test_secure_write(test_connect.py)', '573': 'check_user_only_permissions(test_connect.py)', '574': 'fetch_win32_permissions(test_connect.py)', '563': 'test_find_connection_file_relative(test_connect.py)', '561': 'test_find_connection_file_abspath(test_connect.py)', '539': 'test_input_request(test_adapter.py)', '537': 'test_display_data(test_adapter.py)', '540': 'test_inspect_reply(test_adapter.py)', '543': 'test_kernel_info_reply(test_adapter.py)', '542': 'test_inspect_request_token(test_adapter.py)', '535': 'test_complete_reply(test_adapter.py)', '541': 'test_inspect_request(test_adapter.py)', '538': 'test_execute_request(test_adapter.py)', '545': 'test_rename_type(test_adapter.py)', '544': 'test_no_adapt(test_adapter.py)', '546': 'test_same_version(test_adapter.py)', '514': 'V5toV4TestCase(test_adapter.py)', '512': 'AdapterTest(test_adapter.py)', '526': 'test_input_request(test_adapter.py)', '523': 'test_display_data(test_adapter.py)', '527': 'test_kernel_info_reply(test_adapter.py)', '530': 'test_object_info_reply_not_found(test_adapter.py)', '529': 'test_object_info_reply(test_adapter.py)', '531': 'test_object_info_request(test_adapter.py)', '521': 'test_complete_reply(test_adapter.py)', '522': 'test_complete_request(test_adapter.py)', '524': 'test_execute_reply(test_adapter.py)', '532': 'test_rename_type(test_adapter.py)', '525': 'test_execute_request(test_adapter.py)', '528': 'test_no_adapt(test_adapter.py)', '533': 'test_same_version(test_adapter.py)', '513': 'V4toV5TestCase(test_adapter.py)', '515': 'test_code_to_line_no_code(test_adapter.py)', '51': 'code_to_line(adapter.py)', '158': 'get_shell_msg(client.py)', '157': 'get_iopub_msg(client.py)', '710': '__exit__(utils.py)', '709': '__enter__(utils.py)', '580': 'test_kernelapp_lifecycle(test_kernelapp.py)', '579': '_launch(test_kernelapp.py)', '473': 'clone(session.py)', '481': 'send_raw(session.py)', '675': '_bad_packer(test_session.py)', '699': 'test_unique_msg_ids(test_session.py)', '445': 'msg_header(session.py)', '674': 'TestSession(test_session.py)', '673': 'SessionTestCase(test_session.py)', '556': 'test_shutdown(test_client.py)', '548': '_check_reply(test_client.py)', '550': 'test_comm_info(test_client.py)', '555': 'test_kernel_info(test_client.py)', '551': 'test_complete(test_client.py)', '554': 'test_inspect(test_client.py)', '553': 'test_history(test_client.py)', '117': 'reqrep(client.py)', '124': 'wrapped(client.py)', '150': '_handle_kernel_info_reply(client.py)', '125': 'HBChannel(channels.py)', '102': 'hb_channel(client.py)', '91': 'reqrep(client.py)', '105': 'wrapped(client.py)', '80': 'ZMQSocketChannel(channels.py)', '154': 'control_channel(client.py)', '723': 'ioloop(threaded.py)', '160': 'hb_channel(client.py)', '171': 'stdin_channel(client.py)', '164': 'iopub_channel(client.py)', '168': 'shell_channel(client.py)', '740': 'send_interrupt(win_interrupt.py)', '334': '__del__(manager.py)', '293': 'start(kernelspecapp.py)', '294': 'path_key(kernelspecapp.py)', '735': 'start(threaded.py)', '720': 'start(threaded.py)', '141': 'start(channelsabc.py)', '432': 'start(restarter.py)', '288': 'start(kernelspecapp.py)', '89': 'start(channels.py)', '115': 'start(channels.py)', '290': 'start(kernelspecapp.py)', '438': 'parse_command_line(runapp.py)', '218': 'build_kernel_argv(consoleapp.py)', '308': '_only_once(localinterfaces.py)', '317': 'wrapped(localinterfaces.py)', '47': 'V4toV5(adapter.py)', '46': 'Adapter(adapter.py)', '77': 'object_info_request(adapter.py)', '52': 'extract_oname_v4(adapter.py)', '70': 'complete_request(adapter.py)', '75': 'kernel_info_reply(adapter.py)', '49': '_version_str_to_list(adapter.py)', '48': 'V5toV4(adapter.py)', '53': '__call__(adapter.py)', '54': 'handle_reply_status_error(adapter.py)', '57': 'update_msg_type(adapter.py)', '56': 'update_metadata(adapter.py)', '55': 'update_header(adapter.py)', '247': 'initialize(kernelapp.py)', '246': '_record_started(kernelapp.py)', '585': 'config(test_kernelmanager.py)', '262': 'install_native_kernel_spec(kernelspec.py)', '276': 'install_native_kernel_spec(kernelspec.py)', '265': 'to_json(kernelspec.py)', '264': 'to_dict(kernelspec.py)', '449': 'test_msg2obj(session.py)', '453': '__init__(session.py)', '470': '_signature_scheme_changed(session.py)', '463': '_key_default(session.py)', '447': 'new_id_bytes(session.py)', '462': '_key_changed(session.py)', '443': 'default_secure(session.py)', '469': '_session_default(session.py)', '446': 'new_id(session.py)', '413': 'list_kernel_ids(multikernelmanager.py)', '721': 'stop(threaded.py)', '724': 'start_channels(threaded.py)', '722': '_check_kernel_info_reply(threaded.py)', '716': '__init__(threaded.py)', '416': 'remove_kernel(multikernelmanager.py)', '713': 'IOLoopThread(threaded.py)', '714': 'ThreadedKernelClient(threaded.py)', '715': 'ThreadedZMQSocketChannel(threaded.py)', '731': 'flush(threaded.py)', '727': '_flush(threaded.py)', '418': 'request_shutdown(multikernelmanager.py)', '402': 'cleanup_resources(multikernelmanager.py)', '408': 'finish_shutdown(multikernelmanager.py)', '393': '__len__(multikernelmanager.py)', '298': 'launch_kernel(launcher.py)', '739': 'create_interrupt_event(win_interrupt.py)', '741': 'SECURITY_ATTRIBUTES(win_interrupt.py)', '509': '__init__(signalkernel.py)', '127': '__init__(channels.py)', '126': 'InvalidPortNumber(channels.py)', '107': '__init__(channels.py)', '81': '__init__(channels.py)', '726': '__init__(threaded.py)', '737': 'setup_stream(threaded.py)', '728': '_handle_recv(threaded.py)', '729': 'call_handlers(threaded.py)', '136': 'stop(channels.py)', '133': 'is_beating(channels.py)', '145': 'time_to_dead(channelsabc.py)', '131': 'call_handlers(channels.py)', '130': '_poll(channels.py)', '435': 'handle_sigint(runapp.py)', '355': 'interrupt_kernel(manager.py)', '411': 'interrupt_kernel(multikernelmanager.py)', '372': 'interrupt_kernel(managerabc.py)', '505': 'tunnel_connection(tunnel.py)', '500': 'open_tunnel(tunnel.py)', '502': 'paramiko_tunnel(tunnel.py)', '499': '_try_passwordless_paramiko(tunnel.py)', '496': '_split_server(tunnel.py)', '495': '_paramiko_tunnel(tunnel.py)', '491': 'forward_tunnel(forward.py)', '436': 'init_kernel_info(runapp.py)', '137': 'unpause(channels.py)', '146': 'unpause(channelsabc.py)', '167': 'kernel_info(client.py)', '297': 'start(kernelspecapp.py)', '162': 'input(client.py)', '504': 'try_passwordless_ssh(tunnel.py)', '498': '_try_passwordless_openssh(tunnel.py)', '331': 'shutdown_kernel(manager.py)', '337': '_close_control_socket(manager.py)', '236': 'poll(restarter.py)', '363': 'restart_kernel(manager.py)', '203': 'connect_control(connect.py)', '207': 'connect_stdin(connect.py)', '206': 'connect_shell(connect.py)', '205': 'connect_iopub(connect.py)', '204': 'connect_hb(connect.py)', '228': 'start_restarter(manager.py)', '231': 'start_restarter(manager.py)', '439': 'start(runapp.py)', '122': 'execute_interactive(client.py)', '97': 'execute_interactive(client.py)', '327': 'finish_shutdown(manager.py)', '324': '_async_wait(manager.py)', '329': 'is_alive(manager.py)', '325': '_kill_kernel(manager.py)', '332': 'signal_kernel(manager.py)'}}, {'key': 472, 'parent': 1418, 'tfidf_word': 'EP: 472, Name: start_channels &rarr; kernel_info &rarr; msg &rarr; msg &rarr; msg &rarr; msg_header &rarr; msg_id', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 552, 'parent': 1418, 'tfidf_word': 'EP: 552, Name: AsyncKernelClient &rarr; kernel_info &rarr; msg &rarr; msg &rarr; msg &rarr; msg_header &rarr; msg_id', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 563, 'parent': 1428, 'tfidf_word': 'EP: 563, Name: AsyncKernelClient &rarr; inspect &rarr; msg &rarr; msg &rarr; msg &rarr; msg_header &rarr; msg_id', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 678, 'parent': 1428, 'tfidf_word': 'EP: 678, Name: BlockingKernelClient &rarr; inspect &rarr; msg &rarr; msg &rarr; msg &rarr; msg_header &rarr; msg_id', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1426, 'parent': 2013, 'tfidf_word': 'client comm header id info kernel async blocking msg ', 'tfidf_method': 'comm_info msg msg_header msg_id msg msg BlockingKernelClient AsyncKernelClient ', 'lda_word': ' msg,header,comm,client,kernel,', 'lda_method': ' msg,msg_id,comm_info,asynckernelclient,msg_header,', 'lsi_word': ' msg,info,comm,client,header,', 'lsi_method': ' msg,comm_info,msg_header,msg_id,asynckernelclient,', 'spm_method': '  &#187; comm_info(client.py) &rarr; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br>', 'text_summary': '', 'files_count': 3, 'files': ['client.py', 'test_adapter.py', 'session.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'90': 'AsyncKernelClient(client.py)', '152': 'comm_info(client.py)', '520': 'msg(test_adapter.py)', '534': 'msg(test_adapter.py)', '476': 'msg(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '116': 'BlockingKernelClient(client.py)'}}, {'key': 2011, 'parent': 2013, 'tfidf_word': 'interrupt input type identity found feed display data version msg ', 'tfidf_method': 'test_kernel_info_reply test_input_request test_serialize test_execute_reply test_display_data test_complete_request test_complete_reply is_complete interrupt_kernel test_execute_request ', 'lda_word': ' msg,header,test,info,reply,', 'lda_method': ' msg,msg_id,msg_header,asynckernelclient,blockingkernelclient,', 'lsi_word': ' msg,header,test,kernel,client,', 'lsi_method': ' msg,msg_id,msg_header,asynckernelclient,blockingkernelclient,', 'spm_method': '  &#187; AsyncKernelClient(client.py) &rarr; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; shutdown(client.py) &rarr; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; BlockingKernelClient(client.py) &rarr; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; complete(client.py) &rarr; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; history(client.py) &rarr; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br>', 'text_summary': "Tab complete text in the kernel's namespace.", 'files_count': 5, 'files': ['client.py', 'test_adapter.py', 'session.py', 'test_session.py', 'manager.py'], 'execution_path_count': 26, 'function_id_to_name_file': {'90': 'AsyncKernelClient(client.py)', '169': 'shutdown(client.py)', '520': 'msg(test_adapter.py)', '534': 'msg(test_adapter.py)', '476': 'msg(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '116': 'BlockingKernelClient(client.py)', '153': 'complete(client.py)', '161': 'history(client.py)', '526': 'test_input_request(test_adapter.py)', '523': 'test_display_data(test_adapter.py)', '527': 'test_kernel_info_reply(test_adapter.py)', '530': 'test_object_info_reply_not_found(test_adapter.py)', '529': 'test_object_info_reply(test_adapter.py)', '531': 'test_object_info_request(test_adapter.py)', '521': 'test_complete_reply(test_adapter.py)', '522': 'test_complete_request(test_adapter.py)', '524': 'test_execute_reply(test_adapter.py)', '525': 'test_execute_request(test_adapter.py)', '532': 'test_rename_type(test_adapter.py)', '528': 'test_no_adapt(test_adapter.py)', '533': 'test_same_version(test_adapter.py)', '695': 'test_send_raw(test_session.py)', '692': 'test_feed_identities(test_session.py)', '694': 'test_send(test_session.py)', '696': 'test_serialize(test_session.py)', '693': 'test_msg(test_session.py)', '328': 'interrupt_kernel(manager.py)', '166': 'is_complete(client.py)'}}, {'key': 474, 'parent': 1490, 'tfidf_word': 'EP: 474, Name: start_channels &rarr; kernel_info &rarr; msg &rarr; msg &rarr; msg_header &rarr; msg_id', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 554, 'parent': 1490, 'tfidf_word': 'EP: 554, Name: AsyncKernelClient &rarr; kernel_info &rarr; msg &rarr; msg &rarr; msg_header &rarr; msg_id', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 565, 'parent': 1510, 'tfidf_word': 'EP: 565, Name: AsyncKernelClient &rarr; inspect &rarr; msg &rarr; msg &rarr; msg_header &rarr; msg_id', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 680, 'parent': 1510, 'tfidf_word': 'EP: 680, Name: BlockingKernelClient &rarr; inspect &rarr; msg &rarr; msg &rarr; msg_header &rarr; msg_id', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1506, 'parent': 2248, 'tfidf_word': 'client comm header id info kernel async blocking msg ', 'tfidf_method': 'comm_info msg msg_header msg_id msg BlockingKernelClient AsyncKernelClient ', 'lda_word': ' msg,info,comm,kernel,header,', 'lda_method': ' msg,comm_info,msg_id,msg_header,blockingkernelclient,', 'lsi_word': ' msg,client,info,kernel,comm,', 'lsi_method': ' msg,comm_info,msg_id,msg_header,blockingkernelclient,', 'spm_method': ' ', 'text_summary': '', 'files_count': 3, 'files': ['client.py', 'test_adapter.py', 'session.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'90': 'AsyncKernelClient(client.py)', '152': 'comm_info(client.py)', '534': 'msg(test_adapter.py)', '476': 'msg(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '116': 'BlockingKernelClient(client.py)'}}, {'key': 2244, 'parent': 2248, 'tfidf_word': 'interrupt type info identity feed execute display data version msg ', 'tfidf_method': 'interrupt_kernel test_inspect_reply test_input_request test_serialize test_display_data test_complete_request test_complete_reply is_complete test_inspect_request_token test_execute_request ', 'lda_word': ' msg,serialize,header,test,kernel,', 'lda_method': ' msg,msg_header,msg_id,asynckernelclient,history,', 'lsi_word': ' msg,header,test,kernel,client,', 'lsi_method': ' msg,msg_id,msg_header,asynckernelclient,blockingkernelclient,', 'spm_method': ' ', 'text_summary': "Tab complete text in the kernel's namespace.", 'files_count': 5, 'files': ['client.py', 'test_adapter.py', 'session.py', 'test_session.py', 'manager.py'], 'execution_path_count': 25, 'function_id_to_name_file': {'90': 'AsyncKernelClient(client.py)', '169': 'shutdown(client.py)', '534': 'msg(test_adapter.py)', '476': 'msg(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '116': 'BlockingKernelClient(client.py)', '153': 'complete(client.py)', '161': 'history(client.py)', '539': 'test_input_request(test_adapter.py)', '537': 'test_display_data(test_adapter.py)', '543': 'test_kernel_info_reply(test_adapter.py)', '540': 'test_inspect_reply(test_adapter.py)', '542': 'test_inspect_request_token(test_adapter.py)', '541': 'test_inspect_request(test_adapter.py)', '535': 'test_complete_reply(test_adapter.py)', '536': 'test_complete_request(test_adapter.py)', '538': 'test_execute_request(test_adapter.py)', '545': 'test_rename_type(test_adapter.py)', '546': 'test_same_version(test_adapter.py)', '544': 'test_no_adapt(test_adapter.py)', '695': 'test_send_raw(test_session.py)', '694': 'test_send(test_session.py)', '692': 'test_feed_identities(test_session.py)', '696': 'test_serialize(test_session.py)', '693': 'test_msg(test_session.py)', '328': 'interrupt_kernel(manager.py)', '166': 'is_complete(client.py)'}}, {'key': 577, 'parent': 1431, 'tfidf_word': 'EP: 577, Name: AsyncKernelClient &rarr; execute &rarr; msg &rarr; msg &rarr; msg &rarr; msg_header &rarr; msg_id', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 692, 'parent': 1431, 'tfidf_word': 'EP: 692, Name: BlockingKernelClient &rarr; execute &rarr; msg &rarr; msg &rarr; msg &rarr; msg_header &rarr; msg_id', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 672, 'parent': 1433, 'tfidf_word': 'EP: 672, Name: BlockingKernelClient &rarr; kernel_info &rarr; msg &rarr; msg &rarr; msg &rarr; msg_header &rarr; msg_id', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1419, 'parent': 1433, 'tfidf_word': 'header id info async channels client start kernel msg ', 'tfidf_method': 'kernel_info msg msg_header msg_id msg msg start_channels AsyncKernelClient ', 'lda_word': ' msg,kernel,header,start,info,', 'lda_method': ' msg,kernel_info,start_channels,msg_header,msg_id,', 'lsi_word': ' msg,kernel,header,info,async,', 'lsi_method': ' msg,msg_id,msg_header,kernel_info,start_channels,', 'spm_method': '  &#187; kernel_info(client.py) &rarr; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br>', 'text_summary': '', 'files_count': 3, 'files': ['client.py', 'test_adapter.py', 'session.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'170': 'start_channels(client.py)', '167': 'kernel_info(client.py)', '534': 'msg(test_adapter.py)', '520': 'msg(test_adapter.py)', '476': 'msg(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '90': 'AsyncKernelClient(client.py)'}}, {'key': 1429, 'parent': 2017, 'tfidf_word': 'client header id inspect kernel async blocking msg ', 'tfidf_method': 'inspect msg msg_header msg_id msg msg BlockingKernelClient AsyncKernelClient ', 'lda_word': ' msg,kernel,client,inspect,header,', 'lda_method': ' msg,inspect,msg_header,msg_id,blockingkernelclient,', 'lsi_word': ' msg,client,inspect,header,kernel,', 'lsi_method': ' msg,inspect,msg_header,msg_id,asynckernelclient,', 'spm_method': '  &#187; inspect(client.py) &rarr; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br>', 'text_summary': '', 'files_count': 3, 'files': ['client.py', 'test_adapter.py', 'session.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'90': 'AsyncKernelClient(client.py)', '163': 'inspect(client.py)', '534': 'msg(test_adapter.py)', '520': 'msg(test_adapter.py)', '476': 'msg(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '116': 'BlockingKernelClient(client.py)'}}, {'key': 2012, 'parent': 2017, 'tfidf_word': 'interrupt type identity feed execute display data raw version msg ', 'tfidf_method': 'interrupt_kernel test_inspect_reply test_input_request test_execute_request test_serialize test_complete_request test_complete_reply is_complete test_inspect_request_token test_display_data ', 'lda_word': ' msg,header,test,kernel,client,', 'lda_method': ' msg,msg_header,msg_id,asynckernelclient,blockingkernelclient,', 'lsi_word': ' msg,header,test,kernel,client,', 'lsi_method': ' msg,msg_id,msg_header,asynckernelclient,blockingkernelclient,', 'spm_method': '  &#187; AsyncKernelClient(client.py) &rarr; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; comm_info(client.py) &rarr; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; BlockingKernelClient(client.py) &rarr; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; shutdown(client.py) &rarr; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; complete(client.py) &rarr; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; history(client.py) &rarr; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br>', 'text_summary': "Tab complete text in the kernel's namespace. Ask the kernel whether some code is complete and ready to execute.", 'files_count': 5, 'files': ['client.py', 'test_adapter.py', 'session.py', 'test_session.py', 'manager.py'], 'execution_path_count': 27, 'function_id_to_name_file': {'90': 'AsyncKernelClient(client.py)', '152': 'comm_info(client.py)', '534': 'msg(test_adapter.py)', '520': 'msg(test_adapter.py)', '476': 'msg(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '116': 'BlockingKernelClient(client.py)', '169': 'shutdown(client.py)', '153': 'complete(client.py)', '161': 'history(client.py)', '539': 'test_input_request(test_adapter.py)', '537': 'test_display_data(test_adapter.py)', '543': 'test_kernel_info_reply(test_adapter.py)', '540': 'test_inspect_reply(test_adapter.py)', '542': 'test_inspect_request_token(test_adapter.py)', '541': 'test_inspect_request(test_adapter.py)', '535': 'test_complete_reply(test_adapter.py)', '536': 'test_complete_request(test_adapter.py)', '538': 'test_execute_request(test_adapter.py)', '545': 'test_rename_type(test_adapter.py)', '544': 'test_no_adapt(test_adapter.py)', '546': 'test_same_version(test_adapter.py)', '695': 'test_send_raw(test_session.py)', '692': 'test_feed_identities(test_session.py)', '694': 'test_send(test_session.py)', '696': 'test_serialize(test_session.py)', '693': 'test_msg(test_session.py)', '328': 'interrupt_kernel(manager.py)', '166': 'is_complete(client.py)'}}, {'key': 571, 'parent': 1512, 'tfidf_word': 'EP: 571, Name: AsyncKernelClient &rarr; execute &rarr; msg &rarr; msg &rarr; msg_header &rarr; msg_id', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 686, 'parent': 1512, 'tfidf_word': 'EP: 686, Name: BlockingKernelClient &rarr; execute &rarr; msg &rarr; msg &rarr; msg_header &rarr; msg_id', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 666, 'parent': 1516, 'tfidf_word': 'EP: 666, Name: BlockingKernelClient &rarr; kernel_info &rarr; msg &rarr; msg &rarr; msg_header &rarr; msg_id', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1488, 'parent': 1516, 'tfidf_word': 'header id info async channels client start kernel msg ', 'tfidf_method': 'kernel_info msg msg_header msg_id msg start_channels AsyncKernelClient ', 'lda_word': ' msg,start,info,header,channels,', 'lda_method': ' msg,msg_id,msg_header,kernel_info,asynckernelclient,', 'lsi_word': ' msg,kernel,info,header,client,', 'lsi_method': ' msg,msg_header,msg_id,kernel_info,asynckernelclient,', 'spm_method': ' ', 'text_summary': '', 'files_count': 3, 'files': ['client.py', 'test_adapter.py', 'session.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'170': 'start_channels(client.py)', '167': 'kernel_info(client.py)', '520': 'msg(test_adapter.py)', '476': 'msg(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '90': 'AsyncKernelClient(client.py)'}}, {'key': 1508, 'parent': 2255, 'tfidf_word': 'client header id inspect kernel async blocking msg ', 'tfidf_method': 'inspect msg msg_header msg_id msg BlockingKernelClient AsyncKernelClient ', 'lda_word': ' msg,kernel,header,inspect,client,', 'lda_method': ' msg,msg_header,msg_id,inspect,blockingkernelclient,', 'lsi_word': ' msg,header,inspect,client,kernel,', 'lsi_method': ' msg,msg_id,inspect,msg_header,asynckernelclient,', 'spm_method': ' ', 'text_summary': '', 'files_count': 3, 'files': ['client.py', 'test_adapter.py', 'session.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'90': 'AsyncKernelClient(client.py)', '163': 'inspect(client.py)', '520': 'msg(test_adapter.py)', '476': 'msg(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '116': 'BlockingKernelClient(client.py)'}}, {'key': 2251, 'parent': 2255, 'tfidf_word': 'interrupt input type identity found feed display data version msg ', 'tfidf_method': 'test_no_adapt test_input_request test_execute_request test_serialize test_display_data test_complete_request test_complete_reply is_complete test_object_info_reply test_execute_reply ', 'lda_word': ' msg,header,test,kernel,client,', 'lda_method': ' msg,msg_header,msg_id,asynckernelclient,blockingkernelclient,', 'lsi_word': ' msg,header,test,kernel,client,', 'lsi_method': ' msg,msg_id,msg_header,blockingkernelclient,asynckernelclient,', 'spm_method': ' ', 'text_summary': "Tab complete text in the kernel's namespace. Ask the kernel whether some code is complete and ready to execute.", 'files_count': 5, 'files': ['client.py', 'test_adapter.py', 'session.py', 'test_session.py', 'manager.py'], 'execution_path_count': 28, 'function_id_to_name_file': {'90': 'AsyncKernelClient(client.py)', '152': 'comm_info(client.py)', '520': 'msg(test_adapter.py)', '476': 'msg(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '116': 'BlockingKernelClient(client.py)', '169': 'shutdown(client.py)', '153': 'complete(client.py)', '161': 'history(client.py)', '526': 'test_input_request(test_adapter.py)', '523': 'test_display_data(test_adapter.py)', '527': 'test_kernel_info_reply(test_adapter.py)', '530': 'test_object_info_reply_not_found(test_adapter.py)', '529': 'test_object_info_reply(test_adapter.py)', '531': 'test_object_info_request(test_adapter.py)', '521': 'test_complete_reply(test_adapter.py)', '522': 'test_complete_request(test_adapter.py)', '524': 'test_execute_reply(test_adapter.py)', '525': 'test_execute_request(test_adapter.py)', '532': 'test_rename_type(test_adapter.py)', '533': 'test_same_version(test_adapter.py)', '528': 'test_no_adapt(test_adapter.py)', '695': 'test_send_raw(test_session.py)', '694': 'test_send(test_session.py)', '692': 'test_feed_identities(test_session.py)', '696': 'test_serialize(test_session.py)', '693': 'test_msg(test_session.py)', '328': 'interrupt_kernel(manager.py)', '166': 'is_complete(client.py)'}}, {'key': 316, 'parent': 1411, 'tfidf_word': 'EP: 316, Name: restart_kernel &rarr; shutdown_kernel &rarr; request_shutdown &rarr; send &rarr; msg &rarr; msg_header &rarr; msg_id', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 387, 'parent': 1411, 'tfidf_word': 'EP: 387, Name: start_new_async_kernel &rarr; shutdown_kernel &rarr; request_shutdown &rarr; send &rarr; msg &rarr; msg_header &rarr; msg_id', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 310, 'parent': 1473, 'tfidf_word': 'EP: 310, Name: restart_kernel &rarr; shutdown_kernel &rarr; request_shutdown &rarr; msg &rarr; msg_header &rarr; msg_id', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 381, 'parent': 1473, 'tfidf_word': 'EP: 381, Name: start_new_async_kernel &rarr; shutdown_kernel &rarr; request_shutdown &rarr; msg &rarr; msg_header &rarr; msg_id', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1404, 'parent': 2005, 'tfidf_word': 'header id request async new restart start kernel shutdown msg ', 'tfidf_method': 'shutdown_kernel request_shutdown msg msg_header msg_id msg msg start_new_async_kernel restart_kernel ', 'lda_word': ' msg,kernel,shutdown,request,async,', 'lda_method': ' msg,msg_header,msg_id,shutdown_kernel,start_new_async_kernel,', 'lsi_word': ' msg,kernel,shutdown,request,header,', 'lsi_method': ' msg,shutdown_kernel,request_shutdown,msg_id,msg_header,', 'spm_method': '  &#187; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) &rarr; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; request_shutdown(manager.py) &rarr; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br>', 'text_summary': '', 'files_count': 3, 'files': ['manager.py', 'test_adapter.py', 'session.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'330': 'restart_kernel(manager.py)', '331': 'shutdown_kernel(manager.py)', '362': 'request_shutdown(manager.py)', '520': 'msg(test_adapter.py)', '534': 'msg(test_adapter.py)', '476': 'msg(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '322': 'start_new_async_kernel(manager.py)'}}, {'key': 1414, 'parent': 2005, 'tfidf_word': 'header id request async new restart start kernel shutdown msg ', 'tfidf_method': 'shutdown_kernel request_shutdown msg msg_header msg_id msg start_new_async_kernel restart_kernel ', 'lda_word': ' msg,kernel,shutdown,request,header,', 'lda_method': ' msg,shutdown_kernel,request_shutdown,msg_header,msg_id,', 'lsi_word': ' msg,kernel,shutdown,header,request,', 'lsi_method': ' msg,request_shutdown,msg_id,msg_header,shutdown_kernel,', 'spm_method': '  &#187; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br>', 'text_summary': '', 'files_count': 3, 'files': ['manager.py', 'test_adapter.py', 'session.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'330': 'restart_kernel(manager.py)', '331': 'shutdown_kernel(manager.py)', '362': 'request_shutdown(manager.py)', '534': 'msg(test_adapter.py)', '476': 'msg(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '322': 'start_new_async_kernel(manager.py)'}}, {'key': 1405, 'parent': 2007, 'tfidf_word': 'header id request async new restart start kernel shutdown msg ', 'tfidf_method': 'shutdown_kernel request_shutdown msg msg_header msg_id msg msg start_new_async_kernel restart_kernel ', 'lda_word': ' msg,shutdown,kernel,header,request,', 'lda_method': ' msg,msg_id,request_shutdown,shutdown_kernel,msg_header,', 'lsi_word': ' msg,shutdown,kernel,request,header,', 'lsi_method': ' msg,msg_header,shutdown_kernel,request_shutdown,msg_id,', 'spm_method': '  &#187; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) &rarr; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; request_shutdown(manager.py) &rarr; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br>', 'text_summary': '', 'files_count': 3, 'files': ['manager.py', 'test_adapter.py', 'session.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'330': 'restart_kernel(manager.py)', '331': 'shutdown_kernel(manager.py)', '362': 'request_shutdown(manager.py)', '534': 'msg(test_adapter.py)', '520': 'msg(test_adapter.py)', '476': 'msg(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '322': 'start_new_async_kernel(manager.py)'}}, {'key': 1412, 'parent': 2007, 'tfidf_word': 'header id request async new restart start kernel shutdown msg ', 'tfidf_method': 'shutdown_kernel request_shutdown msg msg_header msg_id msg start_new_async_kernel restart_kernel ', 'lda_word': ' msg,shutdown,kernel,header,request,', 'lda_method': ' msg,request_shutdown,msg_id,shutdown_kernel,msg_header,', 'lsi_word': ' msg,kernel,shutdown,header,request,', 'lsi_method': ' msg,shutdown_kernel,request_shutdown,msg_header,msg_id,', 'spm_method': '  &#187; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br>', 'text_summary': '', 'files_count': 3, 'files': ['manager.py', 'test_adapter.py', 'session.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'330': 'restart_kernel(manager.py)', '331': 'shutdown_kernel(manager.py)', '362': 'request_shutdown(manager.py)', '520': 'msg(test_adapter.py)', '476': 'msg(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '322': 'start_new_async_kernel(manager.py)'}}, {'key': 789, 'parent': 1730, 'tfidf_word': 'EP: 789, Name: test_tracking &rarr; send &rarr; msg &rarr; msg_header &rarr; msg_id', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1690, 'parent': 1730, 'tfidf_word': 'header id interrupt kernel test send msg ', 'tfidf_method': 'msg msg_header msg_id send interrupt_kernel test_send ', 'lda_word': ' msg,header,send,kernel,interrupt,', 'lda_method': ' msg_header,msg,msg_id,send,interrupt_kernel,', 'lsi_word': ' msg,send,header,test,interrupt,', 'lsi_method': ' msg,msg_header,msg_id,send,test_send,', 'spm_method': ' ', 'text_summary': '', 'files_count': 3, 'files': ['manager.py', 'session.py', 'test_session.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'328': 'interrupt_kernel(manager.py)', '480': 'send(session.py)', '476': 'msg(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '694': 'test_send(test_session.py)'}}, {'key': 1731, 'parent': 2375, 'tfidf_word': 'header id client kernel execute async blocking msg ', 'tfidf_method': 'execute msg msg_header msg_id BlockingKernelClient execute AsyncKernelClient ', 'lda_word': ' msg,execute,header,client,kernel,', 'lda_method': ' execute,msg,msg_id,msg_header,blockingkernelclient,', 'lsi_word': ' msg,execute,header,kernel,client,', 'lsi_method': ' execute,msg_id,msg,msg_header,blockingkernelclient,', 'spm_method': ' ', 'text_summary': '', 'files_count': 3, 'files': ['utils.py', 'client.py', 'session.py'], 'execution_path_count': 3, 'function_id_to_name_file': {'704': 'execute(utils.py)', '155': 'execute(client.py)', '476': 'msg(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '90': 'AsyncKernelClient(client.py)', '116': 'BlockingKernelClient(client.py)'}}, {'key': 2373, 'parent': 2375, 'tfidf_word': 'msg serialize start identity interrupt feed default channels raw version ', 'tfidf_method': 'inspect is_complete start_channels test_serialize test_default_version test_feed_identities test_msg test_send test_send_raw interrupt_kernel ', 'lda_word': ' header,msg,kernel,client,test,', 'lda_method': ' asynckernelclient,msg,msg_header,msg_id,comm_info,', 'lsi_word': ' msg,header,kernel,client,blocking,', 'lsi_method': ' msg_id,msg_header,msg,blockingkernelclient,asynckernelclient,', 'spm_method': ' ', 'text_summary': "Tab complete text in the kernel's namespace. Request kernel info.", 'files_count': 5, 'files': ['client.py', 'session.py', 'test_adapter.py', 'test_session.py', 'manager.py'], 'execution_path_count': 21, 'function_id_to_name_file': {'116': 'BlockingKernelClient(client.py)', '167': 'kernel_info(client.py)', '476': 'msg(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '170': 'start_channels(client.py)', '90': 'AsyncKernelClient(client.py)', '163': 'inspect(client.py)', '152': 'comm_info(client.py)', '169': 'shutdown(client.py)', '153': 'complete(client.py)', '161': 'history(client.py)', '516': 'test_default_version(test_adapter.py)', '695': 'test_send_raw(test_session.py)', '692': 'test_feed_identities(test_session.py)', '694': 'test_send(test_session.py)', '693': 'test_msg(test_session.py)', '696': 'test_serialize(test_session.py)', '328': 'interrupt_kernel(manager.py)', '166': 'is_complete(client.py)'}}, {'key': 471, 'parent': 1489, 'tfidf_word': 'EP: 471, Name: start_channels &rarr; kernel_info &rarr; msg &rarr; msg &rarr; msg &rarr; extract_header', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 551, 'parent': 1489, 'tfidf_word': 'EP: 551, Name: AsyncKernelClient &rarr; kernel_info &rarr; msg &rarr; msg &rarr; msg &rarr; extract_header', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 895, 'parent': 1561, 'tfidf_word': 'EP: 895, Name: execute &rarr; execute &rarr; msg &rarr; msg &rarr; msg &rarr; extract_header', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1513, 'parent': 1561, 'tfidf_word': 'client execute extract header kernel async blocking msg ', 'tfidf_method': 'execute extract_header msg msg msg BlockingKernelClient AsyncKernelClient ', 'lda_word': ' msg,execute,kernel,client,header,', 'lda_method': ' msg,execute,extract_header,blockingkernelclient,asynckernelclient,', 'lsi_word': ' msg,header,execute,extract,kernel,', 'lsi_method': ' msg,execute,extract_header,blockingkernelclient,asynckernelclient,', 'spm_method': ' ', 'text_summary': '', 'files_count': 3, 'files': ['client.py', 'test_adapter.py', 'session.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'90': 'AsyncKernelClient(client.py)', '155': 'execute(client.py)', '520': 'msg(test_adapter.py)', '534': 'msg(test_adapter.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '116': 'BlockingKernelClient(client.py)'}}, {'key': 1509, 'parent': 2254, 'tfidf_word': 'client extract header inspect kernel async blocking msg ', 'tfidf_method': 'inspect extract_header msg msg msg BlockingKernelClient AsyncKernelClient ', 'lda_word': ' msg,inspect,extract,async,header,', 'lda_method': ' msg,extract_header,inspect,blockingkernelclient,asynckernelclient,', 'lsi_word': ' msg,client,inspect,extract,header,', 'lsi_method': ' msg,inspect,extract_header,blockingkernelclient,asynckernelclient,', 'spm_method': ' ', 'text_summary': '', 'files_count': 3, 'files': ['client.py', 'test_adapter.py', 'session.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'90': 'AsyncKernelClient(client.py)', '163': 'inspect(client.py)', '520': 'msg(test_adapter.py)', '534': 'msg(test_adapter.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '116': 'BlockingKernelClient(client.py)'}}, {'key': 2250, 'parent': 2254, 'tfidf_word': 'adapt input type identity found feed display data interrupt version ', 'tfidf_method': 'test_kernel_info_reply test_input_request test_serialize test_execute_reply test_display_data test_complete_request test_complete_reply is_complete test_object_info_reply test_execute_request ', 'lda_word': ' msg,identity,feed,test,extract,', 'lda_method': ' msg,extract_header,blockingkernelclient,asynckernelclient,shutdown,', 'lsi_word': ' msg,header,extract,test,kernel,', 'lsi_method': ' msg,extract_header,asynckernelclient,blockingkernelclient,comm_info,', 'spm_method': ' ', 'text_summary': "Tab complete text in the kernel's namespace. Given a message or header, return the header.", 'files_count': 5, 'files': ['client.py', 'test_adapter.py', 'session.py', 'test_session.py', 'manager.py'], 'execution_path_count': 28, 'function_id_to_name_file': {'90': 'AsyncKernelClient(client.py)', '152': 'comm_info(client.py)', '520': 'msg(test_adapter.py)', '534': 'msg(test_adapter.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '116': 'BlockingKernelClient(client.py)', '169': 'shutdown(client.py)', '153': 'complete(client.py)', '161': 'history(client.py)', '526': 'test_input_request(test_adapter.py)', '523': 'test_display_data(test_adapter.py)', '527': 'test_kernel_info_reply(test_adapter.py)', '530': 'test_object_info_reply_not_found(test_adapter.py)', '529': 'test_object_info_reply(test_adapter.py)', '531': 'test_object_info_request(test_adapter.py)', '521': 'test_complete_reply(test_adapter.py)', '522': 'test_complete_request(test_adapter.py)', '524': 'test_execute_reply(test_adapter.py)', '525': 'test_execute_request(test_adapter.py)', '532': 'test_rename_type(test_adapter.py)', '533': 'test_same_version(test_adapter.py)', '528': 'test_no_adapt(test_adapter.py)', '695': 'test_send_raw(test_session.py)', '694': 'test_send(test_session.py)', '692': 'test_feed_identities(test_session.py)', '696': 'test_serialize(test_session.py)', '693': 'test_msg(test_session.py)', '328': 'interrupt_kernel(manager.py)', '166': 'is_complete(client.py)'}}, {'key': 473, 'parent': 1699, 'tfidf_word': 'EP: 473, Name: start_channels &rarr; kernel_info &rarr; msg &rarr; msg &rarr; extract_header', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 553, 'parent': 1699, 'tfidf_word': 'EP: 553, Name: AsyncKernelClient &rarr; kernel_info &rarr; msg &rarr; msg &rarr; extract_header', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 897, 'parent': 1737, 'tfidf_word': 'EP: 897, Name: execute &rarr; execute &rarr; msg &rarr; msg &rarr; extract_header', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1717, 'parent': 1737, 'tfidf_word': 'client execute extract header kernel async blocking msg ', 'tfidf_method': 'execute extract_header msg msg BlockingKernelClient AsyncKernelClient ', 'lda_word': ' msg,extract,execute,header,client,', 'lda_method': ' msg,execute,extract_header,blockingkernelclient,asynckernelclient,', 'lsi_word': ' msg,header,execute,client,extract,', 'lsi_method': ' msg,execute,extract_header,asynckernelclient,blockingkernelclient,', 'spm_method': ' ', 'text_summary': '', 'files_count': 3, 'files': ['client.py', 'test_adapter.py', 'session.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'90': 'AsyncKernelClient(client.py)', '155': 'execute(client.py)', '534': 'msg(test_adapter.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '116': 'BlockingKernelClient(client.py)'}}, {'key': 1714, 'parent': 2315, 'tfidf_word': 'client extract header inspect kernel async blocking msg ', 'tfidf_method': 'inspect extract_header msg msg BlockingKernelClient AsyncKernelClient ', 'lda_word': ' msg,inspect,header,kernel,client,', 'lda_method': ' msg,inspect,extract_header,blockingkernelclient,asynckernelclient,', 'lsi_word': ' msg,extract,client,header,inspect,', 'lsi_method': ' msg,inspect,extract_header,asynckernelclient,blockingkernelclient,', 'spm_method': ' ', 'text_summary': '', 'files_count': 3, 'files': ['client.py', 'test_adapter.py', 'session.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'90': 'AsyncKernelClient(client.py)', '163': 'inspect(client.py)', '534': 'msg(test_adapter.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '116': 'BlockingKernelClient(client.py)'}}, {'key': 2313, 'parent': 2315, 'tfidf_word': 'input interrupt type identity feed execute display data raw version ', 'tfidf_method': 'is_complete test_inspect_reply test_input_request test_serialize test_display_data test_complete_request test_complete_reply interrupt_kernel test_inspect_request_token test_execute_request ', 'lda_word': ' msg,header,extract,test,kernel,', 'lda_method': ' extract_header,msg,asynckernelclient,blockingkernelclient,shutdown,', 'lsi_word': ' msg,header,extract,test,kernel,', 'lsi_method': ' msg,extract_header,blockingkernelclient,asynckernelclient,history,', 'spm_method': ' ', 'text_summary': 'Given a message or header, return the header.', 'files_count': 5, 'files': ['client.py', 'test_adapter.py', 'session.py', 'test_session.py', 'manager.py'], 'execution_path_count': 27, 'function_id_to_name_file': {'90': 'AsyncKernelClient(client.py)', '152': 'comm_info(client.py)', '534': 'msg(test_adapter.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '116': 'BlockingKernelClient(client.py)', '169': 'shutdown(client.py)', '153': 'complete(client.py)', '161': 'history(client.py)', '536': 'test_complete_request(test_adapter.py)', '538': 'test_execute_request(test_adapter.py)', '545': 'test_rename_type(test_adapter.py)', '544': 'test_no_adapt(test_adapter.py)', '546': 'test_same_version(test_adapter.py)', '695': 'test_send_raw(test_session.py)', '692': 'test_feed_identities(test_session.py)', '694': 'test_send(test_session.py)', '693': 'test_msg(test_session.py)', '696': 'test_serialize(test_session.py)', '328': 'interrupt_kernel(manager.py)', '166': 'is_complete(client.py)', '539': 'test_input_request(test_adapter.py)', '537': 'test_display_data(test_adapter.py)', '543': 'test_kernel_info_reply(test_adapter.py)', '542': 'test_inspect_request_token(test_adapter.py)', '540': 'test_inspect_reply(test_adapter.py)', '535': 'test_complete_reply(test_adapter.py)', '541': 'test_inspect_request(test_adapter.py)'}}, {'key': 788, 'parent': 1844, 'tfidf_word': 'EP: 788, Name: test_tracking &rarr; send &rarr; msg &rarr; extract_header', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1389, 'parent': 1844, 'tfidf_word': 'EP: 1389, Name: handle &rarr; send &rarr; msg &rarr; extract_header', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 355, 'parent': 1889, 'tfidf_word': 'EP: 355, Name: interrupt_kernel &rarr; send &rarr; msg &rarr; extract_header', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 774, 'parent': 1889, 'tfidf_word': 'EP: 774, Name: test_send &rarr; send &rarr; msg &rarr; extract_header', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 663, 'parent': 1915, 'tfidf_word': 'EP: 663, Name: BlockingKernelClient &rarr; kernel_info &rarr; msg &rarr; extract_header', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1897, 'parent': 1915, 'tfidf_word': 'extract header info msg async channels client start kernel ', 'tfidf_method': 'kernel_info extract_header msg start_channels AsyncKernelClient ', 'lda_word': ' extract,info,kernel,header,msg,', 'lda_method': ' extract_header,kernel_info,msg,start_channels,asynckernelclient,', 'lsi_word': ' kernel,header,extract,msg,info,', 'lsi_method': ' extract_header,kernel_info,msg,asynckernelclient,start_channels,', 'spm_method': ' ', 'text_summary': '', 'files_count': 2, 'files': ['client.py', 'session.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'170': 'start_channels(client.py)', '167': 'kernel_info(client.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '90': 'AsyncKernelClient(client.py)'}}, {'key': 1929, 'parent': 2663, 'tfidf_word': 'extract header msg client kernel execute async blocking ', 'tfidf_method': 'execute extract_header msg BlockingKernelClient execute AsyncKernelClient ', 'lda_word': ' extract,execute,async,msg,header,', 'lda_method': ' extract_header,msg,asynckernelclient,execute,blockingkernelclient,', 'lsi_word': ' execute,extract,msg,header,kernel,', 'lsi_method': ' execute,msg,extract_header,blockingkernelclient,asynckernelclient,', 'spm_method': ' ', 'text_summary': '', 'files_count': 3, 'files': ['utils.py', 'client.py', 'session.py'], 'execution_path_count': 3, 'function_id_to_name_file': {'704': 'execute(utils.py)', '155': 'execute(client.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '90': 'AsyncKernelClient(client.py)', '116': 'BlockingKernelClient(client.py)'}}, {'key': 2400, 'parent': 2663, 'tfidf_word': 'info inspect send serialize identity interrupt feed default raw version ', 'tfidf_method': 'comm_info complete is_complete interrupt_kernel test_serialize test_default_version test_feed_identities test_msg test_send test_send_raw ', 'lda_word': ' msg,header,extract,test,kernel,', 'lda_method': ' msg,extract_header,shutdown,history,blockingkernelclient,', 'lsi_word': ' msg,extract,header,kernel,client,', 'lsi_method': ' extract_header,msg,blockingkernelclient,asynckernelclient,inspect,', 'spm_method': ' ', 'text_summary': "Tab complete text in the kernel's namespace. Get metadata information about an object in the kernel's namespace. Given a message or header, return the header.", 'files_count': 5, 'files': ['client.py', 'session.py', 'test_adapter.py', 'test_session.py', 'manager.py'], 'execution_path_count': 18, 'function_id_to_name_file': {'90': 'AsyncKernelClient(client.py)', '163': 'inspect(client.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '116': 'BlockingKernelClient(client.py)', '152': 'comm_info(client.py)', '169': 'shutdown(client.py)', '153': 'complete(client.py)', '161': 'history(client.py)', '516': 'test_default_version(test_adapter.py)', '695': 'test_send_raw(test_session.py)', '694': 'test_send(test_session.py)', '692': 'test_feed_identities(test_session.py)', '696': 'test_serialize(test_session.py)', '693': 'test_msg(test_session.py)', '328': 'interrupt_kernel(manager.py)', '166': 'is_complete(client.py)'}}, {'key': 671, 'parent': 1519, 'tfidf_word': 'EP: 671, Name: BlockingKernelClient &rarr; kernel_info &rarr; msg &rarr; msg &rarr; msg &rarr; extract_header', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1491, 'parent': 1519, 'tfidf_word': 'extract header info async channels client start kernel msg ', 'tfidf_method': 'kernel_info extract_header msg msg msg start_channels AsyncKernelClient ', 'lda_word': ' msg,extract,info,channels,start,', 'lda_method': ' msg,kernel_info,extract_header,start_channels,asynckernelclient,', 'lsi_word': ' msg,kernel,extract,header,info,', 'lsi_method': ' msg,kernel_info,extract_header,start_channels,asynckernelclient,', 'spm_method': ' ', 'text_summary': '', 'files_count': 3, 'files': ['client.py', 'test_adapter.py', 'session.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'170': 'start_channels(client.py)', '167': 'kernel_info(client.py)', '534': 'msg(test_adapter.py)', '520': 'msg(test_adapter.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '90': 'AsyncKernelClient(client.py)'}}, {'key': 1562, 'parent': 2284, 'tfidf_word': 'extract header client kernel execute async blocking msg ', 'tfidf_method': 'execute extract_header msg msg msg BlockingKernelClient execute AsyncKernelClient ', 'lda_word': ' msg,extract,execute,header,kernel,', 'lda_method': ' msg,execute,extract_header,blockingkernelclient,asynckernelclient,', 'lsi_word': ' msg,execute,extract,header,kernel,', 'lsi_method': ' msg,execute,extract_header,asynckernelclient,blockingkernelclient,', 'spm_method': ' ', 'text_summary': '', 'files_count': 4, 'files': ['utils.py', 'client.py', 'test_adapter.py', 'session.py'], 'execution_path_count': 3, 'function_id_to_name_file': {'704': 'execute(utils.py)', '155': 'execute(client.py)', '534': 'msg(test_adapter.py)', '520': 'msg(test_adapter.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '90': 'AsyncKernelClient(client.py)', '116': 'BlockingKernelClient(client.py)'}}, {'key': 2253, 'parent': 2284, 'tfidf_word': 'input interrupt type identity feed execute display data raw version ', 'tfidf_method': 'test_inspect_request is_complete test_input_request test_execute_request test_serialize test_complete_request test_complete_reply interrupt_kernel test_inspect_request_token test_display_data ', 'lda_word': ' msg,comm,info,client,kernel,', 'lda_method': ' msg,extract_header,blockingkernelclient,asynckernelclient,history,', 'lsi_word': ' msg,extract,header,test,kernel,', 'lsi_method': ' msg,extract_header,blockingkernelclient,asynckernelclient,comm_info,', 'spm_method': ' ', 'text_summary': "Tab complete text in the kernel's namespace. Get metadata information about an object in the kernel's namespace. message format. Given a message or header, return the header.", 'files_count': 5, 'files': ['client.py', 'test_adapter.py', 'session.py', 'test_session.py', 'manager.py'], 'execution_path_count': 29, 'function_id_to_name_file': {'90': 'AsyncKernelClient(client.py)', '163': 'inspect(client.py)', '534': 'msg(test_adapter.py)', '520': 'msg(test_adapter.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '116': 'BlockingKernelClient(client.py)', '152': 'comm_info(client.py)', '169': 'shutdown(client.py)', '153': 'complete(client.py)', '161': 'history(client.py)', '539': 'test_input_request(test_adapter.py)', '537': 'test_display_data(test_adapter.py)', '543': 'test_kernel_info_reply(test_adapter.py)', '540': 'test_inspect_reply(test_adapter.py)', '542': 'test_inspect_request_token(test_adapter.py)', '541': 'test_inspect_request(test_adapter.py)', '535': 'test_complete_reply(test_adapter.py)', '536': 'test_complete_request(test_adapter.py)', '538': 'test_execute_request(test_adapter.py)', '545': 'test_rename_type(test_adapter.py)', '546': 'test_same_version(test_adapter.py)', '544': 'test_no_adapt(test_adapter.py)', '695': 'test_send_raw(test_session.py)', '694': 'test_send(test_session.py)', '692': 'test_feed_identities(test_session.py)', '696': 'test_serialize(test_session.py)', '693': 'test_msg(test_session.py)', '328': 'interrupt_kernel(manager.py)', '166': 'is_complete(client.py)'}}, {'key': 665, 'parent': 1719, 'tfidf_word': 'EP: 665, Name: BlockingKernelClient &rarr; kernel_info &rarr; msg &rarr; msg &rarr; extract_header', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1698, 'parent': 1719, 'tfidf_word': 'extract header info async channels client start kernel msg ', 'tfidf_method': 'kernel_info extract_header msg msg start_channels AsyncKernelClient ', 'lda_word': ' msg,extract,kernel,header,info,', 'lda_method': ' msg,kernel_info,extract_header,asynckernelclient,start_channels,', 'lsi_word': ' msg,kernel,header,extract,info,', 'lsi_method': ' msg,extract_header,kernel_info,start_channels,asynckernelclient,', 'spm_method': ' ', 'text_summary': '', 'files_count': 3, 'files': ['client.py', 'test_adapter.py', 'session.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'170': 'start_channels(client.py)', '167': 'kernel_info(client.py)', '520': 'msg(test_adapter.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '90': 'AsyncKernelClient(client.py)'}}, {'key': 1736, 'parent': 2377, 'tfidf_word': 'extract header client kernel execute msg async blocking ', 'tfidf_method': 'execute extract_header msg msg BlockingKernelClient execute AsyncKernelClient ', 'lda_word': ' msg,extract,header,client,async,', 'lda_method': ' msg,extract_header,execute,blockingkernelclient,asynckernelclient,', 'lsi_word': ' msg,execute,extract,header,kernel,', 'lsi_method': ' msg,execute,extract_header,blockingkernelclient,asynckernelclient,', 'spm_method': ' ', 'text_summary': '', 'files_count': 4, 'files': ['utils.py', 'client.py', 'test_adapter.py', 'session.py'], 'execution_path_count': 3, 'function_id_to_name_file': {'704': 'execute(utils.py)', '155': 'execute(client.py)', '520': 'msg(test_adapter.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '90': 'AsyncKernelClient(client.py)', '116': 'BlockingKernelClient(client.py)'}}, {'key': 2316, 'parent': 2377, 'tfidf_word': 'adapt input type identity found feed display data interrupt version ', 'tfidf_method': 'test_no_adapt test_input_request test_execute_request test_serialize test_display_data test_complete_request test_complete_reply interrupt_kernel test_object_info_reply test_execute_reply ', 'lda_word': ' execute,reply,msg,test,extract,', 'lda_method': ' msg,extract_header,blockingkernelclient,asynckernelclient,shutdown,', 'lsi_word': ' msg,header,extract,test,kernel,', 'lsi_method': ' msg,extract_header,asynckernelclient,blockingkernelclient,inspect,', 'spm_method': ' ', 'text_summary': "Tab complete text in the kernel's namespace. Get metadata information about an object in the kernel's namespace. Given a message or header, return the header.", 'files_count': 5, 'files': ['client.py', 'test_adapter.py', 'session.py', 'test_session.py', 'manager.py'], 'execution_path_count': 30, 'function_id_to_name_file': {'90': 'AsyncKernelClient(client.py)', '163': 'inspect(client.py)', '520': 'msg(test_adapter.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '116': 'BlockingKernelClient(client.py)', '152': 'comm_info(client.py)', '169': 'shutdown(client.py)', '153': 'complete(client.py)', '161': 'history(client.py)', '524': 'test_execute_reply(test_adapter.py)', '525': 'test_execute_request(test_adapter.py)', '532': 'test_rename_type(test_adapter.py)', '528': 'test_no_adapt(test_adapter.py)', '533': 'test_same_version(test_adapter.py)', '695': 'test_send_raw(test_session.py)', '692': 'test_feed_identities(test_session.py)', '694': 'test_send(test_session.py)', '693': 'test_msg(test_session.py)', '696': 'test_serialize(test_session.py)', '328': 'interrupt_kernel(manager.py)', '166': 'is_complete(client.py)', '526': 'test_input_request(test_adapter.py)', '523': 'test_display_data(test_adapter.py)', '527': 'test_kernel_info_reply(test_adapter.py)', '530': 'test_object_info_reply_not_found(test_adapter.py)', '531': 'test_object_info_request(test_adapter.py)', '529': 'test_object_info_reply(test_adapter.py)', '522': 'test_complete_request(test_adapter.py)', '521': 'test_complete_reply(test_adapter.py)'}}, {'key': 1560, 'parent': 1790, 'tfidf_word': 'execute header id poll request restart send kernel shutdown msg ', 'tfidf_method': 'poll request_shutdown restart_kernel shutdown_kernel msg msg_header msg_id do_execute send ', 'lda_word': ' msg,kernel,shutdown,restart,request,', 'lda_method': ' request_shutdown,restart_kernel,poll,do_execute,msg,', 'lsi_word': ' msg,shutdown,kernel,poll,header,', 'lsi_method': ' do_execute,msg_header,request_shutdown,msg,shutdown_kernel,', 'spm_method': '  &#187; do_execute(signalkernel.py) &rarr; poll(restarter.py) &rarr; restart_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; poll(restarter.py) &rarr; restart_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; restart_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br>', 'text_summary': 'Attempts to stop the kernel process cleanly. Restarts a kernel with the arguments that were used to launch it.', 'files_count': 4, 'files': ['signalkernel.py', 'restarter.py', 'manager.py', 'session.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'510': 'do_execute(signalkernel.py)', '236': 'poll(restarter.py)', '363': 'restart_kernel(manager.py)', '364': 'shutdown_kernel(manager.py)', '362': 'request_shutdown(manager.py)', '476': 'msg(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '480': 'send(session.py)'}}, {'key': 1789, 'parent': 1790, 'tfidf_word': 'execute header id poll request restart kernel shutdown msg ', 'tfidf_method': 'poll request_shutdown restart_kernel shutdown_kernel msg msg_header msg_id do_execute msg msg ', 'lda_word': ' msg,kernel,shutdown,request,poll,', 'lda_method': ' msg,msg_id,request_shutdown,poll,msg_header,', 'lsi_word': ' msg,kernel,shutdown,restart,request,', 'lsi_method': ' msg,do_execute,request_shutdown,restart_kernel,msg_id,', 'spm_method': '  &#187; do_execute(signalkernel.py) &rarr; poll(restarter.py) &rarr; restart_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; poll(restarter.py) &rarr; restart_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; restart_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br>', 'text_summary': '', 'files_count': 5, 'files': ['signalkernel.py', 'restarter.py', 'manager.py', 'test_adapter.py', 'session.py'], 'execution_path_count': 4, 'function_id_to_name_file': {'510': 'do_execute(signalkernel.py)', '236': 'poll(restarter.py)', '363': 'restart_kernel(manager.py)', '364': 'shutdown_kernel(manager.py)', '362': 'request_shutdown(manager.py)', '520': 'msg(test_adapter.py)', '476': 'msg(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '534': 'msg(test_adapter.py)'}}, {'key': 1978, 'parent': 2359, 'tfidf_word': 'execute extract header poll request restart kernel shutdown send msg ', 'tfidf_method': 'poll request_shutdown restart_kernel shutdown_kernel extract_header msg do_execute msg msg send ', 'lda_word': ' shutdown,msg,extract,header,kernel,', 'lda_method': ' msg,extract_header,restart_kernel,request_shutdown,do_execute,', 'lsi_word': ' msg,kernel,shutdown,header,restart,', 'lsi_method': ' msg,extract_header,shutdown_kernel,poll,do_execute,', 'spm_method': '  &#187; do_execute(signalkernel.py) &rarr; poll(restarter.py) &rarr; restart_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br> &#187; poll(restarter.py) &rarr; restart_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br> &#187; restart_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br>', 'text_summary': 'Attempts to stop the kernel process cleanly. Restarts a kernel with the arguments that were used to launch it. Pass a message to the ZMQ socket to send.', 'files_count': 5, 'files': ['signalkernel.py', 'restarter.py', 'manager.py', 'session.py', 'test_adapter.py'], 'execution_path_count': 6, 'function_id_to_name_file': {'510': 'do_execute(signalkernel.py)', '236': 'poll(restarter.py)', '363': 'restart_kernel(manager.py)', '364': 'shutdown_kernel(manager.py)', '362': 'request_shutdown(manager.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '480': 'send(session.py)', '520': 'msg(test_adapter.py)', '534': 'msg(test_adapter.py)'}}, {'key': 2256, 'parent': 2359, 'tfidf_word': 'send thread sign adapt message control serialize utcnow socket connect ', 'tfidf_method': 'send send adapt sign Message utcnow thread_send _connect_control_socket serialize send ', 'lda_word': ' kernel,shutdown,restart,execute,poll,', 'lda_method': ' serialize,sign,send,request_shutdown,poll,', 'lsi_word': ' shutdown,kernel,execute,restart,request,', 'lsi_method': ' request_shutdown,restart_kernel,poll,shutdown_kernel,do_execute,', 'spm_method': '  &#187; do_execute(signalkernel.py) &rarr; poll(restarter.py) &rarr; restart_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) &rarr; _create_connected_socket(connect.py) &rarr; _make_url(connect.py) . <br> &#187; poll(restarter.py) &rarr; restart_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) &rarr; _create_connected_socket(connect.py) &rarr; _make_url(connect.py) . <br>', 'text_summary': 'Create a zmq Socket and connect it to the kernel. Pass a message to the ZMQ socket to send. Send a shutdown request via control channel.', 'files_count': 8, 'files': ['signalkernel.py', 'restarter.py', 'manager.py', 'session.py', 'adapter.py', 'connect.py', 'threaded.py', 'channels.py'], 'execution_path_count': 8, 'function_id_to_name_file': {'510': 'do_execute(signalkernel.py)', '236': 'poll(restarter.py)', '363': 'restart_kernel(manager.py)', '364': 'shutdown_kernel(manager.py)', '362': 'request_shutdown(manager.py)', '480': 'send(session.py)', '50': 'adapt(adapter.py)', '450': 'utcnow(session.py)', '482': 'serialize(session.py)', '483': 'sign(session.py)', '440': 'Message(session.py)', '338': '_connect_control_socket(manager.py)', '192': '_create_connected_socket(connect.py)', '196': '_make_url(connect.py)', '734': 'send(threaded.py)', '738': 'thread_send(threaded.py)', '88': 'send(channels.py)', '114': 'send(channels.py)'}}, {'key': 1579, 'parent': 2027, 'tfidf_word': 'execute kill launch poll restart signal finish shutdown kernel ', 'tfidf_method': 'poll _kill_kernel _launch_kernel has_kernel restart_kernel shutdown_kernel signal_kernel do_execute finish_shutdown ', 'lda_word': ' kernel,shutdown,kill,signal,execute,', 'lda_method': ' restart_kernel,do_execute,shutdown_kernel,has_kernel,launch_kernel,', 'lsi_word': ' kernel,shutdown,execute,signal,poll,', 'lsi_method': ' restart_kernel,do_execute,kill_kernel,signal_kernel,poll,', 'spm_method': '  &#187; do_execute(signalkernel.py) &rarr; poll(restarter.py) &rarr; restart_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; _kill_kernel(manager.py) &rarr; signal_kernel(manager.py) &rarr; has_kernel(manager.py) &rarr; _launch_kernel(manager.py) . <br> &#187; poll(restarter.py) &rarr; restart_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; _kill_kernel(manager.py) &rarr; signal_kernel(manager.py) &rarr; has_kernel(manager.py) &rarr; _launch_kernel(manager.py) . <br> &#187; restart_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; _kill_kernel(manager.py) &rarr; signal_kernel(manager.py) &rarr; has_kernel(manager.py) &rarr; _launch_kernel(manager.py) . <br>', 'text_summary': "actually launch the kernel. Restarts a kernel with the arguments that were used to launch it. Wait for kernel shutdown, then kill process if it doesn't shutdown.", 'files_count': 3, 'files': ['signalkernel.py', 'restarter.py', 'manager.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'510': 'do_execute(signalkernel.py)', '236': 'poll(restarter.py)', '363': 'restart_kernel(manager.py)', '364': 'shutdown_kernel(manager.py)', '346': '_kill_kernel(manager.py)', '365': 'signal_kernel(manager.py)', '354': 'has_kernel(manager.py)', '347': '_launch_kernel(manager.py)', '352': 'finish_shutdown(manager.py)'}}, {'key': 1985, 'parent': 2027, 'tfidf_word': 'execute launch poll restart finish kill shutdown alive kernel ', 'tfidf_method': 'poll _launch_kernel has_kernel restart_kernel shutdown_kernel do_execute finish_shutdown _kill_kernel is_alive ', 'lda_word': ' kernel,shutdown,execute,poll,restart,', 'lda_method': ' is_alive,finish_shutdown,do_execute,launch_kernel,restart_kernel,', 'lsi_word': ' kernel,shutdown,launch,restart,poll,', 'lsi_method': ' do_execute,restart_kernel,shutdown_kernel,poll,launch_kernel,', 'spm_method': '  &#187; do_execute(signalkernel.py) &rarr; poll(restarter.py) &rarr; restart_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; finish_shutdown(manager.py) &rarr; has_kernel(manager.py) &rarr; _launch_kernel(manager.py) . <br> &#187; poll(restarter.py) &rarr; restart_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; finish_shutdown(manager.py) &rarr; has_kernel(manager.py) &rarr; _launch_kernel(manager.py) . <br>', 'text_summary': "actually launch the kernel. Wait for kernel shutdown, then kill process if it doesn't shutdown.", 'files_count': 3, 'files': ['signalkernel.py', 'restarter.py', 'manager.py'], 'execution_path_count': 4, 'function_id_to_name_file': {'510': 'do_execute(signalkernel.py)', '236': 'poll(restarter.py)', '363': 'restart_kernel(manager.py)', '364': 'shutdown_kernel(manager.py)', '352': 'finish_shutdown(manager.py)', '354': 'has_kernel(manager.py)', '347': '_launch_kernel(manager.py)', '357': 'is_alive(manager.py)', '346': '_kill_kernel(manager.py)'}}, {'key': 1600, 'parent': 2257, 'tfidf_word': 'execute file ipc poll port resource restart shutdown kernel cleanup ', 'tfidf_method': 'cleanup_ipc_files ports poll cleanup_resources restart_kernel shutdown_kernel do_execute cleanup ', 'lda_word': ' cleanup,kernel,execute,poll,port,', 'lda_method': ' cleanup_ipc_files,restart_kernel,do_execute,port,shutdown_kernel,', 'lsi_word': ' cleanup,kernel,poll,file,restart,', 'lsi_method': ' cleanup_ipc_files,cleanup_resources,poll,shutdown_kernel,restart_kernel,', 'spm_method': '  &#187; do_execute(signalkernel.py) &rarr; poll(restarter.py) &rarr; restart_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; cleanup_resources(manager.py) &rarr; cleanup_ipc_files(connect.py) &rarr; ports(connect.py) . <br> &#187; poll(restarter.py) &rarr; restart_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; cleanup_resources(manager.py) &rarr; cleanup_ipc_files(connect.py) &rarr; ports(connect.py) . <br>', 'text_summary': '', 'files_count': 4, 'files': ['signalkernel.py', 'restarter.py', 'manager.py', 'connect.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'510': 'do_execute(signalkernel.py)', '236': 'poll(restarter.py)', '363': 'restart_kernel(manager.py)', '364': 'shutdown_kernel(manager.py)', '350': 'cleanup_resources(manager.py)', '201': 'cleanup_ipc_files(connect.py)', '211': 'ports(connect.py)', '349': 'cleanup(manager.py)'}}, {'key': 1996, 'parent': 2257, 'tfidf_word': 'poll restart shutdown connection file resource kernel restarter stop cleanup ', 'tfidf_method': 'poll restart_kernel shutdown_kernel do_execute cleanup_connection_file cleanup_resources cleanup stop_restarter ', 'lda_word': ' kernel,cleanup,restart,execute,poll,', 'lda_method': ' do_execute,poll,restart_kernel,shutdown_kernel,cleanup_connection_file,', 'lsi_word': ' kernel,cleanup,execute,poll,shutdown,', 'lsi_method': ' poll,shutdown_kernel,restart_kernel,do_execute,cleanup_resources,', 'spm_method': '  &#187; do_execute(signalkernel.py) &rarr; poll(restarter.py) &rarr; restart_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; cleanup_resources(manager.py) &rarr; cleanup_connection_file(connect.py) . <br>', 'text_summary': '', 'files_count': 4, 'files': ['signalkernel.py', 'restarter.py', 'manager.py', 'connect.py'], 'execution_path_count': 3, 'function_id_to_name_file': {'510': 'do_execute(signalkernel.py)', '236': 'poll(restarter.py)', '363': 'restart_kernel(manager.py)', '364': 'shutdown_kernel(manager.py)', '368': 'stop_restarter(manager.py)', '350': 'cleanup_resources(manager.py)', '200': 'cleanup_connection_file(connect.py)', '349': 'cleanup(manager.py)'}}, {'key': 2056, 'parent': 2089, 'tfidf_word': 'execute poll alive callback fire ', 'tfidf_method': 'poll do_execute is_alive is_alive _fire_callbacks ', 'lda_word': ' execute,poll,alive,fire,callback,', 'lda_method': ' do_execute,poll,fire_callbacks,is_alive,', 'lsi_word': ' execute,poll,alive,callback,fire,', 'lsi_method': ' do_execute,poll,is_alive,fire_callbacks,', 'spm_method': ' ', 'text_summary': 'Empty', 'files_count': 4, 'files': ['signalkernel.py', 'restarter.py', 'managerabc.py', 'multikernelmanager.py'], 'execution_path_count': 3, 'function_id_to_name_file': {'510': 'do_execute(signalkernel.py)', '236': 'poll(restarter.py)', '373': 'is_alive(managerabc.py)', '428': '_fire_callbacks(restarter.py)', '412': 'is_alive(multikernelmanager.py)'}}, {'key': 2088, 'parent': 2089, 'tfidf_word': 'execute poll kernel restart alive ', 'tfidf_method': 'poll do_execute is_alive restart_kernel restart_kernel ', 'lda_word': ' restart,execute,kernel,poll,alive,', 'lda_method': ' do_execute,poll,restart_kernel,is_alive,', 'lsi_word': ' execute,poll,kernel,restart,alive,', 'lsi_method': ' do_execute,poll,restart_kernel,is_alive,', 'spm_method': ' ', 'text_summary': '', 'files_count': 5, 'files': ['signalkernel.py', 'restarter.py', 'channelsabc.py', 'multikernelmanager.py', 'managerabc.py'], 'execution_path_count': 3, 'function_id_to_name_file': {'510': 'do_execute(signalkernel.py)', '236': 'poll(restarter.py)', '140': 'is_alive(channelsabc.py)', '419': 'restart_kernel(multikernelmanager.py)', '375': 'restart_kernel(managerabc.py)'}}, {'key': 1280, 'parent': 2214, 'tfidf_word': 'EP: 1280, Name: do_execute &rarr; poll &rarr; is_alive', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2213, 'parent': 2214, 'tfidf_word': 'execute poll alive stop ', 'tfidf_method': 'poll do_execute is_alive stop is_alive ', 'lda_word': ' poll,execute,alive,stop,', 'lda_method': ' do_execute,poll,is_alive,stop,', 'lsi_word': ' execute,poll,alive,stop,', 'lsi_method': ' do_execute,poll,is_alive,stop,', 'spm_method': ' ', 'text_summary': 'Empty', 'files_count': 3, 'files': ['signalkernel.py', 'restarter.py', 'channels.py'], 'execution_path_count': 3, 'function_id_to_name_file': {'510': 'do_execute(signalkernel.py)', '236': 'poll(restarter.py)', '239': 'stop(restarter.py)', '86': 'is_alive(channels.py)', '112': 'is_alive(channels.py)'}}, {'key': 1984, 'parent': 2030, 'tfidf_word': 'port file random record connection write start n spec kernel ', 'tfidf_method': 'pre_start_kernel restart_kernel start_kernel do_execute format_kernel_cmd _record_random_port_names write_connection_file KernelSpec kernel_spec from_ns ', 'lda_word': ' kernel,start,pre,execute,poll,', 'lda_method': ' restart_kernel,start_kernel,pre_start_kernel,poll,do_execute,', 'lsi_word': ' kernel,start,pre,restart,poll,', 'lsi_method': ' poll,restart_kernel,start_kernel,pre_start_kernel,do_execute,', 'spm_method': '  &#187; do_execute(signalkernel.py) &rarr; poll(restarter.py) &rarr; restart_kernel(manager.py) &rarr; start_kernel(manager.py) &rarr; pre_start_kernel(manager.py) &rarr; write_connection_file(connect.py) &rarr; _record_random_port_names(connect.py) . <br> &#187; poll(restarter.py) &rarr; restart_kernel(manager.py) &rarr; start_kernel(manager.py) &rarr; pre_start_kernel(manager.py) &rarr; write_connection_file(connect.py) &rarr; _record_random_port_names(connect.py) . <br>', 'text_summary': 'Write connection info to JSON dict in self.connection_file. Restarts a kernel with the arguments that were used to launch it. {connection_file}) Write connection info to JSON dict in self.connection_file.', 'files_count': 5, 'files': ['signalkernel.py', 'restarter.py', 'manager.py', 'connect.py', 'kernelspec.py'], 'execution_path_count': 4, 'function_id_to_name_file': {'510': 'do_execute(signalkernel.py)', '236': 'poll(restarter.py)', '363': 'restart_kernel(manager.py)', '366': 'start_kernel(manager.py)', '360': 'pre_start_kernel(manager.py)', '212': 'write_connection_file(connect.py)', '197': '_record_random_port_names(connect.py)', '353': 'format_kernel_cmd(manager.py)', '369': 'from_ns(manager.py)', '358': 'kernel_spec(manager.py)', '253': 'KernelSpec(kernelspec.py)'}}, {'key': 1986, 'parent': 2030, 'tfidf_word': 'restart pre ip local start env get launch substitution kernel ', 'tfidf_method': 'poll restart_kernel start_kernel do_execute pre_start_kernel is_local_ip local_ips _get_env_substitutions _launch_kernel ', 'lda_word': ' kernel,start,restart,execute,poll,', 'lda_method': ' do_execute,start_kernel,restart_kernel,poll,pre_start_kernel,', 'lsi_word': ' kernel,start,restart,execute,poll,', 'lsi_method': ' do_execute,start_kernel,poll,restart_kernel,pre_start_kernel,', 'spm_method': ' ', 'text_summary': 'return the IP addresses that point to this machine. Restarts a kernel with the arguments that were used to launch it. does `ip` point to this machine?.', 'files_count': 4, 'files': ['signalkernel.py', 'restarter.py', 'manager.py', 'localinterfaces.py'], 'execution_path_count': 4, 'function_id_to_name_file': {'510': 'do_execute(signalkernel.py)', '236': 'poll(restarter.py)', '363': 'restart_kernel(manager.py)', '366': 'start_kernel(manager.py)', '347': '_launch_kernel(manager.py)', '360': 'pre_start_kernel(manager.py)', '341': '_get_env_substitutions(manager.py)', '314': 'local_ips(localinterfaces.py)', '312': 'is_local_ip(localinterfaces.py)'}}, {'key': 1281, 'parent': 2318, 'tfidf_word': 'EP: 1281, Name: do_execute &rarr; poll &rarr; restart_kernel &rarr; cleanup_random_ports &rarr; cleanup_connection_file', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1888, 'parent': 2318, 'tfidf_word': 'restart control create make restarter url kernel start connect socket ', 'tfidf_method': 'poll post_start_kernel restart_kernel start_kernel do_execute _create_connected_socket _make_url _connect_control_socket start_restarter ', 'lda_word': ' kernel,start,restart,execute,poll,', 'lda_method': ' start_kernel,poll,restart_kernel,do_execute,post_start_kernel,', 'lsi_word': ' kernel,start,connect,socket,post,', 'lsi_method': ' post_start_kernel,restart_kernel,start_kernel,poll,do_execute,', 'spm_method': ' ', 'text_summary': '', 'files_count': 4, 'files': ['signalkernel.py', 'restarter.py', 'manager.py', 'connect.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'510': 'do_execute(signalkernel.py)', '236': 'poll(restarter.py)', '363': 'restart_kernel(manager.py)', '366': 'start_kernel(manager.py)', '359': 'post_start_kernel(manager.py)', '338': '_connect_control_socket(manager.py)', '192': '_create_connected_socket(connect.py)', '196': '_make_url(connect.py)', '367': 'start_restarter(manager.py)'}}, {'key': 1972, 'parent': 2281, 'tfidf_word': 'default execute extract header hook input interactive stdin start msg ', 'tfidf_method': '_stdin_hook_default execute_interactive input start start extract_header msg msg msg ', 'lda_word': ' start,msg,hook,interactive,extract,', 'lda_method': ' start,msg,input,execute_interactive,stdin_hook_default,', 'lsi_word': ' msg,start,default,interactive,header,', 'lsi_method': ' msg,start,execute_interactive,stdin_hook_default,input,', 'spm_method': '  &#187; start(kernelspecapp.py) &rarr; start(runapp.py) &rarr; execute_interactive(client.py) &rarr; _stdin_hook_default(client.py) &rarr; input(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br> &#187; start(runapp.py) &rarr; execute_interactive(client.py) &rarr; _stdin_hook_default(client.py) &rarr; input(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br> &#187; execute_interactive(client.py) &rarr; _stdin_hook_default(client.py) &rarr; input(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br>', 'text_summary': 'Send a string of raw input to the kernel. Execute code in the kernel interactively.', 'files_count': 5, 'files': ['kernelspecapp.py', 'runapp.py', 'client.py', 'test_adapter.py', 'session.py'], 'execution_path_count': 4, 'function_id_to_name_file': {'291': 'start(kernelspecapp.py)', '439': 'start(runapp.py)', '122': 'execute_interactive(client.py)', '121': '_stdin_hook_default(client.py)', '162': 'input(client.py)', '520': 'msg(test_adapter.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '534': 'msg(test_adapter.py)'}}, {'key': 2225, 'parent': 2281, 'tfidf_word': 'execute header hook input interactive stdin id start extract msg ', 'tfidf_method': 'execute_interactive input start start msg msg_header msg_id msg msg extract_header ', 'lda_word': ' extract,start,execute,interactive,hook,', 'lda_method': ' msg,start,stdin_hook_default,input,msg_id,', 'lsi_word': ' msg,start,default,execute,hook,', 'lsi_method': ' msg,start,execute_interactive,input,stdin_hook_default,', 'spm_method': '  &#187; start(kernelspecapp.py) &rarr; start(runapp.py) &rarr; execute_interactive(client.py) &rarr; _stdin_hook_default(client.py) &rarr; input(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; start(runapp.py) &rarr; execute_interactive(client.py) &rarr; _stdin_hook_default(client.py) &rarr; input(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; execute_interactive(client.py) &rarr; _stdin_hook_default(client.py) &rarr; input(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; _stdin_hook_default(client.py) &rarr; input(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br>', 'text_summary': 'Send a string of raw input to the kernel. Start the polling of the kernel.', 'files_count': 5, 'files': ['kernelspecapp.py', 'runapp.py', 'client.py', 'session.py', 'test_adapter.py'], 'execution_path_count': 6, 'function_id_to_name_file': {'291': 'start(kernelspecapp.py)', '439': 'start(runapp.py)', '122': 'execute_interactive(client.py)', '121': '_stdin_hook_default(client.py)', '162': 'input(client.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '520': 'msg(test_adapter.py)', '534': 'msg(test_adapter.py)'}}, {'key': 1678, 'parent': 2302, 'tfidf_word': 'default execute hook interactive msg ready stdin start ', 'tfidf_method': '_stdin_hook_default execute_interactive start start msg_ready msg_ready ', 'lda_word': ' start,default,hook,execute,msg,', 'lda_method': ' start,msg_ready,execute_interactive,stdin_hook_default,', 'lsi_word': ' start,default,stdin,execute,ready,', 'lsi_method': ' start,execute_interactive,msg_ready,stdin_hook_default,', 'spm_method': ' ', 'text_summary': 'Start the polling of the kernel.', 'files_count': 4, 'files': ['kernelspecapp.py', 'runapp.py', 'client.py', 'channels.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'291': 'start(kernelspecapp.py)', '439': 'start(runapp.py)', '122': 'execute_interactive(client.py)', '121': '_stdin_hook_default(client.py)', '113': 'msg_ready(channels.py)', '87': 'msg_ready(channels.py)'}}, {'key': 2298, 'parent': 2302, 'tfidf_word': 'recv default reply control kernel reqrep shell wrap hook output ', 'tfidf_method': 'get_shell_msg is_alive get_msg wrapped _output_hook_kernel reqrep is_alive get_msg get_control_msg is_alive ', 'lda_word': ' start,alive,interactive,execute,msg,', 'lda_method': ' start,execute_interactive,is_alive,recv_reply,recv,', 'lsi_word': ' start,interactive,execute,alive,recv,', 'lsi_method': ' start,execute_interactive,is_alive,get_msg,recv,', 'spm_method': ' ', 'text_summary': 'Output hook when running inside an IPython kernel. Get a message from the shell channel. Execute code in the kernel interactively. Get a message from the control channel. Default hook for redisplaying plain-text output.', 'files_count': 8, 'files': ['kernelspecapp.py', 'runapp.py', 'client.py', 'channels.py', 'managerabc.py', 'multikernelmanager.py', 'channelsabc.py', 'threaded.py'], 'execution_path_count': 13, 'function_id_to_name_file': {'291': 'start(kernelspecapp.py)', '439': 'start(runapp.py)', '122': 'execute_interactive(client.py)', '120': '_recv_reply(client.py)', '156': 'get_control_msg(client.py)', '158': 'get_shell_msg(client.py)', '110': 'get_msg(channels.py)', '108': '_recv(channels.py)', '84': 'get_msg(channels.py)', '82': '_recv(channels.py)', '119': '_output_hook_kernel(client.py)', '118': '_output_hook_default(client.py)', '117': 'reqrep(client.py)', '124': 'wrapped(client.py)', '112': 'is_alive(channels.py)', '373': 'is_alive(managerabc.py)', '412': 'is_alive(multikernelmanager.py)', '140': 'is_alive(channelsabc.py)', '86': 'is_alive(channels.py)', '732': 'is_alive(threaded.py)'}}, {'key': 1973, 'parent': 2282, 'tfidf_word': 'default execute extract header hook input interactive stdin start msg ', 'tfidf_method': 'input start start extract_header msg _stdin_hook_default execute_interactive msg msg ', 'lda_word': ' start,default,header,msg,input,', 'lda_method': ' msg,start,stdin_hook_default,extract_header,input,', 'lsi_word': ' msg,start,execute,hook,stdin,', 'lsi_method': ' msg,start,stdin_hook_default,extract_header,input,', 'spm_method': '  &#187; start(kernelspecapp.py) &rarr; start(runapp.py) &rarr; execute_interactive(client.py) &rarr; _stdin_hook_default(client.py) &rarr; input(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br> &#187; start(runapp.py) &rarr; execute_interactive(client.py) &rarr; _stdin_hook_default(client.py) &rarr; input(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br> &#187; execute_interactive(client.py) &rarr; _stdin_hook_default(client.py) &rarr; input(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br>', 'text_summary': 'Send a string of raw input to the kernel. Start the polling of the kernel.', 'files_count': 5, 'files': ['kernelspecapp.py', 'runapp.py', 'client.py', 'test_adapter.py', 'session.py'], 'execution_path_count': 4, 'function_id_to_name_file': {'291': 'start(kernelspecapp.py)', '439': 'start(runapp.py)', '97': 'execute_interactive(client.py)', '96': '_stdin_hook_default(client.py)', '162': 'input(client.py)', '520': 'msg(test_adapter.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '534': 'msg(test_adapter.py)'}}, {'key': 2226, 'parent': 2282, 'tfidf_word': 'execute header hook input interactive stdin id start extract msg ', 'tfidf_method': 'start start msg _stdin_hook_default execute_interactive msg_header msg_id msg msg extract_header ', 'lda_word': ' msg,start,input,execute,default,', 'lda_method': ' msg,start,input,execute_interactive,msg_id,', 'lsi_word': ' msg,start,execute,interactive,hook,', 'lsi_method': ' msg,start,input,stdin_hook_default,execute_interactive,', 'spm_method': '  &#187; start(kernelspecapp.py) &rarr; start(runapp.py) &rarr; execute_interactive(client.py) &rarr; _stdin_hook_default(client.py) &rarr; input(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; start(runapp.py) &rarr; execute_interactive(client.py) &rarr; _stdin_hook_default(client.py) &rarr; input(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; execute_interactive(client.py) &rarr; _stdin_hook_default(client.py) &rarr; input(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; _stdin_hook_default(client.py) &rarr; input(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br>', 'text_summary': 'Send a string of raw input to the kernel. Start the polling of the kernel.', 'files_count': 5, 'files': ['kernelspecapp.py', 'runapp.py', 'client.py', 'session.py', 'test_adapter.py'], 'execution_path_count': 6, 'function_id_to_name_file': {'291': 'start(kernelspecapp.py)', '439': 'start(runapp.py)', '97': 'execute_interactive(client.py)', '96': '_stdin_hook_default(client.py)', '162': 'input(client.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '520': 'msg(test_adapter.py)', '534': 'msg(test_adapter.py)'}}, {'key': 2224, 'parent': 2670, 'tfidf_word': 'execute interactive reply control shell get msg recv start ', 'tfidf_method': 'start start _recv_reply execute_interactive get_shell_msg _recv get_msg _recv get_msg get_control_msg ', 'lda_word': ' start,get,msg,recv,execute,', 'lda_method': ' start,get_msg,recv,execute_interactive,recv_reply,', 'lsi_word': ' get,recv,start,msg,interactive,', 'lsi_method': ' start,execute_interactive,recv_reply,recv,get_msg,', 'spm_method': '  &#187; start(kernelspecapp.py) &rarr; start(runapp.py) &rarr; execute_interactive(client.py) &rarr; _recv_reply(client.py) &rarr; get_msg(channels.py) &rarr; _recv(channels.py) . <br>', 'text_summary': 'Get a message from the control channel. Start the polling of the kernel. Get a message from the shell channel.', 'files_count': 4, 'files': ['kernelspecapp.py', 'runapp.py', 'client.py', 'channels.py'], 'execution_path_count': 4, 'function_id_to_name_file': {'291': 'start(kernelspecapp.py)', '439': 'start(runapp.py)', '97': 'execute_interactive(client.py)', '95': '_recv_reply(client.py)', '100': 'get_shell_msg(client.py)', '84': 'get_msg(channels.py)', '82': '_recv(channels.py)', '110': 'get_msg(channels.py)', '108': '_recv(channels.py)', '98': 'get_control_msg(client.py)'}}, {'key': 2299, 'parent': 2670, 'tfidf_word': 'msg get ready recv stdin kernel reqrep wrap hook output ', 'tfidf_method': 'get_msg _recv is_alive is_alive is_alive _recv is_alive msg_ready get_msg wrapped ', 'lda_word': ' start,execute,interactive,alive,hook,', 'lda_method': ' start,execute_interactive,is_alive,recv,msg_ready,', 'lsi_word': ' start,interactive,execute,alive,hook,', 'lsi_method': ' start,execute_interactive,is_alive,recv,get_msg,', 'spm_method': ' ', 'text_summary': 'Output hook when running inside an IPython kernel. Start the polling of the kernel. Gets a message if there is one that is ready. Is there a message that has been received?. Default hook for redisplaying plain-text output.', 'files_count': 8, 'files': ['kernelspecapp.py', 'runapp.py', 'client.py', 'channels.py', 'managerabc.py', 'multikernelmanager.py', 'threaded.py', 'channelsabc.py'], 'execution_path_count': 13, 'function_id_to_name_file': {'291': 'start(kernelspecapp.py)', '439': 'start(runapp.py)', '97': 'execute_interactive(client.py)', '96': '_stdin_hook_default(client.py)', '113': 'msg_ready(channels.py)', '87': 'msg_ready(channels.py)', '91': 'reqrep(client.py)', '105': 'wrapped(client.py)', '110': 'get_msg(channels.py)', '108': '_recv(channels.py)', '94': '_output_hook_kernel(client.py)', '93': '_output_hook_default(client.py)', '84': 'get_msg(channels.py)', '82': '_recv(channels.py)', '112': 'is_alive(channels.py)', '373': 'is_alive(managerabc.py)', '412': 'is_alive(multikernelmanager.py)', '86': 'is_alive(channels.py)', '732': 'is_alive(threaded.py)', '140': 'is_alive(channelsabc.py)'}}, {'key': 1937, 'parent': 2344, 'tfidf_word': 'bad check init packer roundtrip test date squash utcnow ', 'tfidf_method': '__init__ _check_packers test_bad_roundtrip squash_dates utcnow ', 'lda_word': ' check,roundtrip,init,packer,date,', 'lda_method': ' test_bad_roundtrip,check_packers,init,squash_dates,utcnow,', 'lsi_word': ' check,roundtrip,test,bad,packer,', 'lsi_method': ' check_packers,init,test_bad_roundtrip,squash_dates,utcnow,', 'spm_method': ' ', 'text_summary': '', 'files_count': 3, 'files': ['test_session.py', 'session.py', 'jsonutil.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'683': 'test_bad_roundtrip(test_session.py)', '457': '__init__(session.py)', '459': '_check_packers(session.py)', '450': 'utcnow(session.py)', '244': 'squash_dates(jsonutil.py)'}}, {'key': 2343, 'parent': 2344, 'tfidf_word': 'args up unpacker unpack pack id default cull set zero ', 'tfidf_method': '__init__ setUp test_args test_bad_pack test_bad_packer test_bad_unpack test_bad_unpacker test_cull_digest_history test_session_id test_zero_digest_history ', 'lda_word': ' init,session,utcnow,packer,test,', 'lda_method': ' init,squash_dates,check_packers,test_bad_packer,test_session_id,', 'lsi_word': ' packer,init,check,test,squash,', 'lsi_method': ' init,check_packers,squash_dates,utcnow,test_bad_packer,', 'spm_method': ' ', 'text_summary': 'check packers for datetime support. squash datetime objects into ISO8601 strings.', 'files_count': 5, 'files': ['test_session.py', 'session.py', 'jsonutil.py', 'consoleapp.py', 'connect.py'], 'execution_path_count': 22, 'function_id_to_name_file': {'685': 'test_bad_unpacker(test_session.py)', '457': '__init__(session.py)', '459': '_check_packers(session.py)', '450': 'utcnow(session.py)', '244': 'squash_dates(jsonutil.py)', '682': 'test_bad_packer(test_session.py)', '684': 'test_bad_unpack(test_session.py)', '681': 'test_bad_pack(test_session.py)', '687': 'test_cull_digest_history(test_session.py)', '700': 'test_zero_digest_history(test_session.py)', '697': 'test_session_id(test_session.py)', '678': 'setUp(test_session.py)', '680': 'test_args(test_session.py)', '215': '__init__(consoleapp.py)', '198': '_session_default(connect.py)'}}, {'key': 2331, 'parent': 2346, 'tfidf_word': 'file load session squash utcnow default kn set up version ', 'tfidf_method': '__init__ _check_packers squash_dates utcnow test_default_version setUp test_load_connection_file_session test_load_connection_file_session_with_kn ', 'lda_word': ' init,test,file,connection,check,', 'lda_method': ' check_packers,init,squash_dates,setup,test_load_connection_file_session,', 'lsi_word': ' packer,init,check,test,session,', 'lsi_method': ' init,check_packers,squash_dates,utcnow,test_default_version,', 'spm_method': ' ', 'text_summary': 'check packers for datetime support.', 'files_count': 4, 'files': ['test_connect.py', 'session.py', 'jsonutil.py', 'test_adapter.py'], 'execution_path_count': 8, 'function_id_to_name_file': {'565': 'test_load_connection_file_session_with_kn(test_connect.py)', '457': '__init__(session.py)', '459': '_check_packers(session.py)', '450': 'utcnow(session.py)', '244': 'squash_dates(jsonutil.py)', '564': 'test_load_connection_file_session(test_connect.py)', '516': 'test_default_version(test_adapter.py)', '519': 'setUp(test_adapter.py)'}}, {'key': 2345, 'parent': 2346, 'tfidf_word': 'check datetimes init packer test date msgpack pickle squash utcnow ', 'tfidf_method': '__init__ _check_packers squash_dates utcnow test_datetimes_msgpack test_datetimes_pickle ', 'lda_word': ' check,packer,test,init,datetimes,', 'lda_method': ' check_packers,init,squash_dates,test_datetimes_msgpack,utcnow,', 'lsi_word': ' test,packer,init,datetimes,check,', 'lsi_method': ' check_packers,init,test_datetimes_pickle,test_datetimes_msgpack,utcnow,', 'spm_method': ' ', 'text_summary': '', 'files_count': 3, 'files': ['test_session.py', 'session.py', 'jsonutil.py'], 'execution_path_count': 4, 'function_id_to_name_file': {'690': 'test_datetimes_pickle(test_session.py)', '457': '__init__(session.py)', '459': '_check_packers(session.py)', '450': 'utcnow(session.py)', '244': 'squash_dates(jsonutil.py)', '689': 'test_datetimes_msgpack(test_session.py)'}}, {'key': 2729, 'parent': 2795, 'tfidf_word': 'cinfo process sequence loop lifecycle shutdown id tcp kernel ipc ', 'tfidf_method': 'test_tcp_cinfo test_tcp_lifecycle_with_kernel_id test_tcp_lifecycle test_start_sequence_tcp_kernels test_start_sequence_ipc_kernels test_shutdown_all test_ipc_lifecycle test_ipc_cinfo test_ipc_cinfo test_tcp_lifecycle_with_kernel_id ', 'lda_word': ' kernel,manager,test,multi,method,', 'lda_method': ' multikernelmanager,wrap,get_ipc_km,kernel_method,asyncmultikernelmanager,', 'lsi_word': ' kernel,tcp,multi,manager,test,', 'lsi_method': ' multikernelmanager,wrap,kernel_method,get_tcp_km,asyncmultikernelmanager,', 'spm_method': '  &#187; test_start_parallel_thread_kernels(test_multikernelmanager.py) &rarr; raw_tcp_lifecycle(test_multikernelmanager.py) &rarr; _get_tcp_km(test_multikernelmanager.py) &rarr; AsyncMultiKernelManager(multikernelmanager.py) &rarr; MultiKernelManager(multikernelmanager.py) &rarr; kernel_method(multikernelmanager.py) &rarr; wrapped(multikernelmanager.py) . <br> &#187; tcp_lifecycle_with_loop(test_multikernelmanager.py) &rarr; raw_tcp_lifecycle(test_multikernelmanager.py) &rarr; _get_tcp_km(test_multikernelmanager.py) &rarr; AsyncMultiKernelManager(multikernelmanager.py) &rarr; MultiKernelManager(multikernelmanager.py) &rarr; kernel_method(multikernelmanager.py) &rarr; wrapped(multikernelmanager.py) . <br> &#187; raw_tcp_lifecycle(test_multikernelmanager.py) &rarr; _get_tcp_km(test_multikernelmanager.py) &rarr; AsyncMultiKernelManager(multikernelmanager.py) &rarr; MultiKernelManager(multikernelmanager.py) &rarr; kernel_method(multikernelmanager.py) &rarr; wrapped(multikernelmanager.py) . <br> &#187; test_start_parallel_process_kernels(test_multikernelmanager.py) &rarr; raw_tcp_lifecycle(test_multikernelmanager.py) &rarr; _get_tcp_km(test_multikernelmanager.py) &rarr; AsyncMultiKernelManager(multikernelmanager.py) &rarr; MultiKernelManager(multikernelmanager.py) &rarr; kernel_method(multikernelmanager.py) &rarr; wrapped(multikernelmanager.py) . <br> &#187; test_start_parallel_thread_kernels(test_multikernelmanager.py) &rarr; test_tcp_lifecycle(test_multikernelmanager.py) &rarr; _get_tcp_km(test_multikernelmanager.py) &rarr; MultiKernelManager(multikernelmanager.py) &rarr; kernel_method(multikernelmanager.py) &rarr; wrapped(multikernelmanager.py) . <br> &#187; tcp_lifecycle_with_loop(test_multikernelmanager.py) &rarr; test_tcp_lifecycle(test_multikernelmanager.py) &rarr; _get_tcp_km(test_multikernelmanager.py) &rarr; MultiKernelManager(multikernelmanager.py) &rarr; kernel_method(multikernelmanager.py) &rarr; wrapped(multikernelmanager.py) . <br> &#187; test_start_parallel_process_kernels(test_multikernelmanager.py) &rarr; test_tcp_lifecycle(test_multikernelmanager.py) &rarr; _get_tcp_km(test_multikernelmanager.py) &rarr; MultiKernelManager(multikernelmanager.py) &rarr; kernel_method(multikernelmanager.py) &rarr; wrapped(multikernelmanager.py) . <br>', 'text_summary': "decorator for proxying MKM.method(kernel_id) to individual KMs by ID    decorator for proxying MKM.method(kernel_id) to individual KMs by ID    decorator for proxying MKM.method(kernel_id) to individual KMs by ID  Ensure that a sequence of kernel startups doesn't break anything.", 'files_count': 2, 'files': ['test_multikernelmanager.py', 'multikernelmanager.py'], 'execution_path_count': 23, 'function_id_to_name_file': {'649': 'test_start_sequence_ipc_kernels(test_multikernelmanager.py)', '638': '_get_ipc_km(test_multikernelmanager.py)', '379': 'AsyncMultiKernelManager(multikernelmanager.py)', '381': 'MultiKernelManager(multikernelmanager.py)', '382': 'kernel_method(multikernelmanager.py)', '425': 'wrapped(multikernelmanager.py)', '645': 'test_ipc_lifecycle(test_multikernelmanager.py)', '644': 'test_ipc_cinfo(test_multikernelmanager.py)', '650': 'test_start_sequence_tcp_kernels(test_multikernelmanager.py)', '639': '_get_tcp_km(test_multikernelmanager.py)', '646': 'test_shutdown_all(test_multikernelmanager.py)', '651': 'test_tcp_cinfo(test_multikernelmanager.py)', '648': 'test_start_parallel_thread_kernels(test_multikernelmanager.py)', '643': 'tcp_lifecycle_with_loop(test_multikernelmanager.py)', '642': 'raw_tcp_lifecycle(test_multikernelmanager.py)', '647': 'test_start_parallel_process_kernels(test_multikernelmanager.py)', '652': 'test_tcp_lifecycle(test_multikernelmanager.py)', '653': 'test_tcp_lifecycle_with_kernel_id(test_multikernelmanager.py)', '664': 'test_start_sequence_ipc_kernels(test_multikernelmanager.py)', '654': '_get_ipc_km(test_multikernelmanager.py)', '660': 'test_ipc_lifecycle(test_multikernelmanager.py)', '659': 'test_ipc_cinfo(test_multikernelmanager.py)', '665': 'test_start_sequence_tcp_kernels(test_multikernelmanager.py)', '655': '_get_tcp_km(test_multikernelmanager.py)', '666': 'test_tcp_cinfo(test_multikernelmanager.py)', '668': 'test_tcp_lifecycle_with_kernel_id(test_multikernelmanager.py)', '661': 'test_shutdown_all(test_multikernelmanager.py)', '663': 'test_start_parallel_thread_kernels(test_multikernelmanager.py)', '658': 'tcp_lifecycle_with_loop(test_multikernelmanager.py)', '667': 'test_tcp_lifecycle(test_multikernelmanager.py)', '662': 'test_start_parallel_process_kernels(test_multikernelmanager.py)'}}, {'key': 2765, 'parent': 2795, 'tfidf_word': 'native list ksm file connection real up kernel tcp ipc ', 'tfidf_method': '_kernel_spec_manager_default _kernel_spec_manager_default start_new_async_kernel _kernel_spec_manager_default setUp MyKSM test_connection_file_real_path test_ipc_cinfo _kernel_spec_manager_default test_tcp_lifecycle_with_kernel_id ', 'lda_word': ' kernel,manager,spec,ipc,multi,', 'lda_method': ' kernelspecmanager,kernelspec,multikernelmanager,get_tcp_km,kernel_spec_manager_default,', 'lsi_word': ' kernel,manager,spec,tcp,multi,', 'lsi_method': ' kernelspec,kernelspecmanager,multikernelmanager,get_tcp_km,asyncmultikernelmanager,', 'spm_method': '  &#187; test_start_parallel_thread_kernels(test_multikernelmanager.py) &rarr; raw_tcp_lifecycle(test_multikernelmanager.py) &rarr; _get_tcp_km(test_multikernelmanager.py) &rarr; AsyncMultiKernelManager(multikernelmanager.py) &rarr; MultiKernelManager(multikernelmanager.py) &rarr; KernelSpecManager(kernelspec.py) &rarr; KernelSpec(kernelspec.py) . <br> &#187; tcp_lifecycle_with_loop(test_multikernelmanager.py) &rarr; raw_tcp_lifecycle(test_multikernelmanager.py) &rarr; _get_tcp_km(test_multikernelmanager.py) &rarr; AsyncMultiKernelManager(multikernelmanager.py) &rarr; MultiKernelManager(multikernelmanager.py) &rarr; KernelSpecManager(kernelspec.py) &rarr; KernelSpec(kernelspec.py) . <br> &#187; raw_tcp_lifecycle(test_multikernelmanager.py) &rarr; _get_tcp_km(test_multikernelmanager.py) &rarr; AsyncMultiKernelManager(multikernelmanager.py) &rarr; MultiKernelManager(multikernelmanager.py) &rarr; KernelSpecManager(kernelspec.py) &rarr; KernelSpec(kernelspec.py) . <br> &#187; test_start_parallel_process_kernels(test_multikernelmanager.py) &rarr; raw_tcp_lifecycle(test_multikernelmanager.py) &rarr; _get_tcp_km(test_multikernelmanager.py) &rarr; AsyncMultiKernelManager(multikernelmanager.py) &rarr; MultiKernelManager(multikernelmanager.py) &rarr; KernelSpecManager(kernelspec.py) &rarr; KernelSpec(kernelspec.py) . <br> &#187; test_start_parallel_thread_kernels(test_multikernelmanager.py) &rarr; test_tcp_lifecycle(test_multikernelmanager.py) &rarr; _get_tcp_km(test_multikernelmanager.py) &rarr; MultiKernelManager(multikernelmanager.py) &rarr; KernelSpecManager(kernelspec.py) &rarr; KernelSpec(kernelspec.py) . <br> &#187; tcp_lifecycle_with_loop(test_multikernelmanager.py) &rarr; test_tcp_lifecycle(test_multikernelmanager.py) &rarr; _get_tcp_km(test_multikernelmanager.py) &rarr; MultiKernelManager(multikernelmanager.py) &rarr; KernelSpecManager(kernelspec.py) &rarr; KernelSpec(kernelspec.py) . <br> &#187; test_start_parallel_process_kernels(test_multikernelmanager.py) &rarr; test_tcp_lifecycle(test_multikernelmanager.py) &rarr; _get_tcp_km(test_multikernelmanager.py) &rarr; MultiKernelManager(multikernelmanager.py) &rarr; KernelSpecManager(kernelspec.py) &rarr; KernelSpec(kernelspec.py) . <br>', 'text_summary': '', 'files_count': 8, 'files': ['manager.py', 'kernelspec.py', 'test_manager.py', 'test_kernelspec.py', 'kernelspecapp.py', 'kernelapp.py', 'test_multikernelmanager.py', 'multikernelmanager.py'], 'execution_path_count': 40, 'function_id_to_name_file': {'322': 'start_new_async_kernel(manager.py)', '319': 'AsyncKernelManager(manager.py)', '320': 'KernelManager(manager.py)', '254': 'KernelSpecManager(kernelspec.py)', '253': 'KernelSpec(kernelspec.py)', '224': 'AsyncIOLoopKernelManager(manager.py)', '225': 'IOLoopKernelManager(manager.py)', '635': 'test_connection_file_real_path(test_manager.py)', '629': 'test_subclass(test_kernelspec.py)', '618': 'setUp(test_kernelspec.py)', '289': '_kernel_spec_manager_default(kernelspecapp.py)', '345': '_kernel_spec_manager_default(manager.py)', '295': '_kernel_spec_manager_default(kernelspecapp.py)', '286': '_kernel_spec_manager_default(kernelspecapp.py)', '245': 'KernelApp(kernelapp.py)', '292': '_kernel_spec_manager_default(kernelspecapp.py)', '631': 'MyKSM(test_kernelspec.py)', '282': 'KernelSpecApp(kernelspecapp.py)', '284': 'RemoveKernelSpec(kernelspecapp.py)', '283': 'ListKernelSpecs(kernelspecapp.py)', '280': 'InstallKernelSpec(kernelspecapp.py)', '281': 'InstallNativeKernelSpec(kernelspecapp.py)', '649': 'test_start_sequence_ipc_kernels(test_multikernelmanager.py)', '638': '_get_ipc_km(test_multikernelmanager.py)', '379': 'AsyncMultiKernelManager(multikernelmanager.py)', '381': 'MultiKernelManager(multikernelmanager.py)', '645': 'test_ipc_lifecycle(test_multikernelmanager.py)', '644': 'test_ipc_cinfo(test_multikernelmanager.py)', '650': 'test_start_sequence_tcp_kernels(test_multikernelmanager.py)', '639': '_get_tcp_km(test_multikernelmanager.py)', '646': 'test_shutdown_all(test_multikernelmanager.py)', '651': 'test_tcp_cinfo(test_multikernelmanager.py)', '648': 'test_start_parallel_thread_kernels(test_multikernelmanager.py)', '643': 'tcp_lifecycle_with_loop(test_multikernelmanager.py)', '642': 'raw_tcp_lifecycle(test_multikernelmanager.py)', '647': 'test_start_parallel_process_kernels(test_multikernelmanager.py)', '652': 'test_tcp_lifecycle(test_multikernelmanager.py)', '653': 'test_tcp_lifecycle_with_kernel_id(test_multikernelmanager.py)', '664': 'test_start_sequence_ipc_kernels(test_multikernelmanager.py)', '654': '_get_ipc_km(test_multikernelmanager.py)', '660': 'test_ipc_lifecycle(test_multikernelmanager.py)', '659': 'test_ipc_cinfo(test_multikernelmanager.py)', '665': 'test_start_sequence_tcp_kernels(test_multikernelmanager.py)', '655': '_get_tcp_km(test_multikernelmanager.py)', '666': 'test_tcp_cinfo(test_multikernelmanager.py)', '668': 'test_tcp_lifecycle_with_kernel_id(test_multikernelmanager.py)', '661': 'test_shutdown_all(test_multikernelmanager.py)', '663': 'test_start_parallel_thread_kernels(test_multikernelmanager.py)', '658': 'tcp_lifecycle_with_loop(test_multikernelmanager.py)', '667': 'test_tcp_lifecycle(test_multikernelmanager.py)', '662': 'test_start_parallel_process_kernels(test_multikernelmanager.py)'}}, {'key': 2771, 'parent': 2799, 'tfidf_word': 'n message send kernel socket connect manager spec cleanup msg ', 'tfidf_method': 'is_alive thread_send _get_env_substitutions start_new_async_kernel local_ips is_local_ip KernelSpecManager ConnectionFileMixin Message send ', 'lda_word': ' kernel,get,new,start,client,', 'lda_method': ' client,get_connection_info,run_kernel,start_new_kernel,start_new_async_kernel,', 'lsi_word': ' kernel,start,shutdown,new,run,', 'lsi_method': ' run_kernel,start_new_kernel,msg,shutdown_kernel,request_shutdown,', 'spm_method': '  &#187; run_kernel(manager.py) &rarr; start_new_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; start_new_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br>', 'text_summary': 'Create a client configured to connect to our kernel. Return the connection info as a dict. Start a new kernel, and return its Manager and Client. Context manager to create a kernel in a subprocess. Given a message or header, return the header. {connection_file})  Context manager to create a kernel in a subprocess. Write connection info to JSON dict in self.connection_file. Create a zmq Socket and connect it to the kernel.', 'files_count': 9, 'files': ['manager.py', 'localinterfaces.py', 'connect.py', 'kernelspec.py', 'session.py', 'test_adapter.py', 'adapter.py', 'threaded.py', 'channels.py'], 'execution_path_count': 45, 'function_id_to_name_file': {'321': 'run_kernel(manager.py)', '323': 'start_new_kernel(manager.py)', '366': 'start_kernel(manager.py)', '360': 'pre_start_kernel(manager.py)', '341': '_get_env_substitutions(manager.py)', '314': 'local_ips(localinterfaces.py)', '312': 'is_local_ip(localinterfaces.py)', '212': 'write_connection_file(connect.py)', '197': '_record_random_port_names(connect.py)', '353': 'format_kernel_cmd(manager.py)', '369': 'from_ns(manager.py)', '358': 'kernel_spec(manager.py)', '253': 'KernelSpec(kernelspec.py)', '347': '_launch_kernel(manager.py)', '359': 'post_start_kernel(manager.py)', '338': '_connect_control_socket(manager.py)', '192': '_create_connected_socket(connect.py)', '196': '_make_url(connect.py)', '367': 'start_restarter(manager.py)', '364': 'shutdown_kernel(manager.py)', '362': 'request_shutdown(manager.py)', '476': 'msg(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '480': 'send(session.py)', '520': 'msg(test_adapter.py)', '534': 'msg(test_adapter.py)', '444': 'extract_header(session.py)', '50': 'adapt(adapter.py)', '450': 'utcnow(session.py)', '482': 'serialize(session.py)', '483': 'sign(session.py)', '440': 'Message(session.py)', '734': 'send(threaded.py)', '738': 'thread_send(threaded.py)', '88': 'send(channels.py)', '114': 'send(channels.py)', '320': 'KernelManager(manager.py)', '254': 'KernelSpecManager(kernelspec.py)', '188': 'ConnectionFileMixin(connect.py)', '322': 'start_new_async_kernel(manager.py)', '351': 'client(manager.py)', '208': 'get_connection_info(connect.py)', '346': '_kill_kernel(manager.py)', '365': 'signal_kernel(manager.py)', '354': 'has_kernel(manager.py)', '352': 'finish_shutdown(manager.py)', '357': 'is_alive(manager.py)', '350': 'cleanup_resources(manager.py)', '201': 'cleanup_ipc_files(connect.py)', '211': 'ports(connect.py)', '349': 'cleanup(manager.py)', '368': 'stop_restarter(manager.py)', '200': 'cleanup_connection_file(connect.py)'}}, {'key': 2798, 'parent': 2799, 'tfidf_word': 'date digest flush native permission msg restarter code tunnel ip ', 'tfidf_method': 'restart_kernel interrupt_kernel finish_shutdown test_object_info_reply interrupt_kernel _try_passwordless_openssh test_no_adapt signal_kernel _key_changed _key_default ', 'lda_word': ' connection,file,test,load,init,', 'lda_method': ' shutdown_kernel,start,is_alive,launch_kernel,restart_kernel,', 'lsi_word': ' kernel,start,shutdown,spec,msg,', 'lsi_method': ' msg,extract_header,initialize,msg_header,msg_id,', 'spm_method': '  &#187; initialize(test_connect.py) &rarr; init_connection_file(consoleapp.py) &rarr; load_connection_file(connect.py) &rarr; load_connection_info(connect.py) &rarr; _ip_default(connect.py) &rarr; localhost(localinterfaces.py) . <br> &#187; initialize(runapp.py) &rarr; handle_sigint(runapp.py) &rarr; interrupt_kernel(manager.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; start_new_async_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; finish_shutdown(manager.py) &rarr; _async_wait(manager.py) &rarr; is_alive(manager.py) &rarr; has_kernel(manager.py) &rarr; _launch_kernel(manager.py) . <br> &#187; run_kernel(manager.py) &rarr; start_new_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; cleanup_resources(manager.py) &rarr; _close_control_socket(manager.py) &rarr; _create_connected_socket(connect.py) &rarr; _make_url(connect.py) . <br> &#187; start_new_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; cleanup_resources(manager.py) &rarr; _close_control_socket(manager.py) &rarr; _create_connected_socket(connect.py) &rarr; _make_url(connect.py) . <br> &#187; restart_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; finish_shutdown(manager.py) &rarr; _async_wait(manager.py) &rarr; is_alive(manager.py) &rarr; has_kernel(manager.py) &rarr; _launch_kernel(manager.py) . <br> &#187; tunnel_to_kernel(connect.py) &rarr; try_passwordless_ssh(tunnel.py) &rarr; _try_passwordless_paramiko(tunnel.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; do_execute(signalkernel.py) &rarr; poll(restarter.py) &rarr; restart_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; cleanup_resources(manager.py) &rarr; _close_control_socket(manager.py) &rarr; _create_connected_socket(connect.py) &rarr; _make_url(connect.py) . <br> &#187; start(kernelspecapp.py) &rarr; start(kernelspecapp.py) &rarr; input(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; handle_sigint(runapp.py) &rarr; interrupt_kernel(manager.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; tunnel_connection(tunnel.py) &rarr; open_tunnel(tunnel.py) &rarr; paramiko_tunnel(tunnel.py) &rarr; _try_passwordless_paramiko(tunnel.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; open_tunnel(tunnel.py) &rarr; paramiko_tunnel(tunnel.py) &rarr; _try_passwordless_paramiko(tunnel.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; paramiko_tunnel(tunnel.py) &rarr; _try_passwordless_paramiko(tunnel.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; _try_passwordless_paramiko(tunnel.py) &rarr; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; init_kernel_info(runapp.py) &rarr; kernel_info(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; start(kernelspecapp.py) &rarr; input(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; try_passwordless_ssh(tunnel.py) &rarr; _try_passwordless_paramiko(tunnel.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; shutdown_kernel(manager.py) &rarr; finish_shutdown(manager.py) &rarr; _kill_kernel(manager.py) &rarr; _async_wait(manager.py) &rarr; is_alive(manager.py) &rarr; has_kernel(manager.py) &rarr; _launch_kernel(manager.py) . <br> &#187; poll(restarter.py) &rarr; restart_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; cleanup_resources(manager.py) &rarr; _close_control_socket(manager.py) &rarr; _create_connected_socket(connect.py) &rarr; _make_url(connect.py) . <br> &#187; restart_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; cleanup_resources(manager.py) &rarr; _close_control_socket(manager.py) &rarr; _create_connected_socket(connect.py) &rarr; _make_url(connect.py) . <br> &#187; shutdown_kernel(manager.py) &rarr; cleanup(manager.py) &rarr; cleanup_resources(manager.py) &rarr; _close_control_socket(manager.py) &rarr; _create_connected_socket(connect.py) &rarr; _make_url(connect.py) . <br> &#187; finish_shutdown(manager.py) &rarr; _kill_kernel(manager.py) &rarr; _async_wait(manager.py) &rarr; is_alive(manager.py) &rarr; has_kernel(manager.py) &rarr; _launch_kernel(manager.py) . <br>', 'text_summary': "Subclasses may override  Prepares a kernel for startup in a separate process. return ip for localhost (almost always 127.0.0.1) test `ipython console --existing` loads a connection file. Prepares a kernel for startup in a separate process. Create a client configured to connect to our kernel. return ip for localhost (almost always 127.0.0.1)   Ensure that a sequence of kernel startups doesn't break anything. {connection_file}) Get the key out of ns if it's there, otherwise no change. return zmq Socket connected to the IOPub channel. Sends a signal to the process group of the kernel (this. return ip for localhost (almost always 127.0.0.1)   set up ssh tunnels, if needed. Start a new kernel, and return its Manager and Client. Pass a message to the ZMQ socket to send. Install a kernel spec by copying its directory. Send a string of raw input to the kernel. Return the connection info as a dict. Subclasses may override Start the polling of the kernel. load ip addresses with socket.gethostbyname_ex uniq_stable(elems) -> list. return ip for localhost (almost always 127.0.0.1) test load_connection_file() after. Launches a localhost kernel, binding to the specified ports. test `ipython console --existing` loads a connection file. Cleanup connection file *if we wrote it*. find a connection file, and return its absolute path. return ip for localhost (almost always 127.0.0.1)      find a connection file, and return its absolute path. tunnel connections to a kernel via ssh. For tests, create a file to indicate that we've started. Connect a socket to an address via an ssh tunnel. Returns a dict mapping kernel names to kernelspecs. handle kernel info reply. Given a message or header, return the header. Get all messages that are currently ready. Returns the id to associate with the kernel for this request. Send a raw message via ident path. {connection_file})   Prepares a kernel for startup in a separate process. Get the hb channel object for this kernel. {connection_file})  Restarts a kernel with the arguments that were used to launch it. Kill the running kernel. Make a blocking client connected to my kernel. populate local and public IPs from flat list of all IPs. return the IP addresses that point to this machine. return ip for localhost (almost always 127.0.0.1)       return ip for localhost (almost always 127.0.0.1)   find the connection file, and load the info if found. Load connection info from JSON dict in self.connection_file. return ip for localhost (almost always 127.0.0.1)  Write connection info to JSON dict in self.connection_file. Immediately processes all pending messages on this channel. Return the number of running kernels. Verify realpath is used when formatting connection file. return zmq Socket connected to the Shell channel. Unserialize a msg_list to a nested message dict. Request kernel info. {connection_file}) Write connection info to JSON dict in self.connection_file. Get a message from the shell channel. Create an ssh tunnel using command-line ssh that connects port lport. populate local and public IPs from flat list of all IPs. return the IP addresses for this machine that are visible to other machines. This is run in the ioloop thread when the kernel info reply is received. return zmq Socket connected to the StdIn channel. return the IP addresses that point to this machine. return zmq Socket connected to the Heartbeat channel. return ip for localhost (almost always 127.0.0.1)   find the connection file, and load the info if found. find the connection file, and load the info if found. Return a mapping of kernel names to resource directories from dir. Find the resource directory of a named kernel spec. populate local and public IPs from flat list of all IPs. decorator to ensure load_ips has been run before f. Returns a :class:`KernelSpec` instance for a given kernel_name. Context manager to create a kernel in a subprocess. return zmq Socket connected to the Control channel. test load_connection_file() after. Write connection info to JSON dict in self.connection_file. Create a zmq Socket and connect it to the kernel. Forgets randomly assigned port numbers and cleans up the connection file.", 'files_count': 36, 'files': ['localinterfaces.py', 'test_localinterfaces.py', 'test_connect.py', 'session.py', 'test_adapter.py', 'test_session.py', 'consoleapp.py', 'connect.py', 'runapp.py', 'kernelspec.py', 'manager.py', 'test_kernelspec.py', 'jsonutil.py', 'forward.py', 'test_jsonutil.py', 'test_manager.py', 'test_client.py', 'adapter.py', 'channels.py', 'threaded.py', 'test_multikernelmanager.py', 'multikernelmanager.py', 'tunnel.py', 'test_ssh.py', 'client.py', 'managerabc.py', 'channelsabc.py', 'test_kernelmanager.py', 'utils.py', 'restarter.py', 'signalkernel.py', 'kernelspecapp.py', 'kernelapp.py', 'test_kernelapp.py', 'win_interrupt.py', 'launcher.py'], 'execution_path_count': 803, 'function_id_to_name_file': {'310': '_requires_ips(localinterfaces.py)', '318': 'ips_loaded(localinterfaces.py)', '301': '_load_ips(localinterfaces.py)', '306': '_load_ips_ipconfig(localinterfaces.py)', '300': '_get_output(localinterfaces.py)', '309': '_populate_from_list(localinterfaces.py)', '299': 'NoIPAddresses(localinterfaces.py)', '316': 'public_ips(localinterfaces.py)', '314': 'local_ips(localinterfaces.py)', '311': '_uniq_stable(localinterfaces.py)', '304': '_load_ips_ifconfig(localinterfaces.py)', '305': '_load_ips_ip(localinterfaces.py)', '307': '_load_ips_netifaces(localinterfaces.py)', '302': '_load_ips_dumb(localinterfaces.py)', '634': 'test_load_ips(test_localinterfaces.py)', '303': '_load_ips_gethostbyname(localinterfaces.py)', '565': 'test_load_connection_file_session_with_kn(test_connect.py)', '457': '__init__(session.py)', '465': '_new_auth(session.py)', '564': 'test_load_connection_file_session(test_connect.py)', '519': 'setUp(test_adapter.py)', '516': 'test_default_version(test_adapter.py)', '689': 'test_datetimes_msgpack(test_session.py)', '690': 'test_datetimes_pickle(test_session.py)', '683': 'test_bad_roundtrip(test_session.py)', '685': 'test_bad_unpacker(test_session.py)', '682': 'test_bad_packer(test_session.py)', '681': 'test_bad_pack(test_session.py)', '684': 'test_bad_unpack(test_session.py)', '687': 'test_cull_digest_history(test_session.py)', '697': 'test_session_id(test_session.py)', '700': 'test_zero_digest_history(test_session.py)', '680': 'test_args(test_session.py)', '678': 'setUp(test_session.py)', '215': '__init__(consoleapp.py)', '198': '_session_default(connect.py)', '560': 'test_find_connection_file(test_connect.py)', '572': 'initialize(test_connect.py)', '219': 'init_connection_file(consoleapp.py)', '209': 'load_connection_file(connect.py)', '210': 'load_connection_info(connect.py)', '195': '_ip_default(connect.py)', '315': 'localhost(localinterfaces.py)', '559': 'test_app_load_connection_file(test_connect.py)', '197': '_record_random_port_names(connect.py)', '437': 'initialize(runapp.py)', '223': 'initialize(consoleapp.py)', '222': 'init_ssh(consoleapp.py)', '212': 'write_connection_file(connect.py)', '220': 'init_kernel_client(consoleapp.py)', '221': 'init_kernel_manager(consoleapp.py)', '255': 'NoSuchKernel(kernelspec.py)', '322': 'start_new_async_kernel(manager.py)', '351': 'client(manager.py)', '321': 'run_kernel(manager.py)', '323': 'start_new_kernel(manager.py)', '568': 'test_mixin_record_random_ports(test_connect.py)', '567': 'test_mixin_cleanup_random_ports(test_connect.py)', '621': 'test_find_all_specs(test_kernelspec.py)', '273': 'get_all_specs(kernelspec.py)', '272': 'find_kernel_specs(kernelspec.py)', '258': '_list_kernels_in(kernelspec.py)', '257': '_is_valid_kernel_name(kernelspec.py)', '256': '_is_kernel_dir(kernelspec.py)', '629': 'test_subclass(test_kernelspec.py)', '627': 'test_remove_kernel_spec(test_kernelspec.py)', '277': 'remove_kernel_spec(kernelspec.py)', '625': 'test_install_kernel_spec_prefix(test_kernelspec.py)', '626': 'test_kernel_spec_priority(test_kernelspec.py)', '624': 'test_install_kernel_spec(test_kernelspec.py)', '259': 'find_kernel_specs(kernelspec.py)', '622': 'test_find_kernel_specs(test_kernelspec.py)', '694': 'test_send(test_session.py)', '479': 'recv(session.py)', '474': 'deserialize(session.py)', '242': 'extract_dates(jsonutil.py)', '243': 'parse_date(jsonutil.py)', '240': '_ensure_tzinfo(jsonutil.py)', '492': 'handle(forward.py)', '695': 'test_send_raw(test_session.py)', '484': 'unserialize(session.py)', '696': 'test_serialize(test_session.py)', '578': 'test_parse_ms_precision(test_jsonutil.py)', '679': '_datetime_test(test_session.py)', '688': 'test_datetimes(test_session.py)', '575': 'test_date_default(test_jsonutil.py)', '576': 'test_extract_date_from_naive(test_jsonutil.py)', '577': 'test_extract_dates(test_jsonutil.py)', '330': 'restart_kernel(manager.py)', '333': 'start_kernel(manager.py)', '326': '_launch_kernel(manager.py)', '359': 'post_start_kernel(manager.py)', '338': '_connect_control_socket(manager.py)', '192': '_create_connected_socket(connect.py)', '196': '_make_url(connect.py)', '367': 'start_restarter(manager.py)', '635': 'test_connection_file_real_path(test_manager.py)', '353': 'format_kernel_cmd(manager.py)', '358': 'kernel_spec(manager.py)', '253': 'KernelSpec(kernelspec.py)', '360': 'pre_start_kernel(manager.py)', '369': 'from_ns(manager.py)', '341': '_get_env_substitutions(manager.py)', '312': 'is_local_ip(localinterfaces.py)', '623': 'test_get_kernel_spec(test_kernelspec.py)', '267': '_find_spec_directory(kernelspec.py)', '632': 'find_kernel_specs(test_kernelspec.py)', '274': 'get_kernel_spec(kernelspec.py)', '633': 'get_kernel_spec(test_kernelspec.py)', '549': 'setUp(test_client.py)', '269': '_get_kernel_spec_by_name(kernelspec.py)', '278': '__init__(kernelspec.py)', '260': 'get_kernel_spec(kernelspec.py)', '50': 'adapt(adapter.py)', '450': 'utcnow(session.py)', '698': 'test_tracking(test_session.py)', '480': 'send(session.py)', '328': 'interrupt_kernel(manager.py)', '191': 'write_connection_file(connect.py)', '109': 'close(channels.py)', '83': 'close(channels.py)', '730': 'close(threaded.py)', '132': 'close(channels.py)', '211': 'ports(connect.py)', '718': 'close(threaded.py)', '570': 'test_write_connection_file(test_connect.py)', '686': 'test_clone(test_session.py)', '458': '_add_digest(session.py)', '460': '_cull_digest_history(session.py)', '558': 'DummyConsoleApp(test_connect.py)', '214': 'JupyterConsoleApp(consoleapp.py)', '441': 'Session(session.py)', '188': 'ConnectionFileMixin(connect.py)', '213': 'IPythonConsoleApp(consoleapp.py)', '434': 'RunApp(runapp.py)', '665': 'test_start_sequence_tcp_kernels(test_multikernelmanager.py)', '655': '_get_tcp_km(test_multikernelmanager.py)', '392': '__init__(multikernelmanager.py)', '666': 'test_tcp_cinfo(test_multikernelmanager.py)', '668': 'test_tcp_lifecycle_with_kernel_id(test_multikernelmanager.py)', '661': 'test_shutdown_all(test_multikernelmanager.py)', '663': 'test_start_parallel_thread_kernels(test_multikernelmanager.py)', '658': 'tcp_lifecycle_with_loop(test_multikernelmanager.py)', '667': 'test_tcp_lifecycle(test_multikernelmanager.py)', '662': 'test_start_parallel_process_kernels(test_multikernelmanager.py)', '190': 'tunnel_to_kernel(connect.py)', '503': 'select_random_ports(tunnel.py)', '701': 'test_random_ports(test_ssh.py)', '386': 'shutdown_all(multikernelmanager.py)', '383': 'finish_shutdown(multikernelmanager.py)', '410': 'get_kernel(multikernelmanager.py)', '394': '_check_kernel_id(multikernelmanager.py)', '388': 'signal_kernel(multikernelmanager.py)', '385': 'restart_kernel(multikernelmanager.py)', '384': 'interrupt_kernel(multikernelmanager.py)', '387': 'shutdown_kernel(multikernelmanager.py)', '421': 'shutdown_kernel(multikernelmanager.py)', '420': 'shutdown_all(multikernelmanager.py)', '104': 'wait_for_ready(client.py)', '103': 'is_alive(client.py)', '412': 'is_alive(multikernelmanager.py)', '373': 'is_alive(managerabc.py)', '140': 'is_alive(channelsabc.py)', '732': 'is_alive(threaded.py)', '86': 'is_alive(channels.py)', '112': 'is_alive(channels.py)', '123': 'wait_for_ready(client.py)', '165': 'is_alive(client.py)', '648': 'test_start_parallel_thread_kernels(test_multikernelmanager.py)', '643': 'tcp_lifecycle_with_loop(test_multikernelmanager.py)', '642': 'raw_tcp_lifecycle(test_multikernelmanager.py)', '641': '_run_lifecycle(test_multikernelmanager.py)', '647': 'test_start_parallel_process_kernels(test_multikernelmanager.py)', '652': 'test_tcp_lifecycle(test_multikernelmanager.py)', '653': 'test_tcp_lifecycle_with_kernel_id(test_multikernelmanager.py)', '483': 'sign(session.py)', '440': 'Message(session.py)', '482': 'serialize(session.py)', '135': 'run(channels.py)', '128': '_create_socket(channels.py)', '84': 'get_msg(channels.py)', '82': '_recv(channels.py)', '101': 'get_stdin_msg(client.py)', '85': 'get_msgs(channels.py)', '99': 'get_iopub_msg(client.py)', '110': 'get_msg(channels.py)', '108': '_recv(channels.py)', '111': 'get_msgs(channels.py)', '620': 'test_cant_install_kernel_spec(test_kernelspec.py)', '275': 'install_kernel_spec(kernelspec.py)', '268': '_get_destination_dir(kernelspec.py)', '261': 'install_kernel_spec(kernelspec.py)', '614': 'test_start_sequence_process_kernels(test_kernelmanager.py)', '610': '_run_signaltest_lifecycle(test_kernelmanager.py)', '615': 'execute(test_kernelmanager.py)', '609': '_prepare_kernel(test_kernelmanager.py)', '611': 'test_start_parallel_process_kernels(test_kernelmanager.py)', '613': 'test_start_sequence_kernels(test_kernelmanager.py)', '612': 'test_start_parallel_thread_kernels(test_kernelmanager.py)', '398': '_kernel_manager_class_changed(multikernelmanager.py)', '396': '_create_kernel_manager_factory(multikernelmanager.py)', '424': 'create_kernel_manager(multikernelmanager.py)', '397': '_find_available_port(multikernelmanager.py)', '395': '_context_default(multikernelmanager.py)', '399': '_kernel_manager_factory_default(multikernelmanager.py)', '485': '__init__(session.py)', '459': '_check_packers(session.py)', '244': 'squash_dates(jsonutil.py)', '90': 'AsyncKernelClient(client.py)', '147': 'KernelClient(client.py)', '139': 'HBChannelABC(channelsabc.py)', '138': 'ChannelABC(channelsabc.py)', '116': 'BlockingKernelClient(client.py)', '319': 'AsyncKernelManager(manager.py)', '320': 'KernelManager(manager.py)', '224': 'AsyncIOLoopKernelManager(manager.py)', '225': 'IOLoopKernelManager(manager.py)', '657': '_run_lifecycle(test_multikernelmanager.py)', '704': 'execute(utils.py)', '155': 'execute(client.py)', '148': 'validate_string_dict(client.py)', '734': 'send(threaded.py)', '738': 'thread_send(threaded.py)', '664': 'test_start_sequence_ipc_kernels(test_multikernelmanager.py)', '654': '_get_ipc_km(test_multikernelmanager.py)', '660': 'test_ipc_lifecycle(test_multikernelmanager.py)', '659': 'test_ipc_cinfo(test_multikernelmanager.py)', '423': 'start_kernel(multikernelmanager.py)', '415': 'pre_start_kernel(multikernelmanager.py)', '380': 'DuplicateKernelError(multikernelmanager.py)', '414': 'new_kernel_id(multikernelmanager.py)', '389': 'start_kernel(multikernelmanager.py)', '238': 'start(restarter.py)', '430': 'poll(restarter.py)', '433': 'stop(restarter.py)', '428': '_fire_callbacks(restarter.py)', '510': 'do_execute(signalkernel.py)', '501': 'openssh_tunnel(tunnel.py)', '494': 'SSHException(tunnel.py)', '497': '_stop_tunnel(tunnel.py)', '475': 'feed_identities(session.py)', '202': 'cleanup_random_ports(connect.py)', '200': 'cleanup_connection_file(connect.py)', '106': 'ZMQSocketChannel(channels.py)', '226': 'as_zmqstream(manager.py)', '233': 'wrapped(manager.py)', '557': 'DummyConfigurable(test_connect.py)', '235': 'IOLoopKernelRestarter(restarter.py)', '426': 'KernelRestarter(restarter.py)', '234': 'AsyncIOLoopKernelRestarter(restarter.py)', '291': 'start(kernelspecapp.py)', '251': 'start(kernelapp.py)', '249': 'setup_signals(kernelapp.py)', '252': 'shutdown_handler(kernelapp.py)', '250': 'shutdown(kernelapp.py)', '248': 'log_connection_info(kernelapp.py)', '199': 'blocking_client(connect.py)', '208': 'get_connection_info(connect.py)', '725': 'stop_channels(threaded.py)', '676': '_bad_unpacker(test_session.py)', '536': 'test_complete_request(test_adapter.py)', '517': 'adapt(test_adapter.py)', '562': 'test_find_connection_file_local(test_connect.py)', '189': 'find_connection_file(connect.py)', '493': 'SubHander(forward.py)', '490': 'Handler(forward.py)', '114': 'send(channels.py)', '88': 'send(channels.py)', '241': 'date_default(jsonutil.py)', '597': 'test_subclasses(test_kernelmanager.py)', '703': 'AsyncKernelManagerWithCleanup(utils.py)', '595': 'test_signal_kernel_subprocesses(test_kernelmanager.py)', '598': 'execute(test_kernelmanager.py)', '702': 'AsyncKernelManagerSubclass(utils.py)', '591': 'transport(test_kernelmanager.py)', '606': 'test_templated_kspec_env(test_kernelmanager.py)', '599': '_env_test_body(test_kernelmanager.py)', '607': 'execute(test_kernelmanager.py)', '604': 'test_signal_kernel_subprocesses(test_kernelmanager.py)', '608': 'execute(test_kernelmanager.py)', '586': 'env(test_kernelmanager.py)', '712': 'stop(utils.py)', '711': 'start(utils.py)', '705': 'test_env(utils.py)', '630': 'test_validate_kernel_name(test_kernelspec.py)', '506': 'SignalTestApp(signalkernel.py)', '507': 'SignalTestKernel(signalkernel.py)', '617': '_install_sample_kernel(test_kernelspec.py)', '651': 'test_tcp_cinfo(test_multikernelmanager.py)', '640': '_run_cinfo(test_multikernelmanager.py)', '619': 'tearDown(test_kernelspec.py)', '618': 'setUp(test_kernelspec.py)', '649': 'test_start_sequence_ipc_kernels(test_multikernelmanager.py)', '650': 'test_start_sequence_tcp_kernels(test_multikernelmanager.py)', '644': 'test_ipc_cinfo(test_multikernelmanager.py)', '645': 'test_ipc_lifecycle(test_multikernelmanager.py)', '656': '_run_cinfo(test_multikernelmanager.py)', '569': 'test_secure_write(test_connect.py)', '573': 'check_user_only_permissions(test_connect.py)', '574': 'fetch_win32_permissions(test_connect.py)', '563': 'test_find_connection_file_relative(test_connect.py)', '561': 'test_find_connection_file_abspath(test_connect.py)', '539': 'test_input_request(test_adapter.py)', '537': 'test_display_data(test_adapter.py)', '540': 'test_inspect_reply(test_adapter.py)', '543': 'test_kernel_info_reply(test_adapter.py)', '542': 'test_inspect_request_token(test_adapter.py)', '535': 'test_complete_reply(test_adapter.py)', '541': 'test_inspect_request(test_adapter.py)', '538': 'test_execute_request(test_adapter.py)', '545': 'test_rename_type(test_adapter.py)', '544': 'test_no_adapt(test_adapter.py)', '546': 'test_same_version(test_adapter.py)', '514': 'V5toV4TestCase(test_adapter.py)', '512': 'AdapterTest(test_adapter.py)', '526': 'test_input_request(test_adapter.py)', '523': 'test_display_data(test_adapter.py)', '527': 'test_kernel_info_reply(test_adapter.py)', '530': 'test_object_info_reply_not_found(test_adapter.py)', '529': 'test_object_info_reply(test_adapter.py)', '531': 'test_object_info_request(test_adapter.py)', '521': 'test_complete_reply(test_adapter.py)', '522': 'test_complete_request(test_adapter.py)', '524': 'test_execute_reply(test_adapter.py)', '532': 'test_rename_type(test_adapter.py)', '525': 'test_execute_request(test_adapter.py)', '528': 'test_no_adapt(test_adapter.py)', '533': 'test_same_version(test_adapter.py)', '513': 'V4toV5TestCase(test_adapter.py)', '515': 'test_code_to_line_no_code(test_adapter.py)', '51': 'code_to_line(adapter.py)', '158': 'get_shell_msg(client.py)', '157': 'get_iopub_msg(client.py)', '710': '__exit__(utils.py)', '709': '__enter__(utils.py)', '580': 'test_kernelapp_lifecycle(test_kernelapp.py)', '579': '_launch(test_kernelapp.py)', '473': 'clone(session.py)', '481': 'send_raw(session.py)', '675': '_bad_packer(test_session.py)', '699': 'test_unique_msg_ids(test_session.py)', '445': 'msg_header(session.py)', '478': 'msg_id(session.py)', '674': 'TestSession(test_session.py)', '673': 'SessionTestCase(test_session.py)', '556': 'test_shutdown(test_client.py)', '548': '_check_reply(test_client.py)', '550': 'test_comm_info(test_client.py)', '555': 'test_kernel_info(test_client.py)', '551': 'test_complete(test_client.py)', '554': 'test_inspect(test_client.py)', '553': 'test_history(test_client.py)', '117': 'reqrep(client.py)', '124': 'wrapped(client.py)', '150': '_handle_kernel_info_reply(client.py)', '125': 'HBChannel(channels.py)', '102': 'hb_channel(client.py)', '91': 'reqrep(client.py)', '105': 'wrapped(client.py)', '80': 'ZMQSocketChannel(channels.py)', '154': 'control_channel(client.py)', '723': 'ioloop(threaded.py)', '160': 'hb_channel(client.py)', '171': 'stdin_channel(client.py)', '164': 'iopub_channel(client.py)', '168': 'shell_channel(client.py)', '740': 'send_interrupt(win_interrupt.py)', '334': '__del__(manager.py)', '293': 'start(kernelspecapp.py)', '294': 'path_key(kernelspecapp.py)', '735': 'start(threaded.py)', '720': 'start(threaded.py)', '141': 'start(channelsabc.py)', '432': 'start(restarter.py)', '288': 'start(kernelspecapp.py)', '89': 'start(channels.py)', '115': 'start(channels.py)', '290': 'start(kernelspecapp.py)', '438': 'parse_command_line(runapp.py)', '218': 'build_kernel_argv(consoleapp.py)', '308': '_only_once(localinterfaces.py)', '317': 'wrapped(localinterfaces.py)', '47': 'V4toV5(adapter.py)', '46': 'Adapter(adapter.py)', '77': 'object_info_request(adapter.py)', '52': 'extract_oname_v4(adapter.py)', '70': 'complete_request(adapter.py)', '75': 'kernel_info_reply(adapter.py)', '49': '_version_str_to_list(adapter.py)', '48': 'V5toV4(adapter.py)', '53': '__call__(adapter.py)', '54': 'handle_reply_status_error(adapter.py)', '57': 'update_msg_type(adapter.py)', '56': 'update_metadata(adapter.py)', '55': 'update_header(adapter.py)', '247': 'initialize(kernelapp.py)', '246': '_record_started(kernelapp.py)', '585': 'config(test_kernelmanager.py)', '262': 'install_native_kernel_spec(kernelspec.py)', '276': 'install_native_kernel_spec(kernelspec.py)', '265': 'to_json(kernelspec.py)', '264': 'to_dict(kernelspec.py)', '449': 'test_msg2obj(session.py)', '453': '__init__(session.py)', '470': '_signature_scheme_changed(session.py)', '463': '_key_default(session.py)', '447': 'new_id_bytes(session.py)', '462': '_key_changed(session.py)', '443': 'default_secure(session.py)', '469': '_session_default(session.py)', '446': 'new_id(session.py)', '413': 'list_kernel_ids(multikernelmanager.py)', '721': 'stop(threaded.py)', '724': 'start_channels(threaded.py)', '722': '_check_kernel_info_reply(threaded.py)', '716': '__init__(threaded.py)', '416': 'remove_kernel(multikernelmanager.py)', '713': 'IOLoopThread(threaded.py)', '714': 'ThreadedKernelClient(threaded.py)', '715': 'ThreadedZMQSocketChannel(threaded.py)', '731': 'flush(threaded.py)', '727': '_flush(threaded.py)', '418': 'request_shutdown(multikernelmanager.py)', '402': 'cleanup_resources(multikernelmanager.py)', '408': 'finish_shutdown(multikernelmanager.py)', '393': '__len__(multikernelmanager.py)', '298': 'launch_kernel(launcher.py)', '739': 'create_interrupt_event(win_interrupt.py)', '741': 'SECURITY_ATTRIBUTES(win_interrupt.py)', '509': '__init__(signalkernel.py)', '127': '__init__(channels.py)', '126': 'InvalidPortNumber(channels.py)', '107': '__init__(channels.py)', '81': '__init__(channels.py)', '726': '__init__(threaded.py)', '737': 'setup_stream(threaded.py)', '728': '_handle_recv(threaded.py)', '729': 'call_handlers(threaded.py)', '136': 'stop(channels.py)', '133': 'is_beating(channels.py)', '145': 'time_to_dead(channelsabc.py)', '131': 'call_handlers(channels.py)', '130': '_poll(channels.py)', '435': 'handle_sigint(runapp.py)', '355': 'interrupt_kernel(manager.py)', '476': 'msg(session.py)', '477': 'msg_header(session.py)', '520': 'msg(test_adapter.py)', '534': 'msg(test_adapter.py)', '444': 'extract_header(session.py)', '411': 'interrupt_kernel(multikernelmanager.py)', '372': 'interrupt_kernel(managerabc.py)', '354': 'has_kernel(manager.py)', '347': '_launch_kernel(manager.py)', '365': 'signal_kernel(manager.py)', '505': 'tunnel_connection(tunnel.py)', '500': 'open_tunnel(tunnel.py)', '502': 'paramiko_tunnel(tunnel.py)', '499': '_try_passwordless_paramiko(tunnel.py)', '496': '_split_server(tunnel.py)', '495': '_paramiko_tunnel(tunnel.py)', '491': 'forward_tunnel(forward.py)', '436': 'init_kernel_info(runapp.py)', '137': 'unpause(channels.py)', '146': 'unpause(channelsabc.py)', '167': 'kernel_info(client.py)', '297': 'start(kernelspecapp.py)', '162': 'input(client.py)', '504': 'try_passwordless_ssh(tunnel.py)', '498': '_try_passwordless_openssh(tunnel.py)', '331': 'shutdown_kernel(manager.py)', '349': 'cleanup(manager.py)', '350': 'cleanup_resources(manager.py)', '337': '_close_control_socket(manager.py)', '236': 'poll(restarter.py)', '363': 'restart_kernel(manager.py)', '364': 'shutdown_kernel(manager.py)', '362': 'request_shutdown(manager.py)', '203': 'connect_control(connect.py)', '207': 'connect_stdin(connect.py)', '206': 'connect_shell(connect.py)', '205': 'connect_iopub(connect.py)', '204': 'connect_hb(connect.py)', '228': 'start_restarter(manager.py)', '231': 'start_restarter(manager.py)', '439': 'start(runapp.py)', '122': 'execute_interactive(client.py)', '357': 'is_alive(manager.py)', '97': 'execute_interactive(client.py)', '327': 'finish_shutdown(manager.py)', '324': '_async_wait(manager.py)', '329': 'is_alive(manager.py)', '325': '_kill_kernel(manager.py)', '332': 'signal_kernel(manager.py)', '368': 'stop_restarter(manager.py)', '201': 'cleanup_ipc_files(connect.py)'}}, {'key': 542, 'parent': 1426, 'tfidf_word': 'EP: 542, Name: AsyncKernelClient &rarr; comm_info &rarr; msg &rarr; msg &rarr; msg &rarr; msg_header &rarr; msg_id', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 658, 'parent': 1426, 'tfidf_word': 'EP: 658, Name: BlockingKernelClient &rarr; comm_info &rarr; msg &rarr; msg &rarr; msg &rarr; msg_header &rarr; msg_id', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1424, 'parent': 2011, 'tfidf_word': 'client header id kernel shutdown async blocking msg ', 'tfidf_method': 'shutdown msg msg_header msg_id msg msg BlockingKernelClient AsyncKernelClient ', 'lda_word': ' msg,client,header,kernel,shutdown,', 'lda_method': ' msg,shutdown,asynckernelclient,msg_header,msg_id,', 'lsi_word': ' msg,shutdown,client,kernel,header,', 'lsi_method': ' msg,msg_header,msg_id,shutdown,asynckernelclient,', 'spm_method': '  &#187; shutdown(client.py) &rarr; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br>', 'text_summary': '', 'files_count': 3, 'files': ['client.py', 'test_adapter.py', 'session.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'90': 'AsyncKernelClient(client.py)', '169': 'shutdown(client.py)', '520': 'msg(test_adapter.py)', '534': 'msg(test_adapter.py)', '476': 'msg(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '116': 'BlockingKernelClient(client.py)'}}, {'key': 2009, 'parent': 2011, 'tfidf_word': 'interrupt input type identity found feed display data version msg ', 'tfidf_method': 'test_no_adapt test_kernel_info_reply test_serialize test_execute_request test_execute_reply test_display_data test_complete_request test_complete_reply interrupt_kernel test_input_request ', 'lda_word': ' msg,header,test,complete,kernel,', 'lda_method': ' msg,msg_header,msg_id,blockingkernelclient,complete,', 'lsi_word': ' msg,header,test,kernel,reply,', 'lsi_method': ' msg,msg_id,msg_header,asynckernelclient,complete,', 'spm_method': '  &#187; AsyncKernelClient(client.py) &rarr; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; complete(client.py) &rarr; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; BlockingKernelClient(client.py) &rarr; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; history(client.py) &rarr; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br>', 'text_summary': "Tab complete text in the kernel's namespace.", 'files_count': 5, 'files': ['client.py', 'test_adapter.py', 'session.py', 'test_session.py', 'manager.py'], 'execution_path_count': 24, 'function_id_to_name_file': {'90': 'AsyncKernelClient(client.py)', '153': 'complete(client.py)', '520': 'msg(test_adapter.py)', '534': 'msg(test_adapter.py)', '476': 'msg(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '116': 'BlockingKernelClient(client.py)', '161': 'history(client.py)', '526': 'test_input_request(test_adapter.py)', '523': 'test_display_data(test_adapter.py)', '527': 'test_kernel_info_reply(test_adapter.py)', '530': 'test_object_info_reply_not_found(test_adapter.py)', '529': 'test_object_info_reply(test_adapter.py)', '531': 'test_object_info_request(test_adapter.py)', '521': 'test_complete_reply(test_adapter.py)', '522': 'test_complete_request(test_adapter.py)', '524': 'test_execute_reply(test_adapter.py)', '525': 'test_execute_request(test_adapter.py)', '532': 'test_rename_type(test_adapter.py)', '528': 'test_no_adapt(test_adapter.py)', '533': 'test_same_version(test_adapter.py)', '695': 'test_send_raw(test_session.py)', '692': 'test_feed_identities(test_session.py)', '694': 'test_send(test_session.py)', '696': 'test_serialize(test_session.py)', '693': 'test_msg(test_session.py)', '328': 'interrupt_kernel(manager.py)', '166': 'is_complete(client.py)'}}, {'key': 544, 'parent': 1506, 'tfidf_word': 'EP: 544, Name: AsyncKernelClient &rarr; comm_info &rarr; msg &rarr; msg &rarr; msg_header &rarr; msg_id', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 660, 'parent': 1506, 'tfidf_word': 'EP: 660, Name: BlockingKernelClient &rarr; comm_info &rarr; msg &rarr; msg &rarr; msg_header &rarr; msg_id', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1502, 'parent': 2244, 'tfidf_word': 'client header id kernel shutdown async blocking msg ', 'tfidf_method': 'shutdown msg msg_header msg_id msg BlockingKernelClient AsyncKernelClient ', 'lda_word': ' msg,client,kernel,header,shutdown,', 'lda_method': ' msg,shutdown,msg_id,msg_header,blockingkernelclient,', 'lsi_word': ' msg,kernel,header,client,shutdown,', 'lsi_method': ' msg,msg_header,msg_id,shutdown,asynckernelclient,', 'spm_method': ' ', 'text_summary': '', 'files_count': 3, 'files': ['client.py', 'test_adapter.py', 'session.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'90': 'AsyncKernelClient(client.py)', '169': 'shutdown(client.py)', '534': 'msg(test_adapter.py)', '476': 'msg(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '116': 'BlockingKernelClient(client.py)'}}, {'key': 2241, 'parent': 2244, 'tfidf_word': 'interrupt type info identity feed execute display data version msg ', 'tfidf_method': 'test_inspect_request_token test_inspect_request test_inspect_reply test_serialize test_execute_request test_display_data test_complete_request test_complete_reply interrupt_kernel test_input_request ', 'lda_word': ' msg,header,test,request,kernel,', 'lda_method': ' history,blockingkernelclient,msg,msg_id,msg_header,', 'lsi_word': ' msg,header,test,kernel,request,', 'lsi_method': ' msg,msg_header,msg_id,blockingkernelclient,asynckernelclient,', 'spm_method': ' ', 'text_summary': "Tab complete text in the kernel's namespace.", 'files_count': 5, 'files': ['client.py', 'test_adapter.py', 'session.py', 'test_session.py', 'manager.py'], 'execution_path_count': 23, 'function_id_to_name_file': {'90': 'AsyncKernelClient(client.py)', '153': 'complete(client.py)', '534': 'msg(test_adapter.py)', '476': 'msg(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '116': 'BlockingKernelClient(client.py)', '161': 'history(client.py)', '539': 'test_input_request(test_adapter.py)', '537': 'test_display_data(test_adapter.py)', '543': 'test_kernel_info_reply(test_adapter.py)', '540': 'test_inspect_reply(test_adapter.py)', '542': 'test_inspect_request_token(test_adapter.py)', '541': 'test_inspect_request(test_adapter.py)', '535': 'test_complete_reply(test_adapter.py)', '536': 'test_complete_request(test_adapter.py)', '538': 'test_execute_request(test_adapter.py)', '545': 'test_rename_type(test_adapter.py)', '546': 'test_same_version(test_adapter.py)', '544': 'test_no_adapt(test_adapter.py)', '695': 'test_send_raw(test_session.py)', '694': 'test_send(test_session.py)', '692': 'test_feed_identities(test_session.py)', '696': 'test_serialize(test_session.py)', '693': 'test_msg(test_session.py)', '328': 'interrupt_kernel(manager.py)', '166': 'is_complete(client.py)'}}, {'key': 476, 'parent': 1419, 'tfidf_word': 'EP: 476, Name: start_channels &rarr; kernel_info &rarr; msg &rarr; msg &rarr; msg &rarr; msg_header &rarr; msg_id', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 556, 'parent': 1419, 'tfidf_word': 'EP: 556, Name: AsyncKernelClient &rarr; kernel_info &rarr; msg &rarr; msg &rarr; msg &rarr; msg_header &rarr; msg_id', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 567, 'parent': 1429, 'tfidf_word': 'EP: 567, Name: AsyncKernelClient &rarr; inspect &rarr; msg &rarr; msg &rarr; msg &rarr; msg_header &rarr; msg_id', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 682, 'parent': 1429, 'tfidf_word': 'EP: 682, Name: BlockingKernelClient &rarr; inspect &rarr; msg &rarr; msg &rarr; msg &rarr; msg_header &rarr; msg_id', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1427, 'parent': 2012, 'tfidf_word': 'client comm header id info kernel async blocking msg ', 'tfidf_method': 'comm_info msg msg_header msg_id msg msg BlockingKernelClient AsyncKernelClient ', 'lda_word': ' msg,info,comm,kernel,client,', 'lda_method': ' msg,msg_header,comm_info,msg_id,blockingkernelclient,', 'lsi_word': ' msg,info,comm,header,kernel,', 'lsi_method': ' msg,comm_info,msg_header,msg_id,asynckernelclient,', 'spm_method': '  &#187; comm_info(client.py) &rarr; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br>', 'text_summary': '', 'files_count': 3, 'files': ['client.py', 'test_adapter.py', 'session.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'90': 'AsyncKernelClient(client.py)', '152': 'comm_info(client.py)', '534': 'msg(test_adapter.py)', '520': 'msg(test_adapter.py)', '476': 'msg(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '116': 'BlockingKernelClient(client.py)'}}, {'key': 2010, 'parent': 2012, 'tfidf_word': 'interrupt type info identity feed execute display data version msg ', 'tfidf_method': 'interrupt_kernel test_inspect_reply test_input_request test_serialize test_display_data test_complete_request test_complete_reply is_complete test_inspect_request_token test_execute_request ', 'lda_word': ' msg,header,test,kernel,client,', 'lda_method': ' msg,msg_header,msg_id,blockingkernelclient,asynckernelclient,', 'lsi_word': ' msg,header,test,kernel,client,', 'lsi_method': ' msg,msg_header,msg_id,asynckernelclient,blockingkernelclient,', 'spm_method': '  &#187; AsyncKernelClient(client.py) &rarr; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; shutdown(client.py) &rarr; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; BlockingKernelClient(client.py) &rarr; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; complete(client.py) &rarr; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; history(client.py) &rarr; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br>', 'text_summary': "Tab complete text in the kernel's namespace.", 'files_count': 5, 'files': ['client.py', 'test_adapter.py', 'session.py', 'test_session.py', 'manager.py'], 'execution_path_count': 25, 'function_id_to_name_file': {'90': 'AsyncKernelClient(client.py)', '169': 'shutdown(client.py)', '534': 'msg(test_adapter.py)', '520': 'msg(test_adapter.py)', '476': 'msg(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '116': 'BlockingKernelClient(client.py)', '153': 'complete(client.py)', '161': 'history(client.py)', '539': 'test_input_request(test_adapter.py)', '537': 'test_display_data(test_adapter.py)', '543': 'test_kernel_info_reply(test_adapter.py)', '540': 'test_inspect_reply(test_adapter.py)', '542': 'test_inspect_request_token(test_adapter.py)', '541': 'test_inspect_request(test_adapter.py)', '535': 'test_complete_reply(test_adapter.py)', '536': 'test_complete_request(test_adapter.py)', '538': 'test_execute_request(test_adapter.py)', '545': 'test_rename_type(test_adapter.py)', '544': 'test_no_adapt(test_adapter.py)', '546': 'test_same_version(test_adapter.py)', '695': 'test_send_raw(test_session.py)', '692': 'test_feed_identities(test_session.py)', '694': 'test_send(test_session.py)', '696': 'test_serialize(test_session.py)', '693': 'test_msg(test_session.py)', '328': 'interrupt_kernel(manager.py)', '166': 'is_complete(client.py)'}}, {'key': 470, 'parent': 1488, 'tfidf_word': 'EP: 470, Name: start_channels &rarr; kernel_info &rarr; msg &rarr; msg &rarr; msg_header &rarr; msg_id', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 550, 'parent': 1488, 'tfidf_word': 'EP: 550, Name: AsyncKernelClient &rarr; kernel_info &rarr; msg &rarr; msg &rarr; msg_header &rarr; msg_id', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 561, 'parent': 1508, 'tfidf_word': 'EP: 561, Name: AsyncKernelClient &rarr; inspect &rarr; msg &rarr; msg &rarr; msg_header &rarr; msg_id', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 676, 'parent': 1508, 'tfidf_word': 'EP: 676, Name: BlockingKernelClient &rarr; inspect &rarr; msg &rarr; msg &rarr; msg_header &rarr; msg_id', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1504, 'parent': 2251, 'tfidf_word': 'client comm header id info kernel async blocking msg ', 'tfidf_method': 'comm_info msg msg_header msg_id msg BlockingKernelClient AsyncKernelClient ', 'lda_word': ' msg,kernel,info,comm,client,', 'lda_method': ' msg,msg_id,comm_info,msg_header,blockingkernelclient,', 'lsi_word': ' msg,header,client,kernel,info,', 'lsi_method': ' msg,comm_info,msg_header,msg_id,asynckernelclient,', 'spm_method': ' ', 'text_summary': '', 'files_count': 3, 'files': ['client.py', 'test_adapter.py', 'session.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'90': 'AsyncKernelClient(client.py)', '152': 'comm_info(client.py)', '520': 'msg(test_adapter.py)', '476': 'msg(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '116': 'BlockingKernelClient(client.py)'}}, {'key': 2247, 'parent': 2251, 'tfidf_word': 'interrupt input type identity found feed display data version msg ', 'tfidf_method': 'test_kernel_info_reply test_input_request test_serialize test_execute_reply test_display_data test_complete_request test_complete_reply is_complete interrupt_kernel test_execute_request ', 'lda_word': ' msg,header,test,reply,info,', 'lda_method': ' msg,msg_header,msg_id,shutdown,blockingkernelclient,', 'lsi_word': ' msg,header,test,kernel,client,', 'lsi_method': ' msg,msg_header,msg_id,blockingkernelclient,asynckernelclient,', 'spm_method': ' ', 'text_summary': "Tab complete text in the kernel's namespace.", 'files_count': 5, 'files': ['client.py', 'test_adapter.py', 'session.py', 'test_session.py', 'manager.py'], 'execution_path_count': 26, 'function_id_to_name_file': {'90': 'AsyncKernelClient(client.py)', '169': 'shutdown(client.py)', '520': 'msg(test_adapter.py)', '476': 'msg(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '116': 'BlockingKernelClient(client.py)', '153': 'complete(client.py)', '161': 'history(client.py)', '526': 'test_input_request(test_adapter.py)', '523': 'test_display_data(test_adapter.py)', '527': 'test_kernel_info_reply(test_adapter.py)', '530': 'test_object_info_reply_not_found(test_adapter.py)', '529': 'test_object_info_reply(test_adapter.py)', '531': 'test_object_info_request(test_adapter.py)', '521': 'test_complete_reply(test_adapter.py)', '522': 'test_complete_request(test_adapter.py)', '524': 'test_execute_reply(test_adapter.py)', '525': 'test_execute_request(test_adapter.py)', '532': 'test_rename_type(test_adapter.py)', '533': 'test_same_version(test_adapter.py)', '528': 'test_no_adapt(test_adapter.py)', '695': 'test_send_raw(test_session.py)', '694': 'test_send(test_session.py)', '692': 'test_feed_identities(test_session.py)', '696': 'test_serialize(test_session.py)', '693': 'test_msg(test_session.py)', '328': 'interrupt_kernel(manager.py)', '166': 'is_complete(client.py)'}}, {'key': 323, 'parent': 1404, 'tfidf_word': 'EP: 323, Name: restart_kernel &rarr; shutdown_kernel &rarr; request_shutdown &rarr; msg &rarr; msg &rarr; msg &rarr; msg_header &rarr; msg_id', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 394, 'parent': 1404, 'tfidf_word': 'EP: 394, Name: start_new_async_kernel &rarr; shutdown_kernel &rarr; request_shutdown &rarr; msg &rarr; msg &rarr; msg &rarr; msg_header &rarr; msg_id', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 325, 'parent': 1414, 'tfidf_word': 'EP: 325, Name: restart_kernel &rarr; shutdown_kernel &rarr; request_shutdown &rarr; msg &rarr; msg &rarr; msg_header &rarr; msg_id', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 396, 'parent': 1414, 'tfidf_word': 'EP: 396, Name: start_new_async_kernel &rarr; shutdown_kernel &rarr; request_shutdown &rarr; msg &rarr; msg &rarr; msg_header &rarr; msg_id', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 327, 'parent': 1405, 'tfidf_word': 'EP: 327, Name: restart_kernel &rarr; shutdown_kernel &rarr; request_shutdown &rarr; msg &rarr; msg &rarr; msg &rarr; msg_header &rarr; msg_id', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 398, 'parent': 1405, 'tfidf_word': 'EP: 398, Name: start_new_async_kernel &rarr; shutdown_kernel &rarr; request_shutdown &rarr; msg &rarr; msg &rarr; msg &rarr; msg_header &rarr; msg_id', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 321, 'parent': 1412, 'tfidf_word': 'EP: 321, Name: restart_kernel &rarr; shutdown_kernel &rarr; request_shutdown &rarr; msg &rarr; msg &rarr; msg_header &rarr; msg_id', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 392, 'parent': 1412, 'tfidf_word': 'EP: 392, Name: start_new_async_kernel &rarr; shutdown_kernel &rarr; request_shutdown &rarr; msg &rarr; msg &rarr; msg_header &rarr; msg_id', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 356, 'parent': 1690, 'tfidf_word': 'EP: 356, Name: interrupt_kernel &rarr; send &rarr; msg &rarr; msg_header &rarr; msg_id', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 775, 'parent': 1690, 'tfidf_word': 'EP: 775, Name: test_send &rarr; send &rarr; msg &rarr; msg_header &rarr; msg_id', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 892, 'parent': 1731, 'tfidf_word': 'EP: 892, Name: execute &rarr; execute &rarr; msg &rarr; msg_header &rarr; msg_id', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1715, 'parent': 1731, 'tfidf_word': 'client execute header id kernel async blocking msg ', 'tfidf_method': 'execute msg msg_header msg_id BlockingKernelClient AsyncKernelClient ', 'lda_word': ' msg,kernel,header,client,execute,', 'lda_method': ' msg_id,msg,msg_header,execute,blockingkernelclient,', 'lsi_word': ' msg,execute,header,client,kernel,', 'lsi_method': ' execute,msg,msg_header,msg_id,asynckernelclient,', 'spm_method': ' ', 'text_summary': '', 'files_count': 2, 'files': ['client.py', 'session.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'90': 'AsyncKernelClient(client.py)', '155': 'execute(client.py)', '476': 'msg(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '116': 'BlockingKernelClient(client.py)'}}, {'key': 1718, 'parent': 2373, 'tfidf_word': 'header id info client kernel async blocking channels start msg ', 'tfidf_method': 'kernel_info msg msg_header msg_id BlockingKernelClient start_channels AsyncKernelClient ', 'lda_word': ' msg,header,info,kernel,channels,', 'lda_method': ' msg_header,kernel_info,msg_id,msg,asynckernelclient,', 'lsi_word': ' msg,kernel,header,info,client,', 'lsi_method': ' kernel_info,msg_id,msg_header,msg,blockingkernelclient,', 'spm_method': ' ', 'text_summary': '', 'files_count': 2, 'files': ['client.py', 'session.py'], 'execution_path_count': 3, 'function_id_to_name_file': {'116': 'BlockingKernelClient(client.py)', '167': 'kernel_info(client.py)', '476': 'msg(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '170': 'start_channels(client.py)', '90': 'AsyncKernelClient(client.py)'}}, {'key': 2309, 'parent': 2373, 'tfidf_word': 'inspect send serialize raw identity interrupt feed default version msg ', 'tfidf_method': 'comm_info history is_complete interrupt_kernel test_serialize test_default_version test_feed_identities test_msg test_send test_send_raw ', 'lda_word': ' msg,feed,identity,header,test,', 'lda_method': ' msg_id,msg,msg_header,asynckernelclient,blockingkernelclient,', 'lsi_word': ' msg,header,kernel,client,test,', 'lsi_method': ' msg_header,msg,msg_id,blockingkernelclient,asynckernelclient,', 'spm_method': ' ', 'text_summary': "Tab complete text in the kernel's namespace. Get metadata information about an object in the kernel's namespace.", 'files_count': 5, 'files': ['client.py', 'session.py', 'test_adapter.py', 'test_session.py', 'manager.py'], 'execution_path_count': 18, 'function_id_to_name_file': {'90': 'AsyncKernelClient(client.py)', '163': 'inspect(client.py)', '476': 'msg(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '116': 'BlockingKernelClient(client.py)', '152': 'comm_info(client.py)', '169': 'shutdown(client.py)', '153': 'complete(client.py)', '161': 'history(client.py)', '516': 'test_default_version(test_adapter.py)', '695': 'test_send_raw(test_session.py)', '692': 'test_feed_identities(test_session.py)', '694': 'test_send(test_session.py)', '693': 'test_msg(test_session.py)', '696': 'test_serialize(test_session.py)', '328': 'interrupt_kernel(manager.py)', '166': 'is_complete(client.py)'}}, {'key': 572, 'parent': 1513, 'tfidf_word': 'EP: 572, Name: AsyncKernelClient &rarr; execute &rarr; msg &rarr; msg &rarr; msg &rarr; extract_header', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 687, 'parent': 1513, 'tfidf_word': 'EP: 687, Name: BlockingKernelClient &rarr; execute &rarr; msg &rarr; msg &rarr; msg &rarr; extract_header', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 562, 'parent': 1509, 'tfidf_word': 'EP: 562, Name: AsyncKernelClient &rarr; inspect &rarr; msg &rarr; msg &rarr; msg &rarr; extract_header', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 677, 'parent': 1509, 'tfidf_word': 'EP: 677, Name: BlockingKernelClient &rarr; inspect &rarr; msg &rarr; msg &rarr; msg &rarr; extract_header', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1505, 'parent': 2250, 'tfidf_word': 'client comm extract header info kernel async blocking msg ', 'tfidf_method': 'comm_info extract_header msg msg msg BlockingKernelClient AsyncKernelClient ', 'lda_word': ' msg,extract,info,kernel,comm,', 'lda_method': ' msg,comm_info,extract_header,asynckernelclient,blockingkernelclient,', 'lsi_word': ' msg,client,info,extract,comm,', 'lsi_method': ' msg,comm_info,extract_header,asynckernelclient,blockingkernelclient,', 'spm_method': ' ', 'text_summary': '', 'files_count': 3, 'files': ['client.py', 'test_adapter.py', 'session.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'90': 'AsyncKernelClient(client.py)', '152': 'comm_info(client.py)', '520': 'msg(test_adapter.py)', '534': 'msg(test_adapter.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '116': 'BlockingKernelClient(client.py)'}}, {'key': 2246, 'parent': 2250, 'tfidf_word': 'adapt input type identity found feed display data interrupt version ', 'tfidf_method': 'test_kernel_info_reply test_serialize test_execute_request test_execute_reply test_display_data test_complete_request test_complete_reply is_complete interrupt_kernel test_input_request ', 'lda_word': ' msg,extract,header,test,reply,', 'lda_method': ' msg,extract_header,blockingkernelclient,test_object_info_reply_not_found,asynckernelclient,', 'lsi_word': ' msg,extract,header,test,kernel,', 'lsi_method': ' msg,extract_header,asynckernelclient,blockingkernelclient,shutdown,', 'spm_method': ' ', 'text_summary': "Tab complete text in the kernel's namespace. message format. Given a message or header, return the header. Ask the kernel whether some code is complete and ready to execute.", 'files_count': 5, 'files': ['client.py', 'test_adapter.py', 'session.py', 'test_session.py', 'manager.py'], 'execution_path_count': 26, 'function_id_to_name_file': {'90': 'AsyncKernelClient(client.py)', '169': 'shutdown(client.py)', '520': 'msg(test_adapter.py)', '534': 'msg(test_adapter.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '116': 'BlockingKernelClient(client.py)', '153': 'complete(client.py)', '161': 'history(client.py)', '526': 'test_input_request(test_adapter.py)', '523': 'test_display_data(test_adapter.py)', '527': 'test_kernel_info_reply(test_adapter.py)', '530': 'test_object_info_reply_not_found(test_adapter.py)', '529': 'test_object_info_reply(test_adapter.py)', '531': 'test_object_info_request(test_adapter.py)', '521': 'test_complete_reply(test_adapter.py)', '522': 'test_complete_request(test_adapter.py)', '524': 'test_execute_reply(test_adapter.py)', '525': 'test_execute_request(test_adapter.py)', '532': 'test_rename_type(test_adapter.py)', '533': 'test_same_version(test_adapter.py)', '528': 'test_no_adapt(test_adapter.py)', '695': 'test_send_raw(test_session.py)', '694': 'test_send(test_session.py)', '692': 'test_feed_identities(test_session.py)', '696': 'test_serialize(test_session.py)', '693': 'test_msg(test_session.py)', '328': 'interrupt_kernel(manager.py)', '166': 'is_complete(client.py)'}}, {'key': 574, 'parent': 1717, 'tfidf_word': 'EP: 574, Name: AsyncKernelClient &rarr; execute &rarr; msg &rarr; msg &rarr; extract_header', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 689, 'parent': 1717, 'tfidf_word': 'EP: 689, Name: BlockingKernelClient &rarr; execute &rarr; msg &rarr; msg &rarr; extract_header', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 564, 'parent': 1714, 'tfidf_word': 'EP: 564, Name: AsyncKernelClient &rarr; inspect &rarr; msg &rarr; msg &rarr; extract_header', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 679, 'parent': 1714, 'tfidf_word': 'EP: 679, Name: BlockingKernelClient &rarr; inspect &rarr; msg &rarr; msg &rarr; extract_header', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1711, 'parent': 2313, 'tfidf_word': 'client comm extract header info kernel async blocking msg ', 'tfidf_method': 'comm_info extract_header msg msg BlockingKernelClient AsyncKernelClient ', 'lda_word': ' msg,client,extract,kernel,header,', 'lda_method': ' msg,extract_header,comm_info,asynckernelclient,blockingkernelclient,', 'lsi_word': ' msg,info,kernel,comm,client,', 'lsi_method': ' msg,comm_info,extract_header,blockingkernelclient,asynckernelclient,', 'spm_method': ' ', 'text_summary': '', 'files_count': 3, 'files': ['client.py', 'test_adapter.py', 'session.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'90': 'AsyncKernelClient(client.py)', '152': 'comm_info(client.py)', '534': 'msg(test_adapter.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '116': 'BlockingKernelClient(client.py)'}}, {'key': 2311, 'parent': 2313, 'tfidf_word': 'interrupt type info identity feed execute display data raw version ', 'tfidf_method': 'test_inspect_request test_inspect_reply test_serialize test_execute_request test_display_data test_complete_request test_complete_reply is_complete test_inspect_request_token test_input_request ', 'lda_word': ' msg,header,extract,kernel,client,', 'lda_method': ' complete,msg,asynckernelclient,extract_header,blockingkernelclient,', 'lsi_word': ' msg,header,extract,test,kernel,', 'lsi_method': ' msg,extract_header,asynckernelclient,blockingkernelclient,shutdown,', 'spm_method': ' ', 'text_summary': "Tab complete text in the kernel's namespace. message format. Given a message or header, return the header. Ask the kernel whether some code is complete and ready to execute.", 'files_count': 5, 'files': ['client.py', 'test_adapter.py', 'session.py', 'test_session.py', 'manager.py'], 'execution_path_count': 25, 'function_id_to_name_file': {'90': 'AsyncKernelClient(client.py)', '169': 'shutdown(client.py)', '534': 'msg(test_adapter.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '116': 'BlockingKernelClient(client.py)', '153': 'complete(client.py)', '161': 'history(client.py)', '536': 'test_complete_request(test_adapter.py)', '538': 'test_execute_request(test_adapter.py)', '545': 'test_rename_type(test_adapter.py)', '544': 'test_no_adapt(test_adapter.py)', '546': 'test_same_version(test_adapter.py)', '695': 'test_send_raw(test_session.py)', '692': 'test_feed_identities(test_session.py)', '694': 'test_send(test_session.py)', '693': 'test_msg(test_session.py)', '696': 'test_serialize(test_session.py)', '328': 'interrupt_kernel(manager.py)', '166': 'is_complete(client.py)', '539': 'test_input_request(test_adapter.py)', '537': 'test_display_data(test_adapter.py)', '543': 'test_kernel_info_reply(test_adapter.py)', '542': 'test_inspect_request_token(test_adapter.py)', '540': 'test_inspect_reply(test_adapter.py)', '535': 'test_complete_reply(test_adapter.py)', '541': 'test_inspect_request(test_adapter.py)'}}, {'key': 467, 'parent': 1897, 'tfidf_word': 'EP: 467, Name: start_channels &rarr; kernel_info &rarr; msg &rarr; extract_header', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 547, 'parent': 1897, 'tfidf_word': 'EP: 547, Name: AsyncKernelClient &rarr; kernel_info &rarr; msg &rarr; extract_header', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 891, 'parent': 1929, 'tfidf_word': 'EP: 891, Name: execute &rarr; execute &rarr; msg &rarr; extract_header', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1908, 'parent': 1929, 'tfidf_word': 'client execute extract header kernel msg async blocking ', 'tfidf_method': 'execute extract_header msg BlockingKernelClient AsyncKernelClient ', 'lda_word': ' kernel,msg,execute,client,header,', 'lda_method': ' extract_header,msg,execute,asynckernelclient,blockingkernelclient,', 'lsi_word': ' client,execute,header,msg,extract,', 'lsi_method': ' extract_header,msg,execute,blockingkernelclient,asynckernelclient,', 'spm_method': ' ', 'text_summary': '', 'files_count': 2, 'files': ['client.py', 'session.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'90': 'AsyncKernelClient(client.py)', '155': 'execute(client.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '116': 'BlockingKernelClient(client.py)'}}, {'key': 1907, 'parent': 2400, 'tfidf_word': 'client extract header inspect kernel msg async blocking ', 'tfidf_method': 'inspect extract_header msg BlockingKernelClient AsyncKernelClient ', 'lda_word': ' kernel,msg,header,blocking,inspect,', 'lda_method': ' extract_header,msg,inspect,asynckernelclient,blockingkernelclient,', 'lsi_word': ' extract,inspect,msg,kernel,client,', 'lsi_method': ' extract_header,inspect,msg,asynckernelclient,blockingkernelclient,', 'spm_method': ' ', 'text_summary': '', 'files_count': 2, 'files': ['client.py', 'session.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'90': 'AsyncKernelClient(client.py)', '163': 'inspect(client.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '116': 'BlockingKernelClient(client.py)'}}, {'key': 2398, 'parent': 2400, 'tfidf_word': 'history info send serialize identity interrupt feed default raw version ', 'tfidf_method': 'history shutdown is_complete interrupt_kernel test_default_version test_feed_identities test_msg test_send test_send_raw test_serialize ', 'lda_word': ' msg,header,extract,kernel,client,', 'lda_method': ' msg,extract_header,blockingkernelclient,asynckernelclient,test_send_raw,', 'lsi_word': ' msg,header,extract,kernel,client,', 'lsi_method': ' extract_header,msg,asynckernelclient,blockingkernelclient,comm_info,', 'spm_method': ' ', 'text_summary': 'Given a message or header, return the header. message format.', 'files_count': 5, 'files': ['client.py', 'session.py', 'test_adapter.py', 'test_session.py', 'manager.py'], 'execution_path_count': 16, 'function_id_to_name_file': {'90': 'AsyncKernelClient(client.py)', '152': 'comm_info(client.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '116': 'BlockingKernelClient(client.py)', '169': 'shutdown(client.py)', '153': 'complete(client.py)', '161': 'history(client.py)', '516': 'test_default_version(test_adapter.py)', '695': 'test_send_raw(test_session.py)', '694': 'test_send(test_session.py)', '692': 'test_feed_identities(test_session.py)', '696': 'test_serialize(test_session.py)', '693': 'test_msg(test_session.py)', '328': 'interrupt_kernel(manager.py)', '166': 'is_complete(client.py)'}}, {'key': 475, 'parent': 1491, 'tfidf_word': 'EP: 475, Name: start_channels &rarr; kernel_info &rarr; msg &rarr; msg &rarr; msg &rarr; extract_header', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 555, 'parent': 1491, 'tfidf_word': 'EP: 555, Name: AsyncKernelClient &rarr; kernel_info &rarr; msg &rarr; msg &rarr; msg &rarr; extract_header', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 899, 'parent': 1562, 'tfidf_word': 'EP: 899, Name: execute &rarr; execute &rarr; msg &rarr; msg &rarr; msg &rarr; extract_header', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1515, 'parent': 1562, 'tfidf_word': 'client execute extract header kernel async blocking msg ', 'tfidf_method': 'execute extract_header msg msg msg BlockingKernelClient AsyncKernelClient ', 'lda_word': ' msg,async,execute,kernel,extract,', 'lda_method': ' msg,extract_header,execute,blockingkernelclient,asynckernelclient,', 'lsi_word': ' msg,header,execute,extract,kernel,', 'lsi_method': ' msg,execute,extract_header,blockingkernelclient,asynckernelclient,', 'spm_method': ' ', 'text_summary': '', 'files_count': 3, 'files': ['client.py', 'test_adapter.py', 'session.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'90': 'AsyncKernelClient(client.py)', '155': 'execute(client.py)', '534': 'msg(test_adapter.py)', '520': 'msg(test_adapter.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '116': 'BlockingKernelClient(client.py)'}}, {'key': 1511, 'parent': 2253, 'tfidf_word': 'client extract header inspect kernel async blocking msg ', 'tfidf_method': 'inspect extract_header msg msg msg BlockingKernelClient AsyncKernelClient ', 'lda_word': ' msg,header,inspect,extract,client,', 'lda_method': ' msg,inspect,extract_header,blockingkernelclient,asynckernelclient,', 'lsi_word': ' msg,inspect,extract,client,header,', 'lsi_method': ' msg,extract_header,inspect,blockingkernelclient,asynckernelclient,', 'spm_method': ' ', 'text_summary': '', 'files_count': 3, 'files': ['client.py', 'test_adapter.py', 'session.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'90': 'AsyncKernelClient(client.py)', '163': 'inspect(client.py)', '534': 'msg(test_adapter.py)', '520': 'msg(test_adapter.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '116': 'BlockingKernelClient(client.py)'}}, {'key': 2249, 'parent': 2253, 'tfidf_word': 'input interrupt type identity feed execute display data raw version ', 'tfidf_method': 'test_inspect_request test_inspect_reply test_input_request test_serialize test_display_data test_complete_request test_complete_reply is_complete test_inspect_request_token test_execute_request ', 'lda_word': ' msg,extract,header,test,kernel,', 'lda_method': ' msg,extract_header,blockingkernelclient,complete,history,', 'lsi_word': ' msg,extract,header,test,kernel,', 'lsi_method': ' msg,extract_header,blockingkernelclient,asynckernelclient,comm_info,', 'spm_method': ' ', 'text_summary': "Tab complete text in the kernel's namespace. message format. Given a message or header, return the header. Ask the kernel whether some code is complete and ready to execute.", 'files_count': 5, 'files': ['client.py', 'test_adapter.py', 'session.py', 'test_session.py', 'manager.py'], 'execution_path_count': 27, 'function_id_to_name_file': {'90': 'AsyncKernelClient(client.py)', '152': 'comm_info(client.py)', '534': 'msg(test_adapter.py)', '520': 'msg(test_adapter.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '116': 'BlockingKernelClient(client.py)', '169': 'shutdown(client.py)', '153': 'complete(client.py)', '161': 'history(client.py)', '539': 'test_input_request(test_adapter.py)', '537': 'test_display_data(test_adapter.py)', '543': 'test_kernel_info_reply(test_adapter.py)', '540': 'test_inspect_reply(test_adapter.py)', '542': 'test_inspect_request_token(test_adapter.py)', '541': 'test_inspect_request(test_adapter.py)', '535': 'test_complete_reply(test_adapter.py)', '536': 'test_complete_request(test_adapter.py)', '538': 'test_execute_request(test_adapter.py)', '545': 'test_rename_type(test_adapter.py)', '546': 'test_same_version(test_adapter.py)', '544': 'test_no_adapt(test_adapter.py)', '695': 'test_send_raw(test_session.py)', '694': 'test_send(test_session.py)', '692': 'test_feed_identities(test_session.py)', '696': 'test_serialize(test_session.py)', '693': 'test_msg(test_session.py)', '328': 'interrupt_kernel(manager.py)', '166': 'is_complete(client.py)'}}, {'key': 469, 'parent': 1698, 'tfidf_word': 'EP: 469, Name: start_channels &rarr; kernel_info &rarr; msg &rarr; msg &rarr; extract_header', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 549, 'parent': 1698, 'tfidf_word': 'EP: 549, Name: AsyncKernelClient &rarr; kernel_info &rarr; msg &rarr; msg &rarr; extract_header', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 893, 'parent': 1736, 'tfidf_word': 'EP: 893, Name: execute &rarr; execute &rarr; msg &rarr; msg &rarr; extract_header', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1716, 'parent': 1736, 'tfidf_word': 'client execute extract header kernel async blocking msg ', 'tfidf_method': 'execute extract_header msg msg BlockingKernelClient AsyncKernelClient ', 'lda_word': ' msg,client,execute,kernel,header,', 'lda_method': ' msg,extract_header,execute,blockingkernelclient,asynckernelclient,', 'lsi_word': ' msg,header,execute,extract,kernel,', 'lsi_method': ' msg,extract_header,execute,blockingkernelclient,asynckernelclient,', 'spm_method': ' ', 'text_summary': '', 'files_count': 3, 'files': ['client.py', 'test_adapter.py', 'session.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'90': 'AsyncKernelClient(client.py)', '155': 'execute(client.py)', '520': 'msg(test_adapter.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '116': 'BlockingKernelClient(client.py)'}}, {'key': 1713, 'parent': 2316, 'tfidf_word': 'client extract header inspect kernel async blocking msg ', 'tfidf_method': 'inspect extract_header msg msg BlockingKernelClient AsyncKernelClient ', 'lda_word': ' msg,client,extract,kernel,inspect,', 'lda_method': ' msg,extract_header,inspect,blockingkernelclient,asynckernelclient,', 'lsi_word': ' msg,inspect,extract,client,kernel,', 'lsi_method': ' msg,extract_header,inspect,blockingkernelclient,asynckernelclient,', 'spm_method': ' ', 'text_summary': '', 'files_count': 3, 'files': ['client.py', 'test_adapter.py', 'session.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'90': 'AsyncKernelClient(client.py)', '163': 'inspect(client.py)', '520': 'msg(test_adapter.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '116': 'BlockingKernelClient(client.py)'}}, {'key': 2314, 'parent': 2316, 'tfidf_word': 'adapt input type identity found feed display data interrupt version ', 'tfidf_method': 'is_complete test_input_request test_serialize test_execute_reply test_display_data test_complete_request test_complete_reply interrupt_kernel test_no_adapt test_execute_request ', 'lda_word': ' msg,header,extract,test,client,', 'lda_method': ' msg,extract_header,test_rename_type,test_execute_reply,blockingkernelclient,', 'lsi_word': ' msg,header,extract,test,kernel,', 'lsi_method': ' msg,extract_header,asynckernelclient,blockingkernelclient,comm_info,', 'spm_method': ' ', 'text_summary': "Tab complete text in the kernel's namespace. Given a message or header, return the header. Ask the kernel whether some code is complete and ready to execute.", 'files_count': 5, 'files': ['client.py', 'test_adapter.py', 'session.py', 'test_session.py', 'manager.py'], 'execution_path_count': 28, 'function_id_to_name_file': {'90': 'AsyncKernelClient(client.py)', '152': 'comm_info(client.py)', '520': 'msg(test_adapter.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '116': 'BlockingKernelClient(client.py)', '169': 'shutdown(client.py)', '153': 'complete(client.py)', '161': 'history(client.py)', '524': 'test_execute_reply(test_adapter.py)', '525': 'test_execute_request(test_adapter.py)', '532': 'test_rename_type(test_adapter.py)', '528': 'test_no_adapt(test_adapter.py)', '533': 'test_same_version(test_adapter.py)', '695': 'test_send_raw(test_session.py)', '692': 'test_feed_identities(test_session.py)', '694': 'test_send(test_session.py)', '693': 'test_msg(test_session.py)', '696': 'test_serialize(test_session.py)', '328': 'interrupt_kernel(manager.py)', '166': 'is_complete(client.py)', '526': 'test_input_request(test_adapter.py)', '523': 'test_display_data(test_adapter.py)', '527': 'test_kernel_info_reply(test_adapter.py)', '530': 'test_object_info_reply_not_found(test_adapter.py)', '531': 'test_object_info_request(test_adapter.py)', '529': 'test_object_info_reply(test_adapter.py)', '522': 'test_complete_request(test_adapter.py)', '521': 'test_complete_reply(test_adapter.py)'}}, {'key': 1302, 'parent': 1560, 'tfidf_word': 'EP: 1302, Name: do_execute &rarr; poll &rarr; restart_kernel &rarr; shutdown_kernel &rarr; request_shutdown &rarr; msg &rarr; msg_header &rarr; msg_id', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1308, 'parent': 1560, 'tfidf_word': 'EP: 1308, Name: do_execute &rarr; poll &rarr; restart_kernel &rarr; shutdown_kernel &rarr; request_shutdown &rarr; send &rarr; msg &rarr; msg_header &rarr; msg_id', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1451, 'parent': 1789, 'tfidf_word': 'execute header id poll request restart kernel shutdown msg ', 'tfidf_method': 'poll request_shutdown restart_kernel shutdown_kernel msg msg_header msg_id do_execute msg msg ', 'lda_word': ' msg,kernel,shutdown,execute,request,', 'lda_method': ' msg,msg_id,do_execute,shutdown_kernel,request_shutdown,', 'lsi_word': ' msg,kernel,shutdown,poll,request,', 'lsi_method': ' msg,request_shutdown,msg_id,restart_kernel,shutdown_kernel,', 'spm_method': '  &#187; do_execute(signalkernel.py) &rarr; poll(restarter.py) &rarr; restart_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; poll(restarter.py) &rarr; restart_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; restart_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br>', 'text_summary': '', 'files_count': 5, 'files': ['signalkernel.py', 'restarter.py', 'manager.py', 'test_adapter.py', 'session.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'510': 'do_execute(signalkernel.py)', '236': 'poll(restarter.py)', '363': 'restart_kernel(manager.py)', '364': 'shutdown_kernel(manager.py)', '362': 'request_shutdown(manager.py)', '520': 'msg(test_adapter.py)', '476': 'msg(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '534': 'msg(test_adapter.py)'}}, {'key': 1452, 'parent': 1789, 'tfidf_word': 'execute header id poll request restart kernel shutdown msg ', 'tfidf_method': 'poll request_shutdown restart_kernel shutdown_kernel msg msg_header msg_id do_execute msg msg ', 'lda_word': ' msg,shutdown,kernel,restart,request,', 'lda_method': ' msg,msg_header,msg_id,request_shutdown,shutdown_kernel,', 'lsi_word': ' msg,shutdown,kernel,restart,request,', 'lsi_method': ' msg,do_execute,request_shutdown,restart_kernel,msg_id,', 'spm_method': '  &#187; do_execute(signalkernel.py) &rarr; poll(restarter.py) &rarr; restart_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; poll(restarter.py) &rarr; restart_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; restart_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br>', 'text_summary': '', 'files_count': 5, 'files': ['signalkernel.py', 'restarter.py', 'manager.py', 'test_adapter.py', 'session.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'510': 'do_execute(signalkernel.py)', '236': 'poll(restarter.py)', '363': 'restart_kernel(manager.py)', '364': 'shutdown_kernel(manager.py)', '362': 'request_shutdown(manager.py)', '534': 'msg(test_adapter.py)', '476': 'msg(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '520': 'msg(test_adapter.py)'}}, {'key': 1601, 'parent': 1978, 'tfidf_word': 'execute extract header msg poll request restart send kernel shutdown ', 'tfidf_method': 'poll request_shutdown restart_kernel shutdown_kernel extract_header msg do_execute send ', 'lda_word': ' shutdown,kernel,request,restart,header,', 'lda_method': ' request_shutdown,restart_kernel,shutdown_kernel,do_execute,poll,', 'lsi_word': ' kernel,shutdown,extract,request,header,', 'lsi_method': ' do_execute,msg,extract_header,shutdown_kernel,poll,', 'spm_method': '  &#187; do_execute(signalkernel.py) &rarr; poll(restarter.py) &rarr; restart_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br> &#187; poll(restarter.py) &rarr; restart_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br>', 'text_summary': 'Attempts to stop the kernel process cleanly. Pass a message to the ZMQ socket to send.', 'files_count': 4, 'files': ['signalkernel.py', 'restarter.py', 'manager.py', 'session.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'510': 'do_execute(signalkernel.py)', '236': 'poll(restarter.py)', '363': 'restart_kernel(manager.py)', '364': 'shutdown_kernel(manager.py)', '362': 'request_shutdown(manager.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '480': 'send(session.py)'}}, {'key': 1974, 'parent': 1978, 'tfidf_word': 'execute extract header poll request restart kernel shutdown msg ', 'tfidf_method': 'poll request_shutdown restart_kernel shutdown_kernel extract_header msg do_execute msg msg ', 'lda_word': ' shutdown,msg,extract,kernel,poll,', 'lda_method': ' msg,extract_header,do_execute,restart_kernel,poll,', 'lsi_word': ' msg,kernel,shutdown,execute,extract,', 'lsi_method': ' msg,do_execute,restart_kernel,poll,request_shutdown,', 'spm_method': '  &#187; do_execute(signalkernel.py) &rarr; poll(restarter.py) &rarr; restart_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br> &#187; poll(restarter.py) &rarr; restart_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br> &#187; restart_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br>', 'text_summary': 'Given a message or header, return the header. Attempts to stop the kernel process cleanly. Restarts a kernel with the arguments that were used to launch it.', 'files_count': 5, 'files': ['signalkernel.py', 'restarter.py', 'manager.py', 'test_adapter.py', 'session.py'], 'execution_path_count': 4, 'function_id_to_name_file': {'510': 'do_execute(signalkernel.py)', '236': 'poll(restarter.py)', '363': 'restart_kernel(manager.py)', '364': 'shutdown_kernel(manager.py)', '362': 'request_shutdown(manager.py)', '520': 'msg(test_adapter.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '534': 'msg(test_adapter.py)'}}, {'key': 1764, 'parent': 2256, 'tfidf_word': 'request restart send kernel shutdown adapt message serialize sign utcnow ', 'tfidf_method': 'request_shutdown restart_kernel shutdown_kernel send do_execute Message utcnow serialize sign adapt ', 'lda_word': ' kernel,shutdown,poll,restart,request,', 'lda_method': ' restart_kernel,shutdown_kernel,request_shutdown,poll,send,', 'lsi_word': ' shutdown,kernel,execute,poll,restart,', 'lsi_method': ' send,restart_kernel,poll,shutdown_kernel,do_execute,', 'spm_method': '  &#187; do_execute(signalkernel.py) &rarr; poll(restarter.py) &rarr; restart_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) &rarr; send(session.py) . <br>', 'text_summary': 'Restarts a kernel with the arguments that were used to launch it. Pass a message to the ZMQ socket to send.', 'files_count': 5, 'files': ['signalkernel.py', 'restarter.py', 'manager.py', 'session.py', 'adapter.py'], 'execution_path_count': 3, 'function_id_to_name_file': {'510': 'do_execute(signalkernel.py)', '236': 'poll(restarter.py)', '363': 'restart_kernel(manager.py)', '364': 'shutdown_kernel(manager.py)', '362': 'request_shutdown(manager.py)', '480': 'send(session.py)', '50': 'adapt(adapter.py)', '450': 'utcnow(session.py)', '482': 'serialize(session.py)', '483': 'sign(session.py)', '440': 'Message(session.py)'}}, {'key': 2002, 'parent': 2256, 'tfidf_word': 'create make url kernel shutdown control thread send connect socket ', 'tfidf_method': 'restart_kernel shutdown_kernel do_execute _create_connected_socket _make_url send _connect_control_socket send thread_send send ', 'lda_word': ' shutdown,kernel,connect,socket,make,', 'lda_method': ' poll,shutdown_kernel,request_shutdown,do_execute,restart_kernel,', 'lsi_word': ' kernel,shutdown,request,poll,restart,', 'lsi_method': ' request_shutdown,shutdown_kernel,do_execute,restart_kernel,poll,', 'spm_method': '  &#187; do_execute(signalkernel.py) &rarr; poll(restarter.py) &rarr; restart_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) &rarr; _create_connected_socket(connect.py) &rarr; _make_url(connect.py) . <br> &#187; poll(restarter.py) &rarr; restart_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) &rarr; _create_connected_socket(connect.py) &rarr; _make_url(connect.py) . <br>', 'text_summary': 'Send a shutdown request via control channel. Pass a message to the ZMQ socket to send.', 'files_count': 6, 'files': ['signalkernel.py', 'restarter.py', 'manager.py', 'connect.py', 'threaded.py', 'channels.py'], 'execution_path_count': 5, 'function_id_to_name_file': {'510': 'do_execute(signalkernel.py)', '236': 'poll(restarter.py)', '363': 'restart_kernel(manager.py)', '364': 'shutdown_kernel(manager.py)', '362': 'request_shutdown(manager.py)', '338': '_connect_control_socket(manager.py)', '192': '_create_connected_socket(connect.py)', '196': '_make_url(connect.py)', '734': 'send(threaded.py)', '738': 'thread_send(threaded.py)', '88': 'send(channels.py)', '114': 'send(channels.py)'}}, {'key': 1293, 'parent': 1579, 'tfidf_word': 'EP: 1293, Name: do_execute &rarr; poll &rarr; restart_kernel &rarr; shutdown_kernel &rarr; _kill_kernel &rarr; signal_kernel &rarr; has_kernel &rarr; _launch_kernel', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1323, 'parent': 1579, 'tfidf_word': 'EP: 1323, Name: do_execute &rarr; poll &rarr; restart_kernel &rarr; shutdown_kernel &rarr; finish_shutdown &rarr; _kill_kernel &rarr; signal_kernel &rarr; has_kernel &rarr; _launch_kernel', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1597, 'parent': 1985, 'tfidf_word': 'execute finish launch poll restart alive shutdown kernel ', 'tfidf_method': 'poll _launch_kernel finish_shutdown has_kernel restart_kernel shutdown_kernel do_execute is_alive ', 'lda_word': ' kernel,shutdown,execute,restart,launch,', 'lda_method': ' has_kernel,restart_kernel,do_execute,poll,shutdown_kernel,', 'lsi_word': ' kernel,shutdown,poll,finish,launch,', 'lsi_method': ' do_execute,has_kernel,finish_shutdown,shutdown_kernel,launch_kernel,', 'spm_method': '  &#187; do_execute(signalkernel.py) &rarr; poll(restarter.py) &rarr; restart_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; finish_shutdown(manager.py) &rarr; has_kernel(manager.py) &rarr; _launch_kernel(manager.py) . <br> &#187; poll(restarter.py) &rarr; restart_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; finish_shutdown(manager.py) &rarr; has_kernel(manager.py) &rarr; _launch_kernel(manager.py) . <br>', 'text_summary': 'actually launch the kernel. Restarts a kernel with the arguments that were used to launch it.', 'files_count': 3, 'files': ['signalkernel.py', 'restarter.py', 'manager.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'510': 'do_execute(signalkernel.py)', '236': 'poll(restarter.py)', '363': 'restart_kernel(manager.py)', '364': 'shutdown_kernel(manager.py)', '352': 'finish_shutdown(manager.py)', '354': 'has_kernel(manager.py)', '347': '_launch_kernel(manager.py)', '357': 'is_alive(manager.py)'}}, {'key': 1604, 'parent': 1985, 'tfidf_word': 'execute kill launch poll restart finish shutdown kernel ', 'tfidf_method': 'poll _kill_kernel _launch_kernel has_kernel restart_kernel shutdown_kernel do_execute finish_shutdown ', 'lda_word': ' kernel,shutdown,kill,launch,execute,', 'lda_method': ' kill_kernel,shutdown_kernel,poll,has_kernel,do_execute,', 'lsi_word': ' kernel,shutdown,restart,launch,execute,', 'lsi_method': ' poll,kill_kernel,shutdown_kernel,has_kernel,launch_kernel,', 'spm_method': '  &#187; do_execute(signalkernel.py) &rarr; poll(restarter.py) &rarr; restart_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; _kill_kernel(manager.py) &rarr; has_kernel(manager.py) &rarr; _launch_kernel(manager.py) . <br> &#187; poll(restarter.py) &rarr; restart_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; _kill_kernel(manager.py) &rarr; has_kernel(manager.py) &rarr; _launch_kernel(manager.py) . <br>', 'text_summary': "actually launch the kernel. Wait for kernel shutdown, then kill process if it doesn't shutdown.", 'files_count': 3, 'files': ['signalkernel.py', 'restarter.py', 'manager.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'510': 'do_execute(signalkernel.py)', '236': 'poll(restarter.py)', '363': 'restart_kernel(manager.py)', '364': 'shutdown_kernel(manager.py)', '346': '_kill_kernel(manager.py)', '354': 'has_kernel(manager.py)', '347': '_launch_kernel(manager.py)', '352': 'finish_shutdown(manager.py)'}}, {'key': 1296, 'parent': 1600, 'tfidf_word': 'EP: 1296, Name: do_execute &rarr; poll &rarr; restart_kernel &rarr; shutdown_kernel &rarr; cleanup_resources &rarr; cleanup_ipc_files &rarr; ports', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1300, 'parent': 1600, 'tfidf_word': 'EP: 1300, Name: do_execute &rarr; poll &rarr; restart_kernel &rarr; shutdown_kernel &rarr; cleanup &rarr; cleanup_resources &rarr; cleanup_ipc_files &rarr; ports', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1297, 'parent': 1996, 'tfidf_word': 'EP: 1297, Name: do_execute &rarr; poll &rarr; restart_kernel &rarr; shutdown_kernel &rarr; stop_restarter', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1785, 'parent': 1996, 'tfidf_word': 'connection execute file poll resource restart shutdown kernel cleanup ', 'tfidf_method': 'cleanup_connection_file poll cleanup_resources restart_kernel shutdown_kernel do_execute cleanup ', 'lda_word': ' cleanup,kernel,resource,connection,file,', 'lda_method': ' shutdown_kernel,cleanup_resources,poll,do_execute,cleanup_connection_file,', 'lsi_word': ' cleanup,kernel,file,poll,resource,', 'lsi_method': ' shutdown_kernel,poll,restart_kernel,do_execute,cleanup_resources,', 'spm_method': '  &#187; do_execute(signalkernel.py) &rarr; poll(restarter.py) &rarr; restart_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; cleanup_resources(manager.py) &rarr; cleanup_connection_file(connect.py) . <br>', 'text_summary': '', 'files_count': 4, 'files': ['signalkernel.py', 'restarter.py', 'manager.py', 'connect.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'510': 'do_execute(signalkernel.py)', '236': 'poll(restarter.py)', '363': 'restart_kernel(manager.py)', '364': 'shutdown_kernel(manager.py)', '350': 'cleanup_resources(manager.py)', '200': 'cleanup_connection_file(connect.py)', '349': 'cleanup(manager.py)'}}, {'key': 1330, 'parent': 2056, 'tfidf_word': 'EP: 1330, Name: do_execute &rarr; poll &rarr; is_alive', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2055, 'parent': 2056, 'tfidf_word': 'execute poll alive callback fire ', 'tfidf_method': 'poll do_execute is_alive _fire_callbacks ', 'lda_word': ' poll,execute,alive,callback,fire,', 'lda_method': ' poll,do_execute,is_alive,fire_callbacks,', 'lsi_word': ' poll,execute,fire,callback,alive,', 'lsi_method': ' do_execute,poll,fire_callbacks,is_alive,', 'spm_method': ' ', 'text_summary': 'Empty', 'files_count': 3, 'files': ['signalkernel.py', 'restarter.py', 'multikernelmanager.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'510': 'do_execute(signalkernel.py)', '236': 'poll(restarter.py)', '428': '_fire_callbacks(restarter.py)', '412': 'is_alive(multikernelmanager.py)'}}, {'key': 1327, 'parent': 2088, 'tfidf_word': 'EP: 1327, Name: do_execute &rarr; poll &rarr; is_alive', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2087, 'parent': 2088, 'tfidf_word': 'execute kernel poll restart ', 'tfidf_method': 'poll do_execute restart_kernel restart_kernel ', 'lda_word': ' execute,kernel,poll,restart,', 'lda_method': ' do_execute,poll,restart_kernel,', 'lsi_word': ' restart,execute,kernel,poll,', 'lsi_method': ' poll,restart_kernel,do_execute,', 'spm_method': ' ', 'text_summary': '', 'files_count': 4, 'files': ['signalkernel.py', 'restarter.py', 'multikernelmanager.py', 'managerabc.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'510': 'do_execute(signalkernel.py)', '236': 'poll(restarter.py)', '419': 'restart_kernel(multikernelmanager.py)', '375': 'restart_kernel(managerabc.py)'}}, {'key': 1279, 'parent': 2213, 'tfidf_word': 'EP: 1279, Name: do_execute &rarr; poll &rarr; stop', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2212, 'parent': 2213, 'tfidf_word': 'alive execute poll ', 'tfidf_method': 'poll do_execute is_alive is_alive ', 'lda_word': ' execute,poll,alive,', 'lda_method': ' do_execute,is_alive,poll,', 'lsi_word': ' execute,poll,alive,', 'lsi_method': ' is_alive,poll,do_execute,', 'spm_method': ' ', 'text_summary': '', 'files_count': 3, 'files': ['signalkernel.py', 'restarter.py', 'channels.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'510': 'do_execute(signalkernel.py)', '236': 'poll(restarter.py)', '86': 'is_alive(channels.py)', '112': 'is_alive(channels.py)'}}, {'key': 1598, 'parent': 1984, 'tfidf_word': 'port pre random record restart write cmd format start kernel ', 'tfidf_method': '_record_random_port_names write_connection_file poll pre_start_kernel restart_kernel start_kernel do_execute format_kernel_cmd ', 'lda_word': ' kernel,start,names,execute,write,', 'lda_method': ' poll,record_random_port_names,write_connection_file,do_execute,restart_kernel,', 'lsi_word': ' kernel,start,connection,random,restart,', 'lsi_method': ' record_random_port_names,pre_start_kernel,restart_kernel,start_kernel,write_connection_file,', 'spm_method': '  &#187; do_execute(signalkernel.py) &rarr; poll(restarter.py) &rarr; restart_kernel(manager.py) &rarr; start_kernel(manager.py) &rarr; pre_start_kernel(manager.py) &rarr; write_connection_file(connect.py) &rarr; _record_random_port_names(connect.py) . <br> &#187; poll(restarter.py) &rarr; restart_kernel(manager.py) &rarr; start_kernel(manager.py) &rarr; pre_start_kernel(manager.py) &rarr; write_connection_file(connect.py) &rarr; _record_random_port_names(connect.py) . <br>', 'text_summary': 'Prepares a kernel for startup in a separate process. Restarts a kernel with the arguments that were used to launch it.', 'files_count': 4, 'files': ['signalkernel.py', 'restarter.py', 'manager.py', 'connect.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'510': 'do_execute(signalkernel.py)', '236': 'poll(restarter.py)', '363': 'restart_kernel(manager.py)', '366': 'start_kernel(manager.py)', '360': 'pre_start_kernel(manager.py)', '212': 'write_connection_file(connect.py)', '197': '_record_random_port_names(connect.py)', '353': 'format_kernel_cmd(manager.py)'}}, {'key': 1599, 'parent': 1984, 'tfidf_word': 'cmd execute format poll pre restart n start spec kernel ', 'tfidf_method': 'poll format_kernel_cmd pre_start_kernel restart_kernel start_kernel do_execute KernelSpec kernel_spec from_ns ', 'lda_word': ' kernel,start,poll,cmd,pre,', 'lda_method': ' do_execute,pre_start_kernel,poll,format_kernel_cmd,restart_kernel,', 'lsi_word': ' kernel,start,spec,format,cmd,', 'lsi_method': ' poll,restart_kernel,start_kernel,format_kernel_cmd,pre_start_kernel,', 'spm_method': '  &#187; do_execute(signalkernel.py) &rarr; poll(restarter.py) &rarr; restart_kernel(manager.py) &rarr; start_kernel(manager.py) &rarr; pre_start_kernel(manager.py) &rarr; format_kernel_cmd(manager.py) . <br>', 'text_summary': "{connection_file})   {connection_file}) Get the key out of ns if it's there, otherwise no change.", 'files_count': 4, 'files': ['signalkernel.py', 'restarter.py', 'manager.py', 'kernelspec.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'510': 'do_execute(signalkernel.py)', '236': 'poll(restarter.py)', '363': 'restart_kernel(manager.py)', '366': 'start_kernel(manager.py)', '360': 'pre_start_kernel(manager.py)', '353': 'format_kernel_cmd(manager.py)', '369': 'from_ns(manager.py)', '358': 'kernel_spec(manager.py)', '253': 'KernelSpec(kernelspec.py)'}}, {'key': 1291, 'parent': 1986, 'tfidf_word': 'EP: 1291, Name: do_execute &rarr; poll &rarr; restart_kernel &rarr; start_kernel &rarr; _launch_kernel', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1577, 'parent': 1986, 'tfidf_word': 'poll pre restart ip local start env get substitution kernel ', 'tfidf_method': 'poll pre_start_kernel restart_kernel start_kernel do_execute is_local_ip local_ips _get_env_substitutions ', 'lda_word': ' kernel,start,pre,poll,local,', 'lda_method': ' do_execute,pre_start_kernel,restart_kernel,poll,start_kernel,', 'lsi_word': ' kernel,start,restart,execute,poll,', 'lsi_method': ' start_kernel,pre_start_kernel,poll,restart_kernel,do_execute,', 'spm_method': ' ', 'text_summary': 'Prepares a kernel for startup in a separate process. return the IP addresses that point to this machine. does `ip` point to this machine?.', 'files_count': 4, 'files': ['signalkernel.py', 'restarter.py', 'manager.py', 'localinterfaces.py'], 'execution_path_count': 3, 'function_id_to_name_file': {'510': 'do_execute(signalkernel.py)', '236': 'poll(restarter.py)', '363': 'restart_kernel(manager.py)', '366': 'start_kernel(manager.py)', '360': 'pre_start_kernel(manager.py)', '341': '_get_env_substitutions(manager.py)', '314': 'local_ips(localinterfaces.py)', '312': 'is_local_ip(localinterfaces.py)'}}, {'key': 1282, 'parent': 1888, 'tfidf_word': 'EP: 1282, Name: do_execute &rarr; poll &rarr; restart_kernel &rarr; start_kernel &rarr; post_start_kernel &rarr; _connect_control_socket &rarr; _create_connected_socket &rarr; _make_url', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1283, 'parent': 1888, 'tfidf_word': 'EP: 1283, Name: do_execute &rarr; poll &rarr; restart_kernel &rarr; start_kernel &rarr; post_start_kernel &rarr; start_restarter', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1465, 'parent': 1972, 'tfidf_word': 'default execute extract header hook input interactive stdin start msg ', 'tfidf_method': '_stdin_hook_default execute_interactive input start start extract_header msg msg msg ', 'lda_word': ' msg,execute,start,extract,interactive,', 'lda_method': ' msg,start,execute_interactive,input,stdin_hook_default,', 'lsi_word': ' msg,start,default,interactive,hook,', 'lsi_method': ' msg,start,extract_header,stdin_hook_default,input,', 'spm_method': '  &#187; start(kernelspecapp.py) &rarr; start(runapp.py) &rarr; execute_interactive(client.py) &rarr; _stdin_hook_default(client.py) &rarr; input(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br> &#187; start(runapp.py) &rarr; execute_interactive(client.py) &rarr; _stdin_hook_default(client.py) &rarr; input(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br> &#187; execute_interactive(client.py) &rarr; _stdin_hook_default(client.py) &rarr; input(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br>', 'text_summary': 'Send a string of raw input to the kernel. Start the polling of the kernel.', 'files_count': 5, 'files': ['kernelspecapp.py', 'runapp.py', 'client.py', 'test_adapter.py', 'session.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'291': 'start(kernelspecapp.py)', '439': 'start(runapp.py)', '122': 'execute_interactive(client.py)', '121': '_stdin_hook_default(client.py)', '162': 'input(client.py)', '520': 'msg(test_adapter.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '534': 'msg(test_adapter.py)'}}, {'key': 1466, 'parent': 1972, 'tfidf_word': 'default execute extract header hook input interactive stdin start msg ', 'tfidf_method': '_stdin_hook_default execute_interactive input start start extract_header msg msg msg ', 'lda_word': ' msg,start,interactive,header,default,', 'lda_method': ' msg,execute_interactive,extract_header,start,stdin_hook_default,', 'lsi_word': ' msg,start,execute,hook,stdin,', 'lsi_method': ' msg,start,stdin_hook_default,extract_header,input,', 'spm_method': '  &#187; start(kernelspecapp.py) &rarr; start(runapp.py) &rarr; execute_interactive(client.py) &rarr; _stdin_hook_default(client.py) &rarr; input(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br> &#187; start(runapp.py) &rarr; execute_interactive(client.py) &rarr; _stdin_hook_default(client.py) &rarr; input(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br> &#187; execute_interactive(client.py) &rarr; _stdin_hook_default(client.py) &rarr; input(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br>', 'text_summary': 'Send a string of raw input to the kernel. Start the polling of the kernel.', 'files_count': 5, 'files': ['kernelspecapp.py', 'runapp.py', 'client.py', 'test_adapter.py', 'session.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'291': 'start(kernelspecapp.py)', '439': 'start(runapp.py)', '122': 'execute_interactive(client.py)', '121': '_stdin_hook_default(client.py)', '162': 'input(client.py)', '534': 'msg(test_adapter.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '520': 'msg(test_adapter.py)'}}, {'key': 1588, 'parent': 2225, 'tfidf_word': 'execute header hook input interactive stdin extract id start msg ', 'tfidf_method': '_stdin_hook_default execute_interactive input start start msg extract_header msg_header msg_id ', 'lda_word': ' msg,start,default,hook,stdin,', 'lda_method': ' execute_interactive,start,stdin_hook_default,input,msg,', 'lsi_word': ' msg,start,interactive,hook,stdin,', 'lsi_method': ' start,input,stdin_hook_default,msg,execute_interactive,', 'spm_method': '  &#187; start(kernelspecapp.py) &rarr; start(runapp.py) &rarr; execute_interactive(client.py) &rarr; _stdin_hook_default(client.py) &rarr; input(client.py) &rarr; msg(session.py) . <br>', 'text_summary': 'Send a string of raw input to the kernel. Start the polling of the kernel.', 'files_count': 4, 'files': ['kernelspecapp.py', 'runapp.py', 'client.py', 'session.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'291': 'start(kernelspecapp.py)', '439': 'start(runapp.py)', '122': 'execute_interactive(client.py)', '121': '_stdin_hook_default(client.py)', '162': 'input(client.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)'}}, {'key': 1787, 'parent': 2225, 'tfidf_word': 'default execute header hook id input interactive stdin start msg ', 'tfidf_method': '_stdin_hook_default execute_interactive input start start msg msg_header msg_id msg msg ', 'lda_word': ' msg,start,input,stdin,header,', 'lda_method': ' msg,start,input,msg_id,execute_interactive,', 'lsi_word': ' msg,start,header,input,stdin,', 'lsi_method': ' msg,start,msg_header,stdin_hook_default,msg_id,', 'spm_method': '  &#187; start(kernelspecapp.py) &rarr; start(runapp.py) &rarr; execute_interactive(client.py) &rarr; _stdin_hook_default(client.py) &rarr; input(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; start(runapp.py) &rarr; execute_interactive(client.py) &rarr; _stdin_hook_default(client.py) &rarr; input(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; execute_interactive(client.py) &rarr; _stdin_hook_default(client.py) &rarr; input(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; _stdin_hook_default(client.py) &rarr; input(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br>', 'text_summary': 'Start the polling of the kernel. Execute code in the kernel interactively.', 'files_count': 5, 'files': ['kernelspecapp.py', 'runapp.py', 'client.py', 'test_adapter.py', 'session.py'], 'execution_path_count': 4, 'function_id_to_name_file': {'291': 'start(kernelspecapp.py)', '439': 'start(runapp.py)', '122': 'execute_interactive(client.py)', '121': '_stdin_hook_default(client.py)', '162': 'input(client.py)', '520': 'msg(test_adapter.py)', '476': 'msg(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '534': 'msg(test_adapter.py)'}}, {'key': 233, 'parent': 1678, 'tfidf_word': 'EP: 233, Name: start &rarr; start &rarr; execute_interactive &rarr; _stdin_hook_default &rarr; msg_ready', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 234, 'parent': 1678, 'tfidf_word': 'EP: 234, Name: start &rarr; start &rarr; execute_interactive &rarr; _stdin_hook_default &rarr; msg_ready', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1677, 'parent': 2298, 'tfidf_word': 'execute get interactive msg recv reply control shell start ', 'tfidf_method': '_recv_reply execute_interactive start start get_control_msg get_shell_msg ', 'lda_word': ' start,reply,recv,get,msg,', 'lda_method': ' start,execute_interactive,recv_reply,get_shell_msg,get_control_msg,', 'lsi_word': ' start,execute,get,recv,reply,', 'lsi_method': ' start,execute_interactive,recv_reply,get_shell_msg,get_control_msg,', 'spm_method': ' ', 'text_summary': 'Start the polling of the kernel. Execute code in the kernel interactively.', 'files_count': 3, 'files': ['kernelspecapp.py', 'runapp.py', 'client.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'291': 'start(kernelspecapp.py)', '439': 'start(runapp.py)', '122': 'execute_interactive(client.py)', '120': '_recv_reply(client.py)', '156': 'get_control_msg(client.py)', '158': 'get_shell_msg(client.py)'}}, {'key': 2046, 'parent': 2298, 'tfidf_word': 'start default get msg recv kernel reqrep wrap hook output ', 'tfidf_method': 'is_alive is_alive is_alive wrapped _output_hook_kernel reqrep is_alive get_msg get_msg is_alive ', 'lda_word': ' start,execute,interactive,alive,hook,', 'lda_method': ' start,execute_interactive,recv,get_msg,wrap,', 'lsi_word': ' start,interactive,execute,alive,hook,', 'lsi_method': ' start,execute_interactive,is_alive,get_msg,recv,', 'spm_method': ' ', 'text_summary': 'Start the polling of the kernel. Output hook when running inside an IPython kernel. Default hook for redisplaying plain-text output. Execute code in the kernel interactively.', 'files_count': 8, 'files': ['kernelspecapp.py', 'runapp.py', 'client.py', 'channels.py', 'managerabc.py', 'multikernelmanager.py', 'channelsabc.py', 'threaded.py'], 'execution_path_count': 11, 'function_id_to_name_file': {'291': 'start(kernelspecapp.py)', '439': 'start(runapp.py)', '122': 'execute_interactive(client.py)', '110': 'get_msg(channels.py)', '108': '_recv(channels.py)', '84': 'get_msg(channels.py)', '82': '_recv(channels.py)', '119': '_output_hook_kernel(client.py)', '118': '_output_hook_default(client.py)', '117': 'reqrep(client.py)', '124': 'wrapped(client.py)', '112': 'is_alive(channels.py)', '373': 'is_alive(managerabc.py)', '412': 'is_alive(multikernelmanager.py)', '140': 'is_alive(channelsabc.py)', '86': 'is_alive(channels.py)', '732': 'is_alive(threaded.py)'}}, {'key': 1467, 'parent': 1973, 'tfidf_word': 'default execute extract header hook input interactive stdin start msg ', 'tfidf_method': 'input start start extract_header msg msg _stdin_hook_default execute_interactive msg ', 'lda_word': ' msg,start,stdin,execute,hook,', 'lda_method': ' msg,extract_header,start,stdin_hook_default,execute_interactive,', 'lsi_word': ' msg,start,hook,extract,stdin,', 'lsi_method': ' msg,start,extract_header,execute_interactive,input,', 'spm_method': '  &#187; start(kernelspecapp.py) &rarr; start(runapp.py) &rarr; execute_interactive(client.py) &rarr; _stdin_hook_default(client.py) &rarr; input(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br> &#187; start(runapp.py) &rarr; execute_interactive(client.py) &rarr; _stdin_hook_default(client.py) &rarr; input(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br> &#187; execute_interactive(client.py) &rarr; _stdin_hook_default(client.py) &rarr; input(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br>', 'text_summary': 'Send a string of raw input to the kernel. Execute code in the kernel interactively.', 'files_count': 5, 'files': ['kernelspecapp.py', 'runapp.py', 'client.py', 'test_adapter.py', 'session.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'291': 'start(kernelspecapp.py)', '439': 'start(runapp.py)', '97': 'execute_interactive(client.py)', '96': '_stdin_hook_default(client.py)', '162': 'input(client.py)', '520': 'msg(test_adapter.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '534': 'msg(test_adapter.py)'}}, {'key': 1468, 'parent': 1973, 'tfidf_word': 'default execute extract header hook input interactive stdin start msg ', 'tfidf_method': 'input start start extract_header msg msg _stdin_hook_default execute_interactive msg ', 'lda_word': ' msg,start,hook,interactive,stdin,', 'lda_method': ' msg,start,stdin_hook_default,extract_header,execute_interactive,', 'lsi_word': ' msg,start,stdin,extract,execute,', 'lsi_method': ' msg,start,input,stdin_hook_default,extract_header,', 'spm_method': '  &#187; start(kernelspecapp.py) &rarr; start(runapp.py) &rarr; execute_interactive(client.py) &rarr; _stdin_hook_default(client.py) &rarr; input(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br> &#187; start(runapp.py) &rarr; execute_interactive(client.py) &rarr; _stdin_hook_default(client.py) &rarr; input(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br> &#187; execute_interactive(client.py) &rarr; _stdin_hook_default(client.py) &rarr; input(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br>', 'text_summary': 'Send a string of raw input to the kernel. Start the polling of the kernel.', 'files_count': 5, 'files': ['kernelspecapp.py', 'runapp.py', 'client.py', 'test_adapter.py', 'session.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'291': 'start(kernelspecapp.py)', '439': 'start(runapp.py)', '97': 'execute_interactive(client.py)', '96': '_stdin_hook_default(client.py)', '162': 'input(client.py)', '534': 'msg(test_adapter.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '520': 'msg(test_adapter.py)'}}, {'key': 1589, 'parent': 2226, 'tfidf_word': 'execute header hook input interactive stdin extract id start msg ', 'tfidf_method': 'input start start msg _stdin_hook_default execute_interactive extract_header msg_header msg_id ', 'lda_word': ' msg,execute,interactive,stdin,start,', 'lda_method': ' start,msg,stdin_hook_default,msg_header,input,', 'lsi_word': ' msg,start,default,input,header,', 'lsi_method': ' start,msg,stdin_hook_default,execute_interactive,input,', 'spm_method': '  &#187; start(kernelspecapp.py) &rarr; start(runapp.py) &rarr; execute_interactive(client.py) &rarr; _stdin_hook_default(client.py) &rarr; input(client.py) &rarr; msg(session.py) . <br>', 'text_summary': 'Send a string of raw input to the kernel. Start the polling of the kernel.', 'files_count': 4, 'files': ['kernelspecapp.py', 'runapp.py', 'client.py', 'session.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'291': 'start(kernelspecapp.py)', '439': 'start(runapp.py)', '97': 'execute_interactive(client.py)', '96': '_stdin_hook_default(client.py)', '162': 'input(client.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)'}}, {'key': 1788, 'parent': 2226, 'tfidf_word': 'default execute header hook id input interactive stdin start msg ', 'tfidf_method': 'input start start msg msg_header msg_id _stdin_hook_default execute_interactive msg msg ', 'lda_word': ' msg,hook,execute,start,interactive,', 'lda_method': ' start,msg,stdin_hook_default,msg_header,msg_id,', 'lsi_word': ' msg,start,execute,input,stdin,', 'lsi_method': ' msg,start,msg_header,stdin_hook_default,msg_id,', 'spm_method': '  &#187; start(kernelspecapp.py) &rarr; start(runapp.py) &rarr; execute_interactive(client.py) &rarr; _stdin_hook_default(client.py) &rarr; input(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; start(runapp.py) &rarr; execute_interactive(client.py) &rarr; _stdin_hook_default(client.py) &rarr; input(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; execute_interactive(client.py) &rarr; _stdin_hook_default(client.py) &rarr; input(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; _stdin_hook_default(client.py) &rarr; input(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br>', 'text_summary': 'Start the polling of the kernel. Execute code in the kernel interactively.', 'files_count': 5, 'files': ['kernelspecapp.py', 'runapp.py', 'client.py', 'test_adapter.py', 'session.py'], 'execution_path_count': 4, 'function_id_to_name_file': {'291': 'start(kernelspecapp.py)', '439': 'start(runapp.py)', '97': 'execute_interactive(client.py)', '96': '_stdin_hook_default(client.py)', '162': 'input(client.py)', '520': 'msg(test_adapter.py)', '476': 'msg(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '534': 'msg(test_adapter.py)'}}, {'key': 1877, 'parent': 2224, 'tfidf_word': 'execute interactive reply shell get msg recv start ', 'tfidf_method': 'get_shell_msg start start _recv_reply execute_interactive _recv get_msg _recv get_msg ', 'lda_word': ' msg,get,recv,shell,start,', 'lda_method': ' start,execute_interactive,get_shell_msg,get_msg,recv,', 'lsi_word': ' recv,msg,start,get,execute,', 'lsi_method': ' start,execute_interactive,get_shell_msg,recv,recv_reply,', 'spm_method': ' ', 'text_summary': 'Start the polling of the kernel. Get a message from the shell channel. Execute code in the kernel interactively.', 'files_count': 4, 'files': ['kernelspecapp.py', 'runapp.py', 'client.py', 'channels.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'291': 'start(kernelspecapp.py)', '439': 'start(runapp.py)', '97': 'execute_interactive(client.py)', '95': '_recv_reply(client.py)', '100': 'get_shell_msg(client.py)', '84': 'get_msg(channels.py)', '82': '_recv(channels.py)', '110': 'get_msg(channels.py)', '108': '_recv(channels.py)'}}, {'key': 1878, 'parent': 2224, 'tfidf_word': 'control execute interactive reply get msg recv start ', 'tfidf_method': 'start start _recv_reply execute_interactive get_control_msg _recv get_msg _recv get_msg ', 'lda_word': ' recv,msg,get,start,control,', 'lda_method': ' start,get_msg,recv_reply,recv,execute_interactive,', 'lsi_word': ' start,recv,msg,get,control,', 'lsi_method': ' start,execute_interactive,get_msg,recv,recv_reply,', 'spm_method': ' ', 'text_summary': 'Get a message from the control channel. Gets a message if there is one that is ready.', 'files_count': 4, 'files': ['kernelspecapp.py', 'runapp.py', 'client.py', 'channels.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'291': 'start(kernelspecapp.py)', '439': 'start(runapp.py)', '97': 'execute_interactive(client.py)', '95': '_recv_reply(client.py)', '98': 'get_control_msg(client.py)', '84': 'get_msg(channels.py)', '82': '_recv(channels.py)', '110': 'get_msg(channels.py)', '108': '_recv(channels.py)'}}, {'key': 1679, 'parent': 2299, 'tfidf_word': 'default execute hook interactive msg ready stdin start ', 'tfidf_method': 'start start _stdin_hook_default execute_interactive msg_ready msg_ready ', 'lda_word': ' start,default,stdin,ready,execute,', 'lda_method': ' start,execute_interactive,stdin_hook_default,msg_ready,', 'lsi_word': ' start,default,ready,stdin,execute,', 'lsi_method': ' start,execute_interactive,msg_ready,stdin_hook_default,', 'spm_method': ' ', 'text_summary': 'Is there a message that has been received?. Execute code in the kernel interactively.', 'files_count': 4, 'files': ['kernelspecapp.py', 'runapp.py', 'client.py', 'channels.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'291': 'start(kernelspecapp.py)', '439': 'start(runapp.py)', '97': 'execute_interactive(client.py)', '96': '_stdin_hook_default(client.py)', '113': 'msg_ready(channels.py)', '87': 'msg_ready(channels.py)'}}, {'key': 2047, 'parent': 2299, 'tfidf_word': 'start default get msg recv kernel reqrep wrap hook output ', 'tfidf_method': 'is_alive is_alive _output_hook_kernel is_alive _recv get_msg is_alive reqrep get_msg wrapped ', 'lda_word': ' start,interactive,execute,alive,hook,', 'lda_method': ' start,execute_interactive,is_alive,output_hook_default,recv,', 'lsi_word': ' start,interactive,execute,alive,output,', 'lsi_method': ' start,execute_interactive,is_alive,recv,get_msg,', 'spm_method': ' ', 'text_summary': 'Start the polling of the kernel. Output hook when running inside an IPython kernel. Default hook for redisplaying plain-text output.', 'files_count': 8, 'files': ['kernelspecapp.py', 'runapp.py', 'client.py', 'channels.py', 'managerabc.py', 'multikernelmanager.py', 'threaded.py', 'channelsabc.py'], 'execution_path_count': 11, 'function_id_to_name_file': {'291': 'start(kernelspecapp.py)', '439': 'start(runapp.py)', '97': 'execute_interactive(client.py)', '91': 'reqrep(client.py)', '105': 'wrapped(client.py)', '110': 'get_msg(channels.py)', '108': '_recv(channels.py)', '94': '_output_hook_kernel(client.py)', '93': '_output_hook_default(client.py)', '84': 'get_msg(channels.py)', '82': '_recv(channels.py)', '112': 'is_alive(channels.py)', '373': 'is_alive(managerabc.py)', '412': 'is_alive(multikernelmanager.py)', '86': 'is_alive(channels.py)', '732': 'is_alive(threaded.py)', '140': 'is_alive(channelsabc.py)'}}, {'key': 838, 'parent': 1937, 'tfidf_word': 'EP: 838, Name: test_bad_roundtrip &rarr; __init__ &rarr; _check_packers &rarr; utcnow', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 839, 'parent': 1937, 'tfidf_word': 'EP: 839, Name: test_bad_roundtrip &rarr; __init__ &rarr; _check_packers &rarr; squash_dates', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1936, 'parent': 2343, 'tfidf_word': 'bad check init packer test unpacker date squash utcnow ', 'tfidf_method': '__init__ _check_packers test_bad_unpacker squash_dates utcnow ', 'lda_word': ' packer,bad,check,test,unpacker,', 'lda_method': ' init,test_bad_unpacker,check_packers,utcnow,squash_dates,', 'lsi_word': ' check,unpacker,test,init,packer,', 'lsi_method': ' init,test_bad_unpacker,check_packers,squash_dates,utcnow,', 'spm_method': ' ', 'text_summary': '', 'files_count': 3, 'files': ['test_session.py', 'session.py', 'jsonutil.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'685': 'test_bad_unpacker(test_session.py)', '457': '__init__(session.py)', '459': '_check_packers(session.py)', '450': 'utcnow(session.py)', '244': 'squash_dates(jsonutil.py)'}}, {'key': 2342, 'parent': 2343, 'tfidf_word': 'session up unpack args pack id default cull set zero ', 'tfidf_method': '_session_default __init__ setUp test_args test_bad_pack test_bad_packer test_bad_unpack test_cull_digest_history test_session_id test_zero_digest_history ', 'lda_word': ' packer,init,check,date,squash,', 'lda_method': ' init,squash_dates,check_packers,session_default,test_zero_digest_history,', 'lsi_word': ' packer,init,check,test,squash,', 'lsi_method': ' init,check_packers,squash_dates,utcnow,test_args,', 'spm_method': ' ', 'text_summary': 'Return timezone-aware UTC timestamp. squash datetime objects into ISO8601 strings.', 'files_count': 5, 'files': ['test_session.py', 'session.py', 'jsonutil.py', 'consoleapp.py', 'connect.py'], 'execution_path_count': 20, 'function_id_to_name_file': {'682': 'test_bad_packer(test_session.py)', '457': '__init__(session.py)', '459': '_check_packers(session.py)', '450': 'utcnow(session.py)', '244': 'squash_dates(jsonutil.py)', '684': 'test_bad_unpack(test_session.py)', '681': 'test_bad_pack(test_session.py)', '687': 'test_cull_digest_history(test_session.py)', '700': 'test_zero_digest_history(test_session.py)', '697': 'test_session_id(test_session.py)', '678': 'setUp(test_session.py)', '680': 'test_args(test_session.py)', '215': '__init__(consoleapp.py)', '198': '_session_default(connect.py)'}}, {'key': 1947, 'parent': 2331, 'tfidf_word': 'file init kn load packer session test date squash utcnow ', 'tfidf_method': '__init__ _check_packers test_load_connection_file_session_with_kn squash_dates utcnow ', 'lda_word': ' test,kn,connection,date,init,', 'lda_method': ' test_load_connection_file_session_with_kn,check_packers,init,utcnow,squash_dates,', 'lsi_word': ' session,load,connection,packer,test,', 'lsi_method': ' check_packers,init,test_load_connection_file_session_with_kn,utcnow,squash_dates,', 'spm_method': ' ', 'text_summary': 'check packers for datetime support. test load_connection_file() after.', 'files_count': 3, 'files': ['test_connect.py', 'session.py', 'jsonutil.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'565': 'test_load_connection_file_session_with_kn(test_connect.py)', '457': '__init__(session.py)', '459': '_check_packers(session.py)', '450': 'utcnow(session.py)', '244': 'squash_dates(jsonutil.py)'}}, {'key': 2330, 'parent': 2331, 'tfidf_word': 'squash utcnow connection default file load session set up version ', 'tfidf_method': '__init__ _check_packers squash_dates utcnow test_default_version setUp test_load_connection_file_session ', 'lda_word': ' init,file,connection,utcnow,session,', 'lda_method': ' init,setup,check_packers,squash_dates,utcnow,', 'lsi_word': ' check,init,packer,test,squash,', 'lsi_method': ' init,check_packers,squash_dates,utcnow,setup,', 'spm_method': ' ', 'text_summary': 'Return timezone-aware UTC timestamp. squash datetime objects into ISO8601 strings. check packers for datetime support.', 'files_count': 4, 'files': ['test_connect.py', 'session.py', 'jsonutil.py', 'test_adapter.py'], 'execution_path_count': 6, 'function_id_to_name_file': {'564': 'test_load_connection_file_session(test_connect.py)', '457': '__init__(session.py)', '459': '_check_packers(session.py)', '450': 'utcnow(session.py)', '244': 'squash_dates(jsonutil.py)', '516': 'test_default_version(test_adapter.py)', '519': 'setUp(test_adapter.py)'}}, {'key': 1938, 'parent': 2345, 'tfidf_word': 'check datetimes init packer pickle test date squash utcnow ', 'tfidf_method': '__init__ _check_packers test_datetimes_pickle squash_dates utcnow ', 'lda_word': ' test,check,datetimes,init,packer,', 'lda_method': ' check_packers,init,test_datetimes_pickle,utcnow,squash_dates,', 'lsi_word': ' check,datetimes,test,pickle,packer,', 'lsi_method': ' check_packers,init,test_datetimes_pickle,squash_dates,utcnow,', 'spm_method': ' ', 'text_summary': '', 'files_count': 3, 'files': ['test_session.py', 'session.py', 'jsonutil.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'690': 'test_datetimes_pickle(test_session.py)', '457': '__init__(session.py)', '459': '_check_packers(session.py)', '450': 'utcnow(session.py)', '244': 'squash_dates(jsonutil.py)'}}, {'key': 1939, 'parent': 2345, 'tfidf_word': 'check datetimes init msgpack packer test date squash utcnow ', 'tfidf_method': '__init__ _check_packers test_datetimes_msgpack squash_dates utcnow ', 'lda_word': ' check,msgpack,init,packer,datetimes,', 'lda_method': ' test_datetimes_msgpack,init,check_packers,squash_dates,utcnow,', 'lsi_word': ' test,msgpack,init,packer,datetimes,', 'lsi_method': ' check_packers,test_datetimes_msgpack,init,squash_dates,utcnow,', 'spm_method': ' ', 'text_summary': '', 'files_count': 3, 'files': ['test_session.py', 'session.py', 'jsonutil.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'689': 'test_datetimes_msgpack(test_session.py)', '457': '__init__(session.py)', '459': '_check_packers(session.py)', '450': 'utcnow(session.py)', '244': 'squash_dates(jsonutil.py)'}}, {'key': 2393, 'parent': 2729, 'tfidf_word': 'process sequence cinfo thread lifecycle id shutdown tcp kernel ipc ', 'tfidf_method': 'test_start_parallel_process_kernels test_start_parallel_thread_kernels test_tcp_cinfo test_start_sequence_tcp_kernels test_start_sequence_ipc_kernels test_ipc_cinfo test_ipc_lifecycle test_tcp_lifecycle test_shutdown_all test_tcp_lifecycle_with_kernel_id ', 'lda_word': ' kernel,tcp,manager,multi,lifecycle,', 'lda_method': ' wrap,kernel_method,multikernelmanager,asyncmultikernelmanager,get_tcp_km,', 'lsi_word': ' kernel,manager,multi,tcp,lifecycle,', 'lsi_method': ' asyncmultikernelmanager,wrap,multikernelmanager,kernel_method,get_tcp_km,', 'spm_method': '  &#187; test_start_parallel_thread_kernels(test_multikernelmanager.py) &rarr; raw_tcp_lifecycle(test_multikernelmanager.py) &rarr; _get_tcp_km(test_multikernelmanager.py) &rarr; AsyncMultiKernelManager(multikernelmanager.py) &rarr; MultiKernelManager(multikernelmanager.py) &rarr; kernel_method(multikernelmanager.py) &rarr; wrapped(multikernelmanager.py) . <br> &#187; tcp_lifecycle_with_loop(test_multikernelmanager.py) &rarr; raw_tcp_lifecycle(test_multikernelmanager.py) &rarr; _get_tcp_km(test_multikernelmanager.py) &rarr; AsyncMultiKernelManager(multikernelmanager.py) &rarr; MultiKernelManager(multikernelmanager.py) &rarr; kernel_method(multikernelmanager.py) &rarr; wrapped(multikernelmanager.py) . <br> &#187; raw_tcp_lifecycle(test_multikernelmanager.py) &rarr; _get_tcp_km(test_multikernelmanager.py) &rarr; AsyncMultiKernelManager(multikernelmanager.py) &rarr; MultiKernelManager(multikernelmanager.py) &rarr; kernel_method(multikernelmanager.py) &rarr; wrapped(multikernelmanager.py) . <br> &#187; test_start_parallel_process_kernels(test_multikernelmanager.py) &rarr; raw_tcp_lifecycle(test_multikernelmanager.py) &rarr; _get_tcp_km(test_multikernelmanager.py) &rarr; AsyncMultiKernelManager(multikernelmanager.py) &rarr; MultiKernelManager(multikernelmanager.py) &rarr; kernel_method(multikernelmanager.py) &rarr; wrapped(multikernelmanager.py) . <br>', 'text_summary': '', 'files_count': 2, 'files': ['test_multikernelmanager.py', 'multikernelmanager.py'], 'execution_path_count': 12, 'function_id_to_name_file': {'649': 'test_start_sequence_ipc_kernels(test_multikernelmanager.py)', '638': '_get_ipc_km(test_multikernelmanager.py)', '379': 'AsyncMultiKernelManager(multikernelmanager.py)', '381': 'MultiKernelManager(multikernelmanager.py)', '382': 'kernel_method(multikernelmanager.py)', '425': 'wrapped(multikernelmanager.py)', '645': 'test_ipc_lifecycle(test_multikernelmanager.py)', '644': 'test_ipc_cinfo(test_multikernelmanager.py)', '650': 'test_start_sequence_tcp_kernels(test_multikernelmanager.py)', '639': '_get_tcp_km(test_multikernelmanager.py)', '646': 'test_shutdown_all(test_multikernelmanager.py)', '651': 'test_tcp_cinfo(test_multikernelmanager.py)', '648': 'test_start_parallel_thread_kernels(test_multikernelmanager.py)', '643': 'tcp_lifecycle_with_loop(test_multikernelmanager.py)', '642': 'raw_tcp_lifecycle(test_multikernelmanager.py)', '647': 'test_start_parallel_process_kernels(test_multikernelmanager.py)', '652': 'test_tcp_lifecycle(test_multikernelmanager.py)', '653': 'test_tcp_lifecycle_with_kernel_id(test_multikernelmanager.py)'}}, {'key': 2414, 'parent': 2729, 'tfidf_word': 'thread process sequence cinfo kernel lifecycle id shutdown tcp ipc ', 'tfidf_method': 'tcp_lifecycle_with_loop test_start_parallel_process_kernels test_start_parallel_thread_kernels test_ipc_cinfo test_ipc_lifecycle test_shutdown_all test_start_sequence_ipc_kernels test_start_sequence_tcp_kernels test_tcp_cinfo test_tcp_lifecycle_with_kernel_id ', 'lda_word': ' kernel,ipc,test,method,km,', 'lda_method': ' kernel_method,wrap,multikernelmanager,get_ipc_km,test_ipc_lifecycle,', 'lsi_word': ' kernel,tcp,test,km,method,', 'lsi_method': ' wrap,kernel_method,multikernelmanager,get_tcp_km,test_tcp_lifecycle,', 'spm_method': '  &#187; test_start_parallel_thread_kernels(test_multikernelmanager.py) &rarr; test_tcp_lifecycle(test_multikernelmanager.py) &rarr; _get_tcp_km(test_multikernelmanager.py) &rarr; MultiKernelManager(multikernelmanager.py) &rarr; kernel_method(multikernelmanager.py) &rarr; wrapped(multikernelmanager.py) . <br> &#187; tcp_lifecycle_with_loop(test_multikernelmanager.py) &rarr; test_tcp_lifecycle(test_multikernelmanager.py) &rarr; _get_tcp_km(test_multikernelmanager.py) &rarr; MultiKernelManager(multikernelmanager.py) &rarr; kernel_method(multikernelmanager.py) &rarr; wrapped(multikernelmanager.py) . <br> &#187; test_start_parallel_process_kernels(test_multikernelmanager.py) &rarr; test_tcp_lifecycle(test_multikernelmanager.py) &rarr; _get_tcp_km(test_multikernelmanager.py) &rarr; MultiKernelManager(multikernelmanager.py) &rarr; kernel_method(multikernelmanager.py) &rarr; wrapped(multikernelmanager.py) . <br>', 'text_summary': '', 'files_count': 2, 'files': ['test_multikernelmanager.py', 'multikernelmanager.py'], 'execution_path_count': 11, 'function_id_to_name_file': {'664': 'test_start_sequence_ipc_kernels(test_multikernelmanager.py)', '654': '_get_ipc_km(test_multikernelmanager.py)', '381': 'MultiKernelManager(multikernelmanager.py)', '382': 'kernel_method(multikernelmanager.py)', '425': 'wrapped(multikernelmanager.py)', '660': 'test_ipc_lifecycle(test_multikernelmanager.py)', '659': 'test_ipc_cinfo(test_multikernelmanager.py)', '665': 'test_start_sequence_tcp_kernels(test_multikernelmanager.py)', '655': '_get_tcp_km(test_multikernelmanager.py)', '666': 'test_tcp_cinfo(test_multikernelmanager.py)', '668': 'test_tcp_lifecycle_with_kernel_id(test_multikernelmanager.py)', '661': 'test_shutdown_all(test_multikernelmanager.py)', '663': 'test_start_parallel_thread_kernels(test_multikernelmanager.py)', '658': 'tcp_lifecycle_with_loop(test_multikernelmanager.py)', '667': 'test_tcp_lifecycle(test_multikernelmanager.py)', '662': 'test_start_parallel_process_kernels(test_multikernelmanager.py)'}}, {'key': 2687, 'parent': 2765, 'tfidf_word': 'list ksm file connection native up manager spec kernel async ', 'tfidf_method': '_kernel_spec_manager_default MyKSM RemoveKernelSpec ListKernelSpecs InstallNativeKernelSpec InstallKernelSpec KernelApp IOLoopKernelManager _kernel_spec_manager_default test_connection_file_real_path ', 'lda_word': ' kernel,spec,manager,default,app,', 'lda_method': ' kernelspec,kernelspecmanager,kernel_spec_manager_default,kernelspecapp,kernelmanager,', 'lsi_word': ' kernel,spec,manager,app,async,', 'lsi_method': ' kernelspecmanager,kernelspec,kernel_spec_manager_default,kernelmanager,kernelspecapp,', 'spm_method': ' ', 'text_summary': '', 'files_count': 6, 'files': ['manager.py', 'kernelspec.py', 'test_manager.py', 'test_kernelspec.py', 'kernelspecapp.py', 'kernelapp.py'], 'execution_path_count': 17, 'function_id_to_name_file': {'322': 'start_new_async_kernel(manager.py)', '319': 'AsyncKernelManager(manager.py)', '320': 'KernelManager(manager.py)', '254': 'KernelSpecManager(kernelspec.py)', '253': 'KernelSpec(kernelspec.py)', '224': 'AsyncIOLoopKernelManager(manager.py)', '225': 'IOLoopKernelManager(manager.py)', '635': 'test_connection_file_real_path(test_manager.py)', '629': 'test_subclass(test_kernelspec.py)', '618': 'setUp(test_kernelspec.py)', '289': '_kernel_spec_manager_default(kernelspecapp.py)', '345': '_kernel_spec_manager_default(manager.py)', '295': '_kernel_spec_manager_default(kernelspecapp.py)', '286': '_kernel_spec_manager_default(kernelspecapp.py)', '245': 'KernelApp(kernelapp.py)', '292': '_kernel_spec_manager_default(kernelspecapp.py)', '631': 'MyKSM(test_kernelspec.py)', '282': 'KernelSpecApp(kernelspecapp.py)', '284': 'RemoveKernelSpec(kernelspecapp.py)', '283': 'ListKernelSpecs(kernelspecapp.py)', '280': 'InstallKernelSpec(kernelspecapp.py)', '281': 'InstallNativeKernelSpec(kernelspecapp.py)'}}, {'key': 2728, 'parent': 2765, 'tfidf_word': 'sequence cinfo thread manager lifecycle shutdown id tcp ipc kernel ', 'tfidf_method': 'test_tcp_cinfo test_tcp_lifecycle_with_kernel_id test_tcp_lifecycle test_start_sequence_tcp_kernels test_start_sequence_ipc_kernels test_shutdown_all test_ipc_lifecycle test_ipc_cinfo test_ipc_cinfo test_tcp_lifecycle_with_kernel_id ', 'lda_word': ' kernel,tcp,lifecycle,manager,test,', 'lda_method': ' kernelspecmanager,multikernelmanager,kernelspec,get_ipc_km,asyncmultikernelmanager,', 'lsi_word': ' kernel,manager,spec,tcp,multi,', 'lsi_method': ' multikernelmanager,kernelspec,kernelspecmanager,get_tcp_km,asyncmultikernelmanager,', 'spm_method': '  &#187; test_start_parallel_thread_kernels(test_multikernelmanager.py) &rarr; raw_tcp_lifecycle(test_multikernelmanager.py) &rarr; _get_tcp_km(test_multikernelmanager.py) &rarr; AsyncMultiKernelManager(multikernelmanager.py) &rarr; MultiKernelManager(multikernelmanager.py) &rarr; KernelSpecManager(kernelspec.py) &rarr; KernelSpec(kernelspec.py) . <br> &#187; tcp_lifecycle_with_loop(test_multikernelmanager.py) &rarr; raw_tcp_lifecycle(test_multikernelmanager.py) &rarr; _get_tcp_km(test_multikernelmanager.py) &rarr; AsyncMultiKernelManager(multikernelmanager.py) &rarr; MultiKernelManager(multikernelmanager.py) &rarr; KernelSpecManager(kernelspec.py) &rarr; KernelSpec(kernelspec.py) . <br> &#187; raw_tcp_lifecycle(test_multikernelmanager.py) &rarr; _get_tcp_km(test_multikernelmanager.py) &rarr; AsyncMultiKernelManager(multikernelmanager.py) &rarr; MultiKernelManager(multikernelmanager.py) &rarr; KernelSpecManager(kernelspec.py) &rarr; KernelSpec(kernelspec.py) . <br> &#187; test_start_parallel_process_kernels(test_multikernelmanager.py) &rarr; raw_tcp_lifecycle(test_multikernelmanager.py) &rarr; _get_tcp_km(test_multikernelmanager.py) &rarr; AsyncMultiKernelManager(multikernelmanager.py) &rarr; MultiKernelManager(multikernelmanager.py) &rarr; KernelSpecManager(kernelspec.py) &rarr; KernelSpec(kernelspec.py) . <br> &#187; test_start_parallel_thread_kernels(test_multikernelmanager.py) &rarr; test_tcp_lifecycle(test_multikernelmanager.py) &rarr; _get_tcp_km(test_multikernelmanager.py) &rarr; MultiKernelManager(multikernelmanager.py) &rarr; KernelSpecManager(kernelspec.py) &rarr; KernelSpec(kernelspec.py) . <br> &#187; tcp_lifecycle_with_loop(test_multikernelmanager.py) &rarr; test_tcp_lifecycle(test_multikernelmanager.py) &rarr; _get_tcp_km(test_multikernelmanager.py) &rarr; MultiKernelManager(multikernelmanager.py) &rarr; KernelSpecManager(kernelspec.py) &rarr; KernelSpec(kernelspec.py) . <br> &#187; test_start_parallel_process_kernels(test_multikernelmanager.py) &rarr; test_tcp_lifecycle(test_multikernelmanager.py) &rarr; _get_tcp_km(test_multikernelmanager.py) &rarr; MultiKernelManager(multikernelmanager.py) &rarr; KernelSpecManager(kernelspec.py) &rarr; KernelSpec(kernelspec.py) . <br>', 'text_summary': '', 'files_count': 3, 'files': ['test_multikernelmanager.py', 'multikernelmanager.py', 'kernelspec.py'], 'execution_path_count': 23, 'function_id_to_name_file': {'649': 'test_start_sequence_ipc_kernels(test_multikernelmanager.py)', '638': '_get_ipc_km(test_multikernelmanager.py)', '379': 'AsyncMultiKernelManager(multikernelmanager.py)', '381': 'MultiKernelManager(multikernelmanager.py)', '254': 'KernelSpecManager(kernelspec.py)', '253': 'KernelSpec(kernelspec.py)', '645': 'test_ipc_lifecycle(test_multikernelmanager.py)', '644': 'test_ipc_cinfo(test_multikernelmanager.py)', '650': 'test_start_sequence_tcp_kernels(test_multikernelmanager.py)', '639': '_get_tcp_km(test_multikernelmanager.py)', '646': 'test_shutdown_all(test_multikernelmanager.py)', '651': 'test_tcp_cinfo(test_multikernelmanager.py)', '648': 'test_start_parallel_thread_kernels(test_multikernelmanager.py)', '643': 'tcp_lifecycle_with_loop(test_multikernelmanager.py)', '642': 'raw_tcp_lifecycle(test_multikernelmanager.py)', '647': 'test_start_parallel_process_kernels(test_multikernelmanager.py)', '652': 'test_tcp_lifecycle(test_multikernelmanager.py)', '653': 'test_tcp_lifecycle_with_kernel_id(test_multikernelmanager.py)', '664': 'test_start_sequence_ipc_kernels(test_multikernelmanager.py)', '654': '_get_ipc_km(test_multikernelmanager.py)', '660': 'test_ipc_lifecycle(test_multikernelmanager.py)', '659': 'test_ipc_cinfo(test_multikernelmanager.py)', '665': 'test_start_sequence_tcp_kernels(test_multikernelmanager.py)', '655': '_get_tcp_km(test_multikernelmanager.py)', '666': 'test_tcp_cinfo(test_multikernelmanager.py)', '668': 'test_tcp_lifecycle_with_kernel_id(test_multikernelmanager.py)', '661': 'test_shutdown_all(test_multikernelmanager.py)', '663': 'test_start_parallel_thread_kernels(test_multikernelmanager.py)', '658': 'tcp_lifecycle_with_loop(test_multikernelmanager.py)', '667': 'test_tcp_lifecycle(test_multikernelmanager.py)', '662': 'test_start_parallel_process_kernels(test_multikernelmanager.py)'}}, {'key': 2402, 'parent': 2771, 'tfidf_word': 'env get url make create start connect socket spec kernel ', 'tfidf_method': 'kernel_spec _launch_kernel _connect_control_socket start_restarter local_ips is_local_ip KernelSpec _make_url _get_env_substitutions from_ns ', 'lda_word': ' kernel,start,cmd,run,names,', 'lda_method': ' run_kernel,start_kernel,start_new_kernel,pre_start_kernel,record_random_port_names,', 'lsi_word': ' kernel,start,run,new,pre,', 'lsi_method': ' start_kernel,start_new_kernel,run_kernel,pre_start_kernel,format_kernel_cmd,', 'spm_method': '  &#187; run_kernel(manager.py) &rarr; start_new_kernel(manager.py) &rarr; start_kernel(manager.py) &rarr; pre_start_kernel(manager.py) &rarr; write_connection_file(connect.py) &rarr; _record_random_port_names(connect.py) . <br>', 'text_summary': 'return the IP addresses that point to this machine. Context manager to create a kernel in a subprocess. {connection_file})  Context manager to create a kernel in a subprocess. Write connection info to JSON dict in self.connection_file. Create a zmq Socket and connect it to the kernel. replace templated args (e.g.', 'files_count': 4, 'files': ['manager.py', 'localinterfaces.py', 'connect.py', 'kernelspec.py'], 'execution_path_count': 10, 'function_id_to_name_file': {'321': 'run_kernel(manager.py)', '323': 'start_new_kernel(manager.py)', '366': 'start_kernel(manager.py)', '360': 'pre_start_kernel(manager.py)', '341': '_get_env_substitutions(manager.py)', '314': 'local_ips(localinterfaces.py)', '312': 'is_local_ip(localinterfaces.py)', '212': 'write_connection_file(connect.py)', '197': '_record_random_port_names(connect.py)', '353': 'format_kernel_cmd(manager.py)', '369': 'from_ns(manager.py)', '358': 'kernel_spec(manager.py)', '253': 'KernelSpec(kernelspec.py)', '347': '_launch_kernel(manager.py)', '359': 'post_start_kernel(manager.py)', '338': '_connect_control_socket(manager.py)', '192': '_create_connected_socket(connect.py)', '196': '_make_url(connect.py)', '367': 'start_restarter(manager.py)'}}, {'key': 2736, 'parent': 2771, 'tfidf_word': 'async alive send kernel connect socket manager spec cleanup msg ', 'tfidf_method': 'stop_restarter is_alive thread_send _connect_control_socket start_new_async_kernel KernelSpecManager KernelSpec ConnectionFileMixin utcnow send ', 'lda_word': ' kernel,shutdown,start,new,run,', 'lda_method': ' run_kernel,start_new_kernel,shutdown_kernel,has_kernel,launch_kernel,', 'lsi_word': ' kernel,shutdown,msg,new,start,', 'lsi_method': ' msg,start_new_kernel,run_kernel,shutdown_kernel,request_shutdown,', 'spm_method': '  &#187; run_kernel(manager.py) &rarr; start_new_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; start_new_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br>', 'text_summary': "Cleanup connection file *if we wrote it*. Create a client configured to connect to our kernel. Sends a signal to the process group of the kernel (this. Pass a message to the ZMQ socket to send. Start a new kernel, and return its Manager and Client. Wait for kernel shutdown, then kill process if it doesn't shutdown. Return the connection info as a dict. Given a message or header, return the header. Create a zmq Socket and connect it to the kernel.", 'files_count': 8, 'files': ['manager.py', 'session.py', 'test_adapter.py', 'adapter.py', 'connect.py', 'threaded.py', 'channels.py', 'kernelspec.py'], 'execution_path_count': 35, 'function_id_to_name_file': {'321': 'run_kernel(manager.py)', '323': 'start_new_kernel(manager.py)', '364': 'shutdown_kernel(manager.py)', '362': 'request_shutdown(manager.py)', '476': 'msg(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '480': 'send(session.py)', '520': 'msg(test_adapter.py)', '534': 'msg(test_adapter.py)', '444': 'extract_header(session.py)', '50': 'adapt(adapter.py)', '450': 'utcnow(session.py)', '482': 'serialize(session.py)', '483': 'sign(session.py)', '440': 'Message(session.py)', '338': '_connect_control_socket(manager.py)', '192': '_create_connected_socket(connect.py)', '196': '_make_url(connect.py)', '734': 'send(threaded.py)', '738': 'thread_send(threaded.py)', '88': 'send(channels.py)', '114': 'send(channels.py)', '320': 'KernelManager(manager.py)', '254': 'KernelSpecManager(kernelspec.py)', '253': 'KernelSpec(kernelspec.py)', '188': 'ConnectionFileMixin(connect.py)', '322': 'start_new_async_kernel(manager.py)', '351': 'client(manager.py)', '208': 'get_connection_info(connect.py)', '346': '_kill_kernel(manager.py)', '365': 'signal_kernel(manager.py)', '354': 'has_kernel(manager.py)', '347': '_launch_kernel(manager.py)', '352': 'finish_shutdown(manager.py)', '357': 'is_alive(manager.py)', '350': 'cleanup_resources(manager.py)', '201': 'cleanup_ipc_files(connect.py)', '211': 'ports(connect.py)', '349': 'cleanup(manager.py)', '368': 'stop_restarter(manager.py)', '200': 'cleanup_connection_file(connect.py)'}}, {'key': 2796, 'parent': 2798, 'tfidf_word': 'digest native permission flush tunnel io cleanup code restarter ip ', 'tfidf_method': 'interrupt_kernel finish_shutdown test_object_info_request test_object_info_reply_not_found _key_default Handler test_object_info_reply test_validate_kernel_name __del__ SubHander ', 'lda_word': ' kernel,spec,get,test,specs,', 'lda_method': ' deserialize,initialize,ensure_tzinfo,parse_date,extract_dates,', 'lsi_word': ' kernel,load,ip,connection,test,', 'lsi_method': ' init,get_kernel_spec,new_auth,setup,get_tcp_km,', 'spm_method': '  &#187; initialize(test_connect.py) &rarr; init_connection_file(consoleapp.py) &rarr; load_connection_file(connect.py) &rarr; load_connection_info(connect.py) &rarr; _ip_default(connect.py) &rarr; localhost(localinterfaces.py) . <br> &#187; initialize(runapp.py) &rarr; initialize(consoleapp.py) &rarr; load_connection_file(connect.py) &rarr; load_connection_info(connect.py) &rarr; _ip_default(connect.py) &rarr; localhost(localinterfaces.py) . <br>', 'text_summary': "Subclasses may override  Prepares a kernel for startup in a separate process. return ip for localhost (almost always 127.0.0.1) test `ipython console --existing` loads a connection file. Prepares a kernel for startup in a separate process. Create a client configured to connect to our kernel. return ip for localhost (almost always 127.0.0.1)   Ensure that a sequence of kernel startups doesn't break anything. Sends a signal to the process group of the kernel (this. Pass a message to the ZMQ socket to send. return ip for localhost (almost always 127.0.0.1)   set up ssh tunnels, if needed. Start a new kernel, and return its Manager and Client. Install a kernel spec by copying its directory. Return the connection info as a dict. Subclasses may override Start the polling of the kernel. load ip addresses with socket.gethostbyname_ex uniq_stable(elems) -> list. return ip for localhost (almost always 127.0.0.1) test load_connection_file() after. Launches a localhost kernel, binding to the specified ports. test `ipython console --existing` loads a connection file. find a connection file, and return its absolute path. return ip for localhost (almost always 127.0.0.1)      find a connection file, and return its absolute path. tunnel connections to a kernel via ssh. For tests, create a file to indicate that we've started. Returns a dict mapping kernel names to kernelspecs. handle kernel info reply. Get all messages that are currently ready. Returns the id to associate with the kernel for this request. Send a raw message via ident path. {connection_file})   Prepares a kernel for startup in a separate process. Get the hb channel object for this kernel. {connection_file})  Restarts a kernel with the arguments that were used to launch it. Make a blocking client connected to my kernel. populate local and public IPs from flat list of all IPs. return the IP addresses that point to this machine. return ip for localhost (almost always 127.0.0.1)       return ip for localhost (almost always 127.0.0.1)   find the connection file, and load the info if found. Load connection info from JSON dict in self.connection_file. return ip for localhost (almost always 127.0.0.1)  Write connection info to JSON dict in self.connection_file. Immediately processes all pending messages on this channel. Return the number of running kernels. Verify realpath is used when formatting connection file. Unserialize a msg_list to a nested message dict. {connection_file}) Write connection info to JSON dict in self.connection_file. Create an ssh tunnel using command-line ssh that connects port lport. populate local and public IPs from flat list of all IPs. return the IP addresses for this machine that are visible to other machines. This is run in the ioloop thread when the kernel info reply is received. return the IP addresses that point to this machine. return ip for localhost (almost always 127.0.0.1)   find the connection file, and load the info if found. find the connection file, and load the info if found. Return a mapping of kernel names to resource directories from dir. populate local and public IPs from flat list of all IPs. decorator to ensure load_ips has been run before f. Returns a :class:`KernelSpec` instance for a given kernel_name. test load_connection_file() after. Write connection info to JSON dict in self.connection_file. Create a zmq Socket and connect it to the kernel. Forgets randomly assigned port numbers and cleans up the connection file.", 'files_count': 36, 'files': ['localinterfaces.py', 'test_localinterfaces.py', 'test_connect.py', 'session.py', 'test_adapter.py', 'test_session.py', 'consoleapp.py', 'connect.py', 'runapp.py', 'kernelspec.py', 'manager.py', 'test_kernelspec.py', 'jsonutil.py', 'forward.py', 'test_jsonutil.py', 'test_manager.py', 'test_client.py', 'adapter.py', 'channels.py', 'threaded.py', 'test_multikernelmanager.py', 'multikernelmanager.py', 'tunnel.py', 'test_ssh.py', 'client.py', 'managerabc.py', 'channelsabc.py', 'test_kernelmanager.py', 'utils.py', 'restarter.py', 'signalkernel.py', 'kernelspecapp.py', 'kernelapp.py', 'test_kernelapp.py', 'win_interrupt.py', 'launcher.py'], 'execution_path_count': 628, 'function_id_to_name_file': {'310': '_requires_ips(localinterfaces.py)', '318': 'ips_loaded(localinterfaces.py)', '301': '_load_ips(localinterfaces.py)', '306': '_load_ips_ipconfig(localinterfaces.py)', '300': '_get_output(localinterfaces.py)', '309': '_populate_from_list(localinterfaces.py)', '299': 'NoIPAddresses(localinterfaces.py)', '316': 'public_ips(localinterfaces.py)', '314': 'local_ips(localinterfaces.py)', '311': '_uniq_stable(localinterfaces.py)', '304': '_load_ips_ifconfig(localinterfaces.py)', '305': '_load_ips_ip(localinterfaces.py)', '307': '_load_ips_netifaces(localinterfaces.py)', '302': '_load_ips_dumb(localinterfaces.py)', '634': 'test_load_ips(test_localinterfaces.py)', '303': '_load_ips_gethostbyname(localinterfaces.py)', '565': 'test_load_connection_file_session_with_kn(test_connect.py)', '457': '__init__(session.py)', '465': '_new_auth(session.py)', '564': 'test_load_connection_file_session(test_connect.py)', '519': 'setUp(test_adapter.py)', '516': 'test_default_version(test_adapter.py)', '689': 'test_datetimes_msgpack(test_session.py)', '690': 'test_datetimes_pickle(test_session.py)', '683': 'test_bad_roundtrip(test_session.py)', '685': 'test_bad_unpacker(test_session.py)', '682': 'test_bad_packer(test_session.py)', '681': 'test_bad_pack(test_session.py)', '684': 'test_bad_unpack(test_session.py)', '687': 'test_cull_digest_history(test_session.py)', '697': 'test_session_id(test_session.py)', '700': 'test_zero_digest_history(test_session.py)', '680': 'test_args(test_session.py)', '678': 'setUp(test_session.py)', '215': '__init__(consoleapp.py)', '198': '_session_default(connect.py)', '560': 'test_find_connection_file(test_connect.py)', '572': 'initialize(test_connect.py)', '219': 'init_connection_file(consoleapp.py)', '209': 'load_connection_file(connect.py)', '210': 'load_connection_info(connect.py)', '195': '_ip_default(connect.py)', '315': 'localhost(localinterfaces.py)', '559': 'test_app_load_connection_file(test_connect.py)', '197': '_record_random_port_names(connect.py)', '437': 'initialize(runapp.py)', '223': 'initialize(consoleapp.py)', '222': 'init_ssh(consoleapp.py)', '212': 'write_connection_file(connect.py)', '220': 'init_kernel_client(consoleapp.py)', '221': 'init_kernel_manager(consoleapp.py)', '255': 'NoSuchKernel(kernelspec.py)', '322': 'start_new_async_kernel(manager.py)', '351': 'client(manager.py)', '321': 'run_kernel(manager.py)', '323': 'start_new_kernel(manager.py)', '568': 'test_mixin_record_random_ports(test_connect.py)', '567': 'test_mixin_cleanup_random_ports(test_connect.py)', '621': 'test_find_all_specs(test_kernelspec.py)', '273': 'get_all_specs(kernelspec.py)', '272': 'find_kernel_specs(kernelspec.py)', '258': '_list_kernels_in(kernelspec.py)', '257': '_is_valid_kernel_name(kernelspec.py)', '256': '_is_kernel_dir(kernelspec.py)', '629': 'test_subclass(test_kernelspec.py)', '627': 'test_remove_kernel_spec(test_kernelspec.py)', '277': 'remove_kernel_spec(kernelspec.py)', '625': 'test_install_kernel_spec_prefix(test_kernelspec.py)', '626': 'test_kernel_spec_priority(test_kernelspec.py)', '624': 'test_install_kernel_spec(test_kernelspec.py)', '259': 'find_kernel_specs(kernelspec.py)', '622': 'test_find_kernel_specs(test_kernelspec.py)', '694': 'test_send(test_session.py)', '479': 'recv(session.py)', '474': 'deserialize(session.py)', '242': 'extract_dates(jsonutil.py)', '243': 'parse_date(jsonutil.py)', '240': '_ensure_tzinfo(jsonutil.py)', '492': 'handle(forward.py)', '695': 'test_send_raw(test_session.py)', '484': 'unserialize(session.py)', '696': 'test_serialize(test_session.py)', '578': 'test_parse_ms_precision(test_jsonutil.py)', '679': '_datetime_test(test_session.py)', '688': 'test_datetimes(test_session.py)', '575': 'test_date_default(test_jsonutil.py)', '576': 'test_extract_date_from_naive(test_jsonutil.py)', '577': 'test_extract_dates(test_jsonutil.py)', '330': 'restart_kernel(manager.py)', '333': 'start_kernel(manager.py)', '326': '_launch_kernel(manager.py)', '359': 'post_start_kernel(manager.py)', '338': '_connect_control_socket(manager.py)', '192': '_create_connected_socket(connect.py)', '196': '_make_url(connect.py)', '367': 'start_restarter(manager.py)', '635': 'test_connection_file_real_path(test_manager.py)', '353': 'format_kernel_cmd(manager.py)', '358': 'kernel_spec(manager.py)', '253': 'KernelSpec(kernelspec.py)', '360': 'pre_start_kernel(manager.py)', '369': 'from_ns(manager.py)', '341': '_get_env_substitutions(manager.py)', '312': 'is_local_ip(localinterfaces.py)', '623': 'test_get_kernel_spec(test_kernelspec.py)', '267': '_find_spec_directory(kernelspec.py)', '632': 'find_kernel_specs(test_kernelspec.py)', '274': 'get_kernel_spec(kernelspec.py)', '633': 'get_kernel_spec(test_kernelspec.py)', '549': 'setUp(test_client.py)', '269': '_get_kernel_spec_by_name(kernelspec.py)', '278': '__init__(kernelspec.py)', '260': 'get_kernel_spec(kernelspec.py)', '50': 'adapt(adapter.py)', '450': 'utcnow(session.py)', '698': 'test_tracking(test_session.py)', '480': 'send(session.py)', '328': 'interrupt_kernel(manager.py)', '191': 'write_connection_file(connect.py)', '109': 'close(channels.py)', '83': 'close(channels.py)', '730': 'close(threaded.py)', '132': 'close(channels.py)', '211': 'ports(connect.py)', '718': 'close(threaded.py)', '570': 'test_write_connection_file(test_connect.py)', '686': 'test_clone(test_session.py)', '458': '_add_digest(session.py)', '460': '_cull_digest_history(session.py)', '558': 'DummyConsoleApp(test_connect.py)', '214': 'JupyterConsoleApp(consoleapp.py)', '441': 'Session(session.py)', '188': 'ConnectionFileMixin(connect.py)', '213': 'IPythonConsoleApp(consoleapp.py)', '434': 'RunApp(runapp.py)', '665': 'test_start_sequence_tcp_kernels(test_multikernelmanager.py)', '655': '_get_tcp_km(test_multikernelmanager.py)', '392': '__init__(multikernelmanager.py)', '666': 'test_tcp_cinfo(test_multikernelmanager.py)', '668': 'test_tcp_lifecycle_with_kernel_id(test_multikernelmanager.py)', '661': 'test_shutdown_all(test_multikernelmanager.py)', '663': 'test_start_parallel_thread_kernels(test_multikernelmanager.py)', '658': 'tcp_lifecycle_with_loop(test_multikernelmanager.py)', '667': 'test_tcp_lifecycle(test_multikernelmanager.py)', '662': 'test_start_parallel_process_kernels(test_multikernelmanager.py)', '190': 'tunnel_to_kernel(connect.py)', '503': 'select_random_ports(tunnel.py)', '701': 'test_random_ports(test_ssh.py)', '386': 'shutdown_all(multikernelmanager.py)', '383': 'finish_shutdown(multikernelmanager.py)', '410': 'get_kernel(multikernelmanager.py)', '394': '_check_kernel_id(multikernelmanager.py)', '388': 'signal_kernel(multikernelmanager.py)', '385': 'restart_kernel(multikernelmanager.py)', '384': 'interrupt_kernel(multikernelmanager.py)', '387': 'shutdown_kernel(multikernelmanager.py)', '421': 'shutdown_kernel(multikernelmanager.py)', '420': 'shutdown_all(multikernelmanager.py)', '104': 'wait_for_ready(client.py)', '103': 'is_alive(client.py)', '412': 'is_alive(multikernelmanager.py)', '373': 'is_alive(managerabc.py)', '140': 'is_alive(channelsabc.py)', '732': 'is_alive(threaded.py)', '86': 'is_alive(channels.py)', '112': 'is_alive(channels.py)', '123': 'wait_for_ready(client.py)', '165': 'is_alive(client.py)', '648': 'test_start_parallel_thread_kernels(test_multikernelmanager.py)', '643': 'tcp_lifecycle_with_loop(test_multikernelmanager.py)', '642': 'raw_tcp_lifecycle(test_multikernelmanager.py)', '641': '_run_lifecycle(test_multikernelmanager.py)', '647': 'test_start_parallel_process_kernels(test_multikernelmanager.py)', '652': 'test_tcp_lifecycle(test_multikernelmanager.py)', '653': 'test_tcp_lifecycle_with_kernel_id(test_multikernelmanager.py)', '483': 'sign(session.py)', '440': 'Message(session.py)', '482': 'serialize(session.py)', '135': 'run(channels.py)', '128': '_create_socket(channels.py)', '84': 'get_msg(channels.py)', '82': '_recv(channels.py)', '101': 'get_stdin_msg(client.py)', '85': 'get_msgs(channels.py)', '99': 'get_iopub_msg(client.py)', '110': 'get_msg(channels.py)', '108': '_recv(channels.py)', '111': 'get_msgs(channels.py)', '620': 'test_cant_install_kernel_spec(test_kernelspec.py)', '275': 'install_kernel_spec(kernelspec.py)', '268': '_get_destination_dir(kernelspec.py)', '261': 'install_kernel_spec(kernelspec.py)', '614': 'test_start_sequence_process_kernels(test_kernelmanager.py)', '610': '_run_signaltest_lifecycle(test_kernelmanager.py)', '615': 'execute(test_kernelmanager.py)', '609': '_prepare_kernel(test_kernelmanager.py)', '611': 'test_start_parallel_process_kernels(test_kernelmanager.py)', '613': 'test_start_sequence_kernels(test_kernelmanager.py)', '612': 'test_start_parallel_thread_kernels(test_kernelmanager.py)', '398': '_kernel_manager_class_changed(multikernelmanager.py)', '396': '_create_kernel_manager_factory(multikernelmanager.py)', '424': 'create_kernel_manager(multikernelmanager.py)', '397': '_find_available_port(multikernelmanager.py)', '395': '_context_default(multikernelmanager.py)', '399': '_kernel_manager_factory_default(multikernelmanager.py)', '485': '__init__(session.py)', '459': '_check_packers(session.py)', '244': 'squash_dates(jsonutil.py)', '90': 'AsyncKernelClient(client.py)', '147': 'KernelClient(client.py)', '139': 'HBChannelABC(channelsabc.py)', '138': 'ChannelABC(channelsabc.py)', '116': 'BlockingKernelClient(client.py)', '319': 'AsyncKernelManager(manager.py)', '320': 'KernelManager(manager.py)', '224': 'AsyncIOLoopKernelManager(manager.py)', '225': 'IOLoopKernelManager(manager.py)', '657': '_run_lifecycle(test_multikernelmanager.py)', '704': 'execute(utils.py)', '155': 'execute(client.py)', '148': 'validate_string_dict(client.py)', '734': 'send(threaded.py)', '738': 'thread_send(threaded.py)', '664': 'test_start_sequence_ipc_kernels(test_multikernelmanager.py)', '654': '_get_ipc_km(test_multikernelmanager.py)', '660': 'test_ipc_lifecycle(test_multikernelmanager.py)', '659': 'test_ipc_cinfo(test_multikernelmanager.py)', '423': 'start_kernel(multikernelmanager.py)', '415': 'pre_start_kernel(multikernelmanager.py)', '380': 'DuplicateKernelError(multikernelmanager.py)', '414': 'new_kernel_id(multikernelmanager.py)', '389': 'start_kernel(multikernelmanager.py)', '238': 'start(restarter.py)', '430': 'poll(restarter.py)', '433': 'stop(restarter.py)', '428': '_fire_callbacks(restarter.py)', '510': 'do_execute(signalkernel.py)', '501': 'openssh_tunnel(tunnel.py)', '494': 'SSHException(tunnel.py)', '497': '_stop_tunnel(tunnel.py)', '475': 'feed_identities(session.py)', '202': 'cleanup_random_ports(connect.py)', '200': 'cleanup_connection_file(connect.py)', '106': 'ZMQSocketChannel(channels.py)', '226': 'as_zmqstream(manager.py)', '233': 'wrapped(manager.py)', '557': 'DummyConfigurable(test_connect.py)', '235': 'IOLoopKernelRestarter(restarter.py)', '426': 'KernelRestarter(restarter.py)', '234': 'AsyncIOLoopKernelRestarter(restarter.py)', '291': 'start(kernelspecapp.py)', '251': 'start(kernelapp.py)', '249': 'setup_signals(kernelapp.py)', '252': 'shutdown_handler(kernelapp.py)', '250': 'shutdown(kernelapp.py)', '248': 'log_connection_info(kernelapp.py)', '199': 'blocking_client(connect.py)', '208': 'get_connection_info(connect.py)', '725': 'stop_channels(threaded.py)', '676': '_bad_unpacker(test_session.py)', '536': 'test_complete_request(test_adapter.py)', '517': 'adapt(test_adapter.py)', '562': 'test_find_connection_file_local(test_connect.py)', '189': 'find_connection_file(connect.py)', '493': 'SubHander(forward.py)', '490': 'Handler(forward.py)', '114': 'send(channels.py)', '88': 'send(channels.py)', '241': 'date_default(jsonutil.py)', '597': 'test_subclasses(test_kernelmanager.py)', '703': 'AsyncKernelManagerWithCleanup(utils.py)', '595': 'test_signal_kernel_subprocesses(test_kernelmanager.py)', '598': 'execute(test_kernelmanager.py)', '702': 'AsyncKernelManagerSubclass(utils.py)', '591': 'transport(test_kernelmanager.py)', '606': 'test_templated_kspec_env(test_kernelmanager.py)', '599': '_env_test_body(test_kernelmanager.py)', '607': 'execute(test_kernelmanager.py)', '604': 'test_signal_kernel_subprocesses(test_kernelmanager.py)', '608': 'execute(test_kernelmanager.py)', '586': 'env(test_kernelmanager.py)', '712': 'stop(utils.py)', '711': 'start(utils.py)', '705': 'test_env(utils.py)', '630': 'test_validate_kernel_name(test_kernelspec.py)', '506': 'SignalTestApp(signalkernel.py)', '507': 'SignalTestKernel(signalkernel.py)', '617': '_install_sample_kernel(test_kernelspec.py)', '651': 'test_tcp_cinfo(test_multikernelmanager.py)', '640': '_run_cinfo(test_multikernelmanager.py)', '619': 'tearDown(test_kernelspec.py)', '618': 'setUp(test_kernelspec.py)', '649': 'test_start_sequence_ipc_kernels(test_multikernelmanager.py)', '650': 'test_start_sequence_tcp_kernels(test_multikernelmanager.py)', '644': 'test_ipc_cinfo(test_multikernelmanager.py)', '645': 'test_ipc_lifecycle(test_multikernelmanager.py)', '656': '_run_cinfo(test_multikernelmanager.py)', '569': 'test_secure_write(test_connect.py)', '573': 'check_user_only_permissions(test_connect.py)', '574': 'fetch_win32_permissions(test_connect.py)', '563': 'test_find_connection_file_relative(test_connect.py)', '561': 'test_find_connection_file_abspath(test_connect.py)', '539': 'test_input_request(test_adapter.py)', '537': 'test_display_data(test_adapter.py)', '540': 'test_inspect_reply(test_adapter.py)', '543': 'test_kernel_info_reply(test_adapter.py)', '542': 'test_inspect_request_token(test_adapter.py)', '535': 'test_complete_reply(test_adapter.py)', '541': 'test_inspect_request(test_adapter.py)', '538': 'test_execute_request(test_adapter.py)', '545': 'test_rename_type(test_adapter.py)', '544': 'test_no_adapt(test_adapter.py)', '546': 'test_same_version(test_adapter.py)', '514': 'V5toV4TestCase(test_adapter.py)', '512': 'AdapterTest(test_adapter.py)', '526': 'test_input_request(test_adapter.py)', '523': 'test_display_data(test_adapter.py)', '527': 'test_kernel_info_reply(test_adapter.py)', '530': 'test_object_info_reply_not_found(test_adapter.py)', '529': 'test_object_info_reply(test_adapter.py)', '531': 'test_object_info_request(test_adapter.py)', '521': 'test_complete_reply(test_adapter.py)', '522': 'test_complete_request(test_adapter.py)', '524': 'test_execute_reply(test_adapter.py)', '532': 'test_rename_type(test_adapter.py)', '525': 'test_execute_request(test_adapter.py)', '528': 'test_no_adapt(test_adapter.py)', '533': 'test_same_version(test_adapter.py)', '513': 'V4toV5TestCase(test_adapter.py)', '515': 'test_code_to_line_no_code(test_adapter.py)', '51': 'code_to_line(adapter.py)', '158': 'get_shell_msg(client.py)', '157': 'get_iopub_msg(client.py)', '710': '__exit__(utils.py)', '709': '__enter__(utils.py)', '580': 'test_kernelapp_lifecycle(test_kernelapp.py)', '579': '_launch(test_kernelapp.py)', '473': 'clone(session.py)', '481': 'send_raw(session.py)', '675': '_bad_packer(test_session.py)', '699': 'test_unique_msg_ids(test_session.py)', '445': 'msg_header(session.py)', '478': 'msg_id(session.py)', '674': 'TestSession(test_session.py)', '673': 'SessionTestCase(test_session.py)', '556': 'test_shutdown(test_client.py)', '548': '_check_reply(test_client.py)', '550': 'test_comm_info(test_client.py)', '555': 'test_kernel_info(test_client.py)', '551': 'test_complete(test_client.py)', '554': 'test_inspect(test_client.py)', '553': 'test_history(test_client.py)', '117': 'reqrep(client.py)', '124': 'wrapped(client.py)', '150': '_handle_kernel_info_reply(client.py)', '125': 'HBChannel(channels.py)', '102': 'hb_channel(client.py)', '91': 'reqrep(client.py)', '105': 'wrapped(client.py)', '80': 'ZMQSocketChannel(channels.py)', '154': 'control_channel(client.py)', '723': 'ioloop(threaded.py)', '160': 'hb_channel(client.py)', '171': 'stdin_channel(client.py)', '164': 'iopub_channel(client.py)', '168': 'shell_channel(client.py)', '740': 'send_interrupt(win_interrupt.py)', '334': '__del__(manager.py)', '293': 'start(kernelspecapp.py)', '294': 'path_key(kernelspecapp.py)', '735': 'start(threaded.py)', '720': 'start(threaded.py)', '141': 'start(channelsabc.py)', '432': 'start(restarter.py)', '288': 'start(kernelspecapp.py)', '89': 'start(channels.py)', '115': 'start(channels.py)', '290': 'start(kernelspecapp.py)', '438': 'parse_command_line(runapp.py)', '218': 'build_kernel_argv(consoleapp.py)', '308': '_only_once(localinterfaces.py)', '317': 'wrapped(localinterfaces.py)', '47': 'V4toV5(adapter.py)', '46': 'Adapter(adapter.py)', '77': 'object_info_request(adapter.py)', '52': 'extract_oname_v4(adapter.py)', '70': 'complete_request(adapter.py)', '75': 'kernel_info_reply(adapter.py)', '49': '_version_str_to_list(adapter.py)', '48': 'V5toV4(adapter.py)', '53': '__call__(adapter.py)', '54': 'handle_reply_status_error(adapter.py)', '57': 'update_msg_type(adapter.py)', '56': 'update_metadata(adapter.py)', '55': 'update_header(adapter.py)', '247': 'initialize(kernelapp.py)', '246': '_record_started(kernelapp.py)', '585': 'config(test_kernelmanager.py)', '262': 'install_native_kernel_spec(kernelspec.py)', '276': 'install_native_kernel_spec(kernelspec.py)', '265': 'to_json(kernelspec.py)', '264': 'to_dict(kernelspec.py)', '449': 'test_msg2obj(session.py)', '453': '__init__(session.py)', '470': '_signature_scheme_changed(session.py)', '463': '_key_default(session.py)', '447': 'new_id_bytes(session.py)', '462': '_key_changed(session.py)', '443': 'default_secure(session.py)', '469': '_session_default(session.py)', '446': 'new_id(session.py)', '413': 'list_kernel_ids(multikernelmanager.py)', '721': 'stop(threaded.py)', '724': 'start_channels(threaded.py)', '722': '_check_kernel_info_reply(threaded.py)', '716': '__init__(threaded.py)', '416': 'remove_kernel(multikernelmanager.py)', '713': 'IOLoopThread(threaded.py)', '714': 'ThreadedKernelClient(threaded.py)', '715': 'ThreadedZMQSocketChannel(threaded.py)', '731': 'flush(threaded.py)', '727': '_flush(threaded.py)', '418': 'request_shutdown(multikernelmanager.py)', '402': 'cleanup_resources(multikernelmanager.py)', '408': 'finish_shutdown(multikernelmanager.py)', '393': '__len__(multikernelmanager.py)', '298': 'launch_kernel(launcher.py)', '739': 'create_interrupt_event(win_interrupt.py)', '741': 'SECURITY_ATTRIBUTES(win_interrupt.py)', '509': '__init__(signalkernel.py)', '127': '__init__(channels.py)', '126': 'InvalidPortNumber(channels.py)', '107': '__init__(channels.py)', '81': '__init__(channels.py)', '726': '__init__(threaded.py)', '737': 'setup_stream(threaded.py)', '728': '_handle_recv(threaded.py)', '729': 'call_handlers(threaded.py)', '136': 'stop(channels.py)', '133': 'is_beating(channels.py)', '145': 'time_to_dead(channelsabc.py)', '131': 'call_handlers(channels.py)', '130': '_poll(channels.py)'}}, {'key': 2797, 'parent': 2798, 'tfidf_word': 'alive ssh kernel port shell msg iopub stdin cleanup tunnel ', 'tfidf_method': 'is_alive shell_channel stdin_channel start_restarter start_restarter __del__ signal_kernel interrupt_kernel forward_tunnel execute_interactive ', 'lda_word': ' kernel,tunnel,shutdown,msg,interrupt,', 'lda_method': ' has_kernel,launch_kernel,is_alive,init_kernel_info,initialize,', 'lsi_word': ' kernel,msg,shutdown,header,start,', 'lsi_method': ' msg,extract_header,msg_id,msg_header,initialize,', 'spm_method': '  &#187; initialize(runapp.py) &rarr; handle_sigint(runapp.py) &rarr; interrupt_kernel(manager.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; handle_sigint(runapp.py) &rarr; interrupt_kernel(manager.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; tunnel_connection(tunnel.py) &rarr; open_tunnel(tunnel.py) &rarr; paramiko_tunnel(tunnel.py) &rarr; _try_passwordless_paramiko(tunnel.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; open_tunnel(tunnel.py) &rarr; paramiko_tunnel(tunnel.py) &rarr; _try_passwordless_paramiko(tunnel.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; paramiko_tunnel(tunnel.py) &rarr; _try_passwordless_paramiko(tunnel.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; _try_passwordless_paramiko(tunnel.py) &rarr; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; init_kernel_info(runapp.py) &rarr; kernel_info(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; start(kernelspecapp.py) &rarr; start(kernelspecapp.py) &rarr; input(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; start(kernelspecapp.py) &rarr; input(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; tunnel_to_kernel(connect.py) &rarr; try_passwordless_ssh(tunnel.py) &rarr; _try_passwordless_paramiko(tunnel.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; try_passwordless_ssh(tunnel.py) &rarr; _try_passwordless_paramiko(tunnel.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; restart_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; finish_shutdown(manager.py) &rarr; _async_wait(manager.py) &rarr; is_alive(manager.py) &rarr; has_kernel(manager.py) &rarr; _launch_kernel(manager.py) . <br> &#187; shutdown_kernel(manager.py) &rarr; finish_shutdown(manager.py) &rarr; _kill_kernel(manager.py) &rarr; _async_wait(manager.py) &rarr; is_alive(manager.py) &rarr; has_kernel(manager.py) &rarr; _launch_kernel(manager.py) . <br> &#187; start_new_async_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; finish_shutdown(manager.py) &rarr; _async_wait(manager.py) &rarr; is_alive(manager.py) &rarr; has_kernel(manager.py) &rarr; _launch_kernel(manager.py) . <br> &#187; do_execute(signalkernel.py) &rarr; poll(restarter.py) &rarr; restart_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; cleanup_resources(manager.py) &rarr; _close_control_socket(manager.py) &rarr; _create_connected_socket(connect.py) &rarr; _make_url(connect.py) . <br> &#187; poll(restarter.py) &rarr; restart_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; cleanup_resources(manager.py) &rarr; _close_control_socket(manager.py) &rarr; _create_connected_socket(connect.py) &rarr; _make_url(connect.py) . <br> &#187; restart_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; cleanup_resources(manager.py) &rarr; _close_control_socket(manager.py) &rarr; _create_connected_socket(connect.py) &rarr; _make_url(connect.py) . <br> &#187; shutdown_kernel(manager.py) &rarr; cleanup(manager.py) &rarr; cleanup_resources(manager.py) &rarr; _close_control_socket(manager.py) &rarr; _create_connected_socket(connect.py) &rarr; _make_url(connect.py) . <br> &#187; run_kernel(manager.py) &rarr; start_new_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; cleanup_resources(manager.py) &rarr; _close_control_socket(manager.py) &rarr; _create_connected_socket(connect.py) &rarr; _make_url(connect.py) . <br> &#187; start_new_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; cleanup_resources(manager.py) &rarr; _close_control_socket(manager.py) &rarr; _create_connected_socket(connect.py) &rarr; _make_url(connect.py) . <br> &#187; finish_shutdown(manager.py) &rarr; _kill_kernel(manager.py) &rarr; _async_wait(manager.py) &rarr; is_alive(manager.py) &rarr; has_kernel(manager.py) &rarr; _launch_kernel(manager.py) . <br>', 'text_summary': "return zmq Socket connected to the StdIn channel. return zmq Socket connected to the Heartbeat channel. This should only be used Function for actually starting a paramiko tunnel, to be passed. tunnel connections to a kernel via ssh. return zmq Socket connected to the Shell channel. return zmq Socket connected to the IOPub channel. Sends a signal to the process group of the kernel (this. Start a new kernel, and return its Manager and Client. Pass a message to the ZMQ socket to send. Connect a socket to an address via an ssh tunnel. Send a shutdown request via control channel. return zmq Socket connected to the Control channel. Interrupts the kernel by sending it a signal. Get a message from the shell channel. Create an ssh tunnel using command-line ssh that connects port lport. Given a message or header, return the header. Wait for kernel shutdown, then kill process if it doesn't shutdown. Create a zmq Socket and connect it to the kernel.", 'files_count': 18, 'files': ['runapp.py', 'manager.py', 'session.py', 'test_adapter.py', 'multikernelmanager.py', 'managerabc.py', 'adapter.py', 'connect.py', 'threaded.py', 'channels.py', 'win_interrupt.py', 'tunnel.py', 'forward.py', 'client.py', 'channelsabc.py', 'kernelspecapp.py', 'signalkernel.py', 'restarter.py'], 'execution_path_count': 175, 'function_id_to_name_file': {'437': 'initialize(runapp.py)', '435': 'handle_sigint(runapp.py)', '355': 'interrupt_kernel(manager.py)', '476': 'msg(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '480': 'send(session.py)', '520': 'msg(test_adapter.py)', '534': 'msg(test_adapter.py)', '444': 'extract_header(session.py)', '411': 'interrupt_kernel(multikernelmanager.py)', '372': 'interrupt_kernel(managerabc.py)', '50': 'adapt(adapter.py)', '450': 'utcnow(session.py)', '482': 'serialize(session.py)', '483': 'sign(session.py)', '440': 'Message(session.py)', '354': 'has_kernel(manager.py)', '347': '_launch_kernel(manager.py)', '365': 'signal_kernel(manager.py)', '338': '_connect_control_socket(manager.py)', '192': '_create_connected_socket(connect.py)', '196': '_make_url(connect.py)', '734': 'send(threaded.py)', '738': 'thread_send(threaded.py)', '114': 'send(channels.py)', '88': 'send(channels.py)', '740': 'send_interrupt(win_interrupt.py)', '505': 'tunnel_connection(tunnel.py)', '500': 'open_tunnel(tunnel.py)', '502': 'paramiko_tunnel(tunnel.py)', '499': '_try_passwordless_paramiko(tunnel.py)', '496': '_split_server(tunnel.py)', '503': 'select_random_ports(tunnel.py)', '730': 'close(threaded.py)', '718': 'close(threaded.py)', '109': 'close(channels.py)', '132': 'close(channels.py)', '83': 'close(channels.py)', '211': 'ports(connect.py)', '495': '_paramiko_tunnel(tunnel.py)', '491': 'forward_tunnel(forward.py)', '501': 'openssh_tunnel(tunnel.py)', '494': 'SSHException(tunnel.py)', '497': '_stop_tunnel(tunnel.py)', '436': 'init_kernel_info(runapp.py)', '158': 'get_shell_msg(client.py)', '137': 'unpause(channels.py)', '146': 'unpause(channelsabc.py)', '167': 'kernel_info(client.py)', '291': 'start(kernelspecapp.py)', '297': 'start(kernelspecapp.py)', '162': 'input(client.py)', '190': 'tunnel_to_kernel(connect.py)', '504': 'try_passwordless_ssh(tunnel.py)', '498': '_try_passwordless_openssh(tunnel.py)', '330': 'restart_kernel(manager.py)', '331': 'shutdown_kernel(manager.py)', '349': 'cleanup(manager.py)', '350': 'cleanup_resources(manager.py)', '337': '_close_control_socket(manager.py)', '322': 'start_new_async_kernel(manager.py)', '510': 'do_execute(signalkernel.py)', '236': 'poll(restarter.py)', '363': 'restart_kernel(manager.py)', '364': 'shutdown_kernel(manager.py)', '321': 'run_kernel(manager.py)', '323': 'start_new_kernel(manager.py)', '362': 'request_shutdown(manager.py)', '328': 'interrupt_kernel(manager.py)', '224': 'AsyncIOLoopKernelManager(manager.py)', '203': 'connect_control(connect.py)', '154': 'control_channel(client.py)', '225': 'IOLoopKernelManager(manager.py)', '207': 'connect_stdin(connect.py)', '171': 'stdin_channel(client.py)', '206': 'connect_shell(connect.py)', '168': 'shell_channel(client.py)', '205': 'connect_iopub(connect.py)', '164': 'iopub_channel(client.py)', '204': 'connect_hb(connect.py)', '334': '__del__(manager.py)', '228': 'start_restarter(manager.py)', '231': 'start_restarter(manager.py)', '439': 'start(runapp.py)', '122': 'execute_interactive(client.py)', '357': 'is_alive(manager.py)', '97': 'execute_interactive(client.py)', '123': 'wait_for_ready(client.py)', '165': 'is_alive(client.py)', '104': 'wait_for_ready(client.py)', '103': 'is_alive(client.py)', '133': 'is_beating(channels.py)', '725': 'stop_channels(threaded.py)', '327': 'finish_shutdown(manager.py)', '324': '_async_wait(manager.py)', '329': 'is_alive(manager.py)', '325': '_kill_kernel(manager.py)', '332': 'signal_kernel(manager.py)', '368': 'stop_restarter(manager.py)', '326': '_launch_kernel(manager.py)', '201': 'cleanup_ipc_files(connect.py)', '200': 'cleanup_connection_file(connect.py)'}}, {'key': 532, 'parent': 1424, 'tfidf_word': 'EP: 532, Name: AsyncKernelClient &rarr; shutdown &rarr; msg &rarr; msg &rarr; msg &rarr; msg_header &rarr; msg_id', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 648, 'parent': 1424, 'tfidf_word': 'EP: 648, Name: BlockingKernelClient &rarr; shutdown &rarr; msg &rarr; msg &rarr; msg &rarr; msg_header &rarr; msg_id', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1422, 'parent': 2009, 'tfidf_word': 'client complete header id kernel async blocking msg ', 'tfidf_method': 'complete msg msg_header msg_id msg msg BlockingKernelClient AsyncKernelClient ', 'lda_word': ' msg,complete,client,kernel,header,', 'lda_method': ' msg,complete,msg_header,msg_id,blockingkernelclient,', 'lsi_word': ' msg,kernel,complete,client,header,', 'lsi_method': ' msg,complete,msg_header,msg_id,blockingkernelclient,', 'spm_method': '  &#187; complete(client.py) &rarr; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br>', 'text_summary': '', 'files_count': 3, 'files': ['client.py', 'test_adapter.py', 'session.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'90': 'AsyncKernelClient(client.py)', '153': 'complete(client.py)', '520': 'msg(test_adapter.py)', '534': 'msg(test_adapter.py)', '476': 'msg(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '116': 'BlockingKernelClient(client.py)'}}, {'key': 2004, 'parent': 2009, 'tfidf_word': 'identity found feed display data blocking async interrupt version msg ', 'tfidf_method': 'test_serialize test_execute_request test_execute_reply test_display_data test_complete_request test_complete_reply interrupt_kernel is_complete test_no_adapt AsyncKernelClient ', 'lda_word': ' msg,header,test,request,complete,', 'lda_method': ' msg,msg_id,msg_header,history,test_send_raw,', 'lsi_word': ' msg,header,test,reply,info,', 'lsi_method': ' msg,msg_id,msg_header,history,asynckernelclient,', 'spm_method': '  &#187; history(client.py) &rarr; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br>', 'text_summary': "Get entries from the kernel's history list.", 'files_count': 5, 'files': ['client.py', 'test_adapter.py', 'session.py', 'test_session.py', 'manager.py'], 'execution_path_count': 22, 'function_id_to_name_file': {'90': 'AsyncKernelClient(client.py)', '161': 'history(client.py)', '520': 'msg(test_adapter.py)', '534': 'msg(test_adapter.py)', '476': 'msg(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '116': 'BlockingKernelClient(client.py)', '526': 'test_input_request(test_adapter.py)', '523': 'test_display_data(test_adapter.py)', '527': 'test_kernel_info_reply(test_adapter.py)', '530': 'test_object_info_reply_not_found(test_adapter.py)', '529': 'test_object_info_reply(test_adapter.py)', '531': 'test_object_info_request(test_adapter.py)', '521': 'test_complete_reply(test_adapter.py)', '522': 'test_complete_request(test_adapter.py)', '524': 'test_execute_reply(test_adapter.py)', '525': 'test_execute_request(test_adapter.py)', '532': 'test_rename_type(test_adapter.py)', '528': 'test_no_adapt(test_adapter.py)', '533': 'test_same_version(test_adapter.py)', '695': 'test_send_raw(test_session.py)', '692': 'test_feed_identities(test_session.py)', '694': 'test_send(test_session.py)', '696': 'test_serialize(test_session.py)', '693': 'test_msg(test_session.py)', '328': 'interrupt_kernel(manager.py)', '166': 'is_complete(client.py)'}}, {'key': 534, 'parent': 1502, 'tfidf_word': 'EP: 534, Name: AsyncKernelClient &rarr; shutdown &rarr; msg &rarr; msg &rarr; msg_header &rarr; msg_id', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 650, 'parent': 1502, 'tfidf_word': 'EP: 650, Name: BlockingKernelClient &rarr; shutdown &rarr; msg &rarr; msg &rarr; msg_header &rarr; msg_id', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1498, 'parent': 2241, 'tfidf_word': 'client complete header id kernel async blocking msg ', 'tfidf_method': 'complete msg msg_header msg_id msg BlockingKernelClient AsyncKernelClient ', 'lda_word': ' msg,kernel,client,header,complete,', 'lda_method': ' msg,msg_id,complete,msg_header,blockingkernelclient,', 'lsi_word': ' msg,header,complete,client,kernel,', 'lsi_method': ' msg,msg_id,complete,msg_header,blockingkernelclient,', 'spm_method': ' ', 'text_summary': '', 'files_count': 3, 'files': ['client.py', 'test_adapter.py', 'session.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'90': 'AsyncKernelClient(client.py)', '153': 'complete(client.py)', '534': 'msg(test_adapter.py)', '476': 'msg(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '116': 'BlockingKernelClient(client.py)'}}, {'key': 2235, 'parent': 2241, 'tfidf_word': 'identity feed execute display data blocking async interrupt version msg ', 'tfidf_method': 'test_inspect_reply test_serialize test_execute_request test_display_data test_complete_request test_complete_reply interrupt_kernel is_complete test_inspect_request AsyncKernelClient ', 'lda_word': ' msg,header,test,request,kernel,', 'lda_method': ' msg,msg_header,msg_id,test_input_request,test_same_version,', 'lsi_word': ' msg,header,test,request,kernel,', 'lsi_method': ' msg,msg_id,msg_header,history,blockingkernelclient,', 'spm_method': ' ', 'text_summary': "Get entries from the kernel's history list.", 'files_count': 5, 'files': ['client.py', 'test_adapter.py', 'session.py', 'test_session.py', 'manager.py'], 'execution_path_count': 21, 'function_id_to_name_file': {'90': 'AsyncKernelClient(client.py)', '161': 'history(client.py)', '534': 'msg(test_adapter.py)', '476': 'msg(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '116': 'BlockingKernelClient(client.py)', '539': 'test_input_request(test_adapter.py)', '537': 'test_display_data(test_adapter.py)', '543': 'test_kernel_info_reply(test_adapter.py)', '540': 'test_inspect_reply(test_adapter.py)', '542': 'test_inspect_request_token(test_adapter.py)', '541': 'test_inspect_request(test_adapter.py)', '535': 'test_complete_reply(test_adapter.py)', '536': 'test_complete_request(test_adapter.py)', '538': 'test_execute_request(test_adapter.py)', '545': 'test_rename_type(test_adapter.py)', '546': 'test_same_version(test_adapter.py)', '544': 'test_no_adapt(test_adapter.py)', '695': 'test_send_raw(test_session.py)', '694': 'test_send(test_session.py)', '692': 'test_feed_identities(test_session.py)', '696': 'test_serialize(test_session.py)', '693': 'test_msg(test_session.py)', '328': 'interrupt_kernel(manager.py)', '166': 'is_complete(client.py)'}}, {'key': 546, 'parent': 1427, 'tfidf_word': 'EP: 546, Name: AsyncKernelClient &rarr; comm_info &rarr; msg &rarr; msg &rarr; msg &rarr; msg_header &rarr; msg_id', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 662, 'parent': 1427, 'tfidf_word': 'EP: 662, Name: BlockingKernelClient &rarr; comm_info &rarr; msg &rarr; msg &rarr; msg &rarr; msg_header &rarr; msg_id', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1425, 'parent': 2010, 'tfidf_word': 'client header id kernel shutdown async blocking msg ', 'tfidf_method': 'shutdown msg msg_header msg_id msg msg BlockingKernelClient AsyncKernelClient ', 'lda_word': ' msg,shutdown,client,header,kernel,', 'lda_method': ' msg,shutdown,msg_id,asynckernelclient,msg_header,', 'lsi_word': ' msg,client,shutdown,kernel,header,', 'lsi_method': ' msg,msg_header,msg_id,shutdown,blockingkernelclient,', 'spm_method': '  &#187; shutdown(client.py) &rarr; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br>', 'text_summary': '', 'files_count': 3, 'files': ['client.py', 'test_adapter.py', 'session.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'90': 'AsyncKernelClient(client.py)', '169': 'shutdown(client.py)', '534': 'msg(test_adapter.py)', '520': 'msg(test_adapter.py)', '476': 'msg(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '116': 'BlockingKernelClient(client.py)'}}, {'key': 2008, 'parent': 2010, 'tfidf_word': 'interrupt type info identity feed execute display data version msg ', 'tfidf_method': 'test_inspect_request_token test_inspect_request test_inspect_reply test_input_request test_serialize test_display_data test_complete_request test_complete_reply interrupt_kernel test_execute_request ', 'lda_word': ' msg,header,test,client,kernel,', 'lda_method': ' msg,msg_header,msg_id,complete,asynckernelclient,', 'lsi_word': ' msg,header,test,kernel,request,', 'lsi_method': ' msg,msg_id,msg_header,history,blockingkernelclient,', 'spm_method': '  &#187; AsyncKernelClient(client.py) &rarr; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; complete(client.py) &rarr; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; BlockingKernelClient(client.py) &rarr; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; history(client.py) &rarr; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br>', 'text_summary': "Tab complete text in the kernel's namespace.", 'files_count': 5, 'files': ['client.py', 'test_adapter.py', 'session.py', 'test_session.py', 'manager.py'], 'execution_path_count': 23, 'function_id_to_name_file': {'90': 'AsyncKernelClient(client.py)', '153': 'complete(client.py)', '534': 'msg(test_adapter.py)', '520': 'msg(test_adapter.py)', '476': 'msg(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '116': 'BlockingKernelClient(client.py)', '161': 'history(client.py)', '539': 'test_input_request(test_adapter.py)', '537': 'test_display_data(test_adapter.py)', '543': 'test_kernel_info_reply(test_adapter.py)', '540': 'test_inspect_reply(test_adapter.py)', '542': 'test_inspect_request_token(test_adapter.py)', '541': 'test_inspect_request(test_adapter.py)', '535': 'test_complete_reply(test_adapter.py)', '536': 'test_complete_request(test_adapter.py)', '538': 'test_execute_request(test_adapter.py)', '545': 'test_rename_type(test_adapter.py)', '544': 'test_no_adapt(test_adapter.py)', '546': 'test_same_version(test_adapter.py)', '695': 'test_send_raw(test_session.py)', '692': 'test_feed_identities(test_session.py)', '694': 'test_send(test_session.py)', '696': 'test_serialize(test_session.py)', '693': 'test_msg(test_session.py)', '328': 'interrupt_kernel(manager.py)', '166': 'is_complete(client.py)'}}, {'key': 540, 'parent': 1504, 'tfidf_word': 'EP: 540, Name: AsyncKernelClient &rarr; comm_info &rarr; msg &rarr; msg &rarr; msg_header &rarr; msg_id', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 656, 'parent': 1504, 'tfidf_word': 'EP: 656, Name: BlockingKernelClient &rarr; comm_info &rarr; msg &rarr; msg &rarr; msg_header &rarr; msg_id', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1500, 'parent': 2247, 'tfidf_word': 'client header id kernel shutdown async blocking msg ', 'tfidf_method': 'shutdown msg msg_header msg_id msg BlockingKernelClient AsyncKernelClient ', 'lda_word': ' msg,client,kernel,shutdown,header,', 'lda_method': ' msg_id,msg,shutdown,msg_header,asynckernelclient,', 'lsi_word': ' msg,client,shutdown,header,kernel,', 'lsi_method': ' msg,msg_header,msg_id,shutdown,blockingkernelclient,', 'spm_method': ' ', 'text_summary': '', 'files_count': 3, 'files': ['client.py', 'test_adapter.py', 'session.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'90': 'AsyncKernelClient(client.py)', '169': 'shutdown(client.py)', '520': 'msg(test_adapter.py)', '476': 'msg(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '116': 'BlockingKernelClient(client.py)'}}, {'key': 2243, 'parent': 2247, 'tfidf_word': 'interrupt input type identity found feed display data version msg ', 'tfidf_method': 'interrupt_kernel test_kernel_info_reply test_input_request test_serialize test_execute_reply test_display_data test_complete_request test_complete_reply test_object_info_reply test_execute_request ', 'lda_word': ' msg,rename,type,test,header,', 'lda_method': ' msg,msg_header,msg_id,blockingkernelclient,history,', 'lsi_word': ' msg,header,test,kernel,reply,', 'lsi_method': ' msg,msg_id,msg_header,asynckernelclient,complete,', 'spm_method': ' ', 'text_summary': "Tab complete text in the kernel's namespace.", 'files_count': 5, 'files': ['client.py', 'test_adapter.py', 'session.py', 'test_session.py', 'manager.py'], 'execution_path_count': 24, 'function_id_to_name_file': {'90': 'AsyncKernelClient(client.py)', '153': 'complete(client.py)', '520': 'msg(test_adapter.py)', '476': 'msg(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '116': 'BlockingKernelClient(client.py)', '161': 'history(client.py)', '526': 'test_input_request(test_adapter.py)', '523': 'test_display_data(test_adapter.py)', '527': 'test_kernel_info_reply(test_adapter.py)', '530': 'test_object_info_reply_not_found(test_adapter.py)', '529': 'test_object_info_reply(test_adapter.py)', '531': 'test_object_info_request(test_adapter.py)', '521': 'test_complete_reply(test_adapter.py)', '522': 'test_complete_request(test_adapter.py)', '524': 'test_execute_reply(test_adapter.py)', '525': 'test_execute_request(test_adapter.py)', '532': 'test_rename_type(test_adapter.py)', '533': 'test_same_version(test_adapter.py)', '528': 'test_no_adapt(test_adapter.py)', '695': 'test_send_raw(test_session.py)', '694': 'test_send(test_session.py)', '692': 'test_feed_identities(test_session.py)', '696': 'test_serialize(test_session.py)', '693': 'test_msg(test_session.py)', '328': 'interrupt_kernel(manager.py)', '166': 'is_complete(client.py)'}}, {'key': 569, 'parent': 1715, 'tfidf_word': 'EP: 569, Name: AsyncKernelClient &rarr; execute &rarr; msg &rarr; msg_header &rarr; msg_id', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 684, 'parent': 1715, 'tfidf_word': 'EP: 684, Name: BlockingKernelClient &rarr; execute &rarr; msg &rarr; msg_header &rarr; msg_id', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 664, 'parent': 1718, 'tfidf_word': 'EP: 664, Name: BlockingKernelClient &rarr; kernel_info &rarr; msg &rarr; msg_header &rarr; msg_id', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1697, 'parent': 1718, 'tfidf_word': 'header id info async channels client start kernel msg ', 'tfidf_method': 'kernel_info msg msg_header msg_id start_channels AsyncKernelClient ', 'lda_word': ' msg,kernel,info,async,header,', 'lda_method': ' msg,msg_header,msg_id,kernel_info,start_channels,', 'lsi_word': ' msg,kernel,info,header,async,', 'lsi_method': ' kernel_info,msg,msg_header,msg_id,start_channels,', 'spm_method': ' ', 'text_summary': '', 'files_count': 2, 'files': ['client.py', 'session.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'170': 'start_channels(client.py)', '167': 'kernel_info(client.py)', '476': 'msg(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '90': 'AsyncKernelClient(client.py)'}}, {'key': 1712, 'parent': 2309, 'tfidf_word': 'client header id inspect kernel async blocking msg ', 'tfidf_method': 'inspect msg msg_header msg_id BlockingKernelClient AsyncKernelClient ', 'lda_word': ' msg,header,kernel,inspect,client,', 'lda_method': ' msg_header,msg,msg_id,inspect,blockingkernelclient,', 'lsi_word': ' msg,inspect,kernel,header,client,', 'lsi_method': ' inspect,msg,msg_header,msg_id,blockingkernelclient,', 'spm_method': ' ', 'text_summary': '', 'files_count': 2, 'files': ['client.py', 'session.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'90': 'AsyncKernelClient(client.py)', '163': 'inspect(client.py)', '476': 'msg(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '116': 'BlockingKernelClient(client.py)'}}, {'key': 2306, 'parent': 2309, 'tfidf_word': 'info send serialize raw identity interrupt feed default version msg ', 'tfidf_method': 'comm_info history is_complete interrupt_kernel test_serialize test_default_version test_feed_identities test_msg test_send test_send_raw ', 'lda_word': ' msg,history,blocking,client,kernel,', 'lda_method': ' msg_id,msg_header,msg,blockingkernelclient,asynckernelclient,', 'lsi_word': ' msg,header,kernel,client,test,', 'lsi_method': ' msg_header,msg,msg_id,blockingkernelclient,asynckernelclient,', 'spm_method': ' ', 'text_summary': "Tab complete text in the kernel's namespace. Ask the kernel whether some code is complete and ready to execute.", 'files_count': 5, 'files': ['client.py', 'session.py', 'test_adapter.py', 'test_session.py', 'manager.py'], 'execution_path_count': 16, 'function_id_to_name_file': {'90': 'AsyncKernelClient(client.py)', '152': 'comm_info(client.py)', '476': 'msg(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '116': 'BlockingKernelClient(client.py)', '169': 'shutdown(client.py)', '153': 'complete(client.py)', '161': 'history(client.py)', '516': 'test_default_version(test_adapter.py)', '695': 'test_send_raw(test_session.py)', '692': 'test_feed_identities(test_session.py)', '694': 'test_send(test_session.py)', '693': 'test_msg(test_session.py)', '696': 'test_serialize(test_session.py)', '328': 'interrupt_kernel(manager.py)', '166': 'is_complete(client.py)'}}, {'key': 541, 'parent': 1505, 'tfidf_word': 'EP: 541, Name: AsyncKernelClient &rarr; comm_info &rarr; msg &rarr; msg &rarr; msg &rarr; extract_header', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 657, 'parent': 1505, 'tfidf_word': 'EP: 657, Name: BlockingKernelClient &rarr; comm_info &rarr; msg &rarr; msg &rarr; msg &rarr; extract_header', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1501, 'parent': 2246, 'tfidf_word': 'client extract header kernel shutdown async blocking msg ', 'tfidf_method': 'shutdown extract_header msg msg msg BlockingKernelClient AsyncKernelClient ', 'lda_word': ' msg,extract,kernel,header,client,', 'lda_method': ' msg,extract_header,shutdown,asynckernelclient,blockingkernelclient,', 'lsi_word': ' msg,client,kernel,shutdown,header,', 'lsi_method': ' msg,extract_header,shutdown,blockingkernelclient,asynckernelclient,', 'spm_method': ' ', 'text_summary': '', 'files_count': 3, 'files': ['client.py', 'test_adapter.py', 'session.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'90': 'AsyncKernelClient(client.py)', '169': 'shutdown(client.py)', '520': 'msg(test_adapter.py)', '534': 'msg(test_adapter.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '116': 'BlockingKernelClient(client.py)'}}, {'key': 2242, 'parent': 2246, 'tfidf_word': 'adapt input type identity found feed display data interrupt version ', 'tfidf_method': 'test_no_adapt test_kernel_info_reply test_serialize test_execute_request test_execute_reply test_display_data test_complete_request test_complete_reply interrupt_kernel test_input_request ', 'lda_word': ' msg,extract,header,test,complete,', 'lda_method': ' msg,extract_header,test_object_info_reply_not_found,test_send_raw,test_rename_type,', 'lsi_word': ' msg,header,extract,test,kernel,', 'lsi_method': ' msg,extract_header,complete,blockingkernelclient,history,', 'spm_method': ' ', 'text_summary': "Tab complete text in the kernel's namespace. Given a message or header, return the header. Ask the kernel whether some code is complete and ready to execute.", 'files_count': 5, 'files': ['client.py', 'test_adapter.py', 'session.py', 'test_session.py', 'manager.py'], 'execution_path_count': 24, 'function_id_to_name_file': {'90': 'AsyncKernelClient(client.py)', '153': 'complete(client.py)', '520': 'msg(test_adapter.py)', '534': 'msg(test_adapter.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '116': 'BlockingKernelClient(client.py)', '161': 'history(client.py)', '526': 'test_input_request(test_adapter.py)', '523': 'test_display_data(test_adapter.py)', '527': 'test_kernel_info_reply(test_adapter.py)', '530': 'test_object_info_reply_not_found(test_adapter.py)', '529': 'test_object_info_reply(test_adapter.py)', '531': 'test_object_info_request(test_adapter.py)', '521': 'test_complete_reply(test_adapter.py)', '522': 'test_complete_request(test_adapter.py)', '524': 'test_execute_reply(test_adapter.py)', '525': 'test_execute_request(test_adapter.py)', '532': 'test_rename_type(test_adapter.py)', '533': 'test_same_version(test_adapter.py)', '528': 'test_no_adapt(test_adapter.py)', '695': 'test_send_raw(test_session.py)', '694': 'test_send(test_session.py)', '692': 'test_feed_identities(test_session.py)', '696': 'test_serialize(test_session.py)', '693': 'test_msg(test_session.py)', '328': 'interrupt_kernel(manager.py)', '166': 'is_complete(client.py)'}}, {'key': 543, 'parent': 1711, 'tfidf_word': 'EP: 543, Name: AsyncKernelClient &rarr; comm_info &rarr; msg &rarr; msg &rarr; extract_header', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 659, 'parent': 1711, 'tfidf_word': 'EP: 659, Name: BlockingKernelClient &rarr; comm_info &rarr; msg &rarr; msg &rarr; extract_header', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1708, 'parent': 2311, 'tfidf_word': 'client extract header kernel shutdown async blocking msg ', 'tfidf_method': 'shutdown extract_header msg msg BlockingKernelClient AsyncKernelClient ', 'lda_word': ' msg,shutdown,kernel,client,header,', 'lda_method': ' msg,extract_header,shutdown,blockingkernelclient,asynckernelclient,', 'lsi_word': ' msg,client,kernel,shutdown,extract,', 'lsi_method': ' msg,extract_header,shutdown,blockingkernelclient,asynckernelclient,', 'spm_method': ' ', 'text_summary': '', 'files_count': 3, 'files': ['client.py', 'test_adapter.py', 'session.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'90': 'AsyncKernelClient(client.py)', '169': 'shutdown(client.py)', '534': 'msg(test_adapter.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '116': 'BlockingKernelClient(client.py)'}}, {'key': 2308, 'parent': 2311, 'tfidf_word': 'input type info identity feed execute display data interrupt version ', 'tfidf_method': 'test_inspect_request_token test_inspect_request test_inspect_reply test_serialize test_execute_request test_display_data test_complete_request test_complete_reply interrupt_kernel test_input_request ', 'lda_word': ' msg,test,extract,header,inspect,', 'lda_method': ' msg,extract_header,test_execute_request,test_feed_identities,test_input_request,', 'lsi_word': ' msg,extract,header,test,kernel,', 'lsi_method': ' msg,extract_header,complete,asynckernelclient,blockingkernelclient,', 'spm_method': ' ', 'text_summary': "Tab complete text in the kernel's namespace. message format. Given a message or header, return the header. Ask the kernel whether some code is complete and ready to execute.", 'files_count': 5, 'files': ['client.py', 'test_adapter.py', 'session.py', 'test_session.py', 'manager.py'], 'execution_path_count': 23, 'function_id_to_name_file': {'90': 'AsyncKernelClient(client.py)', '153': 'complete(client.py)', '534': 'msg(test_adapter.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '116': 'BlockingKernelClient(client.py)', '161': 'history(client.py)', '536': 'test_complete_request(test_adapter.py)', '538': 'test_execute_request(test_adapter.py)', '545': 'test_rename_type(test_adapter.py)', '544': 'test_no_adapt(test_adapter.py)', '546': 'test_same_version(test_adapter.py)', '695': 'test_send_raw(test_session.py)', '692': 'test_feed_identities(test_session.py)', '694': 'test_send(test_session.py)', '693': 'test_msg(test_session.py)', '696': 'test_serialize(test_session.py)', '328': 'interrupt_kernel(manager.py)', '166': 'is_complete(client.py)', '539': 'test_input_request(test_adapter.py)', '537': 'test_display_data(test_adapter.py)', '543': 'test_kernel_info_reply(test_adapter.py)', '542': 'test_inspect_request_token(test_adapter.py)', '540': 'test_inspect_reply(test_adapter.py)', '535': 'test_complete_reply(test_adapter.py)', '541': 'test_inspect_request(test_adapter.py)'}}, {'key': 568, 'parent': 1908, 'tfidf_word': 'EP: 568, Name: AsyncKernelClient &rarr; execute &rarr; msg &rarr; extract_header', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 683, 'parent': 1908, 'tfidf_word': 'EP: 683, Name: BlockingKernelClient &rarr; execute &rarr; msg &rarr; extract_header', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 558, 'parent': 1907, 'tfidf_word': 'EP: 558, Name: AsyncKernelClient &rarr; inspect &rarr; msg &rarr; extract_header', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 673, 'parent': 1907, 'tfidf_word': 'EP: 673, Name: BlockingKernelClient &rarr; inspect &rarr; msg &rarr; extract_header', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1906, 'parent': 2398, 'tfidf_word': 'client comm extract header info kernel msg async blocking ', 'tfidf_method': 'comm_info extract_header msg BlockingKernelClient AsyncKernelClient ', 'lda_word': ' comm,extract,msg,header,client,', 'lda_method': ' msg,extract_header,comm_info,blockingkernelclient,asynckernelclient,', 'lsi_word': ' info,extract,msg,header,comm,', 'lsi_method': ' comm_info,extract_header,msg,asynckernelclient,blockingkernelclient,', 'spm_method': ' ', 'text_summary': '', 'files_count': 2, 'files': ['client.py', 'session.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'90': 'AsyncKernelClient(client.py)', '152': 'comm_info(client.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '116': 'BlockingKernelClient(client.py)'}}, {'key': 2396, 'parent': 2398, 'tfidf_word': 'shutdown history send serialize identity interrupt feed default raw version ', 'tfidf_method': 'history shutdown is_complete interrupt_kernel test_default_version test_feed_identities test_msg test_send test_send_raw test_serialize ', 'lda_word': ' msg,header,extract,test,kernel,', 'lda_method': ' msg,extract_header,shutdown,asynckernelclient,blockingkernelclient,', 'lsi_word': ' msg,extract,header,kernel,client,', 'lsi_method': ' extract_header,msg,asynckernelclient,blockingkernelclient,history,', 'spm_method': ' ', 'text_summary': "Tab complete text in the kernel's namespace. message format. Given a message or header, return the header. Ask the kernel whether some code is complete and ready to execute.", 'files_count': 5, 'files': ['client.py', 'session.py', 'test_adapter.py', 'test_session.py', 'manager.py'], 'execution_path_count': 14, 'function_id_to_name_file': {'90': 'AsyncKernelClient(client.py)', '169': 'shutdown(client.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '116': 'BlockingKernelClient(client.py)', '153': 'complete(client.py)', '161': 'history(client.py)', '516': 'test_default_version(test_adapter.py)', '695': 'test_send_raw(test_session.py)', '694': 'test_send(test_session.py)', '692': 'test_feed_identities(test_session.py)', '696': 'test_serialize(test_session.py)', '693': 'test_msg(test_session.py)', '328': 'interrupt_kernel(manager.py)', '166': 'is_complete(client.py)'}}, {'key': 576, 'parent': 1515, 'tfidf_word': 'EP: 576, Name: AsyncKernelClient &rarr; execute &rarr; msg &rarr; msg &rarr; msg &rarr; extract_header', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 691, 'parent': 1515, 'tfidf_word': 'EP: 691, Name: BlockingKernelClient &rarr; execute &rarr; msg &rarr; msg &rarr; msg &rarr; extract_header', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 566, 'parent': 1511, 'tfidf_word': 'EP: 566, Name: AsyncKernelClient &rarr; inspect &rarr; msg &rarr; msg &rarr; msg &rarr; extract_header', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 681, 'parent': 1511, 'tfidf_word': 'EP: 681, Name: BlockingKernelClient &rarr; inspect &rarr; msg &rarr; msg &rarr; msg &rarr; extract_header', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1507, 'parent': 2249, 'tfidf_word': 'client comm extract header info kernel async blocking msg ', 'tfidf_method': 'comm_info extract_header msg msg msg BlockingKernelClient AsyncKernelClient ', 'lda_word': ' msg,kernel,extract,comm,header,', 'lda_method': ' msg,extract_header,comm_info,blockingkernelclient,asynckernelclient,', 'lsi_word': ' msg,info,extract,header,comm,', 'lsi_method': ' msg,extract_header,comm_info,blockingkernelclient,asynckernelclient,', 'spm_method': ' ', 'text_summary': '', 'files_count': 3, 'files': ['client.py', 'test_adapter.py', 'session.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'90': 'AsyncKernelClient(client.py)', '152': 'comm_info(client.py)', '534': 'msg(test_adapter.py)', '520': 'msg(test_adapter.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '116': 'BlockingKernelClient(client.py)'}}, {'key': 2245, 'parent': 2249, 'tfidf_word': 'interrupt type info identity feed execute display data raw version ', 'tfidf_method': 'interrupt_kernel test_inspect_reply test_input_request test_serialize test_display_data test_complete_request test_complete_reply is_complete test_inspect_request_token test_execute_request ', 'lda_word': ' msg,header,extract,test,kernel,', 'lda_method': ' msg,extract_header,blockingkernelclient,history,shutdown,', 'lsi_word': ' msg,header,extract,test,kernel,', 'lsi_method': ' msg,extract_header,blockingkernelclient,asynckernelclient,history,', 'spm_method': ' ', 'text_summary': "Tab complete text in the kernel's namespace. message format. Given a message or header, return the header. Ask the kernel whether some code is complete and ready to execute.", 'files_count': 5, 'files': ['client.py', 'test_adapter.py', 'session.py', 'test_session.py', 'manager.py'], 'execution_path_count': 25, 'function_id_to_name_file': {'90': 'AsyncKernelClient(client.py)', '169': 'shutdown(client.py)', '534': 'msg(test_adapter.py)', '520': 'msg(test_adapter.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '116': 'BlockingKernelClient(client.py)', '153': 'complete(client.py)', '161': 'history(client.py)', '539': 'test_input_request(test_adapter.py)', '537': 'test_display_data(test_adapter.py)', '543': 'test_kernel_info_reply(test_adapter.py)', '540': 'test_inspect_reply(test_adapter.py)', '542': 'test_inspect_request_token(test_adapter.py)', '541': 'test_inspect_request(test_adapter.py)', '535': 'test_complete_reply(test_adapter.py)', '536': 'test_complete_request(test_adapter.py)', '538': 'test_execute_request(test_adapter.py)', '545': 'test_rename_type(test_adapter.py)', '546': 'test_same_version(test_adapter.py)', '544': 'test_no_adapt(test_adapter.py)', '695': 'test_send_raw(test_session.py)', '694': 'test_send(test_session.py)', '692': 'test_feed_identities(test_session.py)', '696': 'test_serialize(test_session.py)', '693': 'test_msg(test_session.py)', '328': 'interrupt_kernel(manager.py)', '166': 'is_complete(client.py)'}}, {'key': 570, 'parent': 1716, 'tfidf_word': 'EP: 570, Name: AsyncKernelClient &rarr; execute &rarr; msg &rarr; msg &rarr; extract_header', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 685, 'parent': 1716, 'tfidf_word': 'EP: 685, Name: BlockingKernelClient &rarr; execute &rarr; msg &rarr; msg &rarr; extract_header', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 560, 'parent': 1713, 'tfidf_word': 'EP: 560, Name: AsyncKernelClient &rarr; inspect &rarr; msg &rarr; msg &rarr; extract_header', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 675, 'parent': 1713, 'tfidf_word': 'EP: 675, Name: BlockingKernelClient &rarr; inspect &rarr; msg &rarr; msg &rarr; extract_header', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1710, 'parent': 2314, 'tfidf_word': 'client comm extract header info kernel async blocking msg ', 'tfidf_method': 'comm_info extract_header msg msg BlockingKernelClient AsyncKernelClient ', 'lda_word': ' msg,comm,header,kernel,info,', 'lda_method': ' msg,extract_header,comm_info,asynckernelclient,blockingkernelclient,', 'lsi_word': ' msg,comm,info,extract,client,', 'lsi_method': ' msg,extract_header,comm_info,blockingkernelclient,asynckernelclient,', 'spm_method': ' ', 'text_summary': '', 'files_count': 3, 'files': ['client.py', 'test_adapter.py', 'session.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'90': 'AsyncKernelClient(client.py)', '152': 'comm_info(client.py)', '520': 'msg(test_adapter.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '116': 'BlockingKernelClient(client.py)'}}, {'key': 2312, 'parent': 2314, 'tfidf_word': 'adapt input type identity found feed display data interrupt version ', 'tfidf_method': 'test_kernel_info_reply test_input_request test_serialize test_execute_reply test_display_data test_complete_request test_complete_reply is_complete test_object_info_reply test_execute_request ', 'lda_word': ' msg,extract,header,test,complete,', 'lda_method': ' msg,extract_header,blockingkernelclient,history,asynckernelclient,', 'lsi_word': ' msg,header,extract,test,kernel,', 'lsi_method': ' msg,extract_header,asynckernelclient,blockingkernelclient,history,', 'spm_method': ' ', 'text_summary': "Tab complete text in the kernel's namespace. Given a message or header, return the header. Ask the kernel whether some code is complete and ready to execute.", 'files_count': 5, 'files': ['client.py', 'test_adapter.py', 'session.py', 'test_session.py', 'manager.py'], 'execution_path_count': 26, 'function_id_to_name_file': {'90': 'AsyncKernelClient(client.py)', '169': 'shutdown(client.py)', '520': 'msg(test_adapter.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '116': 'BlockingKernelClient(client.py)', '153': 'complete(client.py)', '161': 'history(client.py)', '524': 'test_execute_reply(test_adapter.py)', '525': 'test_execute_request(test_adapter.py)', '532': 'test_rename_type(test_adapter.py)', '528': 'test_no_adapt(test_adapter.py)', '533': 'test_same_version(test_adapter.py)', '695': 'test_send_raw(test_session.py)', '692': 'test_feed_identities(test_session.py)', '694': 'test_send(test_session.py)', '693': 'test_msg(test_session.py)', '696': 'test_serialize(test_session.py)', '328': 'interrupt_kernel(manager.py)', '166': 'is_complete(client.py)', '526': 'test_input_request(test_adapter.py)', '523': 'test_display_data(test_adapter.py)', '527': 'test_kernel_info_reply(test_adapter.py)', '530': 'test_object_info_reply_not_found(test_adapter.py)', '531': 'test_object_info_request(test_adapter.py)', '529': 'test_object_info_reply(test_adapter.py)', '522': 'test_complete_request(test_adapter.py)', '521': 'test_complete_reply(test_adapter.py)'}}, {'key': 1313, 'parent': 1451, 'tfidf_word': 'EP: 1313, Name: do_execute &rarr; poll &rarr; restart_kernel &rarr; shutdown_kernel &rarr; request_shutdown &rarr; msg &rarr; msg &rarr; msg_header &rarr; msg_id', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1315, 'parent': 1451, 'tfidf_word': 'EP: 1315, Name: do_execute &rarr; poll &rarr; restart_kernel &rarr; shutdown_kernel &rarr; request_shutdown &rarr; msg &rarr; msg &rarr; msg &rarr; msg_header &rarr; msg_id', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1317, 'parent': 1452, 'tfidf_word': 'EP: 1317, Name: do_execute &rarr; poll &rarr; restart_kernel &rarr; shutdown_kernel &rarr; request_shutdown &rarr; msg &rarr; msg &rarr; msg_header &rarr; msg_id', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1319, 'parent': 1452, 'tfidf_word': 'EP: 1319, Name: do_execute &rarr; poll &rarr; restart_kernel &rarr; shutdown_kernel &rarr; request_shutdown &rarr; msg &rarr; msg &rarr; msg &rarr; msg_header &rarr; msg_id', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1301, 'parent': 1601, 'tfidf_word': 'EP: 1301, Name: do_execute &rarr; poll &rarr; restart_kernel &rarr; shutdown_kernel &rarr; request_shutdown &rarr; msg &rarr; extract_header', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1307, 'parent': 1601, 'tfidf_word': 'EP: 1307, Name: do_execute &rarr; poll &rarr; restart_kernel &rarr; shutdown_kernel &rarr; request_shutdown &rarr; send &rarr; msg &rarr; extract_header', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1580, 'parent': 1974, 'tfidf_word': 'execute extract header poll request restart kernel shutdown msg ', 'tfidf_method': 'poll request_shutdown restart_kernel shutdown_kernel extract_header msg do_execute msg msg ', 'lda_word': ' msg,shutdown,kernel,restart,extract,', 'lda_method': ' msg,shutdown_kernel,restart_kernel,extract_header,do_execute,', 'lsi_word': ' msg,shutdown,kernel,poll,request,', 'lsi_method': ' msg,restart_kernel,poll,shutdown_kernel,request_shutdown,', 'spm_method': '  &#187; do_execute(signalkernel.py) &rarr; poll(restarter.py) &rarr; restart_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br> &#187; poll(restarter.py) &rarr; restart_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br> &#187; restart_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br>', 'text_summary': 'Given a message or header, return the header. Restarts a kernel with the arguments that were used to launch it.', 'files_count': 5, 'files': ['signalkernel.py', 'restarter.py', 'manager.py', 'test_adapter.py', 'session.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'510': 'do_execute(signalkernel.py)', '236': 'poll(restarter.py)', '363': 'restart_kernel(manager.py)', '364': 'shutdown_kernel(manager.py)', '362': 'request_shutdown(manager.py)', '520': 'msg(test_adapter.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '534': 'msg(test_adapter.py)'}}, {'key': 1581, 'parent': 1974, 'tfidf_word': 'execute extract header poll request restart kernel shutdown msg ', 'tfidf_method': 'poll request_shutdown restart_kernel shutdown_kernel extract_header msg do_execute msg msg ', 'lda_word': ' kernel,msg,shutdown,restart,poll,', 'lda_method': ' msg,extract_header,request_shutdown,poll,do_execute,', 'lsi_word': ' msg,kernel,shutdown,execute,restart,', 'lsi_method': ' msg,extract_header,restart_kernel,poll,shutdown_kernel,', 'spm_method': '  &#187; do_execute(signalkernel.py) &rarr; poll(restarter.py) &rarr; restart_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br> &#187; poll(restarter.py) &rarr; restart_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br> &#187; restart_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br>', 'text_summary': 'Given a message or header, return the header.', 'files_count': 5, 'files': ['signalkernel.py', 'restarter.py', 'manager.py', 'test_adapter.py', 'session.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'510': 'do_execute(signalkernel.py)', '236': 'poll(restarter.py)', '363': 'restart_kernel(manager.py)', '364': 'shutdown_kernel(manager.py)', '362': 'request_shutdown(manager.py)', '534': 'msg(test_adapter.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '520': 'msg(test_adapter.py)'}}, {'key': 1311, 'parent': 1764, 'tfidf_word': 'EP: 1311, Name: do_execute &rarr; poll &rarr; restart_kernel &rarr; shutdown_kernel &rarr; request_shutdown &rarr; send &rarr; adapt &rarr; utcnow', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1603, 'parent': 1764, 'tfidf_word': 'execute poll request restart send message serialize sign kernel shutdown ', 'tfidf_method': 'poll request_shutdown restart_kernel shutdown_kernel send do_execute Message serialize sign ', 'lda_word': ' kernel,shutdown,request,restart,send,', 'lda_method': ' message,restart_kernel,do_execute,shutdown_kernel,request_shutdown,', 'lsi_word': ' kernel,shutdown,poll,request,restart,', 'lsi_method': ' do_execute,poll,send,restart_kernel,request_shutdown,', 'spm_method': '  &#187; do_execute(signalkernel.py) &rarr; poll(restarter.py) &rarr; restart_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) &rarr; send(session.py) . <br>', 'text_summary': 'Restarts a kernel with the arguments that were used to launch it. Pass a message to the ZMQ socket to send.', 'files_count': 4, 'files': ['signalkernel.py', 'restarter.py', 'manager.py', 'session.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'510': 'do_execute(signalkernel.py)', '236': 'poll(restarter.py)', '363': 'restart_kernel(manager.py)', '364': 'shutdown_kernel(manager.py)', '362': 'request_shutdown(manager.py)', '480': 'send(session.py)', '482': 'serialize(session.py)', '483': 'sign(session.py)', '440': 'Message(session.py)'}}, {'key': 1602, 'parent': 2002, 'tfidf_word': 'make poll request restart url control connect kernel shutdown socket ', 'tfidf_method': '_create_connected_socket _make_url poll request_shutdown restart_kernel shutdown_kernel do_execute _connect_control_socket ', 'lda_word': ' kernel,shutdown,connect,socket,create,', 'lda_method': ' poll,request_shutdown,make_url,create_connected_socket,shutdown_kernel,', 'lsi_word': ' kernel,shutdown,socket,connect,restart,', 'lsi_method': ' poll,make_url,restart_kernel,request_shutdown,shutdown_kernel,', 'spm_method': '  &#187; do_execute(signalkernel.py) &rarr; poll(restarter.py) &rarr; restart_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) &rarr; _create_connected_socket(connect.py) &rarr; _make_url(connect.py) . <br> &#187; poll(restarter.py) &rarr; restart_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) &rarr; _create_connected_socket(connect.py) &rarr; _make_url(connect.py) . <br>', 'text_summary': 'Create a zmq Socket and connect it to the kernel. Restarts a kernel with the arguments that were used to launch it.', 'files_count': 4, 'files': ['signalkernel.py', 'restarter.py', 'manager.py', 'connect.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'510': 'do_execute(signalkernel.py)', '236': 'poll(restarter.py)', '363': 'restart_kernel(manager.py)', '364': 'shutdown_kernel(manager.py)', '362': 'request_shutdown(manager.py)', '338': '_connect_control_socket(manager.py)', '192': '_create_connected_socket(connect.py)', '196': '_make_url(connect.py)'}}, {'key': 1786, 'parent': 2002, 'tfidf_word': 'execute poll request restart kernel send shutdown thread ', 'tfidf_method': 'poll request_shutdown restart_kernel shutdown_kernel do_execute send send thread_send send ', 'lda_word': ' kernel,shutdown,execute,poll,send,', 'lda_method': ' request_shutdown,restart_kernel,send,poll,shutdown_kernel,', 'lsi_word': ' kernel,shutdown,send,poll,request,', 'lsi_method': ' shutdown_kernel,restart_kernel,request_shutdown,poll,send,', 'spm_method': ' ', 'text_summary': 'Restarts a kernel with the arguments that were used to launch it. Pass a message to the ZMQ socket to send.', 'files_count': 5, 'files': ['signalkernel.py', 'restarter.py', 'manager.py', 'threaded.py', 'channels.py'], 'execution_path_count': 3, 'function_id_to_name_file': {'510': 'do_execute(signalkernel.py)', '236': 'poll(restarter.py)', '363': 'restart_kernel(manager.py)', '364': 'shutdown_kernel(manager.py)', '362': 'request_shutdown(manager.py)', '734': 'send(threaded.py)', '738': 'thread_send(threaded.py)', '88': 'send(channels.py)', '114': 'send(channels.py)'}}, {'key': 1321, 'parent': 1597, 'tfidf_word': 'EP: 1321, Name: do_execute &rarr; poll &rarr; restart_kernel &rarr; shutdown_kernel &rarr; finish_shutdown &rarr; has_kernel &rarr; _launch_kernel', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1324, 'parent': 1597, 'tfidf_word': 'EP: 1324, Name: do_execute &rarr; poll &rarr; restart_kernel &rarr; shutdown_kernel &rarr; finish_shutdown &rarr; is_alive &rarr; has_kernel &rarr; _launch_kernel', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1292, 'parent': 1604, 'tfidf_word': 'EP: 1292, Name: do_execute &rarr; poll &rarr; restart_kernel &rarr; shutdown_kernel &rarr; _kill_kernel &rarr; has_kernel &rarr; _launch_kernel', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1322, 'parent': 1604, 'tfidf_word': 'EP: 1322, Name: do_execute &rarr; poll &rarr; restart_kernel &rarr; shutdown_kernel &rarr; finish_shutdown &rarr; _kill_kernel &rarr; has_kernel &rarr; _launch_kernel', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1294, 'parent': 1785, 'tfidf_word': 'EP: 1294, Name: do_execute &rarr; poll &rarr; restart_kernel &rarr; shutdown_kernel &rarr; cleanup_resources &rarr; cleanup_connection_file', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1298, 'parent': 1785, 'tfidf_word': 'EP: 1298, Name: do_execute &rarr; poll &rarr; restart_kernel &rarr; shutdown_kernel &rarr; cleanup &rarr; cleanup_resources &rarr; cleanup_connection_file', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1328, 'parent': 2055, 'tfidf_word': 'EP: 1328, Name: do_execute &rarr; poll &rarr; _fire_callbacks', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1329, 'parent': 2055, 'tfidf_word': 'EP: 1329, Name: do_execute &rarr; poll &rarr; is_alive', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1325, 'parent': 2087, 'tfidf_word': 'EP: 1325, Name: do_execute &rarr; poll &rarr; restart_kernel', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1326, 'parent': 2087, 'tfidf_word': 'EP: 1326, Name: do_execute &rarr; poll &rarr; restart_kernel', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1276, 'parent': 2212, 'tfidf_word': 'EP: 1276, Name: do_execute &rarr; poll &rarr; is_alive', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1278, 'parent': 2212, 'tfidf_word': 'EP: 1278, Name: do_execute &rarr; poll &rarr; is_alive', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1287, 'parent': 1598, 'tfidf_word': 'EP: 1287, Name: do_execute &rarr; poll &rarr; restart_kernel &rarr; start_kernel &rarr; pre_start_kernel &rarr; write_connection_file &rarr; _record_random_port_names', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1290, 'parent': 1598, 'tfidf_word': 'EP: 1290, Name: do_execute &rarr; poll &rarr; restart_kernel &rarr; start_kernel &rarr; pre_start_kernel &rarr; format_kernel_cmd &rarr; write_connection_file &rarr; _record_random_port_names', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1288, 'parent': 1599, 'tfidf_word': 'EP: 1288, Name: do_execute &rarr; poll &rarr; restart_kernel &rarr; start_kernel &rarr; pre_start_kernel &rarr; format_kernel_cmd &rarr; from_ns', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1289, 'parent': 1599, 'tfidf_word': 'EP: 1289, Name: do_execute &rarr; poll &rarr; restart_kernel &rarr; start_kernel &rarr; pre_start_kernel &rarr; format_kernel_cmd &rarr; kernel_spec &rarr; KernelSpec', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1286, 'parent': 1577, 'tfidf_word': 'EP: 1286, Name: do_execute &rarr; poll &rarr; restart_kernel &rarr; start_kernel &rarr; pre_start_kernel &rarr; _get_env_substitutions', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1576, 'parent': 1577, 'tfidf_word': 'execute ip local poll pre restart start kernel ', 'tfidf_method': 'poll pre_start_kernel restart_kernel start_kernel do_execute is_local_ip local_ips ', 'lda_word': ' kernel,start,ip,execute,pre,', 'lda_method': ' pre_start_kernel,restart_kernel,poll,start_kernel,do_execute,', 'lsi_word': ' kernel,start,poll,restart,ip,', 'lsi_method': ' restart_kernel,pre_start_kernel,poll,start_kernel,do_execute,', 'spm_method': ' ', 'text_summary': 'Restarts a kernel with the arguments that were used to launch it.', 'files_count': 4, 'files': ['signalkernel.py', 'restarter.py', 'manager.py', 'localinterfaces.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'510': 'do_execute(signalkernel.py)', '236': 'poll(restarter.py)', '363': 'restart_kernel(manager.py)', '366': 'start_kernel(manager.py)', '360': 'pre_start_kernel(manager.py)', '314': 'local_ips(localinterfaces.py)', '312': 'is_local_ip(localinterfaces.py)'}}, {'key': 225, 'parent': 1465, 'tfidf_word': 'EP: 225, Name: start &rarr; start &rarr; execute_interactive &rarr; _stdin_hook_default &rarr; input &rarr; msg &rarr; msg &rarr; extract_header', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 227, 'parent': 1465, 'tfidf_word': 'EP: 227, Name: start &rarr; start &rarr; execute_interactive &rarr; _stdin_hook_default &rarr; input &rarr; msg &rarr; msg &rarr; msg &rarr; extract_header', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 229, 'parent': 1466, 'tfidf_word': 'EP: 229, Name: start &rarr; start &rarr; execute_interactive &rarr; _stdin_hook_default &rarr; input &rarr; msg &rarr; msg &rarr; extract_header', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 231, 'parent': 1466, 'tfidf_word': 'EP: 231, Name: start &rarr; start &rarr; execute_interactive &rarr; _stdin_hook_default &rarr; input &rarr; msg &rarr; msg &rarr; msg &rarr; extract_header', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 223, 'parent': 1588, 'tfidf_word': 'EP: 223, Name: start &rarr; start &rarr; execute_interactive &rarr; _stdin_hook_default &rarr; input &rarr; msg &rarr; extract_header', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 224, 'parent': 1588, 'tfidf_word': 'EP: 224, Name: start &rarr; start &rarr; execute_interactive &rarr; _stdin_hook_default &rarr; input &rarr; msg &rarr; msg_header &rarr; msg_id', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1447, 'parent': 1787, 'tfidf_word': 'default execute header hook id input interactive stdin start msg ', 'tfidf_method': '_stdin_hook_default execute_interactive input start start msg msg_header msg_id msg msg ', 'lda_word': ' msg,hook,start,stdin,execute,', 'lda_method': ' msg,start,input,execute_interactive,msg_header,', 'lsi_word': ' msg,start,default,interactive,stdin,', 'lsi_method': ' msg,start,execute_interactive,input,msg_header,', 'spm_method': '  &#187; start(kernelspecapp.py) &rarr; start(runapp.py) &rarr; execute_interactive(client.py) &rarr; _stdin_hook_default(client.py) &rarr; input(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; start(runapp.py) &rarr; execute_interactive(client.py) &rarr; _stdin_hook_default(client.py) &rarr; input(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; execute_interactive(client.py) &rarr; _stdin_hook_default(client.py) &rarr; input(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; _stdin_hook_default(client.py) &rarr; input(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br>', 'text_summary': 'Start the polling of the kernel.', 'files_count': 5, 'files': ['kernelspecapp.py', 'runapp.py', 'client.py', 'test_adapter.py', 'session.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'291': 'start(kernelspecapp.py)', '439': 'start(runapp.py)', '122': 'execute_interactive(client.py)', '121': '_stdin_hook_default(client.py)', '162': 'input(client.py)', '520': 'msg(test_adapter.py)', '476': 'msg(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '534': 'msg(test_adapter.py)'}}, {'key': 1448, 'parent': 1787, 'tfidf_word': 'default execute header hook id input interactive stdin start msg ', 'tfidf_method': '_stdin_hook_default execute_interactive input start start msg msg_header msg_id msg msg ', 'lda_word': ' msg,start,header,interactive,default,', 'lda_method': ' msg,msg_header,start,input,execute_interactive,', 'lsi_word': ' msg,start,default,execute,stdin,', 'lsi_method': ' msg,start,execute_interactive,msg_header,input,', 'spm_method': '  &#187; start(kernelspecapp.py) &rarr; start(runapp.py) &rarr; execute_interactive(client.py) &rarr; _stdin_hook_default(client.py) &rarr; input(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; start(runapp.py) &rarr; execute_interactive(client.py) &rarr; _stdin_hook_default(client.py) &rarr; input(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; execute_interactive(client.py) &rarr; _stdin_hook_default(client.py) &rarr; input(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; _stdin_hook_default(client.py) &rarr; input(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br>', 'text_summary': 'Start the polling of the kernel. Execute code in the kernel interactively.', 'files_count': 5, 'files': ['kernelspecapp.py', 'runapp.py', 'client.py', 'test_adapter.py', 'session.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'291': 'start(kernelspecapp.py)', '439': 'start(runapp.py)', '122': 'execute_interactive(client.py)', '121': '_stdin_hook_default(client.py)', '162': 'input(client.py)', '534': 'msg(test_adapter.py)', '476': 'msg(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '520': 'msg(test_adapter.py)'}}, {'key': 221, 'parent': 1677, 'tfidf_word': 'EP: 221, Name: start &rarr; start &rarr; execute_interactive &rarr; _recv_reply &rarr; get_control_msg', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 222, 'parent': 1677, 'tfidf_word': 'EP: 222, Name: start &rarr; start &rarr; execute_interactive &rarr; _recv_reply &rarr; get_shell_msg', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 244, 'parent': 2046, 'tfidf_word': 'EP: 244, Name: start &rarr; start &rarr; execute_interactive &rarr; get_msg &rarr; _recv', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2042, 'parent': 2046, 'tfidf_word': 'start default get kernel msg recv reqrep wrap hook output ', 'tfidf_method': 'reqrep _output_hook_kernel wrapped is_alive is_alive is_alive is_alive _recv get_msg is_alive ', 'lda_word': ' start,interactive,execute,alive,get,', 'lda_method': ' start,execute_interactive,is_alive,output_hook_default,wrap,', 'lsi_word': ' start,interactive,execute,alive,output,', 'lsi_method': ' start,execute_interactive,is_alive,output_hook_default,output_hook_kernel,', 'spm_method': ' ', 'text_summary': 'Start the polling of the kernel. Output hook when running inside an IPython kernel. Default hook for redisplaying plain-text output.', 'files_count': 8, 'files': ['kernelspecapp.py', 'runapp.py', 'client.py', 'channels.py', 'managerabc.py', 'multikernelmanager.py', 'channelsabc.py', 'threaded.py'], 'execution_path_count': 10, 'function_id_to_name_file': {'291': 'start(kernelspecapp.py)', '439': 'start(runapp.py)', '122': 'execute_interactive(client.py)', '84': 'get_msg(channels.py)', '82': '_recv(channels.py)', '119': '_output_hook_kernel(client.py)', '118': '_output_hook_default(client.py)', '117': 'reqrep(client.py)', '124': 'wrapped(client.py)', '112': 'is_alive(channels.py)', '373': 'is_alive(managerabc.py)', '412': 'is_alive(multikernelmanager.py)', '140': 'is_alive(channelsabc.py)', '86': 'is_alive(channels.py)', '732': 'is_alive(threaded.py)'}}, {'key': 264, 'parent': 1467, 'tfidf_word': 'EP: 264, Name: start &rarr; start &rarr; execute_interactive &rarr; _stdin_hook_default &rarr; input &rarr; msg &rarr; msg &rarr; extract_header', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 266, 'parent': 1467, 'tfidf_word': 'EP: 266, Name: start &rarr; start &rarr; execute_interactive &rarr; _stdin_hook_default &rarr; input &rarr; msg &rarr; msg &rarr; msg &rarr; extract_header', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 268, 'parent': 1468, 'tfidf_word': 'EP: 268, Name: start &rarr; start &rarr; execute_interactive &rarr; _stdin_hook_default &rarr; input &rarr; msg &rarr; msg &rarr; extract_header', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 270, 'parent': 1468, 'tfidf_word': 'EP: 270, Name: start &rarr; start &rarr; execute_interactive &rarr; _stdin_hook_default &rarr; input &rarr; msg &rarr; msg &rarr; msg &rarr; extract_header', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 262, 'parent': 1589, 'tfidf_word': 'EP: 262, Name: start &rarr; start &rarr; execute_interactive &rarr; _stdin_hook_default &rarr; input &rarr; msg &rarr; extract_header', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 263, 'parent': 1589, 'tfidf_word': 'EP: 263, Name: start &rarr; start &rarr; execute_interactive &rarr; _stdin_hook_default &rarr; input &rarr; msg &rarr; msg_header &rarr; msg_id', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1449, 'parent': 1788, 'tfidf_word': 'default execute header hook id input interactive stdin start msg ', 'tfidf_method': 'input start start msg msg_header msg_id msg _stdin_hook_default execute_interactive msg ', 'lda_word': ' msg,start,interactive,input,hook,', 'lda_method': ' msg,stdin_hook_default,msg_id,start,msg_header,', 'lsi_word': ' msg,start,interactive,execute,input,', 'lsi_method': ' msg,start,msg_header,stdin_hook_default,msg_id,', 'spm_method': '  &#187; start(kernelspecapp.py) &rarr; start(runapp.py) &rarr; execute_interactive(client.py) &rarr; _stdin_hook_default(client.py) &rarr; input(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; start(runapp.py) &rarr; execute_interactive(client.py) &rarr; _stdin_hook_default(client.py) &rarr; input(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; execute_interactive(client.py) &rarr; _stdin_hook_default(client.py) &rarr; input(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; _stdin_hook_default(client.py) &rarr; input(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br>', 'text_summary': 'Start the polling of the kernel. Execute code in the kernel interactively.', 'files_count': 5, 'files': ['kernelspecapp.py', 'runapp.py', 'client.py', 'test_adapter.py', 'session.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'291': 'start(kernelspecapp.py)', '439': 'start(runapp.py)', '97': 'execute_interactive(client.py)', '96': '_stdin_hook_default(client.py)', '162': 'input(client.py)', '520': 'msg(test_adapter.py)', '476': 'msg(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '534': 'msg(test_adapter.py)'}}, {'key': 1450, 'parent': 1788, 'tfidf_word': 'default execute header hook id input interactive stdin start msg ', 'tfidf_method': 'input start start msg msg_header msg_id msg _stdin_hook_default execute_interactive msg ', 'lda_word': ' msg,start,interactive,stdin,execute,', 'lda_method': ' msg,start,msg_header,stdin_hook_default,input,', 'lsi_word': ' msg,start,default,header,hook,', 'lsi_method': ' msg,start,msg_header,stdin_hook_default,msg_id,', 'spm_method': '  &#187; start(kernelspecapp.py) &rarr; start(runapp.py) &rarr; execute_interactive(client.py) &rarr; _stdin_hook_default(client.py) &rarr; input(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; start(runapp.py) &rarr; execute_interactive(client.py) &rarr; _stdin_hook_default(client.py) &rarr; input(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; execute_interactive(client.py) &rarr; _stdin_hook_default(client.py) &rarr; input(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; _stdin_hook_default(client.py) &rarr; input(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br>', 'text_summary': 'Start the polling of the kernel. Execute code in the kernel interactively.', 'files_count': 5, 'files': ['kernelspecapp.py', 'runapp.py', 'client.py', 'test_adapter.py', 'session.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'291': 'start(kernelspecapp.py)', '439': 'start(runapp.py)', '97': 'execute_interactive(client.py)', '96': '_stdin_hook_default(client.py)', '162': 'input(client.py)', '534': 'msg(test_adapter.py)', '476': 'msg(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '520': 'msg(test_adapter.py)'}}, {'key': 258, 'parent': 1877, 'tfidf_word': 'EP: 258, Name: start &rarr; start &rarr; execute_interactive &rarr; _recv_reply &rarr; get_shell_msg &rarr; get_msg &rarr; _recv', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 259, 'parent': 1877, 'tfidf_word': 'EP: 259, Name: start &rarr; start &rarr; execute_interactive &rarr; _recv_reply &rarr; get_shell_msg &rarr; get_msg &rarr; _recv', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 260, 'parent': 1878, 'tfidf_word': 'EP: 260, Name: start &rarr; start &rarr; execute_interactive &rarr; _recv_reply &rarr; get_control_msg &rarr; get_msg &rarr; _recv', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 261, 'parent': 1878, 'tfidf_word': 'EP: 261, Name: start &rarr; start &rarr; execute_interactive &rarr; _recv_reply &rarr; get_control_msg &rarr; get_msg &rarr; _recv', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 272, 'parent': 1679, 'tfidf_word': 'EP: 272, Name: start &rarr; start &rarr; execute_interactive &rarr; _stdin_hook_default &rarr; msg_ready', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 273, 'parent': 1679, 'tfidf_word': 'EP: 273, Name: start &rarr; start &rarr; execute_interactive &rarr; _stdin_hook_default &rarr; msg_ready', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 256, 'parent': 2047, 'tfidf_word': 'EP: 256, Name: start &rarr; start &rarr; execute_interactive &rarr; reqrep &rarr; wrapped', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2043, 'parent': 2047, 'tfidf_word': 'interactive alive start default get msg recv kernel hook output ', 'tfidf_method': 'get_msg is_alive is_alive is_alive is_alive is_alive _recv get_msg is_alive _output_hook_kernel ', 'lda_word': ' start,execute,interactive,alive,get,', 'lda_method': ' start,execute_interactive,is_alive,output_hook_default,recv,', 'lsi_word': ' start,interactive,execute,alive,hook,', 'lsi_method': ' start,execute_interactive,is_alive,get_msg,recv,', 'spm_method': ' ', 'text_summary': 'Output hook when running inside an IPython kernel. Default hook for redisplaying plain-text output. Execute code in the kernel interactively.', 'files_count': 8, 'files': ['kernelspecapp.py', 'runapp.py', 'client.py', 'channels.py', 'managerabc.py', 'multikernelmanager.py', 'threaded.py', 'channelsabc.py'], 'execution_path_count': 10, 'function_id_to_name_file': {'291': 'start(kernelspecapp.py)', '439': 'start(runapp.py)', '97': 'execute_interactive(client.py)', '110': 'get_msg(channels.py)', '108': '_recv(channels.py)', '94': '_output_hook_kernel(client.py)', '93': '_output_hook_default(client.py)', '84': 'get_msg(channels.py)', '82': '_recv(channels.py)', '112': 'is_alive(channels.py)', '373': 'is_alive(managerabc.py)', '412': 'is_alive(multikernelmanager.py)', '86': 'is_alive(channels.py)', '732': 'is_alive(threaded.py)', '140': 'is_alive(channelsabc.py)'}}, {'key': 834, 'parent': 1936, 'tfidf_word': 'EP: 834, Name: test_bad_unpacker &rarr; __init__ &rarr; _check_packers &rarr; utcnow', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 835, 'parent': 1936, 'tfidf_word': 'EP: 835, Name: test_bad_unpacker &rarr; __init__ &rarr; _check_packers &rarr; squash_dates', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2328, 'parent': 2342, 'tfidf_word': 'history args up unpack pack session id cull set zero ', 'tfidf_method': 'squash_dates utcnow setUp test_args test_bad_pack test_bad_packer test_bad_unpack test_cull_digest_history test_session_id test_zero_digest_history ', 'lda_word': ' init,packer,check,utcnow,test,', 'lda_method': ' test_zero_digest_history,check_packers,init,utcnow,squash_dates,', 'lsi_word': ' packer,check,init,test,date,', 'lsi_method': ' init,check_packers,squash_dates,utcnow,test_zero_digest_history,', 'spm_method': ' ', 'text_summary': 'Return timezone-aware UTC timestamp. squash datetime objects into ISO8601 strings. check packers for datetime support.', 'files_count': 3, 'files': ['test_session.py', 'session.py', 'jsonutil.py'], 'execution_path_count': 16, 'function_id_to_name_file': {'682': 'test_bad_packer(test_session.py)', '457': '__init__(session.py)', '459': '_check_packers(session.py)', '450': 'utcnow(session.py)', '244': 'squash_dates(jsonutil.py)', '684': 'test_bad_unpack(test_session.py)', '681': 'test_bad_pack(test_session.py)', '687': 'test_cull_digest_history(test_session.py)', '700': 'test_zero_digest_history(test_session.py)', '697': 'test_session_id(test_session.py)', '678': 'setUp(test_session.py)', '680': 'test_args(test_session.py)'}}, {'key': 2339, 'parent': 2342, 'tfidf_word': 'check packer date default session squash utcnow init ', 'tfidf_method': '__init__ _check_packers _session_default __init__ squash_dates utcnow ', 'lda_word': ' init,packer,check,default,squash,', 'lda_method': ' session_default,utcnow,check_packers,init,squash_dates,', 'lsi_word': ' init,packer,check,squash,date,', 'lsi_method': ' init,check_packers,utcnow,squash_dates,session_default,', 'spm_method': ' ', 'text_summary': '', 'files_count': 4, 'files': ['consoleapp.py', 'session.py', 'jsonutil.py', 'connect.py'], 'execution_path_count': 4, 'function_id_to_name_file': {'215': '__init__(consoleapp.py)', '457': '__init__(session.py)', '459': '_check_packers(session.py)', '450': 'utcnow(session.py)', '244': 'squash_dates(jsonutil.py)', '198': '_session_default(connect.py)'}}, {'key': 1079, 'parent': 1947, 'tfidf_word': 'EP: 1079, Name: test_load_connection_file_session_with_kn &rarr; __init__ &rarr; _check_packers &rarr; utcnow', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1080, 'parent': 1947, 'tfidf_word': 'EP: 1080, Name: test_load_connection_file_session_with_kn &rarr; __init__ &rarr; _check_packers &rarr; squash_dates', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1943, 'parent': 2330, 'tfidf_word': 'connection file init load packer session test date squash utcnow ', 'tfidf_method': '__init__ _check_packers test_load_connection_file_session squash_dates utcnow ', 'lda_word': ' load,date,session,squash,connection,', 'lda_method': ' check_packers,test_load_connection_file_session,init,utcnow,squash_dates,', 'lsi_word': ' connection,packer,test,session,check,', 'lsi_method': ' check_packers,init,test_load_connection_file_session,utcnow,squash_dates,', 'spm_method': ' ', 'text_summary': 'Return timezone-aware UTC timestamp. check packers for datetime support.', 'files_count': 3, 'files': ['test_connect.py', 'session.py', 'jsonutil.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'564': 'test_load_connection_file_session(test_connect.py)', '457': '__init__(session.py)', '459': '_check_packers(session.py)', '450': 'utcnow(session.py)', '244': 'squash_dates(jsonutil.py)'}}, {'key': 2329, 'parent': 2330, 'tfidf_word': 'init packer date default set squash test up utcnow version ', 'tfidf_method': '__init__ _check_packers squash_dates utcnow test_default_version setUp ', 'lda_word': ' test,default,packer,version,init,', 'lda_method': ' utcnow,check_packers,setup,init,squash_dates,', 'lsi_word': ' packer,init,check,version,test,', 'lsi_method': ' check_packers,init,squash_dates,setup,test_default_version,', 'spm_method': ' ', 'text_summary': '', 'files_count': 3, 'files': ['test_adapter.py', 'session.py', 'jsonutil.py'], 'execution_path_count': 4, 'function_id_to_name_file': {'516': 'test_default_version(test_adapter.py)', '457': '__init__(session.py)', '459': '_check_packers(session.py)', '450': 'utcnow(session.py)', '244': 'squash_dates(jsonutil.py)', '519': 'setUp(test_adapter.py)'}}, {'key': 848, 'parent': 1938, 'tfidf_word': 'EP: 848, Name: test_datetimes_pickle &rarr; __init__ &rarr; _check_packers &rarr; utcnow', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 849, 'parent': 1938, 'tfidf_word': 'EP: 849, Name: test_datetimes_pickle &rarr; __init__ &rarr; _check_packers &rarr; squash_dates', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 853, 'parent': 1939, 'tfidf_word': 'EP: 853, Name: test_datetimes_msgpack &rarr; __init__ &rarr; _check_packers &rarr; utcnow', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 854, 'parent': 1939, 'tfidf_word': 'EP: 854, Name: test_datetimes_msgpack &rarr; __init__ &rarr; _check_packers &rarr; squash_dates', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1575, 'parent': 2393, 'tfidf_word': 'test wrap ipc manager multi cinfo lifecycle sequence start kernel ', 'tfidf_method': 'AsyncMultiKernelManager MultiKernelManager kernel_method wrapped _get_ipc_km test_ipc_cinfo test_ipc_lifecycle test_start_sequence_ipc_kernels ', 'lda_word': ' kernel,manager,multi,km,ipc,', 'lda_method': ' multikernelmanager,kernel_method,asyncmultikernelmanager,wrap,get_ipc_km,', 'lsi_word': ' kernel,ipc,multi,manager,wrap,', 'lsi_method': ' kernel_method,asyncmultikernelmanager,wrap,multikernelmanager,get_ipc_km,', 'spm_method': ' ', 'text_summary': '', 'files_count': 2, 'files': ['test_multikernelmanager.py', 'multikernelmanager.py'], 'execution_path_count': 3, 'function_id_to_name_file': {'649': 'test_start_sequence_ipc_kernels(test_multikernelmanager.py)', '638': '_get_ipc_km(test_multikernelmanager.py)', '379': 'AsyncMultiKernelManager(multikernelmanager.py)', '381': 'MultiKernelManager(multikernelmanager.py)', '382': 'kernel_method(multikernelmanager.py)', '425': 'wrapped(multikernelmanager.py)', '645': 'test_ipc_lifecycle(test_multikernelmanager.py)', '644': 'test_ipc_cinfo(test_multikernelmanager.py)'}}, {'key': 2033, 'parent': 2393, 'tfidf_word': 'loop thread process lifecycle tcp id sequence shutdown cinfo kernel ', 'tfidf_method': '_get_tcp_km raw_tcp_lifecycle tcp_lifecycle_with_loop test_start_parallel_process_kernels test_start_parallel_thread_kernels test_shutdown_all test_start_sequence_tcp_kernels test_tcp_cinfo test_tcp_lifecycle test_tcp_lifecycle_with_kernel_id ', 'lda_word': ' kernel,tcp,multi,manager,lifecycle,', 'lda_method': ' multikernelmanager,kernel_method,get_tcp_km,wrap,asyncmultikernelmanager,', 'lsi_word': ' kernel,tcp,multi,manager,lifecycle,', 'lsi_method': ' asyncmultikernelmanager,get_tcp_km,kernel_method,wrap,multikernelmanager,', 'spm_method': '  &#187; test_start_parallel_thread_kernels(test_multikernelmanager.py) &rarr; raw_tcp_lifecycle(test_multikernelmanager.py) &rarr; _get_tcp_km(test_multikernelmanager.py) &rarr; AsyncMultiKernelManager(multikernelmanager.py) &rarr; MultiKernelManager(multikernelmanager.py) &rarr; kernel_method(multikernelmanager.py) &rarr; wrapped(multikernelmanager.py) . <br> &#187; tcp_lifecycle_with_loop(test_multikernelmanager.py) &rarr; raw_tcp_lifecycle(test_multikernelmanager.py) &rarr; _get_tcp_km(test_multikernelmanager.py) &rarr; AsyncMultiKernelManager(multikernelmanager.py) &rarr; MultiKernelManager(multikernelmanager.py) &rarr; kernel_method(multikernelmanager.py) &rarr; wrapped(multikernelmanager.py) . <br> &#187; raw_tcp_lifecycle(test_multikernelmanager.py) &rarr; _get_tcp_km(test_multikernelmanager.py) &rarr; AsyncMultiKernelManager(multikernelmanager.py) &rarr; MultiKernelManager(multikernelmanager.py) &rarr; kernel_method(multikernelmanager.py) &rarr; wrapped(multikernelmanager.py) . <br> &#187; test_start_parallel_process_kernels(test_multikernelmanager.py) &rarr; raw_tcp_lifecycle(test_multikernelmanager.py) &rarr; _get_tcp_km(test_multikernelmanager.py) &rarr; AsyncMultiKernelManager(multikernelmanager.py) &rarr; MultiKernelManager(multikernelmanager.py) &rarr; kernel_method(multikernelmanager.py) &rarr; wrapped(multikernelmanager.py) . <br>', 'text_summary': '', 'files_count': 2, 'files': ['test_multikernelmanager.py', 'multikernelmanager.py'], 'execution_path_count': 9, 'function_id_to_name_file': {'650': 'test_start_sequence_tcp_kernels(test_multikernelmanager.py)', '639': '_get_tcp_km(test_multikernelmanager.py)', '379': 'AsyncMultiKernelManager(multikernelmanager.py)', '381': 'MultiKernelManager(multikernelmanager.py)', '382': 'kernel_method(multikernelmanager.py)', '425': 'wrapped(multikernelmanager.py)', '646': 'test_shutdown_all(test_multikernelmanager.py)', '651': 'test_tcp_cinfo(test_multikernelmanager.py)', '648': 'test_start_parallel_thread_kernels(test_multikernelmanager.py)', '643': 'tcp_lifecycle_with_loop(test_multikernelmanager.py)', '642': 'raw_tcp_lifecycle(test_multikernelmanager.py)', '647': 'test_start_parallel_process_kernels(test_multikernelmanager.py)', '652': 'test_tcp_lifecycle(test_multikernelmanager.py)', '653': 'test_tcp_lifecycle_with_kernel_id(test_multikernelmanager.py)'}}, {'key': 1757, 'parent': 2414, 'tfidf_word': 'method multi test wrap ipc cinfo lifecycle sequence start kernel ', 'tfidf_method': 'MultiKernelManager kernel_method wrapped _get_ipc_km test_ipc_cinfo test_ipc_lifecycle test_start_sequence_ipc_kernels ', 'lda_word': ' kernel,ipc,method,multi,manager,', 'lda_method': ' multikernelmanager,get_ipc_km,wrap,kernel_method,test_ipc_cinfo,', 'lsi_word': ' kernel,ipc,multi,km,test,', 'lsi_method': ' wrap,multikernelmanager,kernel_method,get_ipc_km,test_start_sequence_ipc_kernels,', 'spm_method': ' ', 'text_summary': '', 'files_count': 2, 'files': ['test_multikernelmanager.py', 'multikernelmanager.py'], 'execution_path_count': 3, 'function_id_to_name_file': {'664': 'test_start_sequence_ipc_kernels(test_multikernelmanager.py)', '654': '_get_ipc_km(test_multikernelmanager.py)', '381': 'MultiKernelManager(multikernelmanager.py)', '382': 'kernel_method(multikernelmanager.py)', '425': 'wrapped(multikernelmanager.py)', '660': 'test_ipc_lifecycle(test_multikernelmanager.py)', '659': 'test_ipc_cinfo(test_multikernelmanager.py)'}}, {'key': 2272, 'parent': 2414, 'tfidf_word': 'loop thread process lifecycle tcp kernel id sequence shutdown cinfo ', 'tfidf_method': 'wrapped _get_tcp_km test_tcp_lifecycle tcp_lifecycle_with_loop test_start_parallel_process_kernels test_start_parallel_thread_kernels test_shutdown_all test_start_sequence_tcp_kernels test_tcp_cinfo test_tcp_lifecycle_with_kernel_id ', 'lda_word': ' kernel,tcp,test,wrap,parallel,', 'lda_method': ' multikernelmanager,kernel_method,get_tcp_km,wrap,test_tcp_lifecycle,', 'lsi_word': ' kernel,tcp,test,lifecycle,get,', 'lsi_method': ' get_tcp_km,multikernelmanager,wrap,kernel_method,test_tcp_lifecycle,', 'spm_method': '  &#187; test_start_parallel_thread_kernels(test_multikernelmanager.py) &rarr; test_tcp_lifecycle(test_multikernelmanager.py) &rarr; _get_tcp_km(test_multikernelmanager.py) &rarr; MultiKernelManager(multikernelmanager.py) &rarr; kernel_method(multikernelmanager.py) &rarr; wrapped(multikernelmanager.py) . <br> &#187; tcp_lifecycle_with_loop(test_multikernelmanager.py) &rarr; test_tcp_lifecycle(test_multikernelmanager.py) &rarr; _get_tcp_km(test_multikernelmanager.py) &rarr; MultiKernelManager(multikernelmanager.py) &rarr; kernel_method(multikernelmanager.py) &rarr; wrapped(multikernelmanager.py) . <br> &#187; test_start_parallel_process_kernels(test_multikernelmanager.py) &rarr; test_tcp_lifecycle(test_multikernelmanager.py) &rarr; _get_tcp_km(test_multikernelmanager.py) &rarr; MultiKernelManager(multikernelmanager.py) &rarr; kernel_method(multikernelmanager.py) &rarr; wrapped(multikernelmanager.py) . <br>', 'text_summary': '', 'files_count': 2, 'files': ['test_multikernelmanager.py', 'multikernelmanager.py'], 'execution_path_count': 8, 'function_id_to_name_file': {'665': 'test_start_sequence_tcp_kernels(test_multikernelmanager.py)', '655': '_get_tcp_km(test_multikernelmanager.py)', '381': 'MultiKernelManager(multikernelmanager.py)', '382': 'kernel_method(multikernelmanager.py)', '425': 'wrapped(multikernelmanager.py)', '666': 'test_tcp_cinfo(test_multikernelmanager.py)', '668': 'test_tcp_lifecycle_with_kernel_id(test_multikernelmanager.py)', '661': 'test_shutdown_all(test_multikernelmanager.py)', '663': 'test_start_parallel_thread_kernels(test_multikernelmanager.py)', '658': 'tcp_lifecycle_with_loop(test_multikernelmanager.py)', '667': 'test_tcp_lifecycle(test_multikernelmanager.py)', '662': 'test_start_parallel_process_kernels(test_multikernelmanager.py)'}}, {'key': 2259, 'parent': 2687, 'tfidf_word': 'connection file new path real start test async manager kernel ', 'tfidf_method': 'KernelSpec KernelSpecManager KernelManager AsyncKernelManager AsyncIOLoopKernelManager IOLoopKernelManager start_new_async_kernel test_connection_file_real_path ', 'lda_word': ' kernel,manager,spec,async,loop,', 'lda_method': ' kernelspec,kernelmanager,kernelspecmanager,start_new_async_kernel,asynckernelmanager,', 'lsi_word': ' kernel,manager,spec,async,loop,', 'lsi_method': ' kernelspec,kernelmanager,kernelspecmanager,asynckernelmanager,asyncioloopkernelmanager,', 'spm_method': ' ', 'text_summary': 'Empty', 'files_count': 3, 'files': ['manager.py', 'kernelspec.py', 'test_manager.py'], 'execution_path_count': 4, 'function_id_to_name_file': {'322': 'start_new_async_kernel(manager.py)', '319': 'AsyncKernelManager(manager.py)', '320': 'KernelManager(manager.py)', '254': 'KernelSpecManager(kernelspec.py)', '253': 'KernelSpec(kernelspec.py)', '224': 'AsyncIOLoopKernelManager(manager.py)', '225': 'IOLoopKernelManager(manager.py)', '635': 'test_connection_file_real_path(test_manager.py)'}}, {'key': 2352, 'parent': 2687, 'tfidf_word': 'ksm list my native remove set specs up kernel spec ', 'tfidf_method': 'InstallNativeKernelSpec ListKernelSpecs RemoveKernelSpec _kernel_spec_manager_default _kernel_spec_manager_default _kernel_spec_manager_default _kernel_spec_manager_default _kernel_spec_manager_default setUp MyKSM ', 'lda_word': ' kernel,spec,manager,app,subclass,', 'lda_method': ' kernelspec,kernelspecmanager,kernel_spec_manager_default,kernelspecapp,setup,', 'lsi_word': ' kernel,spec,manager,app,default,', 'lsi_method': ' kernelspec,kernelspecmanager,kernel_spec_manager_default,kernelspecapp,test_subclass,', 'spm_method': ' ', 'text_summary': '', 'files_count': 5, 'files': ['test_kernelspec.py', 'kernelspec.py', 'kernelspecapp.py', 'manager.py', 'kernelapp.py'], 'execution_path_count': 13, 'function_id_to_name_file': {'629': 'test_subclass(test_kernelspec.py)', '254': 'KernelSpecManager(kernelspec.py)', '253': 'KernelSpec(kernelspec.py)', '618': 'setUp(test_kernelspec.py)', '289': '_kernel_spec_manager_default(kernelspecapp.py)', '345': '_kernel_spec_manager_default(manager.py)', '295': '_kernel_spec_manager_default(kernelspecapp.py)', '286': '_kernel_spec_manager_default(kernelspecapp.py)', '245': 'KernelApp(kernelapp.py)', '292': '_kernel_spec_manager_default(kernelspecapp.py)', '631': 'MyKSM(test_kernelspec.py)', '282': 'KernelSpecApp(kernelspecapp.py)', '284': 'RemoveKernelSpec(kernelspecapp.py)', '283': 'ListKernelSpecs(kernelspecapp.py)', '280': 'InstallKernelSpec(kernelspecapp.py)', '281': 'InstallNativeKernelSpec(kernelspecapp.py)'}}, {'key': 2392, 'parent': 2728, 'tfidf_word': 'sequence cinfo thread manager lifecycle shutdown id tcp ipc kernel ', 'tfidf_method': 'test_start_parallel_process_kernels test_start_parallel_thread_kernels test_tcp_cinfo test_start_sequence_tcp_kernels test_start_sequence_ipc_kernels test_ipc_cinfo test_ipc_lifecycle test_tcp_lifecycle test_shutdown_all test_tcp_lifecycle_with_kernel_id ', 'lda_word': ' kernel,tcp,manager,multi,thread,', 'lda_method': ' kernelspec,multikernelmanager,kernelspecmanager,asyncmultikernelmanager,get_tcp_km,', 'lsi_word': ' kernel,manager,spec,multi,tcp,', 'lsi_method': ' kernelspecmanager,asyncmultikernelmanager,kernelspec,multikernelmanager,get_tcp_km,', 'spm_method': '  &#187; test_start_parallel_thread_kernels(test_multikernelmanager.py) &rarr; raw_tcp_lifecycle(test_multikernelmanager.py) &rarr; _get_tcp_km(test_multikernelmanager.py) &rarr; AsyncMultiKernelManager(multikernelmanager.py) &rarr; MultiKernelManager(multikernelmanager.py) &rarr; KernelSpecManager(kernelspec.py) &rarr; KernelSpec(kernelspec.py) . <br> &#187; tcp_lifecycle_with_loop(test_multikernelmanager.py) &rarr; raw_tcp_lifecycle(test_multikernelmanager.py) &rarr; _get_tcp_km(test_multikernelmanager.py) &rarr; AsyncMultiKernelManager(multikernelmanager.py) &rarr; MultiKernelManager(multikernelmanager.py) &rarr; KernelSpecManager(kernelspec.py) &rarr; KernelSpec(kernelspec.py) . <br> &#187; raw_tcp_lifecycle(test_multikernelmanager.py) &rarr; _get_tcp_km(test_multikernelmanager.py) &rarr; AsyncMultiKernelManager(multikernelmanager.py) &rarr; MultiKernelManager(multikernelmanager.py) &rarr; KernelSpecManager(kernelspec.py) &rarr; KernelSpec(kernelspec.py) . <br> &#187; test_start_parallel_process_kernels(test_multikernelmanager.py) &rarr; raw_tcp_lifecycle(test_multikernelmanager.py) &rarr; _get_tcp_km(test_multikernelmanager.py) &rarr; AsyncMultiKernelManager(multikernelmanager.py) &rarr; MultiKernelManager(multikernelmanager.py) &rarr; KernelSpecManager(kernelspec.py) &rarr; KernelSpec(kernelspec.py) . <br>', 'text_summary': '', 'files_count': 3, 'files': ['test_multikernelmanager.py', 'multikernelmanager.py', 'kernelspec.py'], 'execution_path_count': 12, 'function_id_to_name_file': {'649': 'test_start_sequence_ipc_kernels(test_multikernelmanager.py)', '638': '_get_ipc_km(test_multikernelmanager.py)', '379': 'AsyncMultiKernelManager(multikernelmanager.py)', '381': 'MultiKernelManager(multikernelmanager.py)', '254': 'KernelSpecManager(kernelspec.py)', '253': 'KernelSpec(kernelspec.py)', '645': 'test_ipc_lifecycle(test_multikernelmanager.py)', '644': 'test_ipc_cinfo(test_multikernelmanager.py)', '650': 'test_start_sequence_tcp_kernels(test_multikernelmanager.py)', '639': '_get_tcp_km(test_multikernelmanager.py)', '646': 'test_shutdown_all(test_multikernelmanager.py)', '651': 'test_tcp_cinfo(test_multikernelmanager.py)', '648': 'test_start_parallel_thread_kernels(test_multikernelmanager.py)', '643': 'tcp_lifecycle_with_loop(test_multikernelmanager.py)', '642': 'raw_tcp_lifecycle(test_multikernelmanager.py)', '647': 'test_start_parallel_process_kernels(test_multikernelmanager.py)', '652': 'test_tcp_lifecycle(test_multikernelmanager.py)', '653': 'test_tcp_lifecycle_with_kernel_id(test_multikernelmanager.py)'}}, {'key': 2413, 'parent': 2728, 'tfidf_word': 'process cinfo loop thread lifecycle shutdown id tcp kernel ipc ', 'tfidf_method': 'tcp_lifecycle_with_loop test_start_parallel_process_kernels test_start_parallel_thread_kernels test_ipc_cinfo test_ipc_lifecycle test_shutdown_all test_start_sequence_ipc_kernels test_start_sequence_tcp_kernels test_tcp_cinfo test_tcp_lifecycle_with_kernel_id ', 'lda_word': ' kernel,ipc,manager,spec,cinfo,', 'lda_method': ' get_tcp_km,kernelspecmanager,kernelspec,multikernelmanager,test_tcp_lifecycle,', 'lsi_word': ' kernel,spec,manager,tcp,test,', 'lsi_method': ' kernelspec,multikernelmanager,kernelspecmanager,get_tcp_km,test_tcp_lifecycle,', 'spm_method': '  &#187; test_start_parallel_thread_kernels(test_multikernelmanager.py) &rarr; test_tcp_lifecycle(test_multikernelmanager.py) &rarr; _get_tcp_km(test_multikernelmanager.py) &rarr; MultiKernelManager(multikernelmanager.py) &rarr; KernelSpecManager(kernelspec.py) &rarr; KernelSpec(kernelspec.py) . <br> &#187; tcp_lifecycle_with_loop(test_multikernelmanager.py) &rarr; test_tcp_lifecycle(test_multikernelmanager.py) &rarr; _get_tcp_km(test_multikernelmanager.py) &rarr; MultiKernelManager(multikernelmanager.py) &rarr; KernelSpecManager(kernelspec.py) &rarr; KernelSpec(kernelspec.py) . <br> &#187; test_start_parallel_process_kernels(test_multikernelmanager.py) &rarr; test_tcp_lifecycle(test_multikernelmanager.py) &rarr; _get_tcp_km(test_multikernelmanager.py) &rarr; MultiKernelManager(multikernelmanager.py) &rarr; KernelSpecManager(kernelspec.py) &rarr; KernelSpec(kernelspec.py) . <br>', 'text_summary': '', 'files_count': 3, 'files': ['test_multikernelmanager.py', 'multikernelmanager.py', 'kernelspec.py'], 'execution_path_count': 11, 'function_id_to_name_file': {'664': 'test_start_sequence_ipc_kernels(test_multikernelmanager.py)', '654': '_get_ipc_km(test_multikernelmanager.py)', '381': 'MultiKernelManager(multikernelmanager.py)', '254': 'KernelSpecManager(kernelspec.py)', '253': 'KernelSpec(kernelspec.py)', '660': 'test_ipc_lifecycle(test_multikernelmanager.py)', '659': 'test_ipc_cinfo(test_multikernelmanager.py)', '665': 'test_start_sequence_tcp_kernels(test_multikernelmanager.py)', '655': '_get_tcp_km(test_multikernelmanager.py)', '666': 'test_tcp_cinfo(test_multikernelmanager.py)', '668': 'test_tcp_lifecycle_with_kernel_id(test_multikernelmanager.py)', '661': 'test_shutdown_all(test_multikernelmanager.py)', '663': 'test_start_parallel_thread_kernels(test_multikernelmanager.py)', '658': 'tcp_lifecycle_with_loop(test_multikernelmanager.py)', '667': 'test_tcp_lifecycle(test_multikernelmanager.py)', '662': 'test_start_parallel_process_kernels(test_multikernelmanager.py)'}}, {'key': 2045, 'parent': 2402, 'tfidf_word': 'connection local write n substitution get env start spec kernel ', 'tfidf_method': 'start_kernel format_kernel_cmd _record_random_port_names write_connection_file KernelSpec is_local_ip local_ips _get_env_substitutions kernel_spec from_ns ', 'lda_word': ' kernel,start,run,new,pre,', 'lda_method': ' run_kernel,start_new_kernel,start_kernel,pre_start_kernel,write_connection_file,', 'lsi_word': ' kernel,start,run,pre,new,', 'lsi_method': ' start_new_kernel,start_kernel,pre_start_kernel,run_kernel,format_kernel_cmd,', 'spm_method': '  &#187; run_kernel(manager.py) &rarr; start_new_kernel(manager.py) &rarr; start_kernel(manager.py) &rarr; pre_start_kernel(manager.py) &rarr; write_connection_file(connect.py) &rarr; _record_random_port_names(connect.py) . <br>', 'text_summary': 'Write connection info to JSON dict in self.connection_file. return the IP addresses that point to this machine. Start a new kernel, and return its Manager and Client. replace templated args (e.g.', 'files_count': 4, 'files': ['manager.py', 'localinterfaces.py', 'connect.py', 'kernelspec.py'], 'execution_path_count': 7, 'function_id_to_name_file': {'321': 'run_kernel(manager.py)', '323': 'start_new_kernel(manager.py)', '366': 'start_kernel(manager.py)', '360': 'pre_start_kernel(manager.py)', '341': '_get_env_substitutions(manager.py)', '314': 'local_ips(localinterfaces.py)', '312': 'is_local_ip(localinterfaces.py)', '212': 'write_connection_file(connect.py)', '197': '_record_random_port_names(connect.py)', '353': 'format_kernel_cmd(manager.py)', '369': 'from_ns(manager.py)', '358': 'kernel_spec(manager.py)', '253': 'KernelSpec(kernelspec.py)'}}, {'key': 2258, 'parent': 2402, 'tfidf_word': 'control create launch make restarter url kernel start connect socket ', 'tfidf_method': 'run_kernel start_new_kernel start_kernel post_start_kernel _create_connected_socket _make_url _connect_control_socket _launch_kernel start_restarter ', 'lda_word': ' kernel,start,run,new,post,', 'lda_method': ' post_start_kernel,start_kernel,run_kernel,start_new_kernel,start_restarter,', 'lsi_word': ' kernel,start,new,run,connect,', 'lsi_method': ' start_kernel,start_new_kernel,run_kernel,post_start_kernel,make_url,', 'spm_method': ' ', 'text_summary': 'Context manager to create a kernel in a subprocess.', 'files_count': 2, 'files': ['manager.py', 'connect.py'], 'execution_path_count': 3, 'function_id_to_name_file': {'321': 'run_kernel(manager.py)', '323': 'start_new_kernel(manager.py)', '366': 'start_kernel(manager.py)', '347': '_launch_kernel(manager.py)', '359': 'post_start_kernel(manager.py)', '338': '_connect_control_socket(manager.py)', '192': '_create_connected_socket(connect.py)', '196': '_make_url(connect.py)', '367': 'start_restarter(manager.py)'}}, {'key': 2672, 'parent': 2736, 'tfidf_word': 'thread sign adapt message control serialize utcnow socket connect msg ', 'tfidf_method': 'send adapt sign send thread_send utcnow Message _connect_control_socket serialize send ', 'lda_word': ' kernel,shutdown,run,start,new,', 'lda_method': ' msg,start_new_kernel,request_shutdown,shutdown_kernel,run_kernel,', 'lsi_word': ' kernel,msg,shutdown,request,run,', 'lsi_method': ' msg,shutdown_kernel,run_kernel,start_new_kernel,request_shutdown,', 'spm_method': '  &#187; run_kernel(manager.py) &rarr; start_new_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; start_new_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br>', 'text_summary': 'Given a message or header, return the header. Create a zmq Socket and connect it to the kernel. Start a new kernel, and return its Manager and Client. Pass a message to the ZMQ socket to send.', 'files_count': 7, 'files': ['manager.py', 'session.py', 'test_adapter.py', 'adapter.py', 'connect.py', 'threaded.py', 'channels.py'], 'execution_path_count': 20, 'function_id_to_name_file': {'321': 'run_kernel(manager.py)', '323': 'start_new_kernel(manager.py)', '364': 'shutdown_kernel(manager.py)', '362': 'request_shutdown(manager.py)', '476': 'msg(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '480': 'send(session.py)', '520': 'msg(test_adapter.py)', '534': 'msg(test_adapter.py)', '444': 'extract_header(session.py)', '50': 'adapt(adapter.py)', '450': 'utcnow(session.py)', '482': 'serialize(session.py)', '483': 'sign(session.py)', '440': 'Message(session.py)', '338': '_connect_control_socket(manager.py)', '192': '_create_connected_socket(connect.py)', '196': '_make_url(connect.py)', '734': 'send(threaded.py)', '738': 'thread_send(threaded.py)', '88': 'send(channels.py)', '114': 'send(channels.py)'}}, {'key': 2714, 'parent': 2736, 'tfidf_word': 'port restarter alive async mixin stop manager cleanup kernel spec ', 'tfidf_method': 'client signal_kernel cleanup cleanup_connection_file is_alive ConnectionFileMixin KernelSpecManager KernelSpec start_new_async_kernel stop_restarter ', 'lda_word': ' kernel,shutdown,run,new,start,', 'lda_method': ' run_kernel,start_new_kernel,shutdown_kernel,launch_kernel,has_kernel,', 'lsi_word': ' kernel,shutdown,start,new,run,', 'lsi_method': ' start_new_kernel,run_kernel,shutdown_kernel,has_kernel,launch_kernel,', 'spm_method': '  &#187; run_kernel(manager.py) &rarr; start_new_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; _kill_kernel(manager.py) &rarr; signal_kernel(manager.py) &rarr; has_kernel(manager.py) &rarr; _launch_kernel(manager.py) . <br> &#187; start_new_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; _kill_kernel(manager.py) &rarr; signal_kernel(manager.py) &rarr; has_kernel(manager.py) &rarr; _launch_kernel(manager.py) . <br>', 'text_summary': 'Has a kernel been started that we are managing. Cleanup connection file *if we wrote it*. Create a client configured to connect to our kernel. Start a new kernel, and return its Manager and Client.', 'files_count': 3, 'files': ['manager.py', 'kernelspec.py', 'connect.py'], 'execution_path_count': 15, 'function_id_to_name_file': {'321': 'run_kernel(manager.py)', '323': 'start_new_kernel(manager.py)', '320': 'KernelManager(manager.py)', '254': 'KernelSpecManager(kernelspec.py)', '253': 'KernelSpec(kernelspec.py)', '188': 'ConnectionFileMixin(connect.py)', '322': 'start_new_async_kernel(manager.py)', '351': 'client(manager.py)', '208': 'get_connection_info(connect.py)', '364': 'shutdown_kernel(manager.py)', '346': '_kill_kernel(manager.py)', '365': 'signal_kernel(manager.py)', '354': 'has_kernel(manager.py)', '347': '_launch_kernel(manager.py)', '352': 'finish_shutdown(manager.py)', '357': 'is_alive(manager.py)', '350': 'cleanup_resources(manager.py)', '201': 'cleanup_ipc_files(connect.py)', '211': 'ports(connect.py)', '349': 'cleanup(manager.py)', '368': 'stop_restarter(manager.py)', '200': 'cleanup_connection_file(connect.py)'}}, {'key': 2786, 'parent': 2796, 'tfidf_word': 'no addresses local output get netifaces load gethostbyname dumb ip ', 'tfidf_method': '_load_ips_ip _load_ips_ipconfig _uniq_stable NoIPAddresses local_ips public_ips _get_output _load_ips_netifaces _load_ips_dumb _load_ips_gethostbyname ', 'lda_word': ' ip,load,populate,list,test,', 'lda_method': ' load_ips,ips_loaded,populate_from_list,test_load_ips,requires_ips,', 'lsi_word': ' ip,load,list,populate,require,', 'lsi_method': ' load_ips,populate_from_list,ips_loaded,requires_ips,test_load_ips,', 'spm_method': ' ', 'text_summary': 'populate local and public IPs from flat list of all IPs. return the IP addresses that point to this machine. load ip addresses from `ifconfig` output (posix). populate local and public IPs from flat list of all IPs. load ip addresses from `ip addr` output (Linux). return the IP addresses that point to this machine. populate local and public IPs from flat list of all IPs. decorator to ensure load_ips has been run before f. uniq_stable(elems) -> list. populate local and public IPs from flat list of all IPs. uniq_stable(elems) -> list. return the IP addresses for this machine that are visible to other machines. populate local and public IPs from flat list of all IPs. return the IP addresses for this machine that are visible to other machines. load ip addresses with socket.gethostbyname_ex uniq_stable(elems) -> list.', 'files_count': 2, 'files': ['localinterfaces.py', 'test_localinterfaces.py'], 'execution_path_count': 42, 'function_id_to_name_file': {'310': '_requires_ips(localinterfaces.py)', '318': 'ips_loaded(localinterfaces.py)', '301': '_load_ips(localinterfaces.py)', '306': '_load_ips_ipconfig(localinterfaces.py)', '300': '_get_output(localinterfaces.py)', '309': '_populate_from_list(localinterfaces.py)', '299': 'NoIPAddresses(localinterfaces.py)', '316': 'public_ips(localinterfaces.py)', '314': 'local_ips(localinterfaces.py)', '311': '_uniq_stable(localinterfaces.py)', '304': '_load_ips_ifconfig(localinterfaces.py)', '305': '_load_ips_ip(localinterfaces.py)', '307': '_load_ips_netifaces(localinterfaces.py)', '302': '_load_ips_dumb(localinterfaces.py)', '634': 'test_load_ips(test_localinterfaces.py)', '303': '_load_ips_gethostbyname(localinterfaces.py)'}}, {'key': 2791, 'parent': 2796, 'tfidf_word': 'loop digest permission native flush io tunnel cleanup restarter code ', 'tfidf_method': 'restart_kernel interrupt_kernel finish_shutdown test_object_info_reply_not_found _key_default reqrep test_object_info_reply test_no_adapt find_kernel_specs SubHander ', 'lda_word': ' kernel,start,test,install,spec,', 'lda_method': ' execute,initialize,install_kernel_spec,connectionfilemixin,is_valid_kernel_name,', 'lsi_word': ' kernel,test,spec,connection,file,', 'lsi_method': ' init,get_kernel_spec,new_auth,setup,get_tcp_km,', 'spm_method': '  &#187; initialize(test_connect.py) &rarr; init_connection_file(consoleapp.py) &rarr; load_connection_file(connect.py) &rarr; load_connection_info(connect.py) &rarr; _ip_default(connect.py) &rarr; localhost(localinterfaces.py) . <br> &#187; initialize(runapp.py) &rarr; initialize(consoleapp.py) &rarr; load_connection_file(connect.py) &rarr; load_connection_info(connect.py) &rarr; _ip_default(connect.py) &rarr; localhost(localinterfaces.py) . <br>', 'text_summary': "Subclasses may override  Prepares a kernel for startup in a separate process. return ip for localhost (almost always 127.0.0.1) test `ipython console --existing` loads a connection file. Prepares a kernel for startup in a separate process. Create a client configured to connect to our kernel. return ip for localhost (almost always 127.0.0.1)   Ensure that a sequence of kernel startups doesn't break anything. Sends a signal to the process group of the kernel (this. Pass a message to the ZMQ socket to send. return ip for localhost (almost always 127.0.0.1)   set up ssh tunnels, if needed. Start a new kernel, and return its Manager and Client. Return the connection info as a dict. return ip for localhost (almost always 127.0.0.1) test load_connection_file() after. Launches a localhost kernel, binding to the specified ports. test `ipython console --existing` loads a connection file. find a connection file, and return its absolute path. return ip for localhost (almost always 127.0.0.1)      find a connection file, and return its absolute path. tunnel connections to a kernel via ssh. For tests, create a file to indicate that we've started. Returns a dict mapping kernel names to kernelspecs. handle kernel info reply. Get the hb channel object for this kernel. Returns the id to associate with the kernel for this request. Send a raw message via ident path. {connection_file})   Prepares a kernel for startup in a separate process. {connection_file})  Restarts a kernel with the arguments that were used to launch it. Make a blocking client connected to my kernel. return ip for localhost (almost always 127.0.0.1)       return ip for localhost (almost always 127.0.0.1)   find the connection file, and load the info if found. Load connection info from JSON dict in self.connection_file. return ip for localhost (almost always 127.0.0.1)  Write connection info to JSON dict in self.connection_file. Immediately processes all pending messages on this channel. Return the number of running kernels. Unserialize a msg_list to a nested message dict. {connection_file}) Write connection info to JSON dict in self.connection_file. This is run in the ioloop thread when the kernel info reply is received. find the connection file, and load the info if found. return ip for localhost (almost always 127.0.0.1)   find the connection file, and load the info if found. Return a mapping of kernel names to resource directories from dir. Returns a :class:`KernelSpec` instance for a given kernel_name. test load_connection_file() after. Write connection info to JSON dict in self.connection_file. Create a zmq Socket and connect it to the kernel. Forgets randomly assigned port numbers and cleans up the connection file.", 'files_count': 35, 'files': ['test_connect.py', 'session.py', 'test_adapter.py', 'test_session.py', 'consoleapp.py', 'connect.py', 'localinterfaces.py', 'runapp.py', 'kernelspec.py', 'manager.py', 'test_kernelspec.py', 'jsonutil.py', 'forward.py', 'test_jsonutil.py', 'test_manager.py', 'test_client.py', 'adapter.py', 'channels.py', 'threaded.py', 'test_multikernelmanager.py', 'multikernelmanager.py', 'tunnel.py', 'test_ssh.py', 'client.py', 'managerabc.py', 'channelsabc.py', 'test_kernelmanager.py', 'utils.py', 'restarter.py', 'signalkernel.py', 'kernelspecapp.py', 'kernelapp.py', 'test_kernelapp.py', 'win_interrupt.py', 'launcher.py'], 'execution_path_count': 586, 'function_id_to_name_file': {'565': 'test_load_connection_file_session_with_kn(test_connect.py)', '457': '__init__(session.py)', '465': '_new_auth(session.py)', '564': 'test_load_connection_file_session(test_connect.py)', '519': 'setUp(test_adapter.py)', '516': 'test_default_version(test_adapter.py)', '689': 'test_datetimes_msgpack(test_session.py)', '690': 'test_datetimes_pickle(test_session.py)', '683': 'test_bad_roundtrip(test_session.py)', '685': 'test_bad_unpacker(test_session.py)', '682': 'test_bad_packer(test_session.py)', '681': 'test_bad_pack(test_session.py)', '684': 'test_bad_unpack(test_session.py)', '687': 'test_cull_digest_history(test_session.py)', '697': 'test_session_id(test_session.py)', '700': 'test_zero_digest_history(test_session.py)', '680': 'test_args(test_session.py)', '678': 'setUp(test_session.py)', '215': '__init__(consoleapp.py)', '198': '_session_default(connect.py)', '560': 'test_find_connection_file(test_connect.py)', '572': 'initialize(test_connect.py)', '219': 'init_connection_file(consoleapp.py)', '209': 'load_connection_file(connect.py)', '210': 'load_connection_info(connect.py)', '195': '_ip_default(connect.py)', '315': 'localhost(localinterfaces.py)', '559': 'test_app_load_connection_file(test_connect.py)', '197': '_record_random_port_names(connect.py)', '437': 'initialize(runapp.py)', '223': 'initialize(consoleapp.py)', '222': 'init_ssh(consoleapp.py)', '212': 'write_connection_file(connect.py)', '220': 'init_kernel_client(consoleapp.py)', '221': 'init_kernel_manager(consoleapp.py)', '255': 'NoSuchKernel(kernelspec.py)', '322': 'start_new_async_kernel(manager.py)', '351': 'client(manager.py)', '321': 'run_kernel(manager.py)', '323': 'start_new_kernel(manager.py)', '568': 'test_mixin_record_random_ports(test_connect.py)', '567': 'test_mixin_cleanup_random_ports(test_connect.py)', '621': 'test_find_all_specs(test_kernelspec.py)', '273': 'get_all_specs(kernelspec.py)', '272': 'find_kernel_specs(kernelspec.py)', '258': '_list_kernels_in(kernelspec.py)', '257': '_is_valid_kernel_name(kernelspec.py)', '256': '_is_kernel_dir(kernelspec.py)', '629': 'test_subclass(test_kernelspec.py)', '627': 'test_remove_kernel_spec(test_kernelspec.py)', '277': 'remove_kernel_spec(kernelspec.py)', '625': 'test_install_kernel_spec_prefix(test_kernelspec.py)', '626': 'test_kernel_spec_priority(test_kernelspec.py)', '624': 'test_install_kernel_spec(test_kernelspec.py)', '259': 'find_kernel_specs(kernelspec.py)', '622': 'test_find_kernel_specs(test_kernelspec.py)', '694': 'test_send(test_session.py)', '479': 'recv(session.py)', '474': 'deserialize(session.py)', '242': 'extract_dates(jsonutil.py)', '243': 'parse_date(jsonutil.py)', '240': '_ensure_tzinfo(jsonutil.py)', '492': 'handle(forward.py)', '695': 'test_send_raw(test_session.py)', '484': 'unserialize(session.py)', '696': 'test_serialize(test_session.py)', '578': 'test_parse_ms_precision(test_jsonutil.py)', '679': '_datetime_test(test_session.py)', '688': 'test_datetimes(test_session.py)', '575': 'test_date_default(test_jsonutil.py)', '576': 'test_extract_date_from_naive(test_jsonutil.py)', '577': 'test_extract_dates(test_jsonutil.py)', '330': 'restart_kernel(manager.py)', '333': 'start_kernel(manager.py)', '326': '_launch_kernel(manager.py)', '359': 'post_start_kernel(manager.py)', '338': '_connect_control_socket(manager.py)', '192': '_create_connected_socket(connect.py)', '196': '_make_url(connect.py)', '367': 'start_restarter(manager.py)', '635': 'test_connection_file_real_path(test_manager.py)', '353': 'format_kernel_cmd(manager.py)', '358': 'kernel_spec(manager.py)', '253': 'KernelSpec(kernelspec.py)', '360': 'pre_start_kernel(manager.py)', '369': 'from_ns(manager.py)', '341': '_get_env_substitutions(manager.py)', '314': 'local_ips(localinterfaces.py)', '312': 'is_local_ip(localinterfaces.py)', '623': 'test_get_kernel_spec(test_kernelspec.py)', '267': '_find_spec_directory(kernelspec.py)', '632': 'find_kernel_specs(test_kernelspec.py)', '274': 'get_kernel_spec(kernelspec.py)', '633': 'get_kernel_spec(test_kernelspec.py)', '549': 'setUp(test_client.py)', '269': '_get_kernel_spec_by_name(kernelspec.py)', '278': '__init__(kernelspec.py)', '260': 'get_kernel_spec(kernelspec.py)', '50': 'adapt(adapter.py)', '450': 'utcnow(session.py)', '698': 'test_tracking(test_session.py)', '480': 'send(session.py)', '328': 'interrupt_kernel(manager.py)', '191': 'write_connection_file(connect.py)', '109': 'close(channels.py)', '83': 'close(channels.py)', '730': 'close(threaded.py)', '132': 'close(channels.py)', '211': 'ports(connect.py)', '718': 'close(threaded.py)', '570': 'test_write_connection_file(test_connect.py)', '686': 'test_clone(test_session.py)', '458': '_add_digest(session.py)', '460': '_cull_digest_history(session.py)', '558': 'DummyConsoleApp(test_connect.py)', '214': 'JupyterConsoleApp(consoleapp.py)', '441': 'Session(session.py)', '188': 'ConnectionFileMixin(connect.py)', '213': 'IPythonConsoleApp(consoleapp.py)', '434': 'RunApp(runapp.py)', '665': 'test_start_sequence_tcp_kernels(test_multikernelmanager.py)', '655': '_get_tcp_km(test_multikernelmanager.py)', '392': '__init__(multikernelmanager.py)', '666': 'test_tcp_cinfo(test_multikernelmanager.py)', '668': 'test_tcp_lifecycle_with_kernel_id(test_multikernelmanager.py)', '661': 'test_shutdown_all(test_multikernelmanager.py)', '663': 'test_start_parallel_thread_kernels(test_multikernelmanager.py)', '658': 'tcp_lifecycle_with_loop(test_multikernelmanager.py)', '667': 'test_tcp_lifecycle(test_multikernelmanager.py)', '662': 'test_start_parallel_process_kernels(test_multikernelmanager.py)', '190': 'tunnel_to_kernel(connect.py)', '503': 'select_random_ports(tunnel.py)', '701': 'test_random_ports(test_ssh.py)', '386': 'shutdown_all(multikernelmanager.py)', '383': 'finish_shutdown(multikernelmanager.py)', '410': 'get_kernel(multikernelmanager.py)', '394': '_check_kernel_id(multikernelmanager.py)', '388': 'signal_kernel(multikernelmanager.py)', '385': 'restart_kernel(multikernelmanager.py)', '384': 'interrupt_kernel(multikernelmanager.py)', '387': 'shutdown_kernel(multikernelmanager.py)', '421': 'shutdown_kernel(multikernelmanager.py)', '420': 'shutdown_all(multikernelmanager.py)', '104': 'wait_for_ready(client.py)', '103': 'is_alive(client.py)', '412': 'is_alive(multikernelmanager.py)', '373': 'is_alive(managerabc.py)', '140': 'is_alive(channelsabc.py)', '732': 'is_alive(threaded.py)', '86': 'is_alive(channels.py)', '112': 'is_alive(channels.py)', '123': 'wait_for_ready(client.py)', '165': 'is_alive(client.py)', '648': 'test_start_parallel_thread_kernels(test_multikernelmanager.py)', '643': 'tcp_lifecycle_with_loop(test_multikernelmanager.py)', '642': 'raw_tcp_lifecycle(test_multikernelmanager.py)', '641': '_run_lifecycle(test_multikernelmanager.py)', '647': 'test_start_parallel_process_kernels(test_multikernelmanager.py)', '652': 'test_tcp_lifecycle(test_multikernelmanager.py)', '653': 'test_tcp_lifecycle_with_kernel_id(test_multikernelmanager.py)', '483': 'sign(session.py)', '440': 'Message(session.py)', '482': 'serialize(session.py)', '135': 'run(channels.py)', '128': '_create_socket(channels.py)', '84': 'get_msg(channels.py)', '82': '_recv(channels.py)', '101': 'get_stdin_msg(client.py)', '85': 'get_msgs(channels.py)', '99': 'get_iopub_msg(client.py)', '110': 'get_msg(channels.py)', '108': '_recv(channels.py)', '111': 'get_msgs(channels.py)', '620': 'test_cant_install_kernel_spec(test_kernelspec.py)', '275': 'install_kernel_spec(kernelspec.py)', '268': '_get_destination_dir(kernelspec.py)', '261': 'install_kernel_spec(kernelspec.py)', '614': 'test_start_sequence_process_kernels(test_kernelmanager.py)', '610': '_run_signaltest_lifecycle(test_kernelmanager.py)', '615': 'execute(test_kernelmanager.py)', '609': '_prepare_kernel(test_kernelmanager.py)', '611': 'test_start_parallel_process_kernels(test_kernelmanager.py)', '613': 'test_start_sequence_kernels(test_kernelmanager.py)', '612': 'test_start_parallel_thread_kernels(test_kernelmanager.py)', '398': '_kernel_manager_class_changed(multikernelmanager.py)', '396': '_create_kernel_manager_factory(multikernelmanager.py)', '424': 'create_kernel_manager(multikernelmanager.py)', '397': '_find_available_port(multikernelmanager.py)', '395': '_context_default(multikernelmanager.py)', '399': '_kernel_manager_factory_default(multikernelmanager.py)', '485': '__init__(session.py)', '459': '_check_packers(session.py)', '244': 'squash_dates(jsonutil.py)', '90': 'AsyncKernelClient(client.py)', '147': 'KernelClient(client.py)', '139': 'HBChannelABC(channelsabc.py)', '138': 'ChannelABC(channelsabc.py)', '116': 'BlockingKernelClient(client.py)', '319': 'AsyncKernelManager(manager.py)', '320': 'KernelManager(manager.py)', '224': 'AsyncIOLoopKernelManager(manager.py)', '225': 'IOLoopKernelManager(manager.py)', '657': '_run_lifecycle(test_multikernelmanager.py)', '704': 'execute(utils.py)', '155': 'execute(client.py)', '148': 'validate_string_dict(client.py)', '734': 'send(threaded.py)', '738': 'thread_send(threaded.py)', '664': 'test_start_sequence_ipc_kernels(test_multikernelmanager.py)', '654': '_get_ipc_km(test_multikernelmanager.py)', '660': 'test_ipc_lifecycle(test_multikernelmanager.py)', '659': 'test_ipc_cinfo(test_multikernelmanager.py)', '423': 'start_kernel(multikernelmanager.py)', '415': 'pre_start_kernel(multikernelmanager.py)', '380': 'DuplicateKernelError(multikernelmanager.py)', '414': 'new_kernel_id(multikernelmanager.py)', '389': 'start_kernel(multikernelmanager.py)', '238': 'start(restarter.py)', '430': 'poll(restarter.py)', '433': 'stop(restarter.py)', '428': '_fire_callbacks(restarter.py)', '510': 'do_execute(signalkernel.py)', '501': 'openssh_tunnel(tunnel.py)', '494': 'SSHException(tunnel.py)', '497': '_stop_tunnel(tunnel.py)', '475': 'feed_identities(session.py)', '202': 'cleanup_random_ports(connect.py)', '200': 'cleanup_connection_file(connect.py)', '106': 'ZMQSocketChannel(channels.py)', '226': 'as_zmqstream(manager.py)', '233': 'wrapped(manager.py)', '557': 'DummyConfigurable(test_connect.py)', '235': 'IOLoopKernelRestarter(restarter.py)', '426': 'KernelRestarter(restarter.py)', '234': 'AsyncIOLoopKernelRestarter(restarter.py)', '291': 'start(kernelspecapp.py)', '251': 'start(kernelapp.py)', '249': 'setup_signals(kernelapp.py)', '252': 'shutdown_handler(kernelapp.py)', '250': 'shutdown(kernelapp.py)', '248': 'log_connection_info(kernelapp.py)', '199': 'blocking_client(connect.py)', '208': 'get_connection_info(connect.py)', '725': 'stop_channels(threaded.py)', '676': '_bad_unpacker(test_session.py)', '536': 'test_complete_request(test_adapter.py)', '517': 'adapt(test_adapter.py)', '562': 'test_find_connection_file_local(test_connect.py)', '189': 'find_connection_file(connect.py)', '493': 'SubHander(forward.py)', '490': 'Handler(forward.py)', '114': 'send(channels.py)', '88': 'send(channels.py)', '241': 'date_default(jsonutil.py)', '597': 'test_subclasses(test_kernelmanager.py)', '703': 'AsyncKernelManagerWithCleanup(utils.py)', '595': 'test_signal_kernel_subprocesses(test_kernelmanager.py)', '598': 'execute(test_kernelmanager.py)', '702': 'AsyncKernelManagerSubclass(utils.py)', '591': 'transport(test_kernelmanager.py)', '606': 'test_templated_kspec_env(test_kernelmanager.py)', '599': '_env_test_body(test_kernelmanager.py)', '607': 'execute(test_kernelmanager.py)', '604': 'test_signal_kernel_subprocesses(test_kernelmanager.py)', '608': 'execute(test_kernelmanager.py)', '586': 'env(test_kernelmanager.py)', '712': 'stop(utils.py)', '711': 'start(utils.py)', '705': 'test_env(utils.py)', '630': 'test_validate_kernel_name(test_kernelspec.py)', '506': 'SignalTestApp(signalkernel.py)', '507': 'SignalTestKernel(signalkernel.py)', '617': '_install_sample_kernel(test_kernelspec.py)', '651': 'test_tcp_cinfo(test_multikernelmanager.py)', '640': '_run_cinfo(test_multikernelmanager.py)', '619': 'tearDown(test_kernelspec.py)', '618': 'setUp(test_kernelspec.py)', '649': 'test_start_sequence_ipc_kernels(test_multikernelmanager.py)', '650': 'test_start_sequence_tcp_kernels(test_multikernelmanager.py)', '644': 'test_ipc_cinfo(test_multikernelmanager.py)', '645': 'test_ipc_lifecycle(test_multikernelmanager.py)', '656': '_run_cinfo(test_multikernelmanager.py)', '569': 'test_secure_write(test_connect.py)', '573': 'check_user_only_permissions(test_connect.py)', '574': 'fetch_win32_permissions(test_connect.py)', '563': 'test_find_connection_file_relative(test_connect.py)', '561': 'test_find_connection_file_abspath(test_connect.py)', '539': 'test_input_request(test_adapter.py)', '537': 'test_display_data(test_adapter.py)', '540': 'test_inspect_reply(test_adapter.py)', '543': 'test_kernel_info_reply(test_adapter.py)', '542': 'test_inspect_request_token(test_adapter.py)', '535': 'test_complete_reply(test_adapter.py)', '541': 'test_inspect_request(test_adapter.py)', '538': 'test_execute_request(test_adapter.py)', '545': 'test_rename_type(test_adapter.py)', '544': 'test_no_adapt(test_adapter.py)', '546': 'test_same_version(test_adapter.py)', '514': 'V5toV4TestCase(test_adapter.py)', '512': 'AdapterTest(test_adapter.py)', '526': 'test_input_request(test_adapter.py)', '523': 'test_display_data(test_adapter.py)', '527': 'test_kernel_info_reply(test_adapter.py)', '530': 'test_object_info_reply_not_found(test_adapter.py)', '529': 'test_object_info_reply(test_adapter.py)', '531': 'test_object_info_request(test_adapter.py)', '521': 'test_complete_reply(test_adapter.py)', '522': 'test_complete_request(test_adapter.py)', '524': 'test_execute_reply(test_adapter.py)', '532': 'test_rename_type(test_adapter.py)', '525': 'test_execute_request(test_adapter.py)', '528': 'test_no_adapt(test_adapter.py)', '533': 'test_same_version(test_adapter.py)', '513': 'V4toV5TestCase(test_adapter.py)', '515': 'test_code_to_line_no_code(test_adapter.py)', '51': 'code_to_line(adapter.py)', '158': 'get_shell_msg(client.py)', '157': 'get_iopub_msg(client.py)', '710': '__exit__(utils.py)', '709': '__enter__(utils.py)', '580': 'test_kernelapp_lifecycle(test_kernelapp.py)', '579': '_launch(test_kernelapp.py)', '473': 'clone(session.py)', '481': 'send_raw(session.py)', '675': '_bad_packer(test_session.py)', '699': 'test_unique_msg_ids(test_session.py)', '445': 'msg_header(session.py)', '478': 'msg_id(session.py)', '674': 'TestSession(test_session.py)', '673': 'SessionTestCase(test_session.py)', '556': 'test_shutdown(test_client.py)', '548': '_check_reply(test_client.py)', '550': 'test_comm_info(test_client.py)', '555': 'test_kernel_info(test_client.py)', '551': 'test_complete(test_client.py)', '554': 'test_inspect(test_client.py)', '553': 'test_history(test_client.py)', '117': 'reqrep(client.py)', '124': 'wrapped(client.py)', '150': '_handle_kernel_info_reply(client.py)', '125': 'HBChannel(channels.py)', '102': 'hb_channel(client.py)', '91': 'reqrep(client.py)', '105': 'wrapped(client.py)', '80': 'ZMQSocketChannel(channels.py)', '154': 'control_channel(client.py)', '723': 'ioloop(threaded.py)', '160': 'hb_channel(client.py)', '171': 'stdin_channel(client.py)', '164': 'iopub_channel(client.py)', '168': 'shell_channel(client.py)', '740': 'send_interrupt(win_interrupt.py)', '334': '__del__(manager.py)', '293': 'start(kernelspecapp.py)', '294': 'path_key(kernelspecapp.py)', '735': 'start(threaded.py)', '720': 'start(threaded.py)', '141': 'start(channelsabc.py)', '432': 'start(restarter.py)', '288': 'start(kernelspecapp.py)', '89': 'start(channels.py)', '115': 'start(channels.py)', '290': 'start(kernelspecapp.py)', '438': 'parse_command_line(runapp.py)', '218': 'build_kernel_argv(consoleapp.py)', '308': '_only_once(localinterfaces.py)', '317': 'wrapped(localinterfaces.py)', '47': 'V4toV5(adapter.py)', '46': 'Adapter(adapter.py)', '77': 'object_info_request(adapter.py)', '52': 'extract_oname_v4(adapter.py)', '70': 'complete_request(adapter.py)', '75': 'kernel_info_reply(adapter.py)', '49': '_version_str_to_list(adapter.py)', '48': 'V5toV4(adapter.py)', '53': '__call__(adapter.py)', '54': 'handle_reply_status_error(adapter.py)', '57': 'update_msg_type(adapter.py)', '56': 'update_metadata(adapter.py)', '55': 'update_header(adapter.py)', '247': 'initialize(kernelapp.py)', '246': '_record_started(kernelapp.py)', '585': 'config(test_kernelmanager.py)', '262': 'install_native_kernel_spec(kernelspec.py)', '276': 'install_native_kernel_spec(kernelspec.py)', '265': 'to_json(kernelspec.py)', '264': 'to_dict(kernelspec.py)', '449': 'test_msg2obj(session.py)', '453': '__init__(session.py)', '470': '_signature_scheme_changed(session.py)', '463': '_key_default(session.py)', '447': 'new_id_bytes(session.py)', '462': '_key_changed(session.py)', '443': 'default_secure(session.py)', '469': '_session_default(session.py)', '446': 'new_id(session.py)', '413': 'list_kernel_ids(multikernelmanager.py)', '721': 'stop(threaded.py)', '724': 'start_channels(threaded.py)', '722': '_check_kernel_info_reply(threaded.py)', '716': '__init__(threaded.py)', '416': 'remove_kernel(multikernelmanager.py)', '713': 'IOLoopThread(threaded.py)', '714': 'ThreadedKernelClient(threaded.py)', '715': 'ThreadedZMQSocketChannel(threaded.py)', '731': 'flush(threaded.py)', '727': '_flush(threaded.py)', '418': 'request_shutdown(multikernelmanager.py)', '402': 'cleanup_resources(multikernelmanager.py)', '408': 'finish_shutdown(multikernelmanager.py)', '393': '__len__(multikernelmanager.py)', '298': 'launch_kernel(launcher.py)', '739': 'create_interrupt_event(win_interrupt.py)', '741': 'SECURITY_ATTRIBUTES(win_interrupt.py)', '509': '__init__(signalkernel.py)', '127': '__init__(channels.py)', '126': 'InvalidPortNumber(channels.py)', '107': '__init__(channels.py)', '81': '__init__(channels.py)', '726': '__init__(threaded.py)', '737': 'setup_stream(threaded.py)', '728': '_handle_recv(threaded.py)', '729': 'call_handlers(threaded.py)', '136': 'stop(channels.py)', '133': 'is_beating(channels.py)', '145': 'time_to_dead(channelsabc.py)', '131': 'call_handlers(channels.py)', '130': '_poll(channels.py)'}}, {'key': 2792, 'parent': 2797, 'tfidf_word': 'info ssh kernel start send msg port socket connect tunnel ', 'tfidf_method': 'signal_kernel interrupt_kernel interrupt_kernel Message utcnow close serialize sign _stop_tunnel send ', 'lda_word': ' msg,kernel,interrupt,initialize,handle,', 'lda_method': ' tunnel_connection,open_tunnel,paramiko_tunnel,msg,select_random_ports,', 'lsi_word': ' msg,tunnel,header,kernel,paramiko,', 'lsi_method': ' msg,msg_id,msg_header,extract_header,initialize,', 'spm_method': '  &#187; initialize(runapp.py) &rarr; handle_sigint(runapp.py) &rarr; interrupt_kernel(manager.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; handle_sigint(runapp.py) &rarr; interrupt_kernel(manager.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; tunnel_connection(tunnel.py) &rarr; open_tunnel(tunnel.py) &rarr; paramiko_tunnel(tunnel.py) &rarr; _try_passwordless_paramiko(tunnel.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; open_tunnel(tunnel.py) &rarr; paramiko_tunnel(tunnel.py) &rarr; _try_passwordless_paramiko(tunnel.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; paramiko_tunnel(tunnel.py) &rarr; _try_passwordless_paramiko(tunnel.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; _try_passwordless_paramiko(tunnel.py) &rarr; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; init_kernel_info(runapp.py) &rarr; kernel_info(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; start(kernelspecapp.py) &rarr; start(kernelspecapp.py) &rarr; input(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; start(kernelspecapp.py) &rarr; input(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; tunnel_to_kernel(connect.py) &rarr; try_passwordless_ssh(tunnel.py) &rarr; _try_passwordless_paramiko(tunnel.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; try_passwordless_ssh(tunnel.py) &rarr; _try_passwordless_paramiko(tunnel.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br>', 'text_summary': 'This should only be used Function for actually starting a paramiko tunnel, to be passed. tunnel connections to a kernel via ssh. Pass a message to the ZMQ socket to send. Connect a socket to an address via an ssh tunnel. Interrupts the kernel by sending it a signal. Given a message or header, return the header. Create a zmq Socket and connect it to the kernel.', 'files_count': 16, 'files': ['runapp.py', 'manager.py', 'session.py', 'test_adapter.py', 'multikernelmanager.py', 'managerabc.py', 'adapter.py', 'connect.py', 'threaded.py', 'channels.py', 'win_interrupt.py', 'tunnel.py', 'forward.py', 'client.py', 'channelsabc.py', 'kernelspecapp.py'], 'execution_path_count': 81, 'function_id_to_name_file': {'437': 'initialize(runapp.py)', '435': 'handle_sigint(runapp.py)', '355': 'interrupt_kernel(manager.py)', '476': 'msg(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '480': 'send(session.py)', '520': 'msg(test_adapter.py)', '534': 'msg(test_adapter.py)', '444': 'extract_header(session.py)', '411': 'interrupt_kernel(multikernelmanager.py)', '372': 'interrupt_kernel(managerabc.py)', '50': 'adapt(adapter.py)', '450': 'utcnow(session.py)', '482': 'serialize(session.py)', '483': 'sign(session.py)', '440': 'Message(session.py)', '354': 'has_kernel(manager.py)', '347': '_launch_kernel(manager.py)', '365': 'signal_kernel(manager.py)', '338': '_connect_control_socket(manager.py)', '192': '_create_connected_socket(connect.py)', '196': '_make_url(connect.py)', '734': 'send(threaded.py)', '738': 'thread_send(threaded.py)', '114': 'send(channels.py)', '88': 'send(channels.py)', '740': 'send_interrupt(win_interrupt.py)', '505': 'tunnel_connection(tunnel.py)', '500': 'open_tunnel(tunnel.py)', '502': 'paramiko_tunnel(tunnel.py)', '499': '_try_passwordless_paramiko(tunnel.py)', '496': '_split_server(tunnel.py)', '503': 'select_random_ports(tunnel.py)', '730': 'close(threaded.py)', '718': 'close(threaded.py)', '109': 'close(channels.py)', '132': 'close(channels.py)', '83': 'close(channels.py)', '211': 'ports(connect.py)', '495': '_paramiko_tunnel(tunnel.py)', '491': 'forward_tunnel(forward.py)', '501': 'openssh_tunnel(tunnel.py)', '494': 'SSHException(tunnel.py)', '497': '_stop_tunnel(tunnel.py)', '436': 'init_kernel_info(runapp.py)', '158': 'get_shell_msg(client.py)', '137': 'unpause(channels.py)', '146': 'unpause(channelsabc.py)', '167': 'kernel_info(client.py)', '291': 'start(kernelspecapp.py)', '297': 'start(kernelspecapp.py)', '162': 'input(client.py)', '190': 'tunnel_to_kernel(connect.py)', '504': 'try_passwordless_ssh(tunnel.py)', '498': '_try_passwordless_openssh(tunnel.py)'}}, {'key': 2794, 'parent': 2797, 'tfidf_word': 'channels control send alive kernel cleanup stdin iopub shell msg ', 'tfidf_method': 'shell_channel is_alive iopub_channel control_channel is_beating wait_for_ready execute_interactive wait_for_ready __del__ execute_interactive ', 'lda_word': ' connect,kernel,socket,make,url,', 'lda_method': ' launch_kernel,has_kernel,shutdown_kernel,kill_kernel,is_alive,', 'lsi_word': ' kernel,shutdown,async,start,launch,', 'lsi_method': ' shutdown_kernel,msg,restart_kernel,request_shutdown,start_new_async_kernel,', 'spm_method': '  &#187; restart_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; finish_shutdown(manager.py) &rarr; _async_wait(manager.py) &rarr; is_alive(manager.py) &rarr; has_kernel(manager.py) &rarr; _launch_kernel(manager.py) . <br> &#187; shutdown_kernel(manager.py) &rarr; finish_shutdown(manager.py) &rarr; _kill_kernel(manager.py) &rarr; _async_wait(manager.py) &rarr; is_alive(manager.py) &rarr; has_kernel(manager.py) &rarr; _launch_kernel(manager.py) . <br> &#187; start_new_async_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; finish_shutdown(manager.py) &rarr; _async_wait(manager.py) &rarr; is_alive(manager.py) &rarr; has_kernel(manager.py) &rarr; _launch_kernel(manager.py) . <br> &#187; do_execute(signalkernel.py) &rarr; poll(restarter.py) &rarr; restart_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; cleanup_resources(manager.py) &rarr; _close_control_socket(manager.py) &rarr; _create_connected_socket(connect.py) &rarr; _make_url(connect.py) . <br> &#187; poll(restarter.py) &rarr; restart_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; cleanup_resources(manager.py) &rarr; _close_control_socket(manager.py) &rarr; _create_connected_socket(connect.py) &rarr; _make_url(connect.py) . <br> &#187; restart_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; cleanup_resources(manager.py) &rarr; _close_control_socket(manager.py) &rarr; _create_connected_socket(connect.py) &rarr; _make_url(connect.py) . <br> &#187; shutdown_kernel(manager.py) &rarr; cleanup(manager.py) &rarr; cleanup_resources(manager.py) &rarr; _close_control_socket(manager.py) &rarr; _create_connected_socket(connect.py) &rarr; _make_url(connect.py) . <br> &#187; run_kernel(manager.py) &rarr; start_new_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; cleanup_resources(manager.py) &rarr; _close_control_socket(manager.py) &rarr; _create_connected_socket(connect.py) &rarr; _make_url(connect.py) . <br> &#187; start_new_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; cleanup_resources(manager.py) &rarr; _close_control_socket(manager.py) &rarr; _create_connected_socket(connect.py) &rarr; _make_url(connect.py) . <br> &#187; finish_shutdown(manager.py) &rarr; _kill_kernel(manager.py) &rarr; _async_wait(manager.py) &rarr; is_alive(manager.py) &rarr; has_kernel(manager.py) &rarr; _launch_kernel(manager.py) . <br>', 'text_summary': "return zmq Socket connected to the StdIn channel. return zmq Socket connected to the Heartbeat channel. Has a kernel been started that we are managing. Cleanup connection file *if we wrote it*. return zmq Socket connected to the Shell channel. return zmq Socket connected to the IOPub channel. Sends a signal to the process group of the kernel (this. Start a new kernel, and return its Manager and Client. Pass a message to the ZMQ socket to send. Send a shutdown request via control channel. Wait for kernel shutdown, then kill process if it doesn't shutdown. return zmq Socket connected to the Control channel. Given a message or header, return the header. Create a zmq Socket and connect it to the kernel.", 'files_count': 12, 'files': ['manager.py', 'connect.py', 'signalkernel.py', 'restarter.py', 'client.py', 'kernelspecapp.py', 'runapp.py', 'channels.py', 'threaded.py', 'session.py', 'test_adapter.py', 'adapter.py'], 'execution_path_count': 94, 'function_id_to_name_file': {'330': 'restart_kernel(manager.py)', '331': 'shutdown_kernel(manager.py)', '349': 'cleanup(manager.py)', '350': 'cleanup_resources(manager.py)', '337': '_close_control_socket(manager.py)', '192': '_create_connected_socket(connect.py)', '196': '_make_url(connect.py)', '322': 'start_new_async_kernel(manager.py)', '510': 'do_execute(signalkernel.py)', '236': 'poll(restarter.py)', '363': 'restart_kernel(manager.py)', '364': 'shutdown_kernel(manager.py)', '321': 'run_kernel(manager.py)', '323': 'start_new_kernel(manager.py)', '362': 'request_shutdown(manager.py)', '328': 'interrupt_kernel(manager.py)', '338': '_connect_control_socket(manager.py)', '224': 'AsyncIOLoopKernelManager(manager.py)', '203': 'connect_control(connect.py)', '154': 'control_channel(client.py)', '225': 'IOLoopKernelManager(manager.py)', '207': 'connect_stdin(connect.py)', '171': 'stdin_channel(client.py)', '206': 'connect_shell(connect.py)', '168': 'shell_channel(client.py)', '205': 'connect_iopub(connect.py)', '164': 'iopub_channel(client.py)', '204': 'connect_hb(connect.py)', '334': '__del__(manager.py)', '228': 'start_restarter(manager.py)', '354': 'has_kernel(manager.py)', '347': '_launch_kernel(manager.py)', '231': 'start_restarter(manager.py)', '291': 'start(kernelspecapp.py)', '439': 'start(runapp.py)', '122': 'execute_interactive(client.py)', '357': 'is_alive(manager.py)', '97': 'execute_interactive(client.py)', '123': 'wait_for_ready(client.py)', '165': 'is_alive(client.py)', '104': 'wait_for_ready(client.py)', '103': 'is_alive(client.py)', '133': 'is_beating(channels.py)', '725': 'stop_channels(threaded.py)', '327': 'finish_shutdown(manager.py)', '324': '_async_wait(manager.py)', '329': 'is_alive(manager.py)', '325': '_kill_kernel(manager.py)', '332': 'signal_kernel(manager.py)', '480': 'send(session.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '520': 'msg(test_adapter.py)', '534': 'msg(test_adapter.py)', '50': 'adapt(adapter.py)', '450': 'utcnow(session.py)', '482': 'serialize(session.py)', '483': 'sign(session.py)', '440': 'Message(session.py)', '734': 'send(threaded.py)', '738': 'thread_send(threaded.py)', '88': 'send(channels.py)', '114': 'send(channels.py)', '368': 'stop_restarter(manager.py)', '326': '_launch_kernel(manager.py)', '201': 'cleanup_ipc_files(connect.py)', '211': 'ports(connect.py)', '200': 'cleanup_connection_file(connect.py)'}}, {'key': 519, 'parent': 1422, 'tfidf_word': 'EP: 519, Name: AsyncKernelClient &rarr; complete &rarr; msg &rarr; msg &rarr; msg &rarr; msg_header &rarr; msg_id', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 638, 'parent': 1422, 'tfidf_word': 'EP: 638, Name: BlockingKernelClient &rarr; complete &rarr; msg &rarr; msg &rarr; msg &rarr; msg_header &rarr; msg_id', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1420, 'parent': 2004, 'tfidf_word': 'client header history id kernel async blocking msg ', 'tfidf_method': 'history msg msg_header msg_id msg msg BlockingKernelClient AsyncKernelClient ', 'lda_word': ' msg,header,client,kernel,history,', 'lda_method': ' msg,asynckernelclient,history,msg_header,msg_id,', 'lsi_word': ' msg,header,history,client,kernel,', 'lsi_method': ' msg,history,msg_header,msg_id,asynckernelclient,', 'spm_method': '  &#187; history(client.py) &rarr; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br>', 'text_summary': '', 'files_count': 3, 'files': ['client.py', 'test_adapter.py', 'session.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'90': 'AsyncKernelClient(client.py)', '161': 'history(client.py)', '520': 'msg(test_adapter.py)', '534': 'msg(test_adapter.py)', '476': 'msg(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '116': 'BlockingKernelClient(client.py)'}}, {'key': 1545, 'parent': 2004, 'tfidf_word': 'interrupt type input identity found feed display data version msg ', 'tfidf_method': 'test_send_raw test_input_request test_execute_request test_execute_reply test_display_data test_complete_request test_complete_reply interrupt_kernel test_no_adapt test_serialize ', 'lda_word': ' msg,header,test,request,kernel,', 'lda_method': ' msg,msg_header,msg_id,test_serialize,test_send,', 'lsi_word': ' msg,header,test,reply,info,', 'lsi_method': ' msg,msg_header,msg_id,test_input_request,is_complete,', 'spm_method': ' ', 'text_summary': 'Interrupts the kernel by sending it a signal.', 'files_count': 5, 'files': ['test_adapter.py', 'session.py', 'test_session.py', 'manager.py', 'client.py'], 'execution_path_count': 20, 'function_id_to_name_file': {'526': 'test_input_request(test_adapter.py)', '520': 'msg(test_adapter.py)', '534': 'msg(test_adapter.py)', '476': 'msg(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '523': 'test_display_data(test_adapter.py)', '527': 'test_kernel_info_reply(test_adapter.py)', '530': 'test_object_info_reply_not_found(test_adapter.py)', '529': 'test_object_info_reply(test_adapter.py)', '531': 'test_object_info_request(test_adapter.py)', '521': 'test_complete_reply(test_adapter.py)', '522': 'test_complete_request(test_adapter.py)', '524': 'test_execute_reply(test_adapter.py)', '525': 'test_execute_request(test_adapter.py)', '532': 'test_rename_type(test_adapter.py)', '528': 'test_no_adapt(test_adapter.py)', '533': 'test_same_version(test_adapter.py)', '695': 'test_send_raw(test_session.py)', '692': 'test_feed_identities(test_session.py)', '694': 'test_send(test_session.py)', '696': 'test_serialize(test_session.py)', '693': 'test_msg(test_session.py)', '328': 'interrupt_kernel(manager.py)', '166': 'is_complete(client.py)'}}, {'key': 521, 'parent': 1498, 'tfidf_word': 'EP: 521, Name: AsyncKernelClient &rarr; complete &rarr; msg &rarr; msg &rarr; msg_header &rarr; msg_id', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 640, 'parent': 1498, 'tfidf_word': 'EP: 640, Name: BlockingKernelClient &rarr; complete &rarr; msg &rarr; msg &rarr; msg_header &rarr; msg_id', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1494, 'parent': 2235, 'tfidf_word': 'client header history id kernel async blocking msg ', 'tfidf_method': 'history msg msg_header msg_id msg BlockingKernelClient AsyncKernelClient ', 'lda_word': ' msg,history,header,kernel,client,', 'lda_method': ' msg,msg_id,msg_header,history,asynckernelclient,', 'lsi_word': ' msg,history,header,client,kernel,', 'lsi_method': ' msg,msg_header,history,msg_id,asynckernelclient,', 'spm_method': ' ', 'text_summary': '', 'files_count': 3, 'files': ['client.py', 'test_adapter.py', 'session.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'90': 'AsyncKernelClient(client.py)', '161': 'history(client.py)', '534': 'msg(test_adapter.py)', '476': 'msg(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '116': 'BlockingKernelClient(client.py)'}}, {'key': 1727, 'parent': 2235, 'tfidf_word': 'type input info identity feed execute display data version msg ', 'tfidf_method': 'test_inspect_reply test_send_raw test_input_request test_execute_request test_display_data test_complete_request test_complete_reply interrupt_kernel test_inspect_request test_serialize ', 'lda_word': ' msg,header,test,request,inspect,', 'lda_method': ' test_inspect_request,msg,msg_id,msg_header,test_kernel_info_reply,', 'lsi_word': ' msg,header,test,request,inspect,', 'lsi_method': ' msg,msg_id,msg_header,test_input_request,test_inspect_reply,', 'spm_method': ' ', 'text_summary': 'Interrupts the kernel by sending it a signal.', 'files_count': 5, 'files': ['test_adapter.py', 'session.py', 'test_session.py', 'manager.py', 'client.py'], 'execution_path_count': 19, 'function_id_to_name_file': {'539': 'test_input_request(test_adapter.py)', '534': 'msg(test_adapter.py)', '476': 'msg(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '537': 'test_display_data(test_adapter.py)', '543': 'test_kernel_info_reply(test_adapter.py)', '540': 'test_inspect_reply(test_adapter.py)', '542': 'test_inspect_request_token(test_adapter.py)', '541': 'test_inspect_request(test_adapter.py)', '535': 'test_complete_reply(test_adapter.py)', '536': 'test_complete_request(test_adapter.py)', '538': 'test_execute_request(test_adapter.py)', '545': 'test_rename_type(test_adapter.py)', '546': 'test_same_version(test_adapter.py)', '544': 'test_no_adapt(test_adapter.py)', '695': 'test_send_raw(test_session.py)', '694': 'test_send(test_session.py)', '692': 'test_feed_identities(test_session.py)', '696': 'test_serialize(test_session.py)', '693': 'test_msg(test_session.py)', '328': 'interrupt_kernel(manager.py)', '166': 'is_complete(client.py)'}}, {'key': 536, 'parent': 1425, 'tfidf_word': 'EP: 536, Name: AsyncKernelClient &rarr; shutdown &rarr; msg &rarr; msg &rarr; msg &rarr; msg_header &rarr; msg_id', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 652, 'parent': 1425, 'tfidf_word': 'EP: 652, Name: BlockingKernelClient &rarr; shutdown &rarr; msg &rarr; msg &rarr; msg &rarr; msg_header &rarr; msg_id', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1423, 'parent': 2008, 'tfidf_word': 'client complete header id kernel async blocking msg ', 'tfidf_method': 'complete msg msg_header msg_id msg msg BlockingKernelClient AsyncKernelClient ', 'lda_word': ' msg,client,kernel,complete,header,', 'lda_method': ' msg,msg_id,msg_header,complete,asynckernelclient,', 'lsi_word': ' msg,header,complete,kernel,client,', 'lsi_method': ' msg,complete,msg_header,msg_id,asynckernelclient,', 'spm_method': '  &#187; complete(client.py) &rarr; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br>', 'text_summary': '', 'files_count': 3, 'files': ['client.py', 'test_adapter.py', 'session.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'90': 'AsyncKernelClient(client.py)', '153': 'complete(client.py)', '534': 'msg(test_adapter.py)', '520': 'msg(test_adapter.py)', '476': 'msg(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '116': 'BlockingKernelClient(client.py)'}}, {'key': 2003, 'parent': 2008, 'tfidf_word': 'identity feed execute display data blocking async interrupt version msg ', 'tfidf_method': 'test_inspect_reply test_serialize test_execute_request test_display_data test_complete_request test_complete_reply interrupt_kernel is_complete test_inspect_request AsyncKernelClient ', 'lda_word': ' msg,header,test,kernel,request,', 'lda_method': ' msg,msg_id,msg_header,history,is_complete,', 'lsi_word': ' msg,header,test,request,kernel,', 'lsi_method': ' msg,msg_header,msg_id,history,asynckernelclient,', 'spm_method': '  &#187; history(client.py) &rarr; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br>', 'text_summary': "Get entries from the kernel's history list.", 'files_count': 5, 'files': ['client.py', 'test_adapter.py', 'session.py', 'test_session.py', 'manager.py'], 'execution_path_count': 21, 'function_id_to_name_file': {'90': 'AsyncKernelClient(client.py)', '161': 'history(client.py)', '534': 'msg(test_adapter.py)', '520': 'msg(test_adapter.py)', '476': 'msg(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '116': 'BlockingKernelClient(client.py)', '539': 'test_input_request(test_adapter.py)', '537': 'test_display_data(test_adapter.py)', '543': 'test_kernel_info_reply(test_adapter.py)', '540': 'test_inspect_reply(test_adapter.py)', '542': 'test_inspect_request_token(test_adapter.py)', '541': 'test_inspect_request(test_adapter.py)', '535': 'test_complete_reply(test_adapter.py)', '536': 'test_complete_request(test_adapter.py)', '538': 'test_execute_request(test_adapter.py)', '545': 'test_rename_type(test_adapter.py)', '544': 'test_no_adapt(test_adapter.py)', '546': 'test_same_version(test_adapter.py)', '695': 'test_send_raw(test_session.py)', '692': 'test_feed_identities(test_session.py)', '694': 'test_send(test_session.py)', '696': 'test_serialize(test_session.py)', '693': 'test_msg(test_session.py)', '328': 'interrupt_kernel(manager.py)', '166': 'is_complete(client.py)'}}, {'key': 530, 'parent': 1500, 'tfidf_word': 'EP: 530, Name: AsyncKernelClient &rarr; shutdown &rarr; msg &rarr; msg &rarr; msg_header &rarr; msg_id', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 646, 'parent': 1500, 'tfidf_word': 'EP: 646, Name: BlockingKernelClient &rarr; shutdown &rarr; msg &rarr; msg &rarr; msg_header &rarr; msg_id', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1496, 'parent': 2243, 'tfidf_word': 'client complete header id kernel async blocking msg ', 'tfidf_method': 'complete msg msg_header msg_id msg BlockingKernelClient AsyncKernelClient ', 'lda_word': ' msg,header,client,kernel,complete,', 'lda_method': ' msg,complete,msg_id,msg_header,blockingkernelclient,', 'lsi_word': ' msg,complete,header,kernel,client,', 'lsi_method': ' msg,complete,msg_header,msg_id,asynckernelclient,', 'spm_method': ' ', 'text_summary': '', 'files_count': 3, 'files': ['client.py', 'test_adapter.py', 'session.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'90': 'AsyncKernelClient(client.py)', '153': 'complete(client.py)', '520': 'msg(test_adapter.py)', '476': 'msg(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '116': 'BlockingKernelClient(client.py)'}}, {'key': 2237, 'parent': 2243, 'tfidf_word': 'identity found feed display data blocking async interrupt version msg ', 'tfidf_method': 'test_serialize test_execute_request test_execute_reply test_display_data test_complete_request test_complete_reply interrupt_kernel is_complete test_no_adapt AsyncKernelClient ', 'lda_word': ' msg,header,test,reply,request,', 'lda_method': ' msg,msg_header,msg_id,test_object_info_reply_not_found,test_object_info_request,', 'lsi_word': ' msg,header,test,reply,info,', 'lsi_method': ' msg,msg_id,msg_header,history,asynckernelclient,', 'spm_method': ' ', 'text_summary': "Get entries from the kernel's history list.", 'files_count': 5, 'files': ['client.py', 'test_adapter.py', 'session.py', 'test_session.py', 'manager.py'], 'execution_path_count': 22, 'function_id_to_name_file': {'90': 'AsyncKernelClient(client.py)', '161': 'history(client.py)', '520': 'msg(test_adapter.py)', '476': 'msg(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '116': 'BlockingKernelClient(client.py)', '526': 'test_input_request(test_adapter.py)', '523': 'test_display_data(test_adapter.py)', '527': 'test_kernel_info_reply(test_adapter.py)', '530': 'test_object_info_reply_not_found(test_adapter.py)', '529': 'test_object_info_reply(test_adapter.py)', '531': 'test_object_info_request(test_adapter.py)', '521': 'test_complete_reply(test_adapter.py)', '522': 'test_complete_request(test_adapter.py)', '524': 'test_execute_reply(test_adapter.py)', '525': 'test_execute_request(test_adapter.py)', '532': 'test_rename_type(test_adapter.py)', '533': 'test_same_version(test_adapter.py)', '528': 'test_no_adapt(test_adapter.py)', '695': 'test_send_raw(test_session.py)', '694': 'test_send(test_session.py)', '692': 'test_feed_identities(test_session.py)', '696': 'test_serialize(test_session.py)', '693': 'test_msg(test_session.py)', '328': 'interrupt_kernel(manager.py)', '166': 'is_complete(client.py)'}}, {'key': 468, 'parent': 1697, 'tfidf_word': 'EP: 468, Name: start_channels &rarr; kernel_info &rarr; msg &rarr; msg_header &rarr; msg_id', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 548, 'parent': 1697, 'tfidf_word': 'EP: 548, Name: AsyncKernelClient &rarr; kernel_info &rarr; msg &rarr; msg_header &rarr; msg_id', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 559, 'parent': 1712, 'tfidf_word': 'EP: 559, Name: AsyncKernelClient &rarr; inspect &rarr; msg &rarr; msg_header &rarr; msg_id', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 674, 'parent': 1712, 'tfidf_word': 'EP: 674, Name: BlockingKernelClient &rarr; inspect &rarr; msg &rarr; msg_header &rarr; msg_id', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1709, 'parent': 2306, 'tfidf_word': 'client comm header id info kernel async blocking msg ', 'tfidf_method': 'comm_info msg msg_header msg_id BlockingKernelClient AsyncKernelClient ', 'lda_word': ' msg,kernel,info,client,comm,', 'lda_method': ' msg,asynckernelclient,msg_id,msg_header,comm_info,', 'lsi_word': ' msg,info,comm,client,header,', 'lsi_method': ' msg_id,comm_info,msg,msg_header,asynckernelclient,', 'spm_method': ' ', 'text_summary': '', 'files_count': 2, 'files': ['client.py', 'session.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'90': 'AsyncKernelClient(client.py)', '152': 'comm_info(client.py)', '476': 'msg(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '116': 'BlockingKernelClient(client.py)'}}, {'key': 2303, 'parent': 2306, 'tfidf_word': 'history send serialize raw identity interrupt feed default version msg ', 'tfidf_method': 'history shutdown is_complete interrupt_kernel test_default_version test_feed_identities test_msg test_send test_send_raw test_serialize ', 'lda_word': ' msg,header,test,send,kernel,', 'lda_method': ' msg_id,msg_header,msg,shutdown,blockingkernelclient,', 'lsi_word': ' msg,header,kernel,client,test,', 'lsi_method': ' msg,msg_id,msg_header,blockingkernelclient,asynckernelclient,', 'spm_method': ' ', 'text_summary': "Tab complete text in the kernel's namespace.", 'files_count': 5, 'files': ['client.py', 'session.py', 'test_adapter.py', 'test_session.py', 'manager.py'], 'execution_path_count': 14, 'function_id_to_name_file': {'90': 'AsyncKernelClient(client.py)', '169': 'shutdown(client.py)', '476': 'msg(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '116': 'BlockingKernelClient(client.py)', '153': 'complete(client.py)', '161': 'history(client.py)', '516': 'test_default_version(test_adapter.py)', '695': 'test_send_raw(test_session.py)', '692': 'test_feed_identities(test_session.py)', '694': 'test_send(test_session.py)', '693': 'test_msg(test_session.py)', '696': 'test_serialize(test_session.py)', '328': 'interrupt_kernel(manager.py)', '166': 'is_complete(client.py)'}}, {'key': 531, 'parent': 1501, 'tfidf_word': 'EP: 531, Name: AsyncKernelClient &rarr; shutdown &rarr; msg &rarr; msg &rarr; msg &rarr; extract_header', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 647, 'parent': 1501, 'tfidf_word': 'EP: 647, Name: BlockingKernelClient &rarr; shutdown &rarr; msg &rarr; msg &rarr; msg &rarr; extract_header', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1497, 'parent': 2242, 'tfidf_word': 'client complete extract header kernel async blocking msg ', 'tfidf_method': 'complete extract_header msg msg msg BlockingKernelClient AsyncKernelClient ', 'lda_word': ' msg,header,complete,client,extract,', 'lda_method': ' msg,extract_header,complete,asynckernelclient,blockingkernelclient,', 'lsi_word': ' msg,header,complete,client,extract,', 'lsi_method': ' msg,complete,extract_header,asynckernelclient,blockingkernelclient,', 'spm_method': ' ', 'text_summary': '', 'files_count': 3, 'files': ['client.py', 'test_adapter.py', 'session.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'90': 'AsyncKernelClient(client.py)', '153': 'complete(client.py)', '520': 'msg(test_adapter.py)', '534': 'msg(test_adapter.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '116': 'BlockingKernelClient(client.py)'}}, {'key': 2236, 'parent': 2242, 'tfidf_word': 'type identity found feed display data blocking async interrupt version ', 'tfidf_method': 'test_input_request test_execute_request test_execute_reply test_display_data test_complete_request test_complete_reply interrupt_kernel is_complete test_no_adapt AsyncKernelClient ', 'lda_word': ' msg,info,test,extract,reply,', 'lda_method': ' msg,extract_header,history,test_object_info_reply,test_input_request,', 'lsi_word': ' msg,header,extract,test,reply,', 'lsi_method': ' msg,extract_header,history,asynckernelclient,blockingkernelclient,', 'spm_method': ' ', 'text_summary': '', 'files_count': 5, 'files': ['client.py', 'test_adapter.py', 'session.py', 'test_session.py', 'manager.py'], 'execution_path_count': 22, 'function_id_to_name_file': {'90': 'AsyncKernelClient(client.py)', '161': 'history(client.py)', '520': 'msg(test_adapter.py)', '534': 'msg(test_adapter.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '116': 'BlockingKernelClient(client.py)', '526': 'test_input_request(test_adapter.py)', '523': 'test_display_data(test_adapter.py)', '527': 'test_kernel_info_reply(test_adapter.py)', '530': 'test_object_info_reply_not_found(test_adapter.py)', '529': 'test_object_info_reply(test_adapter.py)', '531': 'test_object_info_request(test_adapter.py)', '521': 'test_complete_reply(test_adapter.py)', '522': 'test_complete_request(test_adapter.py)', '524': 'test_execute_reply(test_adapter.py)', '525': 'test_execute_request(test_adapter.py)', '532': 'test_rename_type(test_adapter.py)', '533': 'test_same_version(test_adapter.py)', '528': 'test_no_adapt(test_adapter.py)', '695': 'test_send_raw(test_session.py)', '694': 'test_send(test_session.py)', '692': 'test_feed_identities(test_session.py)', '696': 'test_serialize(test_session.py)', '693': 'test_msg(test_session.py)', '328': 'interrupt_kernel(manager.py)', '166': 'is_complete(client.py)'}}, {'key': 533, 'parent': 1708, 'tfidf_word': 'EP: 533, Name: AsyncKernelClient &rarr; shutdown &rarr; msg &rarr; msg &rarr; extract_header', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 649, 'parent': 1708, 'tfidf_word': 'EP: 649, Name: BlockingKernelClient &rarr; shutdown &rarr; msg &rarr; msg &rarr; extract_header', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1705, 'parent': 2308, 'tfidf_word': 'client complete extract header kernel async blocking msg ', 'tfidf_method': 'complete extract_header msg msg BlockingKernelClient AsyncKernelClient ', 'lda_word': ' msg,header,extract,client,complete,', 'lda_method': ' msg,complete,extract_header,asynckernelclient,blockingkernelclient,', 'lsi_word': ' msg,client,header,complete,extract,', 'lsi_method': ' msg,complete,extract_header,blockingkernelclient,asynckernelclient,', 'spm_method': ' ', 'text_summary': '', 'files_count': 3, 'files': ['client.py', 'test_adapter.py', 'session.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'90': 'AsyncKernelClient(client.py)', '153': 'complete(client.py)', '534': 'msg(test_adapter.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '116': 'BlockingKernelClient(client.py)'}}, {'key': 2305, 'parent': 2308, 'tfidf_word': 'info identity feed execute display data blocking async interrupt version ', 'tfidf_method': 'test_serialize test_input_request test_execute_request test_display_data test_complete_request test_complete_reply interrupt_kernel is_complete test_inspect_request AsyncKernelClient ', 'lda_word': ' msg,extract,header,kernel,client,', 'lda_method': ' msg,extract_header,history,test_send,is_complete,', 'lsi_word': ' msg,header,extract,test,request,', 'lsi_method': ' msg,extract_header,history,blockingkernelclient,asynckernelclient,', 'spm_method': ' ', 'text_summary': '', 'files_count': 5, 'files': ['client.py', 'test_adapter.py', 'session.py', 'test_session.py', 'manager.py'], 'execution_path_count': 21, 'function_id_to_name_file': {'90': 'AsyncKernelClient(client.py)', '161': 'history(client.py)', '534': 'msg(test_adapter.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '116': 'BlockingKernelClient(client.py)', '536': 'test_complete_request(test_adapter.py)', '538': 'test_execute_request(test_adapter.py)', '545': 'test_rename_type(test_adapter.py)', '544': 'test_no_adapt(test_adapter.py)', '546': 'test_same_version(test_adapter.py)', '695': 'test_send_raw(test_session.py)', '692': 'test_feed_identities(test_session.py)', '694': 'test_send(test_session.py)', '693': 'test_msg(test_session.py)', '696': 'test_serialize(test_session.py)', '328': 'interrupt_kernel(manager.py)', '166': 'is_complete(client.py)', '539': 'test_input_request(test_adapter.py)', '537': 'test_display_data(test_adapter.py)', '543': 'test_kernel_info_reply(test_adapter.py)', '542': 'test_inspect_request_token(test_adapter.py)', '540': 'test_inspect_reply(test_adapter.py)', '535': 'test_complete_reply(test_adapter.py)', '541': 'test_inspect_request(test_adapter.py)'}}, {'key': 537, 'parent': 1906, 'tfidf_word': 'EP: 537, Name: AsyncKernelClient &rarr; comm_info &rarr; msg &rarr; extract_header', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 653, 'parent': 1906, 'tfidf_word': 'EP: 653, Name: BlockingKernelClient &rarr; comm_info &rarr; msg &rarr; extract_header', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1905, 'parent': 2396, 'tfidf_word': 'client extract header kernel msg shutdown async blocking ', 'tfidf_method': 'shutdown extract_header msg BlockingKernelClient AsyncKernelClient ', 'lda_word': ' header,kernel,msg,client,extract,', 'lda_method': ' msg,extract_header,shutdown,blockingkernelclient,asynckernelclient,', 'lsi_word': ' shutdown,client,kernel,header,extract,', 'lsi_method': ' extract_header,msg,shutdown,blockingkernelclient,asynckernelclient,', 'spm_method': ' ', 'text_summary': '', 'files_count': 2, 'files': ['client.py', 'session.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'90': 'AsyncKernelClient(client.py)', '169': 'shutdown(client.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '116': 'BlockingKernelClient(client.py)'}}, {'key': 2394, 'parent': 2396, 'tfidf_word': 'send history blocking interrupt feed default raw serialize identity version ', 'tfidf_method': 'history AsyncKernelClient is_complete interrupt_kernel test_default_version test_feed_identities test_msg test_send test_send_raw test_serialize ', 'lda_word': ' extract,header,msg,test,kernel,', 'lda_method': ' msg,extract_header,test_feed_identities,test_serialize,asynckernelclient,', 'lsi_word': ' msg,extract,header,test,kernel,', 'lsi_method': ' extract_header,msg,asynckernelclient,complete,history,', 'spm_method': ' ', 'text_summary': "Tab complete text in the kernel's namespace. Given a message or header, return the header. Ask the kernel whether some code is complete and ready to execute.", 'files_count': 5, 'files': ['client.py', 'session.py', 'test_adapter.py', 'test_session.py', 'manager.py'], 'execution_path_count': 12, 'function_id_to_name_file': {'90': 'AsyncKernelClient(client.py)', '153': 'complete(client.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '116': 'BlockingKernelClient(client.py)', '161': 'history(client.py)', '516': 'test_default_version(test_adapter.py)', '695': 'test_send_raw(test_session.py)', '694': 'test_send(test_session.py)', '692': 'test_feed_identities(test_session.py)', '696': 'test_serialize(test_session.py)', '693': 'test_msg(test_session.py)', '328': 'interrupt_kernel(manager.py)', '166': 'is_complete(client.py)'}}, {'key': 545, 'parent': 1507, 'tfidf_word': 'EP: 545, Name: AsyncKernelClient &rarr; comm_info &rarr; msg &rarr; msg &rarr; msg &rarr; extract_header', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 661, 'parent': 1507, 'tfidf_word': 'EP: 661, Name: BlockingKernelClient &rarr; comm_info &rarr; msg &rarr; msg &rarr; msg &rarr; extract_header', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1503, 'parent': 2245, 'tfidf_word': 'client extract header kernel shutdown async blocking msg ', 'tfidf_method': 'shutdown extract_header msg msg msg BlockingKernelClient AsyncKernelClient ', 'lda_word': ' msg,blocking,header,shutdown,kernel,', 'lda_method': ' msg,extract_header,shutdown,blockingkernelclient,asynckernelclient,', 'lsi_word': ' msg,kernel,shutdown,client,header,', 'lsi_method': ' msg,extract_header,shutdown,blockingkernelclient,asynckernelclient,', 'spm_method': ' ', 'text_summary': '', 'files_count': 3, 'files': ['client.py', 'test_adapter.py', 'session.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'90': 'AsyncKernelClient(client.py)', '169': 'shutdown(client.py)', '534': 'msg(test_adapter.py)', '520': 'msg(test_adapter.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '116': 'BlockingKernelClient(client.py)'}}, {'key': 2240, 'parent': 2245, 'tfidf_word': 'input type info identity feed execute display data interrupt version ', 'tfidf_method': 'test_inspect_request_token test_inspect_request test_inspect_reply test_serialize test_execute_request test_display_data test_complete_request test_complete_reply interrupt_kernel test_input_request ', 'lda_word': ' msg,test,extract,header,reply,', 'lda_method': ' msg,extract_header,complete,blockingkernelclient,test_send,', 'lsi_word': ' msg,header,extract,test,kernel,', 'lsi_method': ' msg,extract_header,asynckernelclient,history,complete,', 'spm_method': ' ', 'text_summary': "Tab complete text in the kernel's namespace. message format. Given a message or header, return the header. Ask the kernel whether some code is complete and ready to execute.", 'files_count': 5, 'files': ['client.py', 'test_adapter.py', 'session.py', 'test_session.py', 'manager.py'], 'execution_path_count': 23, 'function_id_to_name_file': {'90': 'AsyncKernelClient(client.py)', '153': 'complete(client.py)', '534': 'msg(test_adapter.py)', '520': 'msg(test_adapter.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '116': 'BlockingKernelClient(client.py)', '161': 'history(client.py)', '539': 'test_input_request(test_adapter.py)', '537': 'test_display_data(test_adapter.py)', '543': 'test_kernel_info_reply(test_adapter.py)', '540': 'test_inspect_reply(test_adapter.py)', '542': 'test_inspect_request_token(test_adapter.py)', '541': 'test_inspect_request(test_adapter.py)', '535': 'test_complete_reply(test_adapter.py)', '536': 'test_complete_request(test_adapter.py)', '538': 'test_execute_request(test_adapter.py)', '545': 'test_rename_type(test_adapter.py)', '546': 'test_same_version(test_adapter.py)', '544': 'test_no_adapt(test_adapter.py)', '695': 'test_send_raw(test_session.py)', '694': 'test_send(test_session.py)', '692': 'test_feed_identities(test_session.py)', '696': 'test_serialize(test_session.py)', '693': 'test_msg(test_session.py)', '328': 'interrupt_kernel(manager.py)', '166': 'is_complete(client.py)'}}, {'key': 539, 'parent': 1710, 'tfidf_word': 'EP: 539, Name: AsyncKernelClient &rarr; comm_info &rarr; msg &rarr; msg &rarr; extract_header', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 655, 'parent': 1710, 'tfidf_word': 'EP: 655, Name: BlockingKernelClient &rarr; comm_info &rarr; msg &rarr; msg &rarr; extract_header', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1707, 'parent': 2312, 'tfidf_word': 'client extract header kernel shutdown async blocking msg ', 'tfidf_method': 'shutdown extract_header msg msg BlockingKernelClient AsyncKernelClient ', 'lda_word': ' msg,shutdown,client,extract,kernel,', 'lda_method': ' msg,extract_header,shutdown,asynckernelclient,blockingkernelclient,', 'lsi_word': ' msg,kernel,extract,client,header,', 'lsi_method': ' msg,extract_header,shutdown,asynckernelclient,blockingkernelclient,', 'spm_method': ' ', 'text_summary': '', 'files_count': 3, 'files': ['client.py', 'test_adapter.py', 'session.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'90': 'AsyncKernelClient(client.py)', '169': 'shutdown(client.py)', '520': 'msg(test_adapter.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '116': 'BlockingKernelClient(client.py)'}}, {'key': 2310, 'parent': 2312, 'tfidf_word': 'adapt input type identity found feed display data interrupt version ', 'tfidf_method': 'interrupt_kernel test_kernel_info_reply test_serialize test_execute_request test_execute_reply test_display_data test_complete_request test_complete_reply test_object_info_reply test_input_request ', 'lda_word': ' msg,header,extract,test,reply,', 'lda_method': ' complete,blockingkernelclient,msg,extract_header,asynckernelclient,', 'lsi_word': ' msg,header,extract,test,kernel,', 'lsi_method': ' msg,extract_header,complete,blockingkernelclient,history,', 'spm_method': ' ', 'text_summary': "Tab complete text in the kernel's namespace. Given a message or header, return the header. Ask the kernel whether some code is complete and ready to execute.", 'files_count': 5, 'files': ['client.py', 'test_adapter.py', 'session.py', 'test_session.py', 'manager.py'], 'execution_path_count': 24, 'function_id_to_name_file': {'90': 'AsyncKernelClient(client.py)', '153': 'complete(client.py)', '520': 'msg(test_adapter.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '116': 'BlockingKernelClient(client.py)', '161': 'history(client.py)', '524': 'test_execute_reply(test_adapter.py)', '525': 'test_execute_request(test_adapter.py)', '532': 'test_rename_type(test_adapter.py)', '528': 'test_no_adapt(test_adapter.py)', '533': 'test_same_version(test_adapter.py)', '695': 'test_send_raw(test_session.py)', '692': 'test_feed_identities(test_session.py)', '694': 'test_send(test_session.py)', '693': 'test_msg(test_session.py)', '696': 'test_serialize(test_session.py)', '328': 'interrupt_kernel(manager.py)', '166': 'is_complete(client.py)', '526': 'test_input_request(test_adapter.py)', '523': 'test_display_data(test_adapter.py)', '527': 'test_kernel_info_reply(test_adapter.py)', '530': 'test_object_info_reply_not_found(test_adapter.py)', '531': 'test_object_info_request(test_adapter.py)', '529': 'test_object_info_reply(test_adapter.py)', '522': 'test_complete_request(test_adapter.py)', '521': 'test_complete_reply(test_adapter.py)'}}, {'key': 1312, 'parent': 1580, 'tfidf_word': 'EP: 1312, Name: do_execute &rarr; poll &rarr; restart_kernel &rarr; shutdown_kernel &rarr; request_shutdown &rarr; msg &rarr; msg &rarr; extract_header', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1314, 'parent': 1580, 'tfidf_word': 'EP: 1314, Name: do_execute &rarr; poll &rarr; restart_kernel &rarr; shutdown_kernel &rarr; request_shutdown &rarr; msg &rarr; msg &rarr; msg &rarr; extract_header', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1316, 'parent': 1581, 'tfidf_word': 'EP: 1316, Name: do_execute &rarr; poll &rarr; restart_kernel &rarr; shutdown_kernel &rarr; request_shutdown &rarr; msg &rarr; msg &rarr; extract_header', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1318, 'parent': 1581, 'tfidf_word': 'EP: 1318, Name: do_execute &rarr; poll &rarr; restart_kernel &rarr; shutdown_kernel &rarr; request_shutdown &rarr; msg &rarr; msg &rarr; msg &rarr; extract_header', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1309, 'parent': 1603, 'tfidf_word': 'EP: 1309, Name: do_execute &rarr; poll &rarr; restart_kernel &rarr; shutdown_kernel &rarr; request_shutdown &rarr; send &rarr; serialize &rarr; sign', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1310, 'parent': 1603, 'tfidf_word': 'EP: 1310, Name: do_execute &rarr; poll &rarr; restart_kernel &rarr; shutdown_kernel &rarr; request_shutdown &rarr; send &rarr; Message', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1303, 'parent': 1602, 'tfidf_word': 'EP: 1303, Name: do_execute &rarr; poll &rarr; restart_kernel &rarr; shutdown_kernel &rarr; request_shutdown &rarr; _connect_control_socket &rarr; _create_connected_socket &rarr; _make_url', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1304, 'parent': 1602, 'tfidf_word': 'EP: 1304, Name: do_execute &rarr; poll &rarr; restart_kernel &rarr; shutdown_kernel &rarr; request_shutdown &rarr; _create_connected_socket &rarr; _make_url', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1320, 'parent': 1786, 'tfidf_word': 'EP: 1320, Name: do_execute &rarr; poll &rarr; restart_kernel &rarr; shutdown_kernel &rarr; request_shutdown &rarr; send &rarr; thread_send', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1578, 'parent': 1786, 'tfidf_word': 'execute poll request restart send kernel shutdown ', 'tfidf_method': 'poll request_shutdown restart_kernel shutdown_kernel do_execute send send ', 'lda_word': ' shutdown,kernel,restart,execute,send,', 'lda_method': ' send,request_shutdown,shutdown_kernel,poll,do_execute,', 'lsi_word': ' shutdown,kernel,poll,send,execute,', 'lsi_method': ' send,do_execute,shutdown_kernel,request_shutdown,restart_kernel,', 'spm_method': ' ', 'text_summary': 'Restarts a kernel with the arguments that were used to launch it.', 'files_count': 4, 'files': ['signalkernel.py', 'restarter.py', 'manager.py', 'channels.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'510': 'do_execute(signalkernel.py)', '236': 'poll(restarter.py)', '363': 'restart_kernel(manager.py)', '364': 'shutdown_kernel(manager.py)', '362': 'request_shutdown(manager.py)', '88': 'send(channels.py)', '114': 'send(channels.py)'}}, {'key': 1284, 'parent': 1576, 'tfidf_word': 'EP: 1284, Name: do_execute &rarr; poll &rarr; restart_kernel &rarr; start_kernel &rarr; pre_start_kernel &rarr; local_ips', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1285, 'parent': 1576, 'tfidf_word': 'EP: 1285, Name: do_execute &rarr; poll &rarr; restart_kernel &rarr; start_kernel &rarr; pre_start_kernel &rarr; is_local_ip', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 226, 'parent': 1447, 'tfidf_word': 'EP: 226, Name: start &rarr; start &rarr; execute_interactive &rarr; _stdin_hook_default &rarr; input &rarr; msg &rarr; msg &rarr; msg_header &rarr; msg_id', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 228, 'parent': 1447, 'tfidf_word': 'EP: 228, Name: start &rarr; start &rarr; execute_interactive &rarr; _stdin_hook_default &rarr; input &rarr; msg &rarr; msg &rarr; msg &rarr; msg_header &rarr; msg_id', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 230, 'parent': 1448, 'tfidf_word': 'EP: 230, Name: start &rarr; start &rarr; execute_interactive &rarr; _stdin_hook_default &rarr; input &rarr; msg &rarr; msg &rarr; msg_header &rarr; msg_id', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 232, 'parent': 1448, 'tfidf_word': 'EP: 232, Name: start &rarr; start &rarr; execute_interactive &rarr; _stdin_hook_default &rarr; input &rarr; msg &rarr; msg &rarr; msg &rarr; msg_header &rarr; msg_id', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 240, 'parent': 2042, 'tfidf_word': 'EP: 240, Name: start &rarr; start &rarr; execute_interactive &rarr; get_msg &rarr; _recv', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2040, 'parent': 2042, 'tfidf_word': 'execute interactive alive start default kernel reqrep wrap hook output ', 'tfidf_method': '_output_hook_default is_alive reqrep _output_hook_kernel wrapped is_alive is_alive is_alive is_alive is_alive ', 'lda_word': ' start,interactive,execute,alive,wrap,', 'lda_method': ' start,is_alive,execute_interactive,reqrep,output_hook_default,', 'lsi_word': ' start,execute,interactive,alive,output,', 'lsi_method': ' start,execute_interactive,is_alive,output_hook_default,output_hook_kernel,', 'spm_method': ' ', 'text_summary': 'Start the polling of the kernel. Execute code in the kernel interactively.', 'files_count': 8, 'files': ['kernelspecapp.py', 'runapp.py', 'client.py', 'channels.py', 'managerabc.py', 'multikernelmanager.py', 'channelsabc.py', 'threaded.py'], 'execution_path_count': 9, 'function_id_to_name_file': {'291': 'start(kernelspecapp.py)', '439': 'start(runapp.py)', '122': 'execute_interactive(client.py)', '119': '_output_hook_kernel(client.py)', '118': '_output_hook_default(client.py)', '117': 'reqrep(client.py)', '124': 'wrapped(client.py)', '112': 'is_alive(channels.py)', '373': 'is_alive(managerabc.py)', '412': 'is_alive(multikernelmanager.py)', '140': 'is_alive(channelsabc.py)', '86': 'is_alive(channels.py)', '732': 'is_alive(threaded.py)'}}, {'key': 265, 'parent': 1449, 'tfidf_word': 'EP: 265, Name: start &rarr; start &rarr; execute_interactive &rarr; _stdin_hook_default &rarr; input &rarr; msg &rarr; msg &rarr; msg_header &rarr; msg_id', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 267, 'parent': 1449, 'tfidf_word': 'EP: 267, Name: start &rarr; start &rarr; execute_interactive &rarr; _stdin_hook_default &rarr; input &rarr; msg &rarr; msg &rarr; msg &rarr; msg_header &rarr; msg_id', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 269, 'parent': 1450, 'tfidf_word': 'EP: 269, Name: start &rarr; start &rarr; execute_interactive &rarr; _stdin_hook_default &rarr; input &rarr; msg &rarr; msg &rarr; msg_header &rarr; msg_id', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 271, 'parent': 1450, 'tfidf_word': 'EP: 271, Name: start &rarr; start &rarr; execute_interactive &rarr; _stdin_hook_default &rarr; input &rarr; msg &rarr; msg &rarr; msg &rarr; msg_header &rarr; msg_id', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 255, 'parent': 2043, 'tfidf_word': 'EP: 255, Name: start &rarr; start &rarr; execute_interactive &rarr; get_msg &rarr; _recv', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2041, 'parent': 2043, 'tfidf_word': 'interactive alive start default get kernel msg recv hook output ', 'tfidf_method': '_output_hook_default is_alive is_alive is_alive is_alive is_alive _recv get_msg is_alive _output_hook_kernel ', 'lda_word': ' start,execute,interactive,alive,output,', 'lda_method': ' start,output_hook_default,execute_interactive,output_hook_kernel,is_alive,', 'lsi_word': ' start,execute,interactive,alive,output,', 'lsi_method': ' start,execute_interactive,is_alive,output_hook_default,output_hook_kernel,', 'spm_method': ' ', 'text_summary': 'Start the polling of the kernel. Output hook when running inside an IPython kernel. Default hook for redisplaying plain-text output.', 'files_count': 8, 'files': ['kernelspecapp.py', 'runapp.py', 'client.py', 'channels.py', 'managerabc.py', 'multikernelmanager.py', 'threaded.py', 'channelsabc.py'], 'execution_path_count': 9, 'function_id_to_name_file': {'291': 'start(kernelspecapp.py)', '439': 'start(runapp.py)', '97': 'execute_interactive(client.py)', '94': '_output_hook_kernel(client.py)', '93': '_output_hook_default(client.py)', '84': 'get_msg(channels.py)', '82': '_recv(channels.py)', '112': 'is_alive(channels.py)', '373': 'is_alive(managerabc.py)', '412': 'is_alive(multikernelmanager.py)', '86': 'is_alive(channels.py)', '732': 'is_alive(threaded.py)', '140': 'is_alive(channelsabc.py)'}}, {'key': 1935, 'parent': 2328, 'tfidf_word': 'bad check init test date squash utcnow packer ', 'tfidf_method': '__init__ _check_packers test_bad_packer squash_dates utcnow ', 'lda_word': ' packer,check,init,test,bad,', 'lda_method': ' test_bad_packer,check_packers,init,squash_dates,utcnow,', 'lsi_word': ' packer,check,bad,init,test,', 'lsi_method': ' test_bad_packer,check_packers,init,squash_dates,utcnow,', 'spm_method': ' ', 'text_summary': '', 'files_count': 3, 'files': ['test_session.py', 'session.py', 'jsonutil.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'682': 'test_bad_packer(test_session.py)', '457': '__init__(session.py)', '459': '_check_packers(session.py)', '450': 'utcnow(session.py)', '244': 'squash_dates(jsonutil.py)'}}, {'key': 2327, 'parent': 2328, 'tfidf_word': 'history args up unpack pack session id cull set zero ', 'tfidf_method': '_check_packers squash_dates utcnow setUp test_args test_bad_pack test_bad_unpack test_cull_digest_history test_session_id test_zero_digest_history ', 'lda_word': ' check,packer,init,test,utcnow,', 'lda_method': ' init,check_packers,utcnow,test_args,setup,', 'lsi_word': ' packer,check,init,test,date,', 'lsi_method': ' check_packers,init,utcnow,squash_dates,test_bad_unpack,', 'spm_method': ' ', 'text_summary': 'Return timezone-aware UTC timestamp. squash datetime objects into ISO8601 strings. check packers for datetime support.', 'files_count': 3, 'files': ['test_session.py', 'session.py', 'jsonutil.py'], 'execution_path_count': 14, 'function_id_to_name_file': {'684': 'test_bad_unpack(test_session.py)', '457': '__init__(session.py)', '459': '_check_packers(session.py)', '450': 'utcnow(session.py)', '244': 'squash_dates(jsonutil.py)', '681': 'test_bad_pack(test_session.py)', '687': 'test_cull_digest_history(test_session.py)', '700': 'test_zero_digest_history(test_session.py)', '697': 'test_session_id(test_session.py)', '678': 'setUp(test_session.py)', '680': 'test_args(test_session.py)'}}, {'key': 1846, 'parent': 2339, 'tfidf_word': 'check packer date squash utcnow init ', 'tfidf_method': '__init__ __init__ _check_packers squash_dates utcnow ', 'lda_word': ' init,packer,squash,check,date,', 'lda_method': ' init,check_packers,squash_dates,utcnow,', 'lsi_word': ' init,packer,check,squash,date,', 'lsi_method': ' init,check_packers,squash_dates,utcnow,', 'spm_method': ' ', 'text_summary': '', 'files_count': 3, 'files': ['consoleapp.py', 'session.py', 'jsonutil.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'215': '__init__(consoleapp.py)', '457': '__init__(session.py)', '459': '_check_packers(session.py)', '450': 'utcnow(session.py)', '244': 'squash_dates(jsonutil.py)'}}, {'key': 1859, 'parent': 2339, 'tfidf_word': 'check default init packer session date squash utcnow ', 'tfidf_method': '_session_default __init__ _check_packers squash_dates utcnow ', 'lda_word': ' default,init,session,packer,check,', 'lda_method': ' session_default,init,check_packers,squash_dates,utcnow,', 'lsi_word': ' session,packer,init,default,check,', 'lsi_method': ' init,check_packers,session_default,squash_dates,utcnow,', 'spm_method': ' ', 'text_summary': '', 'files_count': 3, 'files': ['connect.py', 'session.py', 'jsonutil.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'198': '_session_default(connect.py)', '457': '__init__(session.py)', '459': '_check_packers(session.py)', '450': 'utcnow(session.py)', '244': 'squash_dates(jsonutil.py)'}}, {'key': 1060, 'parent': 1943, 'tfidf_word': 'EP: 1060, Name: test_load_connection_file_session &rarr; __init__ &rarr; _check_packers &rarr; utcnow', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1061, 'parent': 1943, 'tfidf_word': 'EP: 1061, Name: test_load_connection_file_session &rarr; __init__ &rarr; _check_packers &rarr; squash_dates', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1940, 'parent': 2329, 'tfidf_word': 'check default init packer test version date squash utcnow ', 'tfidf_method': '__init__ _check_packers test_default_version squash_dates utcnow ', 'lda_word': ' test,packer,check,version,default,', 'lda_method': ' init,test_default_version,check_packers,utcnow,squash_dates,', 'lsi_word': ' version,check,init,packer,default,', 'lsi_method': ' check_packers,init,test_default_version,utcnow,squash_dates,', 'spm_method': ' ', 'text_summary': '', 'files_count': 3, 'files': ['test_adapter.py', 'session.py', 'jsonutil.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'516': 'test_default_version(test_adapter.py)', '457': '__init__(session.py)', '459': '_check_packers(session.py)', '450': 'utcnow(session.py)', '244': 'squash_dates(jsonutil.py)'}}, {'key': 1941, 'parent': 2329, 'tfidf_word': 'check init packer set up date squash utcnow ', 'tfidf_method': '__init__ _check_packers setUp squash_dates utcnow ', 'lda_word': ' set,init,packer,check,utcnow,', 'lda_method': ' init,squash_dates,setup,check_packers,utcnow,', 'lsi_word': ' set,init,check,packer,squash,', 'lsi_method': ' init,setup,check_packers,squash_dates,utcnow,', 'spm_method': ' ', 'text_summary': '', 'files_count': 3, 'files': ['test_adapter.py', 'session.py', 'jsonutil.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'519': 'setUp(test_adapter.py)', '457': '__init__(session.py)', '459': '_check_packers(session.py)', '450': 'utcnow(session.py)', '244': 'squash_dates(jsonutil.py)'}}, {'key': 1201, 'parent': 1575, 'tfidf_word': 'EP: 1201, Name: test_start_sequence_ipc_kernels &rarr; _get_ipc_km &rarr; AsyncMultiKernelManager &rarr; MultiKernelManager &rarr; kernel_method &rarr; wrapped', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1571, 'parent': 1575, 'tfidf_word': 'km method test wrap cinfo lifecycle ipc manager multi kernel ', 'tfidf_method': 'AsyncMultiKernelManager MultiKernelManager kernel_method wrapped _get_ipc_km test_ipc_cinfo test_ipc_lifecycle ', 'lda_word': ' kernel,manager,multi,ipc,wrap,', 'lda_method': ' kernel_method,asyncmultikernelmanager,get_ipc_km,multikernelmanager,wrap,', 'lsi_word': ' kernel,ipc,multi,manager,wrap,', 'lsi_method': ' get_ipc_km,multikernelmanager,asyncmultikernelmanager,kernel_method,wrap,', 'spm_method': ' ', 'text_summary': 'Empty', 'files_count': 2, 'files': ['test_multikernelmanager.py', 'multikernelmanager.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'645': 'test_ipc_lifecycle(test_multikernelmanager.py)', '638': '_get_ipc_km(test_multikernelmanager.py)', '379': 'AsyncMultiKernelManager(multikernelmanager.py)', '381': 'MultiKernelManager(multikernelmanager.py)', '382': 'kernel_method(multikernelmanager.py)', '425': 'wrapped(multikernelmanager.py)', '644': 'test_ipc_cinfo(test_multikernelmanager.py)'}}, {'key': 1573, 'parent': 2033, 'tfidf_word': 'test wrap manager multi tcp cinfo sequence shutdown start kernel ', 'tfidf_method': 'AsyncMultiKernelManager MultiKernelManager kernel_method wrapped _get_tcp_km test_shutdown_all test_start_sequence_tcp_kernels test_tcp_cinfo ', 'lda_word': ' kernel,manager,multi,tcp,km,', 'lda_method': ' kernel_method,multikernelmanager,asyncmultikernelmanager,wrap,get_tcp_km,', 'lsi_word': ' kernel,multi,manager,tcp,test,', 'lsi_method': ' multikernelmanager,kernel_method,get_tcp_km,wrap,asyncmultikernelmanager,', 'spm_method': ' ', 'text_summary': '', 'files_count': 2, 'files': ['test_multikernelmanager.py', 'multikernelmanager.py'], 'execution_path_count': 3, 'function_id_to_name_file': {'650': 'test_start_sequence_tcp_kernels(test_multikernelmanager.py)', '639': '_get_tcp_km(test_multikernelmanager.py)', '379': 'AsyncMultiKernelManager(multikernelmanager.py)', '381': 'MultiKernelManager(multikernelmanager.py)', '382': 'kernel_method(multikernelmanager.py)', '425': 'wrapped(multikernelmanager.py)', '646': 'test_shutdown_all(test_multikernelmanager.py)', '651': 'test_tcp_cinfo(test_multikernelmanager.py)'}}, {'key': 1793, 'parent': 2033, 'tfidf_word': 'start lifecycle manager multi loop thread process id tcp kernel ', 'tfidf_method': 'MultiKernelManager kernel_method wrapped _get_tcp_km raw_tcp_lifecycle tcp_lifecycle_with_loop test_start_parallel_process_kernels test_start_parallel_thread_kernels test_tcp_lifecycle test_tcp_lifecycle_with_kernel_id ', 'lda_word': ' tcp,kernel,manager,lifecycle,multi,', 'lda_method': ' raw_tcp_lifecycle,asyncmultikernelmanager,kernel_method,multikernelmanager,get_tcp_km,', 'lsi_word': ' kernel,tcp,manager,multi,lifecycle,', 'lsi_method': ' kernel_method,raw_tcp_lifecycle,wrap,multikernelmanager,get_tcp_km,', 'spm_method': '  &#187; test_start_parallel_thread_kernels(test_multikernelmanager.py) &rarr; raw_tcp_lifecycle(test_multikernelmanager.py) &rarr; _get_tcp_km(test_multikernelmanager.py) &rarr; AsyncMultiKernelManager(multikernelmanager.py) &rarr; MultiKernelManager(multikernelmanager.py) &rarr; kernel_method(multikernelmanager.py) &rarr; wrapped(multikernelmanager.py) . <br> &#187; tcp_lifecycle_with_loop(test_multikernelmanager.py) &rarr; raw_tcp_lifecycle(test_multikernelmanager.py) &rarr; _get_tcp_km(test_multikernelmanager.py) &rarr; AsyncMultiKernelManager(multikernelmanager.py) &rarr; MultiKernelManager(multikernelmanager.py) &rarr; kernel_method(multikernelmanager.py) &rarr; wrapped(multikernelmanager.py) . <br> &#187; raw_tcp_lifecycle(test_multikernelmanager.py) &rarr; _get_tcp_km(test_multikernelmanager.py) &rarr; AsyncMultiKernelManager(multikernelmanager.py) &rarr; MultiKernelManager(multikernelmanager.py) &rarr; kernel_method(multikernelmanager.py) &rarr; wrapped(multikernelmanager.py) . <br> &#187; test_start_parallel_process_kernels(test_multikernelmanager.py) &rarr; raw_tcp_lifecycle(test_multikernelmanager.py) &rarr; _get_tcp_km(test_multikernelmanager.py) &rarr; AsyncMultiKernelManager(multikernelmanager.py) &rarr; MultiKernelManager(multikernelmanager.py) &rarr; kernel_method(multikernelmanager.py) &rarr; wrapped(multikernelmanager.py) . <br>', 'text_summary': 'Empty', 'files_count': 2, 'files': ['test_multikernelmanager.py', 'multikernelmanager.py'], 'execution_path_count': 6, 'function_id_to_name_file': {'648': 'test_start_parallel_thread_kernels(test_multikernelmanager.py)', '643': 'tcp_lifecycle_with_loop(test_multikernelmanager.py)', '642': 'raw_tcp_lifecycle(test_multikernelmanager.py)', '639': '_get_tcp_km(test_multikernelmanager.py)', '379': 'AsyncMultiKernelManager(multikernelmanager.py)', '381': 'MultiKernelManager(multikernelmanager.py)', '382': 'kernel_method(multikernelmanager.py)', '425': 'wrapped(multikernelmanager.py)', '647': 'test_start_parallel_process_kernels(test_multikernelmanager.py)', '652': 'test_tcp_lifecycle(test_multikernelmanager.py)', '653': 'test_tcp_lifecycle_with_kernel_id(test_multikernelmanager.py)'}}, {'key': 1161, 'parent': 1757, 'tfidf_word': 'EP: 1161, Name: test_start_sequence_ipc_kernels &rarr; _get_ipc_km &rarr; MultiKernelManager &rarr; kernel_method &rarr; wrapped', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1753, 'parent': 1757, 'tfidf_word': 'km manager method multi test wrap cinfo lifecycle ipc kernel ', 'tfidf_method': 'MultiKernelManager kernel_method wrapped _get_ipc_km test_ipc_cinfo test_ipc_lifecycle ', 'lda_word': ' kernel,ipc,get,km,manager,', 'lda_method': ' wrap,kernel_method,get_ipc_km,multikernelmanager,test_ipc_cinfo,', 'lsi_word': ' kernel,ipc,get,wrap,test,', 'lsi_method': ' kernel_method,multikernelmanager,wrap,get_ipc_km,test_ipc_lifecycle,', 'spm_method': ' ', 'text_summary': 'Empty', 'files_count': 2, 'files': ['test_multikernelmanager.py', 'multikernelmanager.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'660': 'test_ipc_lifecycle(test_multikernelmanager.py)', '654': '_get_ipc_km(test_multikernelmanager.py)', '381': 'MultiKernelManager(multikernelmanager.py)', '382': 'kernel_method(multikernelmanager.py)', '425': 'wrapped(multikernelmanager.py)', '659': 'test_ipc_cinfo(test_multikernelmanager.py)'}}, {'key': 1755, 'parent': 2272, 'tfidf_word': 'test wrap tcp cinfo id lifecycle sequence shutdown start kernel ', 'tfidf_method': 'MultiKernelManager kernel_method wrapped _get_tcp_km test_shutdown_all test_start_sequence_tcp_kernels test_tcp_cinfo test_tcp_lifecycle_with_kernel_id ', 'lda_word': ' kernel,tcp,test,method,multi,', 'lda_method': ' kernel_method,multikernelmanager,get_tcp_km,wrap,test_tcp_cinfo,', 'lsi_word': ' kernel,tcp,get,test,km,', 'lsi_method': ' get_tcp_km,kernel_method,wrap,multikernelmanager,test_shutdown_all,', 'spm_method': ' ', 'text_summary': '', 'files_count': 2, 'files': ['test_multikernelmanager.py', 'multikernelmanager.py'], 'execution_path_count': 4, 'function_id_to_name_file': {'665': 'test_start_sequence_tcp_kernels(test_multikernelmanager.py)', '655': '_get_tcp_km(test_multikernelmanager.py)', '381': 'MultiKernelManager(multikernelmanager.py)', '382': 'kernel_method(multikernelmanager.py)', '425': 'wrapped(multikernelmanager.py)', '666': 'test_tcp_cinfo(test_multikernelmanager.py)', '668': 'test_tcp_lifecycle_with_kernel_id(test_multikernelmanager.py)', '661': 'test_shutdown_all(test_multikernelmanager.py)'}}, {'key': 1976, 'parent': 2272, 'tfidf_word': 'parallel start wrap loop process thread lifecycle test kernel tcp ', 'tfidf_method': 'MultiKernelManager kernel_method wrapped _get_tcp_km test_tcp_lifecycle tcp_lifecycle_with_loop test_start_parallel_process_kernels test_start_parallel_thread_kernels ', 'lda_word': ' kernel,tcp,lifecycle,test,start,', 'lda_method': ' test_tcp_lifecycle,wrap,kernel_method,multikernelmanager,get_tcp_km,', 'lsi_word': ' kernel,tcp,test,lifecycle,start,', 'lsi_method': ' get_tcp_km,test_tcp_lifecycle,multikernelmanager,kernel_method,wrap,', 'spm_method': '  &#187; test_start_parallel_thread_kernels(test_multikernelmanager.py) &rarr; test_tcp_lifecycle(test_multikernelmanager.py) &rarr; _get_tcp_km(test_multikernelmanager.py) &rarr; MultiKernelManager(multikernelmanager.py) &rarr; kernel_method(multikernelmanager.py) &rarr; wrapped(multikernelmanager.py) . <br> &#187; tcp_lifecycle_with_loop(test_multikernelmanager.py) &rarr; test_tcp_lifecycle(test_multikernelmanager.py) &rarr; _get_tcp_km(test_multikernelmanager.py) &rarr; MultiKernelManager(multikernelmanager.py) &rarr; kernel_method(multikernelmanager.py) &rarr; wrapped(multikernelmanager.py) . <br> &#187; test_start_parallel_process_kernels(test_multikernelmanager.py) &rarr; test_tcp_lifecycle(test_multikernelmanager.py) &rarr; _get_tcp_km(test_multikernelmanager.py) &rarr; MultiKernelManager(multikernelmanager.py) &rarr; kernel_method(multikernelmanager.py) &rarr; wrapped(multikernelmanager.py) . <br>', 'text_summary': 'Empty', 'files_count': 2, 'files': ['test_multikernelmanager.py', 'multikernelmanager.py'], 'execution_path_count': 4, 'function_id_to_name_file': {'663': 'test_start_parallel_thread_kernels(test_multikernelmanager.py)', '658': 'tcp_lifecycle_with_loop(test_multikernelmanager.py)', '667': 'test_tcp_lifecycle(test_multikernelmanager.py)', '655': '_get_tcp_km(test_multikernelmanager.py)', '381': 'MultiKernelManager(multikernelmanager.py)', '382': 'kernel_method(multikernelmanager.py)', '425': 'wrapped(multikernelmanager.py)', '662': 'test_start_parallel_process_kernels(test_multikernelmanager.py)'}}, {'key': 1693, 'parent': 2259, 'tfidf_word': 'io loop new start async spec manager kernel ', 'tfidf_method': 'KernelSpec KernelSpecManager AsyncKernelManager KernelManager AsyncIOLoopKernelManager start_new_async_kernel ', 'lda_word': ' kernel,manager,spec,async,io,', 'lda_method': ' kernelspec,kernelspecmanager,kernelmanager,asynckernelmanager,start_new_async_kernel,', 'lsi_word': ' kernel,manager,async,spec,io,', 'lsi_method': ' kernelmanager,kernelspec,kernelspecmanager,asynckernelmanager,start_new_async_kernel,', 'spm_method': ' ', 'text_summary': '', 'files_count': 2, 'files': ['manager.py', 'kernelspec.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'322': 'start_new_async_kernel(manager.py)', '319': 'AsyncKernelManager(manager.py)', '320': 'KernelManager(manager.py)', '254': 'KernelSpecManager(kernelspec.py)', '253': 'KernelSpec(kernelspec.py)', '224': 'AsyncIOLoopKernelManager(manager.py)'}}, {'key': 1910, 'parent': 2259, 'tfidf_word': 'connection file io loop path real test spec manager kernel ', 'tfidf_method': 'KernelSpec KernelSpecManager KernelManager IOLoopKernelManager test_connection_file_real_path ', 'lda_word': ' kernel,spec,manager,path,connection,', 'lda_method': ' kernelmanager,kernelspecmanager,kernelspec,ioloopkernelmanager,test_connection_file_real_path,', 'lsi_word': ' kernel,manager,spec,loop,io,', 'lsi_method': ' kernelmanager,kernelspec,kernelspecmanager,test_connection_file_real_path,ioloopkernelmanager,', 'spm_method': ' ', 'text_summary': 'Empty', 'files_count': 3, 'files': ['manager.py', 'kernelspec.py', 'test_manager.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'225': 'IOLoopKernelManager(manager.py)', '320': 'KernelManager(manager.py)', '254': 'KernelSpecManager(kernelspec.py)', '253': 'KernelSpec(kernelspec.py)', '635': 'test_connection_file_real_path(test_manager.py)'}}, {'key': 2116, 'parent': 2352, 'tfidf_word': 'default manager kernel spec app set subclass test up ', 'tfidf_method': 'KernelSpec KernelSpecManager KernelApp _kernel_spec_manager_default _kernel_spec_manager_default _kernel_spec_manager_default _kernel_spec_manager_default _kernel_spec_manager_default setUp test_subclass ', 'lda_word': ' spec,kernel,manager,default,set,', 'lda_method': ' kernelspec,kernelspecmanager,setup,kernel_spec_manager_default,kernelapp,', 'lsi_word': ' kernel,spec,manager,default,app,', 'lsi_method': ' kernelspec,kernelspecmanager,kernel_spec_manager_default,kernelapp,test_subclass,', 'spm_method': ' ', 'text_summary': 'Empty', 'files_count': 5, 'files': ['test_kernelspec.py', 'kernelspec.py', 'kernelspecapp.py', 'manager.py', 'kernelapp.py'], 'execution_path_count': 8, 'function_id_to_name_file': {'629': 'test_subclass(test_kernelspec.py)', '254': 'KernelSpecManager(kernelspec.py)', '253': 'KernelSpec(kernelspec.py)', '618': 'setUp(test_kernelspec.py)', '289': '_kernel_spec_manager_default(kernelspecapp.py)', '345': '_kernel_spec_manager_default(manager.py)', '295': '_kernel_spec_manager_default(kernelspecapp.py)', '286': '_kernel_spec_manager_default(kernelspecapp.py)', '245': 'KernelApp(kernelapp.py)', '292': '_kernel_spec_manager_default(kernelspecapp.py)'}}, {'key': 2336, 'parent': 2352, 'tfidf_word': 'ksm list my native remove specs subclass test kernel spec ', 'tfidf_method': 'KernelSpec KernelSpecManager KernelSpecApp InstallKernelSpec InstallNativeKernelSpec ListKernelSpecs RemoveKernelSpec test_subclass MyKSM ', 'lda_word': ' kernel,spec,manager,app,test,', 'lda_method': ' kernelspecapp,kernelspec,kernelspecmanager,listkernelspecs,removekernelspec,', 'lsi_word': ' kernel,spec,manager,app,install,', 'lsi_method': ' kernelspecmanager,kernelspec,kernelspecapp,listkernelspecs,installkernelspec,', 'spm_method': ' ', 'text_summary': 'Empty', 'files_count': 3, 'files': ['test_kernelspec.py', 'kernelspec.py', 'kernelspecapp.py'], 'execution_path_count': 5, 'function_id_to_name_file': {'629': 'test_subclass(test_kernelspec.py)', '631': 'MyKSM(test_kernelspec.py)', '254': 'KernelSpecManager(kernelspec.py)', '253': 'KernelSpec(kernelspec.py)', '282': 'KernelSpecApp(kernelspecapp.py)', '284': 'RemoveKernelSpec(kernelspecapp.py)', '283': 'ListKernelSpecs(kernelspecapp.py)', '280': 'InstallKernelSpec(kernelspecapp.py)', '281': 'InstallNativeKernelSpec(kernelspecapp.py)'}}, {'key': 1574, 'parent': 2392, 'tfidf_word': 'test ipc multi spec cinfo lifecycle sequence start manager kernel ', 'tfidf_method': 'KernelSpec KernelSpecManager AsyncMultiKernelManager MultiKernelManager _get_ipc_km test_ipc_cinfo test_ipc_lifecycle test_start_sequence_ipc_kernels ', 'lda_word': ' kernel,ipc,spec,manager,multi,', 'lda_method': ' get_ipc_km,kernelspec,asyncmultikernelmanager,kernelspecmanager,test_start_sequence_ipc_kernels,', 'lsi_word': ' kernel,manager,spec,multi,ipc,', 'lsi_method': ' kernelspecmanager,kernelspec,get_ipc_km,multikernelmanager,asyncmultikernelmanager,', 'spm_method': ' ', 'text_summary': 'Empty', 'files_count': 3, 'files': ['test_multikernelmanager.py', 'multikernelmanager.py', 'kernelspec.py'], 'execution_path_count': 3, 'function_id_to_name_file': {'649': 'test_start_sequence_ipc_kernels(test_multikernelmanager.py)', '638': '_get_ipc_km(test_multikernelmanager.py)', '379': 'AsyncMultiKernelManager(multikernelmanager.py)', '381': 'MultiKernelManager(multikernelmanager.py)', '254': 'KernelSpecManager(kernelspec.py)', '253': 'KernelSpec(kernelspec.py)', '645': 'test_ipc_lifecycle(test_multikernelmanager.py)', '644': 'test_ipc_cinfo(test_multikernelmanager.py)'}}, {'key': 2032, 'parent': 2392, 'tfidf_word': 'process thread lifecycle tcp manager sequence shutdown id cinfo kernel ', 'tfidf_method': '_get_tcp_km raw_tcp_lifecycle tcp_lifecycle_with_loop test_start_parallel_process_kernels test_start_parallel_thread_kernels test_shutdown_all test_start_sequence_tcp_kernels test_tcp_cinfo test_tcp_lifecycle test_tcp_lifecycle_with_kernel_id ', 'lda_word': ' kernel,sequence,manager,spec,tcp,', 'lda_method': ' test_tcp_lifecycle_with_kernel_id,raw_tcp_lifecycle,asyncmultikernelmanager,multikernelmanager,kernelspec,', 'lsi_word': ' kernel,manager,tcp,spec,multi,', 'lsi_method': ' kernelspec,kernelspecmanager,asyncmultikernelmanager,get_tcp_km,multikernelmanager,', 'spm_method': '  &#187; test_start_parallel_thread_kernels(test_multikernelmanager.py) &rarr; raw_tcp_lifecycle(test_multikernelmanager.py) &rarr; _get_tcp_km(test_multikernelmanager.py) &rarr; AsyncMultiKernelManager(multikernelmanager.py) &rarr; MultiKernelManager(multikernelmanager.py) &rarr; KernelSpecManager(kernelspec.py) &rarr; KernelSpec(kernelspec.py) . <br> &#187; tcp_lifecycle_with_loop(test_multikernelmanager.py) &rarr; raw_tcp_lifecycle(test_multikernelmanager.py) &rarr; _get_tcp_km(test_multikernelmanager.py) &rarr; AsyncMultiKernelManager(multikernelmanager.py) &rarr; MultiKernelManager(multikernelmanager.py) &rarr; KernelSpecManager(kernelspec.py) &rarr; KernelSpec(kernelspec.py) . <br> &#187; raw_tcp_lifecycle(test_multikernelmanager.py) &rarr; _get_tcp_km(test_multikernelmanager.py) &rarr; AsyncMultiKernelManager(multikernelmanager.py) &rarr; MultiKernelManager(multikernelmanager.py) &rarr; KernelSpecManager(kernelspec.py) &rarr; KernelSpec(kernelspec.py) . <br> &#187; test_start_parallel_process_kernels(test_multikernelmanager.py) &rarr; raw_tcp_lifecycle(test_multikernelmanager.py) &rarr; _get_tcp_km(test_multikernelmanager.py) &rarr; AsyncMultiKernelManager(multikernelmanager.py) &rarr; MultiKernelManager(multikernelmanager.py) &rarr; KernelSpecManager(kernelspec.py) &rarr; KernelSpec(kernelspec.py) . <br>', 'text_summary': 'Empty', 'files_count': 3, 'files': ['test_multikernelmanager.py', 'multikernelmanager.py', 'kernelspec.py'], 'execution_path_count': 9, 'function_id_to_name_file': {'650': 'test_start_sequence_tcp_kernels(test_multikernelmanager.py)', '639': '_get_tcp_km(test_multikernelmanager.py)', '379': 'AsyncMultiKernelManager(multikernelmanager.py)', '381': 'MultiKernelManager(multikernelmanager.py)', '254': 'KernelSpecManager(kernelspec.py)', '253': 'KernelSpec(kernelspec.py)', '646': 'test_shutdown_all(test_multikernelmanager.py)', '651': 'test_tcp_cinfo(test_multikernelmanager.py)', '648': 'test_start_parallel_thread_kernels(test_multikernelmanager.py)', '643': 'tcp_lifecycle_with_loop(test_multikernelmanager.py)', '642': 'raw_tcp_lifecycle(test_multikernelmanager.py)', '647': 'test_start_parallel_process_kernels(test_multikernelmanager.py)', '652': 'test_tcp_lifecycle(test_multikernelmanager.py)', '653': 'test_tcp_lifecycle_with_kernel_id(test_multikernelmanager.py)'}}, {'key': 1756, 'parent': 2413, 'tfidf_word': 'multi test ipc manager spec cinfo lifecycle sequence start kernel ', 'tfidf_method': 'KernelSpec KernelSpecManager MultiKernelManager _get_ipc_km test_ipc_cinfo test_ipc_lifecycle test_start_sequence_ipc_kernels ', 'lda_word': ' kernel,ipc,spec,manager,km,', 'lda_method': ' kernelspec,get_ipc_km,kernelspecmanager,multikernelmanager,test_start_sequence_ipc_kernels,', 'lsi_word': ' kernel,ipc,spec,manager,get,', 'lsi_method': ' kernelspec,multikernelmanager,kernelspecmanager,get_ipc_km,test_start_sequence_ipc_kernels,', 'spm_method': ' ', 'text_summary': 'Empty', 'files_count': 3, 'files': ['test_multikernelmanager.py', 'multikernelmanager.py', 'kernelspec.py'], 'execution_path_count': 3, 'function_id_to_name_file': {'664': 'test_start_sequence_ipc_kernels(test_multikernelmanager.py)', '654': '_get_ipc_km(test_multikernelmanager.py)', '381': 'MultiKernelManager(multikernelmanager.py)', '254': 'KernelSpecManager(kernelspec.py)', '253': 'KernelSpec(kernelspec.py)', '660': 'test_ipc_lifecycle(test_multikernelmanager.py)', '659': 'test_ipc_cinfo(test_multikernelmanager.py)'}}, {'key': 2271, 'parent': 2413, 'tfidf_word': 'process thread loop lifecycle tcp sequence shutdown id cinfo kernel ', 'tfidf_method': 'MultiKernelManager _get_tcp_km test_tcp_lifecycle tcp_lifecycle_with_loop test_start_parallel_process_kernels test_start_parallel_thread_kernels test_shutdown_all test_start_sequence_tcp_kernels test_tcp_cinfo test_tcp_lifecycle_with_kernel_id ', 'lda_word': ' kernel,spec,manager,tcp,test,', 'lda_method': ' test_start_parallel_thread_kernels,tcp_lifecycle_with_loop,test_tcp_lifecycle,get_tcp_km,kernelspec,', 'lsi_word': ' kernel,tcp,spec,manager,test,', 'lsi_method': ' get_tcp_km,multikernelmanager,kernelspecmanager,kernelspec,test_tcp_lifecycle,', 'spm_method': '  &#187; test_start_parallel_thread_kernels(test_multikernelmanager.py) &rarr; test_tcp_lifecycle(test_multikernelmanager.py) &rarr; _get_tcp_km(test_multikernelmanager.py) &rarr; MultiKernelManager(multikernelmanager.py) &rarr; KernelSpecManager(kernelspec.py) &rarr; KernelSpec(kernelspec.py) . <br> &#187; tcp_lifecycle_with_loop(test_multikernelmanager.py) &rarr; test_tcp_lifecycle(test_multikernelmanager.py) &rarr; _get_tcp_km(test_multikernelmanager.py) &rarr; MultiKernelManager(multikernelmanager.py) &rarr; KernelSpecManager(kernelspec.py) &rarr; KernelSpec(kernelspec.py) . <br> &#187; test_start_parallel_process_kernels(test_multikernelmanager.py) &rarr; test_tcp_lifecycle(test_multikernelmanager.py) &rarr; _get_tcp_km(test_multikernelmanager.py) &rarr; MultiKernelManager(multikernelmanager.py) &rarr; KernelSpecManager(kernelspec.py) &rarr; KernelSpec(kernelspec.py) . <br>', 'text_summary': 'Empty', 'files_count': 3, 'files': ['test_multikernelmanager.py', 'multikernelmanager.py', 'kernelspec.py'], 'execution_path_count': 8, 'function_id_to_name_file': {'665': 'test_start_sequence_tcp_kernels(test_multikernelmanager.py)', '655': '_get_tcp_km(test_multikernelmanager.py)', '381': 'MultiKernelManager(multikernelmanager.py)', '254': 'KernelSpecManager(kernelspec.py)', '253': 'KernelSpec(kernelspec.py)', '666': 'test_tcp_cinfo(test_multikernelmanager.py)', '668': 'test_tcp_lifecycle_with_kernel_id(test_multikernelmanager.py)', '661': 'test_shutdown_all(test_multikernelmanager.py)', '663': 'test_start_parallel_thread_kernels(test_multikernelmanager.py)', '658': 'tcp_lifecycle_with_loop(test_multikernelmanager.py)', '667': 'test_tcp_lifecycle(test_multikernelmanager.py)', '662': 'test_start_parallel_process_kernels(test_multikernelmanager.py)'}}, {'key': 1695, 'parent': 2045, 'tfidf_word': 'new pre run ip local env get substitution start kernel ', 'tfidf_method': 'run_kernel start_new_kernel pre_start_kernel start_kernel is_local_ip local_ips _get_env_substitutions ', 'lda_word': ' kernel,start,pre,run,new,', 'lda_method': ' start_new_kernel,pre_start_kernel,start_kernel,run_kernel,local_ips,', 'lsi_word': ' kernel,start,new,pre,run,', 'lsi_method': ' start_new_kernel,start_kernel,pre_start_kernel,run_kernel,get_env_substitutions,', 'spm_method': ' ', 'text_summary': 'Start a new kernel, and return its Manager and Client. return the IP addresses that point to this machine. does `ip` point to this machine?.', 'files_count': 2, 'files': ['manager.py', 'localinterfaces.py'], 'execution_path_count': 3, 'function_id_to_name_file': {'321': 'run_kernel(manager.py)', '323': 'start_new_kernel(manager.py)', '366': 'start_kernel(manager.py)', '360': 'pre_start_kernel(manager.py)', '341': '_get_env_substitutions(manager.py)', '314': 'local_ips(localinterfaces.py)', '312': 'is_local_ip(localinterfaces.py)'}}, {'key': 2022, 'parent': 2045, 'tfidf_word': 'file names port random record write n start spec kernel ', 'tfidf_method': 'run_kernel start_new_kernel pre_start_kernel start_kernel format_kernel_cmd _record_random_port_names write_connection_file KernelSpec kernel_spec from_ns ', 'lda_word': ' kernel,start,new,cmd,pre,', 'lda_method': ' start_kernel,pre_start_kernel,run_kernel,start_new_kernel,format_kernel_cmd,', 'lsi_word': ' kernel,start,pre,run,new,', 'lsi_method': ' pre_start_kernel,start_kernel,start_new_kernel,run_kernel,format_kernel_cmd,', 'spm_method': '  &#187; run_kernel(manager.py) &rarr; start_new_kernel(manager.py) &rarr; start_kernel(manager.py) &rarr; pre_start_kernel(manager.py) &rarr; write_connection_file(connect.py) &rarr; _record_random_port_names(connect.py) . <br>', 'text_summary': 'Write connection info to JSON dict in self.connection_file. Start a new kernel, and return its Manager and Client. Context manager to create a kernel in a subprocess.', 'files_count': 3, 'files': ['manager.py', 'connect.py', 'kernelspec.py'], 'execution_path_count': 4, 'function_id_to_name_file': {'321': 'run_kernel(manager.py)', '323': 'start_new_kernel(manager.py)', '366': 'start_kernel(manager.py)', '360': 'pre_start_kernel(manager.py)', '212': 'write_connection_file(connect.py)', '197': '_record_random_port_names(connect.py)', '353': 'format_kernel_cmd(manager.py)', '369': 'from_ns(manager.py)', '358': 'kernel_spec(manager.py)', '253': 'KernelSpec(kernelspec.py)'}}, {'key': 431, 'parent': 2258, 'tfidf_word': 'EP: 431, Name: run_kernel &rarr; start_new_kernel &rarr; start_kernel &rarr; _launch_kernel', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1999, 'parent': 2258, 'tfidf_word': 'run control create make restarter url connect socket kernel start ', 'tfidf_method': 'run_kernel start_new_kernel post_start_kernel start_kernel _create_connected_socket _make_url _connect_control_socket start_restarter ', 'lda_word': ' start,kernel,post,new,run,', 'lda_method': ' start_new_kernel,create_connected_socket,start_kernel,run_kernel,make_url,', 'lsi_word': ' kernel,start,connect,socket,run,', 'lsi_method': ' run_kernel,start_new_kernel,start_kernel,post_start_kernel,connect_control_socket,', 'spm_method': ' ', 'text_summary': 'Create a zmq Socket and connect it to the kernel. Context manager to create a kernel in a subprocess.', 'files_count': 2, 'files': ['manager.py', 'connect.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'321': 'run_kernel(manager.py)', '323': 'start_new_kernel(manager.py)', '366': 'start_kernel(manager.py)', '359': 'post_start_kernel(manager.py)', '338': '_connect_control_socket(manager.py)', '192': '_create_connected_socket(connect.py)', '196': '_make_url(connect.py)', '367': 'start_restarter(manager.py)'}}, {'key': 1977, 'parent': 2672, 'tfidf_word': 'header id new request run start shutdown send kernel msg ', 'tfidf_method': 'run_kernel start_new_kernel request_shutdown shutdown_kernel msg msg_header msg_id msg msg send ', 'lda_word': ' msg,kernel,shutdown,run,start,', 'lda_method': ' msg_header,run_kernel,msg_id,msg,shutdown_kernel,', 'lsi_word': ' msg,kernel,shutdown,header,request,', 'lsi_method': ' msg,start_new_kernel,run_kernel,request_shutdown,msg_id,', 'spm_method': '  &#187; run_kernel(manager.py) &rarr; start_new_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; start_new_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br>', 'text_summary': 'Start a new kernel, and return its Manager and Client. Context manager to create a kernel in a subprocess.', 'files_count': 3, 'files': ['manager.py', 'session.py', 'test_adapter.py'], 'execution_path_count': 6, 'function_id_to_name_file': {'321': 'run_kernel(manager.py)', '323': 'start_new_kernel(manager.py)', '364': 'shutdown_kernel(manager.py)', '362': 'request_shutdown(manager.py)', '476': 'msg(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '480': 'send(session.py)', '520': 'msg(test_adapter.py)', '534': 'msg(test_adapter.py)'}}, {'key': 2389, 'parent': 2672, 'tfidf_word': 'thread sign adapt message control serialize utcnow msg socket connect ', 'tfidf_method': 'send send adapt utcnow serialize thread_send Message _connect_control_socket sign send ', 'lda_word': ' kernel,shutdown,send,start,request,', 'lda_method': ' request_shutdown,shutdown_kernel,run_kernel,start_new_kernel,send,', 'lsi_word': ' kernel,shutdown,run,new,start,', 'lsi_method': ' msg,shutdown_kernel,run_kernel,request_shutdown,start_new_kernel,', 'spm_method': '  &#187; run_kernel(manager.py) &rarr; start_new_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br> &#187; start_new_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br>', 'text_summary': 'Given a message or header, return the header. Create a zmq Socket and connect it to the kernel. Start a new kernel, and return its Manager and Client. Pass a message to the ZMQ socket to send.', 'files_count': 7, 'files': ['manager.py', 'session.py', 'test_adapter.py', 'adapter.py', 'connect.py', 'threaded.py', 'channels.py'], 'execution_path_count': 14, 'function_id_to_name_file': {'321': 'run_kernel(manager.py)', '323': 'start_new_kernel(manager.py)', '364': 'shutdown_kernel(manager.py)', '362': 'request_shutdown(manager.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '480': 'send(session.py)', '520': 'msg(test_adapter.py)', '534': 'msg(test_adapter.py)', '50': 'adapt(adapter.py)', '450': 'utcnow(session.py)', '482': 'serialize(session.py)', '483': 'sign(session.py)', '440': 'Message(session.py)', '338': '_connect_control_socket(manager.py)', '192': '_create_connected_socket(connect.py)', '196': '_make_url(connect.py)', '734': 'send(threaded.py)', '738': 'thread_send(threaded.py)', '88': 'send(channels.py)', '114': 'send(channels.py)'}}, {'key': 2677, 'parent': 2714, 'tfidf_word': 'run client get info async file mixin manager spec kernel ', 'tfidf_method': 'run_kernel start_new_kernel get_connection_info KernelManager client ConnectionFileMixin KernelSpec KernelSpecManager start_new_async_kernel ', 'lda_word': ' kernel,manager,run,new,start,', 'lda_method': ' client,start_new_kernel,run_kernel,kernelmanager,start_new_async_kernel,', 'lsi_word': ' kernel,manager,start,new,run,', 'lsi_method': ' run_kernel,start_new_kernel,kernelmanager,client,get_connection_info,', 'spm_method': ' ', 'text_summary': 'Start a new kernel, and return its Manager and Client. Create a client configured to connect to our kernel.', 'files_count': 3, 'files': ['manager.py', 'kernelspec.py', 'connect.py'], 'execution_path_count': 4, 'function_id_to_name_file': {'321': 'run_kernel(manager.py)', '323': 'start_new_kernel(manager.py)', '320': 'KernelManager(manager.py)', '254': 'KernelSpecManager(kernelspec.py)', '253': 'KernelSpec(kernelspec.py)', '188': 'ConnectionFileMixin(connect.py)', '322': 'start_new_async_kernel(manager.py)', '351': 'client(manager.py)', '208': 'get_connection_info(connect.py)'}}, {'key': 2684, 'parent': 2714, 'tfidf_word': 'resource signal connection ipc port alive restarter stop cleanup kernel ', 'tfidf_method': '_kill_kernel cleanup_resources finish_shutdown cleanup_connection_file cleanup_ipc_files ports cleanup signal_kernel is_alive stop_restarter ', 'lda_word': ' kernel,shutdown,start,run,new,', 'lda_method': ' shutdown_kernel,run_kernel,start_new_kernel,has_kernel,kill_kernel,', 'lsi_word': ' kernel,shutdown,new,start,run,', 'lsi_method': ' start_new_kernel,shutdown_kernel,run_kernel,launch_kernel,has_kernel,', 'spm_method': '  &#187; run_kernel(manager.py) &rarr; start_new_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; _kill_kernel(manager.py) &rarr; signal_kernel(manager.py) &rarr; has_kernel(manager.py) &rarr; _launch_kernel(manager.py) . <br> &#187; start_new_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; _kill_kernel(manager.py) &rarr; signal_kernel(manager.py) &rarr; has_kernel(manager.py) &rarr; _launch_kernel(manager.py) . <br>', 'text_summary': "Has a kernel been started that we are managing. Wait for kernel shutdown, then kill process if it doesn't shutdown. Start a new kernel, and return its Manager and Client.", 'files_count': 2, 'files': ['manager.py', 'connect.py'], 'execution_path_count': 11, 'function_id_to_name_file': {'321': 'run_kernel(manager.py)', '323': 'start_new_kernel(manager.py)', '364': 'shutdown_kernel(manager.py)', '346': '_kill_kernel(manager.py)', '365': 'signal_kernel(manager.py)', '354': 'has_kernel(manager.py)', '347': '_launch_kernel(manager.py)', '352': 'finish_shutdown(manager.py)', '357': 'is_alive(manager.py)', '350': 'cleanup_resources(manager.py)', '201': 'cleanup_ipc_files(connect.py)', '211': 'ports(connect.py)', '349': 'cleanup(manager.py)', '368': 'stop_restarter(manager.py)', '200': 'cleanup_connection_file(connect.py)'}}, {'key': 2678, 'parent': 2786, 'tfidf_word': 'no local stable uniq netifaces output get load dumb ip ', 'tfidf_method': '_load_ips_ifconfig _load_ips_ip _load_ips_ipconfig NoIPAddresses _uniq_stable local_ips public_ips _get_output _load_ips_netifaces _load_ips_dumb ', 'lda_word': ' ip,load,output,require,get,', 'lda_method': ' ips_loaded,requires_ips,load_ips,populate_from_list,load_ips_ip,', 'lsi_word': ' ip,load,require,populate,list,', 'lsi_method': ' load_ips,ips_loaded,requires_ips,populate_from_list,load_ips_ipconfig,', 'spm_method': ' ', 'text_summary': 'populate local and public IPs from flat list of all IPs. return the IP addresses that point to this machine. load ip addresses from `ifconfig` output (posix). load ip addresses from `ip addr` output (Linux). load ip addresses from `ipconfig` output (Windows). return the IP addresses that point to this machine. populate local and public IPs from flat list of all IPs. decorator to ensure load_ips has been run before f. populate local and public IPs from flat list of all IPs. uniq_stable(elems) -> list. return the IP addresses for this machine that are visible to other machines. populate local and public IPs from flat list of all IPs. return the IP addresses for this machine that are visible to other machines.', 'files_count': 1, 'files': ['localinterfaces.py'], 'execution_path_count': 20, 'function_id_to_name_file': {'310': '_requires_ips(localinterfaces.py)', '318': 'ips_loaded(localinterfaces.py)', '301': '_load_ips(localinterfaces.py)', '306': '_load_ips_ipconfig(localinterfaces.py)', '300': '_get_output(localinterfaces.py)', '309': '_populate_from_list(localinterfaces.py)', '299': 'NoIPAddresses(localinterfaces.py)', '316': 'public_ips(localinterfaces.py)', '314': 'local_ips(localinterfaces.py)', '311': '_uniq_stable(localinterfaces.py)', '304': '_load_ips_ifconfig(localinterfaces.py)', '305': '_load_ips_ip(localinterfaces.py)', '307': '_load_ips_netifaces(localinterfaces.py)', '302': '_load_ips_dumb(localinterfaces.py)'}}, {'key': 2712, 'parent': 2786, 'tfidf_word': 'addresses local netifaces output get load gethostbyname require dumb ip ', 'tfidf_method': '_load_ips_ipconfig NoIPAddresses local_ips public_ips _get_output _load_ips_netifaces _load_ips_gethostbyname _load_ips_dumb _requires_ips ips_loaded ', 'lda_word': ' ip,load,test,list,populate,', 'lda_method': ' load_ips,test_load_ips,load_ips_ifconfig,populate_from_list,public_ips,', 'lsi_word': ' ip,load,test,list,populate,', 'lsi_method': ' load_ips,test_load_ips,populate_from_list,uniq_stable,load_ips_ip,', 'spm_method': ' ', 'text_summary': 'populate local and public IPs from flat list of all IPs. return the IP addresses that point to this machine. load ip addresses from `ifconfig` output (posix). populate local and public IPs from flat list of all IPs. return the IP addresses that point to this machine. uniq_stable(elems) -> list. populate local and public IPs from flat list of all IPs. uniq_stable(elems) -> list. return the IP addresses for this machine that are visible to other machines. populate local and public IPs from flat list of all IPs. return the IP addresses for this machine that are visible to other machines. load ip addresses with socket.gethostbyname_ex uniq_stable(elems) -> list.', 'files_count': 2, 'files': ['test_localinterfaces.py', 'localinterfaces.py'], 'execution_path_count': 22, 'function_id_to_name_file': {'634': 'test_load_ips(test_localinterfaces.py)', '301': '_load_ips(localinterfaces.py)', '306': '_load_ips_ipconfig(localinterfaces.py)', '300': '_get_output(localinterfaces.py)', '309': '_populate_from_list(localinterfaces.py)', '299': 'NoIPAddresses(localinterfaces.py)', '316': 'public_ips(localinterfaces.py)', '314': 'local_ips(localinterfaces.py)', '311': '_uniq_stable(localinterfaces.py)', '304': '_load_ips_ifconfig(localinterfaces.py)', '305': '_load_ips_ip(localinterfaces.py)', '310': '_requires_ips(localinterfaces.py)', '318': 'ips_loaded(localinterfaces.py)', '303': '_load_ips_gethostbyname(localinterfaces.py)', '307': '_load_ips_netifaces(localinterfaces.py)', '302': '_load_ips_dumb(localinterfaces.py)'}}, {'key': 2159, 'parent': 2791, 'tfidf_word': 'args packer pack msgpack version kn id cull pickle zero ', 'tfidf_method': 'test_args test_session_id setUp test_load_connection_file_session_with_kn test_load_connection_file_session setUp test_default_version __init__ test_bad_pack test_zero_digest_history ', 'lda_word': ' init,auth,new,default,session,', 'lda_method': ' init,new_auth,test_bad_packer,test_default_version,setup,', 'lsi_word': ' init,new,auth,test,bad,', 'lsi_method': ' init,new_auth,setup,test_cull_digest_history,test_datetimes_msgpack,', 'spm_method': ' ', 'text_summary': '', 'files_count': 6, 'files': ['test_connect.py', 'session.py', 'test_adapter.py', 'test_session.py', 'consoleapp.py', 'connect.py'], 'execution_path_count': 18, 'function_id_to_name_file': {'565': 'test_load_connection_file_session_with_kn(test_connect.py)', '457': '__init__(session.py)', '465': '_new_auth(session.py)', '564': 'test_load_connection_file_session(test_connect.py)', '519': 'setUp(test_adapter.py)', '516': 'test_default_version(test_adapter.py)', '689': 'test_datetimes_msgpack(test_session.py)', '690': 'test_datetimes_pickle(test_session.py)', '683': 'test_bad_roundtrip(test_session.py)', '685': 'test_bad_unpacker(test_session.py)', '682': 'test_bad_packer(test_session.py)', '681': 'test_bad_pack(test_session.py)', '684': 'test_bad_unpack(test_session.py)', '687': 'test_cull_digest_history(test_session.py)', '697': 'test_session_id(test_session.py)', '700': 'test_zero_digest_history(test_session.py)', '680': 'test_args(test_session.py)', '678': 'setUp(test_session.py)', '215': '__init__(consoleapp.py)', '198': '_session_default(connect.py)'}}, {'key': 2790, 'parent': 2791, 'tfidf_word': 'loop native flush permission digest io tunnel cleanup restarter code ', 'tfidf_method': 'test_find_connection_file_relative start test_secure_write update_msg_type check_user_only_permissions fetch_win32_permissions test_extract_date_from_naive test_extract_dates start __del__ ', 'lda_word': ' connection,file,test,load,session,', 'lda_method': ' init,adapt,run_lifecycle,send,handle,', 'lsi_word': ' kernel,test,spec,connection,file,', 'lsi_method': ' initialize,load_connection_file,write_connection_file,record_random_port_names,init_connection_file,', 'spm_method': '  &#187; initialize(test_connect.py) &rarr; init_connection_file(consoleapp.py) &rarr; load_connection_file(connect.py) &rarr; load_connection_info(connect.py) &rarr; _ip_default(connect.py) &rarr; localhost(localinterfaces.py) . <br> &#187; initialize(runapp.py) &rarr; initialize(consoleapp.py) &rarr; load_connection_file(connect.py) &rarr; load_connection_info(connect.py) &rarr; _ip_default(connect.py) &rarr; localhost(localinterfaces.py) . <br>', 'text_summary': "Subclasses may override  Prepares a kernel for startup in a separate process. return ip for localhost (almost always 127.0.0.1) test `ipython console --existing` loads a connection file. Prepares a kernel for startup in a separate process. Create a client configured to connect to our kernel. return ip for localhost (almost always 127.0.0.1)   Ensure that a sequence of kernel startups doesn't break anything. Sends a signal to the process group of the kernel (this. Pass a message to the ZMQ socket to send. return ip for localhost (almost always 127.0.0.1)   set up ssh tunnels, if needed. Start a new kernel, and return its Manager and Client. Return the connection info as a dict. return ip for localhost (almost always 127.0.0.1) test load_connection_file() after. Launches a localhost kernel, binding to the specified ports. test `ipython console --existing` loads a connection file. find a connection file, and return its absolute path. return ip for localhost (almost always 127.0.0.1)      find a connection file, and return its absolute path. tunnel connections to a kernel via ssh. For tests, create a file to indicate that we've started. Returns a dict mapping kernel names to kernelspecs. handle kernel info reply. Get the hb channel object for this kernel. Returns the id to associate with the kernel for this request. Send a raw message via ident path. {connection_file})   Prepares a kernel for startup in a separate process. {connection_file})  Restarts a kernel with the arguments that were used to launch it. Make a blocking client connected to my kernel. return ip for localhost (almost always 127.0.0.1)       return ip for localhost (almost always 127.0.0.1)   find the connection file, and load the info if found. Load connection info from JSON dict in self.connection_file. return ip for localhost (almost always 127.0.0.1)  Write connection info to JSON dict in self.connection_file. Immediately processes all pending messages on this channel. Return the number of running kernels. Unserialize a msg_list to a nested message dict. {connection_file}) Write connection info to JSON dict in self.connection_file. This is run in the ioloop thread when the kernel info reply is received. find the connection file, and load the info if found. return ip for localhost (almost always 127.0.0.1)   find the connection file, and load the info if found. Return a mapping of kernel names to resource directories from dir. Returns a :class:`KernelSpec` instance for a given kernel_name. test load_connection_file() after. Write connection info to JSON dict in self.connection_file. Create a zmq Socket and connect it to the kernel. Forgets randomly assigned port numbers and cleans up the connection file.", 'files_count': 35, 'files': ['test_connect.py', 'consoleapp.py', 'connect.py', 'localinterfaces.py', 'runapp.py', 'kernelspec.py', 'manager.py', 'test_kernelspec.py', 'test_session.py', 'session.py', 'jsonutil.py', 'forward.py', 'test_jsonutil.py', 'test_manager.py', 'test_client.py', 'adapter.py', 'test_adapter.py', 'channels.py', 'threaded.py', 'test_multikernelmanager.py', 'multikernelmanager.py', 'tunnel.py', 'test_ssh.py', 'client.py', 'managerabc.py', 'channelsabc.py', 'test_kernelmanager.py', 'utils.py', 'restarter.py', 'signalkernel.py', 'kernelspecapp.py', 'kernelapp.py', 'test_kernelapp.py', 'win_interrupt.py', 'launcher.py'], 'execution_path_count': 568, 'function_id_to_name_file': {'560': 'test_find_connection_file(test_connect.py)', '572': 'initialize(test_connect.py)', '219': 'init_connection_file(consoleapp.py)', '209': 'load_connection_file(connect.py)', '210': 'load_connection_info(connect.py)', '195': '_ip_default(connect.py)', '315': 'localhost(localinterfaces.py)', '559': 'test_app_load_connection_file(test_connect.py)', '564': 'test_load_connection_file_session(test_connect.py)', '565': 'test_load_connection_file_session_with_kn(test_connect.py)', '197': '_record_random_port_names(connect.py)', '437': 'initialize(runapp.py)', '223': 'initialize(consoleapp.py)', '222': 'init_ssh(consoleapp.py)', '212': 'write_connection_file(connect.py)', '220': 'init_kernel_client(consoleapp.py)', '221': 'init_kernel_manager(consoleapp.py)', '255': 'NoSuchKernel(kernelspec.py)', '322': 'start_new_async_kernel(manager.py)', '351': 'client(manager.py)', '321': 'run_kernel(manager.py)', '323': 'start_new_kernel(manager.py)', '568': 'test_mixin_record_random_ports(test_connect.py)', '567': 'test_mixin_cleanup_random_ports(test_connect.py)', '621': 'test_find_all_specs(test_kernelspec.py)', '273': 'get_all_specs(kernelspec.py)', '272': 'find_kernel_specs(kernelspec.py)', '258': '_list_kernels_in(kernelspec.py)', '257': '_is_valid_kernel_name(kernelspec.py)', '256': '_is_kernel_dir(kernelspec.py)', '629': 'test_subclass(test_kernelspec.py)', '627': 'test_remove_kernel_spec(test_kernelspec.py)', '277': 'remove_kernel_spec(kernelspec.py)', '625': 'test_install_kernel_spec_prefix(test_kernelspec.py)', '626': 'test_kernel_spec_priority(test_kernelspec.py)', '624': 'test_install_kernel_spec(test_kernelspec.py)', '259': 'find_kernel_specs(kernelspec.py)', '622': 'test_find_kernel_specs(test_kernelspec.py)', '694': 'test_send(test_session.py)', '479': 'recv(session.py)', '474': 'deserialize(session.py)', '242': 'extract_dates(jsonutil.py)', '243': 'parse_date(jsonutil.py)', '240': '_ensure_tzinfo(jsonutil.py)', '492': 'handle(forward.py)', '695': 'test_send_raw(test_session.py)', '484': 'unserialize(session.py)', '696': 'test_serialize(test_session.py)', '578': 'test_parse_ms_precision(test_jsonutil.py)', '689': 'test_datetimes_msgpack(test_session.py)', '679': '_datetime_test(test_session.py)', '688': 'test_datetimes(test_session.py)', '690': 'test_datetimes_pickle(test_session.py)', '575': 'test_date_default(test_jsonutil.py)', '576': 'test_extract_date_from_naive(test_jsonutil.py)', '577': 'test_extract_dates(test_jsonutil.py)', '330': 'restart_kernel(manager.py)', '333': 'start_kernel(manager.py)', '326': '_launch_kernel(manager.py)', '359': 'post_start_kernel(manager.py)', '338': '_connect_control_socket(manager.py)', '192': '_create_connected_socket(connect.py)', '196': '_make_url(connect.py)', '367': 'start_restarter(manager.py)', '635': 'test_connection_file_real_path(test_manager.py)', '353': 'format_kernel_cmd(manager.py)', '358': 'kernel_spec(manager.py)', '253': 'KernelSpec(kernelspec.py)', '360': 'pre_start_kernel(manager.py)', '369': 'from_ns(manager.py)', '341': '_get_env_substitutions(manager.py)', '314': 'local_ips(localinterfaces.py)', '312': 'is_local_ip(localinterfaces.py)', '623': 'test_get_kernel_spec(test_kernelspec.py)', '267': '_find_spec_directory(kernelspec.py)', '632': 'find_kernel_specs(test_kernelspec.py)', '274': 'get_kernel_spec(kernelspec.py)', '633': 'get_kernel_spec(test_kernelspec.py)', '549': 'setUp(test_client.py)', '269': '_get_kernel_spec_by_name(kernelspec.py)', '278': '__init__(kernelspec.py)', '260': 'get_kernel_spec(kernelspec.py)', '50': 'adapt(adapter.py)', '450': 'utcnow(session.py)', '516': 'test_default_version(test_adapter.py)', '698': 'test_tracking(test_session.py)', '480': 'send(session.py)', '328': 'interrupt_kernel(manager.py)', '191': 'write_connection_file(connect.py)', '109': 'close(channels.py)', '83': 'close(channels.py)', '730': 'close(threaded.py)', '132': 'close(channels.py)', '211': 'ports(connect.py)', '718': 'close(threaded.py)', '570': 'test_write_connection_file(test_connect.py)', '686': 'test_clone(test_session.py)', '458': '_add_digest(session.py)', '460': '_cull_digest_history(session.py)', '700': 'test_zero_digest_history(test_session.py)', '687': 'test_cull_digest_history(test_session.py)', '558': 'DummyConsoleApp(test_connect.py)', '214': 'JupyterConsoleApp(consoleapp.py)', '441': 'Session(session.py)', '188': 'ConnectionFileMixin(connect.py)', '213': 'IPythonConsoleApp(consoleapp.py)', '434': 'RunApp(runapp.py)', '665': 'test_start_sequence_tcp_kernels(test_multikernelmanager.py)', '655': '_get_tcp_km(test_multikernelmanager.py)', '392': '__init__(multikernelmanager.py)', '666': 'test_tcp_cinfo(test_multikernelmanager.py)', '668': 'test_tcp_lifecycle_with_kernel_id(test_multikernelmanager.py)', '661': 'test_shutdown_all(test_multikernelmanager.py)', '663': 'test_start_parallel_thread_kernels(test_multikernelmanager.py)', '658': 'tcp_lifecycle_with_loop(test_multikernelmanager.py)', '667': 'test_tcp_lifecycle(test_multikernelmanager.py)', '662': 'test_start_parallel_process_kernels(test_multikernelmanager.py)', '190': 'tunnel_to_kernel(connect.py)', '503': 'select_random_ports(tunnel.py)', '701': 'test_random_ports(test_ssh.py)', '386': 'shutdown_all(multikernelmanager.py)', '383': 'finish_shutdown(multikernelmanager.py)', '410': 'get_kernel(multikernelmanager.py)', '394': '_check_kernel_id(multikernelmanager.py)', '388': 'signal_kernel(multikernelmanager.py)', '385': 'restart_kernel(multikernelmanager.py)', '384': 'interrupt_kernel(multikernelmanager.py)', '387': 'shutdown_kernel(multikernelmanager.py)', '421': 'shutdown_kernel(multikernelmanager.py)', '420': 'shutdown_all(multikernelmanager.py)', '104': 'wait_for_ready(client.py)', '103': 'is_alive(client.py)', '412': 'is_alive(multikernelmanager.py)', '373': 'is_alive(managerabc.py)', '140': 'is_alive(channelsabc.py)', '732': 'is_alive(threaded.py)', '86': 'is_alive(channels.py)', '112': 'is_alive(channels.py)', '123': 'wait_for_ready(client.py)', '165': 'is_alive(client.py)', '648': 'test_start_parallel_thread_kernels(test_multikernelmanager.py)', '643': 'tcp_lifecycle_with_loop(test_multikernelmanager.py)', '642': 'raw_tcp_lifecycle(test_multikernelmanager.py)', '641': '_run_lifecycle(test_multikernelmanager.py)', '647': 'test_start_parallel_process_kernels(test_multikernelmanager.py)', '652': 'test_tcp_lifecycle(test_multikernelmanager.py)', '653': 'test_tcp_lifecycle_with_kernel_id(test_multikernelmanager.py)', '483': 'sign(session.py)', '440': 'Message(session.py)', '482': 'serialize(session.py)', '135': 'run(channels.py)', '128': '_create_socket(channels.py)', '84': 'get_msg(channels.py)', '82': '_recv(channels.py)', '101': 'get_stdin_msg(client.py)', '85': 'get_msgs(channels.py)', '99': 'get_iopub_msg(client.py)', '110': 'get_msg(channels.py)', '108': '_recv(channels.py)', '111': 'get_msgs(channels.py)', '620': 'test_cant_install_kernel_spec(test_kernelspec.py)', '275': 'install_kernel_spec(kernelspec.py)', '268': '_get_destination_dir(kernelspec.py)', '261': 'install_kernel_spec(kernelspec.py)', '614': 'test_start_sequence_process_kernels(test_kernelmanager.py)', '610': '_run_signaltest_lifecycle(test_kernelmanager.py)', '615': 'execute(test_kernelmanager.py)', '609': '_prepare_kernel(test_kernelmanager.py)', '611': 'test_start_parallel_process_kernels(test_kernelmanager.py)', '613': 'test_start_sequence_kernels(test_kernelmanager.py)', '612': 'test_start_parallel_thread_kernels(test_kernelmanager.py)', '398': '_kernel_manager_class_changed(multikernelmanager.py)', '396': '_create_kernel_manager_factory(multikernelmanager.py)', '424': 'create_kernel_manager(multikernelmanager.py)', '397': '_find_available_port(multikernelmanager.py)', '395': '_context_default(multikernelmanager.py)', '399': '_kernel_manager_factory_default(multikernelmanager.py)', '215': '__init__(consoleapp.py)', '485': '__init__(session.py)', '457': '__init__(session.py)', '465': '_new_auth(session.py)', '459': '_check_packers(session.py)', '244': 'squash_dates(jsonutil.py)', '90': 'AsyncKernelClient(client.py)', '147': 'KernelClient(client.py)', '139': 'HBChannelABC(channelsabc.py)', '138': 'ChannelABC(channelsabc.py)', '116': 'BlockingKernelClient(client.py)', '319': 'AsyncKernelManager(manager.py)', '320': 'KernelManager(manager.py)', '224': 'AsyncIOLoopKernelManager(manager.py)', '225': 'IOLoopKernelManager(manager.py)', '657': '_run_lifecycle(test_multikernelmanager.py)', '704': 'execute(utils.py)', '155': 'execute(client.py)', '148': 'validate_string_dict(client.py)', '734': 'send(threaded.py)', '738': 'thread_send(threaded.py)', '664': 'test_start_sequence_ipc_kernels(test_multikernelmanager.py)', '654': '_get_ipc_km(test_multikernelmanager.py)', '660': 'test_ipc_lifecycle(test_multikernelmanager.py)', '659': 'test_ipc_cinfo(test_multikernelmanager.py)', '423': 'start_kernel(multikernelmanager.py)', '415': 'pre_start_kernel(multikernelmanager.py)', '380': 'DuplicateKernelError(multikernelmanager.py)', '414': 'new_kernel_id(multikernelmanager.py)', '389': 'start_kernel(multikernelmanager.py)', '238': 'start(restarter.py)', '430': 'poll(restarter.py)', '433': 'stop(restarter.py)', '428': '_fire_callbacks(restarter.py)', '510': 'do_execute(signalkernel.py)', '501': 'openssh_tunnel(tunnel.py)', '494': 'SSHException(tunnel.py)', '497': '_stop_tunnel(tunnel.py)', '475': 'feed_identities(session.py)', '202': 'cleanup_random_ports(connect.py)', '200': 'cleanup_connection_file(connect.py)', '106': 'ZMQSocketChannel(channels.py)', '226': 'as_zmqstream(manager.py)', '233': 'wrapped(manager.py)', '557': 'DummyConfigurable(test_connect.py)', '235': 'IOLoopKernelRestarter(restarter.py)', '426': 'KernelRestarter(restarter.py)', '234': 'AsyncIOLoopKernelRestarter(restarter.py)', '291': 'start(kernelspecapp.py)', '251': 'start(kernelapp.py)', '249': 'setup_signals(kernelapp.py)', '252': 'shutdown_handler(kernelapp.py)', '250': 'shutdown(kernelapp.py)', '248': 'log_connection_info(kernelapp.py)', '199': 'blocking_client(connect.py)', '208': 'get_connection_info(connect.py)', '725': 'stop_channels(threaded.py)', '684': 'test_bad_unpack(test_session.py)', '676': '_bad_unpacker(test_session.py)', '536': 'test_complete_request(test_adapter.py)', '517': 'adapt(test_adapter.py)', '562': 'test_find_connection_file_local(test_connect.py)', '189': 'find_connection_file(connect.py)', '493': 'SubHander(forward.py)', '490': 'Handler(forward.py)', '114': 'send(channels.py)', '88': 'send(channels.py)', '241': 'date_default(jsonutil.py)', '597': 'test_subclasses(test_kernelmanager.py)', '703': 'AsyncKernelManagerWithCleanup(utils.py)', '595': 'test_signal_kernel_subprocesses(test_kernelmanager.py)', '598': 'execute(test_kernelmanager.py)', '702': 'AsyncKernelManagerSubclass(utils.py)', '591': 'transport(test_kernelmanager.py)', '606': 'test_templated_kspec_env(test_kernelmanager.py)', '599': '_env_test_body(test_kernelmanager.py)', '607': 'execute(test_kernelmanager.py)', '604': 'test_signal_kernel_subprocesses(test_kernelmanager.py)', '608': 'execute(test_kernelmanager.py)', '586': 'env(test_kernelmanager.py)', '712': 'stop(utils.py)', '711': 'start(utils.py)', '705': 'test_env(utils.py)', '630': 'test_validate_kernel_name(test_kernelspec.py)', '506': 'SignalTestApp(signalkernel.py)', '507': 'SignalTestKernel(signalkernel.py)', '617': '_install_sample_kernel(test_kernelspec.py)', '651': 'test_tcp_cinfo(test_multikernelmanager.py)', '640': '_run_cinfo(test_multikernelmanager.py)', '619': 'tearDown(test_kernelspec.py)', '618': 'setUp(test_kernelspec.py)', '649': 'test_start_sequence_ipc_kernels(test_multikernelmanager.py)', '650': 'test_start_sequence_tcp_kernels(test_multikernelmanager.py)', '644': 'test_ipc_cinfo(test_multikernelmanager.py)', '645': 'test_ipc_lifecycle(test_multikernelmanager.py)', '656': '_run_cinfo(test_multikernelmanager.py)', '569': 'test_secure_write(test_connect.py)', '573': 'check_user_only_permissions(test_connect.py)', '574': 'fetch_win32_permissions(test_connect.py)', '563': 'test_find_connection_file_relative(test_connect.py)', '561': 'test_find_connection_file_abspath(test_connect.py)', '539': 'test_input_request(test_adapter.py)', '537': 'test_display_data(test_adapter.py)', '540': 'test_inspect_reply(test_adapter.py)', '543': 'test_kernel_info_reply(test_adapter.py)', '542': 'test_inspect_request_token(test_adapter.py)', '535': 'test_complete_reply(test_adapter.py)', '541': 'test_inspect_request(test_adapter.py)', '538': 'test_execute_request(test_adapter.py)', '545': 'test_rename_type(test_adapter.py)', '544': 'test_no_adapt(test_adapter.py)', '546': 'test_same_version(test_adapter.py)', '514': 'V5toV4TestCase(test_adapter.py)', '512': 'AdapterTest(test_adapter.py)', '526': 'test_input_request(test_adapter.py)', '523': 'test_display_data(test_adapter.py)', '527': 'test_kernel_info_reply(test_adapter.py)', '530': 'test_object_info_reply_not_found(test_adapter.py)', '529': 'test_object_info_reply(test_adapter.py)', '531': 'test_object_info_request(test_adapter.py)', '521': 'test_complete_reply(test_adapter.py)', '522': 'test_complete_request(test_adapter.py)', '524': 'test_execute_reply(test_adapter.py)', '532': 'test_rename_type(test_adapter.py)', '525': 'test_execute_request(test_adapter.py)', '528': 'test_no_adapt(test_adapter.py)', '533': 'test_same_version(test_adapter.py)', '513': 'V4toV5TestCase(test_adapter.py)', '519': 'setUp(test_adapter.py)', '515': 'test_code_to_line_no_code(test_adapter.py)', '51': 'code_to_line(adapter.py)', '158': 'get_shell_msg(client.py)', '157': 'get_iopub_msg(client.py)', '710': '__exit__(utils.py)', '709': '__enter__(utils.py)', '580': 'test_kernelapp_lifecycle(test_kernelapp.py)', '579': '_launch(test_kernelapp.py)', '473': 'clone(session.py)', '481': 'send_raw(session.py)', '683': 'test_bad_roundtrip(test_session.py)', '685': 'test_bad_unpacker(test_session.py)', '682': 'test_bad_packer(test_session.py)', '681': 'test_bad_pack(test_session.py)', '675': '_bad_packer(test_session.py)', '697': 'test_session_id(test_session.py)', '699': 'test_unique_msg_ids(test_session.py)', '445': 'msg_header(session.py)', '680': 'test_args(test_session.py)', '478': 'msg_id(session.py)', '674': 'TestSession(test_session.py)', '673': 'SessionTestCase(test_session.py)', '678': 'setUp(test_session.py)', '556': 'test_shutdown(test_client.py)', '548': '_check_reply(test_client.py)', '550': 'test_comm_info(test_client.py)', '555': 'test_kernel_info(test_client.py)', '551': 'test_complete(test_client.py)', '554': 'test_inspect(test_client.py)', '553': 'test_history(test_client.py)', '117': 'reqrep(client.py)', '124': 'wrapped(client.py)', '150': '_handle_kernel_info_reply(client.py)', '125': 'HBChannel(channels.py)', '102': 'hb_channel(client.py)', '91': 'reqrep(client.py)', '105': 'wrapped(client.py)', '80': 'ZMQSocketChannel(channels.py)', '154': 'control_channel(client.py)', '723': 'ioloop(threaded.py)', '160': 'hb_channel(client.py)', '171': 'stdin_channel(client.py)', '164': 'iopub_channel(client.py)', '168': 'shell_channel(client.py)', '740': 'send_interrupt(win_interrupt.py)', '334': '__del__(manager.py)', '293': 'start(kernelspecapp.py)', '294': 'path_key(kernelspecapp.py)', '735': 'start(threaded.py)', '720': 'start(threaded.py)', '141': 'start(channelsabc.py)', '432': 'start(restarter.py)', '288': 'start(kernelspecapp.py)', '89': 'start(channels.py)', '115': 'start(channels.py)', '290': 'start(kernelspecapp.py)', '438': 'parse_command_line(runapp.py)', '218': 'build_kernel_argv(consoleapp.py)', '308': '_only_once(localinterfaces.py)', '317': 'wrapped(localinterfaces.py)', '47': 'V4toV5(adapter.py)', '46': 'Adapter(adapter.py)', '77': 'object_info_request(adapter.py)', '52': 'extract_oname_v4(adapter.py)', '70': 'complete_request(adapter.py)', '75': 'kernel_info_reply(adapter.py)', '49': '_version_str_to_list(adapter.py)', '48': 'V5toV4(adapter.py)', '53': '__call__(adapter.py)', '54': 'handle_reply_status_error(adapter.py)', '57': 'update_msg_type(adapter.py)', '56': 'update_metadata(adapter.py)', '55': 'update_header(adapter.py)', '247': 'initialize(kernelapp.py)', '246': '_record_started(kernelapp.py)', '585': 'config(test_kernelmanager.py)', '262': 'install_native_kernel_spec(kernelspec.py)', '276': 'install_native_kernel_spec(kernelspec.py)', '265': 'to_json(kernelspec.py)', '264': 'to_dict(kernelspec.py)', '449': 'test_msg2obj(session.py)', '453': '__init__(session.py)', '470': '_signature_scheme_changed(session.py)', '463': '_key_default(session.py)', '447': 'new_id_bytes(session.py)', '462': '_key_changed(session.py)', '443': 'default_secure(session.py)', '469': '_session_default(session.py)', '446': 'new_id(session.py)', '413': 'list_kernel_ids(multikernelmanager.py)', '721': 'stop(threaded.py)', '724': 'start_channels(threaded.py)', '722': '_check_kernel_info_reply(threaded.py)', '716': '__init__(threaded.py)', '416': 'remove_kernel(multikernelmanager.py)', '713': 'IOLoopThread(threaded.py)', '714': 'ThreadedKernelClient(threaded.py)', '715': 'ThreadedZMQSocketChannel(threaded.py)', '731': 'flush(threaded.py)', '727': '_flush(threaded.py)', '418': 'request_shutdown(multikernelmanager.py)', '402': 'cleanup_resources(multikernelmanager.py)', '408': 'finish_shutdown(multikernelmanager.py)', '393': '__len__(multikernelmanager.py)', '198': '_session_default(connect.py)', '298': 'launch_kernel(launcher.py)', '739': 'create_interrupt_event(win_interrupt.py)', '741': 'SECURITY_ATTRIBUTES(win_interrupt.py)', '509': '__init__(signalkernel.py)', '127': '__init__(channels.py)', '126': 'InvalidPortNumber(channels.py)', '107': '__init__(channels.py)', '81': '__init__(channels.py)', '726': '__init__(threaded.py)', '737': 'setup_stream(threaded.py)', '728': '_handle_recv(threaded.py)', '729': 'call_handlers(threaded.py)', '136': 'stop(channels.py)', '133': 'is_beating(channels.py)', '145': 'time_to_dead(channelsabc.py)', '131': 'call_handlers(channels.py)', '130': '_poll(channels.py)'}}, {'key': 2699, 'parent': 2792, 'tfidf_word': 'signal sign adapt message control serialize utcnow socket connect msg ', 'tfidf_method': 'send send send_interrupt Message interrupt_kernel interrupt_kernel signal_kernel _connect_control_socket utcnow send ', 'lda_word': ' kernel,msg,sigint,initialize,interrupt,', 'lda_method': ' initialize,handle_sigint,interrupt_kernel,send_interrupt,msg,', 'lsi_word': ' msg,kernel,interrupt,handle,sigint,', 'lsi_method': ' msg,handle_sigint,initialize,interrupt_kernel,msg_id,', 'spm_method': '  &#187; initialize(runapp.py) &rarr; handle_sigint(runapp.py) &rarr; interrupt_kernel(manager.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; handle_sigint(runapp.py) &rarr; interrupt_kernel(manager.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br>', 'text_summary': 'Given a message or header, return the header. Interrupts the kernel by sending it a signal. Pass a message to the ZMQ socket to send.', 'files_count': 11, 'files': ['runapp.py', 'manager.py', 'session.py', 'test_adapter.py', 'multikernelmanager.py', 'managerabc.py', 'adapter.py', 'connect.py', 'threaded.py', 'channels.py', 'win_interrupt.py'], 'execution_path_count': 25, 'function_id_to_name_file': {'437': 'initialize(runapp.py)', '435': 'handle_sigint(runapp.py)', '355': 'interrupt_kernel(manager.py)', '476': 'msg(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '480': 'send(session.py)', '520': 'msg(test_adapter.py)', '534': 'msg(test_adapter.py)', '444': 'extract_header(session.py)', '411': 'interrupt_kernel(multikernelmanager.py)', '372': 'interrupt_kernel(managerabc.py)', '50': 'adapt(adapter.py)', '450': 'utcnow(session.py)', '482': 'serialize(session.py)', '483': 'sign(session.py)', '440': 'Message(session.py)', '354': 'has_kernel(manager.py)', '347': '_launch_kernel(manager.py)', '365': 'signal_kernel(manager.py)', '338': '_connect_control_socket(manager.py)', '192': '_create_connected_socket(connect.py)', '196': '_make_url(connect.py)', '734': 'send(threaded.py)', '738': 'thread_send(threaded.py)', '114': 'send(channels.py)', '88': 'send(channels.py)', '740': 'send_interrupt(win_interrupt.py)'}}, {'key': 2785, 'parent': 2792, 'tfidf_word': 'info ssh shell stop forward get start port msg tunnel ', 'tfidf_method': 'forward_tunnel _stop_tunnel close ports get_shell_msg unpause unpause close _try_passwordless_openssh close ', 'lda_word': ' msg,tunnel,header,kernel,passwordless,', 'lda_method': ' paramiko_tunnel,open_tunnel,tunnel_connection,split_server,try_passwordless_paramiko,', 'lsi_word': ' msg,tunnel,header,paramiko,try,', 'lsi_method': ' msg,msg_header,msg_id,try_passwordless_paramiko,start,', 'spm_method': '  &#187; tunnel_connection(tunnel.py) &rarr; open_tunnel(tunnel.py) &rarr; paramiko_tunnel(tunnel.py) &rarr; _try_passwordless_paramiko(tunnel.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; open_tunnel(tunnel.py) &rarr; paramiko_tunnel(tunnel.py) &rarr; _try_passwordless_paramiko(tunnel.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; paramiko_tunnel(tunnel.py) &rarr; _try_passwordless_paramiko(tunnel.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; _try_passwordless_paramiko(tunnel.py) &rarr; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; initialize(runapp.py) &rarr; init_kernel_info(runapp.py) &rarr; kernel_info(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; init_kernel_info(runapp.py) &rarr; kernel_info(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; start(kernelspecapp.py) &rarr; start(kernelspecapp.py) &rarr; input(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; start(kernelspecapp.py) &rarr; input(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; tunnel_to_kernel(connect.py) &rarr; try_passwordless_ssh(tunnel.py) &rarr; _try_passwordless_paramiko(tunnel.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; try_passwordless_ssh(tunnel.py) &rarr; _try_passwordless_paramiko(tunnel.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br>', 'text_summary': 'This should only be used Function for actually starting a paramiko tunnel, to be passed. tunnel connections to a kernel via ssh. Try passwordless login with paramiko. Request kernel info. Connect a socket to an address via an ssh tunnel. Create an ssh tunnel using command-line ssh that connects port lport. Try passwordless login with shell ssh command.', 'files_count': 11, 'files': ['tunnel.py', 'test_adapter.py', 'session.py', 'threaded.py', 'channels.py', 'connect.py', 'forward.py', 'runapp.py', 'client.py', 'channelsabc.py', 'kernelspecapp.py'], 'execution_path_count': 56, 'function_id_to_name_file': {'505': 'tunnel_connection(tunnel.py)', '500': 'open_tunnel(tunnel.py)', '502': 'paramiko_tunnel(tunnel.py)', '499': '_try_passwordless_paramiko(tunnel.py)', '520': 'msg(test_adapter.py)', '476': 'msg(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '534': 'msg(test_adapter.py)', '444': 'extract_header(session.py)', '496': '_split_server(tunnel.py)', '503': 'select_random_ports(tunnel.py)', '730': 'close(threaded.py)', '718': 'close(threaded.py)', '109': 'close(channels.py)', '132': 'close(channels.py)', '83': 'close(channels.py)', '211': 'ports(connect.py)', '495': '_paramiko_tunnel(tunnel.py)', '491': 'forward_tunnel(forward.py)', '501': 'openssh_tunnel(tunnel.py)', '494': 'SSHException(tunnel.py)', '497': '_stop_tunnel(tunnel.py)', '437': 'initialize(runapp.py)', '436': 'init_kernel_info(runapp.py)', '158': 'get_shell_msg(client.py)', '137': 'unpause(channels.py)', '146': 'unpause(channelsabc.py)', '167': 'kernel_info(client.py)', '291': 'start(kernelspecapp.py)', '297': 'start(kernelspecapp.py)', '162': 'input(client.py)', '190': 'tunnel_to_kernel(connect.py)', '504': 'try_passwordless_ssh(tunnel.py)', '498': '_try_passwordless_openssh(tunnel.py)'}}, {'key': 2743, 'parent': 2794, 'tfidf_word': 'execute interrupt hb poll shutdown del cleanup stdin iopub shell ', 'tfidf_method': 'do_execute start_new_kernel poll connect_hb interrupt_kernel __del__ stdin_channel shell_channel iopub_channel control_channel ', 'lda_word': ' kernel,socket,cleanup,connect,resource,', 'lda_method': ' make_url,create_connected_socket,connect_control,ioloopkernelmanager,close_control_socket,', 'lsi_word': ' connect,socket,kernel,url,make,', 'lsi_method': ' create_connected_socket,make_url,shutdown_kernel,close_control_socket,cleanup_resources,', 'spm_method': '  &#187; restart_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; cleanup_resources(manager.py) &rarr; _close_control_socket(manager.py) &rarr; _create_connected_socket(connect.py) &rarr; _make_url(connect.py) . <br> &#187; shutdown_kernel(manager.py) &rarr; cleanup(manager.py) &rarr; cleanup_resources(manager.py) &rarr; _close_control_socket(manager.py) &rarr; _create_connected_socket(connect.py) &rarr; _make_url(connect.py) . <br> &#187; start_new_async_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; cleanup_resources(manager.py) &rarr; _close_control_socket(manager.py) &rarr; _create_connected_socket(connect.py) &rarr; _make_url(connect.py) . <br> &#187; do_execute(signalkernel.py) &rarr; poll(restarter.py) &rarr; restart_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; cleanup_resources(manager.py) &rarr; _close_control_socket(manager.py) &rarr; _create_connected_socket(connect.py) &rarr; _make_url(connect.py) . <br> &#187; poll(restarter.py) &rarr; restart_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; cleanup_resources(manager.py) &rarr; _close_control_socket(manager.py) &rarr; _create_connected_socket(connect.py) &rarr; _make_url(connect.py) . <br> &#187; restart_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; cleanup_resources(manager.py) &rarr; _close_control_socket(manager.py) &rarr; _create_connected_socket(connect.py) &rarr; _make_url(connect.py) . <br> &#187; shutdown_kernel(manager.py) &rarr; cleanup(manager.py) &rarr; cleanup_resources(manager.py) &rarr; _close_control_socket(manager.py) &rarr; _create_connected_socket(connect.py) &rarr; _make_url(connect.py) . <br> &#187; run_kernel(manager.py) &rarr; start_new_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; cleanup_resources(manager.py) &rarr; _close_control_socket(manager.py) &rarr; _create_connected_socket(connect.py) &rarr; _make_url(connect.py) . <br> &#187; start_new_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; cleanup_resources(manager.py) &rarr; _close_control_socket(manager.py) &rarr; _create_connected_socket(connect.py) &rarr; _make_url(connect.py) . <br>', 'text_summary': 'return zmq Socket connected to the StdIn channel. return zmq Socket connected to the Heartbeat channel. return zmq Socket connected to the Shell channel. return zmq Socket connected to the IOPub channel. Send a shutdown request via control channel. return zmq Socket connected to the Control channel. Create a zmq Socket and connect it to the kernel.', 'files_count': 5, 'files': ['manager.py', 'connect.py', 'signalkernel.py', 'restarter.py', 'client.py'], 'execution_path_count': 29, 'function_id_to_name_file': {'330': 'restart_kernel(manager.py)', '331': 'shutdown_kernel(manager.py)', '349': 'cleanup(manager.py)', '350': 'cleanup_resources(manager.py)', '337': '_close_control_socket(manager.py)', '192': '_create_connected_socket(connect.py)', '196': '_make_url(connect.py)', '322': 'start_new_async_kernel(manager.py)', '510': 'do_execute(signalkernel.py)', '236': 'poll(restarter.py)', '363': 'restart_kernel(manager.py)', '364': 'shutdown_kernel(manager.py)', '321': 'run_kernel(manager.py)', '323': 'start_new_kernel(manager.py)', '362': 'request_shutdown(manager.py)', '328': 'interrupt_kernel(manager.py)', '338': '_connect_control_socket(manager.py)', '224': 'AsyncIOLoopKernelManager(manager.py)', '203': 'connect_control(connect.py)', '154': 'control_channel(client.py)', '225': 'IOLoopKernelManager(manager.py)', '207': 'connect_stdin(connect.py)', '171': 'stdin_channel(client.py)', '206': 'connect_shell(connect.py)', '168': 'shell_channel(client.py)', '205': 'connect_iopub(connect.py)', '164': 'iopub_channel(client.py)', '204': 'connect_hb(connect.py)', '334': '__del__(manager.py)'}}, {'key': 2788, 'parent': 2794, 'tfidf_word': 'ready message send poll channels beating alive kernel msg cleanup ', 'tfidf_method': 'is_alive start_restarter start_restarter is_alive is_beating wait_for_ready execute_interactive wait_for_ready poll execute_interactive ', 'lda_word': ' kernel,cleanup,shutdown,restart,file,', 'lda_method': ' is_alive,shutdown_kernel,send,request_shutdown,message,', 'lsi_word': ' kernel,shutdown,async,launch,start,', 'lsi_method': ' shutdown_kernel,msg,restart_kernel,start_new_async_kernel,request_shutdown,', 'spm_method': '  &#187; restart_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; finish_shutdown(manager.py) &rarr; _async_wait(manager.py) &rarr; is_alive(manager.py) &rarr; has_kernel(manager.py) &rarr; _launch_kernel(manager.py) . <br> &#187; shutdown_kernel(manager.py) &rarr; finish_shutdown(manager.py) &rarr; _kill_kernel(manager.py) &rarr; _async_wait(manager.py) &rarr; is_alive(manager.py) &rarr; has_kernel(manager.py) &rarr; _launch_kernel(manager.py) . <br> &#187; finish_shutdown(manager.py) &rarr; _kill_kernel(manager.py) &rarr; _async_wait(manager.py) &rarr; is_alive(manager.py) &rarr; has_kernel(manager.py) &rarr; _launch_kernel(manager.py) . <br> &#187; start_new_async_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; finish_shutdown(manager.py) &rarr; _async_wait(manager.py) &rarr; is_alive(manager.py) &rarr; has_kernel(manager.py) &rarr; _launch_kernel(manager.py) . <br>', 'text_summary': "Restarts a kernel with the arguments that were used to launch it. Has a kernel been started that we are managing. Start the polling of the kernel. Sends a signal to the process group of the kernel (this. Pass a message to the ZMQ socket to send. Wait for kernel shutdown, then kill process if it doesn't shutdown. Interrupts the kernel by sending it a signal. Given a message or header, return the header.", 'files_count': 12, 'files': ['manager.py', 'kernelspecapp.py', 'runapp.py', 'client.py', 'signalkernel.py', 'restarter.py', 'channels.py', 'threaded.py', 'session.py', 'test_adapter.py', 'adapter.py', 'connect.py'], 'execution_path_count': 65, 'function_id_to_name_file': {'228': 'start_restarter(manager.py)', '354': 'has_kernel(manager.py)', '347': '_launch_kernel(manager.py)', '328': 'interrupt_kernel(manager.py)', '231': 'start_restarter(manager.py)', '291': 'start(kernelspecapp.py)', '439': 'start(runapp.py)', '122': 'execute_interactive(client.py)', '357': 'is_alive(manager.py)', '97': 'execute_interactive(client.py)', '510': 'do_execute(signalkernel.py)', '236': 'poll(restarter.py)', '123': 'wait_for_ready(client.py)', '165': 'is_alive(client.py)', '104': 'wait_for_ready(client.py)', '103': 'is_alive(client.py)', '133': 'is_beating(channels.py)', '725': 'stop_channels(threaded.py)', '330': 'restart_kernel(manager.py)', '331': 'shutdown_kernel(manager.py)', '327': 'finish_shutdown(manager.py)', '324': '_async_wait(manager.py)', '329': 'is_alive(manager.py)', '322': 'start_new_async_kernel(manager.py)', '325': '_kill_kernel(manager.py)', '332': 'signal_kernel(manager.py)', '362': 'request_shutdown(manager.py)', '480': 'send(session.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '520': 'msg(test_adapter.py)', '534': 'msg(test_adapter.py)', '50': 'adapt(adapter.py)', '450': 'utcnow(session.py)', '482': 'serialize(session.py)', '483': 'sign(session.py)', '440': 'Message(session.py)', '734': 'send(threaded.py)', '738': 'thread_send(threaded.py)', '88': 'send(channels.py)', '114': 'send(channels.py)', '368': 'stop_restarter(manager.py)', '326': '_launch_kernel(manager.py)', '349': 'cleanup(manager.py)', '350': 'cleanup_resources(manager.py)', '201': 'cleanup_ipc_files(connect.py)', '211': 'ports(connect.py)', '200': 'cleanup_connection_file(connect.py)'}}, {'key': 508, 'parent': 1420, 'tfidf_word': 'EP: 508, Name: AsyncKernelClient &rarr; history &rarr; msg &rarr; msg &rarr; msg &rarr; msg_header &rarr; msg_id', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 623, 'parent': 1420, 'tfidf_word': 'EP: 623, Name: BlockingKernelClient &rarr; history &rarr; msg &rarr; msg &rarr; msg &rarr; msg_header &rarr; msg_id', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 978, 'parent': 1545, 'tfidf_word': 'EP: 978, Name: test_input_request &rarr; msg &rarr; msg &rarr; msg &rarr; msg_header &rarr; msg_id', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1544, 'parent': 1545, 'tfidf_word': 'raw interrupt type identity found feed display data version msg ', 'tfidf_method': 'test_no_adapt test_send_raw test_execute_request test_execute_reply test_display_data test_complete_request test_complete_reply interrupt_kernel test_object_info_reply test_serialize ', 'lda_word': ' msg,header,test,complete,reply,', 'lda_method': ' msg,msg_id,msg_header,is_complete,interrupt_kernel,', 'lsi_word': ' msg,header,test,reply,info,', 'lsi_method': ' msg,msg_header,msg_id,test_display_data,test_kernel_info_reply,', 'spm_method': ' ', 'text_summary': 'Interrupts the kernel by sending it a signal.', 'files_count': 5, 'files': ['test_adapter.py', 'session.py', 'test_session.py', 'manager.py', 'client.py'], 'execution_path_count': 19, 'function_id_to_name_file': {'523': 'test_display_data(test_adapter.py)', '520': 'msg(test_adapter.py)', '534': 'msg(test_adapter.py)', '476': 'msg(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '527': 'test_kernel_info_reply(test_adapter.py)', '530': 'test_object_info_reply_not_found(test_adapter.py)', '529': 'test_object_info_reply(test_adapter.py)', '531': 'test_object_info_request(test_adapter.py)', '521': 'test_complete_reply(test_adapter.py)', '522': 'test_complete_request(test_adapter.py)', '524': 'test_execute_reply(test_adapter.py)', '525': 'test_execute_request(test_adapter.py)', '532': 'test_rename_type(test_adapter.py)', '528': 'test_no_adapt(test_adapter.py)', '533': 'test_same_version(test_adapter.py)', '695': 'test_send_raw(test_session.py)', '692': 'test_feed_identities(test_session.py)', '694': 'test_send(test_session.py)', '696': 'test_serialize(test_session.py)', '693': 'test_msg(test_session.py)', '328': 'interrupt_kernel(manager.py)', '166': 'is_complete(client.py)'}}, {'key': 510, 'parent': 1494, 'tfidf_word': 'EP: 510, Name: AsyncKernelClient &rarr; history &rarr; msg &rarr; msg &rarr; msg_header &rarr; msg_id', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 625, 'parent': 1494, 'tfidf_word': 'EP: 625, Name: BlockingKernelClient &rarr; history &rarr; msg &rarr; msg &rarr; msg_header &rarr; msg_id', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1664, 'parent': 1727, 'tfidf_word': 'input info identity feed execute display data type version msg ', 'tfidf_method': 'test_inspect_request_token test_inspect_reply test_send test_input_request test_execute_request test_display_data test_complete_request test_complete_reply test_inspect_request test_send_raw ', 'lda_word': ' msg,header,test,request,send,', 'lda_method': ' msg,msg_id,msg_header,test_no_adapt,test_send,', 'lsi_word': ' msg,header,test,request,inspect,', 'lsi_method': ' msg,msg_id,msg_header,test_inspect_request,test_no_adapt,', 'spm_method': ' ', 'text_summary': 'Empty', 'files_count': 3, 'files': ['test_adapter.py', 'session.py', 'test_session.py'], 'execution_path_count': 15, 'function_id_to_name_file': {'539': 'test_input_request(test_adapter.py)', '534': 'msg(test_adapter.py)', '476': 'msg(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '537': 'test_display_data(test_adapter.py)', '543': 'test_kernel_info_reply(test_adapter.py)', '540': 'test_inspect_reply(test_adapter.py)', '542': 'test_inspect_request_token(test_adapter.py)', '541': 'test_inspect_request(test_adapter.py)', '535': 'test_complete_reply(test_adapter.py)', '536': 'test_complete_request(test_adapter.py)', '538': 'test_execute_request(test_adapter.py)', '545': 'test_rename_type(test_adapter.py)', '546': 'test_same_version(test_adapter.py)', '544': 'test_no_adapt(test_adapter.py)', '695': 'test_send_raw(test_session.py)', '694': 'test_send(test_session.py)', '692': 'test_feed_identities(test_session.py)'}}, {'key': 1724, 'parent': 1727, 'tfidf_word': 'header id test complete interrupt kernel serialize msg ', 'tfidf_method': 'msg msg_header msg_id msg is_complete interrupt_kernel test_msg test_serialize ', 'lda_word': ' msg,header,test,complete,interrupt,', 'lda_method': ' msg_id,msg,msg_header,is_complete,interrupt_kernel,', 'lsi_word': ' msg,header,test,serialize,interrupt,', 'lsi_method': ' msg,msg_id,msg_header,test_msg,is_complete,', 'spm_method': ' ', 'text_summary': '', 'files_count': 5, 'files': ['test_session.py', 'test_adapter.py', 'session.py', 'manager.py', 'client.py'], 'execution_path_count': 4, 'function_id_to_name_file': {'696': 'test_serialize(test_session.py)', '534': 'msg(test_adapter.py)', '476': 'msg(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '693': 'test_msg(test_session.py)', '328': 'interrupt_kernel(manager.py)', '166': 'is_complete(client.py)'}}, {'key': 523, 'parent': 1423, 'tfidf_word': 'EP: 523, Name: AsyncKernelClient &rarr; complete &rarr; msg &rarr; msg &rarr; msg &rarr; msg_header &rarr; msg_id', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 642, 'parent': 1423, 'tfidf_word': 'EP: 642, Name: BlockingKernelClient &rarr; complete &rarr; msg &rarr; msg &rarr; msg &rarr; msg_header &rarr; msg_id', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1421, 'parent': 2003, 'tfidf_word': 'client header history id kernel async blocking msg ', 'tfidf_method': 'history msg msg_header msg_id msg msg BlockingKernelClient AsyncKernelClient ', 'lda_word': ' msg,client,header,history,kernel,', 'lda_method': ' msg,history,msg_header,msg_id,blockingkernelclient,', 'lsi_word': ' msg,history,kernel,header,client,', 'lsi_method': ' msg,history,msg_header,msg_id,asynckernelclient,', 'spm_method': '  &#187; history(client.py) &rarr; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br>', 'text_summary': '', 'files_count': 3, 'files': ['client.py', 'test_adapter.py', 'session.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'90': 'AsyncKernelClient(client.py)', '161': 'history(client.py)', '534': 'msg(test_adapter.py)', '520': 'msg(test_adapter.py)', '476': 'msg(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '116': 'BlockingKernelClient(client.py)'}}, {'key': 1557, 'parent': 2003, 'tfidf_word': 'type input info identity feed execute display data version msg ', 'tfidf_method': 'test_input_request test_inspect_reply test_send_raw test_execute_request test_display_data test_complete_request test_complete_reply interrupt_kernel test_inspect_request test_serialize ', 'lda_word': ' msg,header,test,complete,request,', 'lda_method': ' test_complete_request,msg,msg_id,msg_header,test_send,', 'lsi_word': ' msg,header,test,request,inspect,', 'lsi_method': ' msg,msg_id,msg_header,test_feed_identities,interrupt_kernel,', 'spm_method': ' ', 'text_summary': 'Interrupts the kernel by sending it a signal.', 'files_count': 5, 'files': ['test_adapter.py', 'session.py', 'test_session.py', 'manager.py', 'client.py'], 'execution_path_count': 19, 'function_id_to_name_file': {'539': 'test_input_request(test_adapter.py)', '534': 'msg(test_adapter.py)', '520': 'msg(test_adapter.py)', '476': 'msg(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '537': 'test_display_data(test_adapter.py)', '543': 'test_kernel_info_reply(test_adapter.py)', '540': 'test_inspect_reply(test_adapter.py)', '542': 'test_inspect_request_token(test_adapter.py)', '541': 'test_inspect_request(test_adapter.py)', '535': 'test_complete_reply(test_adapter.py)', '536': 'test_complete_request(test_adapter.py)', '538': 'test_execute_request(test_adapter.py)', '545': 'test_rename_type(test_adapter.py)', '544': 'test_no_adapt(test_adapter.py)', '546': 'test_same_version(test_adapter.py)', '695': 'test_send_raw(test_session.py)', '692': 'test_feed_identities(test_session.py)', '694': 'test_send(test_session.py)', '696': 'test_serialize(test_session.py)', '693': 'test_msg(test_session.py)', '328': 'interrupt_kernel(manager.py)', '166': 'is_complete(client.py)'}}, {'key': 517, 'parent': 1496, 'tfidf_word': 'EP: 517, Name: AsyncKernelClient &rarr; complete &rarr; msg &rarr; msg &rarr; msg_header &rarr; msg_id', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 636, 'parent': 1496, 'tfidf_word': 'EP: 636, Name: BlockingKernelClient &rarr; complete &rarr; msg &rarr; msg &rarr; msg_header &rarr; msg_id', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1492, 'parent': 2237, 'tfidf_word': 'client header history id kernel async blocking msg ', 'tfidf_method': 'history msg msg_header msg_id msg BlockingKernelClient AsyncKernelClient ', 'lda_word': ' msg,header,kernel,client,history,', 'lda_method': ' msg,msg_header,history,blockingkernelclient,msg_id,', 'lsi_word': ' msg,history,client,kernel,header,', 'lsi_method': ' msg,history,msg_header,msg_id,blockingkernelclient,', 'spm_method': ' ', 'text_summary': '', 'files_count': 3, 'files': ['client.py', 'test_adapter.py', 'session.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'90': 'AsyncKernelClient(client.py)', '161': 'history(client.py)', '520': 'msg(test_adapter.py)', '476': 'msg(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '116': 'BlockingKernelClient(client.py)'}}, {'key': 1726, 'parent': 2237, 'tfidf_word': 'interrupt type input identity found feed display data version msg ', 'tfidf_method': 'test_kernel_info_reply test_send_raw test_execute_request test_execute_reply test_display_data test_complete_request test_complete_reply interrupt_kernel test_no_adapt test_serialize ', 'lda_word': ' msg,test,header,reply,info,', 'lda_method': ' msg,msg_header,msg_id,test_kernel_info_reply,test_object_info_reply,', 'lsi_word': ' msg,header,test,reply,info,', 'lsi_method': ' msg,msg_header,msg_id,test_input_request,test_rename_type,', 'spm_method': ' ', 'text_summary': 'message format.', 'files_count': 5, 'files': ['test_adapter.py', 'session.py', 'test_session.py', 'manager.py', 'client.py'], 'execution_path_count': 20, 'function_id_to_name_file': {'526': 'test_input_request(test_adapter.py)', '520': 'msg(test_adapter.py)', '476': 'msg(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '523': 'test_display_data(test_adapter.py)', '527': 'test_kernel_info_reply(test_adapter.py)', '530': 'test_object_info_reply_not_found(test_adapter.py)', '529': 'test_object_info_reply(test_adapter.py)', '531': 'test_object_info_request(test_adapter.py)', '521': 'test_complete_reply(test_adapter.py)', '522': 'test_complete_request(test_adapter.py)', '524': 'test_execute_reply(test_adapter.py)', '525': 'test_execute_request(test_adapter.py)', '532': 'test_rename_type(test_adapter.py)', '533': 'test_same_version(test_adapter.py)', '528': 'test_no_adapt(test_adapter.py)', '695': 'test_send_raw(test_session.py)', '694': 'test_send(test_session.py)', '692': 'test_feed_identities(test_session.py)', '696': 'test_serialize(test_session.py)', '693': 'test_msg(test_session.py)', '328': 'interrupt_kernel(manager.py)', '166': 'is_complete(client.py)'}}, {'key': 538, 'parent': 1709, 'tfidf_word': 'EP: 538, Name: AsyncKernelClient &rarr; comm_info &rarr; msg &rarr; msg_header &rarr; msg_id', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 654, 'parent': 1709, 'tfidf_word': 'EP: 654, Name: BlockingKernelClient &rarr; comm_info &rarr; msg &rarr; msg_header &rarr; msg_id', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1706, 'parent': 2303, 'tfidf_word': 'client header id kernel shutdown async blocking msg ', 'tfidf_method': 'shutdown msg msg_header msg_id BlockingKernelClient AsyncKernelClient ', 'lda_word': ' msg,client,kernel,shutdown,header,', 'lda_method': ' shutdown,msg_header,msg_id,msg,asynckernelclient,', 'lsi_word': ' msg,client,shutdown,kernel,header,', 'lsi_method': ' msg,msg_id,shutdown,msg_header,blockingkernelclient,', 'spm_method': ' ', 'text_summary': '', 'files_count': 2, 'files': ['client.py', 'session.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'90': 'AsyncKernelClient(client.py)', '169': 'shutdown(client.py)', '476': 'msg(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '116': 'BlockingKernelClient(client.py)'}}, {'key': 2300, 'parent': 2303, 'tfidf_word': 'blocking history feed identity interrupt default raw serialize version msg ', 'tfidf_method': 'history AsyncKernelClient is_complete interrupt_kernel test_default_version test_feed_identities test_msg test_send test_send_raw test_serialize ', 'lda_word': ' msg,client,kernel,header,blocking,', 'lda_method': ' msg,msg_header,msg_id,test_msg,test_send,', 'lsi_word': ' msg,header,test,kernel,client,', 'lsi_method': ' msg_id,msg_header,msg,asynckernelclient,complete,', 'spm_method': ' ', 'text_summary': "Tab complete text in the kernel's namespace.", 'files_count': 5, 'files': ['client.py', 'session.py', 'test_adapter.py', 'test_session.py', 'manager.py'], 'execution_path_count': 12, 'function_id_to_name_file': {'90': 'AsyncKernelClient(client.py)', '153': 'complete(client.py)', '476': 'msg(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '116': 'BlockingKernelClient(client.py)', '161': 'history(client.py)', '516': 'test_default_version(test_adapter.py)', '695': 'test_send_raw(test_session.py)', '692': 'test_feed_identities(test_session.py)', '694': 'test_send(test_session.py)', '693': 'test_msg(test_session.py)', '696': 'test_serialize(test_session.py)', '328': 'interrupt_kernel(manager.py)', '166': 'is_complete(client.py)'}}, {'key': 518, 'parent': 1497, 'tfidf_word': 'EP: 518, Name: AsyncKernelClient &rarr; complete &rarr; msg &rarr; msg &rarr; msg &rarr; extract_header', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 637, 'parent': 1497, 'tfidf_word': 'EP: 637, Name: BlockingKernelClient &rarr; complete &rarr; msg &rarr; msg &rarr; msg &rarr; extract_header', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1493, 'parent': 2236, 'tfidf_word': 'client extract header history kernel async blocking msg ', 'tfidf_method': 'history extract_header msg msg msg BlockingKernelClient AsyncKernelClient ', 'lda_word': ' msg,header,kernel,history,client,', 'lda_method': ' msg,history,extract_header,asynckernelclient,blockingkernelclient,', 'lsi_word': ' msg,history,extract,client,header,', 'lsi_method': ' msg,extract_header,history,blockingkernelclient,asynckernelclient,', 'spm_method': ' ', 'text_summary': '', 'files_count': 3, 'files': ['client.py', 'test_adapter.py', 'session.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'90': 'AsyncKernelClient(client.py)', '161': 'history(client.py)', '520': 'msg(test_adapter.py)', '534': 'msg(test_adapter.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '116': 'BlockingKernelClient(client.py)'}}, {'key': 1673, 'parent': 2236, 'tfidf_word': 'interrupt type input identity found feed display data version msg ', 'tfidf_method': 'test_send_raw test_input_request test_execute_request test_execute_reply test_display_data test_complete_request test_complete_reply interrupt_kernel test_no_adapt test_serialize ', 'lda_word': ' msg,extract,header,test,reply,', 'lda_method': ' msg,extract_header,test_kernel_info_reply,test_send,test_execute_reply,', 'lsi_word': ' msg,header,extract,test,reply,', 'lsi_method': ' msg,extract_header,is_complete,test_rename_type,test_display_data,', 'spm_method': ' ', 'text_summary': 'Given a message or header, return the header. message format. Interrupts the kernel by sending it a signal. Ask the kernel whether some code is complete and ready to execute.', 'files_count': 5, 'files': ['test_adapter.py', 'session.py', 'test_session.py', 'manager.py', 'client.py'], 'execution_path_count': 20, 'function_id_to_name_file': {'526': 'test_input_request(test_adapter.py)', '520': 'msg(test_adapter.py)', '534': 'msg(test_adapter.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '523': 'test_display_data(test_adapter.py)', '527': 'test_kernel_info_reply(test_adapter.py)', '530': 'test_object_info_reply_not_found(test_adapter.py)', '529': 'test_object_info_reply(test_adapter.py)', '531': 'test_object_info_request(test_adapter.py)', '521': 'test_complete_reply(test_adapter.py)', '522': 'test_complete_request(test_adapter.py)', '524': 'test_execute_reply(test_adapter.py)', '525': 'test_execute_request(test_adapter.py)', '532': 'test_rename_type(test_adapter.py)', '533': 'test_same_version(test_adapter.py)', '528': 'test_no_adapt(test_adapter.py)', '695': 'test_send_raw(test_session.py)', '694': 'test_send(test_session.py)', '692': 'test_feed_identities(test_session.py)', '696': 'test_serialize(test_session.py)', '693': 'test_msg(test_session.py)', '328': 'interrupt_kernel(manager.py)', '166': 'is_complete(client.py)'}}, {'key': 520, 'parent': 1705, 'tfidf_word': 'EP: 520, Name: AsyncKernelClient &rarr; complete &rarr; msg &rarr; msg &rarr; extract_header', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 639, 'parent': 1705, 'tfidf_word': 'EP: 639, Name: BlockingKernelClient &rarr; complete &rarr; msg &rarr; msg &rarr; extract_header', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1702, 'parent': 2305, 'tfidf_word': 'client extract header history kernel async blocking msg ', 'tfidf_method': 'history extract_header msg msg BlockingKernelClient AsyncKernelClient ', 'lda_word': ' msg,extract,kernel,client,history,', 'lda_method': ' msg,extract_header,history,blockingkernelclient,asynckernelclient,', 'lsi_word': ' msg,client,history,extract,header,', 'lsi_method': ' msg,extract_header,history,blockingkernelclient,asynckernelclient,', 'spm_method': ' ', 'text_summary': '', 'files_count': 3, 'files': ['client.py', 'test_adapter.py', 'session.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'90': 'AsyncKernelClient(client.py)', '161': 'history(client.py)', '534': 'msg(test_adapter.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '116': 'BlockingKernelClient(client.py)'}}, {'key': 1968, 'parent': 2305, 'tfidf_word': 'interrupt input info identity feed execute display data type version ', 'tfidf_method': 'test_inspect_reply test_send_raw test_input_request test_execute_request test_display_data test_complete_request test_complete_reply interrupt_kernel test_inspect_request test_serialize ', 'lda_word': ' msg,test,extract,header,reply,', 'lda_method': ' msg,extract_header,interrupt_kernel,test_complete_request,is_complete,', 'lsi_word': ' msg,extract,header,test,request,', 'lsi_method': ' msg,extract_header,test_complete_request,test_inspect_request_token,test_inspect_request,', 'spm_method': ' ', 'text_summary': 'Given a message or header, return the header. message format. Interrupts the kernel by sending it a signal. Ask the kernel whether some code is complete and ready to execute.', 'files_count': 5, 'files': ['test_adapter.py', 'session.py', 'test_session.py', 'manager.py', 'client.py'], 'execution_path_count': 19, 'function_id_to_name_file': {'536': 'test_complete_request(test_adapter.py)', '534': 'msg(test_adapter.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '538': 'test_execute_request(test_adapter.py)', '545': 'test_rename_type(test_adapter.py)', '544': 'test_no_adapt(test_adapter.py)', '546': 'test_same_version(test_adapter.py)', '695': 'test_send_raw(test_session.py)', '692': 'test_feed_identities(test_session.py)', '694': 'test_send(test_session.py)', '693': 'test_msg(test_session.py)', '696': 'test_serialize(test_session.py)', '328': 'interrupt_kernel(manager.py)', '166': 'is_complete(client.py)', '539': 'test_input_request(test_adapter.py)', '537': 'test_display_data(test_adapter.py)', '543': 'test_kernel_info_reply(test_adapter.py)', '542': 'test_inspect_request_token(test_adapter.py)', '540': 'test_inspect_reply(test_adapter.py)', '535': 'test_complete_reply(test_adapter.py)', '541': 'test_inspect_request(test_adapter.py)'}}, {'key': 527, 'parent': 1905, 'tfidf_word': 'EP: 527, Name: AsyncKernelClient &rarr; shutdown &rarr; msg &rarr; extract_header', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 643, 'parent': 1905, 'tfidf_word': 'EP: 643, Name: BlockingKernelClient &rarr; shutdown &rarr; msg &rarr; extract_header', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1903, 'parent': 2394, 'tfidf_word': 'client complete extract header kernel msg async blocking ', 'tfidf_method': 'complete extract_header msg BlockingKernelClient AsyncKernelClient ', 'lda_word': ' header,extract,complete,kernel,msg,', 'lda_method': ' extract_header,msg,complete,blockingkernelclient,asynckernelclient,', 'lsi_word': ' complete,client,msg,kernel,extract,', 'lsi_method': ' complete,extract_header,msg,blockingkernelclient,asynckernelclient,', 'spm_method': ' ', 'text_summary': '', 'files_count': 2, 'files': ['client.py', 'session.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'90': 'AsyncKernelClient(client.py)', '153': 'complete(client.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '116': 'BlockingKernelClient(client.py)'}}, {'key': 2390, 'parent': 2394, 'tfidf_word': 'serialize raw async identity feed default complete blocking interrupt version ', 'tfidf_method': 'BlockingKernelClient is_complete interrupt_kernel test_default_version test_feed_identities test_msg test_send test_send_raw test_serialize AsyncKernelClient ', 'lda_word': ' header,extract,msg,kernel,interrupt,', 'lda_method': ' msg,extract_header,test_msg,test_send_raw,is_complete,', 'lsi_word': ' msg,extract,header,test,kernel,', 'lsi_method': ' extract_header,msg,history,blockingkernelclient,asynckernelclient,', 'spm_method': ' ', 'text_summary': '', 'files_count': 5, 'files': ['client.py', 'session.py', 'test_adapter.py', 'test_session.py', 'manager.py'], 'execution_path_count': 10, 'function_id_to_name_file': {'90': 'AsyncKernelClient(client.py)', '161': 'history(client.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '116': 'BlockingKernelClient(client.py)', '516': 'test_default_version(test_adapter.py)', '695': 'test_send_raw(test_session.py)', '694': 'test_send(test_session.py)', '692': 'test_feed_identities(test_session.py)', '696': 'test_serialize(test_session.py)', '693': 'test_msg(test_session.py)', '328': 'interrupt_kernel(manager.py)', '166': 'is_complete(client.py)'}}, {'key': 535, 'parent': 1503, 'tfidf_word': 'EP: 535, Name: AsyncKernelClient &rarr; shutdown &rarr; msg &rarr; msg &rarr; msg &rarr; extract_header', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 651, 'parent': 1503, 'tfidf_word': 'EP: 651, Name: BlockingKernelClient &rarr; shutdown &rarr; msg &rarr; msg &rarr; msg &rarr; extract_header', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1499, 'parent': 2240, 'tfidf_word': 'client complete extract header kernel async blocking msg ', 'tfidf_method': 'complete extract_header msg msg msg BlockingKernelClient AsyncKernelClient ', 'lda_word': ' msg,kernel,client,header,complete,', 'lda_method': ' msg,complete,extract_header,asynckernelclient,blockingkernelclient,', 'lsi_word': ' msg,header,complete,extract,kernel,', 'lsi_method': ' msg,complete,extract_header,asynckernelclient,blockingkernelclient,', 'spm_method': ' ', 'text_summary': '', 'files_count': 3, 'files': ['client.py', 'test_adapter.py', 'session.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'90': 'AsyncKernelClient(client.py)', '153': 'complete(client.py)', '534': 'msg(test_adapter.py)', '520': 'msg(test_adapter.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '116': 'BlockingKernelClient(client.py)'}}, {'key': 2234, 'parent': 2240, 'tfidf_word': 'info identity feed execute display data blocking async interrupt version ', 'tfidf_method': 'test_inspect_reply test_serialize test_execute_request test_display_data test_complete_request test_complete_reply interrupt_kernel is_complete test_inspect_request AsyncKernelClient ', 'lda_word': ' msg,test,header,extract,request,', 'lda_method': ' msg,extract_header,test_rename_type,test_serialize,history,', 'lsi_word': ' msg,extract,header,test,request,', 'lsi_method': ' msg,extract_header,history,blockingkernelclient,asynckernelclient,', 'spm_method': ' ', 'text_summary': '', 'files_count': 5, 'files': ['client.py', 'test_adapter.py', 'session.py', 'test_session.py', 'manager.py'], 'execution_path_count': 21, 'function_id_to_name_file': {'90': 'AsyncKernelClient(client.py)', '161': 'history(client.py)', '534': 'msg(test_adapter.py)', '520': 'msg(test_adapter.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '116': 'BlockingKernelClient(client.py)', '539': 'test_input_request(test_adapter.py)', '537': 'test_display_data(test_adapter.py)', '543': 'test_kernel_info_reply(test_adapter.py)', '540': 'test_inspect_reply(test_adapter.py)', '542': 'test_inspect_request_token(test_adapter.py)', '541': 'test_inspect_request(test_adapter.py)', '535': 'test_complete_reply(test_adapter.py)', '536': 'test_complete_request(test_adapter.py)', '538': 'test_execute_request(test_adapter.py)', '545': 'test_rename_type(test_adapter.py)', '546': 'test_same_version(test_adapter.py)', '544': 'test_no_adapt(test_adapter.py)', '695': 'test_send_raw(test_session.py)', '694': 'test_send(test_session.py)', '692': 'test_feed_identities(test_session.py)', '696': 'test_serialize(test_session.py)', '693': 'test_msg(test_session.py)', '328': 'interrupt_kernel(manager.py)', '166': 'is_complete(client.py)'}}, {'key': 529, 'parent': 1707, 'tfidf_word': 'EP: 529, Name: AsyncKernelClient &rarr; shutdown &rarr; msg &rarr; msg &rarr; extract_header', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 645, 'parent': 1707, 'tfidf_word': 'EP: 645, Name: BlockingKernelClient &rarr; shutdown &rarr; msg &rarr; msg &rarr; extract_header', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1704, 'parent': 2310, 'tfidf_word': 'client complete extract header kernel async blocking msg ', 'tfidf_method': 'complete extract_header msg msg BlockingKernelClient AsyncKernelClient ', 'lda_word': ' msg,client,kernel,complete,header,', 'lda_method': ' msg,extract_header,complete,blockingkernelclient,asynckernelclient,', 'lsi_word': ' msg,extract,kernel,header,complete,', 'lsi_method': ' msg,complete,extract_header,asynckernelclient,blockingkernelclient,', 'spm_method': ' ', 'text_summary': '', 'files_count': 3, 'files': ['client.py', 'test_adapter.py', 'session.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'90': 'AsyncKernelClient(client.py)', '153': 'complete(client.py)', '520': 'msg(test_adapter.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '116': 'BlockingKernelClient(client.py)'}}, {'key': 2307, 'parent': 2310, 'tfidf_word': 'type identity found feed display data blocking async interrupt version ', 'tfidf_method': 'test_serialize test_execute_request test_execute_reply test_display_data test_complete_request test_complete_reply interrupt_kernel is_complete test_no_adapt AsyncKernelClient ', 'lda_word': ' msg,header,extract,test,complete,', 'lda_method': ' msg,extract_header,test_same_version,interrupt_kernel,test_msg,', 'lsi_word': ' msg,extract,header,test,reply,', 'lsi_method': ' msg,extract_header,history,blockingkernelclient,asynckernelclient,', 'spm_method': ' ', 'text_summary': '', 'files_count': 5, 'files': ['client.py', 'test_adapter.py', 'session.py', 'test_session.py', 'manager.py'], 'execution_path_count': 22, 'function_id_to_name_file': {'90': 'AsyncKernelClient(client.py)', '161': 'history(client.py)', '520': 'msg(test_adapter.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '116': 'BlockingKernelClient(client.py)', '524': 'test_execute_reply(test_adapter.py)', '525': 'test_execute_request(test_adapter.py)', '532': 'test_rename_type(test_adapter.py)', '528': 'test_no_adapt(test_adapter.py)', '533': 'test_same_version(test_adapter.py)', '695': 'test_send_raw(test_session.py)', '692': 'test_feed_identities(test_session.py)', '694': 'test_send(test_session.py)', '693': 'test_msg(test_session.py)', '696': 'test_serialize(test_session.py)', '328': 'interrupt_kernel(manager.py)', '166': 'is_complete(client.py)', '526': 'test_input_request(test_adapter.py)', '523': 'test_display_data(test_adapter.py)', '527': 'test_kernel_info_reply(test_adapter.py)', '530': 'test_object_info_reply_not_found(test_adapter.py)', '531': 'test_object_info_request(test_adapter.py)', '529': 'test_object_info_reply(test_adapter.py)', '522': 'test_complete_request(test_adapter.py)', '521': 'test_complete_reply(test_adapter.py)'}}, {'key': 1305, 'parent': 1578, 'tfidf_word': 'EP: 1305, Name: do_execute &rarr; poll &rarr; restart_kernel &rarr; shutdown_kernel &rarr; request_shutdown &rarr; send', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1306, 'parent': 1578, 'tfidf_word': 'EP: 1306, Name: do_execute &rarr; poll &rarr; restart_kernel &rarr; shutdown_kernel &rarr; request_shutdown &rarr; send', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 236, 'parent': 2040, 'tfidf_word': 'EP: 236, Name: start &rarr; start &rarr; execute_interactive &rarr; _output_hook_kernel &rarr; _output_hook_default', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2038, 'parent': 2040, 'tfidf_word': 'execute interactive alive start default hook output reqrep wrap ', 'tfidf_method': 'start is_alive reqrep _output_hook_default wrapped is_alive is_alive is_alive is_alive is_alive ', 'lda_word': ' start,interactive,execute,alive,default,', 'lda_method': ' start,execute_interactive,is_alive,reqrep,wrap,', 'lsi_word': ' start,execute,interactive,alive,hook,', 'lsi_method': ' start,execute_interactive,is_alive,reqrep,wrap,', 'spm_method': ' ', 'text_summary': '', 'files_count': 8, 'files': ['kernelspecapp.py', 'runapp.py', 'client.py', 'channels.py', 'managerabc.py', 'multikernelmanager.py', 'channelsabc.py', 'threaded.py'], 'execution_path_count': 8, 'function_id_to_name_file': {'291': 'start(kernelspecapp.py)', '439': 'start(runapp.py)', '122': 'execute_interactive(client.py)', '117': 'reqrep(client.py)', '124': 'wrapped(client.py)', '112': 'is_alive(channels.py)', '373': 'is_alive(managerabc.py)', '412': 'is_alive(multikernelmanager.py)', '140': 'is_alive(channelsabc.py)', '86': 'is_alive(channels.py)', '118': '_output_hook_default(client.py)', '732': 'is_alive(threaded.py)'}}, {'key': 250, 'parent': 2041, 'tfidf_word': 'EP: 250, Name: start &rarr; start &rarr; execute_interactive &rarr; _output_hook_kernel &rarr; _output_hook_default', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2039, 'parent': 2041, 'tfidf_word': 'execute interactive alive start default get hook msg output recv ', 'tfidf_method': 'execute_interactive is_alive is_alive is_alive is_alive is_alive _recv get_msg is_alive _output_hook_default ', 'lda_word': ' start,execute,interactive,alive,recv,', 'lda_method': ' start,is_alive,execute_interactive,output_hook_default,get_msg,', 'lsi_word': ' start,interactive,execute,alive,default,', 'lsi_method': ' start,execute_interactive,is_alive,get_msg,recv,', 'spm_method': ' ', 'text_summary': 'Gets a message if there is one that is ready. Start the polling of the kernel. Default hook for redisplaying plain-text output. Execute code in the kernel interactively.', 'files_count': 8, 'files': ['kernelspecapp.py', 'runapp.py', 'client.py', 'channels.py', 'managerabc.py', 'multikernelmanager.py', 'threaded.py', 'channelsabc.py'], 'execution_path_count': 8, 'function_id_to_name_file': {'291': 'start(kernelspecapp.py)', '439': 'start(runapp.py)', '97': 'execute_interactive(client.py)', '84': 'get_msg(channels.py)', '82': '_recv(channels.py)', '112': 'is_alive(channels.py)', '373': 'is_alive(managerabc.py)', '412': 'is_alive(multikernelmanager.py)', '86': 'is_alive(channels.py)', '93': '_output_hook_default(client.py)', '732': 'is_alive(threaded.py)', '140': 'is_alive(channelsabc.py)'}}, {'key': 830, 'parent': 1935, 'tfidf_word': 'EP: 830, Name: test_bad_packer &rarr; __init__ &rarr; _check_packers &rarr; utcnow', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 831, 'parent': 1935, 'tfidf_word': 'EP: 831, Name: test_bad_packer &rarr; __init__ &rarr; _check_packers &rarr; squash_dates', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1934, 'parent': 2327, 'tfidf_word': 'bad check init packer test unpack date squash utcnow ', 'tfidf_method': '__init__ _check_packers test_bad_unpack squash_dates utcnow ', 'lda_word': ' packer,bad,check,test,unpack,', 'lda_method': ' test_bad_unpack,init,utcnow,check_packers,squash_dates,', 'lsi_word': ' check,unpack,test,packer,init,', 'lsi_method': ' check_packers,init,test_bad_unpack,utcnow,squash_dates,', 'spm_method': ' ', 'text_summary': '', 'files_count': 3, 'files': ['test_session.py', 'session.py', 'jsonutil.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'684': 'test_bad_unpack(test_session.py)', '457': '__init__(session.py)', '459': '_check_packers(session.py)', '450': 'utcnow(session.py)', '244': 'squash_dates(jsonutil.py)'}}, {'key': 2326, 'parent': 2327, 'tfidf_word': 'history up set args pack id cull bad session zero ', 'tfidf_method': '__init__ _check_packers squash_dates utcnow setUp test_args test_bad_pack test_cull_digest_history test_session_id test_zero_digest_history ', 'lda_word': ' test,init,packer,check,squash,', 'lda_method': ' squash_dates,check_packers,init,setup,utcnow,', 'lsi_word': ' init,packer,check,test,squash,', 'lsi_method': ' check_packers,init,utcnow,squash_dates,test_session_id,', 'spm_method': ' ', 'text_summary': 'Return timezone-aware UTC timestamp. check packers for datetime support.', 'files_count': 3, 'files': ['test_session.py', 'session.py', 'jsonutil.py'], 'execution_path_count': 12, 'function_id_to_name_file': {'681': 'test_bad_pack(test_session.py)', '457': '__init__(session.py)', '459': '_check_packers(session.py)', '450': 'utcnow(session.py)', '244': 'squash_dates(jsonutil.py)', '687': 'test_cull_digest_history(test_session.py)', '700': 'test_zero_digest_history(test_session.py)', '697': 'test_session_id(test_session.py)', '678': 'setUp(test_session.py)', '680': 'test_args(test_session.py)'}}, {'key': 22, 'parent': 1846, 'tfidf_word': 'EP: 22, Name: __init__ &rarr; __init__ &rarr; _check_packers &rarr; utcnow', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 23, 'parent': 1846, 'tfidf_word': 'EP: 23, Name: __init__ &rarr; __init__ &rarr; _check_packers &rarr; squash_dates', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 61, 'parent': 1859, 'tfidf_word': 'EP: 61, Name: _session_default &rarr; __init__ &rarr; _check_packers &rarr; utcnow', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 62, 'parent': 1859, 'tfidf_word': 'EP: 62, Name: _session_default &rarr; __init__ &rarr; _check_packers &rarr; squash_dates', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 904, 'parent': 1940, 'tfidf_word': 'EP: 904, Name: test_default_version &rarr; __init__ &rarr; _check_packers &rarr; utcnow', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 905, 'parent': 1940, 'tfidf_word': 'EP: 905, Name: test_default_version &rarr; __init__ &rarr; _check_packers &rarr; squash_dates', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 911, 'parent': 1941, 'tfidf_word': 'EP: 911, Name: setUp &rarr; __init__ &rarr; _check_packers &rarr; utcnow', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 912, 'parent': 1941, 'tfidf_word': 'EP: 912, Name: setUp &rarr; __init__ &rarr; _check_packers &rarr; squash_dates', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1192, 'parent': 1571, 'tfidf_word': 'EP: 1192, Name: test_ipc_lifecycle &rarr; _get_ipc_km &rarr; AsyncMultiKernelManager &rarr; MultiKernelManager &rarr; kernel_method &rarr; wrapped', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1194, 'parent': 1571, 'tfidf_word': 'EP: 1194, Name: test_ipc_cinfo &rarr; _get_ipc_km &rarr; AsyncMultiKernelManager &rarr; MultiKernelManager &rarr; kernel_method &rarr; wrapped', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1197, 'parent': 1573, 'tfidf_word': 'EP: 1197, Name: test_start_sequence_tcp_kernels &rarr; _get_tcp_km &rarr; AsyncMultiKernelManager &rarr; MultiKernelManager &rarr; kernel_method &rarr; wrapped', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1569, 'parent': 1573, 'tfidf_word': 'km method test wrap cinfo shutdown manager multi tcp kernel ', 'tfidf_method': 'AsyncMultiKernelManager MultiKernelManager kernel_method wrapped _get_tcp_km test_shutdown_all test_tcp_cinfo ', 'lda_word': ' kernel,manager,multi,km,shutdown,', 'lda_method': ' multikernelmanager,kernel_method,get_tcp_km,wrap,asyncmultikernelmanager,', 'lsi_word': ' kernel,multi,manager,tcp,get,', 'lsi_method': ' asyncmultikernelmanager,multikernelmanager,wrap,kernel_method,get_tcp_km,', 'spm_method': ' ', 'text_summary': 'Empty', 'files_count': 2, 'files': ['test_multikernelmanager.py', 'multikernelmanager.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'646': 'test_shutdown_all(test_multikernelmanager.py)', '639': '_get_tcp_km(test_multikernelmanager.py)', '379': 'AsyncMultiKernelManager(multikernelmanager.py)', '381': 'MultiKernelManager(multikernelmanager.py)', '382': 'kernel_method(multikernelmanager.py)', '425': 'wrapped(multikernelmanager.py)', '651': 'test_tcp_cinfo(test_multikernelmanager.py)'}}, {'key': 1408, 'parent': 1793, 'tfidf_word': 'loop km get thread process lifecycle manager multi tcp kernel ', 'tfidf_method': 'AsyncMultiKernelManager MultiKernelManager kernel_method wrapped _get_tcp_km raw_tcp_lifecycle tcp_lifecycle_with_loop test_start_parallel_process_kernels test_start_parallel_thread_kernels ', 'lda_word': ' kernel,manager,tcp,lifecycle,multi,', 'lda_method': ' multikernelmanager,raw_tcp_lifecycle,asyncmultikernelmanager,wrap,tcp_lifecycle_with_loop,', 'lsi_word': ' kernel,tcp,manager,multi,lifecycle,', 'lsi_method': ' kernel_method,multikernelmanager,get_tcp_km,wrap,raw_tcp_lifecycle,', 'spm_method': '  &#187; tcp_lifecycle_with_loop(test_multikernelmanager.py) &rarr; raw_tcp_lifecycle(test_multikernelmanager.py) &rarr; _get_tcp_km(test_multikernelmanager.py) &rarr; AsyncMultiKernelManager(multikernelmanager.py) &rarr; MultiKernelManager(multikernelmanager.py) &rarr; kernel_method(multikernelmanager.py) &rarr; wrapped(multikernelmanager.py) . <br> &#187; raw_tcp_lifecycle(test_multikernelmanager.py) &rarr; _get_tcp_km(test_multikernelmanager.py) &rarr; AsyncMultiKernelManager(multikernelmanager.py) &rarr; MultiKernelManager(multikernelmanager.py) &rarr; kernel_method(multikernelmanager.py) &rarr; wrapped(multikernelmanager.py) . <br>', 'text_summary': 'Empty', 'files_count': 2, 'files': ['test_multikernelmanager.py', 'multikernelmanager.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'648': 'test_start_parallel_thread_kernels(test_multikernelmanager.py)', '643': 'tcp_lifecycle_with_loop(test_multikernelmanager.py)', '642': 'raw_tcp_lifecycle(test_multikernelmanager.py)', '639': '_get_tcp_km(test_multikernelmanager.py)', '379': 'AsyncMultiKernelManager(multikernelmanager.py)', '381': 'MultiKernelManager(multikernelmanager.py)', '382': 'kernel_method(multikernelmanager.py)', '425': 'wrapped(multikernelmanager.py)', '647': 'test_start_parallel_process_kernels(test_multikernelmanager.py)'}}, {'key': 1446, 'parent': 1793, 'tfidf_word': 'parallel start lifecycle manager multi thread process id tcp kernel ', 'tfidf_method': 'AsyncMultiKernelManager MultiKernelManager kernel_method wrapped _get_tcp_km raw_tcp_lifecycle test_start_parallel_process_kernels test_start_parallel_thread_kernels test_tcp_lifecycle test_tcp_lifecycle_with_kernel_id ', 'lda_word': ' kernel,multi,manager,tcp,parallel,', 'lda_method': ' raw_tcp_lifecycle,kernel_method,multikernelmanager,get_tcp_km,asyncmultikernelmanager,', 'lsi_word': ' kernel,tcp,multi,manager,lifecycle,', 'lsi_method': ' multikernelmanager,kernel_method,wrap,raw_tcp_lifecycle,get_tcp_km,', 'spm_method': '  &#187; raw_tcp_lifecycle(test_multikernelmanager.py) &rarr; _get_tcp_km(test_multikernelmanager.py) &rarr; AsyncMultiKernelManager(multikernelmanager.py) &rarr; MultiKernelManager(multikernelmanager.py) &rarr; kernel_method(multikernelmanager.py) &rarr; wrapped(multikernelmanager.py) . <br>', 'text_summary': 'Empty', 'files_count': 2, 'files': ['test_multikernelmanager.py', 'multikernelmanager.py'], 'execution_path_count': 4, 'function_id_to_name_file': {'647': 'test_start_parallel_process_kernels(test_multikernelmanager.py)', '642': 'raw_tcp_lifecycle(test_multikernelmanager.py)', '639': '_get_tcp_km(test_multikernelmanager.py)', '379': 'AsyncMultiKernelManager(multikernelmanager.py)', '381': 'MultiKernelManager(multikernelmanager.py)', '382': 'kernel_method(multikernelmanager.py)', '425': 'wrapped(multikernelmanager.py)', '648': 'test_start_parallel_thread_kernels(test_multikernelmanager.py)', '652': 'test_tcp_lifecycle(test_multikernelmanager.py)', '653': 'test_tcp_lifecycle_with_kernel_id(test_multikernelmanager.py)'}}, {'key': 1149, 'parent': 1753, 'tfidf_word': 'EP: 1149, Name: test_ipc_lifecycle &rarr; _get_ipc_km &rarr; MultiKernelManager &rarr; kernel_method &rarr; wrapped', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1153, 'parent': 1753, 'tfidf_word': 'EP: 1153, Name: test_ipc_cinfo &rarr; _get_ipc_km &rarr; MultiKernelManager &rarr; kernel_method &rarr; wrapped', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1157, 'parent': 1755, 'tfidf_word': 'EP: 1157, Name: test_start_sequence_tcp_kernels &rarr; _get_tcp_km &rarr; MultiKernelManager &rarr; kernel_method &rarr; wrapped', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1751, 'parent': 1755, 'tfidf_word': 'method multi test wrap tcp cinfo id lifecycle shutdown kernel ', 'tfidf_method': 'MultiKernelManager kernel_method wrapped _get_tcp_km test_shutdown_all test_tcp_cinfo test_tcp_lifecycle_with_kernel_id ', 'lda_word': ' kernel,method,tcp,multi,km,', 'lda_method': ' kernel_method,get_tcp_km,wrap,multikernelmanager,test_shutdown_all,', 'lsi_word': ' kernel,tcp,multi,manager,test,', 'lsi_method': ' multikernelmanager,kernel_method,wrap,get_tcp_km,test_tcp_lifecycle_with_kernel_id,', 'spm_method': ' ', 'text_summary': 'Empty', 'files_count': 2, 'files': ['test_multikernelmanager.py', 'multikernelmanager.py'], 'execution_path_count': 3, 'function_id_to_name_file': {'666': 'test_tcp_cinfo(test_multikernelmanager.py)', '655': '_get_tcp_km(test_multikernelmanager.py)', '381': 'MultiKernelManager(multikernelmanager.py)', '382': 'kernel_method(multikernelmanager.py)', '425': 'wrapped(multikernelmanager.py)', '668': 'test_tcp_lifecycle_with_kernel_id(test_multikernelmanager.py)', '661': 'test_shutdown_all(test_multikernelmanager.py)'}}, {'key': 1440, 'parent': 1976, 'tfidf_word': 'multi parallel start wrap process thread lifecycle test kernel tcp ', 'tfidf_method': 'MultiKernelManager kernel_method wrapped _get_tcp_km tcp_lifecycle_with_loop test_tcp_lifecycle test_start_parallel_process_kernels test_start_parallel_thread_kernels ', 'lda_word': ' tcp,kernel,test,lifecycle,parallel,', 'lda_method': ' tcp_lifecycle_with_loop,test_tcp_lifecycle,multikernelmanager,get_tcp_km,wrap,', 'lsi_word': ' tcp,kernel,test,lifecycle,parallel,', 'lsi_method': ' get_tcp_km,test_tcp_lifecycle,multikernelmanager,kernel_method,wrap,', 'spm_method': '  &#187; tcp_lifecycle_with_loop(test_multikernelmanager.py) &rarr; test_tcp_lifecycle(test_multikernelmanager.py) &rarr; _get_tcp_km(test_multikernelmanager.py) &rarr; MultiKernelManager(multikernelmanager.py) &rarr; kernel_method(multikernelmanager.py) &rarr; wrapped(multikernelmanager.py) . <br>', 'text_summary': 'Empty', 'files_count': 2, 'files': ['test_multikernelmanager.py', 'multikernelmanager.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'663': 'test_start_parallel_thread_kernels(test_multikernelmanager.py)', '658': 'tcp_lifecycle_with_loop(test_multikernelmanager.py)', '667': 'test_tcp_lifecycle(test_multikernelmanager.py)', '655': '_get_tcp_km(test_multikernelmanager.py)', '381': 'MultiKernelManager(multikernelmanager.py)', '382': 'kernel_method(multikernelmanager.py)', '425': 'wrapped(multikernelmanager.py)', '662': 'test_start_parallel_process_kernels(test_multikernelmanager.py)'}}, {'key': 1567, 'parent': 1976, 'tfidf_word': 'method multi parallel start wrap process thread tcp test kernel ', 'tfidf_method': 'MultiKernelManager kernel_method wrapped _get_tcp_km test_tcp_lifecycle test_start_parallel_process_kernels test_start_parallel_thread_kernels ', 'lda_word': ' kernel,tcp,test,get,multi,', 'lda_method': ' get_tcp_km,kernel_method,test_start_parallel_thread_kernels,wrap,test_tcp_lifecycle,', 'lsi_word': ' kernel,tcp,test,start,method,', 'lsi_method': ' wrap,test_tcp_lifecycle,get_tcp_km,multikernelmanager,kernel_method,', 'spm_method': ' ', 'text_summary': 'Empty', 'files_count': 2, 'files': ['test_multikernelmanager.py', 'multikernelmanager.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'663': 'test_start_parallel_thread_kernels(test_multikernelmanager.py)', '667': 'test_tcp_lifecycle(test_multikernelmanager.py)', '655': '_get_tcp_km(test_multikernelmanager.py)', '381': 'MultiKernelManager(multikernelmanager.py)', '382': 'kernel_method(multikernelmanager.py)', '425': 'wrapped(multikernelmanager.py)', '662': 'test_start_parallel_process_kernels(test_multikernelmanager.py)'}}, {'key': 406, 'parent': 1693, 'tfidf_word': 'EP: 406, Name: start_new_async_kernel &rarr; AsyncKernelManager &rarr; KernelManager &rarr; KernelSpecManager &rarr; KernelSpec', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 612, 'parent': 1693, 'tfidf_word': 'EP: 612, Name: AsyncIOLoopKernelManager &rarr; AsyncKernelManager &rarr; KernelManager &rarr; KernelSpecManager &rarr; KernelSpec', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 602, 'parent': 1910, 'tfidf_word': 'EP: 602, Name: IOLoopKernelManager &rarr; KernelManager &rarr; KernelSpecManager &rarr; KernelSpec', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1359, 'parent': 1910, 'tfidf_word': 'EP: 1359, Name: test_connection_file_real_path &rarr; KernelManager &rarr; KernelSpecManager &rarr; KernelSpec', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2061, 'parent': 2116, 'tfidf_word': 'default manager set subclass test up kernel spec ', 'tfidf_method': 'KernelSpec KernelSpecManager _kernel_spec_manager_default _kernel_spec_manager_default setUp test_subclass ', 'lda_word': ' kernel,spec,manager,subclass,test,', 'lda_method': ' kernelspecmanager,kernelspec,test_subclass,kernel_spec_manager_default,setup,', 'lsi_word': ' spec,kernel,manager,default,test,', 'lsi_method': ' kernelspecmanager,kernelspec,kernel_spec_manager_default,setup,test_subclass,', 'spm_method': ' ', 'text_summary': 'Empty', 'files_count': 4, 'files': ['test_kernelspec.py', 'kernelspec.py', 'kernelspecapp.py', 'manager.py'], 'execution_path_count': 4, 'function_id_to_name_file': {'629': 'test_subclass(test_kernelspec.py)', '254': 'KernelSpecManager(kernelspec.py)', '253': 'KernelSpec(kernelspec.py)', '618': 'setUp(test_kernelspec.py)', '289': '_kernel_spec_manager_default(kernelspecapp.py)', '345': '_kernel_spec_manager_default(manager.py)'}}, {'key': 2115, 'parent': 2116, 'tfidf_word': 'default manager app kernel spec ', 'tfidf_method': 'KernelSpec KernelSpecManager KernelApp _kernel_spec_manager_default _kernel_spec_manager_default _kernel_spec_manager_default ', 'lda_word': ' kernel,spec,manager,default,app,', 'lda_method': ' kernelspecmanager,kernel_spec_manager_default,kernelspec,kernelapp,', 'lsi_word': ' kernel,spec,manager,default,app,', 'lsi_method': ' kernelspec,kernelspecmanager,kernel_spec_manager_default,kernelapp,', 'spm_method': ' ', 'text_summary': '', 'files_count': 3, 'files': ['kernelspecapp.py', 'kernelspec.py', 'kernelapp.py'], 'execution_path_count': 4, 'function_id_to_name_file': {'295': '_kernel_spec_manager_default(kernelspecapp.py)', '254': 'KernelSpecManager(kernelspec.py)', '253': 'KernelSpec(kernelspec.py)', '286': '_kernel_spec_manager_default(kernelspecapp.py)', '245': 'KernelApp(kernelapp.py)', '292': '_kernel_spec_manager_default(kernelspecapp.py)'}}, {'key': 2321, 'parent': 2336, 'tfidf_word': 'app ksm list my remove specs subclass test kernel spec ', 'tfidf_method': 'KernelSpec KernelSpecManager KernelSpecApp ListKernelSpecs RemoveKernelSpec test_subclass MyKSM ', 'lda_word': ' kernel,spec,manager,test,subclass,', 'lda_method': ' kernelspecmanager,kernelspec,myksm,test_subclass,kernelspecapp,', 'lsi_word': ' kernel,spec,manager,app,remove,', 'lsi_method': ' kernelspec,kernelspecmanager,kernelspecapp,removekernelspec,listkernelspecs,', 'spm_method': ' ', 'text_summary': 'Empty', 'files_count': 3, 'files': ['test_kernelspec.py', 'kernelspec.py', 'kernelspecapp.py'], 'execution_path_count': 3, 'function_id_to_name_file': {'629': 'test_subclass(test_kernelspec.py)', '631': 'MyKSM(test_kernelspec.py)', '254': 'KernelSpecManager(kernelspec.py)', '253': 'KernelSpec(kernelspec.py)', '282': 'KernelSpecApp(kernelspecapp.py)', '284': 'RemoveKernelSpec(kernelspecapp.py)', '283': 'ListKernelSpecs(kernelspecapp.py)'}}, {'key': 2335, 'parent': 2336, 'tfidf_word': 'app install manager native kernel spec ', 'tfidf_method': 'KernelSpec KernelSpecManager KernelSpecApp InstallKernelSpec InstallNativeKernelSpec ', 'lda_word': ' kernel,spec,app,manager,install,', 'lda_method': ' kernelspecapp,kernelspec,kernelspecmanager,installkernelspec,installnativekernelspec,', 'lsi_word': ' kernel,spec,install,manager,app,', 'lsi_method': ' kernelspec,kernelspecapp,kernelspecmanager,installnativekernelspec,installkernelspec,', 'spm_method': ' ', 'text_summary': '', 'files_count': 2, 'files': ['kernelspecapp.py', 'kernelspec.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'282': 'KernelSpecApp(kernelspecapp.py)', '280': 'InstallKernelSpec(kernelspecapp.py)', '254': 'KernelSpecManager(kernelspec.py)', '253': 'KernelSpec(kernelspec.py)', '281': 'InstallNativeKernelSpec(kernelspecapp.py)'}}, {'key': 1200, 'parent': 1574, 'tfidf_word': 'EP: 1200, Name: test_start_sequence_ipc_kernels &rarr; _get_ipc_km &rarr; AsyncMultiKernelManager &rarr; MultiKernelManager &rarr; KernelSpecManager &rarr; KernelSpec', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1570, 'parent': 1574, 'tfidf_word': 'get km test cinfo lifecycle ipc multi spec manager kernel ', 'tfidf_method': 'KernelSpec KernelSpecManager AsyncMultiKernelManager MultiKernelManager _get_ipc_km test_ipc_cinfo test_ipc_lifecycle ', 'lda_word': ' manager,kernel,spec,multi,ipc,', 'lda_method': ' kernelspec,asyncmultikernelmanager,multikernelmanager,kernelspecmanager,get_ipc_km,', 'lsi_word': ' kernel,manager,spec,ipc,multi,', 'lsi_method': ' multikernelmanager,kernelspecmanager,kernelspec,get_ipc_km,asyncmultikernelmanager,', 'spm_method': ' ', 'text_summary': '', 'files_count': 3, 'files': ['test_multikernelmanager.py', 'multikernelmanager.py', 'kernelspec.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'645': 'test_ipc_lifecycle(test_multikernelmanager.py)', '638': '_get_ipc_km(test_multikernelmanager.py)', '379': 'AsyncMultiKernelManager(multikernelmanager.py)', '381': 'MultiKernelManager(multikernelmanager.py)', '254': 'KernelSpecManager(kernelspec.py)', '253': 'KernelSpec(kernelspec.py)', '644': 'test_ipc_cinfo(test_multikernelmanager.py)'}}, {'key': 1572, 'parent': 2032, 'tfidf_word': 'test multi spec tcp cinfo sequence shutdown start manager kernel ', 'tfidf_method': 'KernelSpec KernelSpecManager AsyncMultiKernelManager MultiKernelManager _get_tcp_km test_shutdown_all test_start_sequence_tcp_kernels test_tcp_cinfo ', 'lda_word': ' kernel,manager,spec,multi,km,', 'lda_method': ' asyncmultikernelmanager,get_tcp_km,kernelspec,kernelspecmanager,test_shutdown_all,', 'lsi_word': ' kernel,manager,multi,spec,tcp,', 'lsi_method': ' get_tcp_km,multikernelmanager,kernelspecmanager,kernelspec,asyncmultikernelmanager,', 'spm_method': ' ', 'text_summary': 'Empty', 'files_count': 3, 'files': ['test_multikernelmanager.py', 'multikernelmanager.py', 'kernelspec.py'], 'execution_path_count': 3, 'function_id_to_name_file': {'650': 'test_start_sequence_tcp_kernels(test_multikernelmanager.py)', '639': '_get_tcp_km(test_multikernelmanager.py)', '379': 'AsyncMultiKernelManager(multikernelmanager.py)', '381': 'MultiKernelManager(multikernelmanager.py)', '254': 'KernelSpecManager(kernelspec.py)', '253': 'KernelSpec(kernelspec.py)', '646': 'test_shutdown_all(test_multikernelmanager.py)', '651': 'test_tcp_cinfo(test_multikernelmanager.py)'}}, {'key': 1792, 'parent': 2032, 'tfidf_word': 'spec multi lifecycle loop process thread id tcp manager kernel ', 'tfidf_method': 'KernelSpecManager AsyncMultiKernelManager MultiKernelManager _get_tcp_km raw_tcp_lifecycle tcp_lifecycle_with_loop test_start_parallel_process_kernels test_start_parallel_thread_kernels test_tcp_lifecycle test_tcp_lifecycle_with_kernel_id ', 'lda_word': ' kernel,multi,tcp,manager,spec,', 'lda_method': ' kernelspecmanager,get_tcp_km,asyncmultikernelmanager,multikernelmanager,raw_tcp_lifecycle,', 'lsi_word': ' kernel,manager,tcp,spec,multi,', 'lsi_method': ' asyncmultikernelmanager,kernelspec,get_tcp_km,raw_tcp_lifecycle,multikernelmanager,', 'spm_method': '  &#187; test_start_parallel_thread_kernels(test_multikernelmanager.py) &rarr; raw_tcp_lifecycle(test_multikernelmanager.py) &rarr; _get_tcp_km(test_multikernelmanager.py) &rarr; AsyncMultiKernelManager(multikernelmanager.py) &rarr; MultiKernelManager(multikernelmanager.py) &rarr; KernelSpecManager(kernelspec.py) &rarr; KernelSpec(kernelspec.py) . <br> &#187; tcp_lifecycle_with_loop(test_multikernelmanager.py) &rarr; raw_tcp_lifecycle(test_multikernelmanager.py) &rarr; _get_tcp_km(test_multikernelmanager.py) &rarr; AsyncMultiKernelManager(multikernelmanager.py) &rarr; MultiKernelManager(multikernelmanager.py) &rarr; KernelSpecManager(kernelspec.py) &rarr; KernelSpec(kernelspec.py) . <br> &#187; raw_tcp_lifecycle(test_multikernelmanager.py) &rarr; _get_tcp_km(test_multikernelmanager.py) &rarr; AsyncMultiKernelManager(multikernelmanager.py) &rarr; MultiKernelManager(multikernelmanager.py) &rarr; KernelSpecManager(kernelspec.py) &rarr; KernelSpec(kernelspec.py) . <br> &#187; test_start_parallel_process_kernels(test_multikernelmanager.py) &rarr; raw_tcp_lifecycle(test_multikernelmanager.py) &rarr; _get_tcp_km(test_multikernelmanager.py) &rarr; AsyncMultiKernelManager(multikernelmanager.py) &rarr; MultiKernelManager(multikernelmanager.py) &rarr; KernelSpecManager(kernelspec.py) &rarr; KernelSpec(kernelspec.py) . <br>', 'text_summary': '', 'files_count': 3, 'files': ['test_multikernelmanager.py', 'multikernelmanager.py', 'kernelspec.py'], 'execution_path_count': 6, 'function_id_to_name_file': {'648': 'test_start_parallel_thread_kernels(test_multikernelmanager.py)', '643': 'tcp_lifecycle_with_loop(test_multikernelmanager.py)', '642': 'raw_tcp_lifecycle(test_multikernelmanager.py)', '639': '_get_tcp_km(test_multikernelmanager.py)', '379': 'AsyncMultiKernelManager(multikernelmanager.py)', '381': 'MultiKernelManager(multikernelmanager.py)', '254': 'KernelSpecManager(kernelspec.py)', '253': 'KernelSpec(kernelspec.py)', '647': 'test_start_parallel_process_kernels(test_multikernelmanager.py)', '652': 'test_tcp_lifecycle(test_multikernelmanager.py)', '653': 'test_tcp_lifecycle_with_kernel_id(test_multikernelmanager.py)'}}, {'key': 1160, 'parent': 1756, 'tfidf_word': 'EP: 1160, Name: test_start_sequence_ipc_kernels &rarr; _get_ipc_km &rarr; MultiKernelManager &rarr; KernelSpecManager &rarr; KernelSpec', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1752, 'parent': 1756, 'tfidf_word': 'get km multi test cinfo lifecycle ipc manager spec kernel ', 'tfidf_method': 'KernelSpec KernelSpecManager MultiKernelManager _get_ipc_km test_ipc_cinfo test_ipc_lifecycle ', 'lda_word': ' spec,manager,kernel,ipc,multi,', 'lda_method': ' get_ipc_km,kernelspec,multikernelmanager,kernelspecmanager,test_ipc_lifecycle,', 'lsi_word': ' kernel,manager,spec,ipc,multi,', 'lsi_method': ' kernelspecmanager,multikernelmanager,get_ipc_km,kernelspec,test_ipc_cinfo,', 'spm_method': ' ', 'text_summary': '', 'files_count': 3, 'files': ['test_multikernelmanager.py', 'multikernelmanager.py', 'kernelspec.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'660': 'test_ipc_lifecycle(test_multikernelmanager.py)', '654': '_get_ipc_km(test_multikernelmanager.py)', '381': 'MultiKernelManager(multikernelmanager.py)', '254': 'KernelSpecManager(kernelspec.py)', '253': 'KernelSpec(kernelspec.py)', '659': 'test_ipc_cinfo(test_multikernelmanager.py)'}}, {'key': 1754, 'parent': 2271, 'tfidf_word': 'manager spec tcp cinfo id lifecycle sequence shutdown start kernel ', 'tfidf_method': 'KernelSpec KernelSpecManager MultiKernelManager _get_tcp_km test_shutdown_all test_start_sequence_tcp_kernels test_tcp_cinfo test_tcp_lifecycle_with_kernel_id ', 'lda_word': ' kernel,manager,tcp,spec,multi,', 'lda_method': ' kernelspecmanager,get_tcp_km,multikernelmanager,kernelspec,test_tcp_lifecycle_with_kernel_id,', 'lsi_word': ' kernel,spec,manager,tcp,get,', 'lsi_method': ' get_tcp_km,multikernelmanager,kernelspecmanager,kernelspec,test_start_sequence_tcp_kernels,', 'spm_method': ' ', 'text_summary': 'Empty', 'files_count': 3, 'files': ['test_multikernelmanager.py', 'multikernelmanager.py', 'kernelspec.py'], 'execution_path_count': 4, 'function_id_to_name_file': {'665': 'test_start_sequence_tcp_kernels(test_multikernelmanager.py)', '655': '_get_tcp_km(test_multikernelmanager.py)', '381': 'MultiKernelManager(multikernelmanager.py)', '254': 'KernelSpecManager(kernelspec.py)', '253': 'KernelSpec(kernelspec.py)', '666': 'test_tcp_cinfo(test_multikernelmanager.py)', '668': 'test_tcp_lifecycle_with_kernel_id(test_multikernelmanager.py)', '661': 'test_shutdown_all(test_multikernelmanager.py)'}}, {'key': 1975, 'parent': 2271, 'tfidf_word': 'start loop process thread lifecycle manager spec test tcp kernel ', 'tfidf_method': 'KernelSpec KernelSpecManager MultiKernelManager _get_tcp_km test_tcp_lifecycle tcp_lifecycle_with_loop test_start_parallel_process_kernels test_start_parallel_thread_kernels ', 'lda_word': ' kernel,manager,spec,lifecycle,tcp,', 'lda_method': ' multikernelmanager,kernelspec,kernelspecmanager,get_tcp_km,test_tcp_lifecycle,', 'lsi_word': ' kernel,tcp,manager,spec,test,', 'lsi_method': ' kernelspecmanager,test_tcp_lifecycle,multikernelmanager,kernelspec,get_tcp_km,', 'spm_method': '  &#187; test_start_parallel_thread_kernels(test_multikernelmanager.py) &rarr; test_tcp_lifecycle(test_multikernelmanager.py) &rarr; _get_tcp_km(test_multikernelmanager.py) &rarr; MultiKernelManager(multikernelmanager.py) &rarr; KernelSpecManager(kernelspec.py) &rarr; KernelSpec(kernelspec.py) . <br> &#187; tcp_lifecycle_with_loop(test_multikernelmanager.py) &rarr; test_tcp_lifecycle(test_multikernelmanager.py) &rarr; _get_tcp_km(test_multikernelmanager.py) &rarr; MultiKernelManager(multikernelmanager.py) &rarr; KernelSpecManager(kernelspec.py) &rarr; KernelSpec(kernelspec.py) . <br> &#187; test_start_parallel_process_kernels(test_multikernelmanager.py) &rarr; test_tcp_lifecycle(test_multikernelmanager.py) &rarr; _get_tcp_km(test_multikernelmanager.py) &rarr; MultiKernelManager(multikernelmanager.py) &rarr; KernelSpecManager(kernelspec.py) &rarr; KernelSpec(kernelspec.py) . <br>', 'text_summary': '', 'files_count': 3, 'files': ['test_multikernelmanager.py', 'multikernelmanager.py', 'kernelspec.py'], 'execution_path_count': 4, 'function_id_to_name_file': {'663': 'test_start_parallel_thread_kernels(test_multikernelmanager.py)', '658': 'tcp_lifecycle_with_loop(test_multikernelmanager.py)', '667': 'test_tcp_lifecycle(test_multikernelmanager.py)', '655': '_get_tcp_km(test_multikernelmanager.py)', '381': 'MultiKernelManager(multikernelmanager.py)', '254': 'KernelSpecManager(kernelspec.py)', '253': 'KernelSpec(kernelspec.py)', '662': 'test_start_parallel_process_kernels(test_multikernelmanager.py)'}}, {'key': 426, 'parent': 1695, 'tfidf_word': 'EP: 426, Name: run_kernel &rarr; start_new_kernel &rarr; start_kernel &rarr; pre_start_kernel &rarr; _get_env_substitutions', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1694, 'parent': 1695, 'tfidf_word': 'ip local new pre run start kernel ', 'tfidf_method': 'run_kernel start_new_kernel pre_start_kernel start_kernel is_local_ip local_ips ', 'lda_word': ' kernel,start,pre,run,ip,', 'lda_method': ' pre_start_kernel,start_kernel,start_new_kernel,run_kernel,local_ips,', 'lsi_word': ' kernel,start,ip,local,pre,', 'lsi_method': ' run_kernel,start_kernel,start_new_kernel,pre_start_kernel,local_ips,', 'spm_method': ' ', 'text_summary': 'Start a new kernel, and return its Manager and Client. return the IP addresses that point to this machine.', 'files_count': 2, 'files': ['manager.py', 'localinterfaces.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'321': 'run_kernel(manager.py)', '323': 'start_new_kernel(manager.py)', '366': 'start_kernel(manager.py)', '360': 'pre_start_kernel(manager.py)', '314': 'local_ips(localinterfaces.py)', '312': 'is_local_ip(localinterfaces.py)'}}, {'key': 1777, 'parent': 2022, 'tfidf_word': 'port pre random record run write cmd format start kernel ', 'tfidf_method': '_record_random_port_names write_connection_file run_kernel start_new_kernel pre_start_kernel start_kernel format_kernel_cmd ', 'lda_word': ' kernel,start,format,record,run,', 'lda_method': ' run_kernel,start_kernel,pre_start_kernel,record_random_port_names,write_connection_file,', 'lsi_word': ' kernel,start,connection,random,run,', 'lsi_method': ' start_new_kernel,pre_start_kernel,run_kernel,record_random_port_names,start_kernel,', 'spm_method': '  &#187; run_kernel(manager.py) &rarr; start_new_kernel(manager.py) &rarr; start_kernel(manager.py) &rarr; pre_start_kernel(manager.py) &rarr; write_connection_file(connect.py) &rarr; _record_random_port_names(connect.py) . <br>', 'text_summary': 'Start a new kernel, and return its Manager and Client. Context manager to create a kernel in a subprocess.', 'files_count': 2, 'files': ['manager.py', 'connect.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'321': 'run_kernel(manager.py)', '323': 'start_new_kernel(manager.py)', '366': 'start_kernel(manager.py)', '360': 'pre_start_kernel(manager.py)', '212': 'write_connection_file(connect.py)', '197': '_record_random_port_names(connect.py)', '353': 'format_kernel_cmd(manager.py)'}}, {'key': 1778, 'parent': 2022, 'tfidf_word': 'cmd format new pre run n start spec kernel ', 'tfidf_method': 'run_kernel start_new_kernel format_kernel_cmd pre_start_kernel start_kernel KernelSpec kernel_spec from_ns ', 'lda_word': ' kernel,start,pre,new,run,', 'lda_method': ' format_kernel_cmd,pre_start_kernel,start_new_kernel,start_kernel,run_kernel,', 'lsi_word': ' kernel,start,spec,run,new,', 'lsi_method': ' format_kernel_cmd,start_kernel,start_new_kernel,run_kernel,pre_start_kernel,', 'spm_method': ' ', 'text_summary': 'Start a new kernel, and return its Manager and Client. Context manager to create a kernel in a subprocess.', 'files_count': 2, 'files': ['manager.py', 'kernelspec.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'321': 'run_kernel(manager.py)', '323': 'start_new_kernel(manager.py)', '366': 'start_kernel(manager.py)', '360': 'pre_start_kernel(manager.py)', '353': 'format_kernel_cmd(manager.py)', '369': 'from_ns(manager.py)', '358': 'kernel_spec(manager.py)', '253': 'KernelSpec(kernelspec.py)'}}, {'key': 422, 'parent': 1999, 'tfidf_word': 'EP: 422, Name: run_kernel &rarr; start_new_kernel &rarr; start_kernel &rarr; post_start_kernel &rarr; _connect_control_socket &rarr; _create_connected_socket &rarr; _make_url', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 423, 'parent': 1999, 'tfidf_word': 'EP: 423, Name: run_kernel &rarr; start_new_kernel &rarr; start_kernel &rarr; post_start_kernel &rarr; start_restarter', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1594, 'parent': 1977, 'tfidf_word': 'header id new request run start send shutdown kernel msg ', 'tfidf_method': 'run_kernel start_new_kernel request_shutdown shutdown_kernel msg msg_header msg_id send ', 'lda_word': ' kernel,shutdown,msg,start,request,', 'lda_method': ' shutdown_kernel,start_new_kernel,msg_id,msg_header,run_kernel,', 'lsi_word': ' msg,kernel,shutdown,new,run,', 'lsi_method': ' msg,shutdown_kernel,run_kernel,request_shutdown,msg_id,', 'spm_method': '  &#187; run_kernel(manager.py) &rarr; start_new_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; start_new_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br>', 'text_summary': 'Start a new kernel, and return its Manager and Client. Context manager to create a kernel in a subprocess.', 'files_count': 2, 'files': ['manager.py', 'session.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'321': 'run_kernel(manager.py)', '323': 'start_new_kernel(manager.py)', '364': 'shutdown_kernel(manager.py)', '362': 'request_shutdown(manager.py)', '476': 'msg(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '480': 'send(session.py)'}}, {'key': 1970, 'parent': 1977, 'tfidf_word': 'header id new request run start shutdown kernel msg ', 'tfidf_method': 'run_kernel start_new_kernel request_shutdown shutdown_kernel msg msg_header msg_id msg msg ', 'lda_word': ' msg,kernel,shutdown,start,new,', 'lda_method': ' msg,shutdown_kernel,msg_header,request_shutdown,run_kernel,', 'lsi_word': ' msg,kernel,shutdown,run,start,', 'lsi_method': ' msg,run_kernel,shutdown_kernel,request_shutdown,msg_id,', 'spm_method': '  &#187; run_kernel(manager.py) &rarr; start_new_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; start_new_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br>', 'text_summary': 'Start a new kernel, and return its Manager and Client. Attempts to stop the kernel process cleanly.', 'files_count': 3, 'files': ['manager.py', 'test_adapter.py', 'session.py'], 'execution_path_count': 4, 'function_id_to_name_file': {'321': 'run_kernel(manager.py)', '323': 'start_new_kernel(manager.py)', '364': 'shutdown_kernel(manager.py)', '362': 'request_shutdown(manager.py)', '520': 'msg(test_adapter.py)', '476': 'msg(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '534': 'msg(test_adapter.py)'}}, {'key': 2000, 'parent': 2389, 'tfidf_word': 'extract header new request run start shutdown send kernel msg ', 'tfidf_method': 'run_kernel start_new_kernel request_shutdown shutdown_kernel extract_header msg msg msg send ', 'lda_word': ' kernel,msg,run,shutdown,start,', 'lda_method': ' start_new_kernel,msg,run_kernel,request_shutdown,shutdown_kernel,', 'lsi_word': ' kernel,msg,shutdown,extract,start,', 'lsi_method': ' msg,run_kernel,start_new_kernel,extract_header,shutdown_kernel,', 'spm_method': '  &#187; run_kernel(manager.py) &rarr; start_new_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br> &#187; start_new_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br>', 'text_summary': 'Start a new kernel, and return its Manager and Client. Given a message or header, return the header.', 'files_count': 3, 'files': ['manager.py', 'session.py', 'test_adapter.py'], 'execution_path_count': 6, 'function_id_to_name_file': {'321': 'run_kernel(manager.py)', '323': 'start_new_kernel(manager.py)', '364': 'shutdown_kernel(manager.py)', '362': 'request_shutdown(manager.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '480': 'send(session.py)', '520': 'msg(test_adapter.py)', '534': 'msg(test_adapter.py)'}}, {'key': 2292, 'parent': 2389, 'tfidf_word': 'kernel thread sign adapt message control serialize utcnow socket connect ', 'tfidf_method': 'send send adapt sign Message utcnow thread_send _connect_control_socket serialize send ', 'lda_word': ' kernel,shutdown,start,new,send,', 'lda_method': ' request_shutdown,run_kernel,start_new_kernel,shutdown_kernel,create_connected_socket,', 'lsi_word': ' kernel,shutdown,request,new,run,', 'lsi_method': ' run_kernel,request_shutdown,start_new_kernel,shutdown_kernel,send,', 'spm_method': '  &#187; run_kernel(manager.py) &rarr; start_new_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) &rarr; _create_connected_socket(connect.py) &rarr; _make_url(connect.py) . <br>', 'text_summary': 'Start a new kernel, and return its Manager and Client. Create a zmq Socket and connect it to the kernel. Pass a message to the ZMQ socket to send.', 'files_count': 6, 'files': ['manager.py', 'session.py', 'adapter.py', 'connect.py', 'threaded.py', 'channels.py'], 'execution_path_count': 8, 'function_id_to_name_file': {'321': 'run_kernel(manager.py)', '323': 'start_new_kernel(manager.py)', '364': 'shutdown_kernel(manager.py)', '362': 'request_shutdown(manager.py)', '480': 'send(session.py)', '50': 'adapt(adapter.py)', '450': 'utcnow(session.py)', '482': 'serialize(session.py)', '483': 'sign(session.py)', '440': 'Message(session.py)', '338': '_connect_control_socket(manager.py)', '192': '_create_connected_socket(connect.py)', '196': '_make_url(connect.py)', '734': 'send(threaded.py)', '738': 'thread_send(threaded.py)', '88': 'send(channels.py)', '114': 'send(channels.py)'}}, {'key': 2016, 'parent': 2677, 'tfidf_word': 'new run start connection file mixin manager spec kernel ', 'tfidf_method': 'KernelManager run_kernel start_new_kernel ConnectionFileMixin KernelSpec KernelSpecManager ', 'lda_word': ' kernel,manager,new,run,start,', 'lda_method': ' run_kernel,kernelmanager,start_new_kernel,kernelspec,kernelspecmanager,', 'lsi_word': ' kernel,manager,spec,new,start,', 'lsi_method': ' kernelmanager,run_kernel,start_new_kernel,kernelspec,kernelspecmanager,', 'spm_method': ' ', 'text_summary': '', 'files_count': 3, 'files': ['manager.py', 'kernelspec.py', 'connect.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'321': 'run_kernel(manager.py)', '323': 'start_new_kernel(manager.py)', '320': 'KernelManager(manager.py)', '254': 'KernelSpecManager(kernelspec.py)', '253': 'KernelSpec(kernelspec.py)', '188': 'ConnectionFileMixin(connect.py)'}}, {'key': 2275, 'parent': 2677, 'tfidf_word': 'client connection get info new start async run kernel ', 'tfidf_method': 'get_connection_info client run_kernel start_new_async_kernel start_new_kernel ', 'lda_word': ' kernel,new,start,client,connection,', 'lda_method': ' get_connection_info,client,run_kernel,start_new_kernel,start_new_async_kernel,', 'lsi_word': ' kernel,client,get,start,connection,', 'lsi_method': ' get_connection_info,client,run_kernel,start_new_kernel,start_new_async_kernel,', 'spm_method': ' ', 'text_summary': 'Create a client configured to connect to our kernel.', 'files_count': 2, 'files': ['manager.py', 'connect.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'322': 'start_new_async_kernel(manager.py)', '351': 'client(manager.py)', '208': 'get_connection_info(connect.py)', '321': 'run_kernel(manager.py)', '323': 'start_new_kernel(manager.py)'}}, {'key': 2262, 'parent': 2684, 'tfidf_word': 'launch new run start finish kill shutdown signal alive kernel ', 'tfidf_method': 'run_kernel start_new_kernel _launch_kernel has_kernel shutdown_kernel _kill_kernel finish_shutdown signal_kernel is_alive ', 'lda_word': ' kernel,shutdown,start,run,new,', 'lda_method': ' has_kernel,start_new_kernel,run_kernel,shutdown_kernel,launch_kernel,', 'lsi_word': ' kernel,shutdown,start,run,new,', 'lsi_method': ' has_kernel,run_kernel,launch_kernel,start_new_kernel,shutdown_kernel,', 'spm_method': '  &#187; run_kernel(manager.py) &rarr; start_new_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; _kill_kernel(manager.py) &rarr; signal_kernel(manager.py) &rarr; has_kernel(manager.py) &rarr; _launch_kernel(manager.py) . <br> &#187; start_new_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; _kill_kernel(manager.py) &rarr; signal_kernel(manager.py) &rarr; has_kernel(manager.py) &rarr; _launch_kernel(manager.py) . <br>', 'text_summary': "Start a new kernel, and return its Manager and Client. Wait for kernel shutdown, then kill process if it doesn't shutdown. Has a kernel been started that we are managing.", 'files_count': 1, 'files': ['manager.py'], 'execution_path_count': 6, 'function_id_to_name_file': {'321': 'run_kernel(manager.py)', '323': 'start_new_kernel(manager.py)', '364': 'shutdown_kernel(manager.py)', '346': '_kill_kernel(manager.py)', '365': 'signal_kernel(manager.py)', '354': 'has_kernel(manager.py)', '347': '_launch_kernel(manager.py)', '352': 'finish_shutdown(manager.py)', '357': 'is_alive(manager.py)'}}, {'key': 2296, 'parent': 2684, 'tfidf_word': 'start file resource connection ipc port restarter stop kernel cleanup ', 'tfidf_method': 'run_kernel start_new_kernel shutdown_kernel cleanup_resources cleanup_connection_file cleanup_ipc_files ports cleanup stop_restarter ', 'lda_word': ' kernel,run,start,shutdown,new,', 'lda_method': ' run_kernel,shutdown_kernel,cleanup_resources,start_new_kernel,cleanup_connection_file,', 'lsi_word': ' kernel,cleanup,start,run,new,', 'lsi_method': ' shutdown_kernel,run_kernel,start_new_kernel,cleanup_resources,cleanup_ipc_files,', 'spm_method': '  &#187; run_kernel(manager.py) &rarr; start_new_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; cleanup_resources(manager.py) &rarr; cleanup_ipc_files(connect.py) &rarr; ports(connect.py) . <br>', 'text_summary': 'Start a new kernel, and return its Manager and Client. Context manager to create a kernel in a subprocess.', 'files_count': 2, 'files': ['manager.py', 'connect.py'], 'execution_path_count': 5, 'function_id_to_name_file': {'321': 'run_kernel(manager.py)', '323': 'start_new_kernel(manager.py)', '364': 'shutdown_kernel(manager.py)', '350': 'cleanup_resources(manager.py)', '201': 'cleanup_ipc_files(connect.py)', '211': 'ports(connect.py)', '349': 'cleanup(manager.py)', '368': 'stop_restarter(manager.py)', '200': 'cleanup_connection_file(connect.py)'}}, {'key': 1992, 'parent': 2678, 'tfidf_word': 'addresses get local no output public stable uniq load ip ', 'tfidf_method': '_load_ips _load_ips_ipconfig _requires_ips ips_loaded _populate_from_list NoIPAddresses _get_output _uniq_stable local_ips public_ips ', 'lda_word': ' ip,load,require,ipconfig,populate,', 'lda_method': ' load_ips_ipconfig,load_ips,populate_from_list,requires_ips,ips_loaded,', 'lsi_word': ' ip,load,require,ipconfig,populate,', 'lsi_method': ' ips_loaded,requires_ips,load_ips,load_ips_ipconfig,populate_from_list,', 'spm_method': ' ', 'text_summary': 'populate local and public IPs from flat list of all IPs. return the IP addresses that point to this machine. populate local and public IPs from flat list of all IPs. return the IP addresses for this machine that are visible to other machines. decorator to ensure load_ips has been run before f.', 'files_count': 1, 'files': ['localinterfaces.py'], 'execution_path_count': 5, 'function_id_to_name_file': {'310': '_requires_ips(localinterfaces.py)', '318': 'ips_loaded(localinterfaces.py)', '301': '_load_ips(localinterfaces.py)', '306': '_load_ips_ipconfig(localinterfaces.py)', '300': '_get_output(localinterfaces.py)', '309': '_populate_from_list(localinterfaces.py)', '299': 'NoIPAddresses(localinterfaces.py)', '316': 'public_ips(localinterfaces.py)', '314': 'local_ips(localinterfaces.py)', '311': '_uniq_stable(localinterfaces.py)'}}, {'key': 2675, 'parent': 2678, 'tfidf_word': 'netifaces no public stable uniq load get output dumb ip ', 'tfidf_method': '_populate_from_list _load_ips_ifconfig _load_ips_ip NoIPAddresses _load_ips_netifaces _uniq_stable local_ips public_ips _get_output _load_ips_dumb ', 'lda_word': ' ip,load,require,populate,address,', 'lda_method': ' load_ips,load_ips_ifconfig,requires_ips,ips_loaded,populate_from_list,', 'lsi_word': ' ip,load,require,list,populate,', 'lsi_method': ' ips_loaded,load_ips,requires_ips,populate_from_list,load_ips_ifconfig,', 'spm_method': ' ', 'text_summary': 'populate local and public IPs from flat list of all IPs. return the IP addresses that point to this machine. populate local and public IPs from flat list of all IPs. decorator to ensure load_ips has been run before f. populate local and public IPs from flat list of all IPs. uniq_stable(elems) -> list. load the IPs that point to this machine. populate local and public IPs from flat list of all IPs. return the IP addresses for this machine that are visible to other machines.', 'files_count': 1, 'files': ['localinterfaces.py'], 'execution_path_count': 15, 'function_id_to_name_file': {'310': '_requires_ips(localinterfaces.py)', '318': 'ips_loaded(localinterfaces.py)', '301': '_load_ips(localinterfaces.py)', '304': '_load_ips_ifconfig(localinterfaces.py)', '300': '_get_output(localinterfaces.py)', '309': '_populate_from_list(localinterfaces.py)', '299': 'NoIPAddresses(localinterfaces.py)', '316': 'public_ips(localinterfaces.py)', '314': 'local_ips(localinterfaces.py)', '311': '_uniq_stable(localinterfaces.py)', '305': '_load_ips_ip(localinterfaces.py)', '307': '_load_ips_netifaces(localinterfaces.py)', '302': '_load_ips_dumb(localinterfaces.py)'}}, {'key': 2231, 'parent': 2712, 'tfidf_word': 'addresses get local no output public stable uniq load ip ', 'tfidf_method': '_load_ips _load_ips_ipconfig test_load_ips _populate_from_list NoIPAddresses _get_output _uniq_stable local_ips public_ips ', 'lda_word': ' ip,load,list,populate,test,', 'lda_method': ' populate_from_list,load_ips_ipconfig,load_ips,test_load_ips,local_ips,', 'lsi_word': ' ip,load,ipconfig,test,populate,', 'lsi_method': ' load_ips,test_load_ips,load_ips_ipconfig,populate_from_list,local_ips,', 'spm_method': ' ', 'text_summary': 'populate local and public IPs from flat list of all IPs. return the IP addresses that point to this machine. populate local and public IPs from flat list of all IPs. return the IP addresses for this machine that are visible to other machines. populate local and public IPs from flat list of all IPs. load ip addresses from `ipconfig` output (Windows).', 'files_count': 2, 'files': ['test_localinterfaces.py', 'localinterfaces.py'], 'execution_path_count': 5, 'function_id_to_name_file': {'634': 'test_load_ips(test_localinterfaces.py)', '301': '_load_ips(localinterfaces.py)', '306': '_load_ips_ipconfig(localinterfaces.py)', '300': '_get_output(localinterfaces.py)', '309': '_populate_from_list(localinterfaces.py)', '299': 'NoIPAddresses(localinterfaces.py)', '316': 'public_ips(localinterfaces.py)', '314': 'local_ips(localinterfaces.py)', '311': '_uniq_stable(localinterfaces.py)'}}, {'key': 2711, 'parent': 2712, 'tfidf_word': 'netifaces addresses local load output gethostbyname get require dumb ip ', 'tfidf_method': '_uniq_stable NoIPAddresses _load_ips_netifaces local_ips public_ips _get_output _load_ips_gethostbyname _load_ips_dumb _requires_ips ips_loaded ', 'lda_word': ' load,ip,test,list,populate,', 'lda_method': ' load_ips,test_load_ips,get_output,load_ips_ifconfig,noipaddresses,', 'lsi_word': ' ip,load,test,list,populate,', 'lsi_method': ' load_ips,test_load_ips,populate_from_list,load_ips_ifconfig,load_ips_ip,', 'spm_method': ' ', 'text_summary': 'load ip addresses from `ip addr` output (Linux). populate local and public IPs from flat list of all IPs. return the IP addresses that point to this machine. populate local and public IPs from flat list of all IPs. return the IP addresses that point to this machine. uniq_stable(elems) -> list. populate local and public IPs from flat list of all IPs. uniq_stable(elems) -> list. return the IP addresses for this machine that are visible to other machines. populate local and public IPs from flat list of all IPs. return the IP addresses for this machine that are visible to other machines. load ip addresses with socket.gethostbyname_ex uniq_stable(elems) -> list.', 'files_count': 2, 'files': ['test_localinterfaces.py', 'localinterfaces.py'], 'execution_path_count': 17, 'function_id_to_name_file': {'634': 'test_load_ips(test_localinterfaces.py)', '301': '_load_ips(localinterfaces.py)', '304': '_load_ips_ifconfig(localinterfaces.py)', '300': '_get_output(localinterfaces.py)', '309': '_populate_from_list(localinterfaces.py)', '299': 'NoIPAddresses(localinterfaces.py)', '316': 'public_ips(localinterfaces.py)', '314': 'local_ips(localinterfaces.py)', '311': '_uniq_stable(localinterfaces.py)', '305': '_load_ips_ip(localinterfaces.py)', '310': '_requires_ips(localinterfaces.py)', '318': 'ips_loaded(localinterfaces.py)', '303': '_load_ips_gethostbyname(localinterfaces.py)', '307': '_load_ips_netifaces(localinterfaces.py)', '302': '_load_ips_dumb(localinterfaces.py)'}}, {'key': 2084, 'parent': 2159, 'tfidf_word': 'msgpack packer pack version kn id default cull pickle zero ', 'tfidf_method': 'test_bad_pack test_bad_packer test_bad_roundtrip test_bad_unpack test_bad_unpacker test_cull_digest_history test_datetimes_msgpack test_datetimes_pickle test_session_id test_zero_digest_history ', 'lda_word': ' test,new,init,auth,bad,', 'lda_method': ' new_auth,init,test_bad_packer,test_load_connection_file_session_with_kn,test_bad_unpacker,', 'lsi_word': ' new,init,auth,test,bad,', 'lsi_method': ' init,new_auth,test_bad_roundtrip,test_bad_pack,test_datetimes_pickle,', 'spm_method': ' ', 'text_summary': '', 'files_count': 4, 'files': ['test_connect.py', 'session.py', 'test_adapter.py', 'test_session.py'], 'execution_path_count': 14, 'function_id_to_name_file': {'565': 'test_load_connection_file_session_with_kn(test_connect.py)', '457': '__init__(session.py)', '465': '_new_auth(session.py)', '564': 'test_load_connection_file_session(test_connect.py)', '519': 'setUp(test_adapter.py)', '516': 'test_default_version(test_adapter.py)', '689': 'test_datetimes_msgpack(test_session.py)', '690': 'test_datetimes_pickle(test_session.py)', '683': 'test_bad_roundtrip(test_session.py)', '685': 'test_bad_unpacker(test_session.py)', '682': 'test_bad_packer(test_session.py)', '681': 'test_bad_pack(test_session.py)', '684': 'test_bad_unpack(test_session.py)', '687': 'test_cull_digest_history(test_session.py)', '697': 'test_session_id(test_session.py)', '700': 'test_zero_digest_history(test_session.py)'}}, {'key': 2157, 'parent': 2159, 'tfidf_word': 'auth new init args default session set test up ', 'tfidf_method': '__init__ _new_auth _session_default __init__ setUp test_args ', 'lda_word': ' new,auth,args,test,init,', 'lda_method': ' new_auth,session_default,init,test_args,setup,', 'lsi_word': ' init,new,auth,test,default,', 'lsi_method': ' init,new_auth,setup,session_default,test_args,', 'spm_method': ' ', 'text_summary': 'Empty', 'files_count': 4, 'files': ['test_session.py', 'session.py', 'consoleapp.py', 'connect.py'], 'execution_path_count': 4, 'function_id_to_name_file': {'680': 'test_args(test_session.py)', '457': '__init__(session.py)', '465': '_new_auth(session.py)', '678': 'setUp(test_session.py)', '215': '__init__(consoleapp.py)', '198': '_session_default(connect.py)'}}, {'key': 2769, 'parent': 2790, 'tfidf_word': 'manager load no run async such cleanup file connection kernel ', 'tfidf_method': 'test_find_connection_file init_kernel_manager client NoSuchKernel test_mixin_record_random_ports run_kernel start_new_async_kernel start_new_kernel init_kernel_client test_mixin_cleanup_random_ports ', 'lda_word': ' connection,file,load,initialize,localhost,', 'lda_method': ' record_random_port_names,client,write_connection_file,run_kernel,start_new_kernel,', 'lsi_word': ' connection,file,load,initialize,test,', 'lsi_method': ' initialize,load_connection_file,record_random_port_names,init_connection_file,load_connection_info,', 'spm_method': '  &#187; initialize(test_connect.py) &rarr; init_connection_file(consoleapp.py) &rarr; load_connection_file(connect.py) &rarr; load_connection_info(connect.py) &rarr; _ip_default(connect.py) &rarr; localhost(localinterfaces.py) . <br> &#187; initialize(runapp.py) &rarr; initialize(consoleapp.py) &rarr; load_connection_file(connect.py) &rarr; load_connection_info(connect.py) &rarr; _ip_default(connect.py) &rarr; localhost(localinterfaces.py) . <br>', 'text_summary': 'return ip for localhost (almost always 127.0.0.1) test load_connection_file() after. Load connection info from JSON dict in self.connection_file. return ip for localhost (almost always 127.0.0.1)   find the connection file, and load the info if found. test `ipython console --existing` loads a connection file. return ip for localhost (almost always 127.0.0.1) test `ipython console --existing` loads a connection file. return ip for localhost (almost always 127.0.0.1)   set up ssh tunnels, if needed. Write connection info to JSON dict in self.connection_file.', 'files_count': 7, 'files': ['test_connect.py', 'consoleapp.py', 'connect.py', 'localinterfaces.py', 'runapp.py', 'kernelspec.py', 'manager.py'], 'execution_path_count': 33, 'function_id_to_name_file': {'560': 'test_find_connection_file(test_connect.py)', '572': 'initialize(test_connect.py)', '219': 'init_connection_file(consoleapp.py)', '209': 'load_connection_file(connect.py)', '210': 'load_connection_info(connect.py)', '195': '_ip_default(connect.py)', '315': 'localhost(localinterfaces.py)', '559': 'test_app_load_connection_file(test_connect.py)', '564': 'test_load_connection_file_session(test_connect.py)', '565': 'test_load_connection_file_session_with_kn(test_connect.py)', '197': '_record_random_port_names(connect.py)', '437': 'initialize(runapp.py)', '223': 'initialize(consoleapp.py)', '222': 'init_ssh(consoleapp.py)', '212': 'write_connection_file(connect.py)', '220': 'init_kernel_client(consoleapp.py)', '221': 'init_kernel_manager(consoleapp.py)', '255': 'NoSuchKernel(kernelspec.py)', '322': 'start_new_async_kernel(manager.py)', '351': 'client(manager.py)', '321': 'run_kernel(manager.py)', '323': 'start_new_kernel(manager.py)', '568': 'test_mixin_record_random_ports(test_connect.py)', '567': 'test_mixin_cleanup_random_ports(test_connect.py)'}}, {'key': 2789, 'parent': 2790, 'tfidf_word': 'loop flush permission native digest io tunnel cleanup code restarter ', 'tfidf_method': 'signal_kernel test_execute_request tearDown restart_kernel interrupt_kernel finish_shutdown test_execute_reply test_display_data test_input_request V5toV4 ', 'lda_word': ' get,close,msg,port,test,', 'lda_method': ' start,get_kernel_spec,session,adapt,is_valid_kernel_name,', 'lsi_word': ' kernel,spec,test,get,start,', 'lsi_method': ' init,get_kernel_spec,setup,get_all_specs,test_subclass,', 'spm_method': ' ', 'text_summary': "Subclasses may override  Prepares a kernel for startup in a separate process. return ip for localhost (almost always 127.0.0.1) test `ipython console --existing` loads a connection file. Prepares a kernel for startup in a separate process. return ip for localhost (almost always 127.0.0.1)   Ensure that a sequence of kernel startups doesn't break anything. Sends a signal to the process group of the kernel (this. Pass a message to the ZMQ socket to send. Install a kernel spec by copying its directory. Return the connection info as a dict. Subclasses may override Start the polling of the kernel. return ip for localhost (almost always 127.0.0.1) test load_connection_file() after. Launches a localhost kernel, binding to the specified ports. test `ipython console --existing` loads a connection file. find a connection file, and return its absolute path. return ip for localhost (almost always 127.0.0.1)      find a connection file, and return its absolute path. For tests, create a file to indicate that we've started. Returns a dict mapping kernel names to kernelspecs. handle kernel info reply. Get all messages that are currently ready. Returns the id to associate with the kernel for this request. Send a raw message via ident path. {connection_file})   Prepares a kernel for startup in a separate process. Get the hb channel object for this kernel. {connection_file})  Restarts a kernel with the arguments that were used to launch it. Make a blocking client connected to my kernel. return ip for localhost (almost always 127.0.0.1)  Write connection info to JSON dict in self.connection_file. Get a message from the stdin channel. Immediately processes all pending messages on this channel. Return the number of running kernels. Verify realpath is used when formatting connection file. Unserialize a msg_list to a nested message dict. {connection_file}) Write connection info to JSON dict in self.connection_file. Get a message from the shell channel. Get a message from the iopub channel. This is run in the ioloop thread when the kernel info reply is received. default function for packing datetime objects in JSON. Return a mapping of kernel names to resource directories from dir. Find the resource directory of a named kernel spec. Returns a :class:`KernelSpec` instance for a given kernel_name. test load_connection_file() after. Write connection info to JSON dict in self.connection_file. test that messages receive unique ids. Create a zmq Socket and connect it to the kernel. Forgets randomly assigned port numbers and cleans up the connection file.", 'files_count': 35, 'files': ['test_kernelspec.py', 'kernelspec.py', 'test_session.py', 'session.py', 'jsonutil.py', 'forward.py', 'test_jsonutil.py', 'manager.py', 'connect.py', 'test_manager.py', 'localinterfaces.py', 'test_client.py', 'adapter.py', 'test_adapter.py', 'test_connect.py', 'channels.py', 'threaded.py', 'consoleapp.py', 'runapp.py', 'test_multikernelmanager.py', 'multikernelmanager.py', 'tunnel.py', 'test_ssh.py', 'client.py', 'managerabc.py', 'channelsabc.py', 'test_kernelmanager.py', 'utils.py', 'restarter.py', 'signalkernel.py', 'kernelspecapp.py', 'kernelapp.py', 'test_kernelapp.py', 'win_interrupt.py', 'launcher.py'], 'execution_path_count': 535, 'function_id_to_name_file': {'621': 'test_find_all_specs(test_kernelspec.py)', '273': 'get_all_specs(kernelspec.py)', '272': 'find_kernel_specs(kernelspec.py)', '258': '_list_kernels_in(kernelspec.py)', '257': '_is_valid_kernel_name(kernelspec.py)', '256': '_is_kernel_dir(kernelspec.py)', '629': 'test_subclass(test_kernelspec.py)', '627': 'test_remove_kernel_spec(test_kernelspec.py)', '277': 'remove_kernel_spec(kernelspec.py)', '625': 'test_install_kernel_spec_prefix(test_kernelspec.py)', '626': 'test_kernel_spec_priority(test_kernelspec.py)', '624': 'test_install_kernel_spec(test_kernelspec.py)', '259': 'find_kernel_specs(kernelspec.py)', '622': 'test_find_kernel_specs(test_kernelspec.py)', '694': 'test_send(test_session.py)', '479': 'recv(session.py)', '474': 'deserialize(session.py)', '242': 'extract_dates(jsonutil.py)', '243': 'parse_date(jsonutil.py)', '240': '_ensure_tzinfo(jsonutil.py)', '492': 'handle(forward.py)', '695': 'test_send_raw(test_session.py)', '484': 'unserialize(session.py)', '696': 'test_serialize(test_session.py)', '578': 'test_parse_ms_precision(test_jsonutil.py)', '689': 'test_datetimes_msgpack(test_session.py)', '679': '_datetime_test(test_session.py)', '688': 'test_datetimes(test_session.py)', '690': 'test_datetimes_pickle(test_session.py)', '575': 'test_date_default(test_jsonutil.py)', '576': 'test_extract_date_from_naive(test_jsonutil.py)', '577': 'test_extract_dates(test_jsonutil.py)', '330': 'restart_kernel(manager.py)', '333': 'start_kernel(manager.py)', '326': '_launch_kernel(manager.py)', '322': 'start_new_async_kernel(manager.py)', '359': 'post_start_kernel(manager.py)', '338': '_connect_control_socket(manager.py)', '192': '_create_connected_socket(connect.py)', '196': '_make_url(connect.py)', '367': 'start_restarter(manager.py)', '635': 'test_connection_file_real_path(test_manager.py)', '353': 'format_kernel_cmd(manager.py)', '358': 'kernel_spec(manager.py)', '253': 'KernelSpec(kernelspec.py)', '360': 'pre_start_kernel(manager.py)', '369': 'from_ns(manager.py)', '212': 'write_connection_file(connect.py)', '197': '_record_random_port_names(connect.py)', '341': '_get_env_substitutions(manager.py)', '314': 'local_ips(localinterfaces.py)', '312': 'is_local_ip(localinterfaces.py)', '623': 'test_get_kernel_spec(test_kernelspec.py)', '267': '_find_spec_directory(kernelspec.py)', '632': 'find_kernel_specs(test_kernelspec.py)', '274': 'get_kernel_spec(kernelspec.py)', '633': 'get_kernel_spec(test_kernelspec.py)', '549': 'setUp(test_client.py)', '269': '_get_kernel_spec_by_name(kernelspec.py)', '255': 'NoSuchKernel(kernelspec.py)', '278': '__init__(kernelspec.py)', '260': 'get_kernel_spec(kernelspec.py)', '50': 'adapt(adapter.py)', '450': 'utcnow(session.py)', '516': 'test_default_version(test_adapter.py)', '698': 'test_tracking(test_session.py)', '480': 'send(session.py)', '328': 'interrupt_kernel(manager.py)', '559': 'test_app_load_connection_file(test_connect.py)', '191': 'write_connection_file(connect.py)', '109': 'close(channels.py)', '83': 'close(channels.py)', '315': 'localhost(localinterfaces.py)', '730': 'close(threaded.py)', '132': 'close(channels.py)', '211': 'ports(connect.py)', '718': 'close(threaded.py)', '565': 'test_load_connection_file_session_with_kn(test_connect.py)', '570': 'test_write_connection_file(test_connect.py)', '564': 'test_load_connection_file_session(test_connect.py)', '686': 'test_clone(test_session.py)', '458': '_add_digest(session.py)', '460': '_cull_digest_history(session.py)', '700': 'test_zero_digest_history(test_session.py)', '687': 'test_cull_digest_history(test_session.py)', '558': 'DummyConsoleApp(test_connect.py)', '214': 'JupyterConsoleApp(consoleapp.py)', '441': 'Session(session.py)', '188': 'ConnectionFileMixin(connect.py)', '560': 'test_find_connection_file(test_connect.py)', '213': 'IPythonConsoleApp(consoleapp.py)', '434': 'RunApp(runapp.py)', '665': 'test_start_sequence_tcp_kernels(test_multikernelmanager.py)', '655': '_get_tcp_km(test_multikernelmanager.py)', '392': '__init__(multikernelmanager.py)', '666': 'test_tcp_cinfo(test_multikernelmanager.py)', '668': 'test_tcp_lifecycle_with_kernel_id(test_multikernelmanager.py)', '661': 'test_shutdown_all(test_multikernelmanager.py)', '663': 'test_start_parallel_thread_kernels(test_multikernelmanager.py)', '658': 'tcp_lifecycle_with_loop(test_multikernelmanager.py)', '667': 'test_tcp_lifecycle(test_multikernelmanager.py)', '662': 'test_start_parallel_process_kernels(test_multikernelmanager.py)', '190': 'tunnel_to_kernel(connect.py)', '503': 'select_random_ports(tunnel.py)', '701': 'test_random_ports(test_ssh.py)', '386': 'shutdown_all(multikernelmanager.py)', '383': 'finish_shutdown(multikernelmanager.py)', '410': 'get_kernel(multikernelmanager.py)', '394': '_check_kernel_id(multikernelmanager.py)', '388': 'signal_kernel(multikernelmanager.py)', '385': 'restart_kernel(multikernelmanager.py)', '384': 'interrupt_kernel(multikernelmanager.py)', '387': 'shutdown_kernel(multikernelmanager.py)', '421': 'shutdown_kernel(multikernelmanager.py)', '420': 'shutdown_all(multikernelmanager.py)', '104': 'wait_for_ready(client.py)', '103': 'is_alive(client.py)', '412': 'is_alive(multikernelmanager.py)', '373': 'is_alive(managerabc.py)', '140': 'is_alive(channelsabc.py)', '732': 'is_alive(threaded.py)', '86': 'is_alive(channels.py)', '112': 'is_alive(channels.py)', '123': 'wait_for_ready(client.py)', '165': 'is_alive(client.py)', '648': 'test_start_parallel_thread_kernels(test_multikernelmanager.py)', '643': 'tcp_lifecycle_with_loop(test_multikernelmanager.py)', '642': 'raw_tcp_lifecycle(test_multikernelmanager.py)', '641': '_run_lifecycle(test_multikernelmanager.py)', '647': 'test_start_parallel_process_kernels(test_multikernelmanager.py)', '652': 'test_tcp_lifecycle(test_multikernelmanager.py)', '653': 'test_tcp_lifecycle_with_kernel_id(test_multikernelmanager.py)', '483': 'sign(session.py)', '440': 'Message(session.py)', '482': 'serialize(session.py)', '135': 'run(channels.py)', '128': '_create_socket(channels.py)', '84': 'get_msg(channels.py)', '82': '_recv(channels.py)', '101': 'get_stdin_msg(client.py)', '85': 'get_msgs(channels.py)', '99': 'get_iopub_msg(client.py)', '110': 'get_msg(channels.py)', '108': '_recv(channels.py)', '111': 'get_msgs(channels.py)', '620': 'test_cant_install_kernel_spec(test_kernelspec.py)', '275': 'install_kernel_spec(kernelspec.py)', '268': '_get_destination_dir(kernelspec.py)', '261': 'install_kernel_spec(kernelspec.py)', '614': 'test_start_sequence_process_kernels(test_kernelmanager.py)', '610': '_run_signaltest_lifecycle(test_kernelmanager.py)', '615': 'execute(test_kernelmanager.py)', '609': '_prepare_kernel(test_kernelmanager.py)', '611': 'test_start_parallel_process_kernels(test_kernelmanager.py)', '613': 'test_start_sequence_kernels(test_kernelmanager.py)', '612': 'test_start_parallel_thread_kernels(test_kernelmanager.py)', '398': '_kernel_manager_class_changed(multikernelmanager.py)', '396': '_create_kernel_manager_factory(multikernelmanager.py)', '424': 'create_kernel_manager(multikernelmanager.py)', '397': '_find_available_port(multikernelmanager.py)', '395': '_context_default(multikernelmanager.py)', '399': '_kernel_manager_factory_default(multikernelmanager.py)', '215': '__init__(consoleapp.py)', '485': '__init__(session.py)', '457': '__init__(session.py)', '465': '_new_auth(session.py)', '459': '_check_packers(session.py)', '244': 'squash_dates(jsonutil.py)', '90': 'AsyncKernelClient(client.py)', '147': 'KernelClient(client.py)', '139': 'HBChannelABC(channelsabc.py)', '138': 'ChannelABC(channelsabc.py)', '116': 'BlockingKernelClient(client.py)', '319': 'AsyncKernelManager(manager.py)', '320': 'KernelManager(manager.py)', '224': 'AsyncIOLoopKernelManager(manager.py)', '225': 'IOLoopKernelManager(manager.py)', '657': '_run_lifecycle(test_multikernelmanager.py)', '704': 'execute(utils.py)', '155': 'execute(client.py)', '148': 'validate_string_dict(client.py)', '734': 'send(threaded.py)', '738': 'thread_send(threaded.py)', '664': 'test_start_sequence_ipc_kernels(test_multikernelmanager.py)', '654': '_get_ipc_km(test_multikernelmanager.py)', '660': 'test_ipc_lifecycle(test_multikernelmanager.py)', '659': 'test_ipc_cinfo(test_multikernelmanager.py)', '423': 'start_kernel(multikernelmanager.py)', '415': 'pre_start_kernel(multikernelmanager.py)', '380': 'DuplicateKernelError(multikernelmanager.py)', '414': 'new_kernel_id(multikernelmanager.py)', '389': 'start_kernel(multikernelmanager.py)', '238': 'start(restarter.py)', '430': 'poll(restarter.py)', '433': 'stop(restarter.py)', '428': '_fire_callbacks(restarter.py)', '510': 'do_execute(signalkernel.py)', '501': 'openssh_tunnel(tunnel.py)', '494': 'SSHException(tunnel.py)', '497': '_stop_tunnel(tunnel.py)', '475': 'feed_identities(session.py)', '202': 'cleanup_random_ports(connect.py)', '200': 'cleanup_connection_file(connect.py)', '567': 'test_mixin_cleanup_random_ports(test_connect.py)', '106': 'ZMQSocketChannel(channels.py)', '226': 'as_zmqstream(manager.py)', '233': 'wrapped(manager.py)', '568': 'test_mixin_record_random_ports(test_connect.py)', '557': 'DummyConfigurable(test_connect.py)', '235': 'IOLoopKernelRestarter(restarter.py)', '426': 'KernelRestarter(restarter.py)', '234': 'AsyncIOLoopKernelRestarter(restarter.py)', '291': 'start(kernelspecapp.py)', '251': 'start(kernelapp.py)', '249': 'setup_signals(kernelapp.py)', '252': 'shutdown_handler(kernelapp.py)', '250': 'shutdown(kernelapp.py)', '248': 'log_connection_info(kernelapp.py)', '199': 'blocking_client(connect.py)', '208': 'get_connection_info(connect.py)', '725': 'stop_channels(threaded.py)', '684': 'test_bad_unpack(test_session.py)', '676': '_bad_unpacker(test_session.py)', '536': 'test_complete_request(test_adapter.py)', '517': 'adapt(test_adapter.py)', '562': 'test_find_connection_file_local(test_connect.py)', '189': 'find_connection_file(connect.py)', '493': 'SubHander(forward.py)', '490': 'Handler(forward.py)', '114': 'send(channels.py)', '88': 'send(channels.py)', '241': 'date_default(jsonutil.py)', '597': 'test_subclasses(test_kernelmanager.py)', '703': 'AsyncKernelManagerWithCleanup(utils.py)', '595': 'test_signal_kernel_subprocesses(test_kernelmanager.py)', '598': 'execute(test_kernelmanager.py)', '702': 'AsyncKernelManagerSubclass(utils.py)', '591': 'transport(test_kernelmanager.py)', '606': 'test_templated_kspec_env(test_kernelmanager.py)', '599': '_env_test_body(test_kernelmanager.py)', '607': 'execute(test_kernelmanager.py)', '604': 'test_signal_kernel_subprocesses(test_kernelmanager.py)', '608': 'execute(test_kernelmanager.py)', '586': 'env(test_kernelmanager.py)', '712': 'stop(utils.py)', '711': 'start(utils.py)', '705': 'test_env(utils.py)', '630': 'test_validate_kernel_name(test_kernelspec.py)', '506': 'SignalTestApp(signalkernel.py)', '507': 'SignalTestKernel(signalkernel.py)', '617': '_install_sample_kernel(test_kernelspec.py)', '651': 'test_tcp_cinfo(test_multikernelmanager.py)', '640': '_run_cinfo(test_multikernelmanager.py)', '619': 'tearDown(test_kernelspec.py)', '618': 'setUp(test_kernelspec.py)', '649': 'test_start_sequence_ipc_kernels(test_multikernelmanager.py)', '650': 'test_start_sequence_tcp_kernels(test_multikernelmanager.py)', '644': 'test_ipc_cinfo(test_multikernelmanager.py)', '645': 'test_ipc_lifecycle(test_multikernelmanager.py)', '656': '_run_cinfo(test_multikernelmanager.py)', '569': 'test_secure_write(test_connect.py)', '573': 'check_user_only_permissions(test_connect.py)', '574': 'fetch_win32_permissions(test_connect.py)', '563': 'test_find_connection_file_relative(test_connect.py)', '561': 'test_find_connection_file_abspath(test_connect.py)', '539': 'test_input_request(test_adapter.py)', '537': 'test_display_data(test_adapter.py)', '540': 'test_inspect_reply(test_adapter.py)', '543': 'test_kernel_info_reply(test_adapter.py)', '542': 'test_inspect_request_token(test_adapter.py)', '535': 'test_complete_reply(test_adapter.py)', '541': 'test_inspect_request(test_adapter.py)', '538': 'test_execute_request(test_adapter.py)', '545': 'test_rename_type(test_adapter.py)', '544': 'test_no_adapt(test_adapter.py)', '546': 'test_same_version(test_adapter.py)', '514': 'V5toV4TestCase(test_adapter.py)', '512': 'AdapterTest(test_adapter.py)', '526': 'test_input_request(test_adapter.py)', '523': 'test_display_data(test_adapter.py)', '527': 'test_kernel_info_reply(test_adapter.py)', '530': 'test_object_info_reply_not_found(test_adapter.py)', '529': 'test_object_info_reply(test_adapter.py)', '531': 'test_object_info_request(test_adapter.py)', '521': 'test_complete_reply(test_adapter.py)', '522': 'test_complete_request(test_adapter.py)', '524': 'test_execute_reply(test_adapter.py)', '532': 'test_rename_type(test_adapter.py)', '525': 'test_execute_request(test_adapter.py)', '528': 'test_no_adapt(test_adapter.py)', '533': 'test_same_version(test_adapter.py)', '513': 'V4toV5TestCase(test_adapter.py)', '519': 'setUp(test_adapter.py)', '515': 'test_code_to_line_no_code(test_adapter.py)', '51': 'code_to_line(adapter.py)', '158': 'get_shell_msg(client.py)', '157': 'get_iopub_msg(client.py)', '710': '__exit__(utils.py)', '709': '__enter__(utils.py)', '580': 'test_kernelapp_lifecycle(test_kernelapp.py)', '579': '_launch(test_kernelapp.py)', '473': 'clone(session.py)', '481': 'send_raw(session.py)', '683': 'test_bad_roundtrip(test_session.py)', '685': 'test_bad_unpacker(test_session.py)', '682': 'test_bad_packer(test_session.py)', '681': 'test_bad_pack(test_session.py)', '675': '_bad_packer(test_session.py)', '697': 'test_session_id(test_session.py)', '699': 'test_unique_msg_ids(test_session.py)', '445': 'msg_header(session.py)', '680': 'test_args(test_session.py)', '478': 'msg_id(session.py)', '674': 'TestSession(test_session.py)', '673': 'SessionTestCase(test_session.py)', '678': 'setUp(test_session.py)', '556': 'test_shutdown(test_client.py)', '548': '_check_reply(test_client.py)', '550': 'test_comm_info(test_client.py)', '555': 'test_kernel_info(test_client.py)', '551': 'test_complete(test_client.py)', '554': 'test_inspect(test_client.py)', '553': 'test_history(test_client.py)', '117': 'reqrep(client.py)', '124': 'wrapped(client.py)', '150': '_handle_kernel_info_reply(client.py)', '125': 'HBChannel(channels.py)', '102': 'hb_channel(client.py)', '91': 'reqrep(client.py)', '105': 'wrapped(client.py)', '80': 'ZMQSocketChannel(channels.py)', '154': 'control_channel(client.py)', '723': 'ioloop(threaded.py)', '160': 'hb_channel(client.py)', '171': 'stdin_channel(client.py)', '164': 'iopub_channel(client.py)', '168': 'shell_channel(client.py)', '740': 'send_interrupt(win_interrupt.py)', '334': '__del__(manager.py)', '293': 'start(kernelspecapp.py)', '294': 'path_key(kernelspecapp.py)', '735': 'start(threaded.py)', '720': 'start(threaded.py)', '141': 'start(channelsabc.py)', '432': 'start(restarter.py)', '288': 'start(kernelspecapp.py)', '89': 'start(channels.py)', '115': 'start(channels.py)', '290': 'start(kernelspecapp.py)', '438': 'parse_command_line(runapp.py)', '218': 'build_kernel_argv(consoleapp.py)', '308': '_only_once(localinterfaces.py)', '317': 'wrapped(localinterfaces.py)', '47': 'V4toV5(adapter.py)', '46': 'Adapter(adapter.py)', '77': 'object_info_request(adapter.py)', '52': 'extract_oname_v4(adapter.py)', '70': 'complete_request(adapter.py)', '75': 'kernel_info_reply(adapter.py)', '49': '_version_str_to_list(adapter.py)', '48': 'V5toV4(adapter.py)', '53': '__call__(adapter.py)', '54': 'handle_reply_status_error(adapter.py)', '57': 'update_msg_type(adapter.py)', '56': 'update_metadata(adapter.py)', '55': 'update_header(adapter.py)', '247': 'initialize(kernelapp.py)', '246': '_record_started(kernelapp.py)', '585': 'config(test_kernelmanager.py)', '262': 'install_native_kernel_spec(kernelspec.py)', '276': 'install_native_kernel_spec(kernelspec.py)', '265': 'to_json(kernelspec.py)', '264': 'to_dict(kernelspec.py)', '449': 'test_msg2obj(session.py)', '453': '__init__(session.py)', '470': '_signature_scheme_changed(session.py)', '463': '_key_default(session.py)', '447': 'new_id_bytes(session.py)', '462': '_key_changed(session.py)', '443': 'default_secure(session.py)', '469': '_session_default(session.py)', '446': 'new_id(session.py)', '413': 'list_kernel_ids(multikernelmanager.py)', '721': 'stop(threaded.py)', '724': 'start_channels(threaded.py)', '722': '_check_kernel_info_reply(threaded.py)', '716': '__init__(threaded.py)', '416': 'remove_kernel(multikernelmanager.py)', '713': 'IOLoopThread(threaded.py)', '714': 'ThreadedKernelClient(threaded.py)', '715': 'ThreadedZMQSocketChannel(threaded.py)', '731': 'flush(threaded.py)', '727': '_flush(threaded.py)', '418': 'request_shutdown(multikernelmanager.py)', '402': 'cleanup_resources(multikernelmanager.py)', '408': 'finish_shutdown(multikernelmanager.py)', '393': '__len__(multikernelmanager.py)', '198': '_session_default(connect.py)', '298': 'launch_kernel(launcher.py)', '739': 'create_interrupt_event(win_interrupt.py)', '741': 'SECURITY_ATTRIBUTES(win_interrupt.py)', '509': '__init__(signalkernel.py)', '127': '__init__(channels.py)', '126': 'InvalidPortNumber(channels.py)', '107': '__init__(channels.py)', '81': '__init__(channels.py)', '726': '__init__(threaded.py)', '737': 'setup_stream(threaded.py)', '728': '_handle_recv(threaded.py)', '729': 'call_handlers(threaded.py)', '136': 'stop(channels.py)', '133': 'is_beating(channels.py)', '145': 'time_to_dead(channelsabc.py)', '131': 'call_handlers(channels.py)', '130': '_poll(channels.py)'}}, {'key': 2001, 'parent': 2699, 'tfidf_word': 'handle header id initialize interrupt kernel sigint send msg ', 'tfidf_method': 'interrupt_kernel handle_sigint initialize msg msg_header msg_id msg msg send ', 'lda_word': ' msg,sigint,handle,interrupt,kernel,', 'lda_method': ' msg,interrupt_kernel,msg_id,msg_header,handle_sigint,', 'lsi_word': ' msg,handle,header,sigint,interrupt,', 'lsi_method': ' msg,msg_header,msg_id,initialize,handle_sigint,', 'spm_method': '  &#187; initialize(runapp.py) &rarr; handle_sigint(runapp.py) &rarr; interrupt_kernel(manager.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; handle_sigint(runapp.py) &rarr; interrupt_kernel(manager.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br>', 'text_summary': '', 'files_count': 4, 'files': ['runapp.py', 'manager.py', 'session.py', 'test_adapter.py'], 'execution_path_count': 6, 'function_id_to_name_file': {'437': 'initialize(runapp.py)', '435': 'handle_sigint(runapp.py)', '355': 'interrupt_kernel(manager.py)', '476': 'msg(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '480': 'send(session.py)', '520': 'msg(test_adapter.py)', '534': 'msg(test_adapter.py)'}}, {'key': 2676, 'parent': 2699, 'tfidf_word': 'sign serialize adapt message control utcnow kernel msg socket connect ', 'tfidf_method': 'send Message utcnow send_interrupt interrupt_kernel interrupt_kernel signal_kernel _connect_control_socket serialize send ', 'lda_word': ' msg,interrupt,sigint,handle,initialize,', 'lda_method': ' initialize,interrupt_kernel,handle_sigint,msg,send,', 'lsi_word': ' kernel,interrupt,sigint,initialize,handle,', 'lsi_method': ' interrupt_kernel,initialize,handle_sigint,msg,extract_header,', 'spm_method': '  &#187; initialize(runapp.py) &rarr; handle_sigint(runapp.py) &rarr; interrupt_kernel(manager.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br>', 'text_summary': 'Given a message or header, return the header. Interrupts the kernel by sending it a signal. Pass a message to the ZMQ socket to send.', 'files_count': 11, 'files': ['runapp.py', 'manager.py', 'session.py', 'test_adapter.py', 'multikernelmanager.py', 'managerabc.py', 'adapter.py', 'connect.py', 'threaded.py', 'channels.py', 'win_interrupt.py'], 'execution_path_count': 19, 'function_id_to_name_file': {'437': 'initialize(runapp.py)', '435': 'handle_sigint(runapp.py)', '355': 'interrupt_kernel(manager.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '480': 'send(session.py)', '520': 'msg(test_adapter.py)', '534': 'msg(test_adapter.py)', '411': 'interrupt_kernel(multikernelmanager.py)', '372': 'interrupt_kernel(managerabc.py)', '50': 'adapt(adapter.py)', '450': 'utcnow(session.py)', '482': 'serialize(session.py)', '483': 'sign(session.py)', '440': 'Message(session.py)', '354': 'has_kernel(manager.py)', '347': '_launch_kernel(manager.py)', '365': 'signal_kernel(manager.py)', '338': '_connect_control_socket(manager.py)', '192': '_create_connected_socket(connect.py)', '196': '_make_url(connect.py)', '734': 'send(threaded.py)', '738': 'thread_send(threaded.py)', '114': 'send(channels.py)', '88': 'send(channels.py)', '740': 'send_interrupt(win_interrupt.py)'}}, {'key': 2745, 'parent': 2785, 'tfidf_word': 'server split openssh forward exception ssh stop port tunnel msg ', 'tfidf_method': 'openssh_tunnel close close _stop_tunnel SSHException forward_tunnel ports close close close ', 'lda_word': ' tunnel,connection,open,port,select,', 'lda_method': ' paramiko_tunnel,split_server,open_tunnel,tunnel_connection,try_passwordless_paramiko,', 'lsi_word': ' tunnel,msg,paramiko,open,connection,', 'lsi_method': ' msg,open_tunnel,tunnel_connection,paramiko_tunnel,try_passwordless_paramiko,', 'spm_method': '  &#187; tunnel_connection(tunnel.py) &rarr; open_tunnel(tunnel.py) &rarr; paramiko_tunnel(tunnel.py) &rarr; _try_passwordless_paramiko(tunnel.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; open_tunnel(tunnel.py) &rarr; paramiko_tunnel(tunnel.py) &rarr; _try_passwordless_paramiko(tunnel.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; paramiko_tunnel(tunnel.py) &rarr; _try_passwordless_paramiko(tunnel.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br>', 'text_summary': 'Create an ssh tunnel using command-line ssh that connects port lport. Select and return n random ports that are available. This should only be used Try passwordless login with paramiko. launch a tunner with paramiko in a subprocess.', 'files_count': 7, 'files': ['tunnel.py', 'test_adapter.py', 'session.py', 'threaded.py', 'channels.py', 'connect.py', 'forward.py'], 'execution_path_count': 21, 'function_id_to_name_file': {'505': 'tunnel_connection(tunnel.py)', '500': 'open_tunnel(tunnel.py)', '502': 'paramiko_tunnel(tunnel.py)', '499': '_try_passwordless_paramiko(tunnel.py)', '520': 'msg(test_adapter.py)', '476': 'msg(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '534': 'msg(test_adapter.py)', '444': 'extract_header(session.py)', '496': '_split_server(tunnel.py)', '503': 'select_random_ports(tunnel.py)', '730': 'close(threaded.py)', '718': 'close(threaded.py)', '109': 'close(channels.py)', '132': 'close(channels.py)', '83': 'close(channels.py)', '211': 'ports(connect.py)', '495': '_paramiko_tunnel(tunnel.py)', '491': 'forward_tunnel(forward.py)', '501': 'openssh_tunnel(tunnel.py)', '494': 'SSHException(tunnel.py)', '497': '_stop_tunnel(tunnel.py)'}}, {'key': 2776, 'parent': 2785, 'tfidf_word': 'passwordless ssh start split exception server openssh get shell msg ', 'tfidf_method': 'start start kernel_info input get_shell_msg unpause SSHException _split_server _try_passwordless_openssh unpause ', 'lda_word': ' msg,try,passwordless,kernel,header,', 'lda_method': ' msg,extract_header,start,try_passwordless_paramiko,try_passwordless_ssh,', 'lsi_word': ' msg,kernel,header,try,passwordless,', 'lsi_method': ' msg,start,msg_header,msg_id,extract_header,', 'spm_method': '  &#187; initialize(runapp.py) &rarr; init_kernel_info(runapp.py) &rarr; kernel_info(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; init_kernel_info(runapp.py) &rarr; kernel_info(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; start(kernelspecapp.py) &rarr; start(kernelspecapp.py) &rarr; input(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; start(kernelspecapp.py) &rarr; input(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; tunnel_to_kernel(connect.py) &rarr; try_passwordless_ssh(tunnel.py) &rarr; _try_passwordless_paramiko(tunnel.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; try_passwordless_ssh(tunnel.py) &rarr; _try_passwordless_paramiko(tunnel.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br>', 'text_summary': 'tunnel connections to a kernel via ssh. Try passwordless login with paramiko. Attempt to make an ssh connection without a password. Request kernel info. Try passwordless login with shell ssh command.', 'files_count': 9, 'files': ['runapp.py', 'client.py', 'channels.py', 'channelsabc.py', 'test_adapter.py', 'session.py', 'kernelspecapp.py', 'connect.py', 'tunnel.py'], 'execution_path_count': 35, 'function_id_to_name_file': {'437': 'initialize(runapp.py)', '436': 'init_kernel_info(runapp.py)', '158': 'get_shell_msg(client.py)', '137': 'unpause(channels.py)', '146': 'unpause(channelsabc.py)', '167': 'kernel_info(client.py)', '534': 'msg(test_adapter.py)', '476': 'msg(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '520': 'msg(test_adapter.py)', '444': 'extract_header(session.py)', '291': 'start(kernelspecapp.py)', '297': 'start(kernelspecapp.py)', '162': 'input(client.py)', '190': 'tunnel_to_kernel(connect.py)', '504': 'try_passwordless_ssh(tunnel.py)', '499': '_try_passwordless_paramiko(tunnel.py)', '498': '_try_passwordless_openssh(tunnel.py)', '494': 'SSHException(tunnel.py)', '496': '_split_server(tunnel.py)'}}, {'key': 2360, 'parent': 2743, 'tfidf_word': 'start new restart cleanup socket execute poll run async kernel ', 'tfidf_method': 'shutdown_kernel cleanup shutdown_kernel poll run_kernel start_new_async_kernel start_new_kernel restart_kernel restart_kernel do_execute ', 'lda_word': ' kernel,socket,cleanup,create,resource,', 'lda_method': ' create_connected_socket,cleanup_resources,close_control_socket,shutdown_kernel,make_url,', 'lsi_word': ' kernel,socket,cleanup,close,connect,', 'lsi_method': ' create_connected_socket,close_control_socket,shutdown_kernel,cleanup_resources,make_url,', 'spm_method': '  &#187; restart_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; cleanup_resources(manager.py) &rarr; _close_control_socket(manager.py) &rarr; _create_connected_socket(connect.py) &rarr; _make_url(connect.py) . <br> &#187; shutdown_kernel(manager.py) &rarr; cleanup(manager.py) &rarr; cleanup_resources(manager.py) &rarr; _close_control_socket(manager.py) &rarr; _create_connected_socket(connect.py) &rarr; _make_url(connect.py) . <br> &#187; start_new_async_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; cleanup_resources(manager.py) &rarr; _close_control_socket(manager.py) &rarr; _create_connected_socket(connect.py) &rarr; _make_url(connect.py) . <br> &#187; do_execute(signalkernel.py) &rarr; poll(restarter.py) &rarr; restart_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; cleanup_resources(manager.py) &rarr; _close_control_socket(manager.py) &rarr; _create_connected_socket(connect.py) &rarr; _make_url(connect.py) . <br> &#187; poll(restarter.py) &rarr; restart_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; cleanup_resources(manager.py) &rarr; _close_control_socket(manager.py) &rarr; _create_connected_socket(connect.py) &rarr; _make_url(connect.py) . <br> &#187; restart_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; cleanup_resources(manager.py) &rarr; _close_control_socket(manager.py) &rarr; _create_connected_socket(connect.py) &rarr; _make_url(connect.py) . <br> &#187; shutdown_kernel(manager.py) &rarr; cleanup(manager.py) &rarr; cleanup_resources(manager.py) &rarr; _close_control_socket(manager.py) &rarr; _create_connected_socket(connect.py) &rarr; _make_url(connect.py) . <br> &#187; run_kernel(manager.py) &rarr; start_new_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; cleanup_resources(manager.py) &rarr; _close_control_socket(manager.py) &rarr; _create_connected_socket(connect.py) &rarr; _make_url(connect.py) . <br> &#187; start_new_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; cleanup_resources(manager.py) &rarr; _close_control_socket(manager.py) &rarr; _create_connected_socket(connect.py) &rarr; _make_url(connect.py) . <br>', 'text_summary': 'Start a new kernel, and return its Manager and Client. Create a zmq Socket and connect it to the kernel. Context manager to create a kernel in a subprocess.', 'files_count': 4, 'files': ['manager.py', 'connect.py', 'signalkernel.py', 'restarter.py'], 'execution_path_count': 8, 'function_id_to_name_file': {'330': 'restart_kernel(manager.py)', '331': 'shutdown_kernel(manager.py)', '349': 'cleanup(manager.py)', '350': 'cleanup_resources(manager.py)', '337': '_close_control_socket(manager.py)', '192': '_create_connected_socket(connect.py)', '196': '_make_url(connect.py)', '322': 'start_new_async_kernel(manager.py)', '510': 'do_execute(signalkernel.py)', '236': 'poll(restarter.py)', '363': 'restart_kernel(manager.py)', '364': 'shutdown_kernel(manager.py)', '321': 'run_kernel(manager.py)', '323': 'start_new_kernel(manager.py)'}}, {'key': 2707, 'parent': 2743, 'tfidf_word': 'restart start interrupt del close control shutdown iopub stdin shell ', 'tfidf_method': 'connect_hb start_new_async_kernel interrupt_kernel restart_kernel stdin_channel shell_channel iopub_channel __del__ _close_control_socket control_channel ', 'lda_word': ' kernel,shutdown,connect,socket,url,', 'lda_method': ' connect_control,create_connected_socket,make_url,control_channel,asyncioloopkernelmanager,', 'lsi_word': ' connect,socket,kernel,create,make,', 'lsi_method': ' make_url,create_connected_socket,ioloopkernelmanager,asyncioloopkernelmanager,request_shutdown,', 'spm_method': ' ', 'text_summary': 'return zmq Socket connected to the StdIn channel. return zmq Socket connected to the Heartbeat channel. return zmq Socket connected to the Shell channel. return zmq Socket connected to the IOPub channel. return zmq Socket connected to the Control channel. Create a zmq Socket and connect it to the kernel.', 'files_count': 3, 'files': ['manager.py', 'connect.py', 'client.py'], 'execution_path_count': 21, 'function_id_to_name_file': {'330': 'restart_kernel(manager.py)', '331': 'shutdown_kernel(manager.py)', '362': 'request_shutdown(manager.py)', '192': '_create_connected_socket(connect.py)', '196': '_make_url(connect.py)', '322': 'start_new_async_kernel(manager.py)', '328': 'interrupt_kernel(manager.py)', '338': '_connect_control_socket(manager.py)', '224': 'AsyncIOLoopKernelManager(manager.py)', '203': 'connect_control(connect.py)', '154': 'control_channel(client.py)', '225': 'IOLoopKernelManager(manager.py)', '207': 'connect_stdin(connect.py)', '171': 'stdin_channel(client.py)', '206': 'connect_shell(connect.py)', '168': 'shell_channel(client.py)', '205': 'connect_iopub(connect.py)', '164': 'iopub_channel(client.py)', '204': 'connect_hb(connect.py)', '334': '__del__(manager.py)', '337': '_close_control_socket(manager.py)'}}, {'key': 2742, 'parent': 2788, 'tfidf_word': 'interrupt restarter interactive start async stop channels beating poll kernel ', 'tfidf_method': 'poll start_restarter start_restarter is_alive is_beating wait_for_ready execute_interactive wait_for_ready stop_channels execute_interactive ', 'lda_word': ' kernel,launch,alive,start,shutdown,', 'lda_method': ' has_kernel,launch_kernel,is_alive,do_execute,interrupt_kernel,', 'lsi_word': ' kernel,shutdown,launch,async,kill,', 'lsi_method': ' launch_kernel,has_kernel,shutdown_kernel,is_alive,kill_kernel,', 'spm_method': '  &#187; restart_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; finish_shutdown(manager.py) &rarr; _async_wait(manager.py) &rarr; is_alive(manager.py) &rarr; has_kernel(manager.py) &rarr; _launch_kernel(manager.py) . <br> &#187; shutdown_kernel(manager.py) &rarr; finish_shutdown(manager.py) &rarr; _kill_kernel(manager.py) &rarr; _async_wait(manager.py) &rarr; is_alive(manager.py) &rarr; has_kernel(manager.py) &rarr; _launch_kernel(manager.py) . <br> &#187; finish_shutdown(manager.py) &rarr; _kill_kernel(manager.py) &rarr; _async_wait(manager.py) &rarr; is_alive(manager.py) &rarr; has_kernel(manager.py) &rarr; _launch_kernel(manager.py) . <br> &#187; start_new_async_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; finish_shutdown(manager.py) &rarr; _async_wait(manager.py) &rarr; is_alive(manager.py) &rarr; has_kernel(manager.py) &rarr; _launch_kernel(manager.py) . <br>', 'text_summary': "Has a kernel been started that we are managing. Start the polling of the kernel. Sends a signal to the process group of the kernel (this. Wait for kernel shutdown, then kill process if it doesn't shutdown. Interrupts the kernel by sending it a signal. Kill the running kernel.", 'files_count': 8, 'files': ['manager.py', 'kernelspecapp.py', 'runapp.py', 'client.py', 'signalkernel.py', 'restarter.py', 'channels.py', 'threaded.py'], 'execution_path_count': 25, 'function_id_to_name_file': {'228': 'start_restarter(manager.py)', '354': 'has_kernel(manager.py)', '347': '_launch_kernel(manager.py)', '328': 'interrupt_kernel(manager.py)', '231': 'start_restarter(manager.py)', '291': 'start(kernelspecapp.py)', '439': 'start(runapp.py)', '122': 'execute_interactive(client.py)', '357': 'is_alive(manager.py)', '97': 'execute_interactive(client.py)', '510': 'do_execute(signalkernel.py)', '236': 'poll(restarter.py)', '123': 'wait_for_ready(client.py)', '165': 'is_alive(client.py)', '104': 'wait_for_ready(client.py)', '103': 'is_alive(client.py)', '133': 'is_beating(channels.py)', '725': 'stop_channels(threaded.py)', '330': 'restart_kernel(manager.py)', '331': 'shutdown_kernel(manager.py)', '327': 'finish_shutdown(manager.py)', '324': '_async_wait(manager.py)', '329': 'is_alive(manager.py)', '322': 'start_new_async_kernel(manager.py)', '325': '_kill_kernel(manager.py)', '332': 'signal_kernel(manager.py)'}}, {'key': 2775, 'parent': 2788, 'tfidf_word': 'sign serialize utcnow restarter thread message kernel send msg cleanup ', 'tfidf_method': 'send send adapt stop_restarter serialize utcnow Message thread_send sign send ', 'lda_word': ' shutdown,kernel,send,request,restart,', 'lda_method': ' shutdown_kernel,launch_kernel,finish_shutdown,kill_kernel,restart_kernel,', 'lsi_word': ' kernel,shutdown,msg,request,async,', 'lsi_method': ' msg,shutdown_kernel,request_shutdown,extract_header,start_new_async_kernel,', 'spm_method': '  &#187; restart_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br> &#187; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) &rarr; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br> &#187; start_new_async_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br>', 'text_summary': "actually launch the kernel. Cleanup connection file *if we wrote it*. If no auth, return b''. Pass a message to the ZMQ socket to send. Wait for kernel shutdown, then kill process if it doesn't shutdown. Given a message or header, return the header. Cleanup ipc files if we wrote them. Kill the running kernel.", 'files_count': 7, 'files': ['manager.py', 'session.py', 'test_adapter.py', 'adapter.py', 'threaded.py', 'channels.py', 'connect.py'], 'execution_path_count': 40, 'function_id_to_name_file': {'330': 'restart_kernel(manager.py)', '331': 'shutdown_kernel(manager.py)', '362': 'request_shutdown(manager.py)', '480': 'send(session.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '322': 'start_new_async_kernel(manager.py)', '520': 'msg(test_adapter.py)', '534': 'msg(test_adapter.py)', '50': 'adapt(adapter.py)', '450': 'utcnow(session.py)', '482': 'serialize(session.py)', '483': 'sign(session.py)', '440': 'Message(session.py)', '734': 'send(threaded.py)', '738': 'thread_send(threaded.py)', '88': 'send(channels.py)', '114': 'send(channels.py)', '368': 'stop_restarter(manager.py)', '327': 'finish_shutdown(manager.py)', '326': '_launch_kernel(manager.py)', '325': '_kill_kernel(manager.py)', '349': 'cleanup(manager.py)', '350': 'cleanup_resources(manager.py)', '201': 'cleanup_ipc_files(connect.py)', '211': 'ports(connect.py)', '200': 'cleanup_connection_file(connect.py)'}}, {'key': 973, 'parent': 1544, 'tfidf_word': 'EP: 973, Name: test_display_data &rarr; msg &rarr; msg &rarr; msg &rarr; msg_header &rarr; msg_id', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1543, 'parent': 1544, 'tfidf_word': 'rename adapt type interrupt identity found feed raw version msg ', 'tfidf_method': 'test_no_adapt test_send_raw test_kernel_info_reply test_execute_request test_execute_reply test_complete_request test_complete_reply interrupt_kernel test_object_info_reply test_serialize ', 'lda_word': ' msg,test,header,reply,object,', 'lda_method': ' msg,msg_id,msg_header,test_kernel_info_reply,test_serialize,', 'lsi_word': ' msg,header,test,reply,info,', 'lsi_method': ' msg,msg_header,msg_id,test_send,test_send_raw,', 'spm_method': ' ', 'text_summary': 'Ask the kernel whether some code is complete and ready to execute.', 'files_count': 5, 'files': ['test_adapter.py', 'session.py', 'test_session.py', 'manager.py', 'client.py'], 'execution_path_count': 18, 'function_id_to_name_file': {'527': 'test_kernel_info_reply(test_adapter.py)', '520': 'msg(test_adapter.py)', '534': 'msg(test_adapter.py)', '476': 'msg(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '530': 'test_object_info_reply_not_found(test_adapter.py)', '529': 'test_object_info_reply(test_adapter.py)', '531': 'test_object_info_request(test_adapter.py)', '521': 'test_complete_reply(test_adapter.py)', '522': 'test_complete_request(test_adapter.py)', '524': 'test_execute_reply(test_adapter.py)', '525': 'test_execute_request(test_adapter.py)', '532': 'test_rename_type(test_adapter.py)', '528': 'test_no_adapt(test_adapter.py)', '533': 'test_same_version(test_adapter.py)', '695': 'test_send_raw(test_session.py)', '692': 'test_feed_identities(test_session.py)', '694': 'test_send(test_session.py)', '696': 'test_serialize(test_session.py)', '693': 'test_msg(test_session.py)', '328': 'interrupt_kernel(manager.py)', '166': 'is_complete(client.py)'}}, {'key': 1037, 'parent': 1664, 'tfidf_word': 'EP: 1037, Name: test_input_request &rarr; msg &rarr; msg &rarr; msg_header &rarr; msg_id', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1663, 'parent': 1664, 'tfidf_word': 'type info identity feed execute display data kernel version msg ', 'tfidf_method': 'test_kernel_info_reply test_inspect_request_token test_inspect_reply test_send test_execute_request test_display_data test_complete_request test_complete_reply test_inspect_request test_send_raw ', 'lda_word': ' msg,complete,request,test,header,', 'lda_method': ' msg,msg_header,msg_id,test_rename_type,test_feed_identities,', 'lsi_word': ' msg,test,header,request,inspect,', 'lsi_method': ' msg,msg_header,msg_id,test_display_data,test_complete_reply,', 'spm_method': ' ', 'text_summary': 'Empty', 'files_count': 3, 'files': ['test_adapter.py', 'session.py', 'test_session.py'], 'execution_path_count': 14, 'function_id_to_name_file': {'537': 'test_display_data(test_adapter.py)', '534': 'msg(test_adapter.py)', '476': 'msg(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '543': 'test_kernel_info_reply(test_adapter.py)', '540': 'test_inspect_reply(test_adapter.py)', '542': 'test_inspect_request_token(test_adapter.py)', '541': 'test_inspect_request(test_adapter.py)', '535': 'test_complete_reply(test_adapter.py)', '536': 'test_complete_request(test_adapter.py)', '538': 'test_execute_request(test_adapter.py)', '545': 'test_rename_type(test_adapter.py)', '546': 'test_same_version(test_adapter.py)', '544': 'test_no_adapt(test_adapter.py)', '695': 'test_send_raw(test_session.py)', '694': 'test_send(test_session.py)', '692': 'test_feed_identities(test_session.py)'}}, {'key': 752, 'parent': 1724, 'tfidf_word': 'EP: 752, Name: test_serialize &rarr; msg &rarr; msg &rarr; msg_header &rarr; msg_id', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1722, 'parent': 1724, 'tfidf_word': 'header id complete interrupt kernel test msg ', 'tfidf_method': 'msg msg_header msg_id msg is_complete interrupt_kernel test_msg ', 'lda_word': ' msg,header,kernel,test,interrupt,', 'lda_method': ' msg,msg_id,msg_header,interrupt_kernel,test_msg,', 'lsi_word': ' msg,header,test,interrupt,kernel,', 'lsi_method': ' msg,msg_header,msg_id,test_msg,is_complete,', 'spm_method': ' ', 'text_summary': '', 'files_count': 5, 'files': ['test_session.py', 'test_adapter.py', 'session.py', 'manager.py', 'client.py'], 'execution_path_count': 3, 'function_id_to_name_file': {'693': 'test_msg(test_session.py)', '534': 'msg(test_adapter.py)', '476': 'msg(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '328': 'interrupt_kernel(manager.py)', '166': 'is_complete(client.py)'}}, {'key': 512, 'parent': 1421, 'tfidf_word': 'EP: 512, Name: AsyncKernelClient &rarr; history &rarr; msg &rarr; msg &rarr; msg &rarr; msg_header &rarr; msg_id', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 627, 'parent': 1421, 'tfidf_word': 'EP: 627, Name: BlockingKernelClient &rarr; history &rarr; msg &rarr; msg &rarr; msg &rarr; msg_header &rarr; msg_id', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1039, 'parent': 1557, 'tfidf_word': 'EP: 1039, Name: test_input_request &rarr; msg &rarr; msg &rarr; msg &rarr; msg_header &rarr; msg_id', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1556, 'parent': 1557, 'tfidf_word': 'interrupt type info identity feed execute display data version msg ', 'tfidf_method': 'test_inspect_reply test_inspect_request test_send_raw test_execute_request test_display_data test_complete_request test_complete_reply interrupt_kernel test_inspect_request_token test_serialize ', 'lda_word': ' msg,header,test,reply,request,', 'lda_method': ' msg,msg_header,msg_id,test_msg,test_no_adapt,', 'lsi_word': ' msg,header,test,request,inspect,', 'lsi_method': ' msg,msg_header,msg_id,test_display_data,test_execute_request,', 'spm_method': ' ', 'text_summary': 'message format.', 'files_count': 5, 'files': ['test_adapter.py', 'session.py', 'test_session.py', 'manager.py', 'client.py'], 'execution_path_count': 18, 'function_id_to_name_file': {'537': 'test_display_data(test_adapter.py)', '534': 'msg(test_adapter.py)', '520': 'msg(test_adapter.py)', '476': 'msg(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '543': 'test_kernel_info_reply(test_adapter.py)', '540': 'test_inspect_reply(test_adapter.py)', '542': 'test_inspect_request_token(test_adapter.py)', '541': 'test_inspect_request(test_adapter.py)', '535': 'test_complete_reply(test_adapter.py)', '536': 'test_complete_request(test_adapter.py)', '538': 'test_execute_request(test_adapter.py)', '545': 'test_rename_type(test_adapter.py)', '544': 'test_no_adapt(test_adapter.py)', '546': 'test_same_version(test_adapter.py)', '695': 'test_send_raw(test_session.py)', '692': 'test_feed_identities(test_session.py)', '694': 'test_send(test_session.py)', '696': 'test_serialize(test_session.py)', '693': 'test_msg(test_session.py)', '328': 'interrupt_kernel(manager.py)', '166': 'is_complete(client.py)'}}, {'key': 506, 'parent': 1492, 'tfidf_word': 'EP: 506, Name: AsyncKernelClient &rarr; history &rarr; msg &rarr; msg &rarr; msg_header &rarr; msg_id', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 621, 'parent': 1492, 'tfidf_word': 'EP: 621, Name: BlockingKernelClient &rarr; history &rarr; msg &rarr; msg &rarr; msg_header &rarr; msg_id', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1654, 'parent': 1726, 'tfidf_word': 'input kernel type identity found feed display data version msg ', 'tfidf_method': 'test_no_adapt test_input_request test_send test_execute_request test_execute_reply test_display_data test_complete_request test_complete_reply test_kernel_info_reply test_send_raw ', 'lda_word': ' msg,version,test,header,reply,', 'lda_method': ' msg_header,msg,msg_id,test_display_data,test_no_adapt,', 'lsi_word': ' msg,test,header,reply,info,', 'lsi_method': ' msg,msg_header,msg_id,test_display_data,test_object_info_request,', 'spm_method': ' ', 'text_summary': 'Empty', 'files_count': 3, 'files': ['test_adapter.py', 'session.py', 'test_session.py'], 'execution_path_count': 16, 'function_id_to_name_file': {'526': 'test_input_request(test_adapter.py)', '520': 'msg(test_adapter.py)', '476': 'msg(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '523': 'test_display_data(test_adapter.py)', '527': 'test_kernel_info_reply(test_adapter.py)', '530': 'test_object_info_reply_not_found(test_adapter.py)', '529': 'test_object_info_reply(test_adapter.py)', '531': 'test_object_info_request(test_adapter.py)', '521': 'test_complete_reply(test_adapter.py)', '522': 'test_complete_request(test_adapter.py)', '524': 'test_execute_reply(test_adapter.py)', '525': 'test_execute_request(test_adapter.py)', '532': 'test_rename_type(test_adapter.py)', '533': 'test_same_version(test_adapter.py)', '528': 'test_no_adapt(test_adapter.py)', '695': 'test_send_raw(test_session.py)', '694': 'test_send(test_session.py)', '692': 'test_feed_identities(test_session.py)'}}, {'key': 1723, 'parent': 1726, 'tfidf_word': 'header id test complete interrupt kernel serialize msg ', 'tfidf_method': 'msg msg_header msg_id msg is_complete interrupt_kernel test_msg test_serialize ', 'lda_word': ' msg,header,test,serialize,complete,', 'lda_method': ' msg,msg_id,msg_header,is_complete,test_serialize,', 'lsi_word': ' msg,header,test,serialize,interrupt,', 'lsi_method': ' msg,msg_id,msg_header,interrupt_kernel,test_serialize,', 'spm_method': ' ', 'text_summary': '', 'files_count': 5, 'files': ['test_session.py', 'test_adapter.py', 'session.py', 'manager.py', 'client.py'], 'execution_path_count': 4, 'function_id_to_name_file': {'696': 'test_serialize(test_session.py)', '520': 'msg(test_adapter.py)', '476': 'msg(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '693': 'test_msg(test_session.py)', '328': 'interrupt_kernel(manager.py)', '166': 'is_complete(client.py)'}}, {'key': 528, 'parent': 1706, 'tfidf_word': 'EP: 528, Name: AsyncKernelClient &rarr; shutdown &rarr; msg &rarr; msg_header &rarr; msg_id', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 644, 'parent': 1706, 'tfidf_word': 'EP: 644, Name: BlockingKernelClient &rarr; shutdown &rarr; msg &rarr; msg_header &rarr; msg_id', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1703, 'parent': 2300, 'tfidf_word': 'client complete header id kernel async blocking msg ', 'tfidf_method': 'complete msg msg_header msg_id BlockingKernelClient AsyncKernelClient ', 'lda_word': ' msg,kernel,header,client,complete,', 'lda_method': ' complete,msg_id,msg_header,msg,blockingkernelclient,', 'lsi_word': ' msg,client,header,complete,kernel,', 'lsi_method': ' msg_id,complete,msg,msg_header,blockingkernelclient,', 'spm_method': ' ', 'text_summary': '', 'files_count': 2, 'files': ['client.py', 'session.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'90': 'AsyncKernelClient(client.py)', '153': 'complete(client.py)', '476': 'msg(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '116': 'BlockingKernelClient(client.py)'}}, {'key': 2293, 'parent': 2300, 'tfidf_word': 'raw interrupt async feed default complete blocking identity version msg ', 'tfidf_method': 'BlockingKernelClient is_complete interrupt_kernel test_default_version test_feed_identities test_msg test_send test_send_raw test_serialize AsyncKernelClient ', 'lda_word': ' msg,header,test,kernel,client,', 'lda_method': ' msg,msg_id,msg_header,test_send_raw,is_complete,', 'lsi_word': ' msg,header,test,kernel,send,', 'lsi_method': ' msg_id,msg,msg_header,history,blockingkernelclient,', 'spm_method': ' ', 'text_summary': "Get entries from the kernel's history list.", 'files_count': 5, 'files': ['client.py', 'session.py', 'test_adapter.py', 'test_session.py', 'manager.py'], 'execution_path_count': 10, 'function_id_to_name_file': {'90': 'AsyncKernelClient(client.py)', '161': 'history(client.py)', '476': 'msg(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '116': 'BlockingKernelClient(client.py)', '516': 'test_default_version(test_adapter.py)', '695': 'test_send_raw(test_session.py)', '692': 'test_feed_identities(test_session.py)', '694': 'test_send(test_session.py)', '693': 'test_msg(test_session.py)', '696': 'test_serialize(test_session.py)', '328': 'interrupt_kernel(manager.py)', '166': 'is_complete(client.py)'}}, {'key': 507, 'parent': 1493, 'tfidf_word': 'EP: 507, Name: AsyncKernelClient &rarr; history &rarr; msg &rarr; msg &rarr; msg &rarr; extract_header', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 622, 'parent': 1493, 'tfidf_word': 'EP: 622, Name: BlockingKernelClient &rarr; history &rarr; msg &rarr; msg &rarr; msg &rarr; extract_header', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1639, 'parent': 1673, 'tfidf_word': 'raw input type identity found feed display data kernel version ', 'tfidf_method': 'test_kernel_info_reply test_send test_input_request test_execute_request test_execute_reply test_display_data test_complete_request test_complete_reply test_no_adapt test_send_raw ', 'lda_word': ' msg,header,extract,test,reply,', 'lda_method': ' msg,extract_header,test_no_adapt,test_execute_reply,test_object_info_request,', 'lsi_word': ' msg,extract,test,header,reply,', 'lsi_method': ' msg,extract_header,test_execute_reply,test_send,test_execute_request,', 'spm_method': ' ', 'text_summary': '', 'files_count': 3, 'files': ['test_adapter.py', 'session.py', 'test_session.py'], 'execution_path_count': 16, 'function_id_to_name_file': {'526': 'test_input_request(test_adapter.py)', '520': 'msg(test_adapter.py)', '534': 'msg(test_adapter.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '523': 'test_display_data(test_adapter.py)', '527': 'test_kernel_info_reply(test_adapter.py)', '530': 'test_object_info_reply_not_found(test_adapter.py)', '529': 'test_object_info_reply(test_adapter.py)', '531': 'test_object_info_request(test_adapter.py)', '521': 'test_complete_reply(test_adapter.py)', '522': 'test_complete_request(test_adapter.py)', '524': 'test_execute_reply(test_adapter.py)', '525': 'test_execute_request(test_adapter.py)', '532': 'test_rename_type(test_adapter.py)', '533': 'test_same_version(test_adapter.py)', '528': 'test_no_adapt(test_adapter.py)', '695': 'test_send_raw(test_session.py)', '694': 'test_send(test_session.py)', '692': 'test_feed_identities(test_session.py)'}}, {'key': 1672, 'parent': 1673, 'tfidf_word': 'extract header test complete interrupt kernel serialize msg ', 'tfidf_method': 'extract_header msg msg msg is_complete interrupt_kernel test_msg test_serialize ', 'lda_word': ' msg,header,extract,complete,test,', 'lda_method': ' msg,extract_header,is_complete,test_serialize,test_msg,', 'lsi_word': ' msg,header,extract,test,serialize,', 'lsi_method': ' msg,extract_header,test_serialize,test_msg,interrupt_kernel,', 'spm_method': ' ', 'text_summary': 'Given a message or header, return the header. Interrupts the kernel by sending it a signal.', 'files_count': 5, 'files': ['test_session.py', 'test_adapter.py', 'session.py', 'manager.py', 'client.py'], 'execution_path_count': 4, 'function_id_to_name_file': {'696': 'test_serialize(test_session.py)', '520': 'msg(test_adapter.py)', '534': 'msg(test_adapter.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '693': 'test_msg(test_session.py)', '328': 'interrupt_kernel(manager.py)', '166': 'is_complete(client.py)'}}, {'key': 509, 'parent': 1702, 'tfidf_word': 'EP: 509, Name: AsyncKernelClient &rarr; history &rarr; msg &rarr; msg &rarr; extract_header', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 624, 'parent': 1702, 'tfidf_word': 'EP: 624, Name: BlockingKernelClient &rarr; history &rarr; msg &rarr; msg &rarr; extract_header', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1856, 'parent': 1968, 'tfidf_word': 'serialize rename kernel type interrupt identity feed execute raw version ', 'tfidf_method': 'test_complete_request test_execute_request test_no_adapt test_rename_type test_same_version test_feed_identities test_msg test_send test_send_raw test_serialize ', 'lda_word': ' msg,header,extract,test,request,', 'lda_method': ' msg,extract_header,test_same_version,test_complete_request,test_rename_type,', 'lsi_word': ' msg,extract,header,test,request,', 'lsi_method': ' msg,extract_header,test_complete_request,test_rename_type,test_serialize,', 'spm_method': ' ', 'text_summary': 'Given a message or header, return the header. message format. Interrupts the kernel by sending it a signal. Ask the kernel whether some code is complete and ready to execute.', 'files_count': 5, 'files': ['test_adapter.py', 'session.py', 'test_session.py', 'manager.py', 'client.py'], 'execution_path_count': 12, 'function_id_to_name_file': {'536': 'test_complete_request(test_adapter.py)', '534': 'msg(test_adapter.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '538': 'test_execute_request(test_adapter.py)', '545': 'test_rename_type(test_adapter.py)', '544': 'test_no_adapt(test_adapter.py)', '546': 'test_same_version(test_adapter.py)', '695': 'test_send_raw(test_session.py)', '692': 'test_feed_identities(test_session.py)', '694': 'test_send(test_session.py)', '693': 'test_msg(test_session.py)', '696': 'test_serialize(test_session.py)', '328': 'interrupt_kernel(manager.py)', '166': 'is_complete(client.py)'}}, {'key': 1858, 'parent': 1968, 'tfidf_word': 'reply request msg complete data display info input kernel token ', 'tfidf_method': 'extract_header msg msg test_complete_reply test_display_data test_input_request test_inspect_reply test_inspect_request test_inspect_request_token test_kernel_info_reply ', 'lda_word': ' msg,header,extract,test,data,', 'lda_method': ' msg,extract_header,test_kernel_info_reply,test_inspect_request,test_inspect_reply,', 'lsi_word': ' msg,extract,header,test,inspect,', 'lsi_method': ' msg,extract_header,test_kernel_info_reply,test_inspect_request_token,test_inspect_reply,', 'spm_method': ' ', 'text_summary': '', 'files_count': 2, 'files': ['test_adapter.py', 'session.py'], 'execution_path_count': 7, 'function_id_to_name_file': {'539': 'test_input_request(test_adapter.py)', '534': 'msg(test_adapter.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '537': 'test_display_data(test_adapter.py)', '543': 'test_kernel_info_reply(test_adapter.py)', '542': 'test_inspect_request_token(test_adapter.py)', '540': 'test_inspect_reply(test_adapter.py)', '535': 'test_complete_reply(test_adapter.py)', '541': 'test_inspect_request(test_adapter.py)'}}, {'key': 514, 'parent': 1903, 'tfidf_word': 'EP: 514, Name: AsyncKernelClient &rarr; complete &rarr; msg &rarr; extract_header', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 633, 'parent': 1903, 'tfidf_word': 'EP: 633, Name: BlockingKernelClient &rarr; complete &rarr; msg &rarr; extract_header', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1902, 'parent': 2390, 'tfidf_word': 'client extract header history kernel msg async blocking ', 'tfidf_method': 'history extract_header msg BlockingKernelClient AsyncKernelClient ', 'lda_word': ' extract,msg,history,client,kernel,', 'lda_method': ' history,msg,extract_header,blockingkernelclient,asynckernelclient,', 'lsi_word': ' header,history,kernel,msg,client,', 'lsi_method': ' msg,extract_header,history,blockingkernelclient,asynckernelclient,', 'spm_method': ' ', 'text_summary': '', 'files_count': 2, 'files': ['client.py', 'session.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'90': 'AsyncKernelClient(client.py)', '161': 'history(client.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '116': 'BlockingKernelClient(client.py)'}}, {'key': 2155, 'parent': 2390, 'tfidf_word': 'send complete default feed identity interrupt kernel raw serialize version ', 'tfidf_method': 'extract_header msg is_complete interrupt_kernel test_default_version test_feed_identities test_msg test_send test_send_raw test_serialize ', 'lda_word': ' msg,extract,header,test,send,', 'lda_method': ' extract_header,msg,test_msg,test_feed_identities,test_serialize,', 'lsi_word': ' msg,extract,header,test,send,', 'lsi_method': ' msg,extract_header,test_serialize,is_complete,test_default_version,', 'spm_method': ' ', 'text_summary': 'Given a message or header, return the header. message format.', 'files_count': 5, 'files': ['test_adapter.py', 'session.py', 'test_session.py', 'manager.py', 'client.py'], 'execution_path_count': 8, 'function_id_to_name_file': {'516': 'test_default_version(test_adapter.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '695': 'test_send_raw(test_session.py)', '694': 'test_send(test_session.py)', '692': 'test_feed_identities(test_session.py)', '696': 'test_serialize(test_session.py)', '693': 'test_msg(test_session.py)', '328': 'interrupt_kernel(manager.py)', '166': 'is_complete(client.py)'}}, {'key': 522, 'parent': 1499, 'tfidf_word': 'EP: 522, Name: AsyncKernelClient &rarr; complete &rarr; msg &rarr; msg &rarr; msg &rarr; extract_header', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 641, 'parent': 1499, 'tfidf_word': 'EP: 641, Name: BlockingKernelClient &rarr; complete &rarr; msg &rarr; msg &rarr; msg &rarr; extract_header', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1495, 'parent': 2234, 'tfidf_word': 'client extract header history kernel async blocking msg ', 'tfidf_method': 'history extract_header msg msg msg BlockingKernelClient AsyncKernelClient ', 'lda_word': ' msg,history,client,async,extract,', 'lda_method': ' msg,history,extract_header,blockingkernelclient,asynckernelclient,', 'lsi_word': ' msg,history,extract,client,header,', 'lsi_method': ' msg,history,extract_header,asynckernelclient,blockingkernelclient,', 'spm_method': ' ', 'text_summary': '', 'files_count': 3, 'files': ['client.py', 'test_adapter.py', 'session.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'90': 'AsyncKernelClient(client.py)', '161': 'history(client.py)', '534': 'msg(test_adapter.py)', '520': 'msg(test_adapter.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '116': 'BlockingKernelClient(client.py)'}}, {'key': 1669, 'parent': 2234, 'tfidf_word': 'type input info identity feed execute display data version msg ', 'tfidf_method': 'test_inspect_reply test_send_raw test_input_request test_execute_request test_display_data test_complete_request test_complete_reply interrupt_kernel test_inspect_request test_serialize ', 'lda_word': ' msg,header,extract,test,request,', 'lda_method': ' msg,test_rename_type,extract_header,test_display_data,test_inspect_request_token,', 'lsi_word': ' msg,header,extract,test,request,', 'lsi_method': ' msg,extract_header,test_input_request,test_feed_identities,test_complete_reply,', 'spm_method': ' ', 'text_summary': 'Given a message or header, return the header. Interrupts the kernel by sending it a signal. Ask the kernel whether some code is complete and ready to execute.', 'files_count': 5, 'files': ['test_adapter.py', 'session.py', 'test_session.py', 'manager.py', 'client.py'], 'execution_path_count': 19, 'function_id_to_name_file': {'539': 'test_input_request(test_adapter.py)', '534': 'msg(test_adapter.py)', '520': 'msg(test_adapter.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '537': 'test_display_data(test_adapter.py)', '543': 'test_kernel_info_reply(test_adapter.py)', '540': 'test_inspect_reply(test_adapter.py)', '542': 'test_inspect_request_token(test_adapter.py)', '541': 'test_inspect_request(test_adapter.py)', '535': 'test_complete_reply(test_adapter.py)', '536': 'test_complete_request(test_adapter.py)', '538': 'test_execute_request(test_adapter.py)', '545': 'test_rename_type(test_adapter.py)', '546': 'test_same_version(test_adapter.py)', '544': 'test_no_adapt(test_adapter.py)', '695': 'test_send_raw(test_session.py)', '694': 'test_send(test_session.py)', '692': 'test_feed_identities(test_session.py)', '696': 'test_serialize(test_session.py)', '693': 'test_msg(test_session.py)', '328': 'interrupt_kernel(manager.py)', '166': 'is_complete(client.py)'}}, {'key': 516, 'parent': 1704, 'tfidf_word': 'EP: 516, Name: AsyncKernelClient &rarr; complete &rarr; msg &rarr; msg &rarr; extract_header', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 635, 'parent': 1704, 'tfidf_word': 'EP: 635, Name: BlockingKernelClient &rarr; complete &rarr; msg &rarr; msg &rarr; extract_header', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1701, 'parent': 2307, 'tfidf_word': 'client extract header history kernel async blocking msg ', 'tfidf_method': 'history extract_header msg msg BlockingKernelClient AsyncKernelClient ', 'lda_word': ' msg,header,client,extract,kernel,', 'lda_method': ' msg,extract_header,history,asynckernelclient,blockingkernelclient,', 'lsi_word': ' msg,client,kernel,history,header,', 'lsi_method': ' msg,extract_header,history,asynckernelclient,blockingkernelclient,', 'spm_method': ' ', 'text_summary': '', 'files_count': 3, 'files': ['client.py', 'test_adapter.py', 'session.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'90': 'AsyncKernelClient(client.py)', '161': 'history(client.py)', '520': 'msg(test_adapter.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '116': 'BlockingKernelClient(client.py)'}}, {'key': 1969, 'parent': 2307, 'tfidf_word': 'raw interrupt input identity found feed display data type version ', 'tfidf_method': 'test_send_raw test_input_request test_execute_request test_execute_reply test_display_data test_complete_request test_complete_reply interrupt_kernel test_no_adapt test_serialize ', 'lda_word': ' msg,header,test,extract,reply,', 'lda_method': ' msg,extract_header,test_object_info_request,test_kernel_info_reply,test_execute_request,', 'lsi_word': ' msg,header,extract,test,reply,', 'lsi_method': ' msg,extract_header,test_execute_reply,test_msg,test_complete_reply,', 'spm_method': ' ', 'text_summary': 'Given a message or header, return the header.', 'files_count': 5, 'files': ['test_adapter.py', 'session.py', 'test_session.py', 'manager.py', 'client.py'], 'execution_path_count': 20, 'function_id_to_name_file': {'524': 'test_execute_reply(test_adapter.py)', '520': 'msg(test_adapter.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '525': 'test_execute_request(test_adapter.py)', '532': 'test_rename_type(test_adapter.py)', '528': 'test_no_adapt(test_adapter.py)', '533': 'test_same_version(test_adapter.py)', '695': 'test_send_raw(test_session.py)', '692': 'test_feed_identities(test_session.py)', '694': 'test_send(test_session.py)', '693': 'test_msg(test_session.py)', '696': 'test_serialize(test_session.py)', '328': 'interrupt_kernel(manager.py)', '166': 'is_complete(client.py)', '526': 'test_input_request(test_adapter.py)', '523': 'test_display_data(test_adapter.py)', '527': 'test_kernel_info_reply(test_adapter.py)', '530': 'test_object_info_reply_not_found(test_adapter.py)', '531': 'test_object_info_request(test_adapter.py)', '529': 'test_object_info_reply(test_adapter.py)', '522': 'test_complete_request(test_adapter.py)', '521': 'test_complete_reply(test_adapter.py)'}}, {'key': 220, 'parent': 2038, 'tfidf_word': 'EP: 220, Name: start &rarr; start &rarr; execute_interactive &rarr; reqrep &rarr; wrapped', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1875, 'parent': 2038, 'tfidf_word': 'execute interactive alive start default hook output ', 'tfidf_method': 'execute_interactive start start is_alive _output_hook_default is_alive is_alive is_alive is_alive is_alive ', 'lda_word': ' start,interactive,alive,execute,output,', 'lda_method': ' start,is_alive,execute_interactive,output_hook_default,', 'lsi_word': ' start,execute,interactive,alive,default,', 'lsi_method': ' start,execute_interactive,is_alive,output_hook_default,', 'spm_method': ' ', 'text_summary': '', 'files_count': 8, 'files': ['kernelspecapp.py', 'runapp.py', 'client.py', 'channels.py', 'managerabc.py', 'multikernelmanager.py', 'channelsabc.py', 'threaded.py'], 'execution_path_count': 7, 'function_id_to_name_file': {'291': 'start(kernelspecapp.py)', '439': 'start(runapp.py)', '122': 'execute_interactive(client.py)', '112': 'is_alive(channels.py)', '373': 'is_alive(managerabc.py)', '412': 'is_alive(multikernelmanager.py)', '140': 'is_alive(channelsabc.py)', '86': 'is_alive(channels.py)', '118': '_output_hook_default(client.py)', '732': 'is_alive(threaded.py)'}}, {'key': 249, 'parent': 2039, 'tfidf_word': 'EP: 249, Name: start &rarr; start &rarr; execute_interactive &rarr; get_msg &rarr; _recv', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1879, 'parent': 2039, 'tfidf_word': 'execute interactive alive start default hook output ', 'tfidf_method': 'start start execute_interactive is_alive is_alive is_alive is_alive is_alive is_alive _output_hook_default ', 'lda_word': ' start,execute,alive,interactive,default,', 'lda_method': ' start,execute_interactive,output_hook_default,is_alive,', 'lsi_word': ' start,execute,interactive,alive,hook,', 'lsi_method': ' start,execute_interactive,is_alive,output_hook_default,', 'spm_method': ' ', 'text_summary': '', 'files_count': 8, 'files': ['kernelspecapp.py', 'runapp.py', 'client.py', 'channels.py', 'managerabc.py', 'multikernelmanager.py', 'threaded.py', 'channelsabc.py'], 'execution_path_count': 7, 'function_id_to_name_file': {'291': 'start(kernelspecapp.py)', '439': 'start(runapp.py)', '97': 'execute_interactive(client.py)', '112': 'is_alive(channels.py)', '373': 'is_alive(managerabc.py)', '412': 'is_alive(multikernelmanager.py)', '86': 'is_alive(channels.py)', '93': '_output_hook_default(client.py)', '732': 'is_alive(threaded.py)', '140': 'is_alive(channelsabc.py)'}}, {'key': 825, 'parent': 1934, 'tfidf_word': 'EP: 825, Name: test_bad_unpack &rarr; __init__ &rarr; _check_packers &rarr; utcnow', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 826, 'parent': 1934, 'tfidf_word': 'EP: 826, Name: test_bad_unpack &rarr; __init__ &rarr; _check_packers &rarr; squash_dates', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1933, 'parent': 2326, 'tfidf_word': 'bad check init pack packer test date squash utcnow ', 'tfidf_method': '__init__ _check_packers test_bad_pack squash_dates utcnow ', 'lda_word': ' pack,check,init,packer,bad,', 'lda_method': ' check_packers,test_bad_pack,init,utcnow,squash_dates,', 'lsi_word': ' test,packer,init,pack,check,', 'lsi_method': ' init,test_bad_pack,check_packers,squash_dates,utcnow,', 'spm_method': ' ', 'text_summary': '', 'files_count': 3, 'files': ['test_session.py', 'session.py', 'jsonutil.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'681': 'test_bad_pack(test_session.py)', '457': '__init__(session.py)', '459': '_check_packers(session.py)', '450': 'utcnow(session.py)', '244': 'squash_dates(jsonutil.py)'}}, {'key': 2325, 'parent': 2326, 'tfidf_word': 'utcnow digest history args cull id session set up zero ', 'tfidf_method': '__init__ _check_packers squash_dates utcnow setUp test_args test_cull_digest_history test_session_id test_zero_digest_history ', 'lda_word': ' packer,check,init,date,squash,', 'lda_method': ' init,check_packers,utcnow,setup,test_cull_digest_history,', 'lsi_word': ' packer,init,check,test,date,', 'lsi_method': ' check_packers,init,utcnow,squash_dates,setup,', 'spm_method': ' ', 'text_summary': 'check packers for datetime support. squash datetime objects into ISO8601 strings.', 'files_count': 3, 'files': ['test_session.py', 'session.py', 'jsonutil.py'], 'execution_path_count': 10, 'function_id_to_name_file': {'687': 'test_cull_digest_history(test_session.py)', '457': '__init__(session.py)', '459': '_check_packers(session.py)', '450': 'utcnow(session.py)', '244': 'squash_dates(jsonutil.py)', '700': 'test_zero_digest_history(test_session.py)', '697': 'test_session_id(test_session.py)', '678': 'setUp(test_session.py)', '680': 'test_args(test_session.py)'}}, {'key': 1185, 'parent': 1569, 'tfidf_word': 'EP: 1185, Name: test_shutdown_all &rarr; _get_tcp_km &rarr; AsyncMultiKernelManager &rarr; MultiKernelManager &rarr; kernel_method &rarr; wrapped', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1187, 'parent': 1569, 'tfidf_word': 'EP: 1187, Name: test_tcp_cinfo &rarr; _get_tcp_km &rarr; AsyncMultiKernelManager &rarr; MultiKernelManager &rarr; kernel_method &rarr; wrapped', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1203, 'parent': 1408, 'tfidf_word': 'EP: 1203, Name: test_start_parallel_thread_kernels &rarr; tcp_lifecycle_with_loop &rarr; raw_tcp_lifecycle &rarr; _get_tcp_km &rarr; AsyncMultiKernelManager &rarr; MultiKernelManager &rarr; kernel_method &rarr; wrapped', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1209, 'parent': 1408, 'tfidf_word': 'EP: 1209, Name: test_start_parallel_process_kernels &rarr; tcp_lifecycle_with_loop &rarr; raw_tcp_lifecycle &rarr; _get_tcp_km &rarr; AsyncMultiKernelManager &rarr; MultiKernelManager &rarr; kernel_method &rarr; wrapped', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1212, 'parent': 1446, 'tfidf_word': 'EP: 1212, Name: test_start_parallel_process_kernels &rarr; raw_tcp_lifecycle &rarr; _get_tcp_km &rarr; AsyncMultiKernelManager &rarr; MultiKernelManager &rarr; kernel_method &rarr; wrapped', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1444, 'parent': 1446, 'tfidf_word': 'wrap lifecycle manager multi id parallel start thread tcp kernel ', 'tfidf_method': 'AsyncMultiKernelManager MultiKernelManager kernel_method wrapped _get_tcp_km raw_tcp_lifecycle test_start_parallel_thread_kernels test_tcp_lifecycle test_tcp_lifecycle_with_kernel_id ', 'lda_word': ' kernel,tcp,multi,lifecycle,manager,', 'lda_method': ' wrap,asyncmultikernelmanager,kernel_method,raw_tcp_lifecycle,multikernelmanager,', 'lsi_word': ' kernel,tcp,manager,multi,lifecycle,', 'lsi_method': ' wrap,kernel_method,multikernelmanager,raw_tcp_lifecycle,get_tcp_km,', 'spm_method': '  &#187; raw_tcp_lifecycle(test_multikernelmanager.py) &rarr; _get_tcp_km(test_multikernelmanager.py) &rarr; AsyncMultiKernelManager(multikernelmanager.py) &rarr; MultiKernelManager(multikernelmanager.py) &rarr; kernel_method(multikernelmanager.py) &rarr; wrapped(multikernelmanager.py) . <br>', 'text_summary': 'Empty', 'files_count': 2, 'files': ['test_multikernelmanager.py', 'multikernelmanager.py'], 'execution_path_count': 3, 'function_id_to_name_file': {'648': 'test_start_parallel_thread_kernels(test_multikernelmanager.py)', '642': 'raw_tcp_lifecycle(test_multikernelmanager.py)', '639': '_get_tcp_km(test_multikernelmanager.py)', '379': 'AsyncMultiKernelManager(multikernelmanager.py)', '381': 'MultiKernelManager(multikernelmanager.py)', '382': 'kernel_method(multikernelmanager.py)', '425': 'wrapped(multikernelmanager.py)', '652': 'test_tcp_lifecycle(test_multikernelmanager.py)', '653': 'test_tcp_lifecycle_with_kernel_id(test_multikernelmanager.py)'}}, {'key': 1144, 'parent': 1751, 'tfidf_word': 'EP: 1144, Name: test_tcp_cinfo &rarr; _get_tcp_km &rarr; MultiKernelManager &rarr; kernel_method &rarr; wrapped', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1749, 'parent': 1751, 'tfidf_word': 'manager method multi test wrap id lifecycle shutdown tcp kernel ', 'tfidf_method': 'MultiKernelManager kernel_method wrapped _get_tcp_km test_shutdown_all test_tcp_lifecycle_with_kernel_id ', 'lda_word': ' kernel,tcp,get,multi,manager,', 'lda_method': ' multikernelmanager,kernel_method,get_tcp_km,test_shutdown_all,wrap,', 'lsi_word': ' kernel,tcp,km,method,test,', 'lsi_method': ' kernel_method,multikernelmanager,wrap,get_tcp_km,test_tcp_lifecycle_with_kernel_id,', 'spm_method': ' ', 'text_summary': 'Empty', 'files_count': 2, 'files': ['test_multikernelmanager.py', 'multikernelmanager.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'668': 'test_tcp_lifecycle_with_kernel_id(test_multikernelmanager.py)', '655': '_get_tcp_km(test_multikernelmanager.py)', '381': 'MultiKernelManager(multikernelmanager.py)', '382': 'kernel_method(multikernelmanager.py)', '425': 'wrapped(multikernelmanager.py)', '661': 'test_shutdown_all(test_multikernelmanager.py)'}}, {'key': 1169, 'parent': 1440, 'tfidf_word': 'EP: 1169, Name: test_start_parallel_thread_kernels &rarr; tcp_lifecycle_with_loop &rarr; test_tcp_lifecycle &rarr; _get_tcp_km &rarr; MultiKernelManager &rarr; kernel_method &rarr; wrapped', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1177, 'parent': 1440, 'tfidf_word': 'EP: 1177, Name: test_start_parallel_process_kernels &rarr; tcp_lifecycle_with_loop &rarr; test_tcp_lifecycle &rarr; _get_tcp_km &rarr; MultiKernelManager &rarr; kernel_method &rarr; wrapped', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1165, 'parent': 1567, 'tfidf_word': 'EP: 1165, Name: test_start_parallel_thread_kernels &rarr; test_tcp_lifecycle &rarr; _get_tcp_km &rarr; MultiKernelManager &rarr; kernel_method &rarr; wrapped', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1173, 'parent': 1567, 'tfidf_word': 'EP: 1173, Name: test_start_parallel_process_kernels &rarr; test_tcp_lifecycle &rarr; _get_tcp_km &rarr; MultiKernelManager &rarr; kernel_method &rarr; wrapped', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1269, 'parent': 2061, 'tfidf_word': 'EP: 1269, Name: test_subclass &rarr; KernelSpecManager &rarr; KernelSpec', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2060, 'parent': 2061, 'tfidf_word': 'default manager set up kernel spec ', 'tfidf_method': 'KernelSpec KernelSpecManager _kernel_spec_manager_default _kernel_spec_manager_default setUp ', 'lda_word': ' kernel,spec,manager,default,set,', 'lda_method': ' kernelspec,setup,kernelspecmanager,kernel_spec_manager_default,', 'lsi_word': ' kernel,spec,manager,default,set,', 'lsi_method': ' kernelspecmanager,kernelspec,kernel_spec_manager_default,setup,', 'spm_method': ' ', 'text_summary': '', 'files_count': 4, 'files': ['test_kernelspec.py', 'kernelspec.py', 'kernelspecapp.py', 'manager.py'], 'execution_path_count': 3, 'function_id_to_name_file': {'618': 'setUp(test_kernelspec.py)', '254': 'KernelSpecManager(kernelspec.py)', '253': 'KernelSpec(kernelspec.py)', '289': '_kernel_spec_manager_default(kernelspecapp.py)', '345': '_kernel_spec_manager_default(manager.py)'}}, {'key': 213, 'parent': 2115, 'tfidf_word': 'EP: 213, Name: _kernel_spec_manager_default &rarr; KernelSpecManager &rarr; KernelSpec', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2114, 'parent': 2115, 'tfidf_word': 'default manager app kernel spec ', 'tfidf_method': 'KernelSpec KernelSpecManager KernelApp _kernel_spec_manager_default _kernel_spec_manager_default ', 'lda_word': ' spec,kernel,manager,default,app,', 'lda_method': ' kernelspec,kernelspecmanager,kernel_spec_manager_default,kernelapp,', 'lsi_word': ' kernel,spec,manager,default,app,', 'lsi_method': ' kernelspec,kernelspecmanager,kernel_spec_manager_default,kernelapp,', 'spm_method': ' ', 'text_summary': '', 'files_count': 3, 'files': ['kernelspecapp.py', 'kernelspec.py', 'kernelapp.py'], 'execution_path_count': 3, 'function_id_to_name_file': {'286': '_kernel_spec_manager_default(kernelspecapp.py)', '254': 'KernelSpecManager(kernelspec.py)', '253': 'KernelSpec(kernelspec.py)', '245': 'KernelApp(kernelapp.py)', '292': '_kernel_spec_manager_default(kernelspecapp.py)'}}, {'key': 1255, 'parent': 2321, 'tfidf_word': 'EP: 1255, Name: test_subclass &rarr; MyKSM &rarr; KernelSpecManager &rarr; KernelSpec', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2320, 'parent': 2321, 'tfidf_word': 'app manager list remove specs kernel spec ', 'tfidf_method': 'KernelSpec KernelSpecManager KernelSpecApp ListKernelSpecs RemoveKernelSpec ', 'lda_word': ' kernel,spec,manager,list,app,', 'lda_method': ' kernelspec,kernelspecmanager,kernelspecapp,listkernelspecs,removekernelspec,', 'lsi_word': ' kernel,spec,manager,app,remove,', 'lsi_method': ' kernelspec,kernelspecapp,kernelspecmanager,listkernelspecs,removekernelspec,', 'spm_method': ' ', 'text_summary': '', 'files_count': 2, 'files': ['kernelspecapp.py', 'kernelspec.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'282': 'KernelSpecApp(kernelspecapp.py)', '284': 'RemoveKernelSpec(kernelspecapp.py)', '254': 'KernelSpecManager(kernelspec.py)', '253': 'KernelSpec(kernelspec.py)', '283': 'ListKernelSpecs(kernelspecapp.py)'}}, {'key': 215, 'parent': 2335, 'tfidf_word': 'EP: 215, Name: KernelSpecApp &rarr; InstallKernelSpec &rarr; KernelSpecManager &rarr; KernelSpec', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 216, 'parent': 2335, 'tfidf_word': 'EP: 216, Name: KernelSpecApp &rarr; InstallNativeKernelSpec &rarr; KernelSpecManager &rarr; KernelSpec', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1191, 'parent': 1570, 'tfidf_word': 'EP: 1191, Name: test_ipc_lifecycle &rarr; _get_ipc_km &rarr; AsyncMultiKernelManager &rarr; MultiKernelManager &rarr; KernelSpecManager &rarr; KernelSpec', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1193, 'parent': 1570, 'tfidf_word': 'EP: 1193, Name: test_ipc_cinfo &rarr; _get_ipc_km &rarr; AsyncMultiKernelManager &rarr; MultiKernelManager &rarr; KernelSpecManager &rarr; KernelSpec', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1196, 'parent': 1572, 'tfidf_word': 'EP: 1196, Name: test_start_sequence_tcp_kernels &rarr; _get_tcp_km &rarr; AsyncMultiKernelManager &rarr; MultiKernelManager &rarr; KernelSpecManager &rarr; KernelSpec', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1568, 'parent': 1572, 'tfidf_word': 'get km test cinfo shutdown multi spec tcp manager kernel ', 'tfidf_method': 'KernelSpec KernelSpecManager AsyncMultiKernelManager MultiKernelManager _get_tcp_km test_shutdown_all test_tcp_cinfo ', 'lda_word': ' manager,kernel,multi,spec,tcp,', 'lda_method': ' asyncmultikernelmanager,multikernelmanager,kernelspec,test_shutdown_all,get_tcp_km,', 'lsi_word': ' kernel,manager,spec,multi,tcp,', 'lsi_method': ' multikernelmanager,kernelspecmanager,asyncmultikernelmanager,kernelspec,get_tcp_km,', 'spm_method': ' ', 'text_summary': '', 'files_count': 3, 'files': ['test_multikernelmanager.py', 'multikernelmanager.py', 'kernelspec.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'646': 'test_shutdown_all(test_multikernelmanager.py)', '639': '_get_tcp_km(test_multikernelmanager.py)', '379': 'AsyncMultiKernelManager(multikernelmanager.py)', '381': 'MultiKernelManager(multikernelmanager.py)', '254': 'KernelSpecManager(kernelspec.py)', '253': 'KernelSpec(kernelspec.py)', '651': 'test_tcp_cinfo(test_multikernelmanager.py)'}}, {'key': 1407, 'parent': 1792, 'tfidf_word': 'start test process thread lifecycle multi spec manager tcp kernel ', 'tfidf_method': 'KernelSpec KernelSpecManager AsyncMultiKernelManager MultiKernelManager _get_tcp_km raw_tcp_lifecycle tcp_lifecycle_with_loop test_start_parallel_process_kernels test_start_parallel_thread_kernels ', 'lda_word': ' kernel,manager,tcp,multi,lifecycle,', 'lda_method': ' get_tcp_km,tcp_lifecycle_with_loop,test_start_parallel_thread_kernels,kernelspec,asyncmultikernelmanager,', 'lsi_word': ' kernel,tcp,manager,lifecycle,multi,', 'lsi_method': ' get_tcp_km,kernelspec,tcp_lifecycle_with_loop,kernelspecmanager,multikernelmanager,', 'spm_method': '  &#187; tcp_lifecycle_with_loop(test_multikernelmanager.py) &rarr; raw_tcp_lifecycle(test_multikernelmanager.py) &rarr; _get_tcp_km(test_multikernelmanager.py) &rarr; AsyncMultiKernelManager(multikernelmanager.py) &rarr; MultiKernelManager(multikernelmanager.py) &rarr; KernelSpecManager(kernelspec.py) &rarr; KernelSpec(kernelspec.py) . <br> &#187; raw_tcp_lifecycle(test_multikernelmanager.py) &rarr; _get_tcp_km(test_multikernelmanager.py) &rarr; AsyncMultiKernelManager(multikernelmanager.py) &rarr; MultiKernelManager(multikernelmanager.py) &rarr; KernelSpecManager(kernelspec.py) &rarr; KernelSpec(kernelspec.py) . <br>', 'text_summary': '', 'files_count': 3, 'files': ['test_multikernelmanager.py', 'multikernelmanager.py', 'kernelspec.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'648': 'test_start_parallel_thread_kernels(test_multikernelmanager.py)', '643': 'tcp_lifecycle_with_loop(test_multikernelmanager.py)', '642': 'raw_tcp_lifecycle(test_multikernelmanager.py)', '639': '_get_tcp_km(test_multikernelmanager.py)', '379': 'AsyncMultiKernelManager(multikernelmanager.py)', '381': 'MultiKernelManager(multikernelmanager.py)', '254': 'KernelSpecManager(kernelspec.py)', '253': 'KernelSpec(kernelspec.py)', '647': 'test_start_parallel_process_kernels(test_multikernelmanager.py)'}}, {'key': 1445, 'parent': 1792, 'tfidf_word': 'start lifecycle multi spec id process thread manager tcp kernel ', 'tfidf_method': 'KernelSpec KernelSpecManager AsyncMultiKernelManager MultiKernelManager _get_tcp_km raw_tcp_lifecycle test_start_parallel_process_kernels test_start_parallel_thread_kernels test_tcp_lifecycle test_tcp_lifecycle_with_kernel_id ', 'lda_word': ' kernel,manager,tcp,multi,spec,', 'lda_method': ' kernelspecmanager,get_tcp_km,kernelspec,raw_tcp_lifecycle,multikernelmanager,', 'lsi_word': ' kernel,manager,tcp,multi,spec,', 'lsi_method': ' kernelspecmanager,raw_tcp_lifecycle,multikernelmanager,kernelspec,get_tcp_km,', 'spm_method': '  &#187; raw_tcp_lifecycle(test_multikernelmanager.py) &rarr; _get_tcp_km(test_multikernelmanager.py) &rarr; AsyncMultiKernelManager(multikernelmanager.py) &rarr; MultiKernelManager(multikernelmanager.py) &rarr; KernelSpecManager(kernelspec.py) &rarr; KernelSpec(kernelspec.py) . <br>', 'text_summary': '', 'files_count': 3, 'files': ['test_multikernelmanager.py', 'multikernelmanager.py', 'kernelspec.py'], 'execution_path_count': 4, 'function_id_to_name_file': {'647': 'test_start_parallel_process_kernels(test_multikernelmanager.py)', '642': 'raw_tcp_lifecycle(test_multikernelmanager.py)', '639': '_get_tcp_km(test_multikernelmanager.py)', '379': 'AsyncMultiKernelManager(multikernelmanager.py)', '381': 'MultiKernelManager(multikernelmanager.py)', '254': 'KernelSpecManager(kernelspec.py)', '253': 'KernelSpec(kernelspec.py)', '648': 'test_start_parallel_thread_kernels(test_multikernelmanager.py)', '652': 'test_tcp_lifecycle(test_multikernelmanager.py)', '653': 'test_tcp_lifecycle_with_kernel_id(test_multikernelmanager.py)'}}, {'key': 1148, 'parent': 1752, 'tfidf_word': 'EP: 1148, Name: test_ipc_lifecycle &rarr; _get_ipc_km &rarr; MultiKernelManager &rarr; KernelSpecManager &rarr; KernelSpec', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1152, 'parent': 1752, 'tfidf_word': 'EP: 1152, Name: test_ipc_cinfo &rarr; _get_ipc_km &rarr; MultiKernelManager &rarr; KernelSpecManager &rarr; KernelSpec', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1156, 'parent': 1754, 'tfidf_word': 'EP: 1156, Name: test_start_sequence_tcp_kernels &rarr; _get_tcp_km &rarr; MultiKernelManager &rarr; KernelSpecManager &rarr; KernelSpec', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1750, 'parent': 1754, 'tfidf_word': 'multi test manager spec tcp cinfo id lifecycle shutdown kernel ', 'tfidf_method': 'KernelSpec KernelSpecManager MultiKernelManager _get_tcp_km test_shutdown_all test_tcp_cinfo test_tcp_lifecycle_with_kernel_id ', 'lda_word': ' kernel,spec,manager,tcp,test,', 'lda_method': ' multikernelmanager,get_tcp_km,test_tcp_lifecycle_with_kernel_id,kernelspec,kernelspecmanager,', 'lsi_word': ' kernel,spec,manager,tcp,km,', 'lsi_method': ' kernelspec,multikernelmanager,kernelspecmanager,get_tcp_km,test_tcp_lifecycle_with_kernel_id,', 'spm_method': ' ', 'text_summary': '', 'files_count': 3, 'files': ['test_multikernelmanager.py', 'multikernelmanager.py', 'kernelspec.py'], 'execution_path_count': 3, 'function_id_to_name_file': {'666': 'test_tcp_cinfo(test_multikernelmanager.py)', '655': '_get_tcp_km(test_multikernelmanager.py)', '381': 'MultiKernelManager(multikernelmanager.py)', '254': 'KernelSpecManager(kernelspec.py)', '253': 'KernelSpec(kernelspec.py)', '668': 'test_tcp_lifecycle_with_kernel_id(test_multikernelmanager.py)', '661': 'test_shutdown_all(test_multikernelmanager.py)'}}, {'key': 1439, 'parent': 1975, 'tfidf_word': 'parallel start process thread lifecycle manager spec test tcp kernel ', 'tfidf_method': 'KernelSpec KernelSpecManager MultiKernelManager _get_tcp_km tcp_lifecycle_with_loop test_tcp_lifecycle test_start_parallel_process_kernels test_start_parallel_thread_kernels ', 'lda_word': ' kernel,tcp,manager,test,spec,', 'lda_method': ' multikernelmanager,kernelspec,kernelspecmanager,test_tcp_lifecycle,tcp_lifecycle_with_loop,', 'lsi_word': ' kernel,tcp,lifecycle,spec,test,', 'lsi_method': ' multikernelmanager,kernelspec,tcp_lifecycle_with_loop,test_tcp_lifecycle,kernelspecmanager,', 'spm_method': '  &#187; tcp_lifecycle_with_loop(test_multikernelmanager.py) &rarr; test_tcp_lifecycle(test_multikernelmanager.py) &rarr; _get_tcp_km(test_multikernelmanager.py) &rarr; MultiKernelManager(multikernelmanager.py) &rarr; KernelSpecManager(kernelspec.py) &rarr; KernelSpec(kernelspec.py) . <br>', 'text_summary': '', 'files_count': 3, 'files': ['test_multikernelmanager.py', 'multikernelmanager.py', 'kernelspec.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'663': 'test_start_parallel_thread_kernels(test_multikernelmanager.py)', '658': 'tcp_lifecycle_with_loop(test_multikernelmanager.py)', '667': 'test_tcp_lifecycle(test_multikernelmanager.py)', '655': '_get_tcp_km(test_multikernelmanager.py)', '381': 'MultiKernelManager(multikernelmanager.py)', '254': 'KernelSpecManager(kernelspec.py)', '253': 'KernelSpec(kernelspec.py)', '662': 'test_start_parallel_process_kernels(test_multikernelmanager.py)'}}, {'key': 1566, 'parent': 1975, 'tfidf_word': 'multi parallel start process thread manager spec tcp test kernel ', 'tfidf_method': 'KernelSpec KernelSpecManager MultiKernelManager _get_tcp_km test_tcp_lifecycle test_start_parallel_process_kernels test_start_parallel_thread_kernels ', 'lda_word': ' kernel,manager,test,tcp,spec,', 'lda_method': ' get_tcp_km,kernelspec,kernelspecmanager,multikernelmanager,test_start_parallel_thread_kernels,', 'lsi_word': ' kernel,spec,tcp,test,manager,', 'lsi_method': ' get_tcp_km,test_tcp_lifecycle,kernelspecmanager,multikernelmanager,kernelspec,', 'spm_method': ' ', 'text_summary': '', 'files_count': 3, 'files': ['test_multikernelmanager.py', 'multikernelmanager.py', 'kernelspec.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'663': 'test_start_parallel_thread_kernels(test_multikernelmanager.py)', '667': 'test_tcp_lifecycle(test_multikernelmanager.py)', '655': '_get_tcp_km(test_multikernelmanager.py)', '381': 'MultiKernelManager(multikernelmanager.py)', '254': 'KernelSpecManager(kernelspec.py)', '253': 'KernelSpec(kernelspec.py)', '662': 'test_start_parallel_process_kernels(test_multikernelmanager.py)'}}, {'key': 424, 'parent': 1694, 'tfidf_word': 'EP: 424, Name: run_kernel &rarr; start_new_kernel &rarr; start_kernel &rarr; pre_start_kernel &rarr; local_ips', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 425, 'parent': 1694, 'tfidf_word': 'EP: 425, Name: run_kernel &rarr; start_new_kernel &rarr; start_kernel &rarr; pre_start_kernel &rarr; is_local_ip', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 427, 'parent': 1777, 'tfidf_word': 'EP: 427, Name: run_kernel &rarr; start_new_kernel &rarr; start_kernel &rarr; pre_start_kernel &rarr; write_connection_file &rarr; _record_random_port_names', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 430, 'parent': 1777, 'tfidf_word': 'EP: 430, Name: run_kernel &rarr; start_new_kernel &rarr; start_kernel &rarr; pre_start_kernel &rarr; format_kernel_cmd &rarr; write_connection_file &rarr; _record_random_port_names', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 428, 'parent': 1778, 'tfidf_word': 'EP: 428, Name: run_kernel &rarr; start_new_kernel &rarr; start_kernel &rarr; pre_start_kernel &rarr; format_kernel_cmd &rarr; from_ns', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 429, 'parent': 1778, 'tfidf_word': 'EP: 429, Name: run_kernel &rarr; start_new_kernel &rarr; start_kernel &rarr; pre_start_kernel &rarr; format_kernel_cmd &rarr; kernel_spec &rarr; KernelSpec', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 444, 'parent': 1594, 'tfidf_word': 'EP: 444, Name: run_kernel &rarr; start_new_kernel &rarr; shutdown_kernel &rarr; request_shutdown &rarr; msg &rarr; msg_header &rarr; msg_id', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 450, 'parent': 1594, 'tfidf_word': 'EP: 450, Name: run_kernel &rarr; start_new_kernel &rarr; shutdown_kernel &rarr; request_shutdown &rarr; send &rarr; msg &rarr; msg_header &rarr; msg_id', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1486, 'parent': 1970, 'tfidf_word': 'header id new request run start shutdown kernel msg ', 'tfidf_method': 'run_kernel start_new_kernel request_shutdown shutdown_kernel msg msg_header msg_id msg msg ', 'lda_word': ' msg,kernel,shutdown,header,new,', 'lda_method': ' msg,msg_id,start_new_kernel,msg_header,shutdown_kernel,', 'lsi_word': ' msg,kernel,shutdown,new,start,', 'lsi_method': ' msg,run_kernel,shutdown_kernel,request_shutdown,msg_id,', 'spm_method': '  &#187; run_kernel(manager.py) &rarr; start_new_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; start_new_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br>', 'text_summary': 'Attempts to stop the kernel process cleanly.', 'files_count': 3, 'files': ['manager.py', 'test_adapter.py', 'session.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'321': 'run_kernel(manager.py)', '323': 'start_new_kernel(manager.py)', '364': 'shutdown_kernel(manager.py)', '362': 'request_shutdown(manager.py)', '520': 'msg(test_adapter.py)', '476': 'msg(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '534': 'msg(test_adapter.py)'}}, {'key': 1487, 'parent': 1970, 'tfidf_word': 'header id new request run start shutdown kernel msg ', 'tfidf_method': 'run_kernel start_new_kernel request_shutdown shutdown_kernel msg msg_header msg_id msg msg ', 'lda_word': ' msg,shutdown,kernel,header,request,', 'lda_method': ' msg,run_kernel,msg_header,shutdown_kernel,start_new_kernel,', 'lsi_word': ' msg,kernel,shutdown,new,start,', 'lsi_method': ' msg,run_kernel,shutdown_kernel,request_shutdown,msg_id,', 'spm_method': '  &#187; run_kernel(manager.py) &rarr; start_new_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; start_new_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br>', 'text_summary': 'Attempts to stop the kernel process cleanly.', 'files_count': 3, 'files': ['manager.py', 'test_adapter.py', 'session.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'321': 'run_kernel(manager.py)', '323': 'start_new_kernel(manager.py)', '364': 'shutdown_kernel(manager.py)', '362': 'request_shutdown(manager.py)', '534': 'msg(test_adapter.py)', '476': 'msg(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '520': 'msg(test_adapter.py)'}}, {'key': 1781, 'parent': 2000, 'tfidf_word': 'extract header msg new request run start send shutdown kernel ', 'tfidf_method': 'run_kernel start_new_kernel request_shutdown shutdown_kernel extract_header msg send ', 'lda_word': ' kernel,shutdown,new,request,extract,', 'lda_method': ' extract_header,shutdown_kernel,run_kernel,request_shutdown,send,', 'lsi_word': ' kernel,shutdown,start,header,request,', 'lsi_method': ' request_shutdown,start_new_kernel,shutdown_kernel,run_kernel,msg,', 'spm_method': '  &#187; run_kernel(manager.py) &rarr; start_new_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br>', 'text_summary': 'Start a new kernel, and return its Manager and Client. Given a message or header, return the header.', 'files_count': 2, 'files': ['manager.py', 'session.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'321': 'run_kernel(manager.py)', '323': 'start_new_kernel(manager.py)', '364': 'shutdown_kernel(manager.py)', '362': 'request_shutdown(manager.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '480': 'send(session.py)'}}, {'key': 1987, 'parent': 2000, 'tfidf_word': 'extract header new request run start shutdown kernel msg ', 'tfidf_method': 'run_kernel start_new_kernel request_shutdown shutdown_kernel extract_header msg msg msg ', 'lda_word': ' kernel,msg,shutdown,extract,start,', 'lda_method': ' msg,run_kernel,request_shutdown,extract_header,start_new_kernel,', 'lsi_word': ' kernel,msg,shutdown,extract,run,', 'lsi_method': ' msg,start_new_kernel,run_kernel,shutdown_kernel,request_shutdown,', 'spm_method': '  &#187; run_kernel(manager.py) &rarr; start_new_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br> &#187; start_new_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br>', 'text_summary': 'Start a new kernel, and return its Manager and Client. Context manager to create a kernel in a subprocess.', 'files_count': 3, 'files': ['manager.py', 'test_adapter.py', 'session.py'], 'execution_path_count': 4, 'function_id_to_name_file': {'321': 'run_kernel(manager.py)', '323': 'start_new_kernel(manager.py)', '364': 'shutdown_kernel(manager.py)', '362': 'request_shutdown(manager.py)', '520': 'msg(test_adapter.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '534': 'msg(test_adapter.py)'}}, {'key': 1791, 'parent': 2292, 'tfidf_word': 'run send start shutdown adapt message serialize sign utcnow kernel ', 'tfidf_method': 'run_kernel start_new_kernel request_shutdown shutdown_kernel send Message utcnow serialize sign adapt ', 'lda_word': ' kernel,shutdown,request,run,new,', 'lda_method': ' start_new_kernel,request_shutdown,shutdown_kernel,send,run_kernel,', 'lsi_word': ' kernel,shutdown,run,new,send,', 'lsi_method': ' start_new_kernel,run_kernel,shutdown_kernel,send,request_shutdown,', 'spm_method': ' ', 'text_summary': 'Start a new kernel, and return its Manager and Client. Pass a message to the ZMQ socket to send.', 'files_count': 3, 'files': ['manager.py', 'session.py', 'adapter.py'], 'execution_path_count': 3, 'function_id_to_name_file': {'321': 'run_kernel(manager.py)', '323': 'start_new_kernel(manager.py)', '364': 'shutdown_kernel(manager.py)', '362': 'request_shutdown(manager.py)', '480': 'send(session.py)', '50': 'adapt(adapter.py)', '450': 'utcnow(session.py)', '482': 'serialize(session.py)', '483': 'sign(session.py)', '440': 'Message(session.py)'}}, {'key': 2044, 'parent': 2292, 'tfidf_word': 'create make url shutdown control thread kernel send connect socket ', 'tfidf_method': 'start_new_kernel request_shutdown shutdown_kernel _create_connected_socket _make_url send _connect_control_socket send thread_send send ', 'lda_word': ' kernel,shutdown,send,run,new,', 'lda_method': ' send,shutdown_kernel,run_kernel,request_shutdown,start_new_kernel,', 'lsi_word': ' kernel,shutdown,new,start,run,', 'lsi_method': ' shutdown_kernel,request_shutdown,start_new_kernel,run_kernel,send,', 'spm_method': '  &#187; run_kernel(manager.py) &rarr; start_new_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) &rarr; _create_connected_socket(connect.py) &rarr; _make_url(connect.py) . <br>', 'text_summary': 'Create a zmq Socket and connect it to the kernel. Context manager to create a kernel in a subprocess. Pass a message to the ZMQ socket to send.', 'files_count': 4, 'files': ['manager.py', 'connect.py', 'threaded.py', 'channels.py'], 'execution_path_count': 5, 'function_id_to_name_file': {'321': 'run_kernel(manager.py)', '323': 'start_new_kernel(manager.py)', '364': 'shutdown_kernel(manager.py)', '362': 'request_shutdown(manager.py)', '338': '_connect_control_socket(manager.py)', '192': '_create_connected_socket(connect.py)', '196': '_make_url(connect.py)', '734': 'send(threaded.py)', '738': 'thread_send(threaded.py)', '88': 'send(channels.py)', '114': 'send(channels.py)'}}, {'key': 420, 'parent': 2016, 'tfidf_word': 'EP: 420, Name: run_kernel &rarr; start_new_kernel &rarr; KernelManager &rarr; KernelSpecManager &rarr; KernelSpec', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 421, 'parent': 2016, 'tfidf_word': 'EP: 421, Name: run_kernel &rarr; start_new_kernel &rarr; KernelManager &rarr; ConnectionFileMixin', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 408, 'parent': 2275, 'tfidf_word': 'EP: 408, Name: start_new_async_kernel &rarr; client &rarr; get_connection_info', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 432, 'parent': 2275, 'tfidf_word': 'EP: 432, Name: run_kernel &rarr; start_new_kernel &rarr; client &rarr; get_connection_info', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1593, 'parent': 2262, 'tfidf_word': 'kill launch new run signal start finish shutdown kernel ', 'tfidf_method': 'run_kernel start_new_kernel _kill_kernel _launch_kernel has_kernel shutdown_kernel signal_kernel finish_shutdown ', 'lda_word': ' kernel,shutdown,signal,new,finish,', 'lda_method': ' shutdown_kernel,launch_kernel,kill_kernel,start_new_kernel,run_kernel,', 'lsi_word': ' kernel,shutdown,kill,run,start,', 'lsi_method': ' has_kernel,run_kernel,start_new_kernel,shutdown_kernel,launch_kernel,', 'spm_method': '  &#187; run_kernel(manager.py) &rarr; start_new_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; _kill_kernel(manager.py) &rarr; signal_kernel(manager.py) &rarr; has_kernel(manager.py) &rarr; _launch_kernel(manager.py) . <br> &#187; start_new_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; _kill_kernel(manager.py) &rarr; signal_kernel(manager.py) &rarr; has_kernel(manager.py) &rarr; _launch_kernel(manager.py) . <br>', 'text_summary': "Start a new kernel, and return its Manager and Client. Wait for kernel shutdown, then kill process if it doesn't shutdown. Has a kernel been started that we are managing.", 'files_count': 1, 'files': ['manager.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'321': 'run_kernel(manager.py)', '323': 'start_new_kernel(manager.py)', '364': 'shutdown_kernel(manager.py)', '346': '_kill_kernel(manager.py)', '365': 'signal_kernel(manager.py)', '354': 'has_kernel(manager.py)', '347': '_launch_kernel(manager.py)', '352': 'finish_shutdown(manager.py)'}}, {'key': 2023, 'parent': 2262, 'tfidf_word': 'launch new run start finish kill shutdown alive kernel ', 'tfidf_method': 'run_kernel start_new_kernel _launch_kernel has_kernel shutdown_kernel finish_shutdown _kill_kernel is_alive ', 'lda_word': ' kernel,shutdown,new,start,run,', 'lda_method': ' has_kernel,shutdown_kernel,launch_kernel,run_kernel,start_new_kernel,', 'lsi_word': ' kernel,shutdown,start,run,launch,', 'lsi_method': ' shutdown_kernel,run_kernel,start_new_kernel,launch_kernel,has_kernel,', 'spm_method': '  &#187; run_kernel(manager.py) &rarr; start_new_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; _kill_kernel(manager.py) &rarr; has_kernel(manager.py) &rarr; _launch_kernel(manager.py) . <br>', 'text_summary': 'Start a new kernel, and return its Manager and Client. Has a kernel been started that we are managing.', 'files_count': 1, 'files': ['manager.py'], 'execution_path_count': 4, 'function_id_to_name_file': {'321': 'run_kernel(manager.py)', '323': 'start_new_kernel(manager.py)', '364': 'shutdown_kernel(manager.py)', '346': '_kill_kernel(manager.py)', '354': 'has_kernel(manager.py)', '347': '_launch_kernel(manager.py)', '352': 'finish_shutdown(manager.py)', '357': 'is_alive(manager.py)'}}, {'key': 1780, 'parent': 2296, 'tfidf_word': 'file ipc new port resource run shutdown start cleanup kernel ', 'tfidf_method': 'cleanup_ipc_files ports run_kernel start_new_kernel cleanup_resources shutdown_kernel cleanup ', 'lda_word': ' kernel,cleanup,file,run,ipc,', 'lda_method': ' cleanup_ipc_files,start_new_kernel,run_kernel,shutdown_kernel,cleanup_resources,', 'lsi_word': ' kernel,cleanup,resource,shutdown,run,', 'lsi_method': ' start_new_kernel,port,cleanup_resources,shutdown_kernel,run_kernel,', 'spm_method': '  &#187; run_kernel(manager.py) &rarr; start_new_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; cleanup_resources(manager.py) &rarr; cleanup_ipc_files(connect.py) &rarr; ports(connect.py) . <br>', 'text_summary': 'Attempts to stop the kernel process cleanly.', 'files_count': 2, 'files': ['manager.py', 'connect.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'321': 'run_kernel(manager.py)', '323': 'start_new_kernel(manager.py)', '364': 'shutdown_kernel(manager.py)', '350': 'cleanup_resources(manager.py)', '201': 'cleanup_ipc_files(connect.py)', '211': 'ports(connect.py)', '349': 'cleanup(manager.py)'}}, {'key': 2228, 'parent': 2296, 'tfidf_word': 'run shutdown start connection file resource restarter stop kernel cleanup ', 'tfidf_method': 'run_kernel start_new_kernel shutdown_kernel cleanup_connection_file cleanup_resources cleanup stop_restarter ', 'lda_word': ' kernel,start,cleanup,new,shutdown,', 'lda_method': ' start_new_kernel,cleanup_connection_file,run_kernel,cleanup_resources,shutdown_kernel,', 'lsi_word': ' kernel,cleanup,new,start,shutdown,', 'lsi_method': ' shutdown_kernel,start_new_kernel,run_kernel,cleanup_connection_file,cleanup_resources,', 'spm_method': ' ', 'text_summary': 'Attempts to stop the kernel process cleanly.', 'files_count': 2, 'files': ['manager.py', 'connect.py'], 'execution_path_count': 3, 'function_id_to_name_file': {'321': 'run_kernel(manager.py)', '323': 'start_new_kernel(manager.py)', '364': 'shutdown_kernel(manager.py)', '368': 'stop_restarter(manager.py)', '350': 'cleanup_resources(manager.py)', '200': 'cleanup_connection_file(connect.py)', '349': 'cleanup(manager.py)'}}, {'key': 148, 'parent': 1992, 'tfidf_word': 'EP: 148, Name: _requires_ips &rarr; ips_loaded &rarr; _load_ips &rarr; _load_ips_ipconfig &rarr; _get_output', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1461, 'parent': 1992, 'tfidf_word': 'populate require addresses local no public stable uniq load ip ', 'tfidf_method': '_load_ips _load_ips_ipconfig _populate_from_list _requires_ips ips_loaded NoIPAddresses _uniq_stable local_ips public_ips ', 'lda_word': ' ip,load,list,ipconfig,populate,', 'lda_method': ' requires_ips,populate_from_list,ips_loaded,load_ips,load_ips_ipconfig,', 'lsi_word': ' ip,load,require,populate,ipconfig,', 'lsi_method': ' ips_loaded,requires_ips,populate_from_list,load_ips,load_ips_ipconfig,', 'spm_method': ' ', 'text_summary': 'decorator to ensure load_ips has been run before f. populate local and public IPs from flat list of all IPs. return the IP addresses that point to this machine. populate local and public IPs from flat list of all IPs. return the IP addresses for this machine that are visible to other machines. populate local and public IPs from flat list of all IPs. decorator to ensure load_ips has been run before f.', 'files_count': 1, 'files': ['localinterfaces.py'], 'execution_path_count': 4, 'function_id_to_name_file': {'310': '_requires_ips(localinterfaces.py)', '318': 'ips_loaded(localinterfaces.py)', '301': '_load_ips(localinterfaces.py)', '306': '_load_ips_ipconfig(localinterfaces.py)', '309': '_populate_from_list(localinterfaces.py)', '299': 'NoIPAddresses(localinterfaces.py)', '316': 'public_ips(localinterfaces.py)', '314': 'local_ips(localinterfaces.py)', '311': '_uniq_stable(localinterfaces.py)'}}, {'key': 1991, 'parent': 2675, 'tfidf_word': 'addresses get local no output public stable uniq load ip ', 'tfidf_method': '_load_ips _load_ips_ifconfig _requires_ips ips_loaded _populate_from_list NoIPAddresses _get_output _uniq_stable local_ips public_ips ', 'lda_word': ' ip,load,require,ifconfig,get,', 'lda_method': ' requires_ips,load_ips,load_ips_ifconfig,ips_loaded,populate_from_list,', 'lsi_word': ' ip,load,require,ifconfig,list,', 'lsi_method': ' ips_loaded,load_ips_ifconfig,requires_ips,load_ips,populate_from_list,', 'spm_method': ' ', 'text_summary': 'populate local and public IPs from flat list of all IPs. return the IP addresses that point to this machine. populate local and public IPs from flat list of all IPs. return the IP addresses for this machine that are visible to other machines. decorator to ensure load_ips has been run before f.', 'files_count': 1, 'files': ['localinterfaces.py'], 'execution_path_count': 5, 'function_id_to_name_file': {'310': '_requires_ips(localinterfaces.py)', '318': 'ips_loaded(localinterfaces.py)', '301': '_load_ips(localinterfaces.py)', '304': '_load_ips_ifconfig(localinterfaces.py)', '300': '_get_output(localinterfaces.py)', '309': '_populate_from_list(localinterfaces.py)', '299': 'NoIPAddresses(localinterfaces.py)', '316': 'public_ips(localinterfaces.py)', '314': 'local_ips(localinterfaces.py)', '311': '_uniq_stable(localinterfaces.py)'}}, {'key': 2411, 'parent': 2675, 'tfidf_word': 'local no public stable uniq load dumb get output ip ', 'tfidf_method': 'ips_loaded _load_ips_ip _populate_from_list _load_ips_netifaces NoIPAddresses _uniq_stable local_ips public_ips _get_output _load_ips_dumb ', 'lda_word': ' ip,load,require,list,populate,', 'lda_method': ' load_ips,ips_loaded,requires_ips,load_ips_dumb,load_ips_ip,', 'lsi_word': ' ip,load,require,populate,list,', 'lsi_method': ' ips_loaded,requires_ips,load_ips,load_ips_ip,populate_from_list,', 'spm_method': ' ', 'text_summary': 'populate local and public IPs from flat list of all IPs. return the IP addresses that point to this machine. populate local and public IPs from flat list of all IPs. decorator to ensure load_ips has been run before f. populate local and public IPs from flat list of all IPs. uniq_stable(elems) -> list. load the IPs that point to this machine. populate local and public IPs from flat list of all IPs. return the IP addresses for this machine that are visible to other machines.', 'files_count': 1, 'files': ['localinterfaces.py'], 'execution_path_count': 10, 'function_id_to_name_file': {'310': '_requires_ips(localinterfaces.py)', '318': 'ips_loaded(localinterfaces.py)', '301': '_load_ips(localinterfaces.py)', '305': '_load_ips_ip(localinterfaces.py)', '300': '_get_output(localinterfaces.py)', '309': '_populate_from_list(localinterfaces.py)', '299': 'NoIPAddresses(localinterfaces.py)', '316': 'public_ips(localinterfaces.py)', '314': 'local_ips(localinterfaces.py)', '311': '_uniq_stable(localinterfaces.py)', '307': '_load_ips_netifaces(localinterfaces.py)', '302': '_load_ips_dumb(localinterfaces.py)'}}, {'key': 1123, 'parent': 2231, 'tfidf_word': 'EP: 1123, Name: test_load_ips &rarr; _load_ips &rarr; _load_ips_ipconfig &rarr; _get_output', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1747, 'parent': 2231, 'tfidf_word': 'populate test addresses local no public stable uniq load ip ', 'tfidf_method': '_load_ips _load_ips_ipconfig _populate_from_list test_load_ips NoIPAddresses _uniq_stable local_ips public_ips ', 'lda_word': ' ip,load,list,populate,test,', 'lda_method': ' populate_from_list,test_load_ips,load_ips_ipconfig,load_ips,uniq_stable,', 'lsi_word': ' ip,load,test,list,populate,', 'lsi_method': ' populate_from_list,test_load_ips,load_ips,load_ips_ipconfig,noipaddresses,', 'spm_method': ' ', 'text_summary': 'load the IPs that point to this machine. populate local and public IPs from flat list of all IPs. return the IP addresses that point to this machine. populate local and public IPs from flat list of all IPs. return the IP addresses for this machine that are visible to other machines.', 'files_count': 2, 'files': ['test_localinterfaces.py', 'localinterfaces.py'], 'execution_path_count': 4, 'function_id_to_name_file': {'634': 'test_load_ips(test_localinterfaces.py)', '301': '_load_ips(localinterfaces.py)', '306': '_load_ips_ipconfig(localinterfaces.py)', '309': '_populate_from_list(localinterfaces.py)', '299': 'NoIPAddresses(localinterfaces.py)', '316': 'public_ips(localinterfaces.py)', '314': 'local_ips(localinterfaces.py)', '311': '_uniq_stable(localinterfaces.py)'}}, {'key': 2230, 'parent': 2711, 'tfidf_word': 'addresses get local no output public stable uniq load ip ', 'tfidf_method': '_load_ips _load_ips_ifconfig test_load_ips _populate_from_list NoIPAddresses _get_output _uniq_stable local_ips public_ips ', 'lda_word': ' load,ip,test,ifconfig,list,', 'lda_method': ' test_load_ips,load_ips,load_ips_ifconfig,populate_from_list,public_ips,', 'lsi_word': ' ip,load,ifconfig,test,populate,', 'lsi_method': ' load_ips,test_load_ips,load_ips_ifconfig,populate_from_list,noipaddresses,', 'spm_method': ' ', 'text_summary': 'populate local and public IPs from flat list of all IPs. return the IP addresses that point to this machine. populate local and public IPs from flat list of all IPs. return the IP addresses for this machine that are visible to other machines. populate local and public IPs from flat list of all IPs. load ip addresses from `ifconfig` output (posix).', 'files_count': 2, 'files': ['test_localinterfaces.py', 'localinterfaces.py'], 'execution_path_count': 5, 'function_id_to_name_file': {'634': 'test_load_ips(test_localinterfaces.py)', '301': '_load_ips(localinterfaces.py)', '304': '_load_ips_ifconfig(localinterfaces.py)', '300': '_get_output(localinterfaces.py)', '309': '_populate_from_list(localinterfaces.py)', '299': 'NoIPAddresses(localinterfaces.py)', '316': 'public_ips(localinterfaces.py)', '314': 'local_ips(localinterfaces.py)', '311': '_uniq_stable(localinterfaces.py)'}}, {'key': 2708, 'parent': 2711, 'tfidf_word': 'gethostbyname no public addresses load output get require dumb ip ', 'tfidf_method': '_uniq_stable _load_ips_netifaces NoIPAddresses _load_ips_gethostbyname local_ips public_ips _get_output _load_ips_dumb _requires_ips ips_loaded ', 'lda_word': ' ip,load,test,address,list,', 'lda_method': ' test_load_ips,load_ips,load_ips_ip,load_ips_netifaces,uniq_stable,', 'lsi_word': ' ip,load,test,populate,list,', 'lsi_method': ' load_ips,test_load_ips,load_ips_ip,populate_from_list,uniq_stable,', 'spm_method': ' ', 'text_summary': 'populate local and public IPs from flat list of all IPs. return the IP addresses that point to this machine. populate local and public IPs from flat list of all IPs. uniq_stable(elems) -> list. load the IPs that point to this machine. populate local and public IPs from flat list of all IPs. return the IP addresses for this machine that are visible to other machines. load ip addresses with socket.gethostbyname_ex uniq_stable(elems) -> list.', 'files_count': 2, 'files': ['test_localinterfaces.py', 'localinterfaces.py'], 'execution_path_count': 12, 'function_id_to_name_file': {'634': 'test_load_ips(test_localinterfaces.py)', '301': '_load_ips(localinterfaces.py)', '305': '_load_ips_ip(localinterfaces.py)', '300': '_get_output(localinterfaces.py)', '309': '_populate_from_list(localinterfaces.py)', '299': 'NoIPAddresses(localinterfaces.py)', '316': 'public_ips(localinterfaces.py)', '314': 'local_ips(localinterfaces.py)', '311': '_uniq_stable(localinterfaces.py)', '310': '_requires_ips(localinterfaces.py)', '318': 'ips_loaded(localinterfaces.py)', '303': '_load_ips_gethostbyname(localinterfaces.py)', '307': '_load_ips_netifaces(localinterfaces.py)', '302': '_load_ips_dumb(localinterfaces.py)'}}, {'key': 1081, 'parent': 2084, 'tfidf_word': 'EP: 1081, Name: test_load_connection_file_session_with_kn &rarr; __init__ &rarr; _new_auth', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2081, 'parent': 2084, 'tfidf_word': 'pack version load id file default cull connection packer zero ', 'tfidf_method': 'test_bad_pack test_bad_packer test_bad_roundtrip test_bad_unpack test_bad_unpacker test_cull_digest_history test_datetimes_msgpack test_datetimes_pickle test_session_id test_zero_digest_history ', 'lda_word': ' auth,test,init,new,datetimes,', 'lda_method': ' init,new_auth,test_datetimes_msgpack,test_cull_digest_history,test_bad_pack,', 'lsi_word': ' auth,init,new,test,bad,', 'lsi_method': ' new_auth,init,test_cull_digest_history,test_datetimes_msgpack,setup,', 'spm_method': ' ', 'text_summary': 'Empty', 'files_count': 4, 'files': ['test_connect.py', 'session.py', 'test_adapter.py', 'test_session.py'], 'execution_path_count': 13, 'function_id_to_name_file': {'564': 'test_load_connection_file_session(test_connect.py)', '457': '__init__(session.py)', '465': '_new_auth(session.py)', '519': 'setUp(test_adapter.py)', '516': 'test_default_version(test_adapter.py)', '689': 'test_datetimes_msgpack(test_session.py)', '690': 'test_datetimes_pickle(test_session.py)', '683': 'test_bad_roundtrip(test_session.py)', '685': 'test_bad_unpacker(test_session.py)', '682': 'test_bad_packer(test_session.py)', '681': 'test_bad_pack(test_session.py)', '684': 'test_bad_unpack(test_session.py)', '687': 'test_cull_digest_history(test_session.py)', '697': 'test_session_id(test_session.py)', '700': 'test_zero_digest_history(test_session.py)'}}, {'key': 786, 'parent': 2157, 'tfidf_word': 'EP: 786, Name: test_args &rarr; __init__ &rarr; _new_auth', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2151, 'parent': 2157, 'tfidf_word': 'auth new init default session set up ', 'tfidf_method': '__init__ _new_auth _session_default __init__ setUp ', 'lda_word': ' init,auth,new,set,default,', 'lda_method': ' new_auth,init,setup,session_default,', 'lsi_word': ' init,new,auth,session,default,', 'lsi_method': ' init,new_auth,setup,session_default,', 'spm_method': ' ', 'text_summary': '', 'files_count': 4, 'files': ['test_session.py', 'session.py', 'consoleapp.py', 'connect.py'], 'execution_path_count': 3, 'function_id_to_name_file': {'678': 'setUp(test_session.py)', '457': '__init__(session.py)', '465': '_new_auth(session.py)', '215': '__init__(consoleapp.py)', '198': '_session_default(connect.py)'}}, {'key': 2697, 'parent': 2769, 'tfidf_word': 'names localhost ip default kn find app file load connection ', 'tfidf_method': 'load_connection_info init_connection_file initialize _ip_default _record_random_port_names localhost test_load_connection_file_session test_load_connection_file_session_with_kn test_app_load_connection_file test_find_connection_file ', 'lda_word': ' connection,file,load,initialize,init,', 'lda_method': ' load_connection_info,load_connection_file,initialize,init_connection_file,record_random_port_names,', 'lsi_word': ' connection,load,file,info,test,', 'lsi_method': ' load_connection_file,load_connection_info,init_connection_file,initialize,localhost,', 'spm_method': '  &#187; initialize(test_connect.py) &rarr; init_connection_file(consoleapp.py) &rarr; load_connection_file(connect.py) &rarr; load_connection_info(connect.py) &rarr; _ip_default(connect.py) &rarr; localhost(localinterfaces.py) . <br>', 'text_summary': 'return ip for localhost (almost always 127.0.0.1) test load_connection_file() after. Load connection info from JSON dict in self.connection_file. return ip for localhost (almost always 127.0.0.1)   find the connection file, and load the info if found. test `ipython console --existing` loads a connection file. return ip for localhost (almost always 127.0.0.1) test `ipython console --existing` loads a connection file.', 'files_count': 4, 'files': ['test_connect.py', 'consoleapp.py', 'connect.py', 'localinterfaces.py'], 'execution_path_count': 12, 'function_id_to_name_file': {'560': 'test_find_connection_file(test_connect.py)', '572': 'initialize(test_connect.py)', '219': 'init_connection_file(consoleapp.py)', '209': 'load_connection_file(connect.py)', '210': 'load_connection_info(connect.py)', '195': '_ip_default(connect.py)', '315': 'localhost(localinterfaces.py)', '559': 'test_app_load_connection_file(test_connect.py)', '564': 'test_load_connection_file_session(test_connect.py)', '565': 'test_load_connection_file_session_with_kn(test_connect.py)', '197': '_record_random_port_names(connect.py)'}}, {'key': 2764, 'parent': 2769, 'tfidf_word': 'async such cleanup app no find run connection file kernel ', 'tfidf_method': '_ip_default init_kernel_client NoSuchKernel test_mixin_record_random_ports run_kernel start_new_async_kernel start_new_kernel test_app_load_connection_file test_find_connection_file test_mixin_cleanup_random_ports ', 'lda_word': ' port,random,record,write,file,', 'lda_method': ' initialize,load_connection_file,init_ssh,record_random_port_names,localhost,', 'lsi_word': ' connection,file,load,initialize,random,', 'lsi_method': ' initialize,record_random_port_names,load_connection_file,write_connection_file,init_connection_file,', 'spm_method': '  &#187; initialize(runapp.py) &rarr; initialize(consoleapp.py) &rarr; load_connection_file(connect.py) &rarr; load_connection_info(connect.py) &rarr; _ip_default(connect.py) &rarr; localhost(localinterfaces.py) . <br>', 'text_summary': 'return ip for localhost (almost always 127.0.0.1)   set up ssh tunnels, if needed. Load connection info from JSON dict in self.connection_file. Write connection info to JSON dict in self.connection_file.', 'files_count': 7, 'files': ['runapp.py', 'consoleapp.py', 'connect.py', 'localinterfaces.py', 'kernelspec.py', 'test_connect.py', 'manager.py'], 'execution_path_count': 21, 'function_id_to_name_file': {'437': 'initialize(runapp.py)', '223': 'initialize(consoleapp.py)', '222': 'init_ssh(consoleapp.py)', '209': 'load_connection_file(connect.py)', '210': 'load_connection_info(connect.py)', '195': '_ip_default(connect.py)', '315': 'localhost(localinterfaces.py)', '197': '_record_random_port_names(connect.py)', '212': 'write_connection_file(connect.py)', '219': 'init_connection_file(consoleapp.py)', '220': 'init_kernel_client(consoleapp.py)', '221': 'init_kernel_manager(consoleapp.py)', '255': 'NoSuchKernel(kernelspec.py)', '560': 'test_find_connection_file(test_connect.py)', '572': 'initialize(test_connect.py)', '559': 'test_app_load_connection_file(test_connect.py)', '564': 'test_load_connection_file_session(test_connect.py)', '565': 'test_load_connection_file_session_with_kn(test_connect.py)', '322': 'start_new_async_kernel(manager.py)', '351': 'client(manager.py)', '321': 'run_kernel(manager.py)', '323': 'start_new_kernel(manager.py)', '568': 'test_mixin_record_random_ports(test_connect.py)', '567': 'test_mixin_cleanup_random_ports(test_connect.py)'}}, {'key': 2669, 'parent': 2789, 'tfidf_word': 'find get install specs prefix priority subclass spec kernel remove ', 'tfidf_method': 'get_all_specs find_kernel_specs remove_kernel_spec test_find_all_specs test_find_kernel_specs test_install_kernel_spec test_install_kernel_spec_prefix test_kernel_spec_priority test_remove_kernel_spec test_subclass ', 'lda_word': ' kernel,specs,find,list,dir,', 'lda_method': ' find_kernel_specs,is_valid_kernel_name,list_kernels_in,test_install_kernel_spec,test_install_kernel_spec_prefix,', 'lsi_word': ' kernel,specs,find,list,test,', 'lsi_method': ' find_kernel_specs,list_kernels_in,is_valid_kernel_name,is_kernel_dir,get_all_specs,', 'spm_method': ' ', 'text_summary': 'Return a mapping of kernel names to resource directories from dir.', 'files_count': 2, 'files': ['test_kernelspec.py', 'kernelspec.py'], 'execution_path_count': 16, 'function_id_to_name_file': {'621': 'test_find_all_specs(test_kernelspec.py)', '273': 'get_all_specs(kernelspec.py)', '272': 'find_kernel_specs(kernelspec.py)', '258': '_list_kernels_in(kernelspec.py)', '257': '_is_valid_kernel_name(kernelspec.py)', '256': '_is_kernel_dir(kernelspec.py)', '629': 'test_subclass(test_kernelspec.py)', '627': 'test_remove_kernel_spec(test_kernelspec.py)', '277': 'remove_kernel_spec(kernelspec.py)', '625': 'test_install_kernel_spec_prefix(test_kernelspec.py)', '626': 'test_kernel_spec_priority(test_kernelspec.py)', '624': 'test_install_kernel_spec(test_kernelspec.py)', '259': 'find_kernel_specs(kernelspec.py)', '622': 'test_find_kernel_specs(test_kernelspec.py)'}}, {'key': 2787, 'parent': 2789, 'tfidf_word': 'loop flush permission native digest io tunnel cleanup restarter code ', 'tfidf_method': 'test_find_connection_file_relative start test_mixin_record_random_ports test_secure_write update_msg_type check_user_only_permissions fetch_win32_permissions test_extract_date_from_naive test_find_connection_file_abspath SignalTestKernel ', 'lda_word': ' kernel,test,get,spec,session,', 'lda_method': ' session,start_kernel,execute,run_signaltest_lifecycle,get_kernel_spec,', 'lsi_word': ' kernel,spec,start,get,test,', 'lsi_method': ' init,get_kernel_spec,setup,get_all_specs,test_subclass,', 'spm_method': ' ', 'text_summary': "Subclasses may override  Prepares a kernel for startup in a separate process. return ip for localhost (almost always 127.0.0.1) test `ipython console --existing` loads a connection file. Prepares a kernel for startup in a separate process. return ip for localhost (almost always 127.0.0.1)   Ensure that a sequence of kernel startups doesn't break anything. Sends a signal to the process group of the kernel (this. Pass a message to the ZMQ socket to send. Return the connection info as a dict. Subclasses may override Start the polling of the kernel. return ip for localhost (almost always 127.0.0.1) test load_connection_file() after. Launches a localhost kernel, binding to the specified ports. test `ipython console --existing` loads a connection file. find a connection file, and return its absolute path. return ip for localhost (almost always 127.0.0.1)      find a connection file, and return its absolute path. tunnel connections to a kernel via ssh. For tests, create a file to indicate that we've started. Returns a dict mapping kernel names to kernelspecs. handle kernel info reply. Get all messages that are currently ready. Returns the id to associate with the kernel for this request. Send a raw message via ident path. {connection_file})   Prepares a kernel for startup in a separate process. Get the hb channel object for this kernel. {connection_file})  Restarts a kernel with the arguments that were used to launch it. Make a blocking client connected to my kernel. return ip for localhost (almost always 127.0.0.1)  Write connection info to JSON dict in self.connection_file. Get a message from the stdin channel. Immediately processes all pending messages on this channel. Return the number of running kernels. Verify realpath is used when formatting connection file. Unserialize a msg_list to a nested message dict. {connection_file}) Write connection info to JSON dict in self.connection_file. Interrupts the kernel by sending it a signal. Get a message from the shell channel. Get a message from the iopub channel. This is run in the ioloop thread when the kernel info reply is received. default function for packing datetime objects in JSON. Test get_all_specs in subclasses that override find_kernel_specs. Returns a :class:`KernelSpec` instance for a given kernel_name. test load_connection_file() after. Write connection info to JSON dict in self.connection_file. test that messages receive unique ids. Create a zmq Socket and connect it to the kernel. Forgets randomly assigned port numbers and cleans up the connection file.", 'files_count': 35, 'files': ['test_session.py', 'session.py', 'jsonutil.py', 'forward.py', 'test_jsonutil.py', 'manager.py', 'connect.py', 'test_manager.py', 'kernelspec.py', 'localinterfaces.py', 'test_kernelspec.py', 'test_client.py', 'adapter.py', 'test_adapter.py', 'test_connect.py', 'channels.py', 'threaded.py', 'consoleapp.py', 'runapp.py', 'test_multikernelmanager.py', 'multikernelmanager.py', 'tunnel.py', 'test_ssh.py', 'client.py', 'managerabc.py', 'channelsabc.py', 'test_kernelmanager.py', 'utils.py', 'restarter.py', 'signalkernel.py', 'kernelspecapp.py', 'kernelapp.py', 'test_kernelapp.py', 'win_interrupt.py', 'launcher.py'], 'execution_path_count': 519, 'function_id_to_name_file': {'694': 'test_send(test_session.py)', '479': 'recv(session.py)', '474': 'deserialize(session.py)', '242': 'extract_dates(jsonutil.py)', '243': 'parse_date(jsonutil.py)', '240': '_ensure_tzinfo(jsonutil.py)', '492': 'handle(forward.py)', '695': 'test_send_raw(test_session.py)', '484': 'unserialize(session.py)', '696': 'test_serialize(test_session.py)', '578': 'test_parse_ms_precision(test_jsonutil.py)', '689': 'test_datetimes_msgpack(test_session.py)', '679': '_datetime_test(test_session.py)', '688': 'test_datetimes(test_session.py)', '690': 'test_datetimes_pickle(test_session.py)', '575': 'test_date_default(test_jsonutil.py)', '576': 'test_extract_date_from_naive(test_jsonutil.py)', '577': 'test_extract_dates(test_jsonutil.py)', '330': 'restart_kernel(manager.py)', '333': 'start_kernel(manager.py)', '326': '_launch_kernel(manager.py)', '322': 'start_new_async_kernel(manager.py)', '359': 'post_start_kernel(manager.py)', '338': '_connect_control_socket(manager.py)', '192': '_create_connected_socket(connect.py)', '196': '_make_url(connect.py)', '367': 'start_restarter(manager.py)', '635': 'test_connection_file_real_path(test_manager.py)', '353': 'format_kernel_cmd(manager.py)', '358': 'kernel_spec(manager.py)', '253': 'KernelSpec(kernelspec.py)', '360': 'pre_start_kernel(manager.py)', '369': 'from_ns(manager.py)', '212': 'write_connection_file(connect.py)', '197': '_record_random_port_names(connect.py)', '341': '_get_env_substitutions(manager.py)', '314': 'local_ips(localinterfaces.py)', '312': 'is_local_ip(localinterfaces.py)', '623': 'test_get_kernel_spec(test_kernelspec.py)', '267': '_find_spec_directory(kernelspec.py)', '256': '_is_kernel_dir(kernelspec.py)', '632': 'find_kernel_specs(test_kernelspec.py)', '621': 'test_find_all_specs(test_kernelspec.py)', '273': 'get_all_specs(kernelspec.py)', '274': 'get_kernel_spec(kernelspec.py)', '629': 'test_subclass(test_kernelspec.py)', '633': 'get_kernel_spec(test_kernelspec.py)', '549': 'setUp(test_client.py)', '269': '_get_kernel_spec_by_name(kernelspec.py)', '255': 'NoSuchKernel(kernelspec.py)', '278': '__init__(kernelspec.py)', '257': '_is_valid_kernel_name(kernelspec.py)', '260': 'get_kernel_spec(kernelspec.py)', '50': 'adapt(adapter.py)', '450': 'utcnow(session.py)', '516': 'test_default_version(test_adapter.py)', '698': 'test_tracking(test_session.py)', '480': 'send(session.py)', '328': 'interrupt_kernel(manager.py)', '559': 'test_app_load_connection_file(test_connect.py)', '191': 'write_connection_file(connect.py)', '109': 'close(channels.py)', '83': 'close(channels.py)', '315': 'localhost(localinterfaces.py)', '730': 'close(threaded.py)', '132': 'close(channels.py)', '211': 'ports(connect.py)', '718': 'close(threaded.py)', '565': 'test_load_connection_file_session_with_kn(test_connect.py)', '570': 'test_write_connection_file(test_connect.py)', '564': 'test_load_connection_file_session(test_connect.py)', '686': 'test_clone(test_session.py)', '458': '_add_digest(session.py)', '460': '_cull_digest_history(session.py)', '700': 'test_zero_digest_history(test_session.py)', '687': 'test_cull_digest_history(test_session.py)', '558': 'DummyConsoleApp(test_connect.py)', '214': 'JupyterConsoleApp(consoleapp.py)', '441': 'Session(session.py)', '188': 'ConnectionFileMixin(connect.py)', '560': 'test_find_connection_file(test_connect.py)', '213': 'IPythonConsoleApp(consoleapp.py)', '434': 'RunApp(runapp.py)', '665': 'test_start_sequence_tcp_kernels(test_multikernelmanager.py)', '655': '_get_tcp_km(test_multikernelmanager.py)', '392': '__init__(multikernelmanager.py)', '666': 'test_tcp_cinfo(test_multikernelmanager.py)', '668': 'test_tcp_lifecycle_with_kernel_id(test_multikernelmanager.py)', '661': 'test_shutdown_all(test_multikernelmanager.py)', '663': 'test_start_parallel_thread_kernels(test_multikernelmanager.py)', '658': 'tcp_lifecycle_with_loop(test_multikernelmanager.py)', '667': 'test_tcp_lifecycle(test_multikernelmanager.py)', '662': 'test_start_parallel_process_kernels(test_multikernelmanager.py)', '190': 'tunnel_to_kernel(connect.py)', '503': 'select_random_ports(tunnel.py)', '701': 'test_random_ports(test_ssh.py)', '386': 'shutdown_all(multikernelmanager.py)', '383': 'finish_shutdown(multikernelmanager.py)', '410': 'get_kernel(multikernelmanager.py)', '394': '_check_kernel_id(multikernelmanager.py)', '388': 'signal_kernel(multikernelmanager.py)', '385': 'restart_kernel(multikernelmanager.py)', '384': 'interrupt_kernel(multikernelmanager.py)', '387': 'shutdown_kernel(multikernelmanager.py)', '421': 'shutdown_kernel(multikernelmanager.py)', '420': 'shutdown_all(multikernelmanager.py)', '104': 'wait_for_ready(client.py)', '103': 'is_alive(client.py)', '412': 'is_alive(multikernelmanager.py)', '373': 'is_alive(managerabc.py)', '140': 'is_alive(channelsabc.py)', '732': 'is_alive(threaded.py)', '86': 'is_alive(channels.py)', '112': 'is_alive(channels.py)', '123': 'wait_for_ready(client.py)', '165': 'is_alive(client.py)', '648': 'test_start_parallel_thread_kernels(test_multikernelmanager.py)', '643': 'tcp_lifecycle_with_loop(test_multikernelmanager.py)', '642': 'raw_tcp_lifecycle(test_multikernelmanager.py)', '641': '_run_lifecycle(test_multikernelmanager.py)', '647': 'test_start_parallel_process_kernels(test_multikernelmanager.py)', '652': 'test_tcp_lifecycle(test_multikernelmanager.py)', '653': 'test_tcp_lifecycle_with_kernel_id(test_multikernelmanager.py)', '483': 'sign(session.py)', '440': 'Message(session.py)', '482': 'serialize(session.py)', '135': 'run(channels.py)', '128': '_create_socket(channels.py)', '84': 'get_msg(channels.py)', '82': '_recv(channels.py)', '101': 'get_stdin_msg(client.py)', '85': 'get_msgs(channels.py)', '99': 'get_iopub_msg(client.py)', '110': 'get_msg(channels.py)', '108': '_recv(channels.py)', '111': 'get_msgs(channels.py)', '620': 'test_cant_install_kernel_spec(test_kernelspec.py)', '275': 'install_kernel_spec(kernelspec.py)', '268': '_get_destination_dir(kernelspec.py)', '625': 'test_install_kernel_spec_prefix(test_kernelspec.py)', '261': 'install_kernel_spec(kernelspec.py)', '624': 'test_install_kernel_spec(test_kernelspec.py)', '614': 'test_start_sequence_process_kernels(test_kernelmanager.py)', '610': '_run_signaltest_lifecycle(test_kernelmanager.py)', '615': 'execute(test_kernelmanager.py)', '609': '_prepare_kernel(test_kernelmanager.py)', '611': 'test_start_parallel_process_kernels(test_kernelmanager.py)', '613': 'test_start_sequence_kernels(test_kernelmanager.py)', '612': 'test_start_parallel_thread_kernels(test_kernelmanager.py)', '398': '_kernel_manager_class_changed(multikernelmanager.py)', '396': '_create_kernel_manager_factory(multikernelmanager.py)', '424': 'create_kernel_manager(multikernelmanager.py)', '397': '_find_available_port(multikernelmanager.py)', '395': '_context_default(multikernelmanager.py)', '399': '_kernel_manager_factory_default(multikernelmanager.py)', '215': '__init__(consoleapp.py)', '485': '__init__(session.py)', '457': '__init__(session.py)', '465': '_new_auth(session.py)', '459': '_check_packers(session.py)', '244': 'squash_dates(jsonutil.py)', '90': 'AsyncKernelClient(client.py)', '147': 'KernelClient(client.py)', '139': 'HBChannelABC(channelsabc.py)', '138': 'ChannelABC(channelsabc.py)', '116': 'BlockingKernelClient(client.py)', '319': 'AsyncKernelManager(manager.py)', '320': 'KernelManager(manager.py)', '224': 'AsyncIOLoopKernelManager(manager.py)', '225': 'IOLoopKernelManager(manager.py)', '657': '_run_lifecycle(test_multikernelmanager.py)', '704': 'execute(utils.py)', '155': 'execute(client.py)', '148': 'validate_string_dict(client.py)', '734': 'send(threaded.py)', '738': 'thread_send(threaded.py)', '664': 'test_start_sequence_ipc_kernels(test_multikernelmanager.py)', '654': '_get_ipc_km(test_multikernelmanager.py)', '660': 'test_ipc_lifecycle(test_multikernelmanager.py)', '659': 'test_ipc_cinfo(test_multikernelmanager.py)', '423': 'start_kernel(multikernelmanager.py)', '415': 'pre_start_kernel(multikernelmanager.py)', '380': 'DuplicateKernelError(multikernelmanager.py)', '414': 'new_kernel_id(multikernelmanager.py)', '389': 'start_kernel(multikernelmanager.py)', '238': 'start(restarter.py)', '430': 'poll(restarter.py)', '433': 'stop(restarter.py)', '428': '_fire_callbacks(restarter.py)', '510': 'do_execute(signalkernel.py)', '501': 'openssh_tunnel(tunnel.py)', '494': 'SSHException(tunnel.py)', '497': '_stop_tunnel(tunnel.py)', '475': 'feed_identities(session.py)', '202': 'cleanup_random_ports(connect.py)', '200': 'cleanup_connection_file(connect.py)', '567': 'test_mixin_cleanup_random_ports(test_connect.py)', '106': 'ZMQSocketChannel(channels.py)', '226': 'as_zmqstream(manager.py)', '233': 'wrapped(manager.py)', '568': 'test_mixin_record_random_ports(test_connect.py)', '557': 'DummyConfigurable(test_connect.py)', '235': 'IOLoopKernelRestarter(restarter.py)', '426': 'KernelRestarter(restarter.py)', '234': 'AsyncIOLoopKernelRestarter(restarter.py)', '291': 'start(kernelspecapp.py)', '251': 'start(kernelapp.py)', '249': 'setup_signals(kernelapp.py)', '252': 'shutdown_handler(kernelapp.py)', '250': 'shutdown(kernelapp.py)', '248': 'log_connection_info(kernelapp.py)', '199': 'blocking_client(connect.py)', '208': 'get_connection_info(connect.py)', '725': 'stop_channels(threaded.py)', '684': 'test_bad_unpack(test_session.py)', '676': '_bad_unpacker(test_session.py)', '536': 'test_complete_request(test_adapter.py)', '517': 'adapt(test_adapter.py)', '562': 'test_find_connection_file_local(test_connect.py)', '189': 'find_connection_file(connect.py)', '493': 'SubHander(forward.py)', '490': 'Handler(forward.py)', '114': 'send(channels.py)', '88': 'send(channels.py)', '241': 'date_default(jsonutil.py)', '597': 'test_subclasses(test_kernelmanager.py)', '703': 'AsyncKernelManagerWithCleanup(utils.py)', '595': 'test_signal_kernel_subprocesses(test_kernelmanager.py)', '598': 'execute(test_kernelmanager.py)', '702': 'AsyncKernelManagerSubclass(utils.py)', '591': 'transport(test_kernelmanager.py)', '606': 'test_templated_kspec_env(test_kernelmanager.py)', '599': '_env_test_body(test_kernelmanager.py)', '607': 'execute(test_kernelmanager.py)', '604': 'test_signal_kernel_subprocesses(test_kernelmanager.py)', '608': 'execute(test_kernelmanager.py)', '586': 'env(test_kernelmanager.py)', '712': 'stop(utils.py)', '711': 'start(utils.py)', '705': 'test_env(utils.py)', '630': 'test_validate_kernel_name(test_kernelspec.py)', '506': 'SignalTestApp(signalkernel.py)', '507': 'SignalTestKernel(signalkernel.py)', '627': 'test_remove_kernel_spec(test_kernelspec.py)', '617': '_install_sample_kernel(test_kernelspec.py)', '626': 'test_kernel_spec_priority(test_kernelspec.py)', '651': 'test_tcp_cinfo(test_multikernelmanager.py)', '640': '_run_cinfo(test_multikernelmanager.py)', '622': 'test_find_kernel_specs(test_kernelspec.py)', '619': 'tearDown(test_kernelspec.py)', '618': 'setUp(test_kernelspec.py)', '649': 'test_start_sequence_ipc_kernels(test_multikernelmanager.py)', '650': 'test_start_sequence_tcp_kernels(test_multikernelmanager.py)', '644': 'test_ipc_cinfo(test_multikernelmanager.py)', '645': 'test_ipc_lifecycle(test_multikernelmanager.py)', '656': '_run_cinfo(test_multikernelmanager.py)', '569': 'test_secure_write(test_connect.py)', '573': 'check_user_only_permissions(test_connect.py)', '574': 'fetch_win32_permissions(test_connect.py)', '563': 'test_find_connection_file_relative(test_connect.py)', '561': 'test_find_connection_file_abspath(test_connect.py)', '539': 'test_input_request(test_adapter.py)', '537': 'test_display_data(test_adapter.py)', '540': 'test_inspect_reply(test_adapter.py)', '543': 'test_kernel_info_reply(test_adapter.py)', '542': 'test_inspect_request_token(test_adapter.py)', '535': 'test_complete_reply(test_adapter.py)', '541': 'test_inspect_request(test_adapter.py)', '538': 'test_execute_request(test_adapter.py)', '545': 'test_rename_type(test_adapter.py)', '544': 'test_no_adapt(test_adapter.py)', '546': 'test_same_version(test_adapter.py)', '514': 'V5toV4TestCase(test_adapter.py)', '512': 'AdapterTest(test_adapter.py)', '526': 'test_input_request(test_adapter.py)', '523': 'test_display_data(test_adapter.py)', '527': 'test_kernel_info_reply(test_adapter.py)', '530': 'test_object_info_reply_not_found(test_adapter.py)', '529': 'test_object_info_reply(test_adapter.py)', '531': 'test_object_info_request(test_adapter.py)', '521': 'test_complete_reply(test_adapter.py)', '522': 'test_complete_request(test_adapter.py)', '524': 'test_execute_reply(test_adapter.py)', '532': 'test_rename_type(test_adapter.py)', '525': 'test_execute_request(test_adapter.py)', '528': 'test_no_adapt(test_adapter.py)', '533': 'test_same_version(test_adapter.py)', '513': 'V4toV5TestCase(test_adapter.py)', '519': 'setUp(test_adapter.py)', '515': 'test_code_to_line_no_code(test_adapter.py)', '51': 'code_to_line(adapter.py)', '158': 'get_shell_msg(client.py)', '157': 'get_iopub_msg(client.py)', '710': '__exit__(utils.py)', '709': '__enter__(utils.py)', '580': 'test_kernelapp_lifecycle(test_kernelapp.py)', '579': '_launch(test_kernelapp.py)', '473': 'clone(session.py)', '481': 'send_raw(session.py)', '683': 'test_bad_roundtrip(test_session.py)', '685': 'test_bad_unpacker(test_session.py)', '682': 'test_bad_packer(test_session.py)', '681': 'test_bad_pack(test_session.py)', '675': '_bad_packer(test_session.py)', '697': 'test_session_id(test_session.py)', '699': 'test_unique_msg_ids(test_session.py)', '445': 'msg_header(session.py)', '680': 'test_args(test_session.py)', '478': 'msg_id(session.py)', '674': 'TestSession(test_session.py)', '673': 'SessionTestCase(test_session.py)', '678': 'setUp(test_session.py)', '556': 'test_shutdown(test_client.py)', '548': '_check_reply(test_client.py)', '550': 'test_comm_info(test_client.py)', '555': 'test_kernel_info(test_client.py)', '551': 'test_complete(test_client.py)', '554': 'test_inspect(test_client.py)', '553': 'test_history(test_client.py)', '117': 'reqrep(client.py)', '124': 'wrapped(client.py)', '150': '_handle_kernel_info_reply(client.py)', '125': 'HBChannel(channels.py)', '102': 'hb_channel(client.py)', '91': 'reqrep(client.py)', '105': 'wrapped(client.py)', '80': 'ZMQSocketChannel(channels.py)', '154': 'control_channel(client.py)', '723': 'ioloop(threaded.py)', '160': 'hb_channel(client.py)', '171': 'stdin_channel(client.py)', '164': 'iopub_channel(client.py)', '168': 'shell_channel(client.py)', '740': 'send_interrupt(win_interrupt.py)', '334': '__del__(manager.py)', '293': 'start(kernelspecapp.py)', '294': 'path_key(kernelspecapp.py)', '735': 'start(threaded.py)', '720': 'start(threaded.py)', '141': 'start(channelsabc.py)', '432': 'start(restarter.py)', '288': 'start(kernelspecapp.py)', '89': 'start(channels.py)', '115': 'start(channels.py)', '290': 'start(kernelspecapp.py)', '438': 'parse_command_line(runapp.py)', '218': 'build_kernel_argv(consoleapp.py)', '308': '_only_once(localinterfaces.py)', '317': 'wrapped(localinterfaces.py)', '47': 'V4toV5(adapter.py)', '46': 'Adapter(adapter.py)', '77': 'object_info_request(adapter.py)', '52': 'extract_oname_v4(adapter.py)', '70': 'complete_request(adapter.py)', '75': 'kernel_info_reply(adapter.py)', '49': '_version_str_to_list(adapter.py)', '48': 'V5toV4(adapter.py)', '53': '__call__(adapter.py)', '54': 'handle_reply_status_error(adapter.py)', '57': 'update_msg_type(adapter.py)', '56': 'update_metadata(adapter.py)', '55': 'update_header(adapter.py)', '247': 'initialize(kernelapp.py)', '246': '_record_started(kernelapp.py)', '585': 'config(test_kernelmanager.py)', '262': 'install_native_kernel_spec(kernelspec.py)', '276': 'install_native_kernel_spec(kernelspec.py)', '265': 'to_json(kernelspec.py)', '264': 'to_dict(kernelspec.py)', '449': 'test_msg2obj(session.py)', '453': '__init__(session.py)', '470': '_signature_scheme_changed(session.py)', '463': '_key_default(session.py)', '447': 'new_id_bytes(session.py)', '462': '_key_changed(session.py)', '443': 'default_secure(session.py)', '469': '_session_default(session.py)', '446': 'new_id(session.py)', '413': 'list_kernel_ids(multikernelmanager.py)', '721': 'stop(threaded.py)', '724': 'start_channels(threaded.py)', '722': '_check_kernel_info_reply(threaded.py)', '716': '__init__(threaded.py)', '416': 'remove_kernel(multikernelmanager.py)', '713': 'IOLoopThread(threaded.py)', '714': 'ThreadedKernelClient(threaded.py)', '715': 'ThreadedZMQSocketChannel(threaded.py)', '731': 'flush(threaded.py)', '727': '_flush(threaded.py)', '418': 'request_shutdown(multikernelmanager.py)', '402': 'cleanup_resources(multikernelmanager.py)', '408': 'finish_shutdown(multikernelmanager.py)', '393': '__len__(multikernelmanager.py)', '198': '_session_default(connect.py)', '298': 'launch_kernel(launcher.py)', '739': 'create_interrupt_event(win_interrupt.py)', '741': 'SECURITY_ATTRIBUTES(win_interrupt.py)', '509': '__init__(signalkernel.py)', '127': '__init__(channels.py)', '126': 'InvalidPortNumber(channels.py)', '107': '__init__(channels.py)', '81': '__init__(channels.py)', '726': '__init__(threaded.py)', '737': 'setup_stream(threaded.py)', '728': '_handle_recv(threaded.py)', '729': 'call_handlers(threaded.py)', '136': 'stop(channels.py)', '133': 'is_beating(channels.py)', '145': 'time_to_dead(channelsabc.py)', '131': 'call_handlers(channels.py)', '130': '_poll(channels.py)'}}, {'key': 1771, 'parent': 2001, 'tfidf_word': 'handle header id initialize interrupt kernel sigint send msg ', 'tfidf_method': 'interrupt_kernel handle_sigint initialize msg msg_header msg_id send ', 'lda_word': ' msg,header,interrupt,kernel,initialize,', 'lda_method': ' msg_id,handle_sigint,msg_header,msg,interrupt_kernel,', 'lsi_word': ' msg,header,kernel,sigint,interrupt,', 'lsi_method': ' msg_header,msg,interrupt_kernel,msg_id,handle_sigint,', 'spm_method': '  &#187; initialize(runapp.py) &rarr; handle_sigint(runapp.py) &rarr; interrupt_kernel(manager.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br>', 'text_summary': '', 'files_count': 3, 'files': ['runapp.py', 'manager.py', 'session.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'437': 'initialize(runapp.py)', '435': 'handle_sigint(runapp.py)', '355': 'interrupt_kernel(manager.py)', '476': 'msg(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '480': 'send(session.py)'}}, {'key': 1989, 'parent': 2001, 'tfidf_word': 'handle header id initialize interrupt kernel sigint msg ', 'tfidf_method': 'interrupt_kernel handle_sigint initialize msg msg_header msg_id msg msg ', 'lda_word': ' msg,interrupt,kernel,handle,initialize,', 'lda_method': ' msg,handle_sigint,initialize,interrupt_kernel,msg_id,', 'lsi_word': ' msg,sigint,initialize,interrupt,kernel,', 'lsi_method': ' msg,initialize,msg_id,interrupt_kernel,msg_header,', 'spm_method': '  &#187; initialize(runapp.py) &rarr; handle_sigint(runapp.py) &rarr; interrupt_kernel(manager.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; handle_sigint(runapp.py) &rarr; interrupt_kernel(manager.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br>', 'text_summary': '', 'files_count': 4, 'files': ['runapp.py', 'manager.py', 'test_adapter.py', 'session.py'], 'execution_path_count': 4, 'function_id_to_name_file': {'437': 'initialize(runapp.py)', '435': 'handle_sigint(runapp.py)', '355': 'interrupt_kernel(manager.py)', '520': 'msg(test_adapter.py)', '476': 'msg(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '534': 'msg(test_adapter.py)'}}, {'key': 2036, 'parent': 2676, 'tfidf_word': 'extract handle header initialize interrupt kernel sigint send msg ', 'tfidf_method': 'interrupt_kernel handle_sigint initialize extract_header msg msg msg send ', 'lda_word': ' kernel,msg,interrupt,sigint,initialize,', 'lda_method': ' msg,initialize,interrupt_kernel,extract_header,handle_sigint,', 'lsi_word': ' msg,extract,initialize,sigint,interrupt,', 'lsi_method': ' msg,extract_header,handle_sigint,initialize,interrupt_kernel,', 'spm_method': '  &#187; initialize(runapp.py) &rarr; handle_sigint(runapp.py) &rarr; interrupt_kernel(manager.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br>', 'text_summary': 'Interrupts the kernel by sending it a signal. Pass a message to the ZMQ socket to send.', 'files_count': 4, 'files': ['runapp.py', 'manager.py', 'session.py', 'test_adapter.py'], 'execution_path_count': 6, 'function_id_to_name_file': {'437': 'initialize(runapp.py)', '435': 'handle_sigint(runapp.py)', '355': 'interrupt_kernel(manager.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '480': 'send(session.py)', '520': 'msg(test_adapter.py)', '534': 'msg(test_adapter.py)'}}, {'key': 2409, 'parent': 2676, 'tfidf_word': 'signal sign adapt message control serialize utcnow kernel socket connect ', 'tfidf_method': 'serialize send Message send_interrupt interrupt_kernel interrupt_kernel signal_kernel _connect_control_socket utcnow send ', 'lda_word': ' kernel,launch,handle,initialize,interrupt,', 'lda_method': ' serialize,sign,initialize,interrupt_kernel,handle_sigint,', 'lsi_word': ' kernel,interrupt,handle,sigint,initialize,', 'lsi_method': ' interrupt_kernel,initialize,handle_sigint,send,launch_kernel,', 'spm_method': ' ', 'text_summary': 'Interrupts the kernel by sending it a signal. Pass a message to the ZMQ socket to send.', 'files_count': 10, 'files': ['runapp.py', 'multikernelmanager.py', 'managerabc.py', 'manager.py', 'session.py', 'adapter.py', 'connect.py', 'threaded.py', 'channels.py', 'win_interrupt.py'], 'execution_path_count': 13, 'function_id_to_name_file': {'437': 'initialize(runapp.py)', '435': 'handle_sigint(runapp.py)', '411': 'interrupt_kernel(multikernelmanager.py)', '372': 'interrupt_kernel(managerabc.py)', '355': 'interrupt_kernel(manager.py)', '480': 'send(session.py)', '50': 'adapt(adapter.py)', '450': 'utcnow(session.py)', '482': 'serialize(session.py)', '483': 'sign(session.py)', '440': 'Message(session.py)', '354': 'has_kernel(manager.py)', '347': '_launch_kernel(manager.py)', '365': 'signal_kernel(manager.py)', '338': '_connect_control_socket(manager.py)', '192': '_create_connected_socket(connect.py)', '196': '_make_url(connect.py)', '734': 'send(threaded.py)', '738': 'thread_send(threaded.py)', '114': 'send(channels.py)', '88': 'send(channels.py)', '740': 'send_interrupt(win_interrupt.py)'}}, {'key': 2358, 'parent': 2745, 'tfidf_word': 'passwordless try header extract id paramiko tunnel server split msg ', 'tfidf_method': 'open_tunnel paramiko_tunnel tunnel_connection msg msg msg extract_header msg_header msg_id _split_server ', 'lda_word': ' tunnel,paramiko,msg,passwordless,extract,', 'lda_method': ' msg,try_passwordless_paramiko,paramiko_tunnel,tunnel_connection,open_tunnel,', 'lsi_word': ' msg,tunnel,paramiko,connection,open,', 'lsi_method': ' msg,try_passwordless_paramiko,tunnel_connection,paramiko_tunnel,open_tunnel,', 'spm_method': '  &#187; tunnel_connection(tunnel.py) &rarr; open_tunnel(tunnel.py) &rarr; paramiko_tunnel(tunnel.py) &rarr; _try_passwordless_paramiko(tunnel.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; open_tunnel(tunnel.py) &rarr; paramiko_tunnel(tunnel.py) &rarr; _try_passwordless_paramiko(tunnel.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; paramiko_tunnel(tunnel.py) &rarr; _try_passwordless_paramiko(tunnel.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br>', 'text_summary': 'Open a tunneled connection from a 0MQ url. Connect a socket to an address via an ssh tunnel. launch a tunner with paramiko in a subprocess. This should only be used Try passwordless login with paramiko.', 'files_count': 3, 'files': ['tunnel.py', 'test_adapter.py', 'session.py'], 'execution_path_count': 11, 'function_id_to_name_file': {'505': 'tunnel_connection(tunnel.py)', '500': 'open_tunnel(tunnel.py)', '502': 'paramiko_tunnel(tunnel.py)', '499': '_try_passwordless_paramiko(tunnel.py)', '520': 'msg(test_adapter.py)', '476': 'msg(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '534': 'msg(test_adapter.py)', '444': 'extract_header(session.py)', '496': '_split_server(tunnel.py)'}}, {'key': 2689, 'parent': 2745, 'tfidf_word': 'openssh port exception forward server split ssh stop tunnel paramiko ', 'tfidf_method': 'close close ports forward_tunnel SSHException _split_server _stop_tunnel close close close ', 'lda_word': ' tunnel,paramiko,open,connection,forward,', 'lda_method': ' open_tunnel,tunnel_connection,close,select_random_ports,paramiko_tunnel,', 'lsi_word': ' tunnel,connection,open,port,paramiko,', 'lsi_method': ' open_tunnel,tunnel_connection,select_random_ports,close,paramiko_tunnel,', 'spm_method': ' ', 'text_summary': 'Create an ssh tunnel using command-line ssh that connects port lport. Open a tunneled connection from a 0MQ url. This should only be used Function for actually starting a paramiko tunnel, to be passed.', 'files_count': 5, 'files': ['tunnel.py', 'threaded.py', 'channels.py', 'connect.py', 'forward.py'], 'execution_path_count': 10, 'function_id_to_name_file': {'505': 'tunnel_connection(tunnel.py)', '500': 'open_tunnel(tunnel.py)', '503': 'select_random_ports(tunnel.py)', '730': 'close(threaded.py)', '718': 'close(threaded.py)', '109': 'close(channels.py)', '132': 'close(channels.py)', '83': 'close(channels.py)', '211': 'ports(connect.py)', '502': 'paramiko_tunnel(tunnel.py)', '495': '_paramiko_tunnel(tunnel.py)', '496': '_split_server(tunnel.py)', '491': 'forward_tunnel(forward.py)', '501': 'openssh_tunnel(tunnel.py)', '494': 'SSHException(tunnel.py)', '497': '_stop_tunnel(tunnel.py)'}}, {'key': 2700, 'parent': 2776, 'tfidf_word': 'initialize header extract id info kernel unpause get shell msg ', 'tfidf_method': 'kernel_info msg msg msg extract_header msg_header msg_id unpause unpause get_shell_msg ', 'lda_word': ' msg,info,kernel,initialize,init,', 'lda_method': ' msg,init_kernel_info,initialize,msg_header,msg_id,', 'lsi_word': ' msg,kernel,info,init,initialize,', 'lsi_method': ' msg,init_kernel_info,initialize,kernel_info,msg_id,', 'spm_method': '  &#187; initialize(runapp.py) &rarr; init_kernel_info(runapp.py) &rarr; kernel_info(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; init_kernel_info(runapp.py) &rarr; kernel_info(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br>', 'text_summary': 'Given a message or header, return the header. Request kernel info.', 'files_count': 6, 'files': ['runapp.py', 'client.py', 'channels.py', 'channelsabc.py', 'test_adapter.py', 'session.py'], 'execution_path_count': 13, 'function_id_to_name_file': {'437': 'initialize(runapp.py)', '436': 'init_kernel_info(runapp.py)', '158': 'get_shell_msg(client.py)', '137': 'unpause(channels.py)', '146': 'unpause(channelsabc.py)', '167': 'kernel_info(client.py)', '534': 'msg(test_adapter.py)', '476': 'msg(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '520': 'msg(test_adapter.py)', '444': 'extract_header(session.py)'}}, {'key': 2770, 'parent': 2776, 'tfidf_word': 'input passwordless ssh try start exception openssh server split msg ', 'tfidf_method': '_try_passwordless_paramiko input start start extract_header msg_header msg_id SSHException _split_server _try_passwordless_openssh ', 'lda_word': ' msg,start,header,input,try,', 'lda_method': ' msg,extract_header,tunnel_to_kernel,try_passwordless_ssh,try_passwordless_paramiko,', 'lsi_word': ' msg,try,passwordless,header,start,', 'lsi_method': ' msg,start,input,msg_id,msg_header,', 'spm_method': '  &#187; start(kernelspecapp.py) &rarr; start(kernelspecapp.py) &rarr; input(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; start(kernelspecapp.py) &rarr; input(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; tunnel_to_kernel(connect.py) &rarr; try_passwordless_ssh(tunnel.py) &rarr; _try_passwordless_paramiko(tunnel.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; try_passwordless_ssh(tunnel.py) &rarr; _try_passwordless_paramiko(tunnel.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br>', 'text_summary': 'Attempt to make an ssh connection without a password. tunnel connections to a kernel via ssh. Try passwordless login with shell ssh command. Try passwordless login with paramiko.', 'files_count': 6, 'files': ['kernelspecapp.py', 'client.py', 'test_adapter.py', 'session.py', 'connect.py', 'tunnel.py'], 'execution_path_count': 22, 'function_id_to_name_file': {'291': 'start(kernelspecapp.py)', '297': 'start(kernelspecapp.py)', '162': 'input(client.py)', '534': 'msg(test_adapter.py)', '476': 'msg(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '520': 'msg(test_adapter.py)', '444': 'extract_header(session.py)', '190': 'tunnel_to_kernel(connect.py)', '504': 'try_passwordless_ssh(tunnel.py)', '499': '_try_passwordless_paramiko(tunnel.py)', '498': '_try_passwordless_openssh(tunnel.py)', '494': 'SSHException(tunnel.py)', '496': '_split_server(tunnel.py)'}}, {'key': 2048, 'parent': 2360, 'tfidf_word': 'resource shutdown url async new restart start cleanup kernel socket ', 'tfidf_method': '_create_connected_socket _make_url shutdown_kernel _close_control_socket cleanup_resources start_new_async_kernel restart_kernel cleanup ', 'lda_word': ' kernel,socket,start,async,create,', 'lda_method': ' make_url,shutdown_kernel,close_control_socket,cleanup_resources,start_new_async_kernel,', 'lsi_word': ' kernel,socket,cleanup,url,resource,', 'lsi_method': ' cleanup_resources,shutdown_kernel,create_connected_socket,make_url,close_control_socket,', 'spm_method': '  &#187; restart_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; cleanup_resources(manager.py) &rarr; _close_control_socket(manager.py) &rarr; _create_connected_socket(connect.py) &rarr; _make_url(connect.py) . <br> &#187; shutdown_kernel(manager.py) &rarr; cleanup(manager.py) &rarr; cleanup_resources(manager.py) &rarr; _close_control_socket(manager.py) &rarr; _create_connected_socket(connect.py) &rarr; _make_url(connect.py) . <br> &#187; start_new_async_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; cleanup_resources(manager.py) &rarr; _close_control_socket(manager.py) &rarr; _create_connected_socket(connect.py) &rarr; _make_url(connect.py) . <br>', 'text_summary': 'Attempts to stop the kernel process cleanly. Create a zmq Socket and connect it to the kernel.', 'files_count': 2, 'files': ['manager.py', 'connect.py'], 'execution_path_count': 4, 'function_id_to_name_file': {'330': 'restart_kernel(manager.py)', '331': 'shutdown_kernel(manager.py)', '349': 'cleanup(manager.py)', '350': 'cleanup_resources(manager.py)', '337': '_close_control_socket(manager.py)', '192': '_create_connected_socket(connect.py)', '196': '_make_url(connect.py)', '322': 'start_new_async_kernel(manager.py)'}}, {'key': 2301, 'parent': 2360, 'tfidf_word': 'resource run restart new start execute poll socket cleanup kernel ', 'tfidf_method': '_make_url _close_control_socket cleanup_resources shutdown_kernel poll run_kernel start_new_kernel cleanup restart_kernel do_execute ', 'lda_word': ' kernel,socket,cleanup,resource,create,', 'lda_method': ' cleanup_resources,make_url,create_connected_socket,poll,do_execute,', 'lsi_word': ' kernel,socket,cleanup,create,shutdown,', 'lsi_method': ' cleanup_resources,close_control_socket,shutdown_kernel,create_connected_socket,make_url,', 'spm_method': '  &#187; do_execute(signalkernel.py) &rarr; poll(restarter.py) &rarr; restart_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; cleanup_resources(manager.py) &rarr; _close_control_socket(manager.py) &rarr; _create_connected_socket(connect.py) &rarr; _make_url(connect.py) . <br> &#187; poll(restarter.py) &rarr; restart_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; cleanup_resources(manager.py) &rarr; _close_control_socket(manager.py) &rarr; _create_connected_socket(connect.py) &rarr; _make_url(connect.py) . <br> &#187; restart_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; cleanup_resources(manager.py) &rarr; _close_control_socket(manager.py) &rarr; _create_connected_socket(connect.py) &rarr; _make_url(connect.py) . <br> &#187; shutdown_kernel(manager.py) &rarr; cleanup(manager.py) &rarr; cleanup_resources(manager.py) &rarr; _close_control_socket(manager.py) &rarr; _create_connected_socket(connect.py) &rarr; _make_url(connect.py) . <br> &#187; run_kernel(manager.py) &rarr; start_new_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; cleanup_resources(manager.py) &rarr; _close_control_socket(manager.py) &rarr; _create_connected_socket(connect.py) &rarr; _make_url(connect.py) . <br> &#187; start_new_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; cleanup_resources(manager.py) &rarr; _close_control_socket(manager.py) &rarr; _create_connected_socket(connect.py) &rarr; _make_url(connect.py) . <br>', 'text_summary': 'Create a zmq Socket and connect it to the kernel. Context manager to create a kernel in a subprocess.', 'files_count': 4, 'files': ['signalkernel.py', 'restarter.py', 'manager.py', 'connect.py'], 'execution_path_count': 4, 'function_id_to_name_file': {'510': 'do_execute(signalkernel.py)', '236': 'poll(restarter.py)', '363': 'restart_kernel(manager.py)', '364': 'shutdown_kernel(manager.py)', '350': 'cleanup_resources(manager.py)', '337': '_close_control_socket(manager.py)', '192': '_create_connected_socket(connect.py)', '196': '_make_url(connect.py)', '349': 'cleanup(manager.py)', '321': 'run_kernel(manager.py)', '323': 'start_new_kernel(manager.py)'}}, {'key': 2367, 'parent': 2707, 'tfidf_word': 'control async new restart start connect kernel socket shutdown interrupt ', 'tfidf_method': '_create_connected_socket _make_url shutdown_kernel request_shutdown _connect_control_socket start_new_async_kernel restart_kernel interrupt_kernel ', 'lda_word': ' async,start,new,shutdown,kernel,', 'lda_method': ' start_new_async_kernel,shutdown_kernel,connect_control_socket,create_connected_socket,make_url,', 'lsi_word': ' kernel,shutdown,socket,connect,url,', 'lsi_method': ' make_url,create_connected_socket,request_shutdown,shutdown_kernel,connect_control_socket,', 'spm_method': ' ', 'text_summary': 'Attempts to stop the kernel process cleanly. Send a shutdown request via control channel. Interrupts the kernel by sending it a signal.', 'files_count': 2, 'files': ['manager.py', 'connect.py'], 'execution_path_count': 5, 'function_id_to_name_file': {'330': 'restart_kernel(manager.py)', '331': 'shutdown_kernel(manager.py)', '362': 'request_shutdown(manager.py)', '192': '_create_connected_socket(connect.py)', '196': '_make_url(connect.py)', '322': 'start_new_async_kernel(manager.py)', '328': 'interrupt_kernel(manager.py)', '338': '_connect_control_socket(manager.py)'}}, {'key': 2668, 'parent': 2707, 'tfidf_word': 'async channel hb interrupt close del control stdin iopub shell ', 'tfidf_method': 'connect_shell connect_stdin connect_hb control_channel iopub_channel shell_channel stdin_channel interrupt_kernel __del__ _close_control_socket ', 'lda_word': ' connect,kernel,manager,io,loop,', 'lda_method': ' connect_control,asyncioloopkernelmanager,create_connected_socket,make_url,ioloopkernelmanager,', 'lsi_word': ' connect,socket,url,make,create,', 'lsi_method': ' make_url,create_connected_socket,asyncioloopkernelmanager,ioloopkernelmanager,connect_control,', 'spm_method': ' ', 'text_summary': 'return zmq Socket connected to the StdIn channel. return zmq Socket connected to the Heartbeat channel. return zmq Socket connected to the Shell channel. return zmq Socket connected to the IOPub channel. return zmq Socket connected to the Control channel. Create a zmq Socket and connect it to the kernel.', 'files_count': 3, 'files': ['manager.py', 'connect.py', 'client.py'], 'execution_path_count': 16, 'function_id_to_name_file': {'224': 'AsyncIOLoopKernelManager(manager.py)', '203': 'connect_control(connect.py)', '192': '_create_connected_socket(connect.py)', '196': '_make_url(connect.py)', '154': 'control_channel(client.py)', '225': 'IOLoopKernelManager(manager.py)', '207': 'connect_stdin(connect.py)', '171': 'stdin_channel(client.py)', '206': 'connect_shell(connect.py)', '168': 'shell_channel(client.py)', '205': 'connect_iopub(connect.py)', '164': 'iopub_channel(client.py)', '204': 'connect_hb(connect.py)', '334': '__del__(manager.py)', '337': '_close_control_socket(manager.py)', '328': 'interrupt_kernel(manager.py)'}}, {'key': 2666, 'parent': 2742, 'tfidf_word': 'restarter wait alive kernel beating channels interrupt poll stop start ', 'tfidf_method': 'poll start_restarter start_restarter is_alive is_beating wait_for_ready execute_interactive wait_for_ready stop_channels execute_interactive ', 'lda_word': ' kernel,alive,launch,wait,ready,', 'lda_method': ' is_alive,launch_kernel,has_kernel,wait_for_ready,poll,', 'lsi_word': ' kernel,launch,alive,start,execute,', 'lsi_method': ' is_alive,launch_kernel,has_kernel,start,wait_for_ready,', 'spm_method': ' ', 'text_summary': 'Has a kernel been started that we are managing. Start the polling of the kernel.', 'files_count': 8, 'files': ['manager.py', 'kernelspecapp.py', 'runapp.py', 'client.py', 'signalkernel.py', 'restarter.py', 'channels.py', 'threaded.py'], 'execution_path_count': 10, 'function_id_to_name_file': {'228': 'start_restarter(manager.py)', '354': 'has_kernel(manager.py)', '347': '_launch_kernel(manager.py)', '328': 'interrupt_kernel(manager.py)', '231': 'start_restarter(manager.py)', '291': 'start(kernelspecapp.py)', '439': 'start(runapp.py)', '122': 'execute_interactive(client.py)', '357': 'is_alive(manager.py)', '97': 'execute_interactive(client.py)', '510': 'do_execute(signalkernel.py)', '236': 'poll(restarter.py)', '123': 'wait_for_ready(client.py)', '165': 'is_alive(client.py)', '104': 'wait_for_ready(client.py)', '103': 'is_alive(client.py)', '133': 'is_beating(channels.py)', '725': 'stop_channels(threaded.py)'}}, {'key': 2710, 'parent': 2742, 'tfidf_word': 'new restart start alive wait signal shutdown async interrupt kernel ', 'tfidf_method': 'has_kernel shutdown_kernel _kill_kernel finish_shutdown start_new_async_kernel restart_kernel _async_wait is_alive signal_kernel interrupt_kernel ', 'lda_word': ' kernel,shutdown,kill,async,restart,', 'lda_method': ' start_new_async_kernel,finish_shutdown,is_alive,launch_kernel,has_kernel,', 'lsi_word': ' kernel,shutdown,launch,async,kill,', 'lsi_method': ' has_kernel,launch_kernel,shutdown_kernel,kill_kernel,finish_shutdown,', 'spm_method': '  &#187; restart_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; finish_shutdown(manager.py) &rarr; _async_wait(manager.py) &rarr; is_alive(manager.py) &rarr; has_kernel(manager.py) &rarr; _launch_kernel(manager.py) . <br> &#187; shutdown_kernel(manager.py) &rarr; finish_shutdown(manager.py) &rarr; _kill_kernel(manager.py) &rarr; _async_wait(manager.py) &rarr; is_alive(manager.py) &rarr; has_kernel(manager.py) &rarr; _launch_kernel(manager.py) . <br> &#187; finish_shutdown(manager.py) &rarr; _kill_kernel(manager.py) &rarr; _async_wait(manager.py) &rarr; is_alive(manager.py) &rarr; has_kernel(manager.py) &rarr; _launch_kernel(manager.py) . <br> &#187; start_new_async_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; finish_shutdown(manager.py) &rarr; _async_wait(manager.py) &rarr; is_alive(manager.py) &rarr; has_kernel(manager.py) &rarr; _launch_kernel(manager.py) . <br>', 'text_summary': "Sends a signal to the process group of the kernel (this. Wait for kernel shutdown, then kill process if it doesn't shutdown. Interrupts the kernel by sending it a signal. actually launch the kernel.", 'files_count': 1, 'files': ['manager.py'], 'execution_path_count': 15, 'function_id_to_name_file': {'330': 'restart_kernel(manager.py)', '331': 'shutdown_kernel(manager.py)', '327': 'finish_shutdown(manager.py)', '324': '_async_wait(manager.py)', '329': 'is_alive(manager.py)', '354': 'has_kernel(manager.py)', '347': '_launch_kernel(manager.py)', '322': 'start_new_async_kernel(manager.py)', '325': '_kill_kernel(manager.py)', '328': 'interrupt_kernel(manager.py)', '332': 'signal_kernel(manager.py)'}}, {'key': 2716, 'parent': 2775, 'tfidf_word': 'kernel shutdown send sign adapt thread message serialize utcnow msg ', 'tfidf_method': 'msg send adapt send serialize thread_send utcnow Message sign send ', 'lda_word': ' msg,kernel,shutdown,extract,header,', 'lda_method': ' msg,extract_header,shutdown_kernel,request_shutdown,restart_kernel,', 'lsi_word': ' kernel,shutdown,msg,request,send,', 'lsi_method': ' msg,request_shutdown,shutdown_kernel,extract_header,restart_kernel,', 'spm_method': '  &#187; restart_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br> &#187; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) &rarr; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br> &#187; start_new_async_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br>', 'text_summary': "Given a message or header, return the header. If no auth, return b''. Restarts a kernel with the arguments that were used to launch it. Pass a message to the ZMQ socket to send.", 'files_count': 6, 'files': ['manager.py', 'session.py', 'test_adapter.py', 'adapter.py', 'threaded.py', 'channels.py'], 'execution_path_count': 24, 'function_id_to_name_file': {'330': 'restart_kernel(manager.py)', '331': 'shutdown_kernel(manager.py)', '362': 'request_shutdown(manager.py)', '480': 'send(session.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '322': 'start_new_async_kernel(manager.py)', '520': 'msg(test_adapter.py)', '534': 'msg(test_adapter.py)', '50': 'adapt(adapter.py)', '450': 'utcnow(session.py)', '482': 'serialize(session.py)', '483': 'sign(session.py)', '440': 'Message(session.py)', '734': 'send(threaded.py)', '738': 'thread_send(threaded.py)', '88': 'send(channels.py)', '114': 'send(channels.py)'}}, {'key': 2730, 'parent': 2775, 'tfidf_word': 'shutdown kill ipc finish port connection restarter stop kernel cleanup ', 'tfidf_method': 'restart_kernel cleanup_resources _launch_kernel cleanup_connection_file cleanup_ipc_files ports _kill_kernel finish_shutdown cleanup stop_restarter ', 'lda_word': ' cleanup,kernel,shutdown,async,start,', 'lda_method': ' kill_kernel,launch_kernel,shutdown_kernel,restart_kernel,start_new_async_kernel,', 'lsi_word': ' kernel,shutdown,cleanup,async,new,', 'lsi_method': ' shutdown_kernel,cleanup_resources,restart_kernel,start_new_async_kernel,launch_kernel,', 'spm_method': ' ', 'text_summary': "Cleanup ipc files if we wrote them. Cleanup connection file *if we wrote it*. actually launch the kernel. Wait for kernel shutdown, then kill process if it doesn't shutdown.", 'files_count': 2, 'files': ['manager.py', 'connect.py'], 'execution_path_count': 16, 'function_id_to_name_file': {'330': 'restart_kernel(manager.py)', '331': 'shutdown_kernel(manager.py)', '368': 'stop_restarter(manager.py)', '322': 'start_new_async_kernel(manager.py)', '327': 'finish_shutdown(manager.py)', '326': '_launch_kernel(manager.py)', '325': '_kill_kernel(manager.py)', '349': 'cleanup(manager.py)', '350': 'cleanup_resources(manager.py)', '201': 'cleanup_ipc_files(connect.py)', '211': 'ports(connect.py)', '200': 'cleanup_connection_file(connect.py)'}}, {'key': 968, 'parent': 1543, 'tfidf_word': 'EP: 968, Name: test_kernel_info_reply &rarr; msg &rarr; msg &rarr; msg &rarr; msg_header &rarr; msg_id', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1542, 'parent': 1543, 'tfidf_word': 'rename kernel type interrupt identity found feed raw version msg ', 'tfidf_method': 'test_no_adapt test_object_info_reply test_send_raw test_execute_request test_execute_reply test_complete_request test_complete_reply interrupt_kernel test_object_info_reply_not_found test_serialize ', 'lda_word': ' msg,header,test,reply,complete,', 'lda_method': ' msg,msg_id,msg_header,test_object_info_request,test_complete_request,', 'lsi_word': ' msg,header,test,reply,info,', 'lsi_method': ' msg,msg_header,msg_id,test_object_info_reply_not_found,test_same_version,', 'spm_method': ' ', 'text_summary': 'message format.', 'files_count': 5, 'files': ['test_adapter.py', 'session.py', 'test_session.py', 'manager.py', 'client.py'], 'execution_path_count': 17, 'function_id_to_name_file': {'530': 'test_object_info_reply_not_found(test_adapter.py)', '520': 'msg(test_adapter.py)', '534': 'msg(test_adapter.py)', '476': 'msg(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '529': 'test_object_info_reply(test_adapter.py)', '531': 'test_object_info_request(test_adapter.py)', '521': 'test_complete_reply(test_adapter.py)', '522': 'test_complete_request(test_adapter.py)', '524': 'test_execute_reply(test_adapter.py)', '525': 'test_execute_request(test_adapter.py)', '532': 'test_rename_type(test_adapter.py)', '528': 'test_no_adapt(test_adapter.py)', '533': 'test_same_version(test_adapter.py)', '695': 'test_send_raw(test_session.py)', '692': 'test_feed_identities(test_session.py)', '694': 'test_send(test_session.py)', '696': 'test_serialize(test_session.py)', '693': 'test_msg(test_session.py)', '328': 'interrupt_kernel(manager.py)', '166': 'is_complete(client.py)'}}, {'key': 1032, 'parent': 1663, 'tfidf_word': 'EP: 1032, Name: test_display_data &rarr; msg &rarr; msg &rarr; msg_header &rarr; msg_id', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1662, 'parent': 1663, 'tfidf_word': 'rename kernel type info identity feed execute raw version msg ', 'tfidf_method': 'test_no_adapt test_kernel_info_reply test_inspect_request test_send test_inspect_reply test_execute_request test_complete_request test_complete_reply test_inspect_request_token test_send_raw ', 'lda_word': ' msg,send,test,header,request,', 'lda_method': ' test_inspect_request,msg,msg_header,msg_id,test_feed_identities,', 'lsi_word': ' msg,test,header,request,inspect,', 'lsi_method': ' msg,msg_header,msg_id,test_kernel_info_reply,test_inspect_request,', 'spm_method': ' ', 'text_summary': 'Empty', 'files_count': 3, 'files': ['test_adapter.py', 'session.py', 'test_session.py'], 'execution_path_count': 13, 'function_id_to_name_file': {'543': 'test_kernel_info_reply(test_adapter.py)', '534': 'msg(test_adapter.py)', '476': 'msg(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '540': 'test_inspect_reply(test_adapter.py)', '542': 'test_inspect_request_token(test_adapter.py)', '541': 'test_inspect_request(test_adapter.py)', '535': 'test_complete_reply(test_adapter.py)', '536': 'test_complete_request(test_adapter.py)', '538': 'test_execute_request(test_adapter.py)', '545': 'test_rename_type(test_adapter.py)', '546': 'test_same_version(test_adapter.py)', '544': 'test_no_adapt(test_adapter.py)', '695': 'test_send_raw(test_session.py)', '694': 'test_send(test_session.py)', '692': 'test_feed_identities(test_session.py)'}}, {'key': 736, 'parent': 1722, 'tfidf_word': 'EP: 736, Name: test_msg &rarr; msg &rarr; msg &rarr; msg_header &rarr; msg_id', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1692, 'parent': 1722, 'tfidf_word': 'header id complete interrupt kernel msg ', 'tfidf_method': 'msg msg_header msg_id msg is_complete interrupt_kernel ', 'lda_word': ' msg,header,kernel,complete,interrupt,', 'lda_method': ' msg,msg_id,msg_header,is_complete,interrupt_kernel,', 'lsi_word': ' msg,header,kernel,interrupt,complete,', 'lsi_method': ' msg,msg_header,msg_id,is_complete,interrupt_kernel,', 'spm_method': ' ', 'text_summary': '', 'files_count': 4, 'files': ['manager.py', 'test_adapter.py', 'session.py', 'client.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'328': 'interrupt_kernel(manager.py)', '534': 'msg(test_adapter.py)', '476': 'msg(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '166': 'is_complete(client.py)'}}, {'key': 1034, 'parent': 1556, 'tfidf_word': 'EP: 1034, Name: test_display_data &rarr; msg &rarr; msg &rarr; msg &rarr; msg_header &rarr; msg_id', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1555, 'parent': 1556, 'tfidf_word': 'adapt type interrupt info identity feed execute raw version msg ', 'tfidf_method': 'test_kernel_info_reply test_inspect_reply test_inspect_request test_send_raw test_execute_request test_complete_request test_complete_reply interrupt_kernel test_inspect_request_token test_serialize ', 'lda_word': ' msg,header,test,complete,request,', 'lda_method': ' msg_id,msg,msg_header,test_inspect_reply,test_msg,', 'lsi_word': ' msg,header,test,request,inspect,', 'lsi_method': ' msg,msg_id,msg_header,interrupt_kernel,test_feed_identities,', 'spm_method': ' ', 'text_summary': 'scrub the front for zmq IDENTITIES.', 'files_count': 5, 'files': ['test_adapter.py', 'session.py', 'test_session.py', 'manager.py', 'client.py'], 'execution_path_count': 17, 'function_id_to_name_file': {'543': 'test_kernel_info_reply(test_adapter.py)', '534': 'msg(test_adapter.py)', '520': 'msg(test_adapter.py)', '476': 'msg(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '540': 'test_inspect_reply(test_adapter.py)', '542': 'test_inspect_request_token(test_adapter.py)', '541': 'test_inspect_request(test_adapter.py)', '535': 'test_complete_reply(test_adapter.py)', '536': 'test_complete_request(test_adapter.py)', '538': 'test_execute_request(test_adapter.py)', '545': 'test_rename_type(test_adapter.py)', '544': 'test_no_adapt(test_adapter.py)', '546': 'test_same_version(test_adapter.py)', '695': 'test_send_raw(test_session.py)', '692': 'test_feed_identities(test_session.py)', '694': 'test_send(test_session.py)', '696': 'test_serialize(test_session.py)', '693': 'test_msg(test_session.py)', '328': 'interrupt_kernel(manager.py)', '166': 'is_complete(client.py)'}}, {'key': 976, 'parent': 1654, 'tfidf_word': 'EP: 976, Name: test_input_request &rarr; msg &rarr; msg &rarr; msg_header &rarr; msg_id', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1653, 'parent': 1654, 'tfidf_word': 'adapt kernel type identity found feed display data version msg ', 'tfidf_method': 'test_object_info_reply test_kernel_info_reply test_send test_execute_request test_execute_reply test_display_data test_complete_request test_complete_reply test_no_adapt test_send_raw ', 'lda_word': ' msg,test,header,info,request,', 'lda_method': ' msg,msg_header,msg_id,test_send_raw,test_same_version,', 'lsi_word': ' msg,header,test,reply,info,', 'lsi_method': ' msg,msg_id,msg_header,test_send,test_execute_reply,', 'spm_method': ' ', 'text_summary': 'Empty', 'files_count': 3, 'files': ['test_adapter.py', 'session.py', 'test_session.py'], 'execution_path_count': 15, 'function_id_to_name_file': {'523': 'test_display_data(test_adapter.py)', '520': 'msg(test_adapter.py)', '476': 'msg(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '527': 'test_kernel_info_reply(test_adapter.py)', '530': 'test_object_info_reply_not_found(test_adapter.py)', '529': 'test_object_info_reply(test_adapter.py)', '531': 'test_object_info_request(test_adapter.py)', '521': 'test_complete_reply(test_adapter.py)', '522': 'test_complete_request(test_adapter.py)', '524': 'test_execute_reply(test_adapter.py)', '525': 'test_execute_request(test_adapter.py)', '532': 'test_rename_type(test_adapter.py)', '533': 'test_same_version(test_adapter.py)', '528': 'test_no_adapt(test_adapter.py)', '695': 'test_send_raw(test_session.py)', '694': 'test_send(test_session.py)', '692': 'test_feed_identities(test_session.py)'}}, {'key': 748, 'parent': 1723, 'tfidf_word': 'EP: 748, Name: test_serialize &rarr; msg &rarr; msg &rarr; msg_header &rarr; msg_id', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1721, 'parent': 1723, 'tfidf_word': 'header id complete interrupt kernel test msg ', 'tfidf_method': 'msg msg_header msg_id msg is_complete interrupt_kernel test_msg ', 'lda_word': ' msg,header,kernel,interrupt,complete,', 'lda_method': ' msg,msg_id,msg_header,test_msg,interrupt_kernel,', 'lsi_word': ' msg,header,test,interrupt,kernel,', 'lsi_method': ' msg,msg_id,msg_header,interrupt_kernel,is_complete,', 'spm_method': ' ', 'text_summary': '', 'files_count': 5, 'files': ['test_session.py', 'test_adapter.py', 'session.py', 'manager.py', 'client.py'], 'execution_path_count': 3, 'function_id_to_name_file': {'693': 'test_msg(test_session.py)', '520': 'msg(test_adapter.py)', '476': 'msg(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '328': 'interrupt_kernel(manager.py)', '166': 'is_complete(client.py)'}}, {'key': 515, 'parent': 1703, 'tfidf_word': 'EP: 515, Name: AsyncKernelClient &rarr; complete &rarr; msg &rarr; msg_header &rarr; msg_id', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 634, 'parent': 1703, 'tfidf_word': 'EP: 634, Name: BlockingKernelClient &rarr; complete &rarr; msg &rarr; msg_header &rarr; msg_id', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1700, 'parent': 2293, 'tfidf_word': 'client header history id kernel async blocking msg ', 'tfidf_method': 'history msg msg_header msg_id BlockingKernelClient AsyncKernelClient ', 'lda_word': ' msg,client,kernel,header,history,', 'lda_method': ' msg_header,msg,history,msg_id,asynckernelclient,', 'lsi_word': ' msg,history,header,client,kernel,', 'lsi_method': ' history,msg,msg_header,msg_id,asynckernelclient,', 'spm_method': ' ', 'text_summary': '', 'files_count': 2, 'files': ['client.py', 'session.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'90': 'AsyncKernelClient(client.py)', '161': 'history(client.py)', '476': 'msg(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '116': 'BlockingKernelClient(client.py)'}}, {'key': 1921, 'parent': 2293, 'tfidf_word': 'complete default feed identity interrupt kernel raw serialize version msg ', 'tfidf_method': 'msg_header msg_id is_complete interrupt_kernel test_default_version test_feed_identities test_msg test_send test_send_raw test_serialize ', 'lda_word': ' msg,header,test,send,serialize,', 'lda_method': ' msg,msg_id,msg_header,test_feed_identities,test_serialize,', 'lsi_word': ' msg,header,test,send,raw,', 'lsi_method': ' msg_header,msg_id,msg,test_default_version,interrupt_kernel,', 'spm_method': ' ', 'text_summary': 'message format.', 'files_count': 5, 'files': ['test_adapter.py', 'session.py', 'test_session.py', 'manager.py', 'client.py'], 'execution_path_count': 8, 'function_id_to_name_file': {'516': 'test_default_version(test_adapter.py)', '476': 'msg(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '695': 'test_send_raw(test_session.py)', '692': 'test_feed_identities(test_session.py)', '694': 'test_send(test_session.py)', '693': 'test_msg(test_session.py)', '696': 'test_serialize(test_session.py)', '328': 'interrupt_kernel(manager.py)', '166': 'is_complete(client.py)'}}, {'key': 977, 'parent': 1639, 'tfidf_word': 'EP: 977, Name: test_input_request &rarr; msg &rarr; msg &rarr; msg &rarr; extract_header', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1638, 'parent': 1639, 'tfidf_word': 'raw adapt type identity found feed display data kernel version ', 'tfidf_method': 'test_object_info_reply test_no_adapt test_kernel_info_reply test_execute_request test_execute_reply test_display_data test_complete_request test_complete_reply test_send test_send_raw ', 'lda_word': ' msg,header,extract,test,request,', 'lda_method': ' msg,extract_header,test_execute_request,test_complete_reply,test_object_info_reply,', 'lsi_word': ' msg,test,extract,header,reply,', 'lsi_method': ' msg,extract_header,test_object_info_reply_not_found,test_complete_request,test_execute_request,', 'spm_method': ' ', 'text_summary': '', 'files_count': 3, 'files': ['test_adapter.py', 'session.py', 'test_session.py'], 'execution_path_count': 15, 'function_id_to_name_file': {'523': 'test_display_data(test_adapter.py)', '520': 'msg(test_adapter.py)', '534': 'msg(test_adapter.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '527': 'test_kernel_info_reply(test_adapter.py)', '530': 'test_object_info_reply_not_found(test_adapter.py)', '529': 'test_object_info_reply(test_adapter.py)', '531': 'test_object_info_request(test_adapter.py)', '521': 'test_complete_reply(test_adapter.py)', '522': 'test_complete_request(test_adapter.py)', '524': 'test_execute_reply(test_adapter.py)', '525': 'test_execute_request(test_adapter.py)', '532': 'test_rename_type(test_adapter.py)', '533': 'test_same_version(test_adapter.py)', '528': 'test_no_adapt(test_adapter.py)', '695': 'test_send_raw(test_session.py)', '694': 'test_send(test_session.py)', '692': 'test_feed_identities(test_session.py)'}}, {'key': 749, 'parent': 1672, 'tfidf_word': 'EP: 749, Name: test_serialize &rarr; msg &rarr; msg &rarr; msg &rarr; extract_header', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1671, 'parent': 1672, 'tfidf_word': 'extract header complete interrupt kernel test msg ', 'tfidf_method': 'extract_header msg msg msg is_complete interrupt_kernel test_msg ', 'lda_word': ' msg,header,extract,kernel,interrupt,', 'lda_method': ' msg,extract_header,interrupt_kernel,is_complete,test_msg,', 'lsi_word': ' msg,header,extract,test,kernel,', 'lsi_method': ' msg,extract_header,test_msg,is_complete,interrupt_kernel,', 'spm_method': ' ', 'text_summary': 'Interrupts the kernel by sending it a signal. Ask the kernel whether some code is complete and ready to execute.', 'files_count': 5, 'files': ['test_session.py', 'test_adapter.py', 'session.py', 'manager.py', 'client.py'], 'execution_path_count': 3, 'function_id_to_name_file': {'693': 'test_msg(test_session.py)', '520': 'msg(test_adapter.py)', '534': 'msg(test_adapter.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '328': 'interrupt_kernel(manager.py)', '166': 'is_complete(client.py)'}}, {'key': 1002, 'parent': 1856, 'tfidf_word': 'EP: 1002, Name: test_complete_request &rarr; msg &rarr; msg &rarr; extract_header', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1855, 'parent': 1856, 'tfidf_word': 'rename raw kernel interrupt identity feed execute complete type version ', 'tfidf_method': 'interrupt_kernel test_execute_request test_no_adapt test_rename_type test_same_version test_feed_identities test_msg test_send test_send_raw test_serialize ', 'lda_word': ' msg,test,header,extract,identity,', 'lda_method': ' msg,extract_header,interrupt_kernel,test_same_version,test_feed_identities,', 'lsi_word': ' msg,header,extract,test,send,', 'lsi_method': ' msg,extract_header,test_execute_request,test_rename_type,test_send,', 'spm_method': ' ', 'text_summary': 'Given a message or header, return the header. message format.', 'files_count': 5, 'files': ['test_adapter.py', 'session.py', 'test_session.py', 'manager.py', 'client.py'], 'execution_path_count': 11, 'function_id_to_name_file': {'538': 'test_execute_request(test_adapter.py)', '534': 'msg(test_adapter.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '545': 'test_rename_type(test_adapter.py)', '544': 'test_no_adapt(test_adapter.py)', '546': 'test_same_version(test_adapter.py)', '695': 'test_send_raw(test_session.py)', '692': 'test_feed_identities(test_session.py)', '694': 'test_send(test_session.py)', '693': 'test_msg(test_session.py)', '696': 'test_serialize(test_session.py)', '328': 'interrupt_kernel(manager.py)', '166': 'is_complete(client.py)'}}, {'key': 1819, 'parent': 1858, 'tfidf_word': 'inspect reply request msg data display info input kernel token ', 'tfidf_method': 'extract_header msg msg test_display_data test_input_request test_inspect_reply test_inspect_request_token test_kernel_info_reply ', 'lda_word': ' msg,header,extract,test,reply,', 'lda_method': ' msg,extract_header,test_kernel_info_reply,test_display_data,test_input_request,', 'lsi_word': ' msg,extract,header,test,inspect,', 'lsi_method': ' msg,extract_header,test_input_request,test_kernel_info_reply,test_inspect_request_token,', 'spm_method': ' ', 'text_summary': '', 'files_count': 2, 'files': ['test_adapter.py', 'session.py'], 'execution_path_count': 5, 'function_id_to_name_file': {'539': 'test_input_request(test_adapter.py)', '534': 'msg(test_adapter.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '537': 'test_display_data(test_adapter.py)', '543': 'test_kernel_info_reply(test_adapter.py)', '542': 'test_inspect_request_token(test_adapter.py)', '540': 'test_inspect_reply(test_adapter.py)'}}, {'key': 1857, 'parent': 1858, 'tfidf_word': 'extract header test complete inspect reply request msg ', 'tfidf_method': 'extract_header msg msg test_complete_reply test_inspect_request ', 'lda_word': ' msg,header,test,reply,extract,', 'lda_method': ' msg,extract_header,test_complete_reply,test_inspect_request,', 'lsi_word': ' msg,test,header,extract,complete,', 'lsi_method': ' msg,extract_header,test_complete_reply,test_inspect_request,', 'spm_method': ' ', 'text_summary': '', 'files_count': 2, 'files': ['test_adapter.py', 'session.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'535': 'test_complete_reply(test_adapter.py)', '534': 'msg(test_adapter.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '541': 'test_inspect_request(test_adapter.py)'}}, {'key': 503, 'parent': 1902, 'tfidf_word': 'EP: 503, Name: AsyncKernelClient &rarr; history &rarr; msg &rarr; extract_header', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 618, 'parent': 1902, 'tfidf_word': 'EP: 618, Name: BlockingKernelClient &rarr; history &rarr; msg &rarr; extract_header', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2074, 'parent': 2155, 'tfidf_word': 'extract header msg test send default feed identity raw version ', 'tfidf_method': 'extract_header msg test_default_version test_feed_identities test_send test_send_raw ', 'lda_word': ' test,msg,header,extract,send,', 'lda_method': ' msg,extract_header,test_send_raw,test_default_version,test_send,', 'lsi_word': ' extract,msg,header,test,send,', 'lsi_method': ' extract_header,msg,test_send_raw,test_default_version,test_feed_identities,', 'spm_method': ' ', 'text_summary': '', 'files_count': 3, 'files': ['test_adapter.py', 'session.py', 'test_session.py'], 'execution_path_count': 4, 'function_id_to_name_file': {'516': 'test_default_version(test_adapter.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '695': 'test_send_raw(test_session.py)', '694': 'test_send(test_session.py)', '692': 'test_feed_identities(test_session.py)'}}, {'key': 2153, 'parent': 2155, 'tfidf_word': 'extract header test msg complete interrupt kernel serialize ', 'tfidf_method': 'extract_header msg is_complete interrupt_kernel test_msg test_serialize ', 'lda_word': ' extract,header,msg,test,serialize,', 'lda_method': ' msg,extract_header,test_serialize,test_msg,interrupt_kernel,', 'lsi_word': ' msg,extract,header,test,serialize,', 'lsi_method': ' msg,extract_header,test_msg,is_complete,test_serialize,', 'spm_method': ' ', 'text_summary': 'Given a message or header, return the header. message format.', 'files_count': 4, 'files': ['test_session.py', 'session.py', 'manager.py', 'client.py'], 'execution_path_count': 4, 'function_id_to_name_file': {'696': 'test_serialize(test_session.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '693': 'test_msg(test_session.py)', '328': 'interrupt_kernel(manager.py)', '166': 'is_complete(client.py)'}}, {'key': 511, 'parent': 1495, 'tfidf_word': 'EP: 511, Name: AsyncKernelClient &rarr; history &rarr; msg &rarr; msg &rarr; msg &rarr; extract_header', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 626, 'parent': 1495, 'tfidf_word': 'EP: 626, Name: BlockingKernelClient &rarr; history &rarr; msg &rarr; msg &rarr; msg &rarr; extract_header', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1626, 'parent': 1669, 'tfidf_word': 'type input info identity feed execute display data kernel version ', 'tfidf_method': 'test_inspect_request_token test_inspect_reply test_send test_input_request test_execute_request test_display_data test_complete_request test_complete_reply test_inspect_request test_send_raw ', 'lda_word': ' msg,reply,header,extract,test,', 'lda_method': ' msg,extract_header,test_feed_identities,test_complete_request,test_complete_reply,', 'lsi_word': ' msg,extract,header,test,request,', 'lsi_method': ' msg,extract_header,test_input_request,test_display_data,test_send,', 'spm_method': ' ', 'text_summary': '', 'files_count': 3, 'files': ['test_adapter.py', 'session.py', 'test_session.py'], 'execution_path_count': 15, 'function_id_to_name_file': {'539': 'test_input_request(test_adapter.py)', '534': 'msg(test_adapter.py)', '520': 'msg(test_adapter.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '537': 'test_display_data(test_adapter.py)', '543': 'test_kernel_info_reply(test_adapter.py)', '540': 'test_inspect_reply(test_adapter.py)', '542': 'test_inspect_request_token(test_adapter.py)', '541': 'test_inspect_request(test_adapter.py)', '535': 'test_complete_reply(test_adapter.py)', '536': 'test_complete_request(test_adapter.py)', '538': 'test_execute_request(test_adapter.py)', '545': 'test_rename_type(test_adapter.py)', '546': 'test_same_version(test_adapter.py)', '544': 'test_no_adapt(test_adapter.py)', '695': 'test_send_raw(test_session.py)', '694': 'test_send(test_session.py)', '692': 'test_feed_identities(test_session.py)'}}, {'key': 1668, 'parent': 1669, 'tfidf_word': 'extract header test complete interrupt kernel serialize msg ', 'tfidf_method': 'extract_header msg msg msg is_complete interrupt_kernel test_msg test_serialize ', 'lda_word': ' msg,extract,header,test,kernel,', 'lda_method': ' msg,extract_header,is_complete,interrupt_kernel,test_msg,', 'lsi_word': ' msg,extract,header,test,serialize,', 'lsi_method': ' msg,extract_header,test_msg,test_serialize,is_complete,', 'spm_method': ' ', 'text_summary': 'Given a message or header, return the header. Ask the kernel whether some code is complete and ready to execute.', 'files_count': 5, 'files': ['test_session.py', 'test_adapter.py', 'session.py', 'manager.py', 'client.py'], 'execution_path_count': 4, 'function_id_to_name_file': {'696': 'test_serialize(test_session.py)', '534': 'msg(test_adapter.py)', '520': 'msg(test_adapter.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '693': 'test_msg(test_session.py)', '328': 'interrupt_kernel(manager.py)', '166': 'is_complete(client.py)'}}, {'key': 505, 'parent': 1701, 'tfidf_word': 'EP: 505, Name: AsyncKernelClient &rarr; history &rarr; msg &rarr; msg &rarr; extract_header', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 620, 'parent': 1701, 'tfidf_word': 'EP: 620, Name: BlockingKernelClient &rarr; history &rarr; msg &rarr; msg &rarr; extract_header', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1852, 'parent': 1969, 'tfidf_word': 'rename adapt type kernel interrupt identity feed complete raw version ', 'tfidf_method': 'test_execute_reply test_execute_request test_no_adapt test_rename_type test_same_version test_feed_identities test_msg test_send test_send_raw test_serialize ', 'lda_word': ' msg,header,extract,test,send,', 'lda_method': ' msg,extract_header,test_execute_reply,test_no_adapt,test_rename_type,', 'lsi_word': ' msg,extract,header,test,execute,', 'lsi_method': ' msg,extract_header,test_send,test_no_adapt,test_feed_identities,', 'spm_method': ' ', 'text_summary': 'Given a message or header, return the header.', 'files_count': 5, 'files': ['test_adapter.py', 'session.py', 'test_session.py', 'manager.py', 'client.py'], 'execution_path_count': 12, 'function_id_to_name_file': {'524': 'test_execute_reply(test_adapter.py)', '520': 'msg(test_adapter.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '525': 'test_execute_request(test_adapter.py)', '532': 'test_rename_type(test_adapter.py)', '528': 'test_no_adapt(test_adapter.py)', '533': 'test_same_version(test_adapter.py)', '695': 'test_send_raw(test_session.py)', '692': 'test_feed_identities(test_session.py)', '694': 'test_send(test_session.py)', '693': 'test_msg(test_session.py)', '696': 'test_serialize(test_session.py)', '328': 'interrupt_kernel(manager.py)', '166': 'is_complete(client.py)'}}, {'key': 1854, 'parent': 1969, 'tfidf_word': 'reply object request msg complete data display found input kernel ', 'tfidf_method': 'msg msg test_complete_reply test_complete_request test_display_data test_input_request test_kernel_info_reply test_object_info_reply test_object_info_reply_not_found test_object_info_request ', 'lda_word': ' msg,header,test,extract,request,', 'lda_method': ' msg,extract_header,test_input_request,test_kernel_info_reply,test_complete_reply,', 'lsi_word': ' msg,test,extract,header,info,', 'lsi_method': ' msg,extract_header,test_object_info_reply,test_complete_reply,test_complete_request,', 'spm_method': ' ', 'text_summary': '', 'files_count': 2, 'files': ['test_adapter.py', 'session.py'], 'execution_path_count': 8, 'function_id_to_name_file': {'526': 'test_input_request(test_adapter.py)', '520': 'msg(test_adapter.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '523': 'test_display_data(test_adapter.py)', '527': 'test_kernel_info_reply(test_adapter.py)', '530': 'test_object_info_reply_not_found(test_adapter.py)', '531': 'test_object_info_request(test_adapter.py)', '529': 'test_object_info_reply(test_adapter.py)', '522': 'test_complete_request(test_adapter.py)', '521': 'test_complete_reply(test_adapter.py)'}}, {'key': 1823, 'parent': 1875, 'tfidf_word': 'alive execute interactive start ', 'tfidf_method': 'execute_interactive start start is_alive is_alive is_alive is_alive is_alive ', 'lda_word': ' start,execute,alive,interactive,', 'lda_method': ' start,is_alive,execute_interactive,', 'lsi_word': ' start,alive,interactive,execute,', 'lsi_method': ' start,is_alive,execute_interactive,', 'spm_method': ' ', 'text_summary': '', 'files_count': 7, 'files': ['kernelspecapp.py', 'runapp.py', 'client.py', 'channels.py', 'managerabc.py', 'multikernelmanager.py', 'channelsabc.py'], 'execution_path_count': 5, 'function_id_to_name_file': {'291': 'start(kernelspecapp.py)', '439': 'start(runapp.py)', '122': 'execute_interactive(client.py)', '112': 'is_alive(channels.py)', '373': 'is_alive(managerabc.py)', '412': 'is_alive(multikernelmanager.py)', '140': 'is_alive(channelsabc.py)', '86': 'is_alive(channels.py)'}}, {'key': 1874, 'parent': 1875, 'tfidf_word': 'execute interactive alive default hook output start ', 'tfidf_method': 'execute_interactive start start _output_hook_default is_alive ', 'lda_word': ' start,interactive,execute,alive,default,', 'lda_method': ' start,execute_interactive,is_alive,output_hook_default,', 'lsi_word': ' start,interactive,execute,default,output,', 'lsi_method': ' start,execute_interactive,output_hook_default,is_alive,', 'spm_method': ' ', 'text_summary': '', 'files_count': 4, 'files': ['kernelspecapp.py', 'runapp.py', 'client.py', 'threaded.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'291': 'start(kernelspecapp.py)', '439': 'start(runapp.py)', '122': 'execute_interactive(client.py)', '118': '_output_hook_default(client.py)', '732': 'is_alive(threaded.py)'}}, {'key': 1827, 'parent': 1879, 'tfidf_word': 'execute interactive alive start default hook output ', 'tfidf_method': 'start start execute_interactive is_alive is_alive is_alive is_alive _output_hook_default ', 'lda_word': ' start,execute,alive,interactive,default,', 'lda_method': ' start,execute_interactive,is_alive,output_hook_default,', 'lsi_word': ' start,execute,interactive,alive,hook,', 'lsi_method': ' start,execute_interactive,is_alive,output_hook_default,', 'spm_method': ' ', 'text_summary': '', 'files_count': 6, 'files': ['kernelspecapp.py', 'runapp.py', 'client.py', 'channels.py', 'managerabc.py', 'multikernelmanager.py'], 'execution_path_count': 5, 'function_id_to_name_file': {'291': 'start(kernelspecapp.py)', '439': 'start(runapp.py)', '97': 'execute_interactive(client.py)', '112': 'is_alive(channels.py)', '373': 'is_alive(managerabc.py)', '412': 'is_alive(multikernelmanager.py)', '86': 'is_alive(channels.py)', '93': '_output_hook_default(client.py)'}}, {'key': 1876, 'parent': 1879, 'tfidf_word': 'alive execute interactive start ', 'tfidf_method': 'start start execute_interactive is_alive is_alive ', 'lda_word': ' start,alive,execute,interactive,', 'lda_method': ' start,execute_interactive,is_alive,', 'lsi_word': ' start,alive,interactive,execute,', 'lsi_method': ' start,is_alive,execute_interactive,', 'spm_method': ' ', 'text_summary': '', 'files_count': 5, 'files': ['kernelspecapp.py', 'runapp.py', 'client.py', 'threaded.py', 'channelsabc.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'291': 'start(kernelspecapp.py)', '439': 'start(runapp.py)', '97': 'execute_interactive(client.py)', '732': 'is_alive(threaded.py)', '140': 'is_alive(channelsabc.py)'}}, {'key': 820, 'parent': 1933, 'tfidf_word': 'EP: 820, Name: test_bad_pack &rarr; __init__ &rarr; _check_packers &rarr; utcnow', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 821, 'parent': 1933, 'tfidf_word': 'EP: 821, Name: test_bad_pack &rarr; __init__ &rarr; _check_packers &rarr; squash_dates', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1932, 'parent': 2325, 'tfidf_word': 'check cull digest history init packer test date squash utcnow ', 'tfidf_method': '__init__ _check_packers test_cull_digest_history squash_dates utcnow ', 'lda_word': ' utcnow,packer,init,cull,history,', 'lda_method': ' init,check_packers,test_cull_digest_history,utcnow,squash_dates,', 'lsi_word': ' check,cull,init,digest,history,', 'lsi_method': ' init,test_cull_digest_history,check_packers,utcnow,squash_dates,', 'spm_method': ' ', 'text_summary': '', 'files_count': 3, 'files': ['test_session.py', 'session.py', 'jsonutil.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'687': 'test_cull_digest_history(test_session.py)', '457': '__init__(session.py)', '459': '_check_packers(session.py)', '450': 'utcnow(session.py)', '244': 'squash_dates(jsonutil.py)'}}, {'key': 2324, 'parent': 2325, 'tfidf_word': 'squash utcnow args digest history id session set up zero ', 'tfidf_method': '__init__ _check_packers squash_dates utcnow setUp test_args test_session_id test_zero_digest_history ', 'lda_word': ' utcnow,init,check,packer,set,', 'lda_method': ' init,check_packers,squash_dates,utcnow,test_session_id,', 'lsi_word': ' packer,init,check,test,date,', 'lsi_method': ' init,check_packers,squash_dates,utcnow,test_args,', 'spm_method': ' ', 'text_summary': 'check packers for datetime support. squash datetime objects into ISO8601 strings.', 'files_count': 3, 'files': ['test_session.py', 'session.py', 'jsonutil.py'], 'execution_path_count': 8, 'function_id_to_name_file': {'700': 'test_zero_digest_history(test_session.py)', '457': '__init__(session.py)', '459': '_check_packers(session.py)', '450': 'utcnow(session.py)', '244': 'squash_dates(jsonutil.py)', '697': 'test_session_id(test_session.py)', '678': 'setUp(test_session.py)', '680': 'test_args(test_session.py)'}}, {'key': 1206, 'parent': 1444, 'tfidf_word': 'EP: 1206, Name: test_start_parallel_thread_kernels &rarr; raw_tcp_lifecycle &rarr; _get_tcp_km &rarr; AsyncMultiKernelManager &rarr; MultiKernelManager &rarr; kernel_method &rarr; wrapped', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1442, 'parent': 1444, 'tfidf_word': 'method raw test wrap id lifecycle manager multi tcp kernel ', 'tfidf_method': 'AsyncMultiKernelManager MultiKernelManager kernel_method wrapped _get_tcp_km raw_tcp_lifecycle test_tcp_lifecycle test_tcp_lifecycle_with_kernel_id ', 'lda_word': ' tcp,kernel,multi,lifecycle,manager,', 'lda_method': ' kernel_method,asyncmultikernelmanager,multikernelmanager,wrap,raw_tcp_lifecycle,', 'lsi_word': ' kernel,tcp,multi,manager,lifecycle,', 'lsi_method': ' get_tcp_km,wrap,multikernelmanager,kernel_method,raw_tcp_lifecycle,', 'spm_method': '  &#187; raw_tcp_lifecycle(test_multikernelmanager.py) &rarr; _get_tcp_km(test_multikernelmanager.py) &rarr; AsyncMultiKernelManager(multikernelmanager.py) &rarr; MultiKernelManager(multikernelmanager.py) &rarr; kernel_method(multikernelmanager.py) &rarr; wrapped(multikernelmanager.py) . <br>', 'text_summary': 'Empty', 'files_count': 2, 'files': ['test_multikernelmanager.py', 'multikernelmanager.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'652': 'test_tcp_lifecycle(test_multikernelmanager.py)', '642': 'raw_tcp_lifecycle(test_multikernelmanager.py)', '639': '_get_tcp_km(test_multikernelmanager.py)', '379': 'AsyncMultiKernelManager(multikernelmanager.py)', '381': 'MultiKernelManager(multikernelmanager.py)', '382': 'kernel_method(multikernelmanager.py)', '425': 'wrapped(multikernelmanager.py)', '653': 'test_tcp_lifecycle_with_kernel_id(test_multikernelmanager.py)'}}, {'key': 1136, 'parent': 1749, 'tfidf_word': 'EP: 1136, Name: test_tcp_lifecycle_with_kernel_id &rarr; _get_tcp_km &rarr; MultiKernelManager &rarr; kernel_method &rarr; wrapped', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1140, 'parent': 1749, 'tfidf_word': 'EP: 1140, Name: test_shutdown_all &rarr; _get_tcp_km &rarr; MultiKernelManager &rarr; kernel_method &rarr; wrapped', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1214, 'parent': 2060, 'tfidf_word': 'EP: 1214, Name: setUp &rarr; KernelSpecManager &rarr; KernelSpec', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2059, 'parent': 2060, 'tfidf_word': 'default manager kernel spec ', 'tfidf_method': 'KernelSpec KernelSpecManager _kernel_spec_manager_default _kernel_spec_manager_default ', 'lda_word': ' kernel,spec,manager,default,', 'lda_method': ' kernelspec,kernel_spec_manager_default,kernelspecmanager,', 'lsi_word': ' spec,kernel,manager,default,', 'lsi_method': ' kernelspec,kernelspecmanager,kernel_spec_manager_default,', 'spm_method': ' ', 'text_summary': '', 'files_count': 3, 'files': ['kernelspecapp.py', 'kernelspec.py', 'manager.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'289': '_kernel_spec_manager_default(kernelspecapp.py)', '254': 'KernelSpecManager(kernelspec.py)', '253': 'KernelSpec(kernelspec.py)', '345': '_kernel_spec_manager_default(manager.py)'}}, {'key': 212, 'parent': 2114, 'tfidf_word': 'EP: 212, Name: _kernel_spec_manager_default &rarr; KernelSpecManager &rarr; KernelSpec', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2109, 'parent': 2114, 'tfidf_word': 'app default manager kernel spec ', 'tfidf_method': 'KernelSpec KernelSpecManager KernelApp _kernel_spec_manager_default ', 'lda_word': ' kernel,spec,manager,app,default,', 'lda_method': ' kernelspecmanager,kernelspec,kernelapp,kernel_spec_manager_default,', 'lsi_word': ' kernel,spec,manager,default,app,', 'lsi_method': ' kernelspec,kernelspecmanager,kernel_spec_manager_default,kernelapp,', 'spm_method': ' ', 'text_summary': '', 'files_count': 3, 'files': ['kernelapp.py', 'kernelspec.py', 'kernelspecapp.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'245': 'KernelApp(kernelapp.py)', '254': 'KernelSpecManager(kernelspec.py)', '253': 'KernelSpec(kernelspec.py)', '292': '_kernel_spec_manager_default(kernelspecapp.py)'}}, {'key': 217, 'parent': 2320, 'tfidf_word': 'EP: 217, Name: KernelSpecApp &rarr; RemoveKernelSpec &rarr; KernelSpecManager &rarr; KernelSpec', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 218, 'parent': 2320, 'tfidf_word': 'EP: 218, Name: KernelSpecApp &rarr; ListKernelSpecs &rarr; KernelSpecManager &rarr; KernelSpec', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1184, 'parent': 1568, 'tfidf_word': 'EP: 1184, Name: test_shutdown_all &rarr; _get_tcp_km &rarr; AsyncMultiKernelManager &rarr; MultiKernelManager &rarr; KernelSpecManager &rarr; KernelSpec', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1186, 'parent': 1568, 'tfidf_word': 'EP: 1186, Name: test_tcp_cinfo &rarr; _get_tcp_km &rarr; AsyncMultiKernelManager &rarr; MultiKernelManager &rarr; KernelSpecManager &rarr; KernelSpec', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1202, 'parent': 1407, 'tfidf_word': 'EP: 1202, Name: test_start_parallel_thread_kernels &rarr; tcp_lifecycle_with_loop &rarr; raw_tcp_lifecycle &rarr; _get_tcp_km &rarr; AsyncMultiKernelManager &rarr; MultiKernelManager &rarr; KernelSpecManager &rarr; KernelSpec', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1208, 'parent': 1407, 'tfidf_word': 'EP: 1208, Name: test_start_parallel_process_kernels &rarr; tcp_lifecycle_with_loop &rarr; raw_tcp_lifecycle &rarr; _get_tcp_km &rarr; AsyncMultiKernelManager &rarr; MultiKernelManager &rarr; KernelSpecManager &rarr; KernelSpec', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1211, 'parent': 1445, 'tfidf_word': 'EP: 1211, Name: test_start_parallel_process_kernels &rarr; raw_tcp_lifecycle &rarr; _get_tcp_km &rarr; AsyncMultiKernelManager &rarr; MultiKernelManager &rarr; KernelSpecManager &rarr; KernelSpec', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1443, 'parent': 1445, 'tfidf_word': 'lifecycle multi spec id parallel start thread manager tcp kernel ', 'tfidf_method': 'KernelSpec KernelSpecManager AsyncMultiKernelManager MultiKernelManager _get_tcp_km raw_tcp_lifecycle test_start_parallel_thread_kernels test_tcp_lifecycle test_tcp_lifecycle_with_kernel_id ', 'lda_word': ' kernel,tcp,manager,spec,test,', 'lda_method': ' kernelspec,raw_tcp_lifecycle,multikernelmanager,kernelspecmanager,get_tcp_km,', 'lsi_word': ' kernel,manager,tcp,multi,spec,', 'lsi_method': ' kernelspec,raw_tcp_lifecycle,multikernelmanager,kernelspecmanager,get_tcp_km,', 'spm_method': '  &#187; raw_tcp_lifecycle(test_multikernelmanager.py) &rarr; _get_tcp_km(test_multikernelmanager.py) &rarr; AsyncMultiKernelManager(multikernelmanager.py) &rarr; MultiKernelManager(multikernelmanager.py) &rarr; KernelSpecManager(kernelspec.py) &rarr; KernelSpec(kernelspec.py) . <br>', 'text_summary': '', 'files_count': 3, 'files': ['test_multikernelmanager.py', 'multikernelmanager.py', 'kernelspec.py'], 'execution_path_count': 3, 'function_id_to_name_file': {'648': 'test_start_parallel_thread_kernels(test_multikernelmanager.py)', '642': 'raw_tcp_lifecycle(test_multikernelmanager.py)', '639': '_get_tcp_km(test_multikernelmanager.py)', '379': 'AsyncMultiKernelManager(multikernelmanager.py)', '381': 'MultiKernelManager(multikernelmanager.py)', '254': 'KernelSpecManager(kernelspec.py)', '253': 'KernelSpec(kernelspec.py)', '652': 'test_tcp_lifecycle(test_multikernelmanager.py)', '653': 'test_tcp_lifecycle_with_kernel_id(test_multikernelmanager.py)'}}, {'key': 1143, 'parent': 1750, 'tfidf_word': 'EP: 1143, Name: test_tcp_cinfo &rarr; _get_tcp_km &rarr; MultiKernelManager &rarr; KernelSpecManager &rarr; KernelSpec', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1748, 'parent': 1750, 'tfidf_word': 'km multi test id lifecycle shutdown manager spec tcp kernel ', 'tfidf_method': 'KernelSpec KernelSpecManager MultiKernelManager _get_tcp_km test_shutdown_all test_tcp_lifecycle_with_kernel_id ', 'lda_word': ' kernel,manager,spec,test,tcp,', 'lda_method': ' kernelspecmanager,multikernelmanager,kernelspec,test_shutdown_all,get_tcp_km,', 'lsi_word': ' kernel,manager,spec,tcp,test,', 'lsi_method': ' kernelspecmanager,multikernelmanager,get_tcp_km,kernelspec,test_shutdown_all,', 'spm_method': ' ', 'text_summary': '', 'files_count': 3, 'files': ['test_multikernelmanager.py', 'multikernelmanager.py', 'kernelspec.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'668': 'test_tcp_lifecycle_with_kernel_id(test_multikernelmanager.py)', '655': '_get_tcp_km(test_multikernelmanager.py)', '381': 'MultiKernelManager(multikernelmanager.py)', '254': 'KernelSpecManager(kernelspec.py)', '253': 'KernelSpec(kernelspec.py)', '661': 'test_shutdown_all(test_multikernelmanager.py)'}}, {'key': 1168, 'parent': 1439, 'tfidf_word': 'EP: 1168, Name: test_start_parallel_thread_kernels &rarr; tcp_lifecycle_with_loop &rarr; test_tcp_lifecycle &rarr; _get_tcp_km &rarr; MultiKernelManager &rarr; KernelSpecManager &rarr; KernelSpec', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1176, 'parent': 1439, 'tfidf_word': 'EP: 1176, Name: test_start_parallel_process_kernels &rarr; tcp_lifecycle_with_loop &rarr; test_tcp_lifecycle &rarr; _get_tcp_km &rarr; MultiKernelManager &rarr; KernelSpecManager &rarr; KernelSpec', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1164, 'parent': 1566, 'tfidf_word': 'EP: 1164, Name: test_start_parallel_thread_kernels &rarr; test_tcp_lifecycle &rarr; _get_tcp_km &rarr; MultiKernelManager &rarr; KernelSpecManager &rarr; KernelSpec', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1172, 'parent': 1566, 'tfidf_word': 'EP: 1172, Name: test_start_parallel_process_kernels &rarr; test_tcp_lifecycle &rarr; _get_tcp_km &rarr; MultiKernelManager &rarr; KernelSpecManager &rarr; KernelSpec', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 455, 'parent': 1486, 'tfidf_word': 'EP: 455, Name: run_kernel &rarr; start_new_kernel &rarr; shutdown_kernel &rarr; request_shutdown &rarr; msg &rarr; msg &rarr; msg_header &rarr; msg_id', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 457, 'parent': 1486, 'tfidf_word': 'EP: 457, Name: run_kernel &rarr; start_new_kernel &rarr; shutdown_kernel &rarr; request_shutdown &rarr; msg &rarr; msg &rarr; msg &rarr; msg_header &rarr; msg_id', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 459, 'parent': 1487, 'tfidf_word': 'EP: 459, Name: run_kernel &rarr; start_new_kernel &rarr; shutdown_kernel &rarr; request_shutdown &rarr; msg &rarr; msg &rarr; msg_header &rarr; msg_id', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 461, 'parent': 1487, 'tfidf_word': 'EP: 461, Name: run_kernel &rarr; start_new_kernel &rarr; shutdown_kernel &rarr; request_shutdown &rarr; msg &rarr; msg &rarr; msg &rarr; msg_header &rarr; msg_id', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 443, 'parent': 1781, 'tfidf_word': 'EP: 443, Name: run_kernel &rarr; start_new_kernel &rarr; shutdown_kernel &rarr; request_shutdown &rarr; msg &rarr; extract_header', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 449, 'parent': 1781, 'tfidf_word': 'EP: 449, Name: run_kernel &rarr; start_new_kernel &rarr; shutdown_kernel &rarr; request_shutdown &rarr; send &rarr; msg &rarr; extract_header', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1595, 'parent': 1987, 'tfidf_word': 'extract header new request run start shutdown kernel msg ', 'tfidf_method': 'run_kernel start_new_kernel request_shutdown shutdown_kernel extract_header msg msg msg ', 'lda_word': ' kernel,shutdown,msg,header,extract,', 'lda_method': ' msg,start_new_kernel,request_shutdown,run_kernel,extract_header,', 'lsi_word': ' kernel,msg,shutdown,extract,run,', 'lsi_method': ' msg,extract_header,run_kernel,request_shutdown,shutdown_kernel,', 'spm_method': '  &#187; run_kernel(manager.py) &rarr; start_new_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br> &#187; start_new_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br>', 'text_summary': 'Start a new kernel, and return its Manager and Client. Context manager to create a kernel in a subprocess.', 'files_count': 3, 'files': ['manager.py', 'test_adapter.py', 'session.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'321': 'run_kernel(manager.py)', '323': 'start_new_kernel(manager.py)', '364': 'shutdown_kernel(manager.py)', '362': 'request_shutdown(manager.py)', '520': 'msg(test_adapter.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '534': 'msg(test_adapter.py)'}}, {'key': 1596, 'parent': 1987, 'tfidf_word': 'extract header new request run start shutdown kernel msg ', 'tfidf_method': 'run_kernel start_new_kernel request_shutdown shutdown_kernel extract_header msg msg msg ', 'lda_word': ' kernel,msg,shutdown,new,extract,', 'lda_method': ' msg,request_shutdown,run_kernel,extract_header,start_new_kernel,', 'lsi_word': ' kernel,msg,shutdown,header,new,', 'lsi_method': ' msg,request_shutdown,start_new_kernel,run_kernel,shutdown_kernel,', 'spm_method': '  &#187; run_kernel(manager.py) &rarr; start_new_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br> &#187; start_new_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br>', 'text_summary': 'Start a new kernel, and return its Manager and Client. Context manager to create a kernel in a subprocess.', 'files_count': 3, 'files': ['manager.py', 'test_adapter.py', 'session.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'321': 'run_kernel(manager.py)', '323': 'start_new_kernel(manager.py)', '364': 'shutdown_kernel(manager.py)', '362': 'request_shutdown(manager.py)', '534': 'msg(test_adapter.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '520': 'msg(test_adapter.py)'}}, {'key': 453, 'parent': 1791, 'tfidf_word': 'EP: 453, Name: run_kernel &rarr; start_new_kernel &rarr; shutdown_kernel &rarr; request_shutdown &rarr; send &rarr; adapt &rarr; utcnow', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1782, 'parent': 1791, 'tfidf_word': 'new request run send start message serialize sign shutdown kernel ', 'tfidf_method': 'run_kernel start_new_kernel request_shutdown shutdown_kernel send Message serialize sign ', 'lda_word': ' kernel,shutdown,send,run,start,', 'lda_method': ' run_kernel,start_new_kernel,request_shutdown,shutdown_kernel,send,', 'lsi_word': ' kernel,shutdown,run,start,send,', 'lsi_method': ' run_kernel,start_new_kernel,send,shutdown_kernel,request_shutdown,', 'spm_method': ' ', 'text_summary': 'Start a new kernel, and return its Manager and Client. Pass a message to the ZMQ socket to send.', 'files_count': 2, 'files': ['manager.py', 'session.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'321': 'run_kernel(manager.py)', '323': 'start_new_kernel(manager.py)', '364': 'shutdown_kernel(manager.py)', '362': 'request_shutdown(manager.py)', '480': 'send(session.py)', '482': 'serialize(session.py)', '483': 'sign(session.py)', '440': 'Message(session.py)'}}, {'key': 1776, 'parent': 2044, 'tfidf_word': 'new request run start url control connect shutdown socket kernel ', 'tfidf_method': '_create_connected_socket _make_url run_kernel start_new_kernel request_shutdown shutdown_kernel _connect_control_socket ', 'lda_word': ' kernel,shutdown,connect,socket,create,', 'lda_method': ' make_url,start_new_kernel,shutdown_kernel,connect_control_socket,create_connected_socket,', 'lsi_word': ' kernel,shutdown,socket,connect,run,', 'lsi_method': ' run_kernel,request_shutdown,shutdown_kernel,start_new_kernel,create_connected_socket,', 'spm_method': '  &#187; run_kernel(manager.py) &rarr; start_new_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) &rarr; _create_connected_socket(connect.py) &rarr; _make_url(connect.py) . <br>', 'text_summary': 'Create a zmq Socket and connect it to the kernel. Context manager to create a kernel in a subprocess.', 'files_count': 2, 'files': ['manager.py', 'connect.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'321': 'run_kernel(manager.py)', '323': 'start_new_kernel(manager.py)', '364': 'shutdown_kernel(manager.py)', '362': 'request_shutdown(manager.py)', '338': '_connect_control_socket(manager.py)', '192': '_create_connected_socket(connect.py)', '196': '_make_url(connect.py)'}}, {'key': 1979, 'parent': 2044, 'tfidf_word': 'new request run start send shutdown thread kernel ', 'tfidf_method': 'run_kernel start_new_kernel request_shutdown shutdown_kernel send send thread_send send ', 'lda_word': ' kernel,shutdown,send,start,new,', 'lda_method': ' run_kernel,request_shutdown,start_new_kernel,shutdown_kernel,send,', 'lsi_word': ' kernel,shutdown,send,start,new,', 'lsi_method': ' request_shutdown,shutdown_kernel,start_new_kernel,run_kernel,send,', 'spm_method': ' ', 'text_summary': 'Start a new kernel, and return its Manager and Client. Context manager to create a kernel in a subprocess.', 'files_count': 3, 'files': ['manager.py', 'threaded.py', 'channels.py'], 'execution_path_count': 3, 'function_id_to_name_file': {'321': 'run_kernel(manager.py)', '323': 'start_new_kernel(manager.py)', '364': 'shutdown_kernel(manager.py)', '362': 'request_shutdown(manager.py)', '734': 'send(threaded.py)', '738': 'thread_send(threaded.py)', '88': 'send(channels.py)', '114': 'send(channels.py)'}}, {'key': 435, 'parent': 1593, 'tfidf_word': 'EP: 435, Name: run_kernel &rarr; start_new_kernel &rarr; shutdown_kernel &rarr; _kill_kernel &rarr; signal_kernel &rarr; has_kernel &rarr; _launch_kernel', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 465, 'parent': 1593, 'tfidf_word': 'EP: 465, Name: run_kernel &rarr; start_new_kernel &rarr; shutdown_kernel &rarr; finish_shutdown &rarr; _kill_kernel &rarr; signal_kernel &rarr; has_kernel &rarr; _launch_kernel', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1779, 'parent': 2023, 'tfidf_word': 'kill launch new run start finish shutdown kernel ', 'tfidf_method': 'run_kernel start_new_kernel _kill_kernel _launch_kernel has_kernel shutdown_kernel finish_shutdown ', 'lda_word': ' kernel,kill,shutdown,new,start,', 'lda_method': ' kill_kernel,launch_kernel,run_kernel,finish_shutdown,shutdown_kernel,', 'lsi_word': ' kernel,shutdown,start,new,run,', 'lsi_method': ' has_kernel,shutdown_kernel,start_new_kernel,run_kernel,launch_kernel,', 'spm_method': '  &#187; run_kernel(manager.py) &rarr; start_new_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; _kill_kernel(manager.py) &rarr; has_kernel(manager.py) &rarr; _launch_kernel(manager.py) . <br>', 'text_summary': 'Start a new kernel, and return its Manager and Client. Has a kernel been started that we are managing.', 'files_count': 1, 'files': ['manager.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'321': 'run_kernel(manager.py)', '323': 'start_new_kernel(manager.py)', '364': 'shutdown_kernel(manager.py)', '346': '_kill_kernel(manager.py)', '354': 'has_kernel(manager.py)', '347': '_launch_kernel(manager.py)', '352': 'finish_shutdown(manager.py)'}}, {'key': 1783, 'parent': 2023, 'tfidf_word': 'finish launch new run start alive shutdown kernel ', 'tfidf_method': 'run_kernel start_new_kernel _launch_kernel finish_shutdown has_kernel shutdown_kernel is_alive ', 'lda_word': ' kernel,shutdown,finish,launch,start,', 'lda_method': ' launch_kernel,run_kernel,shutdown_kernel,has_kernel,start_new_kernel,', 'lsi_word': ' kernel,shutdown,start,run,launch,', 'lsi_method': ' start_new_kernel,run_kernel,launch_kernel,has_kernel,shutdown_kernel,', 'spm_method': '  &#187; run_kernel(manager.py) &rarr; start_new_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; finish_shutdown(manager.py) &rarr; has_kernel(manager.py) &rarr; _launch_kernel(manager.py) . <br>', 'text_summary': 'Start a new kernel, and return its Manager and Client. Has a kernel been started that we are managing.', 'files_count': 1, 'files': ['manager.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'321': 'run_kernel(manager.py)', '323': 'start_new_kernel(manager.py)', '364': 'shutdown_kernel(manager.py)', '352': 'finish_shutdown(manager.py)', '354': 'has_kernel(manager.py)', '347': '_launch_kernel(manager.py)', '357': 'is_alive(manager.py)'}}, {'key': 438, 'parent': 1780, 'tfidf_word': 'EP: 438, Name: run_kernel &rarr; start_new_kernel &rarr; shutdown_kernel &rarr; cleanup_resources &rarr; cleanup_ipc_files &rarr; ports', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 442, 'parent': 1780, 'tfidf_word': 'EP: 442, Name: run_kernel &rarr; start_new_kernel &rarr; shutdown_kernel &rarr; cleanup &rarr; cleanup_resources &rarr; cleanup_ipc_files &rarr; ports', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 439, 'parent': 2228, 'tfidf_word': 'EP: 439, Name: run_kernel &rarr; start_new_kernel &rarr; shutdown_kernel &rarr; stop_restarter', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1896, 'parent': 2228, 'tfidf_word': 'connection file new resource run shutdown start cleanup kernel ', 'tfidf_method': 'cleanup_connection_file run_kernel start_new_kernel cleanup_resources shutdown_kernel cleanup ', 'lda_word': ' cleanup,kernel,resource,start,connection,', 'lda_method': ' shutdown_kernel,run_kernel,cleanup_resources,cleanup_connection_file,start_new_kernel,', 'lsi_word': ' kernel,cleanup,resource,connection,shutdown,', 'lsi_method': ' cleanup_connection_file,cleanup_resources,shutdown_kernel,start_new_kernel,run_kernel,', 'spm_method': ' ', 'text_summary': 'Attempts to stop the kernel process cleanly.', 'files_count': 2, 'files': ['manager.py', 'connect.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'321': 'run_kernel(manager.py)', '323': 'start_new_kernel(manager.py)', '364': 'shutdown_kernel(manager.py)', '350': 'cleanup_resources(manager.py)', '200': 'cleanup_connection_file(connect.py)', '349': 'cleanup(manager.py)'}}, {'key': 152, 'parent': 1461, 'tfidf_word': 'EP: 152, Name: _requires_ips &rarr; ips_loaded &rarr; _load_ips &rarr; _load_ips_ipconfig &rarr; _populate_from_list &rarr; NoIPAddresses', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1460, 'parent': 1461, 'tfidf_word': 'ipconfig list populate require local public stable uniq load ip ', 'tfidf_method': '_load_ips _load_ips_ipconfig _populate_from_list _requires_ips ips_loaded _uniq_stable local_ips public_ips ', 'lda_word': ' ip,load,list,uniq,populate,', 'lda_method': ' populate_from_list,ips_loaded,load_ips,load_ips_ipconfig,requires_ips,', 'lsi_word': ' ip,load,require,populate,list,', 'lsi_method': ' ips_loaded,load_ips_ipconfig,requires_ips,populate_from_list,load_ips,', 'spm_method': ' ', 'text_summary': 'load the IPs that point to this machine. populate local and public IPs from flat list of all IPs. return the IP addresses that point to this machine.', 'files_count': 1, 'files': ['localinterfaces.py'], 'execution_path_count': 3, 'function_id_to_name_file': {'310': '_requires_ips(localinterfaces.py)', '318': 'ips_loaded(localinterfaces.py)', '301': '_load_ips(localinterfaces.py)', '306': '_load_ips_ipconfig(localinterfaces.py)', '309': '_populate_from_list(localinterfaces.py)', '316': 'public_ips(localinterfaces.py)', '314': 'local_ips(localinterfaces.py)', '311': '_uniq_stable(localinterfaces.py)'}}, {'key': 147, 'parent': 1991, 'tfidf_word': 'EP: 147, Name: _requires_ips &rarr; ips_loaded &rarr; _load_ips &rarr; _load_ips_ifconfig &rarr; _get_output', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1458, 'parent': 1991, 'tfidf_word': 'populate require addresses local no public stable uniq load ip ', 'tfidf_method': '_load_ips _load_ips_ifconfig _populate_from_list _requires_ips ips_loaded NoIPAddresses _uniq_stable local_ips public_ips ', 'lda_word': ' ip,load,ifconfig,require,list,', 'lda_method': ' populate_from_list,load_ips,ips_loaded,load_ips_ifconfig,requires_ips,', 'lsi_word': ' ip,load,ifconfig,list,populate,', 'lsi_method': ' ips_loaded,load_ips,requires_ips,populate_from_list,load_ips_ifconfig,', 'spm_method': ' ', 'text_summary': 'decorator to ensure load_ips has been run before f. populate local and public IPs from flat list of all IPs. return the IP addresses that point to this machine. populate local and public IPs from flat list of all IPs. return the IP addresses for this machine that are visible to other machines. populate local and public IPs from flat list of all IPs. decorator to ensure load_ips has been run before f.', 'files_count': 1, 'files': ['localinterfaces.py'], 'execution_path_count': 4, 'function_id_to_name_file': {'310': '_requires_ips(localinterfaces.py)', '318': 'ips_loaded(localinterfaces.py)', '301': '_load_ips(localinterfaces.py)', '304': '_load_ips_ifconfig(localinterfaces.py)', '309': '_populate_from_list(localinterfaces.py)', '299': 'NoIPAddresses(localinterfaces.py)', '316': 'public_ips(localinterfaces.py)', '314': 'local_ips(localinterfaces.py)', '311': '_uniq_stable(localinterfaces.py)'}}, {'key': 1990, 'parent': 2411, 'tfidf_word': 'addresses get local no output public stable uniq load ip ', 'tfidf_method': '_load_ips _load_ips_ip _requires_ips ips_loaded _populate_from_list NoIPAddresses _get_output _uniq_stable local_ips public_ips ', 'lda_word': ' ip,load,require,list,populate,', 'lda_method': ' load_ips,load_ips_ip,populate_from_list,ips_loaded,requires_ips,', 'lsi_word': ' ip,load,require,populate,list,', 'lsi_method': ' load_ips_ip,requires_ips,load_ips,ips_loaded,populate_from_list,', 'spm_method': ' ', 'text_summary': 'populate local and public IPs from flat list of all IPs. return the IP addresses that point to this machine. populate local and public IPs from flat list of all IPs. return the IP addresses for this machine that are visible to other machines. decorator to ensure load_ips has been run before f.', 'files_count': 1, 'files': ['localinterfaces.py'], 'execution_path_count': 5, 'function_id_to_name_file': {'310': '_requires_ips(localinterfaces.py)', '318': 'ips_loaded(localinterfaces.py)', '301': '_load_ips(localinterfaces.py)', '305': '_load_ips_ip(localinterfaces.py)', '300': '_get_output(localinterfaces.py)', '309': '_populate_from_list(localinterfaces.py)', '299': 'NoIPAddresses(localinterfaces.py)', '316': 'public_ips(localinterfaces.py)', '314': 'local_ips(localinterfaces.py)', '311': '_uniq_stable(localinterfaces.py)'}}, {'key': 2266, 'parent': 2411, 'tfidf_word': 'netifaces addresses dumb local no public stable uniq load ip ', 'tfidf_method': '_load_ips _requires_ips ips_loaded _load_ips_netifaces NoIPAddresses _load_ips_dumb _uniq_stable local_ips public_ips ', 'lda_word': ' ip,load,require,netifaces,public,', 'lda_method': ' load_ips,requires_ips,ips_loaded,load_ips_netifaces,noipaddresses,', 'lsi_word': ' ip,load,require,netifaces,local,', 'lsi_method': ' requires_ips,load_ips,ips_loaded,load_ips_netifaces,uniq_stable,', 'spm_method': ' ', 'text_summary': 'load the IPs that point to this machine.', 'files_count': 1, 'files': ['localinterfaces.py'], 'execution_path_count': 5, 'function_id_to_name_file': {'310': '_requires_ips(localinterfaces.py)', '318': 'ips_loaded(localinterfaces.py)', '301': '_load_ips(localinterfaces.py)', '307': '_load_ips_netifaces(localinterfaces.py)', '311': '_uniq_stable(localinterfaces.py)', '314': 'local_ips(localinterfaces.py)', '316': 'public_ips(localinterfaces.py)', '302': '_load_ips_dumb(localinterfaces.py)', '299': 'NoIPAddresses(localinterfaces.py)'}}, {'key': 1127, 'parent': 1747, 'tfidf_word': 'EP: 1127, Name: test_load_ips &rarr; _load_ips &rarr; _load_ips_ipconfig &rarr; _populate_from_list &rarr; NoIPAddresses', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1746, 'parent': 1747, 'tfidf_word': 'ipconfig list populate test local public stable uniq load ip ', 'tfidf_method': '_load_ips _load_ips_ipconfig _populate_from_list test_load_ips _uniq_stable local_ips public_ips ', 'lda_word': ' ip,load,ipconfig,test,list,', 'lda_method': ' test_load_ips,load_ips,populate_from_list,load_ips_ipconfig,local_ips,', 'lsi_word': ' ip,load,ipconfig,test,list,', 'lsi_method': ' test_load_ips,populate_from_list,load_ips,load_ips_ipconfig,public_ips,', 'spm_method': ' ', 'text_summary': 'populate local and public IPs from flat list of all IPs. return the IP addresses that point to this machine. populate local and public IPs from flat list of all IPs. return the IP addresses for this machine that are visible to other machines. populate local and public IPs from flat list of all IPs. uniq_stable(elems) -> list.', 'files_count': 2, 'files': ['test_localinterfaces.py', 'localinterfaces.py'], 'execution_path_count': 3, 'function_id_to_name_file': {'634': 'test_load_ips(test_localinterfaces.py)', '301': '_load_ips(localinterfaces.py)', '306': '_load_ips_ipconfig(localinterfaces.py)', '309': '_populate_from_list(localinterfaces.py)', '316': 'public_ips(localinterfaces.py)', '314': 'local_ips(localinterfaces.py)', '311': '_uniq_stable(localinterfaces.py)'}}, {'key': 1122, 'parent': 2230, 'tfidf_word': 'EP: 1122, Name: test_load_ips &rarr; _load_ips &rarr; _load_ips_ifconfig &rarr; _get_output', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1744, 'parent': 2230, 'tfidf_word': 'populate test addresses local no public stable uniq load ip ', 'tfidf_method': '_load_ips _load_ips_ifconfig _populate_from_list test_load_ips NoIPAddresses _uniq_stable local_ips public_ips ', 'lda_word': ' ip,load,ifconfig,list,populate,', 'lda_method': ' load_ips,load_ips_ifconfig,test_load_ips,populate_from_list,uniq_stable,', 'lsi_word': ' ip,load,test,list,populate,', 'lsi_method': ' load_ips_ifconfig,load_ips,test_load_ips,populate_from_list,noipaddresses,', 'spm_method': ' ', 'text_summary': 'load the IPs that point to this machine. populate local and public IPs from flat list of all IPs. return the IP addresses that point to this machine. populate local and public IPs from flat list of all IPs. return the IP addresses for this machine that are visible to other machines.', 'files_count': 2, 'files': ['test_localinterfaces.py', 'localinterfaces.py'], 'execution_path_count': 4, 'function_id_to_name_file': {'634': 'test_load_ips(test_localinterfaces.py)', '301': '_load_ips(localinterfaces.py)', '304': '_load_ips_ifconfig(localinterfaces.py)', '309': '_populate_from_list(localinterfaces.py)', '299': 'NoIPAddresses(localinterfaces.py)', '316': 'public_ips(localinterfaces.py)', '314': 'local_ips(localinterfaces.py)', '311': '_uniq_stable(localinterfaces.py)'}}, {'key': 2229, 'parent': 2708, 'tfidf_word': 'addresses get local no output public stable uniq load ip ', 'tfidf_method': '_load_ips _load_ips_ip test_load_ips _populate_from_list NoIPAddresses _get_output _uniq_stable local_ips public_ips ', 'lda_word': ' ip,load,populate,list,test,', 'lda_method': ' test_load_ips,load_ips,load_ips_ip,get_output,populate_from_list,', 'lsi_word': ' ip,load,test,populate,list,', 'lsi_method': ' test_load_ips,load_ips_ip,load_ips,populate_from_list,local_ips,', 'spm_method': ' ', 'text_summary': 'load ip addresses from `ip addr` output (Linux). populate local and public IPs from flat list of all IPs. return the IP addresses that point to this machine. populate local and public IPs from flat list of all IPs. return the IP addresses for this machine that are visible to other machines. populate local and public IPs from flat list of all IPs.', 'files_count': 2, 'files': ['test_localinterfaces.py', 'localinterfaces.py'], 'execution_path_count': 5, 'function_id_to_name_file': {'634': 'test_load_ips(test_localinterfaces.py)', '301': '_load_ips(localinterfaces.py)', '305': '_load_ips_ip(localinterfaces.py)', '300': '_get_output(localinterfaces.py)', '309': '_populate_from_list(localinterfaces.py)', '299': 'NoIPAddresses(localinterfaces.py)', '316': 'public_ips(localinterfaces.py)', '314': 'local_ips(localinterfaces.py)', '311': '_uniq_stable(localinterfaces.py)'}}, {'key': 2693, 'parent': 2708, 'tfidf_word': 'uniq gethostbyname addresses dumb local no public require load ip ', 'tfidf_method': 'test_load_ips _load_ips_netifaces _uniq_stable _load_ips_gethostbyname NoIPAddresses _load_ips_dumb _requires_ips local_ips public_ips ips_loaded ', 'lda_word': ' ip,load,test,gethostbyname,stable,', 'lda_method': ' load_ips,test_load_ips,load_ips_netifaces,uniq_stable,load_ips_dumb,', 'lsi_word': ' ip,load,test,netifaces,uniq,', 'lsi_method': ' load_ips,test_load_ips,load_ips_netifaces,uniq_stable,load_ips_gethostbyname,', 'spm_method': ' ', 'text_summary': 'load the IPs that point to this machine.', 'files_count': 2, 'files': ['localinterfaces.py', 'test_localinterfaces.py'], 'execution_path_count': 7, 'function_id_to_name_file': {'310': '_requires_ips(localinterfaces.py)', '318': 'ips_loaded(localinterfaces.py)', '301': '_load_ips(localinterfaces.py)', '303': '_load_ips_gethostbyname(localinterfaces.py)', '311': '_uniq_stable(localinterfaces.py)', '634': 'test_load_ips(test_localinterfaces.py)', '307': '_load_ips_netifaces(localinterfaces.py)', '314': 'local_ips(localinterfaces.py)', '316': 'public_ips(localinterfaces.py)', '302': '_load_ips_dumb(localinterfaces.py)', '299': 'NoIPAddresses(localinterfaces.py)'}}, {'key': 1062, 'parent': 2081, 'tfidf_word': 'EP: 1062, Name: test_load_connection_file_session &rarr; __init__ &rarr; _new_auth', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2076, 'parent': 2081, 'tfidf_word': 'roundtrip pack packer version msgpack id default cull pickle zero ', 'tfidf_method': 'test_bad_pack test_bad_packer test_bad_roundtrip test_bad_unpack test_bad_unpacker test_cull_digest_history test_datetimes_msgpack test_datetimes_pickle test_session_id test_zero_digest_history ', 'lda_word': ' test,init,new,auth,bad,', 'lda_method': ' init,new_auth,test_default_version,test_bad_pack,test_bad_unpack,', 'lsi_word': ' auth,new,init,test,bad,', 'lsi_method': ' new_auth,init,test_datetimes_msgpack,test_bad_packer,test_bad_pack,', 'spm_method': ' ', 'text_summary': '', 'files_count': 3, 'files': ['test_adapter.py', 'session.py', 'test_session.py'], 'execution_path_count': 12, 'function_id_to_name_file': {'519': 'setUp(test_adapter.py)', '457': '__init__(session.py)', '465': '_new_auth(session.py)', '516': 'test_default_version(test_adapter.py)', '689': 'test_datetimes_msgpack(test_session.py)', '690': 'test_datetimes_pickle(test_session.py)', '683': 'test_bad_roundtrip(test_session.py)', '685': 'test_bad_unpacker(test_session.py)', '682': 'test_bad_packer(test_session.py)', '681': 'test_bad_pack(test_session.py)', '684': 'test_bad_unpack(test_session.py)', '687': 'test_cull_digest_history(test_session.py)', '697': 'test_session_id(test_session.py)', '700': 'test_zero_digest_history(test_session.py)'}}, {'key': 727, 'parent': 2151, 'tfidf_word': 'EP: 727, Name: setUp &rarr; __init__ &rarr; _new_auth', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2095, 'parent': 2151, 'tfidf_word': 'auth new default session init ', 'tfidf_method': '__init__ _new_auth _session_default __init__ ', 'lda_word': ' auth,init,new,default,session,', 'lda_method': ' init,new_auth,session_default,', 'lsi_word': ' init,new,auth,default,session,', 'lsi_method': ' init,new_auth,session_default,', 'spm_method': ' ', 'text_summary': '', 'files_count': 3, 'files': ['consoleapp.py', 'session.py', 'connect.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'215': '__init__(consoleapp.py)', '457': '__init__(session.py)', '465': '_new_auth(session.py)', '198': '_session_default(connect.py)'}}, {'key': 2273, 'parent': 2697, 'tfidf_word': 'test init initialize session kn app find file load connection ', 'tfidf_method': '_ip_default load_connection_file load_connection_info localhost init_connection_file initialize test_load_connection_file_session test_load_connection_file_session_with_kn test_app_load_connection_file test_find_connection_file ', 'lda_word': ' file,load,connection,default,localhost,', 'lda_method': ' load_connection_info,ip_default,load_connection_file,localhost,initialize,', 'lsi_word': ' connection,load,file,default,ip,', 'lsi_method': ' load_connection_info,ip_default,localhost,load_connection_file,init_connection_file,', 'spm_method': '  &#187; initialize(test_connect.py) &rarr; init_connection_file(consoleapp.py) &rarr; load_connection_file(connect.py) &rarr; load_connection_info(connect.py) &rarr; _ip_default(connect.py) &rarr; localhost(localinterfaces.py) . <br>', 'text_summary': 'Load connection info from a dict containing connection info. Load connection info from JSON dict in self.connection_file.', 'files_count': 4, 'files': ['test_connect.py', 'consoleapp.py', 'connect.py', 'localinterfaces.py'], 'execution_path_count': 6, 'function_id_to_name_file': {'560': 'test_find_connection_file(test_connect.py)', '572': 'initialize(test_connect.py)', '219': 'init_connection_file(consoleapp.py)', '209': 'load_connection_file(connect.py)', '210': 'load_connection_info(connect.py)', '195': '_ip_default(connect.py)', '315': 'localhost(localinterfaces.py)', '559': 'test_app_load_connection_file(test_connect.py)', '564': 'test_load_connection_file_session(test_connect.py)', '565': 'test_load_connection_file_session_with_kn(test_connect.py)'}}, {'key': 2364, 'parent': 2697, 'tfidf_word': 'test init initialize session kn app find file load connection ', 'tfidf_method': '_record_random_port_names load_connection_file load_connection_info init_connection_file initialize test_load_connection_file_session test_load_connection_file_session_with_kn test_app_load_connection_file test_find_connection_file ', 'lda_word': ' file,connection,load,info,test,', 'lda_method': ' load_connection_file,record_random_port_names,init_connection_file,initialize,load_connection_info,', 'lsi_word': ' connection,load,file,random,info,', 'lsi_method': ' record_random_port_names,load_connection_info,load_connection_file,initialize,init_connection_file,', 'spm_method': ' ', 'text_summary': 'Load connection info from JSON dict in self.connection_file. test load_connection_file() after.', 'files_count': 3, 'files': ['test_connect.py', 'consoleapp.py', 'connect.py'], 'execution_path_count': 6, 'function_id_to_name_file': {'560': 'test_find_connection_file(test_connect.py)', '572': 'initialize(test_connect.py)', '219': 'init_connection_file(consoleapp.py)', '209': 'load_connection_file(connect.py)', '210': 'load_connection_info(connect.py)', '197': '_record_random_port_names(connect.py)', '559': 'test_app_load_connection_file(test_connect.py)', '564': 'test_load_connection_file_session(test_connect.py)', '565': 'test_load_connection_file_session_with_kn(test_connect.py)'}}, {'key': 2683, 'parent': 2764, 'tfidf_word': 'default ip manager load such no client file connection kernel ', 'tfidf_method': '_record_random_port_names init_ssh localhost load_connection_info write_connection_file init_connection_file _ip_default init_kernel_manager init_kernel_client NoSuchKernel ', 'lda_word': ' initialize,init,localhost,connection,file,', 'lda_method': ' initialize,record_random_port_names,write_connection_file,load_connection_file,init_connection_file,', 'lsi_word': ' connection,initialize,file,load,init,', 'lsi_method': ' initialize,load_connection_file,record_random_port_names,init_ssh,localhost,', 'spm_method': '  &#187; initialize(runapp.py) &rarr; initialize(consoleapp.py) &rarr; load_connection_file(connect.py) &rarr; load_connection_info(connect.py) &rarr; _ip_default(connect.py) &rarr; localhost(localinterfaces.py) . <br>', 'text_summary': 'return ip for localhost (almost always 127.0.0.1)   set up ssh tunnels, if needed. Load connection info from JSON dict in self.connection_file. Write connection info to JSON dict in self.connection_file.', 'files_count': 5, 'files': ['runapp.py', 'consoleapp.py', 'connect.py', 'localinterfaces.py', 'kernelspec.py'], 'execution_path_count': 11, 'function_id_to_name_file': {'437': 'initialize(runapp.py)', '223': 'initialize(consoleapp.py)', '222': 'init_ssh(consoleapp.py)', '209': 'load_connection_file(connect.py)', '210': 'load_connection_info(connect.py)', '195': '_ip_default(connect.py)', '315': 'localhost(localinterfaces.py)', '197': '_record_random_port_names(connect.py)', '212': 'write_connection_file(connect.py)', '219': 'init_connection_file(consoleapp.py)', '220': 'init_kernel_client(consoleapp.py)', '221': 'init_kernel_manager(consoleapp.py)', '255': 'NoSuchKernel(kernelspec.py)'}}, {'key': 2685, 'parent': 2764, 'tfidf_word': 'mixin load find run cleanup async app file connection kernel ', 'tfidf_method': 'client test_load_connection_file_session test_load_connection_file_session_with_kn run_kernel start_new_async_kernel start_new_kernel test_app_load_connection_file test_find_connection_file test_mixin_cleanup_random_ports test_mixin_record_random_ports ', 'lda_word': ' file,connection,async,port,random,', 'lda_method': ' record_random_port_names,write_connection_file,init_connection_file,load_connection_file,initialize,', 'lsi_word': ' file,connection,load,random,port,', 'lsi_method': ' write_connection_file,record_random_port_names,load_connection_file,init_connection_file,initialize,', 'spm_method': ' ', 'text_summary': 'Write connection info to JSON dict in self.connection_file. Load connection info from JSON dict in self.connection_file.', 'files_count': 4, 'files': ['test_connect.py', 'consoleapp.py', 'connect.py', 'manager.py'], 'execution_path_count': 10, 'function_id_to_name_file': {'560': 'test_find_connection_file(test_connect.py)', '572': 'initialize(test_connect.py)', '219': 'init_connection_file(consoleapp.py)', '209': 'load_connection_file(connect.py)', '212': 'write_connection_file(connect.py)', '197': '_record_random_port_names(connect.py)', '559': 'test_app_load_connection_file(test_connect.py)', '564': 'test_load_connection_file_session(test_connect.py)', '565': 'test_load_connection_file_session_with_kn(test_connect.py)', '322': 'start_new_async_kernel(manager.py)', '351': 'client(manager.py)', '321': 'run_kernel(manager.py)', '323': 'start_new_kernel(manager.py)', '568': 'test_mixin_record_random_ports(test_connect.py)', '567': 'test_mixin_cleanup_random_ports(test_connect.py)'}}, {'key': 2223, 'parent': 2669, 'tfidf_word': 'get list test dir name subclass valid find kernel specs ', 'tfidf_method': '_list_kernels_in find_kernel_specs get_all_specs _is_kernel_dir _is_valid_kernel_name test_find_all_specs test_subclass ', 'lda_word': ' specs,kernel,find,list,get,', 'lda_method': ' find_kernel_specs,get_all_specs,list_kernels_in,test_find_all_specs,test_subclass,', 'lsi_word': ' kernel,specs,find,get,list,', 'lsi_method': ' list_kernels_in,get_all_specs,find_kernel_specs,is_valid_kernel_name,test_subclass,', 'spm_method': ' ', 'text_summary': 'Return a mapping of kernel names to resource directories from dir.', 'files_count': 2, 'files': ['test_kernelspec.py', 'kernelspec.py'], 'execution_path_count': 4, 'function_id_to_name_file': {'621': 'test_find_all_specs(test_kernelspec.py)', '273': 'get_all_specs(kernelspec.py)', '272': 'find_kernel_specs(kernelspec.py)', '258': '_list_kernels_in(kernelspec.py)', '257': '_is_valid_kernel_name(kernelspec.py)', '256': '_is_kernel_dir(kernelspec.py)', '629': 'test_subclass(test_kernelspec.py)'}}, {'key': 2391, 'parent': 2669, 'tfidf_word': 'name valid find specs install prefix priority spec kernel remove ', 'tfidf_method': 'find_kernel_specs _is_kernel_dir _is_valid_kernel_name find_kernel_specs remove_kernel_spec test_find_kernel_specs test_install_kernel_spec test_install_kernel_spec_prefix test_kernel_spec_priority test_remove_kernel_spec ', 'lda_word': ' kernel,spec,valid,remove,test,', 'lda_method': ' is_valid_kernel_name,list_kernels_in,find_kernel_specs,test_install_kernel_spec_prefix,test_kernel_spec_priority,', 'lsi_word': ' kernel,find,specs,list,spec,', 'lsi_method': ' find_kernel_specs,list_kernels_in,is_valid_kernel_name,is_kernel_dir,remove_kernel_spec,', 'spm_method': ' ', 'text_summary': 'Return a mapping of kernel names to resource directories from dir. Remove a kernel spec directory by name. Is ``path`` a kernel directory?.', 'files_count': 2, 'files': ['test_kernelspec.py', 'kernelspec.py'], 'execution_path_count': 12, 'function_id_to_name_file': {'627': 'test_remove_kernel_spec(test_kernelspec.py)', '277': 'remove_kernel_spec(kernelspec.py)', '272': 'find_kernel_specs(kernelspec.py)', '258': '_list_kernels_in(kernelspec.py)', '257': '_is_valid_kernel_name(kernelspec.py)', '256': '_is_kernel_dir(kernelspec.py)', '625': 'test_install_kernel_spec_prefix(test_kernelspec.py)', '626': 'test_kernel_spec_priority(test_kernelspec.py)', '624': 'test_install_kernel_spec(test_kernelspec.py)', '259': 'find_kernel_specs(kernelspec.py)', '622': 'test_find_kernel_specs(test_kernelspec.py)'}}, {'key': 2407, 'parent': 2787, 'tfidf_word': 'serialize raw naive pickle msgpack ms handle default precision unserialize ', 'tfidf_method': 'test_datetimes_msgpack test_datetimes test_extract_date_from_naive test_extract_dates test_send_raw test_date_default handle unserialize test_parse_ms_precision test_serialize ', 'lda_word': ' date,extract,ensure,tzinfo,parse,', 'lda_method': ' extract_dates,parse_date,ensure_tzinfo,deserialize,datetime_test,', 'lsi_word': ' date,extract,test,parse,tzinfo,', 'lsi_method': ' parse_date,ensure_tzinfo,extract_dates,deserialize,datetime_test,', 'spm_method': ' ', 'text_summary': 'Receive and unpack a message. extract ISO8601 dates from unpacked JSON. parse an ISO8601 date string.', 'files_count': 5, 'files': ['test_session.py', 'session.py', 'jsonutil.py', 'forward.py', 'test_jsonutil.py'], 'execution_path_count': 13, 'function_id_to_name_file': {'694': 'test_send(test_session.py)', '479': 'recv(session.py)', '474': 'deserialize(session.py)', '242': 'extract_dates(jsonutil.py)', '243': 'parse_date(jsonutil.py)', '240': '_ensure_tzinfo(jsonutil.py)', '492': 'handle(forward.py)', '695': 'test_send_raw(test_session.py)', '484': 'unserialize(session.py)', '696': 'test_serialize(test_session.py)', '578': 'test_parse_ms_precision(test_jsonutil.py)', '689': 'test_datetimes_msgpack(test_session.py)', '679': '_datetime_test(test_session.py)', '688': 'test_datetimes(test_session.py)', '690': 'test_datetimes_pickle(test_session.py)', '575': 'test_date_default(test_jsonutil.py)', '576': 'test_extract_date_from_naive(test_jsonutil.py)', '577': 'test_extract_dates(test_jsonutil.py)'}}, {'key': 2784, 'parent': 2787, 'tfidf_word': 'loop native permission flush digest tunnel io cleanup restarter code ', 'tfidf_method': 'test_find_connection_file_local test_find_connection_file_relative start test_mixin_record_random_ports test_secure_write update_msg_type check_user_only_permissions fetch_win32_permissions update_metadata SignalTestApp ', 'lda_word': ' kernel,get,spec,test,set,', 'lda_method': ' get_kernel_spec,execute,run_lifecycle,deserialize,is_kernel_dir,', 'lsi_word': ' kernel,spec,start,get,test,', 'lsi_method': ' init,get_kernel_spec,setup,get_all_specs,test_subclass,', 'spm_method': ' ', 'text_summary': "Subclasses may override  Prepares a kernel for startup in a separate process. return ip for localhost (almost always 127.0.0.1) test `ipython console --existing` loads a connection file. Prepares a kernel for startup in a separate process. return ip for localhost (almost always 127.0.0.1)   Ensure that a sequence of kernel startups doesn't break anything. Sends a signal to the process group of the kernel (this. Pass a message to the ZMQ socket to send. Return the connection info as a dict. Subclasses may override Start the polling of the kernel. return ip for localhost (almost always 127.0.0.1) test load_connection_file() after. Launches a localhost kernel, binding to the specified ports. test `ipython console --existing` loads a connection file. find a connection file, and return its absolute path. return ip for localhost (almost always 127.0.0.1)      find a connection file, and return its absolute path. tunnel connections to a kernel via ssh. For tests, create a file to indicate that we've started. Returns a dict mapping kernel names to kernelspecs. handle kernel info reply. Get all messages that are currently ready. Returns the id to associate with the kernel for this request. Send a raw message via ident path. {connection_file})   Prepares a kernel for startup in a separate process. Get the hb channel object for this kernel. {connection_file})  Restarts a kernel with the arguments that were used to launch it. Make a blocking client connected to my kernel. return ip for localhost (almost always 127.0.0.1)  Write connection info to JSON dict in self.connection_file. Get a message from the stdin channel. Immediately processes all pending messages on this channel. Return the number of running kernels. Verify realpath is used when formatting connection file. Unserialize a msg_list to a nested message dict. {connection_file}) Write connection info to JSON dict in self.connection_file. Interrupts the kernel by sending it a signal. Get a message from the shell channel. Get a message from the iopub channel. This is run in the ioloop thread when the kernel info reply is received. default function for packing datetime objects in JSON. Returns a :class:`KernelSpec` instance for a given kernel_name. test load_connection_file() after. Write connection info to JSON dict in self.connection_file. test that messages receive unique ids. Create a zmq Socket and connect it to the kernel. Forgets randomly assigned port numbers and cleans up the connection file.", 'files_count': 35, 'files': ['manager.py', 'connect.py', 'test_manager.py', 'kernelspec.py', 'localinterfaces.py', 'test_kernelspec.py', 'test_client.py', 'test_session.py', 'session.py', 'adapter.py', 'forward.py', 'test_adapter.py', 'test_connect.py', 'channels.py', 'threaded.py', 'consoleapp.py', 'runapp.py', 'test_multikernelmanager.py', 'multikernelmanager.py', 'tunnel.py', 'test_ssh.py', 'client.py', 'managerabc.py', 'channelsabc.py', 'test_kernelmanager.py', 'jsonutil.py', 'utils.py', 'restarter.py', 'signalkernel.py', 'kernelspecapp.py', 'kernelapp.py', 'test_jsonutil.py', 'test_kernelapp.py', 'win_interrupt.py', 'launcher.py'], 'execution_path_count': 506, 'function_id_to_name_file': {'330': 'restart_kernel(manager.py)', '333': 'start_kernel(manager.py)', '326': '_launch_kernel(manager.py)', '322': 'start_new_async_kernel(manager.py)', '359': 'post_start_kernel(manager.py)', '338': '_connect_control_socket(manager.py)', '192': '_create_connected_socket(connect.py)', '196': '_make_url(connect.py)', '367': 'start_restarter(manager.py)', '635': 'test_connection_file_real_path(test_manager.py)', '353': 'format_kernel_cmd(manager.py)', '358': 'kernel_spec(manager.py)', '253': 'KernelSpec(kernelspec.py)', '360': 'pre_start_kernel(manager.py)', '369': 'from_ns(manager.py)', '212': 'write_connection_file(connect.py)', '197': '_record_random_port_names(connect.py)', '341': '_get_env_substitutions(manager.py)', '314': 'local_ips(localinterfaces.py)', '312': 'is_local_ip(localinterfaces.py)', '623': 'test_get_kernel_spec(test_kernelspec.py)', '267': '_find_spec_directory(kernelspec.py)', '256': '_is_kernel_dir(kernelspec.py)', '632': 'find_kernel_specs(test_kernelspec.py)', '621': 'test_find_all_specs(test_kernelspec.py)', '273': 'get_all_specs(kernelspec.py)', '274': 'get_kernel_spec(kernelspec.py)', '629': 'test_subclass(test_kernelspec.py)', '633': 'get_kernel_spec(test_kernelspec.py)', '549': 'setUp(test_client.py)', '269': '_get_kernel_spec_by_name(kernelspec.py)', '255': 'NoSuchKernel(kernelspec.py)', '278': '__init__(kernelspec.py)', '257': '_is_valid_kernel_name(kernelspec.py)', '260': 'get_kernel_spec(kernelspec.py)', '694': 'test_send(test_session.py)', '479': 'recv(session.py)', '474': 'deserialize(session.py)', '50': 'adapt(adapter.py)', '450': 'utcnow(session.py)', '492': 'handle(forward.py)', '695': 'test_send_raw(test_session.py)', '484': 'unserialize(session.py)', '696': 'test_serialize(test_session.py)', '516': 'test_default_version(test_adapter.py)', '698': 'test_tracking(test_session.py)', '480': 'send(session.py)', '328': 'interrupt_kernel(manager.py)', '559': 'test_app_load_connection_file(test_connect.py)', '191': 'write_connection_file(connect.py)', '109': 'close(channels.py)', '83': 'close(channels.py)', '315': 'localhost(localinterfaces.py)', '730': 'close(threaded.py)', '132': 'close(channels.py)', '211': 'ports(connect.py)', '718': 'close(threaded.py)', '565': 'test_load_connection_file_session_with_kn(test_connect.py)', '570': 'test_write_connection_file(test_connect.py)', '564': 'test_load_connection_file_session(test_connect.py)', '686': 'test_clone(test_session.py)', '458': '_add_digest(session.py)', '460': '_cull_digest_history(session.py)', '700': 'test_zero_digest_history(test_session.py)', '687': 'test_cull_digest_history(test_session.py)', '558': 'DummyConsoleApp(test_connect.py)', '214': 'JupyterConsoleApp(consoleapp.py)', '441': 'Session(session.py)', '188': 'ConnectionFileMixin(connect.py)', '560': 'test_find_connection_file(test_connect.py)', '213': 'IPythonConsoleApp(consoleapp.py)', '434': 'RunApp(runapp.py)', '665': 'test_start_sequence_tcp_kernels(test_multikernelmanager.py)', '655': '_get_tcp_km(test_multikernelmanager.py)', '392': '__init__(multikernelmanager.py)', '666': 'test_tcp_cinfo(test_multikernelmanager.py)', '668': 'test_tcp_lifecycle_with_kernel_id(test_multikernelmanager.py)', '661': 'test_shutdown_all(test_multikernelmanager.py)', '663': 'test_start_parallel_thread_kernels(test_multikernelmanager.py)', '658': 'tcp_lifecycle_with_loop(test_multikernelmanager.py)', '667': 'test_tcp_lifecycle(test_multikernelmanager.py)', '662': 'test_start_parallel_process_kernels(test_multikernelmanager.py)', '190': 'tunnel_to_kernel(connect.py)', '503': 'select_random_ports(tunnel.py)', '701': 'test_random_ports(test_ssh.py)', '386': 'shutdown_all(multikernelmanager.py)', '383': 'finish_shutdown(multikernelmanager.py)', '410': 'get_kernel(multikernelmanager.py)', '394': '_check_kernel_id(multikernelmanager.py)', '388': 'signal_kernel(multikernelmanager.py)', '385': 'restart_kernel(multikernelmanager.py)', '384': 'interrupt_kernel(multikernelmanager.py)', '387': 'shutdown_kernel(multikernelmanager.py)', '421': 'shutdown_kernel(multikernelmanager.py)', '420': 'shutdown_all(multikernelmanager.py)', '104': 'wait_for_ready(client.py)', '103': 'is_alive(client.py)', '412': 'is_alive(multikernelmanager.py)', '373': 'is_alive(managerabc.py)', '140': 'is_alive(channelsabc.py)', '732': 'is_alive(threaded.py)', '86': 'is_alive(channels.py)', '112': 'is_alive(channels.py)', '123': 'wait_for_ready(client.py)', '165': 'is_alive(client.py)', '648': 'test_start_parallel_thread_kernels(test_multikernelmanager.py)', '643': 'tcp_lifecycle_with_loop(test_multikernelmanager.py)', '642': 'raw_tcp_lifecycle(test_multikernelmanager.py)', '641': '_run_lifecycle(test_multikernelmanager.py)', '647': 'test_start_parallel_process_kernels(test_multikernelmanager.py)', '652': 'test_tcp_lifecycle(test_multikernelmanager.py)', '653': 'test_tcp_lifecycle_with_kernel_id(test_multikernelmanager.py)', '483': 'sign(session.py)', '440': 'Message(session.py)', '482': 'serialize(session.py)', '135': 'run(channels.py)', '128': '_create_socket(channels.py)', '84': 'get_msg(channels.py)', '82': '_recv(channels.py)', '101': 'get_stdin_msg(client.py)', '85': 'get_msgs(channels.py)', '99': 'get_iopub_msg(client.py)', '110': 'get_msg(channels.py)', '108': '_recv(channels.py)', '111': 'get_msgs(channels.py)', '620': 'test_cant_install_kernel_spec(test_kernelspec.py)', '275': 'install_kernel_spec(kernelspec.py)', '268': '_get_destination_dir(kernelspec.py)', '625': 'test_install_kernel_spec_prefix(test_kernelspec.py)', '261': 'install_kernel_spec(kernelspec.py)', '624': 'test_install_kernel_spec(test_kernelspec.py)', '614': 'test_start_sequence_process_kernels(test_kernelmanager.py)', '610': '_run_signaltest_lifecycle(test_kernelmanager.py)', '615': 'execute(test_kernelmanager.py)', '609': '_prepare_kernel(test_kernelmanager.py)', '611': 'test_start_parallel_process_kernels(test_kernelmanager.py)', '613': 'test_start_sequence_kernels(test_kernelmanager.py)', '612': 'test_start_parallel_thread_kernels(test_kernelmanager.py)', '398': '_kernel_manager_class_changed(multikernelmanager.py)', '396': '_create_kernel_manager_factory(multikernelmanager.py)', '424': 'create_kernel_manager(multikernelmanager.py)', '397': '_find_available_port(multikernelmanager.py)', '395': '_context_default(multikernelmanager.py)', '399': '_kernel_manager_factory_default(multikernelmanager.py)', '215': '__init__(consoleapp.py)', '485': '__init__(session.py)', '457': '__init__(session.py)', '465': '_new_auth(session.py)', '459': '_check_packers(session.py)', '244': 'squash_dates(jsonutil.py)', '90': 'AsyncKernelClient(client.py)', '147': 'KernelClient(client.py)', '139': 'HBChannelABC(channelsabc.py)', '138': 'ChannelABC(channelsabc.py)', '116': 'BlockingKernelClient(client.py)', '319': 'AsyncKernelManager(manager.py)', '320': 'KernelManager(manager.py)', '224': 'AsyncIOLoopKernelManager(manager.py)', '225': 'IOLoopKernelManager(manager.py)', '657': '_run_lifecycle(test_multikernelmanager.py)', '704': 'execute(utils.py)', '155': 'execute(client.py)', '148': 'validate_string_dict(client.py)', '689': 'test_datetimes_msgpack(test_session.py)', '679': '_datetime_test(test_session.py)', '688': 'test_datetimes(test_session.py)', '690': 'test_datetimes_pickle(test_session.py)', '734': 'send(threaded.py)', '738': 'thread_send(threaded.py)', '664': 'test_start_sequence_ipc_kernels(test_multikernelmanager.py)', '654': '_get_ipc_km(test_multikernelmanager.py)', '660': 'test_ipc_lifecycle(test_multikernelmanager.py)', '659': 'test_ipc_cinfo(test_multikernelmanager.py)', '423': 'start_kernel(multikernelmanager.py)', '415': 'pre_start_kernel(multikernelmanager.py)', '380': 'DuplicateKernelError(multikernelmanager.py)', '414': 'new_kernel_id(multikernelmanager.py)', '389': 'start_kernel(multikernelmanager.py)', '238': 'start(restarter.py)', '430': 'poll(restarter.py)', '433': 'stop(restarter.py)', '428': '_fire_callbacks(restarter.py)', '510': 'do_execute(signalkernel.py)', '501': 'openssh_tunnel(tunnel.py)', '494': 'SSHException(tunnel.py)', '497': '_stop_tunnel(tunnel.py)', '475': 'feed_identities(session.py)', '202': 'cleanup_random_ports(connect.py)', '200': 'cleanup_connection_file(connect.py)', '567': 'test_mixin_cleanup_random_ports(test_connect.py)', '106': 'ZMQSocketChannel(channels.py)', '226': 'as_zmqstream(manager.py)', '233': 'wrapped(manager.py)', '568': 'test_mixin_record_random_ports(test_connect.py)', '557': 'DummyConfigurable(test_connect.py)', '235': 'IOLoopKernelRestarter(restarter.py)', '426': 'KernelRestarter(restarter.py)', '234': 'AsyncIOLoopKernelRestarter(restarter.py)', '291': 'start(kernelspecapp.py)', '251': 'start(kernelapp.py)', '249': 'setup_signals(kernelapp.py)', '252': 'shutdown_handler(kernelapp.py)', '250': 'shutdown(kernelapp.py)', '248': 'log_connection_info(kernelapp.py)', '199': 'blocking_client(connect.py)', '208': 'get_connection_info(connect.py)', '725': 'stop_channels(threaded.py)', '684': 'test_bad_unpack(test_session.py)', '676': '_bad_unpacker(test_session.py)', '536': 'test_complete_request(test_adapter.py)', '517': 'adapt(test_adapter.py)', '562': 'test_find_connection_file_local(test_connect.py)', '189': 'find_connection_file(connect.py)', '493': 'SubHander(forward.py)', '490': 'Handler(forward.py)', '114': 'send(channels.py)', '88': 'send(channels.py)', '575': 'test_date_default(test_jsonutil.py)', '241': 'date_default(jsonutil.py)', '240': '_ensure_tzinfo(jsonutil.py)', '597': 'test_subclasses(test_kernelmanager.py)', '703': 'AsyncKernelManagerWithCleanup(utils.py)', '595': 'test_signal_kernel_subprocesses(test_kernelmanager.py)', '598': 'execute(test_kernelmanager.py)', '702': 'AsyncKernelManagerSubclass(utils.py)', '591': 'transport(test_kernelmanager.py)', '606': 'test_templated_kspec_env(test_kernelmanager.py)', '599': '_env_test_body(test_kernelmanager.py)', '607': 'execute(test_kernelmanager.py)', '604': 'test_signal_kernel_subprocesses(test_kernelmanager.py)', '608': 'execute(test_kernelmanager.py)', '586': 'env(test_kernelmanager.py)', '712': 'stop(utils.py)', '711': 'start(utils.py)', '705': 'test_env(utils.py)', '630': 'test_validate_kernel_name(test_kernelspec.py)', '506': 'SignalTestApp(signalkernel.py)', '507': 'SignalTestKernel(signalkernel.py)', '627': 'test_remove_kernel_spec(test_kernelspec.py)', '617': '_install_sample_kernel(test_kernelspec.py)', '626': 'test_kernel_spec_priority(test_kernelspec.py)', '651': 'test_tcp_cinfo(test_multikernelmanager.py)', '640': '_run_cinfo(test_multikernelmanager.py)', '622': 'test_find_kernel_specs(test_kernelspec.py)', '619': 'tearDown(test_kernelspec.py)', '618': 'setUp(test_kernelspec.py)', '649': 'test_start_sequence_ipc_kernels(test_multikernelmanager.py)', '650': 'test_start_sequence_tcp_kernels(test_multikernelmanager.py)', '644': 'test_ipc_cinfo(test_multikernelmanager.py)', '645': 'test_ipc_lifecycle(test_multikernelmanager.py)', '656': '_run_cinfo(test_multikernelmanager.py)', '569': 'test_secure_write(test_connect.py)', '573': 'check_user_only_permissions(test_connect.py)', '574': 'fetch_win32_permissions(test_connect.py)', '563': 'test_find_connection_file_relative(test_connect.py)', '561': 'test_find_connection_file_abspath(test_connect.py)', '539': 'test_input_request(test_adapter.py)', '537': 'test_display_data(test_adapter.py)', '540': 'test_inspect_reply(test_adapter.py)', '543': 'test_kernel_info_reply(test_adapter.py)', '542': 'test_inspect_request_token(test_adapter.py)', '535': 'test_complete_reply(test_adapter.py)', '541': 'test_inspect_request(test_adapter.py)', '538': 'test_execute_request(test_adapter.py)', '545': 'test_rename_type(test_adapter.py)', '544': 'test_no_adapt(test_adapter.py)', '546': 'test_same_version(test_adapter.py)', '514': 'V5toV4TestCase(test_adapter.py)', '512': 'AdapterTest(test_adapter.py)', '526': 'test_input_request(test_adapter.py)', '523': 'test_display_data(test_adapter.py)', '527': 'test_kernel_info_reply(test_adapter.py)', '530': 'test_object_info_reply_not_found(test_adapter.py)', '529': 'test_object_info_reply(test_adapter.py)', '531': 'test_object_info_request(test_adapter.py)', '521': 'test_complete_reply(test_adapter.py)', '522': 'test_complete_request(test_adapter.py)', '524': 'test_execute_reply(test_adapter.py)', '532': 'test_rename_type(test_adapter.py)', '525': 'test_execute_request(test_adapter.py)', '528': 'test_no_adapt(test_adapter.py)', '533': 'test_same_version(test_adapter.py)', '513': 'V4toV5TestCase(test_adapter.py)', '519': 'setUp(test_adapter.py)', '515': 'test_code_to_line_no_code(test_adapter.py)', '51': 'code_to_line(adapter.py)', '158': 'get_shell_msg(client.py)', '157': 'get_iopub_msg(client.py)', '710': '__exit__(utils.py)', '709': '__enter__(utils.py)', '580': 'test_kernelapp_lifecycle(test_kernelapp.py)', '579': '_launch(test_kernelapp.py)', '473': 'clone(session.py)', '481': 'send_raw(session.py)', '683': 'test_bad_roundtrip(test_session.py)', '685': 'test_bad_unpacker(test_session.py)', '682': 'test_bad_packer(test_session.py)', '681': 'test_bad_pack(test_session.py)', '675': '_bad_packer(test_session.py)', '697': 'test_session_id(test_session.py)', '699': 'test_unique_msg_ids(test_session.py)', '445': 'msg_header(session.py)', '680': 'test_args(test_session.py)', '478': 'msg_id(session.py)', '674': 'TestSession(test_session.py)', '673': 'SessionTestCase(test_session.py)', '678': 'setUp(test_session.py)', '556': 'test_shutdown(test_client.py)', '548': '_check_reply(test_client.py)', '550': 'test_comm_info(test_client.py)', '555': 'test_kernel_info(test_client.py)', '551': 'test_complete(test_client.py)', '554': 'test_inspect(test_client.py)', '553': 'test_history(test_client.py)', '117': 'reqrep(client.py)', '124': 'wrapped(client.py)', '150': '_handle_kernel_info_reply(client.py)', '125': 'HBChannel(channels.py)', '102': 'hb_channel(client.py)', '91': 'reqrep(client.py)', '105': 'wrapped(client.py)', '80': 'ZMQSocketChannel(channels.py)', '154': 'control_channel(client.py)', '723': 'ioloop(threaded.py)', '160': 'hb_channel(client.py)', '171': 'stdin_channel(client.py)', '164': 'iopub_channel(client.py)', '168': 'shell_channel(client.py)', '740': 'send_interrupt(win_interrupt.py)', '334': '__del__(manager.py)', '293': 'start(kernelspecapp.py)', '294': 'path_key(kernelspecapp.py)', '735': 'start(threaded.py)', '720': 'start(threaded.py)', '141': 'start(channelsabc.py)', '432': 'start(restarter.py)', '288': 'start(kernelspecapp.py)', '89': 'start(channels.py)', '115': 'start(channels.py)', '290': 'start(kernelspecapp.py)', '438': 'parse_command_line(runapp.py)', '218': 'build_kernel_argv(consoleapp.py)', '308': '_only_once(localinterfaces.py)', '317': 'wrapped(localinterfaces.py)', '47': 'V4toV5(adapter.py)', '46': 'Adapter(adapter.py)', '77': 'object_info_request(adapter.py)', '52': 'extract_oname_v4(adapter.py)', '70': 'complete_request(adapter.py)', '75': 'kernel_info_reply(adapter.py)', '49': '_version_str_to_list(adapter.py)', '48': 'V5toV4(adapter.py)', '53': '__call__(adapter.py)', '54': 'handle_reply_status_error(adapter.py)', '57': 'update_msg_type(adapter.py)', '56': 'update_metadata(adapter.py)', '55': 'update_header(adapter.py)', '247': 'initialize(kernelapp.py)', '246': '_record_started(kernelapp.py)', '585': 'config(test_kernelmanager.py)', '262': 'install_native_kernel_spec(kernelspec.py)', '276': 'install_native_kernel_spec(kernelspec.py)', '265': 'to_json(kernelspec.py)', '264': 'to_dict(kernelspec.py)', '449': 'test_msg2obj(session.py)', '453': '__init__(session.py)', '470': '_signature_scheme_changed(session.py)', '463': '_key_default(session.py)', '447': 'new_id_bytes(session.py)', '462': '_key_changed(session.py)', '443': 'default_secure(session.py)', '469': '_session_default(session.py)', '446': 'new_id(session.py)', '413': 'list_kernel_ids(multikernelmanager.py)', '721': 'stop(threaded.py)', '724': 'start_channels(threaded.py)', '722': '_check_kernel_info_reply(threaded.py)', '716': '__init__(threaded.py)', '416': 'remove_kernel(multikernelmanager.py)', '713': 'IOLoopThread(threaded.py)', '714': 'ThreadedKernelClient(threaded.py)', '715': 'ThreadedZMQSocketChannel(threaded.py)', '731': 'flush(threaded.py)', '727': '_flush(threaded.py)', '418': 'request_shutdown(multikernelmanager.py)', '402': 'cleanup_resources(multikernelmanager.py)', '408': 'finish_shutdown(multikernelmanager.py)', '393': '__len__(multikernelmanager.py)', '198': '_session_default(connect.py)', '298': 'launch_kernel(launcher.py)', '739': 'create_interrupt_event(win_interrupt.py)', '741': 'SECURITY_ATTRIBUTES(win_interrupt.py)', '509': '__init__(signalkernel.py)', '127': '__init__(channels.py)', '126': 'InvalidPortNumber(channels.py)', '107': '__init__(channels.py)', '81': '__init__(channels.py)', '726': '__init__(threaded.py)', '737': 'setup_stream(threaded.py)', '728': '_handle_recv(threaded.py)', '729': 'call_handlers(threaded.py)', '136': 'stop(channels.py)', '133': 'is_beating(channels.py)', '145': 'time_to_dead(channelsabc.py)', '131': 'call_handlers(channels.py)', '130': '_poll(channels.py)'}}, {'key': 188, 'parent': 1771, 'tfidf_word': 'EP: 188, Name: initialize &rarr; handle_sigint &rarr; interrupt_kernel &rarr; msg &rarr; msg_header &rarr; msg_id', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 196, 'parent': 1771, 'tfidf_word': 'EP: 196, Name: initialize &rarr; handle_sigint &rarr; interrupt_kernel &rarr; send &rarr; msg &rarr; msg_header &rarr; msg_id', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1586, 'parent': 1989, 'tfidf_word': 'handle header id initialize interrupt kernel sigint msg ', 'tfidf_method': 'interrupt_kernel handle_sigint initialize msg msg_header msg_id msg msg ', 'lda_word': ' msg,header,initialize,kernel,sigint,', 'lda_method': ' msg,initialize,interrupt_kernel,msg_header,msg_id,', 'lsi_word': ' msg,initialize,sigint,header,kernel,', 'lsi_method': ' msg,interrupt_kernel,msg_id,msg_header,initialize,', 'spm_method': '  &#187; initialize(runapp.py) &rarr; handle_sigint(runapp.py) &rarr; interrupt_kernel(manager.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; handle_sigint(runapp.py) &rarr; interrupt_kernel(manager.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br>', 'text_summary': '', 'files_count': 4, 'files': ['runapp.py', 'manager.py', 'test_adapter.py', 'session.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'437': 'initialize(runapp.py)', '435': 'handle_sigint(runapp.py)', '355': 'interrupt_kernel(manager.py)', '520': 'msg(test_adapter.py)', '476': 'msg(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '534': 'msg(test_adapter.py)'}}, {'key': 1587, 'parent': 1989, 'tfidf_word': 'handle header id initialize interrupt kernel sigint msg ', 'tfidf_method': 'interrupt_kernel handle_sigint initialize msg msg_header msg_id msg msg ', 'lda_word': ' msg,interrupt,handle,sigint,kernel,', 'lda_method': ' msg,handle_sigint,msg_header,interrupt_kernel,msg_id,', 'lsi_word': ' msg,kernel,interrupt,sigint,initialize,', 'lsi_method': ' msg,handle_sigint,initialize,interrupt_kernel,msg_header,', 'spm_method': '  &#187; initialize(runapp.py) &rarr; handle_sigint(runapp.py) &rarr; interrupt_kernel(manager.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; handle_sigint(runapp.py) &rarr; interrupt_kernel(manager.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br>', 'text_summary': '', 'files_count': 4, 'files': ['runapp.py', 'manager.py', 'test_adapter.py', 'session.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'437': 'initialize(runapp.py)', '435': 'handle_sigint(runapp.py)', '355': 'interrupt_kernel(manager.py)', '534': 'msg(test_adapter.py)', '476': 'msg(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '520': 'msg(test_adapter.py)'}}, {'key': 1868, 'parent': 2036, 'tfidf_word': 'extract handle header initialize interrupt kernel msg sigint send ', 'tfidf_method': 'interrupt_kernel handle_sigint initialize extract_header msg send ', 'lda_word': ' handle,extract,sigint,initialize,msg,', 'lda_method': ' msg,handle_sigint,initialize,interrupt_kernel,extract_header,', 'lsi_word': ' handle,initialize,kernel,sigint,header,', 'lsi_method': ' extract_header,handle_sigint,initialize,interrupt_kernel,msg,', 'spm_method': ' ', 'text_summary': 'Pass a message to the ZMQ socket to send.', 'files_count': 3, 'files': ['runapp.py', 'manager.py', 'session.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'437': 'initialize(runapp.py)', '435': 'handle_sigint(runapp.py)', '355': 'interrupt_kernel(manager.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '480': 'send(session.py)'}}, {'key': 2024, 'parent': 2036, 'tfidf_word': 'extract handle header initialize interrupt kernel sigint msg ', 'tfidf_method': 'interrupt_kernel handle_sigint initialize extract_header msg msg msg ', 'lda_word': ' msg,initialize,kernel,sigint,handle,', 'lda_method': ' msg,initialize,interrupt_kernel,handle_sigint,extract_header,', 'lsi_word': ' msg,extract,kernel,initialize,interrupt,', 'lsi_method': ' msg,extract_header,handle_sigint,initialize,interrupt_kernel,', 'spm_method': '  &#187; initialize(runapp.py) &rarr; handle_sigint(runapp.py) &rarr; interrupt_kernel(manager.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br>', 'text_summary': '', 'files_count': 4, 'files': ['runapp.py', 'manager.py', 'test_adapter.py', 'session.py'], 'execution_path_count': 4, 'function_id_to_name_file': {'437': 'initialize(runapp.py)', '435': 'handle_sigint(runapp.py)', '355': 'interrupt_kernel(manager.py)', '520': 'msg(test_adapter.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '534': 'msg(test_adapter.py)'}}, {'key': 2113, 'parent': 2409, 'tfidf_word': 'handle initialize interrupt kernel sigint ', 'tfidf_method': 'handle_sigint initialize interrupt_kernel interrupt_kernel ', 'lda_word': ' sigint,handle,interrupt,kernel,initialize,', 'lda_method': ' initialize,handle_sigint,interrupt_kernel,', 'lsi_word': ' initialize,interrupt,kernel,sigint,handle,', 'lsi_method': ' handle_sigint,initialize,interrupt_kernel,', 'spm_method': ' ', 'text_summary': '', 'files_count': 3, 'files': ['runapp.py', 'multikernelmanager.py', 'managerabc.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'437': 'initialize(runapp.py)', '435': 'handle_sigint(runapp.py)', '411': 'interrupt_kernel(multikernelmanager.py)', '372': 'interrupt_kernel(managerabc.py)'}}, {'key': 2383, 'parent': 2409, 'tfidf_word': 'signal sign adapt message control serialize utcnow kernel socket connect ', 'tfidf_method': 'adapt sign serialize send Message send_interrupt signal_kernel _connect_control_socket utcnow send ', 'lda_word': ' kernel,interrupt,send,sigint,initialize,', 'lda_method': ' initialize,handle_sigint,create_connected_socket,make_url,interrupt_kernel,', 'lsi_word': ' kernel,interrupt,sigint,initialize,handle,', 'lsi_method': ' interrupt_kernel,initialize,handle_sigint,send,create_connected_socket,', 'spm_method': ' ', 'text_summary': 'Interrupts the kernel by sending it a signal. Pass a message to the ZMQ socket to send.', 'files_count': 8, 'files': ['runapp.py', 'manager.py', 'session.py', 'adapter.py', 'connect.py', 'threaded.py', 'channels.py', 'win_interrupt.py'], 'execution_path_count': 11, 'function_id_to_name_file': {'437': 'initialize(runapp.py)', '435': 'handle_sigint(runapp.py)', '355': 'interrupt_kernel(manager.py)', '480': 'send(session.py)', '50': 'adapt(adapter.py)', '450': 'utcnow(session.py)', '482': 'serialize(session.py)', '483': 'sign(session.py)', '440': 'Message(session.py)', '354': 'has_kernel(manager.py)', '347': '_launch_kernel(manager.py)', '365': 'signal_kernel(manager.py)', '338': '_connect_control_socket(manager.py)', '192': '_create_connected_socket(connect.py)', '196': '_make_url(connect.py)', '734': 'send(threaded.py)', '738': 'thread_send(threaded.py)', '114': 'send(channels.py)', '88': 'send(channels.py)', '740': 'send_interrupt(win_interrupt.py)'}}, {'key': 1971, 'parent': 2358, 'tfidf_word': 'connection header id open passwordless try paramiko tunnel msg ', 'tfidf_method': 'msg msg_header msg_id _try_passwordless_paramiko open_tunnel paramiko_tunnel tunnel_connection msg msg ', 'lda_word': ' msg,tunnel,paramiko,open,header,', 'lda_method': ' msg,open_tunnel,tunnel_connection,msg_id,msg_header,', 'lsi_word': ' msg,tunnel,paramiko,connection,try,', 'lsi_method': ' msg,msg_id,try_passwordless_paramiko,open_tunnel,paramiko_tunnel,', 'spm_method': '  &#187; tunnel_connection(tunnel.py) &rarr; open_tunnel(tunnel.py) &rarr; paramiko_tunnel(tunnel.py) &rarr; _try_passwordless_paramiko(tunnel.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; open_tunnel(tunnel.py) &rarr; paramiko_tunnel(tunnel.py) &rarr; _try_passwordless_paramiko(tunnel.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; paramiko_tunnel(tunnel.py) &rarr; _try_passwordless_paramiko(tunnel.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br>', 'text_summary': 'Open a tunneled connection from a 0MQ url. Connect a socket to an address via an ssh tunnel.', 'files_count': 3, 'files': ['tunnel.py', 'test_adapter.py', 'session.py'], 'execution_path_count': 4, 'function_id_to_name_file': {'505': 'tunnel_connection(tunnel.py)', '500': 'open_tunnel(tunnel.py)', '502': 'paramiko_tunnel(tunnel.py)', '499': '_try_passwordless_paramiko(tunnel.py)', '520': 'msg(test_adapter.py)', '476': 'msg(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '534': 'msg(test_adapter.py)'}}, {'key': 2294, 'parent': 2358, 'tfidf_word': 'passwordless try header extract paramiko id server split tunnel msg ', 'tfidf_method': 'open_tunnel paramiko_tunnel tunnel_connection msg extract_header msg msg msg_header msg_id _split_server ', 'lda_word': ' tunnel,paramiko,connection,passwordless,open,', 'lda_method': ' msg,try_passwordless_paramiko,paramiko_tunnel,open_tunnel,tunnel_connection,', 'lsi_word': ' tunnel,msg,paramiko,connection,try,', 'lsi_method': ' msg,open_tunnel,tunnel_connection,try_passwordless_paramiko,paramiko_tunnel,', 'spm_method': '  &#187; tunnel_connection(tunnel.py) &rarr; open_tunnel(tunnel.py) &rarr; paramiko_tunnel(tunnel.py) &rarr; _try_passwordless_paramiko(tunnel.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br> &#187; open_tunnel(tunnel.py) &rarr; paramiko_tunnel(tunnel.py) &rarr; _try_passwordless_paramiko(tunnel.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br>', 'text_summary': 'This should only be used Try passwordless login with paramiko. launch a tunner with paramiko in a subprocess.', 'files_count': 3, 'files': ['tunnel.py', 'test_adapter.py', 'session.py'], 'execution_path_count': 7, 'function_id_to_name_file': {'505': 'tunnel_connection(tunnel.py)', '500': 'open_tunnel(tunnel.py)', '502': 'paramiko_tunnel(tunnel.py)', '499': '_try_passwordless_paramiko(tunnel.py)', '520': 'msg(test_adapter.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '534': 'msg(test_adapter.py)', '496': '_split_server(tunnel.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)'}}, {'key': 1967, 'parent': 2689, 'tfidf_word': 'connection open random select close port tunnel ', 'tfidf_method': 'open_tunnel select_random_ports tunnel_connection close close ports close close close ', 'lda_word': ' tunnel,random,port,close,open,', 'lda_method': ' select_random_ports,tunnel_connection,open_tunnel,port,close,', 'lsi_word': ' tunnel,port,select,random,open,', 'lsi_method': ' open_tunnel,select_random_ports,tunnel_connection,close,port,', 'spm_method': ' ', 'text_summary': '', 'files_count': 4, 'files': ['tunnel.py', 'threaded.py', 'channels.py', 'connect.py'], 'execution_path_count': 6, 'function_id_to_name_file': {'505': 'tunnel_connection(tunnel.py)', '500': 'open_tunnel(tunnel.py)', '503': 'select_random_ports(tunnel.py)', '730': 'close(threaded.py)', '718': 'close(threaded.py)', '109': 'close(channels.py)', '132': 'close(channels.py)', '83': 'close(channels.py)', '211': 'ports(connect.py)'}}, {'key': 2410, 'parent': 2689, 'tfidf_word': 'open openssh exception forward server split ssh stop paramiko tunnel ', 'tfidf_method': 'open_tunnel tunnel_connection _paramiko_tunnel openssh_tunnel paramiko_tunnel forward_tunnel SSHException _split_server _stop_tunnel ', 'lda_word': ' tunnel,connection,open,openssh,paramiko,', 'lda_method': ' open_tunnel,tunnel_connection,paramiko_tunnel,openssh_tunnel,stop_tunnel,', 'lsi_word': ' tunnel,paramiko,connection,open,openssh,', 'lsi_method': ' paramiko_tunnel,open_tunnel,tunnel_connection,split_server,openssh_tunnel,', 'spm_method': ' ', 'text_summary': 'Open a tunneled connection from a 0MQ url.', 'files_count': 2, 'files': ['tunnel.py', 'forward.py'], 'execution_path_count': 4, 'function_id_to_name_file': {'505': 'tunnel_connection(tunnel.py)', '500': 'open_tunnel(tunnel.py)', '502': 'paramiko_tunnel(tunnel.py)', '495': '_paramiko_tunnel(tunnel.py)', '496': '_split_server(tunnel.py)', '491': 'forward_tunnel(forward.py)', '501': 'openssh_tunnel(tunnel.py)', '494': 'SSHException(tunnel.py)', '497': '_stop_tunnel(tunnel.py)'}}, {'key': 2112, 'parent': 2700, 'tfidf_word': 'info init initialize kernel unpause get msg shell ', 'tfidf_method': 'init_kernel_info initialize unpause unpause get_shell_msg ', 'lda_word': ' initialize,info,unpause,kernel,init,', 'lda_method': ' init_kernel_info,initialize,unpause,get_shell_msg,', 'lsi_word': ' initialize,info,kernel,init,unpause,', 'lsi_method': ' init_kernel_info,initialize,unpause,get_shell_msg,', 'spm_method': ' ', 'text_summary': '', 'files_count': 4, 'files': ['runapp.py', 'client.py', 'channels.py', 'channelsabc.py'], 'execution_path_count': 3, 'function_id_to_name_file': {'437': 'initialize(runapp.py)', '436': 'init_kernel_info(runapp.py)', '158': 'get_shell_msg(client.py)', '137': 'unpause(channels.py)', '146': 'unpause(channelsabc.py)'}}, {'key': 2660, 'parent': 2700, 'tfidf_word': 'header init initialize extract id info kernel msg ', 'tfidf_method': 'kernel_info init_kernel_info initialize msg msg msg extract_header msg_header msg_id ', 'lda_word': ' msg,info,kernel,init,header,', 'lda_method': ' msg,init_kernel_info,kernel_info,extract_header,initialize,', 'lsi_word': ' msg,info,kernel,header,init,', 'lsi_method': ' msg,init_kernel_info,initialize,kernel_info,msg_header,', 'spm_method': '  &#187; initialize(runapp.py) &rarr; init_kernel_info(runapp.py) &rarr; kernel_info(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; init_kernel_info(runapp.py) &rarr; kernel_info(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br>', 'text_summary': '', 'files_count': 4, 'files': ['runapp.py', 'client.py', 'test_adapter.py', 'session.py'], 'execution_path_count': 10, 'function_id_to_name_file': {'437': 'initialize(runapp.py)', '436': 'init_kernel_info(runapp.py)', '167': 'kernel_info(client.py)', '534': 'msg(test_adapter.py)', '476': 'msg(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '520': 'msg(test_adapter.py)', '444': 'extract_header(session.py)'}}, {'key': 2661, 'parent': 2770, 'tfidf_word': 'header input extract id start msg ', 'tfidf_method': 'input start start msg msg msg extract_header msg_header msg_id ', 'lda_word': ' msg,start,header,extract,input,', 'lda_method': ' msg,start,input,extract_header,msg_id,', 'lsi_word': ' msg,start,input,header,extract,', 'lsi_method': ' msg,start,input,msg_header,msg_id,', 'spm_method': '  &#187; start(kernelspecapp.py) &rarr; start(kernelspecapp.py) &rarr; input(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; start(kernelspecapp.py) &rarr; input(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br>', 'text_summary': '', 'files_count': 4, 'files': ['kernelspecapp.py', 'client.py', 'test_adapter.py', 'session.py'], 'execution_path_count': 10, 'function_id_to_name_file': {'291': 'start(kernelspecapp.py)', '297': 'start(kernelspecapp.py)', '162': 'input(client.py)', '534': 'msg(test_adapter.py)', '476': 'msg(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '520': 'msg(test_adapter.py)', '444': 'extract_header(session.py)'}}, {'key': 2667, 'parent': 2770, 'tfidf_word': 'extract id passwordless ssh try exception openssh server split msg ', 'tfidf_method': '_try_passwordless_paramiko msg msg msg extract_header msg_header msg_id SSHException _split_server _try_passwordless_openssh ', 'lda_word': ' try,msg,passwordless,paramiko,header,', 'lda_method': ' msg,tunnel_to_kernel,try_passwordless_ssh,try_passwordless_paramiko,msg_id,', 'lsi_word': ' msg,passwordless,try,ssh,kernel,', 'lsi_method': ' msg,tunnel_to_kernel,try_passwordless_ssh,try_passwordless_paramiko,msg_id,', 'spm_method': '  &#187; tunnel_to_kernel(connect.py) &rarr; try_passwordless_ssh(tunnel.py) &rarr; _try_passwordless_paramiko(tunnel.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; try_passwordless_ssh(tunnel.py) &rarr; _try_passwordless_paramiko(tunnel.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br>', 'text_summary': 'tunnel connections to a kernel via ssh. Try passwordless login with shell ssh command. Try passwordless login with paramiko.', 'files_count': 4, 'files': ['connect.py', 'tunnel.py', 'test_adapter.py', 'session.py'], 'execution_path_count': 12, 'function_id_to_name_file': {'190': 'tunnel_to_kernel(connect.py)', '504': 'try_passwordless_ssh(tunnel.py)', '499': '_try_passwordless_paramiko(tunnel.py)', '534': 'msg(test_adapter.py)', '476': 'msg(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '520': 'msg(test_adapter.py)', '498': '_try_passwordless_openssh(tunnel.py)', '494': 'SSHException(tunnel.py)', '496': '_split_server(tunnel.py)', '444': 'extract_header(session.py)'}}, {'key': 1409, 'parent': 2048, 'tfidf_word': 'resource shutdown url async new restart start cleanup kernel socket ', 'tfidf_method': '_create_connected_socket _make_url shutdown_kernel _close_control_socket cleanup cleanup_resources start_new_async_kernel restart_kernel ', 'lda_word': ' cleanup,kernel,close,socket,shutdown,', 'lda_method': ' cleanup,create_connected_socket,cleanup_resources,make_url,restart_kernel,', 'lsi_word': ' kernel,socket,cleanup,close,control,', 'lsi_method': ' cleanup,make_url,shutdown_kernel,cleanup_resources,create_connected_socket,', 'spm_method': '  &#187; shutdown_kernel(manager.py) &rarr; cleanup(manager.py) &rarr; cleanup_resources(manager.py) &rarr; _close_control_socket(manager.py) &rarr; _create_connected_socket(connect.py) &rarr; _make_url(connect.py) . <br>', 'text_summary': 'Create a zmq Socket and connect it to the kernel. Restarts a kernel with the arguments that were used to launch it.', 'files_count': 2, 'files': ['manager.py', 'connect.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'330': 'restart_kernel(manager.py)', '331': 'shutdown_kernel(manager.py)', '349': 'cleanup(manager.py)', '350': 'cleanup_resources(manager.py)', '337': '_close_control_socket(manager.py)', '192': '_create_connected_socket(connect.py)', '196': '_make_url(connect.py)', '322': 'start_new_async_kernel(manager.py)'}}, {'key': 1469, 'parent': 2048, 'tfidf_word': 'make resource shutdown url async new restart start kernel socket ', 'tfidf_method': '_create_connected_socket _make_url shutdown_kernel _close_control_socket cleanup_resources start_new_async_kernel restart_kernel ', 'lda_word': ' kernel,socket,url,connect,create,', 'lda_method': ' close_control_socket,cleanup_resources,make_url,shutdown_kernel,create_connected_socket,', 'lsi_word': ' kernel,socket,make,create,connect,', 'lsi_method': ' make_url,close_control_socket,shutdown_kernel,create_connected_socket,cleanup_resources,', 'spm_method': ' ', 'text_summary': 'Create a zmq Socket and connect it to the kernel.', 'files_count': 2, 'files': ['manager.py', 'connect.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'330': 'restart_kernel(manager.py)', '331': 'shutdown_kernel(manager.py)', '350': 'cleanup_resources(manager.py)', '337': '_close_control_socket(manager.py)', '192': '_create_connected_socket(connect.py)', '196': '_make_url(connect.py)', '322': 'start_new_async_kernel(manager.py)'}}, {'key': 1470, 'parent': 2301, 'tfidf_word': 'execute make poll resource restart shutdown url cleanup kernel socket ', 'tfidf_method': '_create_connected_socket _make_url poll _close_control_socket cleanup_resources restart_kernel shutdown_kernel do_execute cleanup ', 'lda_word': ' kernel,cleanup,socket,restart,create,', 'lda_method': ' do_execute,restart_kernel,shutdown_kernel,cleanup_resources,make_url,', 'lsi_word': ' socket,kernel,cleanup,execute,create,', 'lsi_method': ' cleanup_resources,shutdown_kernel,poll,make_url,close_control_socket,', 'spm_method': '  &#187; do_execute(signalkernel.py) &rarr; poll(restarter.py) &rarr; restart_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; cleanup_resources(manager.py) &rarr; _close_control_socket(manager.py) &rarr; _create_connected_socket(connect.py) &rarr; _make_url(connect.py) . <br> &#187; poll(restarter.py) &rarr; restart_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; cleanup_resources(manager.py) &rarr; _close_control_socket(manager.py) &rarr; _create_connected_socket(connect.py) &rarr; _make_url(connect.py) . <br> &#187; restart_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; cleanup_resources(manager.py) &rarr; _close_control_socket(manager.py) &rarr; _create_connected_socket(connect.py) &rarr; _make_url(connect.py) . <br>', 'text_summary': 'Create a zmq Socket and connect it to the kernel. Restarts a kernel with the arguments that were used to launch it.', 'files_count': 4, 'files': ['signalkernel.py', 'restarter.py', 'manager.py', 'connect.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'510': 'do_execute(signalkernel.py)', '236': 'poll(restarter.py)', '363': 'restart_kernel(manager.py)', '364': 'shutdown_kernel(manager.py)', '350': 'cleanup_resources(manager.py)', '337': '_close_control_socket(manager.py)', '192': '_create_connected_socket(connect.py)', '196': '_make_url(connect.py)', '349': 'cleanup(manager.py)'}}, {'key': 1592, 'parent': 2301, 'tfidf_word': 'make new resource run shutdown start url cleanup socket kernel ', 'tfidf_method': '_create_connected_socket _make_url run_kernel start_new_kernel _close_control_socket cleanup_resources shutdown_kernel cleanup ', 'lda_word': ' kernel,cleanup,socket,connect,start,', 'lda_method': ' shutdown_kernel,cleanup_resources,create_connected_socket,close_control_socket,start_new_kernel,', 'lsi_word': ' kernel,socket,cleanup,close,resource,', 'lsi_method': ' run_kernel,create_connected_socket,start_new_kernel,close_control_socket,shutdown_kernel,', 'spm_method': '  &#187; run_kernel(manager.py) &rarr; start_new_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; cleanup_resources(manager.py) &rarr; _close_control_socket(manager.py) &rarr; _create_connected_socket(connect.py) &rarr; _make_url(connect.py) . <br> &#187; start_new_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; cleanup_resources(manager.py) &rarr; _close_control_socket(manager.py) &rarr; _create_connected_socket(connect.py) &rarr; _make_url(connect.py) . <br>', 'text_summary': 'Create a zmq Socket and connect it to the kernel. Context manager to create a kernel in a subprocess.', 'files_count': 2, 'files': ['manager.py', 'connect.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'321': 'run_kernel(manager.py)', '323': 'start_new_kernel(manager.py)', '364': 'shutdown_kernel(manager.py)', '350': 'cleanup_resources(manager.py)', '337': '_close_control_socket(manager.py)', '192': '_create_connected_socket(connect.py)', '196': '_make_url(connect.py)', '349': 'cleanup(manager.py)'}}, {'key': 1684, 'parent': 2367, 'tfidf_word': 'make request socket url async new restart start kernel shutdown ', 'tfidf_method': '_create_connected_socket _make_url shutdown_kernel request_shutdown start_new_async_kernel restart_kernel ', 'lda_word': ' shutdown,connect,socket,kernel,url,', 'lda_method': ' create_connected_socket,shutdown_kernel,request_shutdown,make_url,restart_kernel,', 'lsi_word': ' kernel,shutdown,create,make,url,', 'lsi_method': ' request_shutdown,create_connected_socket,make_url,shutdown_kernel,start_new_async_kernel,', 'spm_method': ' ', 'text_summary': 'Make a ZeroMQ URL for a given channel. Send a shutdown request via control channel.', 'files_count': 2, 'files': ['manager.py', 'connect.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'330': 'restart_kernel(manager.py)', '331': 'shutdown_kernel(manager.py)', '362': 'request_shutdown(manager.py)', '192': '_create_connected_socket(connect.py)', '196': '_make_url(connect.py)', '322': 'start_new_async_kernel(manager.py)'}}, {'key': 2263, 'parent': 2367, 'tfidf_word': 'request connect kernel socket async interrupt new restart start shutdown ', 'tfidf_method': '_create_connected_socket _make_url _connect_control_socket shutdown_kernel request_shutdown start_new_async_kernel interrupt_kernel restart_kernel ', 'lda_word': ' connect,socket,kernel,shutdown,url,', 'lda_method': ' create_connected_socket,connect_control_socket,make_url,shutdown_kernel,request_shutdown,', 'lsi_word': ' connect,socket,kernel,shutdown,control,', 'lsi_method': ' connect_control_socket,create_connected_socket,make_url,request_shutdown,shutdown_kernel,', 'spm_method': ' ', 'text_summary': 'Restarts a kernel with the arguments that were used to launch it. Interrupts the kernel by sending it a signal. Send a shutdown request via control channel.', 'files_count': 2, 'files': ['manager.py', 'connect.py'], 'execution_path_count': 3, 'function_id_to_name_file': {'328': 'interrupt_kernel(manager.py)', '338': '_connect_control_socket(manager.py)', '192': '_create_connected_socket(connect.py)', '196': '_make_url(connect.py)', '330': 'restart_kernel(manager.py)', '331': 'shutdown_kernel(manager.py)', '362': 'request_shutdown(manager.py)', '322': 'start_new_async_kernel(manager.py)'}}, {'key': 1914, 'parent': 2668, 'tfidf_word': 'socket url io kernel loop manager connect control async channel ', 'tfidf_method': '_create_connected_socket _make_url connect_control control_channel AsyncIOLoopKernelManager IOLoopKernelManager ', 'lda_word': ' control,connect,socket,channel,url,', 'lda_method': ' make_url,create_connected_socket,connect_control,ioloopkernelmanager,control_channel,', 'lsi_word': ' connect,control,socket,make,url,', 'lsi_method': ' create_connected_socket,make_url,connect_control,ioloopkernelmanager,asyncioloopkernelmanager,', 'spm_method': ' ', 'text_summary': 'return zmq Socket connected to the Control channel.', 'files_count': 3, 'files': ['manager.py', 'connect.py', 'client.py'], 'execution_path_count': 3, 'function_id_to_name_file': {'224': 'AsyncIOLoopKernelManager(manager.py)', '203': 'connect_control(connect.py)', '192': '_create_connected_socket(connect.py)', '196': '_make_url(connect.py)', '154': 'control_channel(client.py)', '225': 'IOLoopKernelManager(manager.py)'}}, {'key': 2665, 'parent': 2668, 'tfidf_word': 'async channel hb interrupt control close del stdin iopub shell ', 'tfidf_method': 'connect_iopub connect_shell connect_stdin connect_hb iopub_channel shell_channel stdin_channel interrupt_kernel __del__ _close_control_socket ', 'lda_word': ' connect,io,shell,url,make,', 'lda_method': ' make_url,create_connected_socket,ioloopkernelmanager,connect_stdin,connect_shell,', 'lsi_word': ' connect,socket,make,url,create,', 'lsi_method': ' create_connected_socket,make_url,asyncioloopkernelmanager,ioloopkernelmanager,connect_shell,', 'spm_method': ' ', 'text_summary': 'return zmq Socket connected to the StdIn channel. return zmq Socket connected to the Heartbeat channel. return zmq Socket connected to the Shell channel. return zmq Socket connected to the IOPub channel. Create a zmq Socket and connect it to the kernel.', 'files_count': 3, 'files': ['manager.py', 'connect.py', 'client.py'], 'execution_path_count': 13, 'function_id_to_name_file': {'224': 'AsyncIOLoopKernelManager(manager.py)', '207': 'connect_stdin(connect.py)', '192': '_create_connected_socket(connect.py)', '196': '_make_url(connect.py)', '171': 'stdin_channel(client.py)', '225': 'IOLoopKernelManager(manager.py)', '206': 'connect_shell(connect.py)', '168': 'shell_channel(client.py)', '205': 'connect_iopub(connect.py)', '164': 'iopub_channel(client.py)', '204': 'connect_hb(connect.py)', '334': '__del__(manager.py)', '337': '_close_control_socket(manager.py)', '328': 'interrupt_kernel(manager.py)'}}, {'key': 2121, 'parent': 2666, 'tfidf_word': 'launch restarter start interrupt kernel ', 'tfidf_method': '_launch_kernel has_kernel start_restarter start_restarter interrupt_kernel ', 'lda_word': ' kernel,restarter,start,launch,interrupt,', 'lda_method': ' has_kernel,start_restarter,launch_kernel,interrupt_kernel,', 'lsi_word': ' kernel,launch,restarter,start,interrupt,', 'lsi_method': ' has_kernel,launch_kernel,start_restarter,interrupt_kernel,', 'spm_method': ' ', 'text_summary': 'Has a kernel been started that we are managing. actually launch the kernel.', 'files_count': 1, 'files': ['manager.py'], 'execution_path_count': 3, 'function_id_to_name_file': {'228': 'start_restarter(manager.py)', '354': 'has_kernel(manager.py)', '347': '_launch_kernel(manager.py)', '328': 'interrupt_kernel(manager.py)', '231': 'start_restarter(manager.py)'}}, {'key': 2355, 'parent': 2666, 'tfidf_word': 'alive kernel interactive ready wait beating channels poll stop start ', 'tfidf_method': 'is_alive wait_for_ready execute_interactive wait_for_ready is_beating is_alive poll do_execute stop_channels execute_interactive ', 'lda_word': ' kernel,alive,launch,start,wait,', 'lda_method': ' launch_kernel,has_kernel,is_alive,stop_channels,start,', 'lsi_word': ' kernel,alive,launch,start,execute,', 'lsi_method': ' is_alive,launch_kernel,has_kernel,start,wait_for_ready,', 'spm_method': ' ', 'text_summary': 'Has a kernel been started that we are managing.', 'files_count': 8, 'files': ['kernelspecapp.py', 'runapp.py', 'client.py', 'manager.py', 'signalkernel.py', 'restarter.py', 'channels.py', 'threaded.py'], 'execution_path_count': 7, 'function_id_to_name_file': {'291': 'start(kernelspecapp.py)', '439': 'start(runapp.py)', '122': 'execute_interactive(client.py)', '357': 'is_alive(manager.py)', '354': 'has_kernel(manager.py)', '347': '_launch_kernel(manager.py)', '97': 'execute_interactive(client.py)', '510': 'do_execute(signalkernel.py)', '236': 'poll(restarter.py)', '123': 'wait_for_ready(client.py)', '165': 'is_alive(client.py)', '104': 'wait_for_ready(client.py)', '103': 'is_alive(client.py)', '133': 'is_beating(channels.py)', '725': 'stop_channels(threaded.py)'}}, {'key': 2261, 'parent': 2710, 'tfidf_word': 'launch wait finish kill new restart start async shutdown kernel ', 'tfidf_method': '_async_wait is_alive shutdown_kernel _launch_kernel has_kernel _kill_kernel finish_shutdown start_new_async_kernel restart_kernel ', 'lda_word': ' kernel,shutdown,async,start,launch,', 'lda_method': ' async_wait,is_alive,shutdown_kernel,launch_kernel,has_kernel,', 'lsi_word': ' kernel,shutdown,async,alive,launch,', 'lsi_method': ' has_kernel,shutdown_kernel,launch_kernel,async_wait,is_alive,', 'spm_method': '  &#187; restart_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; finish_shutdown(manager.py) &rarr; _async_wait(manager.py) &rarr; is_alive(manager.py) &rarr; has_kernel(manager.py) &rarr; _launch_kernel(manager.py) . <br> &#187; shutdown_kernel(manager.py) &rarr; finish_shutdown(manager.py) &rarr; _kill_kernel(manager.py) &rarr; _async_wait(manager.py) &rarr; is_alive(manager.py) &rarr; has_kernel(manager.py) &rarr; _launch_kernel(manager.py) . <br> &#187; finish_shutdown(manager.py) &rarr; _kill_kernel(manager.py) &rarr; _async_wait(manager.py) &rarr; is_alive(manager.py) &rarr; has_kernel(manager.py) &rarr; _launch_kernel(manager.py) . <br> &#187; start_new_async_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; finish_shutdown(manager.py) &rarr; _async_wait(manager.py) &rarr; is_alive(manager.py) &rarr; has_kernel(manager.py) &rarr; _launch_kernel(manager.py) . <br>', 'text_summary': "actually launch the kernel. Wait for kernel shutdown, then kill process if it doesn't shutdown.", 'files_count': 1, 'files': ['manager.py'], 'execution_path_count': 6, 'function_id_to_name_file': {'330': 'restart_kernel(manager.py)', '331': 'shutdown_kernel(manager.py)', '327': 'finish_shutdown(manager.py)', '324': '_async_wait(manager.py)', '329': 'is_alive(manager.py)', '354': 'has_kernel(manager.py)', '347': '_launch_kernel(manager.py)', '322': 'start_new_async_kernel(manager.py)', '325': '_kill_kernel(manager.py)'}}, {'key': 2673, 'parent': 2710, 'tfidf_word': 'kill signal async finish new restart start shutdown interrupt kernel ', 'tfidf_method': '_launch_kernel has_kernel _kill_kernel shutdown_kernel signal_kernel start_new_async_kernel finish_shutdown restart_kernel interrupt_kernel ', 'lda_word': ' kernel,shutdown,kill,launch,signal,', 'lda_method': ' kill_kernel,shutdown_kernel,launch_kernel,has_kernel,restart_kernel,', 'lsi_word': ' kernel,shutdown,launch,kill,signal,', 'lsi_method': ' launch_kernel,has_kernel,shutdown_kernel,kill_kernel,signal_kernel,', 'spm_method': '  &#187; restart_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; finish_shutdown(manager.py) &rarr; _kill_kernel(manager.py) &rarr; has_kernel(manager.py) &rarr; _launch_kernel(manager.py) . <br> &#187; shutdown_kernel(manager.py) &rarr; finish_shutdown(manager.py) &rarr; _kill_kernel(manager.py) &rarr; signal_kernel(manager.py) &rarr; has_kernel(manager.py) &rarr; _launch_kernel(manager.py) . <br> &#187; start_new_async_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; finish_shutdown(manager.py) &rarr; _kill_kernel(manager.py) &rarr; has_kernel(manager.py) &rarr; _launch_kernel(manager.py) . <br>', 'text_summary': "Sends a signal to the process group of the kernel (this. Wait for kernel shutdown, then kill process if it doesn't shutdown. Interrupts the kernel by sending it a signal. actually launch the kernel.", 'files_count': 1, 'files': ['manager.py'], 'execution_path_count': 9, 'function_id_to_name_file': {'330': 'restart_kernel(manager.py)', '331': 'shutdown_kernel(manager.py)', '327': 'finish_shutdown(manager.py)', '325': '_kill_kernel(manager.py)', '354': 'has_kernel(manager.py)', '347': '_launch_kernel(manager.py)', '322': 'start_new_async_kernel(manager.py)', '328': 'interrupt_kernel(manager.py)', '332': 'signal_kernel(manager.py)'}}, {'key': 2388, 'parent': 2716, 'tfidf_word': 'header request async new restart start kernel shutdown send msg ', 'tfidf_method': 'shutdown_kernel request_shutdown extract_header msg start_new_async_kernel restart_kernel msg msg send ', 'lda_word': ' shutdown,kernel,msg,start,async,', 'lda_method': ' msg,extract_header,request_shutdown,shutdown_kernel,restart_kernel,', 'lsi_word': ' msg,kernel,shutdown,extract,header,', 'lsi_method': ' msg,shutdown_kernel,extract_header,request_shutdown,restart_kernel,', 'spm_method': '  &#187; restart_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br> &#187; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) &rarr; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br> &#187; start_new_async_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br>', 'text_summary': 'Attempts to stop the kernel process cleanly. Restarts a kernel with the arguments that were used to launch it. Pass a message to the ZMQ socket to send.', 'files_count': 3, 'files': ['manager.py', 'session.py', 'test_adapter.py'], 'execution_path_count': 12, 'function_id_to_name_file': {'330': 'restart_kernel(manager.py)', '331': 'shutdown_kernel(manager.py)', '362': 'request_shutdown(manager.py)', '480': 'send(session.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '322': 'start_new_async_kernel(manager.py)', '520': 'msg(test_adapter.py)', '534': 'msg(test_adapter.py)'}}, {'key': 2682, 'parent': 2716, 'tfidf_word': 'start kernel send shutdown adapt message serialize sign thread utcnow ', 'tfidf_method': 'send send Message utcnow serialize sign adapt send thread_send send ', 'lda_word': ' kernel,shutdown,request,send,restart,', 'lda_method': ' restart_kernel,request_shutdown,shutdown_kernel,send,thread_send,', 'lsi_word': ' shutdown,kernel,send,request,async,', 'lsi_method': ' request_shutdown,shutdown_kernel,send,restart_kernel,start_new_async_kernel,', 'spm_method': ' ', 'text_summary': 'Restarts a kernel with the arguments that were used to launch it. Pass a message to the ZMQ socket to send.', 'files_count': 5, 'files': ['manager.py', 'session.py', 'adapter.py', 'threaded.py', 'channels.py'], 'execution_path_count': 12, 'function_id_to_name_file': {'330': 'restart_kernel(manager.py)', '331': 'shutdown_kernel(manager.py)', '362': 'request_shutdown(manager.py)', '480': 'send(session.py)', '50': 'adapt(adapter.py)', '450': 'utcnow(session.py)', '322': 'start_new_async_kernel(manager.py)', '482': 'serialize(session.py)', '483': 'sign(session.py)', '440': 'Message(session.py)', '734': 'send(threaded.py)', '738': 'thread_send(threaded.py)', '88': 'send(channels.py)', '114': 'send(channels.py)'}}, {'key': 2688, 'parent': 2730, 'tfidf_word': 'async finish kill new restart start shutdown restarter stop kernel ', 'tfidf_method': 'shutdown_kernel _launch_kernel start_new_async_kernel _kill_kernel finish_shutdown restart_kernel stop_restarter ', 'lda_word': ' kernel,shutdown,finish,launch,restart,', 'lda_method': ' shutdown_kernel,launch_kernel,restart_kernel,kill_kernel,finish_shutdown,', 'lsi_word': ' kernel,shutdown,launch,kill,finish,', 'lsi_method': ' shutdown_kernel,launch_kernel,finish_shutdown,kill_kernel,restart_kernel,', 'spm_method': ' ', 'text_summary': "actually launch the kernel. Wait for kernel shutdown, then kill process if it doesn't shutdown.", 'files_count': 1, 'files': ['manager.py'], 'execution_path_count': 8, 'function_id_to_name_file': {'330': 'restart_kernel(manager.py)', '331': 'shutdown_kernel(manager.py)', '368': 'stop_restarter(manager.py)', '322': 'start_new_async_kernel(manager.py)', '327': 'finish_shutdown(manager.py)', '326': '_launch_kernel(manager.py)', '325': '_kill_kernel(manager.py)'}}, {'key': 2691, 'parent': 2730, 'tfidf_word': 'shutdown async connection ipc new port restart start kernel cleanup ', 'tfidf_method': 'shutdown_kernel cleanup_resources cleanup_connection_file cleanup_ipc_files ports start_new_async_kernel restart_kernel cleanup ', 'lda_word': ' cleanup,shutdown,kernel,file,resource,', 'lda_method': ' restart_kernel,cleanup_resources,shutdown_kernel,cleanup,cleanup_ipc_files,', 'lsi_word': ' cleanup,kernel,file,shutdown,resource,', 'lsi_method': ' shutdown_kernel,cleanup_resources,cleanup_ipc_files,port,cleanup,', 'spm_method': ' ', 'text_summary': 'Cleanup ipc files if we wrote them. Attempts to stop the kernel process cleanly.', 'files_count': 2, 'files': ['manager.py', 'connect.py'], 'execution_path_count': 8, 'function_id_to_name_file': {'330': 'restart_kernel(manager.py)', '331': 'shutdown_kernel(manager.py)', '349': 'cleanup(manager.py)', '350': 'cleanup_resources(manager.py)', '201': 'cleanup_ipc_files(connect.py)', '211': 'ports(connect.py)', '322': 'start_new_async_kernel(manager.py)', '200': 'cleanup_connection_file(connect.py)'}}, {'key': 963, 'parent': 1542, 'tfidf_word': 'EP: 963, Name: test_object_info_reply_not_found &rarr; msg &rarr; msg &rarr; msg &rarr; msg_header &rarr; msg_id', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1541, 'parent': 1542, 'tfidf_word': 'serialize rename version type kernel interrupt identity feed raw msg ', 'tfidf_method': 'test_object_info_request test_no_adapt test_send_raw test_execute_request test_execute_reply test_complete_request test_complete_reply interrupt_kernel test_object_info_reply test_serialize ', 'lda_word': ' msg,header,test,complete,request,', 'lda_method': ' msg,msg_header,msg_id,interrupt_kernel,test_no_adapt,', 'lsi_word': ' msg,header,test,request,reply,', 'lsi_method': ' msg,msg_id,msg_header,test_object_info_reply,test_serialize,', 'spm_method': ' ', 'text_summary': 'Interrupts the kernel by sending it a signal.', 'files_count': 5, 'files': ['test_adapter.py', 'session.py', 'test_session.py', 'manager.py', 'client.py'], 'execution_path_count': 16, 'function_id_to_name_file': {'529': 'test_object_info_reply(test_adapter.py)', '520': 'msg(test_adapter.py)', '534': 'msg(test_adapter.py)', '476': 'msg(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '531': 'test_object_info_request(test_adapter.py)', '521': 'test_complete_reply(test_adapter.py)', '522': 'test_complete_request(test_adapter.py)', '524': 'test_execute_reply(test_adapter.py)', '525': 'test_execute_request(test_adapter.py)', '532': 'test_rename_type(test_adapter.py)', '528': 'test_no_adapt(test_adapter.py)', '533': 'test_same_version(test_adapter.py)', '695': 'test_send_raw(test_session.py)', '692': 'test_feed_identities(test_session.py)', '694': 'test_send(test_session.py)', '696': 'test_serialize(test_session.py)', '693': 'test_msg(test_session.py)', '328': 'interrupt_kernel(manager.py)', '166': 'is_complete(client.py)'}}, {'key': 1027, 'parent': 1662, 'tfidf_word': 'EP: 1027, Name: test_kernel_info_reply &rarr; msg &rarr; msg &rarr; msg_header &rarr; msg_id', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1661, 'parent': 1662, 'tfidf_word': 'adapt token version raw type identity feed execute rename msg ', 'tfidf_method': 'test_execute_request test_inspect_reply test_inspect_request test_inspect_request_token test_no_adapt test_rename_type test_same_version test_feed_identities test_send test_send_raw ', 'lda_word': ' msg,header,test,request,inspect,', 'lda_method': ' msg,msg_id,msg_header,test_inspect_request,test_complete_request,', 'lsi_word': ' msg,test,header,request,inspect,', 'lsi_method': ' msg,msg_header,msg_id,test_inspect_reply,test_inspect_request_token,', 'spm_method': ' ', 'text_summary': 'Empty', 'files_count': 3, 'files': ['test_adapter.py', 'session.py', 'test_session.py'], 'execution_path_count': 12, 'function_id_to_name_file': {'540': 'test_inspect_reply(test_adapter.py)', '534': 'msg(test_adapter.py)', '476': 'msg(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '542': 'test_inspect_request_token(test_adapter.py)', '541': 'test_inspect_request(test_adapter.py)', '535': 'test_complete_reply(test_adapter.py)', '536': 'test_complete_request(test_adapter.py)', '538': 'test_execute_request(test_adapter.py)', '545': 'test_rename_type(test_adapter.py)', '546': 'test_same_version(test_adapter.py)', '544': 'test_no_adapt(test_adapter.py)', '695': 'test_send_raw(test_session.py)', '694': 'test_send(test_session.py)', '692': 'test_feed_identities(test_session.py)'}}, {'key': 365, 'parent': 1692, 'tfidf_word': 'EP: 365, Name: interrupt_kernel &rarr; msg &rarr; msg &rarr; msg_header &rarr; msg_id', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 497, 'parent': 1692, 'tfidf_word': 'EP: 497, Name: is_complete &rarr; msg &rarr; msg &rarr; msg_header &rarr; msg_id', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1029, 'parent': 1555, 'tfidf_word': 'EP: 1029, Name: test_kernel_info_reply &rarr; msg &rarr; msg &rarr; msg &rarr; msg_header &rarr; msg_id', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1554, 'parent': 1555, 'tfidf_word': 'rename version type kernel interrupt identity feed execute raw msg ', 'tfidf_method': 'test_no_adapt test_inspect_reply test_inspect_request test_send_raw test_execute_request test_complete_request test_complete_reply interrupt_kernel test_inspect_request_token test_serialize ', 'lda_word': ' msg,test,header,request,complete,', 'lda_method': ' msg,msg_header,msg_id,is_complete,test_no_adapt,', 'lsi_word': ' msg,header,test,request,inspect,', 'lsi_method': ' msg,msg_header,msg_id,test_send_raw,is_complete,', 'spm_method': ' ', 'text_summary': 'scrub the front for zmq IDENTITIES.', 'files_count': 5, 'files': ['test_adapter.py', 'session.py', 'test_session.py', 'manager.py', 'client.py'], 'execution_path_count': 16, 'function_id_to_name_file': {'540': 'test_inspect_reply(test_adapter.py)', '534': 'msg(test_adapter.py)', '520': 'msg(test_adapter.py)', '476': 'msg(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '542': 'test_inspect_request_token(test_adapter.py)', '541': 'test_inspect_request(test_adapter.py)', '535': 'test_complete_reply(test_adapter.py)', '536': 'test_complete_request(test_adapter.py)', '538': 'test_execute_request(test_adapter.py)', '545': 'test_rename_type(test_adapter.py)', '544': 'test_no_adapt(test_adapter.py)', '546': 'test_same_version(test_adapter.py)', '695': 'test_send_raw(test_session.py)', '692': 'test_feed_identities(test_session.py)', '694': 'test_send(test_session.py)', '696': 'test_serialize(test_session.py)', '693': 'test_msg(test_session.py)', '328': 'interrupt_kernel(manager.py)', '166': 'is_complete(client.py)'}}, {'key': 971, 'parent': 1653, 'tfidf_word': 'EP: 971, Name: test_display_data &rarr; msg &rarr; msg &rarr; msg_header &rarr; msg_id', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1652, 'parent': 1653, 'tfidf_word': 'adapt rename kernel type identity found feed raw version msg ', 'tfidf_method': 'test_object_info_reply_not_found test_object_info_reply test_kernel_info_reply test_send test_execute_request test_execute_reply test_complete_request test_complete_reply test_no_adapt test_send_raw ', 'lda_word': ' msg,header,test,send,request,', 'lda_method': ' msg,msg_header,msg_id,test_object_info_request,test_execute_request,', 'lsi_word': ' msg,test,header,reply,info,', 'lsi_method': ' msg,msg_id,msg_header,test_send_raw,test_execute_request,', 'spm_method': ' ', 'text_summary': 'Empty', 'files_count': 3, 'files': ['test_adapter.py', 'session.py', 'test_session.py'], 'execution_path_count': 14, 'function_id_to_name_file': {'527': 'test_kernel_info_reply(test_adapter.py)', '520': 'msg(test_adapter.py)', '476': 'msg(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '530': 'test_object_info_reply_not_found(test_adapter.py)', '529': 'test_object_info_reply(test_adapter.py)', '531': 'test_object_info_request(test_adapter.py)', '521': 'test_complete_reply(test_adapter.py)', '522': 'test_complete_request(test_adapter.py)', '524': 'test_execute_reply(test_adapter.py)', '525': 'test_execute_request(test_adapter.py)', '532': 'test_rename_type(test_adapter.py)', '533': 'test_same_version(test_adapter.py)', '528': 'test_no_adapt(test_adapter.py)', '695': 'test_send_raw(test_session.py)', '694': 'test_send(test_session.py)', '692': 'test_feed_identities(test_session.py)'}}, {'key': 732, 'parent': 1721, 'tfidf_word': 'EP: 732, Name: test_msg &rarr; msg &rarr; msg &rarr; msg_header &rarr; msg_id', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1691, 'parent': 1721, 'tfidf_word': 'header id complete interrupt kernel msg ', 'tfidf_method': 'msg msg_header msg_id msg is_complete interrupt_kernel ', 'lda_word': ' msg,header,complete,kernel,interrupt,', 'lda_method': ' msg,msg_header,msg_id,is_complete,interrupt_kernel,', 'lsi_word': ' msg,header,kernel,interrupt,complete,', 'lsi_method': ' msg,msg_header,msg_id,is_complete,interrupt_kernel,', 'spm_method': ' ', 'text_summary': '', 'files_count': 4, 'files': ['manager.py', 'test_adapter.py', 'session.py', 'client.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'328': 'interrupt_kernel(manager.py)', '520': 'msg(test_adapter.py)', '476': 'msg(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '166': 'is_complete(client.py)'}}, {'key': 504, 'parent': 1700, 'tfidf_word': 'EP: 504, Name: AsyncKernelClient &rarr; history &rarr; msg &rarr; msg_header &rarr; msg_id', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 619, 'parent': 1700, 'tfidf_word': 'EP: 619, Name: BlockingKernelClient &rarr; history &rarr; msg &rarr; msg_header &rarr; msg_id', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1835, 'parent': 1921, 'tfidf_word': 'id test send default feed identity raw serialize version msg ', 'tfidf_method': 'msg msg_header msg_id test_default_version test_feed_identities test_msg test_send test_send_raw test_serialize ', 'lda_word': ' msg,header,test,send,identity,', 'lda_method': ' msg_header,msg_id,msg,test_default_version,test_serialize,', 'lsi_word': ' msg,test,header,send,raw,', 'lsi_method': ' msg_header,msg_id,msg,test_msg,test_serialize,', 'spm_method': ' ', 'text_summary': '', 'files_count': 3, 'files': ['test_adapter.py', 'session.py', 'test_session.py'], 'execution_path_count': 6, 'function_id_to_name_file': {'516': 'test_default_version(test_adapter.py)', '476': 'msg(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '695': 'test_send_raw(test_session.py)', '692': 'test_feed_identities(test_session.py)', '694': 'test_send(test_session.py)', '693': 'test_msg(test_session.py)', '696': 'test_serialize(test_session.py)'}}, {'key': 1887, 'parent': 1921, 'tfidf_word': 'header id complete interrupt kernel msg ', 'tfidf_method': 'msg msg_header msg_id is_complete interrupt_kernel ', 'lda_word': ' msg,header,complete,interrupt,kernel,', 'lda_method': ' msg,msg_id,msg_header,interrupt_kernel,is_complete,', 'lsi_word': ' msg,header,interrupt,kernel,complete,', 'lsi_method': ' msg,msg_header,msg_id,is_complete,interrupt_kernel,', 'spm_method': ' ', 'text_summary': '', 'files_count': 3, 'files': ['manager.py', 'session.py', 'client.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'328': 'interrupt_kernel(manager.py)', '476': 'msg(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '166': 'is_complete(client.py)'}}, {'key': 972, 'parent': 1638, 'tfidf_word': 'EP: 972, Name: test_display_data &rarr; msg &rarr; msg &rarr; msg &rarr; extract_header', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1637, 'parent': 1638, 'tfidf_word': 'msg adapt rename kernel type identity found feed raw version ', 'tfidf_method': 'test_object_info_reply_not_found test_no_adapt test_send test_kernel_info_reply test_execute_request test_execute_reply test_complete_request test_complete_reply test_object_info_reply test_send_raw ', 'lda_word': ' msg,found,info,object,reply,', 'lda_method': ' msg,extract_header,test_kernel_info_reply,test_send,test_rename_type,', 'lsi_word': ' msg,header,test,extract,reply,', 'lsi_method': ' msg,extract_header,test_complete_reply,test_object_info_reply_not_found,test_feed_identities,', 'spm_method': ' ', 'text_summary': '', 'files_count': 3, 'files': ['test_adapter.py', 'session.py', 'test_session.py'], 'execution_path_count': 14, 'function_id_to_name_file': {'527': 'test_kernel_info_reply(test_adapter.py)', '520': 'msg(test_adapter.py)', '534': 'msg(test_adapter.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '530': 'test_object_info_reply_not_found(test_adapter.py)', '529': 'test_object_info_reply(test_adapter.py)', '531': 'test_object_info_request(test_adapter.py)', '521': 'test_complete_reply(test_adapter.py)', '522': 'test_complete_request(test_adapter.py)', '524': 'test_execute_reply(test_adapter.py)', '525': 'test_execute_request(test_adapter.py)', '532': 'test_rename_type(test_adapter.py)', '533': 'test_same_version(test_adapter.py)', '528': 'test_no_adapt(test_adapter.py)', '695': 'test_send_raw(test_session.py)', '694': 'test_send(test_session.py)', '692': 'test_feed_identities(test_session.py)'}}, {'key': 733, 'parent': 1671, 'tfidf_word': 'EP: 733, Name: test_msg &rarr; msg &rarr; msg &rarr; msg &rarr; extract_header', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1670, 'parent': 1671, 'tfidf_word': 'extract header complete interrupt kernel msg ', 'tfidf_method': 'extract_header msg msg msg is_complete interrupt_kernel ', 'lda_word': ' msg,header,extract,complete,interrupt,', 'lda_method': ' msg,extract_header,is_complete,interrupt_kernel,', 'lsi_word': ' msg,header,extract,interrupt,kernel,', 'lsi_method': ' msg,extract_header,interrupt_kernel,is_complete,', 'spm_method': ' ', 'text_summary': '', 'files_count': 4, 'files': ['manager.py', 'test_adapter.py', 'session.py', 'client.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'328': 'interrupt_kernel(manager.py)', '520': 'msg(test_adapter.py)', '534': 'msg(test_adapter.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '166': 'is_complete(client.py)'}}, {'key': 996, 'parent': 1855, 'tfidf_word': 'EP: 996, Name: test_execute_request &rarr; msg &rarr; msg &rarr; extract_header', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1850, 'parent': 1855, 'tfidf_word': 'complete feed identity interrupt kernel raw rename serialize type version ', 'tfidf_method': 'is_complete interrupt_kernel test_no_adapt test_rename_type test_same_version test_feed_identities test_msg test_send test_send_raw test_serialize ', 'lda_word': ' msg,header,extract,test,send,', 'lda_method': ' msg,extract_header,test_same_version,test_rename_type,test_no_adapt,', 'lsi_word': ' msg,extract,header,test,send,', 'lsi_method': ' msg,extract_header,interrupt_kernel,test_same_version,test_send,', 'spm_method': ' ', 'text_summary': 'Given a message or header, return the header. message format. Interrupts the kernel by sending it a signal. Ask the kernel whether some code is complete and ready to execute.', 'files_count': 5, 'files': ['test_adapter.py', 'session.py', 'test_session.py', 'manager.py', 'client.py'], 'execution_path_count': 10, 'function_id_to_name_file': {'545': 'test_rename_type(test_adapter.py)', '534': 'msg(test_adapter.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '544': 'test_no_adapt(test_adapter.py)', '546': 'test_same_version(test_adapter.py)', '695': 'test_send_raw(test_session.py)', '692': 'test_feed_identities(test_session.py)', '694': 'test_send(test_session.py)', '693': 'test_msg(test_session.py)', '696': 'test_serialize(test_session.py)', '328': 'interrupt_kernel(manager.py)', '166': 'is_complete(client.py)'}}, {'key': 1036, 'parent': 1819, 'tfidf_word': 'EP: 1036, Name: test_input_request &rarr; msg &rarr; msg &rarr; extract_header', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1818, 'parent': 1819, 'tfidf_word': 'test inspect reply msg data display info kernel request token ', 'tfidf_method': 'extract_header msg msg test_display_data test_inspect_reply test_inspect_request_token test_kernel_info_reply ', 'lda_word': ' msg,header,test,extract,reply,', 'lda_method': ' msg,extract_header,test_kernel_info_reply,test_inspect_request_token,test_inspect_reply,', 'lsi_word': ' msg,extract,header,test,inspect,', 'lsi_method': ' msg,extract_header,test_inspect_reply,test_inspect_request_token,test_display_data,', 'spm_method': ' ', 'text_summary': '', 'files_count': 2, 'files': ['test_adapter.py', 'session.py'], 'execution_path_count': 4, 'function_id_to_name_file': {'537': 'test_display_data(test_adapter.py)', '534': 'msg(test_adapter.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '543': 'test_kernel_info_reply(test_adapter.py)', '542': 'test_inspect_request_token(test_adapter.py)', '540': 'test_inspect_reply(test_adapter.py)'}}, {'key': 1006, 'parent': 1857, 'tfidf_word': 'EP: 1006, Name: test_complete_reply &rarr; msg &rarr; msg &rarr; extract_header', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1011, 'parent': 1857, 'tfidf_word': 'EP: 1011, Name: test_inspect_request &rarr; msg &rarr; msg &rarr; extract_header', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 902, 'parent': 2074, 'tfidf_word': 'EP: 902, Name: test_default_version &rarr; msg &rarr; extract_header', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2072, 'parent': 2074, 'tfidf_word': 'extract header msg test send feed identity raw ', 'tfidf_method': 'extract_header msg test_feed_identities test_send test_send_raw ', 'lda_word': ' header,test,msg,extract,send,', 'lda_method': ' extract_header,msg,test_send_raw,test_feed_identities,test_send,', 'lsi_word': ' test,extract,msg,header,send,', 'lsi_method': ' msg,extract_header,test_send,test_feed_identities,test_send_raw,', 'spm_method': ' ', 'text_summary': '', 'files_count': 2, 'files': ['test_session.py', 'session.py'], 'execution_path_count': 3, 'function_id_to_name_file': {'695': 'test_send_raw(test_session.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '694': 'test_send(test_session.py)', '692': 'test_feed_identities(test_session.py)'}}, {'key': 739, 'parent': 2153, 'tfidf_word': 'EP: 739, Name: test_serialize &rarr; msg &rarr; extract_header', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2152, 'parent': 2153, 'tfidf_word': 'extract header msg complete interrupt kernel test ', 'tfidf_method': 'extract_header msg is_complete interrupt_kernel test_msg ', 'lda_word': ' msg,header,extract,complete,interrupt,', 'lda_method': ' msg,extract_header,interrupt_kernel,is_complete,test_msg,', 'lsi_word': ' msg,header,extract,test,kernel,', 'lsi_method': ' extract_header,msg,test_msg,interrupt_kernel,is_complete,', 'spm_method': ' ', 'text_summary': 'Given a message or header, return the header.', 'files_count': 4, 'files': ['test_session.py', 'session.py', 'manager.py', 'client.py'], 'execution_path_count': 3, 'function_id_to_name_file': {'693': 'test_msg(test_session.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '328': 'interrupt_kernel(manager.py)', '166': 'is_complete(client.py)'}}, {'key': 1038, 'parent': 1626, 'tfidf_word': 'EP: 1038, Name: test_input_request &rarr; msg &rarr; msg &rarr; msg &rarr; extract_header', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1625, 'parent': 1626, 'tfidf_word': 'adapt type info identity feed execute display data kernel version ', 'tfidf_method': 'test_kernel_info_reply test_inspect_request_token test_inspect_reply test_send test_execute_request test_display_data test_complete_request test_complete_reply test_inspect_request test_send_raw ', 'lda_word': ' msg,adapt,extract,test,header,', 'lda_method': ' msg,extract_header,test_complete_reply,test_execute_request,test_display_data,', 'lsi_word': ' msg,header,test,extract,request,', 'lsi_method': ' msg,extract_header,test_no_adapt,test_send_raw,test_inspect_reply,', 'spm_method': ' ', 'text_summary': '', 'files_count': 3, 'files': ['test_adapter.py', 'session.py', 'test_session.py'], 'execution_path_count': 14, 'function_id_to_name_file': {'537': 'test_display_data(test_adapter.py)', '534': 'msg(test_adapter.py)', '520': 'msg(test_adapter.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '543': 'test_kernel_info_reply(test_adapter.py)', '540': 'test_inspect_reply(test_adapter.py)', '542': 'test_inspect_request_token(test_adapter.py)', '541': 'test_inspect_request(test_adapter.py)', '535': 'test_complete_reply(test_adapter.py)', '536': 'test_complete_request(test_adapter.py)', '538': 'test_execute_request(test_adapter.py)', '545': 'test_rename_type(test_adapter.py)', '546': 'test_same_version(test_adapter.py)', '544': 'test_no_adapt(test_adapter.py)', '695': 'test_send_raw(test_session.py)', '694': 'test_send(test_session.py)', '692': 'test_feed_identities(test_session.py)'}}, {'key': 753, 'parent': 1668, 'tfidf_word': 'EP: 753, Name: test_serialize &rarr; msg &rarr; msg &rarr; msg &rarr; extract_header', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1667, 'parent': 1668, 'tfidf_word': 'extract header complete interrupt kernel test msg ', 'tfidf_method': 'extract_header msg msg msg is_complete interrupt_kernel test_msg ', 'lda_word': ' msg,header,extract,complete,kernel,', 'lda_method': ' msg,extract_header,test_msg,interrupt_kernel,is_complete,', 'lsi_word': ' msg,header,extract,test,kernel,', 'lsi_method': ' msg,extract_header,is_complete,test_msg,interrupt_kernel,', 'spm_method': ' ', 'text_summary': 'message format. Interrupts the kernel by sending it a signal.', 'files_count': 5, 'files': ['test_session.py', 'test_adapter.py', 'session.py', 'manager.py', 'client.py'], 'execution_path_count': 3, 'function_id_to_name_file': {'693': 'test_msg(test_session.py)', '534': 'msg(test_adapter.py)', '520': 'msg(test_adapter.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '328': 'interrupt_kernel(manager.py)', '166': 'is_complete(client.py)'}}, {'key': 935, 'parent': 1852, 'tfidf_word': 'EP: 935, Name: test_execute_reply &rarr; msg &rarr; msg &rarr; extract_header', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1851, 'parent': 1852, 'tfidf_word': 'rename raw kernel interrupt identity feed execute complete type version ', 'tfidf_method': 'interrupt_kernel test_execute_request test_no_adapt test_rename_type test_same_version test_feed_identities test_msg test_send test_send_raw test_serialize ', 'lda_word': ' msg,type,rename,test,extract,', 'lda_method': ' msg,extract_header,test_msg,test_rename_type,interrupt_kernel,', 'lsi_word': ' msg,header,extract,test,send,', 'lsi_method': ' msg,extract_header,test_rename_type,test_execute_request,interrupt_kernel,', 'spm_method': ' ', 'text_summary': 'Given a message or header, return the header. message format. Interrupts the kernel by sending it a signal. Ask the kernel whether some code is complete and ready to execute.', 'files_count': 5, 'files': ['test_adapter.py', 'session.py', 'test_session.py', 'manager.py', 'client.py'], 'execution_path_count': 11, 'function_id_to_name_file': {'525': 'test_execute_request(test_adapter.py)', '520': 'msg(test_adapter.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '532': 'test_rename_type(test_adapter.py)', '528': 'test_no_adapt(test_adapter.py)', '533': 'test_same_version(test_adapter.py)', '695': 'test_send_raw(test_session.py)', '692': 'test_feed_identities(test_session.py)', '694': 'test_send(test_session.py)', '693': 'test_msg(test_session.py)', '696': 'test_serialize(test_session.py)', '328': 'interrupt_kernel(manager.py)', '166': 'is_complete(client.py)'}}, {'key': 1812, 'parent': 1854, 'tfidf_word': 'info object reply msg request data display found input kernel ', 'tfidf_method': 'extract_header msg msg test_display_data test_input_request test_kernel_info_reply test_object_info_reply test_object_info_reply_not_found test_object_info_request ', 'lda_word': ' msg,header,test,extract,request,', 'lda_method': ' msg,extract_header,test_object_info_request,test_object_info_reply_not_found,test_input_request,', 'lsi_word': ' msg,extract,test,header,info,', 'lsi_method': ' msg,extract_header,test_input_request,test_object_info_reply_not_found,test_object_info_request,', 'spm_method': ' ', 'text_summary': '', 'files_count': 2, 'files': ['test_adapter.py', 'session.py'], 'execution_path_count': 6, 'function_id_to_name_file': {'526': 'test_input_request(test_adapter.py)', '520': 'msg(test_adapter.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '523': 'test_display_data(test_adapter.py)', '527': 'test_kernel_info_reply(test_adapter.py)', '530': 'test_object_info_reply_not_found(test_adapter.py)', '531': 'test_object_info_request(test_adapter.py)', '529': 'test_object_info_reply(test_adapter.py)'}}, {'key': 1853, 'parent': 1854, 'tfidf_word': 'complete extract header test reply request msg ', 'tfidf_method': 'extract_header msg msg test_complete_reply test_complete_request ', 'lda_word': ' msg,extract,header,complete,reply,', 'lda_method': ' msg,extract_header,test_complete_reply,test_complete_request,', 'lsi_word': ' msg,complete,extract,test,header,', 'lsi_method': ' msg,extract_header,test_complete_reply,test_complete_request,', 'spm_method': ' ', 'text_summary': '', 'files_count': 2, 'files': ['test_adapter.py', 'session.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'522': 'test_complete_request(test_adapter.py)', '520': 'msg(test_adapter.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '521': 'test_complete_reply(test_adapter.py)'}}, {'key': 245, 'parent': 1823, 'tfidf_word': 'EP: 245, Name: start &rarr; start &rarr; execute_interactive &rarr; is_alive', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1822, 'parent': 1823, 'tfidf_word': 'alive execute interactive start ', 'tfidf_method': 'execute_interactive start start is_alive is_alive is_alive is_alive ', 'lda_word': ' start,interactive,alive,execute,', 'lda_method': ' start,execute_interactive,is_alive,', 'lsi_word': ' start,alive,interactive,execute,', 'lsi_method': ' start,is_alive,execute_interactive,', 'spm_method': ' ', 'text_summary': '', 'files_count': 7, 'files': ['kernelspecapp.py', 'runapp.py', 'client.py', 'managerabc.py', 'multikernelmanager.py', 'channelsabc.py', 'channels.py'], 'execution_path_count': 4, 'function_id_to_name_file': {'291': 'start(kernelspecapp.py)', '439': 'start(runapp.py)', '122': 'execute_interactive(client.py)', '373': 'is_alive(managerabc.py)', '412': 'is_alive(multikernelmanager.py)', '140': 'is_alive(channelsabc.py)', '86': 'is_alive(channels.py)'}}, {'key': 235, 'parent': 1874, 'tfidf_word': 'EP: 235, Name: start &rarr; start &rarr; execute_interactive &rarr; _output_hook_default', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 238, 'parent': 1874, 'tfidf_word': 'EP: 238, Name: start &rarr; start &rarr; execute_interactive &rarr; is_alive', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 257, 'parent': 1827, 'tfidf_word': 'EP: 257, Name: start &rarr; start &rarr; execute_interactive &rarr; is_alive', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1826, 'parent': 1827, 'tfidf_word': 'execute interactive alive start default hook output ', 'tfidf_method': 'start start execute_interactive is_alive is_alive is_alive _output_hook_default ', 'lda_word': ' start,alive,interactive,execute,output,', 'lda_method': ' start,execute_interactive,is_alive,output_hook_default,', 'lsi_word': ' start,execute,interactive,alive,hook,', 'lsi_method': ' start,execute_interactive,is_alive,output_hook_default,', 'spm_method': ' ', 'text_summary': '', 'files_count': 6, 'files': ['kernelspecapp.py', 'runapp.py', 'client.py', 'managerabc.py', 'multikernelmanager.py', 'channels.py'], 'execution_path_count': 4, 'function_id_to_name_file': {'291': 'start(kernelspecapp.py)', '439': 'start(runapp.py)', '97': 'execute_interactive(client.py)', '373': 'is_alive(managerabc.py)', '412': 'is_alive(multikernelmanager.py)', '86': 'is_alive(channels.py)', '93': '_output_hook_default(client.py)'}}, {'key': 247, 'parent': 1876, 'tfidf_word': 'EP: 247, Name: start &rarr; start &rarr; execute_interactive &rarr; is_alive', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 248, 'parent': 1876, 'tfidf_word': 'EP: 248, Name: start &rarr; start &rarr; execute_interactive &rarr; is_alive', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 815, 'parent': 1932, 'tfidf_word': 'EP: 815, Name: test_cull_digest_history &rarr; __init__ &rarr; _check_packers &rarr; utcnow', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 816, 'parent': 1932, 'tfidf_word': 'EP: 816, Name: test_cull_digest_history &rarr; __init__ &rarr; _check_packers &rarr; squash_dates', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1931, 'parent': 2324, 'tfidf_word': 'check digest history init packer test zero date squash utcnow ', 'tfidf_method': '__init__ _check_packers test_zero_digest_history squash_dates utcnow ', 'lda_word': ' packer,test,digest,check,history,', 'lda_method': ' init,check_packers,squash_dates,test_zero_digest_history,utcnow,', 'lsi_word': ' digest,check,history,test,packer,', 'lsi_method': ' check_packers,init,test_zero_digest_history,squash_dates,utcnow,', 'spm_method': ' ', 'text_summary': '', 'files_count': 3, 'files': ['test_session.py', 'session.py', 'jsonutil.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'700': 'test_zero_digest_history(test_session.py)', '457': '__init__(session.py)', '459': '_check_packers(session.py)', '450': 'utcnow(session.py)', '244': 'squash_dates(jsonutil.py)'}}, {'key': 2323, 'parent': 2324, 'tfidf_word': 'packer test date squash utcnow args id session set up ', 'tfidf_method': '__init__ _check_packers squash_dates utcnow setUp test_args test_session_id ', 'lda_word': ' check,init,packer,test,utcnow,', 'lda_method': ' utcnow,init,check_packers,test_args,squash_dates,', 'lsi_word': ' init,packer,check,test,date,', 'lsi_method': ' check_packers,init,squash_dates,utcnow,test_session_id,', 'spm_method': ' ', 'text_summary': 'squash datetime objects into ISO8601 strings. initialization arguments for Session.', 'files_count': 3, 'files': ['test_session.py', 'session.py', 'jsonutil.py'], 'execution_path_count': 6, 'function_id_to_name_file': {'697': 'test_session_id(test_session.py)', '457': '__init__(session.py)', '459': '_check_packers(session.py)', '450': 'utcnow(session.py)', '244': 'squash_dates(jsonutil.py)', '678': 'setUp(test_session.py)', '680': 'test_args(test_session.py)'}}, {'key': 1179, 'parent': 1442, 'tfidf_word': 'EP: 1179, Name: test_tcp_lifecycle &rarr; raw_tcp_lifecycle &rarr; _get_tcp_km &rarr; AsyncMultiKernelManager &rarr; MultiKernelManager &rarr; kernel_method &rarr; wrapped', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1182, 'parent': 1442, 'tfidf_word': 'EP: 1182, Name: test_tcp_lifecycle_with_kernel_id &rarr; raw_tcp_lifecycle &rarr; _get_tcp_km &rarr; AsyncMultiKernelManager &rarr; MultiKernelManager &rarr; kernel_method &rarr; wrapped', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 214, 'parent': 2059, 'tfidf_word': 'EP: 214, Name: _kernel_spec_manager_default &rarr; KernelSpecManager &rarr; KernelSpec', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 295, 'parent': 2059, 'tfidf_word': 'EP: 295, Name: _kernel_spec_manager_default &rarr; KernelSpecManager &rarr; KernelSpec', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 124, 'parent': 2109, 'tfidf_word': 'EP: 124, Name: KernelApp &rarr; KernelSpecManager &rarr; KernelSpec', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 211, 'parent': 2109, 'tfidf_word': 'EP: 211, Name: _kernel_spec_manager_default &rarr; KernelSpecManager &rarr; KernelSpec', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1205, 'parent': 1443, 'tfidf_word': 'EP: 1205, Name: test_start_parallel_thread_kernels &rarr; raw_tcp_lifecycle &rarr; _get_tcp_km &rarr; AsyncMultiKernelManager &rarr; MultiKernelManager &rarr; KernelSpecManager &rarr; KernelSpec', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1441, 'parent': 1443, 'tfidf_word': 'km raw test id lifecycle multi spec manager tcp kernel ', 'tfidf_method': 'KernelSpec KernelSpecManager AsyncMultiKernelManager MultiKernelManager _get_tcp_km raw_tcp_lifecycle test_tcp_lifecycle test_tcp_lifecycle_with_kernel_id ', 'lda_word': ' manager,kernel,tcp,spec,lifecycle,', 'lda_method': ' multikernelmanager,get_tcp_km,kernelspecmanager,raw_tcp_lifecycle,test_tcp_lifecycle_with_kernel_id,', 'lsi_word': ' kernel,tcp,manager,lifecycle,multi,', 'lsi_method': ' kernelspec,multikernelmanager,kernelspecmanager,raw_tcp_lifecycle,asyncmultikernelmanager,', 'spm_method': '  &#187; raw_tcp_lifecycle(test_multikernelmanager.py) &rarr; _get_tcp_km(test_multikernelmanager.py) &rarr; AsyncMultiKernelManager(multikernelmanager.py) &rarr; MultiKernelManager(multikernelmanager.py) &rarr; KernelSpecManager(kernelspec.py) &rarr; KernelSpec(kernelspec.py) . <br>', 'text_summary': '', 'files_count': 3, 'files': ['test_multikernelmanager.py', 'multikernelmanager.py', 'kernelspec.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'652': 'test_tcp_lifecycle(test_multikernelmanager.py)', '642': 'raw_tcp_lifecycle(test_multikernelmanager.py)', '639': '_get_tcp_km(test_multikernelmanager.py)', '379': 'AsyncMultiKernelManager(multikernelmanager.py)', '381': 'MultiKernelManager(multikernelmanager.py)', '254': 'KernelSpecManager(kernelspec.py)', '253': 'KernelSpec(kernelspec.py)', '653': 'test_tcp_lifecycle_with_kernel_id(test_multikernelmanager.py)'}}, {'key': 1135, 'parent': 1748, 'tfidf_word': 'EP: 1135, Name: test_tcp_lifecycle_with_kernel_id &rarr; _get_tcp_km &rarr; MultiKernelManager &rarr; KernelSpecManager &rarr; KernelSpec', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1139, 'parent': 1748, 'tfidf_word': 'EP: 1139, Name: test_shutdown_all &rarr; _get_tcp_km &rarr; MultiKernelManager &rarr; KernelSpecManager &rarr; KernelSpec', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 454, 'parent': 1595, 'tfidf_word': 'EP: 454, Name: run_kernel &rarr; start_new_kernel &rarr; shutdown_kernel &rarr; request_shutdown &rarr; msg &rarr; msg &rarr; extract_header', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 456, 'parent': 1595, 'tfidf_word': 'EP: 456, Name: run_kernel &rarr; start_new_kernel &rarr; shutdown_kernel &rarr; request_shutdown &rarr; msg &rarr; msg &rarr; msg &rarr; extract_header', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 458, 'parent': 1596, 'tfidf_word': 'EP: 458, Name: run_kernel &rarr; start_new_kernel &rarr; shutdown_kernel &rarr; request_shutdown &rarr; msg &rarr; msg &rarr; extract_header', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 460, 'parent': 1596, 'tfidf_word': 'EP: 460, Name: run_kernel &rarr; start_new_kernel &rarr; shutdown_kernel &rarr; request_shutdown &rarr; msg &rarr; msg &rarr; msg &rarr; extract_header', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 451, 'parent': 1782, 'tfidf_word': 'EP: 451, Name: run_kernel &rarr; start_new_kernel &rarr; shutdown_kernel &rarr; request_shutdown &rarr; send &rarr; serialize &rarr; sign', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 452, 'parent': 1782, 'tfidf_word': 'EP: 452, Name: run_kernel &rarr; start_new_kernel &rarr; shutdown_kernel &rarr; request_shutdown &rarr; send &rarr; Message', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 445, 'parent': 1776, 'tfidf_word': 'EP: 445, Name: run_kernel &rarr; start_new_kernel &rarr; shutdown_kernel &rarr; request_shutdown &rarr; _connect_control_socket &rarr; _create_connected_socket &rarr; _make_url', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 446, 'parent': 1776, 'tfidf_word': 'EP: 446, Name: run_kernel &rarr; start_new_kernel &rarr; shutdown_kernel &rarr; request_shutdown &rarr; _create_connected_socket &rarr; _make_url', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 462, 'parent': 1979, 'tfidf_word': 'EP: 462, Name: run_kernel &rarr; start_new_kernel &rarr; shutdown_kernel &rarr; request_shutdown &rarr; send &rarr; thread_send', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1696, 'parent': 1979, 'tfidf_word': 'new request run send start shutdown kernel ', 'tfidf_method': 'run_kernel start_new_kernel request_shutdown shutdown_kernel send send ', 'lda_word': ' kernel,shutdown,run,request,new,', 'lda_method': ' start_new_kernel,request_shutdown,shutdown_kernel,send,run_kernel,', 'lsi_word': ' kernel,shutdown,send,start,request,', 'lsi_method': ' run_kernel,request_shutdown,shutdown_kernel,send,start_new_kernel,', 'spm_method': ' ', 'text_summary': 'Start a new kernel, and return its Manager and Client. Context manager to create a kernel in a subprocess.', 'files_count': 2, 'files': ['manager.py', 'channels.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'321': 'run_kernel(manager.py)', '323': 'start_new_kernel(manager.py)', '364': 'shutdown_kernel(manager.py)', '362': 'request_shutdown(manager.py)', '88': 'send(channels.py)', '114': 'send(channels.py)'}}, {'key': 434, 'parent': 1779, 'tfidf_word': 'EP: 434, Name: run_kernel &rarr; start_new_kernel &rarr; shutdown_kernel &rarr; _kill_kernel &rarr; has_kernel &rarr; _launch_kernel', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 464, 'parent': 1779, 'tfidf_word': 'EP: 464, Name: run_kernel &rarr; start_new_kernel &rarr; shutdown_kernel &rarr; finish_shutdown &rarr; _kill_kernel &rarr; has_kernel &rarr; _launch_kernel', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 463, 'parent': 1783, 'tfidf_word': 'EP: 463, Name: run_kernel &rarr; start_new_kernel &rarr; shutdown_kernel &rarr; finish_shutdown &rarr; has_kernel &rarr; _launch_kernel', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 466, 'parent': 1783, 'tfidf_word': 'EP: 466, Name: run_kernel &rarr; start_new_kernel &rarr; shutdown_kernel &rarr; finish_shutdown &rarr; is_alive &rarr; has_kernel &rarr; _launch_kernel', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 436, 'parent': 1896, 'tfidf_word': 'EP: 436, Name: run_kernel &rarr; start_new_kernel &rarr; shutdown_kernel &rarr; cleanup_resources &rarr; cleanup_connection_file', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 440, 'parent': 1896, 'tfidf_word': 'EP: 440, Name: run_kernel &rarr; start_new_kernel &rarr; shutdown_kernel &rarr; cleanup &rarr; cleanup_resources &rarr; cleanup_connection_file', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 151, 'parent': 1460, 'tfidf_word': 'EP: 151, Name: _requires_ips &rarr; ips_loaded &rarr; _load_ips &rarr; _load_ips_ipconfig &rarr; _populate_from_list &rarr; public_ips', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1459, 'parent': 1460, 'tfidf_word': 'ipconfig list populate require local stable uniq load ip ', 'tfidf_method': '_load_ips _load_ips_ipconfig _populate_from_list _requires_ips ips_loaded _uniq_stable local_ips ', 'lda_word': ' load,ip,ipconfig,list,require,', 'lda_method': ' load_ips_ipconfig,requires_ips,load_ips,populate_from_list,ips_loaded,', 'lsi_word': ' ip,load,list,require,populate,', 'lsi_method': ' requires_ips,load_ips_ipconfig,load_ips,populate_from_list,ips_loaded,', 'spm_method': ' ', 'text_summary': 'load the IPs that point to this machine. populate local and public IPs from flat list of all IPs. return the IP addresses that point to this machine.', 'files_count': 1, 'files': ['localinterfaces.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'310': '_requires_ips(localinterfaces.py)', '318': 'ips_loaded(localinterfaces.py)', '301': '_load_ips(localinterfaces.py)', '306': '_load_ips_ipconfig(localinterfaces.py)', '309': '_populate_from_list(localinterfaces.py)', '314': 'local_ips(localinterfaces.py)', '311': '_uniq_stable(localinterfaces.py)'}}, {'key': 146, 'parent': 1458, 'tfidf_word': 'EP: 146, Name: _requires_ips &rarr; ips_loaded &rarr; _load_ips &rarr; _load_ips_ifconfig &rarr; _populate_from_list &rarr; NoIPAddresses', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1457, 'parent': 1458, 'tfidf_word': 'ifconfig list populate require local public stable uniq load ip ', 'tfidf_method': '_load_ips _load_ips_ifconfig _populate_from_list _requires_ips ips_loaded _uniq_stable local_ips public_ips ', 'lda_word': ' ip,load,list,require,populate,', 'lda_method': ' load_ips,ips_loaded,requires_ips,load_ips_ifconfig,populate_from_list,', 'lsi_word': ' ip,load,ifconfig,require,populate,', 'lsi_method': ' load_ips,ips_loaded,requires_ips,populate_from_list,load_ips_ifconfig,', 'spm_method': ' ', 'text_summary': 'load the IPs that point to this machine. populate local and public IPs from flat list of all IPs. return the IP addresses that point to this machine.', 'files_count': 1, 'files': ['localinterfaces.py'], 'execution_path_count': 3, 'function_id_to_name_file': {'310': '_requires_ips(localinterfaces.py)', '318': 'ips_loaded(localinterfaces.py)', '301': '_load_ips(localinterfaces.py)', '304': '_load_ips_ifconfig(localinterfaces.py)', '309': '_populate_from_list(localinterfaces.py)', '316': 'public_ips(localinterfaces.py)', '314': 'local_ips(localinterfaces.py)', '311': '_uniq_stable(localinterfaces.py)'}}, {'key': 142, 'parent': 1990, 'tfidf_word': 'EP: 142, Name: _requires_ips &rarr; ips_loaded &rarr; _load_ips &rarr; _load_ips_ip &rarr; _get_output', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1455, 'parent': 1990, 'tfidf_word': 'populate require addresses local no public stable uniq load ip ', 'tfidf_method': '_load_ips _load_ips_ip _populate_from_list _requires_ips ips_loaded NoIPAddresses _uniq_stable local_ips public_ips ', 'lda_word': ' ip,load,list,populate,require,', 'lda_method': ' populate_from_list,requires_ips,load_ips,ips_loaded,load_ips_ip,', 'lsi_word': ' ip,load,require,populate,list,', 'lsi_method': ' ips_loaded,load_ips,populate_from_list,load_ips_ip,requires_ips,', 'spm_method': ' ', 'text_summary': 'decorator to ensure load_ips has been run before f. populate local and public IPs from flat list of all IPs. return the IP addresses that point to this machine. populate local and public IPs from flat list of all IPs. return the IP addresses for this machine that are visible to other machines. populate local and public IPs from flat list of all IPs. decorator to ensure load_ips has been run before f.', 'files_count': 1, 'files': ['localinterfaces.py'], 'execution_path_count': 4, 'function_id_to_name_file': {'310': '_requires_ips(localinterfaces.py)', '318': 'ips_loaded(localinterfaces.py)', '301': '_load_ips(localinterfaces.py)', '305': '_load_ips_ip(localinterfaces.py)', '309': '_populate_from_list(localinterfaces.py)', '299': 'NoIPAddresses(localinterfaces.py)', '316': 'public_ips(localinterfaces.py)', '314': 'local_ips(localinterfaces.py)', '311': '_uniq_stable(localinterfaces.py)'}}, {'key': 1676, 'parent': 2266, 'tfidf_word': 'netifaces require local public stable uniq load ip ', 'tfidf_method': '_load_ips _load_ips_netifaces _requires_ips ips_loaded _uniq_stable local_ips public_ips ', 'lda_word': ' ip,load,require,netifaces,stable,', 'lda_method': ' requires_ips,ips_loaded,load_ips,local_ips,load_ips_netifaces,', 'lsi_word': ' ip,load,netifaces,require,public,', 'lsi_method': ' load_ips,ips_loaded,requires_ips,load_ips_netifaces,uniq_stable,', 'spm_method': ' ', 'text_summary': 'load the IPs that point to this machine. return the IP addresses that point to this machine.', 'files_count': 1, 'files': ['localinterfaces.py'], 'execution_path_count': 3, 'function_id_to_name_file': {'310': '_requires_ips(localinterfaces.py)', '318': 'ips_loaded(localinterfaces.py)', '301': '_load_ips(localinterfaces.py)', '307': '_load_ips_netifaces(localinterfaces.py)', '311': '_uniq_stable(localinterfaces.py)', '314': 'local_ips(localinterfaces.py)', '316': 'public_ips(localinterfaces.py)'}}, {'key': 1865, 'parent': 2266, 'tfidf_word': 'require addresses dumb no load ip ', 'tfidf_method': '_load_ips _requires_ips ips_loaded NoIPAddresses _load_ips_dumb ', 'lda_word': ' ip,load,require,dumb,address,', 'lda_method': ' ips_loaded,requires_ips,load_ips,load_ips_dumb,noipaddresses,', 'lsi_word': ' ip,load,require,dumb,address,', 'lsi_method': ' load_ips,ips_loaded,requires_ips,noipaddresses,load_ips_dumb,', 'spm_method': ' ', 'text_summary': '', 'files_count': 1, 'files': ['localinterfaces.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'310': '_requires_ips(localinterfaces.py)', '318': 'ips_loaded(localinterfaces.py)', '301': '_load_ips(localinterfaces.py)', '302': '_load_ips_dumb(localinterfaces.py)', '299': 'NoIPAddresses(localinterfaces.py)'}}, {'key': 1126, 'parent': 1746, 'tfidf_word': 'EP: 1126, Name: test_load_ips &rarr; _load_ips &rarr; _load_ips_ipconfig &rarr; _populate_from_list &rarr; public_ips', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1745, 'parent': 1746, 'tfidf_word': 'ipconfig list populate test local stable uniq load ip ', 'tfidf_method': '_load_ips _load_ips_ipconfig _populate_from_list test_load_ips _uniq_stable local_ips ', 'lda_word': ' ip,load,list,ipconfig,populate,', 'lda_method': ' test_load_ips,load_ips_ipconfig,populate_from_list,load_ips,local_ips,', 'lsi_word': ' ip,load,list,test,populate,', 'lsi_method': ' load_ips,load_ips_ipconfig,populate_from_list,test_load_ips,local_ips,', 'spm_method': ' ', 'text_summary': 'load ip addresses from `ipconfig` output (Windows).', 'files_count': 2, 'files': ['test_localinterfaces.py', 'localinterfaces.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'634': 'test_load_ips(test_localinterfaces.py)', '301': '_load_ips(localinterfaces.py)', '306': '_load_ips_ipconfig(localinterfaces.py)', '309': '_populate_from_list(localinterfaces.py)', '314': 'local_ips(localinterfaces.py)', '311': '_uniq_stable(localinterfaces.py)'}}, {'key': 1121, 'parent': 1744, 'tfidf_word': 'EP: 1121, Name: test_load_ips &rarr; _load_ips &rarr; _load_ips_ifconfig &rarr; _populate_from_list &rarr; NoIPAddresses', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1743, 'parent': 1744, 'tfidf_word': 'ifconfig list populate test local public stable uniq load ip ', 'tfidf_method': '_load_ips _load_ips_ifconfig _populate_from_list test_load_ips _uniq_stable local_ips public_ips ', 'lda_word': ' load,ip,stable,uniq,test,', 'lda_method': ' load_ips,populate_from_list,load_ips_ifconfig,local_ips,test_load_ips,', 'lsi_word': ' ip,load,populate,test,ifconfig,', 'lsi_method': ' load_ips,load_ips_ifconfig,test_load_ips,populate_from_list,public_ips,', 'spm_method': ' ', 'text_summary': 'populate local and public IPs from flat list of all IPs. return the IP addresses that point to this machine. populate local and public IPs from flat list of all IPs. return the IP addresses for this machine that are visible to other machines. populate local and public IPs from flat list of all IPs. uniq_stable(elems) -> list.', 'files_count': 2, 'files': ['test_localinterfaces.py', 'localinterfaces.py'], 'execution_path_count': 3, 'function_id_to_name_file': {'634': 'test_load_ips(test_localinterfaces.py)', '301': '_load_ips(localinterfaces.py)', '304': '_load_ips_ifconfig(localinterfaces.py)', '309': '_populate_from_list(localinterfaces.py)', '316': 'public_ips(localinterfaces.py)', '314': 'local_ips(localinterfaces.py)', '311': '_uniq_stable(localinterfaces.py)'}}, {'key': 1117, 'parent': 2229, 'tfidf_word': 'EP: 1117, Name: test_load_ips &rarr; _load_ips &rarr; _load_ips_ip &rarr; _get_output', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1741, 'parent': 2229, 'tfidf_word': 'populate test addresses local no public stable uniq load ip ', 'tfidf_method': '_load_ips _load_ips_ip _populate_from_list test_load_ips NoIPAddresses _uniq_stable local_ips public_ips ', 'lda_word': ' ip,load,test,list,populate,', 'lda_method': ' load_ips,test_load_ips,populate_from_list,load_ips_ip,uniq_stable,', 'lsi_word': ' ip,load,test,populate,list,', 'lsi_method': ' populate_from_list,test_load_ips,load_ips_ip,load_ips,public_ips,', 'spm_method': ' ', 'text_summary': 'load the IPs that point to this machine. populate local and public IPs from flat list of all IPs. return the IP addresses that point to this machine. populate local and public IPs from flat list of all IPs. return the IP addresses for this machine that are visible to other machines.', 'files_count': 2, 'files': ['test_localinterfaces.py', 'localinterfaces.py'], 'execution_path_count': 4, 'function_id_to_name_file': {'634': 'test_load_ips(test_localinterfaces.py)', '301': '_load_ips(localinterfaces.py)', '305': '_load_ips_ip(localinterfaces.py)', '309': '_populate_from_list(localinterfaces.py)', '299': 'NoIPAddresses(localinterfaces.py)', '316': 'public_ips(localinterfaces.py)', '314': 'local_ips(localinterfaces.py)', '311': '_uniq_stable(localinterfaces.py)'}}, {'key': 2014, 'parent': 2693, 'tfidf_word': 'gethostbyname stable uniq require test load ip ', 'tfidf_method': '_load_ips _load_ips_gethostbyname _uniq_stable _requires_ips ips_loaded test_load_ips ', 'lda_word': ' ip,load,gethostbyname,stable,uniq,', 'lda_method': ' load_ips,uniq_stable,load_ips_gethostbyname,test_load_ips,requires_ips,', 'lsi_word': ' ip,load,uniq,stable,gethostbyname,', 'lsi_method': ' load_ips_gethostbyname,uniq_stable,load_ips,ips_loaded,requires_ips,', 'spm_method': ' ', 'text_summary': 'decorator to ensure load_ips has been run before f.', 'files_count': 2, 'files': ['localinterfaces.py', 'test_localinterfaces.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'310': '_requires_ips(localinterfaces.py)', '318': 'ips_loaded(localinterfaces.py)', '301': '_load_ips(localinterfaces.py)', '303': '_load_ips_gethostbyname(localinterfaces.py)', '311': '_uniq_stable(localinterfaces.py)', '634': 'test_load_ips(test_localinterfaces.py)'}}, {'key': 2384, 'parent': 2693, 'tfidf_word': 'netifaces addresses dumb local no public stable uniq load ip ', 'tfidf_method': '_load_ips test_load_ips _load_ips_netifaces NoIPAddresses _load_ips_dumb _uniq_stable local_ips public_ips ', 'lda_word': ' ip,load,test,netifaces,dumb,', 'lda_method': ' test_load_ips,load_ips,load_ips_netifaces,load_ips_dumb,noipaddresses,', 'lsi_word': ' ip,load,test,netifaces,local,', 'lsi_method': ' load_ips,test_load_ips,load_ips_netifaces,public_ips,local_ips,', 'spm_method': ' ', 'text_summary': 'load the IPs that point to this machine.', 'files_count': 2, 'files': ['test_localinterfaces.py', 'localinterfaces.py'], 'execution_path_count': 5, 'function_id_to_name_file': {'634': 'test_load_ips(test_localinterfaces.py)', '301': '_load_ips(localinterfaces.py)', '307': '_load_ips_netifaces(localinterfaces.py)', '311': '_uniq_stable(localinterfaces.py)', '314': 'local_ips(localinterfaces.py)', '316': 'public_ips(localinterfaces.py)', '302': '_load_ips_dumb(localinterfaces.py)', '299': 'NoIPAddresses(localinterfaces.py)'}}, {'key': 913, 'parent': 2076, 'tfidf_word': 'EP: 913, Name: setUp &rarr; __init__ &rarr; _new_auth', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2075, 'parent': 2076, 'tfidf_word': 'session roundtrip packer pack version msgpack cull id pickle zero ', 'tfidf_method': 'test_bad_pack test_bad_packer test_bad_roundtrip test_bad_unpack test_bad_unpacker test_cull_digest_history test_datetimes_msgpack test_datetimes_pickle test_session_id test_zero_digest_history ', 'lda_word': ' auth,test,new,init,bad,', 'lda_method': ' new_auth,init,test_bad_pack,test_default_version,test_bad_packer,', 'lsi_word': ' test,new,auth,init,bad,', 'lsi_method': ' init,new_auth,test_datetimes_pickle,test_zero_digest_history,test_bad_pack,', 'spm_method': ' ', 'text_summary': '', 'files_count': 3, 'files': ['test_adapter.py', 'session.py', 'test_session.py'], 'execution_path_count': 11, 'function_id_to_name_file': {'516': 'test_default_version(test_adapter.py)', '457': '__init__(session.py)', '465': '_new_auth(session.py)', '689': 'test_datetimes_msgpack(test_session.py)', '690': 'test_datetimes_pickle(test_session.py)', '683': 'test_bad_roundtrip(test_session.py)', '685': 'test_bad_unpacker(test_session.py)', '682': 'test_bad_packer(test_session.py)', '681': 'test_bad_pack(test_session.py)', '684': 'test_bad_unpack(test_session.py)', '687': 'test_cull_digest_history(test_session.py)', '697': 'test_session_id(test_session.py)', '700': 'test_zero_digest_history(test_session.py)'}}, {'key': 24, 'parent': 2095, 'tfidf_word': 'EP: 24, Name: __init__ &rarr; __init__ &rarr; _new_auth', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 63, 'parent': 2095, 'tfidf_word': 'EP: 63, Name: _session_default &rarr; __init__ &rarr; _new_auth', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1438, 'parent': 2273, 'tfidf_word': 'ip localhost test session app find kn file load connection ', 'tfidf_method': '_ip_default load_connection_file load_connection_info init_connection_file localhost initialize test_app_load_connection_file test_find_connection_file test_load_connection_file_session test_load_connection_file_session_with_kn ', 'lda_word': ' file,connection,load,init,info,', 'lda_method': ' load_connection_file,ip_default,initialize,load_connection_info,init_connection_file,', 'lsi_word': ' connection,file,load,default,test,', 'lsi_method': ' init_connection_file,initialize,ip_default,load_connection_file,load_connection_info,', 'spm_method': '  &#187; initialize(test_connect.py) &rarr; init_connection_file(consoleapp.py) &rarr; load_connection_file(connect.py) &rarr; load_connection_info(connect.py) &rarr; _ip_default(connect.py) &rarr; localhost(localinterfaces.py) . <br>', 'text_summary': 'Load connection info from a dict containing connection info. Load connection info from JSON dict in self.connection_file.', 'files_count': 4, 'files': ['test_connect.py', 'consoleapp.py', 'connect.py', 'localinterfaces.py'], 'execution_path_count': 4, 'function_id_to_name_file': {'560': 'test_find_connection_file(test_connect.py)', '572': 'initialize(test_connect.py)', '219': 'init_connection_file(consoleapp.py)', '209': 'load_connection_file(connect.py)', '210': 'load_connection_info(connect.py)', '195': '_ip_default(connect.py)', '315': 'localhost(localinterfaces.py)', '559': 'test_app_load_connection_file(test_connect.py)', '564': 'test_load_connection_file_session(test_connect.py)', '565': 'test_load_connection_file_session_with_kn(test_connect.py)'}}, {'key': 1738, 'parent': 2273, 'tfidf_word': 'default info ip localhost session test kn file connection load ', 'tfidf_method': '_ip_default load_connection_file load_connection_info localhost test_load_connection_file_session test_load_connection_file_session_with_kn ', 'lda_word': ' file,connection,load,localhost,session,', 'lda_method': ' ip_default,load_connection_info,load_connection_file,localhost,test_load_connection_file_session_with_kn,', 'lsi_word': ' connection,load,file,session,test,', 'lsi_method': ' localhost,load_connection_file,load_connection_info,ip_default,test_load_connection_file_session,', 'spm_method': ' ', 'text_summary': 'return ip for localhost (almost always 127.0.0.1) test load_connection_file() after. Load connection info from JSON dict in self.connection_file.', 'files_count': 3, 'files': ['test_connect.py', 'connect.py', 'localinterfaces.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'564': 'test_load_connection_file_session(test_connect.py)', '209': 'load_connection_file(connect.py)', '210': 'load_connection_info(connect.py)', '195': '_ip_default(connect.py)', '315': 'localhost(localinterfaces.py)', '565': 'test_load_connection_file_session_with_kn(test_connect.py)'}}, {'key': 1565, 'parent': 2364, 'tfidf_word': 'random record test session app find kn file load connection ', 'tfidf_method': '_record_random_port_names load_connection_file load_connection_info init_connection_file initialize test_app_load_connection_file test_find_connection_file test_load_connection_file_session test_load_connection_file_session_with_kn ', 'lda_word': ' connection,file,load,port,names,', 'lda_method': ' load_connection_info,initialize,init_connection_file,record_random_port_names,load_connection_file,', 'lsi_word': ' connection,file,load,init,test,', 'lsi_method': ' initialize,init_connection_file,load_connection_file,record_random_port_names,load_connection_info,', 'spm_method': ' ', 'text_summary': 'Load connection info from JSON dict in self.connection_file. test load_connection_file() after.', 'files_count': 3, 'files': ['test_connect.py', 'consoleapp.py', 'connect.py'], 'execution_path_count': 4, 'function_id_to_name_file': {'560': 'test_find_connection_file(test_connect.py)', '572': 'initialize(test_connect.py)', '219': 'init_connection_file(consoleapp.py)', '209': 'load_connection_file(connect.py)', '210': 'load_connection_info(connect.py)', '197': '_record_random_port_names(connect.py)', '559': 'test_app_load_connection_file(test_connect.py)', '564': 'test_load_connection_file_session(test_connect.py)', '565': 'test_load_connection_file_session_with_kn(test_connect.py)'}}, {'key': 1945, 'parent': 2364, 'tfidf_word': 'names port random record session test kn file connection load ', 'tfidf_method': '_record_random_port_names load_connection_file load_connection_info test_load_connection_file_session test_load_connection_file_session_with_kn ', 'lda_word': ' load,connection,file,record,random,', 'lda_method': ' load_connection_info,load_connection_file,record_random_port_names,test_load_connection_file_session,test_load_connection_file_session_with_kn,', 'lsi_word': ' load,connection,file,test,session,', 'lsi_method': ' load_connection_file,load_connection_info,record_random_port_names,test_load_connection_file_session,test_load_connection_file_session_with_kn,', 'spm_method': ' ', 'text_summary': 'Load connection info from a dict containing connection info.', 'files_count': 2, 'files': ['test_connect.py', 'connect.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'564': 'test_load_connection_file_session(test_connect.py)', '209': 'load_connection_file(connect.py)', '210': 'load_connection_info(connect.py)', '197': '_record_random_port_names(connect.py)', '565': 'test_load_connection_file_session_with_kn(test_connect.py)'}}, {'key': 2351, 'parent': 2683, 'tfidf_word': 'record info localhost write initialize connection file default ip load ', 'tfidf_method': 'init_ssh initialize initialize _record_random_port_names load_connection_file load_connection_info write_connection_file localhost _ip_default ', 'lda_word': ' initialize,ssh,connection,init,load,', 'lda_method': ' initialize,init_ssh,localhost,load_connection_info,load_connection_file,', 'lsi_word': ' initialize,connection,load,file,init,', 'lsi_method': ' initialize,init_ssh,load_connection_file,record_random_port_names,load_connection_info,', 'spm_method': ' ', 'text_summary': 'Write connection info to JSON dict in self.connection_file. Load connection info from JSON dict in self.connection_file.', 'files_count': 4, 'files': ['runapp.py', 'consoleapp.py', 'connect.py', 'localinterfaces.py'], 'execution_path_count': 5, 'function_id_to_name_file': {'437': 'initialize(runapp.py)', '223': 'initialize(consoleapp.py)', '222': 'init_ssh(consoleapp.py)', '209': 'load_connection_file(connect.py)', '210': 'load_connection_info(connect.py)', '195': '_ip_default(connect.py)', '315': 'localhost(localinterfaces.py)', '197': '_record_random_port_names(connect.py)', '212': 'write_connection_file(connect.py)'}}, {'key': 2681, 'parent': 2683, 'tfidf_word': 'client no write ip default such kernel load file connection ', 'tfidf_method': 'load_connection_file init_connection_file localhost _record_random_port_names load_connection_info init_kernel_manager _ip_default write_connection_file init_kernel_client NoSuchKernel ', 'lda_word': ' initialize,init,connection,kernel,localhost,', 'lda_method': ' initialize,init_kernel_manager,nosuchkernel,localhost,init_connection_file,', 'lsi_word': ' connection,initialize,file,load,init,', 'lsi_method': ' initialize,init_connection_file,load_connection_file,localhost,load_connection_info,', 'spm_method': ' ', 'text_summary': 'Write connection info to JSON dict in self.connection_file. Load connection info from JSON dict in self.connection_file.', 'files_count': 5, 'files': ['runapp.py', 'consoleapp.py', 'connect.py', 'localinterfaces.py', 'kernelspec.py'], 'execution_path_count': 6, 'function_id_to_name_file': {'437': 'initialize(runapp.py)', '223': 'initialize(consoleapp.py)', '219': 'init_connection_file(consoleapp.py)', '209': 'load_connection_file(connect.py)', '212': 'write_connection_file(connect.py)', '197': '_record_random_port_names(connect.py)', '210': 'load_connection_info(connect.py)', '195': '_ip_default(connect.py)', '315': 'localhost(localinterfaces.py)', '220': 'init_kernel_client(consoleapp.py)', '221': 'init_kernel_manager(consoleapp.py)', '255': 'NoSuchKernel(kernelspec.py)'}}, {'key': 1464, 'parent': 2685, 'tfidf_word': 'record test write session load app find kn connection file ', 'tfidf_method': '_record_random_port_names load_connection_file write_connection_file init_connection_file initialize test_app_load_connection_file test_find_connection_file test_load_connection_file_session test_load_connection_file_session_with_kn ', 'lda_word': ' file,connection,load,test,record,', 'lda_method': ' load_connection_file,init_connection_file,initialize,record_random_port_names,write_connection_file,', 'lsi_word': ' file,connection,load,test,record,', 'lsi_method': ' initialize,load_connection_file,write_connection_file,init_connection_file,record_random_port_names,', 'spm_method': ' ', 'text_summary': 'Write connection info to JSON dict in self.connection_file. Load connection info from JSON dict in self.connection_file.', 'files_count': 3, 'files': ['test_connect.py', 'consoleapp.py', 'connect.py'], 'execution_path_count': 4, 'function_id_to_name_file': {'560': 'test_find_connection_file(test_connect.py)', '572': 'initialize(test_connect.py)', '219': 'init_connection_file(consoleapp.py)', '209': 'load_connection_file(connect.py)', '212': 'write_connection_file(connect.py)', '197': '_record_random_port_names(connect.py)', '559': 'test_app_load_connection_file(test_connect.py)', '564': 'test_load_connection_file_session(test_connect.py)', '565': 'test_load_connection_file_session_with_kn(test_connect.py)'}}, {'key': 2397, 'parent': 2685, 'tfidf_word': 'new mixin cleanup kn run async file connection load kernel ', 'tfidf_method': 'write_connection_file load_connection_file client run_kernel start_new_async_kernel start_new_kernel test_load_connection_file_session test_load_connection_file_session_with_kn test_mixin_cleanup_random_ports test_mixin_record_random_ports ', 'lda_word': ' port,random,record,test,names,', 'lda_method': ' record_random_port_names,write_connection_file,load_connection_file,test_load_connection_file_session,test_load_connection_file_session_with_kn,', 'lsi_word': ' connection,file,random,port,record,', 'lsi_method': ' record_random_port_names,write_connection_file,client,load_connection_file,run_kernel,', 'spm_method': ' ', 'text_summary': 'Write connection info to JSON dict in self.connection_file. Load connection info from JSON dict in self.connection_file. Create a client configured to connect to our kernel.', 'files_count': 3, 'files': ['manager.py', 'connect.py', 'test_connect.py'], 'execution_path_count': 6, 'function_id_to_name_file': {'322': 'start_new_async_kernel(manager.py)', '351': 'client(manager.py)', '212': 'write_connection_file(connect.py)', '197': '_record_random_port_names(connect.py)', '321': 'run_kernel(manager.py)', '323': 'start_new_kernel(manager.py)', '564': 'test_load_connection_file_session(test_connect.py)', '209': 'load_connection_file(connect.py)', '565': 'test_load_connection_file_session_with_kn(test_connect.py)', '568': 'test_mixin_record_random_ports(test_connect.py)', '567': 'test_mixin_cleanup_random_ports(test_connect.py)'}}, {'key': 1760, 'parent': 2223, 'tfidf_word': 'get list test dir name valid find kernel specs ', 'tfidf_method': '_list_kernels_in find_kernel_specs get_all_specs test_find_all_specs _is_kernel_dir _is_valid_kernel_name ', 'lda_word': ' specs,find,kernel,test,list,', 'lda_method': ' find_kernel_specs,get_all_specs,is_kernel_dir,test_find_all_specs,list_kernels_in,', 'lsi_word': ' kernel,specs,find,list,get,', 'lsi_method': ' find_kernel_specs,list_kernels_in,test_find_all_specs,get_all_specs,is_valid_kernel_name,', 'spm_method': ' ', 'text_summary': 'Check that a kernel name is valid. Is ``path`` a kernel directory?.', 'files_count': 2, 'files': ['test_kernelspec.py', 'kernelspec.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'621': 'test_find_all_specs(test_kernelspec.py)', '273': 'get_all_specs(kernelspec.py)', '272': 'find_kernel_specs(kernelspec.py)', '258': '_list_kernels_in(kernelspec.py)', '257': '_is_valid_kernel_name(kernelspec.py)', '256': '_is_kernel_dir(kernelspec.py)'}}, {'key': 1762, 'parent': 2223, 'tfidf_word': 'find get list subclass test dir name valid specs kernel ', 'tfidf_method': '_list_kernels_in find_kernel_specs get_all_specs test_subclass _is_kernel_dir _is_valid_kernel_name ', 'lda_word': ' kernel,specs,get,find,test,', 'lda_method': ' test_subclass,list_kernels_in,get_all_specs,find_kernel_specs,is_valid_kernel_name,', 'lsi_word': ' kernel,specs,list,test,get,', 'lsi_method': ' find_kernel_specs,get_all_specs,test_subclass,list_kernels_in,is_valid_kernel_name,', 'spm_method': ' ', 'text_summary': 'Return a mapping of kernel names to resource directories from dir.', 'files_count': 2, 'files': ['test_kernelspec.py', 'kernelspec.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'629': 'test_subclass(test_kernelspec.py)', '273': 'get_all_specs(kernelspec.py)', '272': 'find_kernel_specs(kernelspec.py)', '258': '_list_kernels_in(kernelspec.py)', '257': '_is_valid_kernel_name(kernelspec.py)', '256': '_is_kernel_dir(kernelspec.py)'}}, {'key': 1761, 'parent': 2391, 'tfidf_word': 'find list specs test dir name valid remove spec kernel ', 'tfidf_method': '_list_kernels_in find_kernel_specs remove_kernel_spec test_remove_kernel_spec _is_kernel_dir _is_valid_kernel_name ', 'lda_word': ' kernel,remove,spec,find,specs,', 'lda_method': ' test_remove_kernel_spec,list_kernels_in,remove_kernel_spec,find_kernel_specs,is_kernel_dir,', 'lsi_word': ' kernel,remove,spec,find,specs,', 'lsi_method': ' list_kernels_in,test_remove_kernel_spec,remove_kernel_spec,find_kernel_specs,is_valid_kernel_name,', 'spm_method': ' ', 'text_summary': 'Remove a kernel spec directory by name. Is ``path`` a kernel directory?.', 'files_count': 2, 'files': ['test_kernelspec.py', 'kernelspec.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'627': 'test_remove_kernel_spec(test_kernelspec.py)', '277': 'remove_kernel_spec(kernelspec.py)', '272': 'find_kernel_specs(kernelspec.py)', '258': '_list_kernels_in(kernelspec.py)', '257': '_is_valid_kernel_name(kernelspec.py)', '256': '_is_kernel_dir(kernelspec.py)'}}, {'key': 2349, 'parent': 2391, 'tfidf_word': 'spec dir name valid install find specs prefix priority kernel ', 'tfidf_method': '_list_kernels_in find_kernel_specs _is_kernel_dir _is_valid_kernel_name find_kernel_specs test_find_kernel_specs test_install_kernel_spec test_install_kernel_spec_prefix test_kernel_spec_priority ', 'lda_word': ' kernel,find,specs,list,test,', 'lda_method': ' find_kernel_specs,list_kernels_in,is_valid_kernel_name,is_kernel_dir,test_install_kernel_spec,', 'lsi_word': ' kernel,find,specs,list,test,', 'lsi_method': ' find_kernel_specs,list_kernels_in,is_kernel_dir,is_valid_kernel_name,test_kernel_spec_priority,', 'spm_method': ' ', 'text_summary': 'Return a mapping of kernel names to resource directories from dir. Is ``path`` a kernel directory?.', 'files_count': 2, 'files': ['test_kernelspec.py', 'kernelspec.py'], 'execution_path_count': 10, 'function_id_to_name_file': {'625': 'test_install_kernel_spec_prefix(test_kernelspec.py)', '272': 'find_kernel_specs(kernelspec.py)', '258': '_list_kernels_in(kernelspec.py)', '257': '_is_valid_kernel_name(kernelspec.py)', '256': '_is_kernel_dir(kernelspec.py)', '626': 'test_kernel_spec_priority(test_kernelspec.py)', '624': 'test_install_kernel_spec(test_kernelspec.py)', '259': 'find_kernel_specs(kernelspec.py)', '622': 'test_find_kernel_specs(test_kernelspec.py)'}}, {'key': 2025, 'parent': 2407, 'tfidf_word': 'parse tzinfo test send date recv handle raw serialize unserialize ', 'tfidf_method': '_ensure_tzinfo extract_dates parse_date deserialize recv test_send unserialize handle test_send_raw test_serialize ', 'lda_word': ' date,test,tzinfo,deserialize,send,', 'lda_method': ' deserialize,extract_dates,parse_date,ensure_tzinfo,recv,', 'lsi_word': ' date,extract,ensure,tzinfo,deserialize,', 'lsi_method': ' ensure_tzinfo,extract_dates,parse_date,deserialize,recv,', 'spm_method': ' ', 'text_summary': 'Receive and unpack a message. extract ISO8601 dates from unpacked JSON. parse an ISO8601 date string.', 'files_count': 4, 'files': ['test_session.py', 'session.py', 'jsonutil.py', 'forward.py'], 'execution_path_count': 6, 'function_id_to_name_file': {'694': 'test_send(test_session.py)', '479': 'recv(session.py)', '474': 'deserialize(session.py)', '242': 'extract_dates(jsonutil.py)', '243': 'parse_date(jsonutil.py)', '240': '_ensure_tzinfo(jsonutil.py)', '492': 'handle(forward.py)', '695': 'test_send_raw(test_session.py)', '484': 'unserialize(session.py)', '696': 'test_serialize(test_session.py)'}}, {'key': 2374, 'parent': 2407, 'tfidf_word': 'parse test extract default ms msgpack naive pickle precision date ', 'tfidf_method': 'parse_date extract_dates _datetime_test test_date_default test_extract_date_from_naive test_extract_dates test_parse_ms_precision test_datetimes test_datetimes_msgpack test_datetimes_pickle ', 'lda_word': ' parse,date,tzinfo,ensure,test,', 'lda_method': ' extract_dates,ensure_tzinfo,parse_date,datetime_test,test_datetimes_pickle,', 'lsi_word': ' date,test,extract,parse,ensure,', 'lsi_method': ' ensure_tzinfo,parse_date,extract_dates,datetime_test,test_datetimes_pickle,', 'spm_method': ' ', 'text_summary': '', 'files_count': 3, 'files': ['test_jsonutil.py', 'jsonutil.py', 'test_session.py'], 'execution_path_count': 7, 'function_id_to_name_file': {'578': 'test_parse_ms_precision(test_jsonutil.py)', '243': 'parse_date(jsonutil.py)', '240': '_ensure_tzinfo(jsonutil.py)', '689': 'test_datetimes_msgpack(test_session.py)', '679': '_datetime_test(test_session.py)', '242': 'extract_dates(jsonutil.py)', '688': 'test_datetimes(test_session.py)', '690': 'test_datetimes_pickle(test_session.py)', '575': 'test_date_default(test_jsonutil.py)', '576': 'test_extract_date_from_naive(test_jsonutil.py)', '577': 'test_extract_dates(test_jsonutil.py)'}}, {'key': 2737, 'parent': 2784, 'tfidf_word': 'url get create connection file start kernel spec connect socket ', 'tfidf_method': 'KernelSpec from_ns _launch_kernel _connect_control_socket _get_env_substitutions local_ips is_local_ip _make_url start_restarter _create_connected_socket ', 'lda_word': ' kernel,start,pre,async,new,', 'lda_method': ' format_kernel_cmd,start_kernel,start_new_async_kernel,from_ns,test_connection_file_real_path,', 'lsi_word': ' kernel,start,pre,new,async,', 'lsi_method': ' start_kernel,pre_start_kernel,start_new_async_kernel,restart_kernel,format_kernel_cmd,', 'spm_method': ' ', 'text_summary': '{connection_file})  Restarts a kernel with the arguments that were used to launch it. return the IP addresses that point to this machine. Verify realpath is used when formatting connection file. Walks env entries in templated_env and applies possible substitutions from current env. Write connection info to JSON dict in self.connection_file. {connection_file})   Prepares a kernel for startup in a separate process. does `ip` point to this machine?. replace templated args (e.g.', 'files_count': 5, 'files': ['manager.py', 'connect.py', 'test_manager.py', 'kernelspec.py', 'localinterfaces.py'], 'execution_path_count': 23, 'function_id_to_name_file': {'330': 'restart_kernel(manager.py)', '333': 'start_kernel(manager.py)', '326': '_launch_kernel(manager.py)', '322': 'start_new_async_kernel(manager.py)', '359': 'post_start_kernel(manager.py)', '338': '_connect_control_socket(manager.py)', '192': '_create_connected_socket(connect.py)', '196': '_make_url(connect.py)', '367': 'start_restarter(manager.py)', '635': 'test_connection_file_real_path(test_manager.py)', '353': 'format_kernel_cmd(manager.py)', '358': 'kernel_spec(manager.py)', '253': 'KernelSpec(kernelspec.py)', '360': 'pre_start_kernel(manager.py)', '369': 'from_ns(manager.py)', '212': 'write_connection_file(connect.py)', '197': '_record_random_port_names(connect.py)', '341': '_get_env_substitutions(manager.py)', '314': 'local_ips(localinterfaces.py)', '312': 'is_local_ip(localinterfaces.py)'}}, {'key': 2783, 'parent': 2784, 'tfidf_word': 'loop digest permission native flush io tunnel cleanup code restarter ', 'tfidf_method': 'parse_command_line test_mixin_record_random_ports test_secure_write update_msg_type check_user_only_permissions fetch_win32_permissions _launch test_kernelapp_lifecycle msg_header test_code_to_line_no_code ', 'lda_word': ' test,lifecycle,tcp,run,kernel,', 'lda_method': ' is_alive,start,wait_for_ready,close,stop,', 'lsi_word': ' kernel,get,spec,test,lifecycle,', 'lsi_method': ' init,get_kernel_spec,setup,get_all_specs,test_subclass,', 'spm_method': ' ', 'text_summary': "Subclasses may override  Prepares a kernel for startup in a separate process. return ip for localhost (almost always 127.0.0.1) test `ipython console --existing` loads a connection file. Prepares a kernel for startup in a separate process. return ip for localhost (almost always 127.0.0.1)   Ensure that a sequence of kernel startups doesn't break anything. Sends a signal to the process group of the kernel (this. Pass a message to the ZMQ socket to send. Install a kernel spec by copying its directory. Return the connection info as a dict. Subclasses may override Start the polling of the kernel. return ip for localhost (almost always 127.0.0.1) test load_connection_file() after. test `ipython console --existing` loads a connection file. find a connection file, and return its absolute path. return ip for localhost (almost always 127.0.0.1)      find a connection file, and return its absolute path. For tests, create a file to indicate that we've started. Returns a dict mapping kernel names to kernelspecs. handle kernel info reply. Get the hb channel object for this kernel. Returns the id to associate with the kernel for this request. Send a raw message via ident path. Make a blocking client connected to my kernel. return ip for localhost (almost always 127.0.0.1)  Write connection info to JSON dict in self.connection_file. Get a message from the stdin channel. Immediately processes all pending messages on this channel. Return the number of running kernels. Unserialize a msg_list to a nested message dict. Interrupts the kernel by sending it a signal. Get a message from the shell channel. Get a message from the iopub channel. This is run in the ioloop thread when the kernel info reply is received. default function for packing datetime objects in JSON. Test get_all_specs in subclasses that override find_kernel_specs. Returns a :class:`KernelSpec` instance for a given kernel_name. Send a shutdown request via control channel. test load_connection_file() after. Write connection info to JSON dict in self.connection_file. test that messages receive unique ids.", 'files_count': 35, 'files': ['test_kernelspec.py', 'kernelspec.py', 'test_client.py', 'test_session.py', 'session.py', 'adapter.py', 'forward.py', 'test_adapter.py', 'manager.py', 'test_connect.py', 'connect.py', 'channels.py', 'localinterfaces.py', 'threaded.py', 'consoleapp.py', 'runapp.py', 'test_multikernelmanager.py', 'multikernelmanager.py', 'tunnel.py', 'test_ssh.py', 'client.py', 'managerabc.py', 'channelsabc.py', 'test_kernelmanager.py', 'jsonutil.py', 'test_manager.py', 'utils.py', 'restarter.py', 'signalkernel.py', 'kernelspecapp.py', 'kernelapp.py', 'test_jsonutil.py', 'test_kernelapp.py', 'win_interrupt.py', 'launcher.py'], 'execution_path_count': 483, 'function_id_to_name_file': {'623': 'test_get_kernel_spec(test_kernelspec.py)', '267': '_find_spec_directory(kernelspec.py)', '256': '_is_kernel_dir(kernelspec.py)', '632': 'find_kernel_specs(test_kernelspec.py)', '621': 'test_find_all_specs(test_kernelspec.py)', '273': 'get_all_specs(kernelspec.py)', '274': 'get_kernel_spec(kernelspec.py)', '629': 'test_subclass(test_kernelspec.py)', '633': 'get_kernel_spec(test_kernelspec.py)', '549': 'setUp(test_client.py)', '269': '_get_kernel_spec_by_name(kernelspec.py)', '255': 'NoSuchKernel(kernelspec.py)', '278': '__init__(kernelspec.py)', '257': '_is_valid_kernel_name(kernelspec.py)', '260': 'get_kernel_spec(kernelspec.py)', '694': 'test_send(test_session.py)', '479': 'recv(session.py)', '474': 'deserialize(session.py)', '50': 'adapt(adapter.py)', '450': 'utcnow(session.py)', '492': 'handle(forward.py)', '695': 'test_send_raw(test_session.py)', '484': 'unserialize(session.py)', '696': 'test_serialize(test_session.py)', '516': 'test_default_version(test_adapter.py)', '698': 'test_tracking(test_session.py)', '480': 'send(session.py)', '328': 'interrupt_kernel(manager.py)', '559': 'test_app_load_connection_file(test_connect.py)', '191': 'write_connection_file(connect.py)', '109': 'close(channels.py)', '83': 'close(channels.py)', '315': 'localhost(localinterfaces.py)', '730': 'close(threaded.py)', '132': 'close(channels.py)', '211': 'ports(connect.py)', '718': 'close(threaded.py)', '565': 'test_load_connection_file_session_with_kn(test_connect.py)', '570': 'test_write_connection_file(test_connect.py)', '564': 'test_load_connection_file_session(test_connect.py)', '686': 'test_clone(test_session.py)', '458': '_add_digest(session.py)', '460': '_cull_digest_history(session.py)', '700': 'test_zero_digest_history(test_session.py)', '687': 'test_cull_digest_history(test_session.py)', '558': 'DummyConsoleApp(test_connect.py)', '214': 'JupyterConsoleApp(consoleapp.py)', '441': 'Session(session.py)', '188': 'ConnectionFileMixin(connect.py)', '560': 'test_find_connection_file(test_connect.py)', '213': 'IPythonConsoleApp(consoleapp.py)', '434': 'RunApp(runapp.py)', '665': 'test_start_sequence_tcp_kernels(test_multikernelmanager.py)', '655': '_get_tcp_km(test_multikernelmanager.py)', '392': '__init__(multikernelmanager.py)', '666': 'test_tcp_cinfo(test_multikernelmanager.py)', '668': 'test_tcp_lifecycle_with_kernel_id(test_multikernelmanager.py)', '661': 'test_shutdown_all(test_multikernelmanager.py)', '663': 'test_start_parallel_thread_kernels(test_multikernelmanager.py)', '658': 'tcp_lifecycle_with_loop(test_multikernelmanager.py)', '667': 'test_tcp_lifecycle(test_multikernelmanager.py)', '662': 'test_start_parallel_process_kernels(test_multikernelmanager.py)', '190': 'tunnel_to_kernel(connect.py)', '503': 'select_random_ports(tunnel.py)', '701': 'test_random_ports(test_ssh.py)', '386': 'shutdown_all(multikernelmanager.py)', '383': 'finish_shutdown(multikernelmanager.py)', '410': 'get_kernel(multikernelmanager.py)', '394': '_check_kernel_id(multikernelmanager.py)', '388': 'signal_kernel(multikernelmanager.py)', '385': 'restart_kernel(multikernelmanager.py)', '384': 'interrupt_kernel(multikernelmanager.py)', '387': 'shutdown_kernel(multikernelmanager.py)', '421': 'shutdown_kernel(multikernelmanager.py)', '420': 'shutdown_all(multikernelmanager.py)', '104': 'wait_for_ready(client.py)', '103': 'is_alive(client.py)', '412': 'is_alive(multikernelmanager.py)', '373': 'is_alive(managerabc.py)', '140': 'is_alive(channelsabc.py)', '732': 'is_alive(threaded.py)', '86': 'is_alive(channels.py)', '112': 'is_alive(channels.py)', '123': 'wait_for_ready(client.py)', '165': 'is_alive(client.py)', '648': 'test_start_parallel_thread_kernels(test_multikernelmanager.py)', '643': 'tcp_lifecycle_with_loop(test_multikernelmanager.py)', '642': 'raw_tcp_lifecycle(test_multikernelmanager.py)', '641': '_run_lifecycle(test_multikernelmanager.py)', '647': 'test_start_parallel_process_kernels(test_multikernelmanager.py)', '652': 'test_tcp_lifecycle(test_multikernelmanager.py)', '653': 'test_tcp_lifecycle_with_kernel_id(test_multikernelmanager.py)', '483': 'sign(session.py)', '440': 'Message(session.py)', '482': 'serialize(session.py)', '135': 'run(channels.py)', '128': '_create_socket(channels.py)', '84': 'get_msg(channels.py)', '82': '_recv(channels.py)', '101': 'get_stdin_msg(client.py)', '85': 'get_msgs(channels.py)', '99': 'get_iopub_msg(client.py)', '110': 'get_msg(channels.py)', '108': '_recv(channels.py)', '111': 'get_msgs(channels.py)', '620': 'test_cant_install_kernel_spec(test_kernelspec.py)', '275': 'install_kernel_spec(kernelspec.py)', '268': '_get_destination_dir(kernelspec.py)', '625': 'test_install_kernel_spec_prefix(test_kernelspec.py)', '261': 'install_kernel_spec(kernelspec.py)', '624': 'test_install_kernel_spec(test_kernelspec.py)', '614': 'test_start_sequence_process_kernels(test_kernelmanager.py)', '610': '_run_signaltest_lifecycle(test_kernelmanager.py)', '615': 'execute(test_kernelmanager.py)', '609': '_prepare_kernel(test_kernelmanager.py)', '611': 'test_start_parallel_process_kernels(test_kernelmanager.py)', '613': 'test_start_sequence_kernels(test_kernelmanager.py)', '612': 'test_start_parallel_thread_kernels(test_kernelmanager.py)', '398': '_kernel_manager_class_changed(multikernelmanager.py)', '396': '_create_kernel_manager_factory(multikernelmanager.py)', '424': 'create_kernel_manager(multikernelmanager.py)', '397': '_find_available_port(multikernelmanager.py)', '395': '_context_default(multikernelmanager.py)', '399': '_kernel_manager_factory_default(multikernelmanager.py)', '215': '__init__(consoleapp.py)', '485': '__init__(session.py)', '457': '__init__(session.py)', '465': '_new_auth(session.py)', '459': '_check_packers(session.py)', '244': 'squash_dates(jsonutil.py)', '90': 'AsyncKernelClient(client.py)', '147': 'KernelClient(client.py)', '139': 'HBChannelABC(channelsabc.py)', '138': 'ChannelABC(channelsabc.py)', '116': 'BlockingKernelClient(client.py)', '322': 'start_new_async_kernel(manager.py)', '319': 'AsyncKernelManager(manager.py)', '320': 'KernelManager(manager.py)', '224': 'AsyncIOLoopKernelManager(manager.py)', '225': 'IOLoopKernelManager(manager.py)', '635': 'test_connection_file_real_path(test_manager.py)', '657': '_run_lifecycle(test_multikernelmanager.py)', '704': 'execute(utils.py)', '155': 'execute(client.py)', '148': 'validate_string_dict(client.py)', '689': 'test_datetimes_msgpack(test_session.py)', '679': '_datetime_test(test_session.py)', '688': 'test_datetimes(test_session.py)', '690': 'test_datetimes_pickle(test_session.py)', '734': 'send(threaded.py)', '738': 'thread_send(threaded.py)', '664': 'test_start_sequence_ipc_kernels(test_multikernelmanager.py)', '654': '_get_ipc_km(test_multikernelmanager.py)', '660': 'test_ipc_lifecycle(test_multikernelmanager.py)', '659': 'test_ipc_cinfo(test_multikernelmanager.py)', '423': 'start_kernel(multikernelmanager.py)', '415': 'pre_start_kernel(multikernelmanager.py)', '380': 'DuplicateKernelError(multikernelmanager.py)', '414': 'new_kernel_id(multikernelmanager.py)', '389': 'start_kernel(multikernelmanager.py)', '238': 'start(restarter.py)', '430': 'poll(restarter.py)', '433': 'stop(restarter.py)', '428': '_fire_callbacks(restarter.py)', '510': 'do_execute(signalkernel.py)', '501': 'openssh_tunnel(tunnel.py)', '494': 'SSHException(tunnel.py)', '497': '_stop_tunnel(tunnel.py)', '475': 'feed_identities(session.py)', '330': 'restart_kernel(manager.py)', '202': 'cleanup_random_ports(connect.py)', '200': 'cleanup_connection_file(connect.py)', '567': 'test_mixin_cleanup_random_ports(test_connect.py)', '106': 'ZMQSocketChannel(channels.py)', '226': 'as_zmqstream(manager.py)', '233': 'wrapped(manager.py)', '568': 'test_mixin_record_random_ports(test_connect.py)', '557': 'DummyConfigurable(test_connect.py)', '235': 'IOLoopKernelRestarter(restarter.py)', '426': 'KernelRestarter(restarter.py)', '234': 'AsyncIOLoopKernelRestarter(restarter.py)', '291': 'start(kernelspecapp.py)', '251': 'start(kernelapp.py)', '249': 'setup_signals(kernelapp.py)', '252': 'shutdown_handler(kernelapp.py)', '250': 'shutdown(kernelapp.py)', '248': 'log_connection_info(kernelapp.py)', '199': 'blocking_client(connect.py)', '208': 'get_connection_info(connect.py)', '725': 'stop_channels(threaded.py)', '684': 'test_bad_unpack(test_session.py)', '676': '_bad_unpacker(test_session.py)', '536': 'test_complete_request(test_adapter.py)', '517': 'adapt(test_adapter.py)', '562': 'test_find_connection_file_local(test_connect.py)', '189': 'find_connection_file(connect.py)', '493': 'SubHander(forward.py)', '490': 'Handler(forward.py)', '253': 'KernelSpec(kernelspec.py)', '114': 'send(channels.py)', '88': 'send(channels.py)', '575': 'test_date_default(test_jsonutil.py)', '241': 'date_default(jsonutil.py)', '240': '_ensure_tzinfo(jsonutil.py)', '597': 'test_subclasses(test_kernelmanager.py)', '703': 'AsyncKernelManagerWithCleanup(utils.py)', '595': 'test_signal_kernel_subprocesses(test_kernelmanager.py)', '598': 'execute(test_kernelmanager.py)', '702': 'AsyncKernelManagerSubclass(utils.py)', '591': 'transport(test_kernelmanager.py)', '606': 'test_templated_kspec_env(test_kernelmanager.py)', '599': '_env_test_body(test_kernelmanager.py)', '607': 'execute(test_kernelmanager.py)', '604': 'test_signal_kernel_subprocesses(test_kernelmanager.py)', '608': 'execute(test_kernelmanager.py)', '586': 'env(test_kernelmanager.py)', '712': 'stop(utils.py)', '711': 'start(utils.py)', '705': 'test_env(utils.py)', '630': 'test_validate_kernel_name(test_kernelspec.py)', '506': 'SignalTestApp(signalkernel.py)', '507': 'SignalTestKernel(signalkernel.py)', '627': 'test_remove_kernel_spec(test_kernelspec.py)', '617': '_install_sample_kernel(test_kernelspec.py)', '626': 'test_kernel_spec_priority(test_kernelspec.py)', '651': 'test_tcp_cinfo(test_multikernelmanager.py)', '640': '_run_cinfo(test_multikernelmanager.py)', '622': 'test_find_kernel_specs(test_kernelspec.py)', '619': 'tearDown(test_kernelspec.py)', '618': 'setUp(test_kernelspec.py)', '649': 'test_start_sequence_ipc_kernels(test_multikernelmanager.py)', '650': 'test_start_sequence_tcp_kernels(test_multikernelmanager.py)', '644': 'test_ipc_cinfo(test_multikernelmanager.py)', '645': 'test_ipc_lifecycle(test_multikernelmanager.py)', '656': '_run_cinfo(test_multikernelmanager.py)', '569': 'test_secure_write(test_connect.py)', '573': 'check_user_only_permissions(test_connect.py)', '574': 'fetch_win32_permissions(test_connect.py)', '563': 'test_find_connection_file_relative(test_connect.py)', '561': 'test_find_connection_file_abspath(test_connect.py)', '539': 'test_input_request(test_adapter.py)', '537': 'test_display_data(test_adapter.py)', '540': 'test_inspect_reply(test_adapter.py)', '543': 'test_kernel_info_reply(test_adapter.py)', '542': 'test_inspect_request_token(test_adapter.py)', '535': 'test_complete_reply(test_adapter.py)', '541': 'test_inspect_request(test_adapter.py)', '538': 'test_execute_request(test_adapter.py)', '545': 'test_rename_type(test_adapter.py)', '544': 'test_no_adapt(test_adapter.py)', '546': 'test_same_version(test_adapter.py)', '514': 'V5toV4TestCase(test_adapter.py)', '512': 'AdapterTest(test_adapter.py)', '526': 'test_input_request(test_adapter.py)', '523': 'test_display_data(test_adapter.py)', '527': 'test_kernel_info_reply(test_adapter.py)', '530': 'test_object_info_reply_not_found(test_adapter.py)', '529': 'test_object_info_reply(test_adapter.py)', '531': 'test_object_info_request(test_adapter.py)', '521': 'test_complete_reply(test_adapter.py)', '522': 'test_complete_request(test_adapter.py)', '524': 'test_execute_reply(test_adapter.py)', '532': 'test_rename_type(test_adapter.py)', '525': 'test_execute_request(test_adapter.py)', '528': 'test_no_adapt(test_adapter.py)', '533': 'test_same_version(test_adapter.py)', '513': 'V4toV5TestCase(test_adapter.py)', '519': 'setUp(test_adapter.py)', '515': 'test_code_to_line_no_code(test_adapter.py)', '51': 'code_to_line(adapter.py)', '158': 'get_shell_msg(client.py)', '157': 'get_iopub_msg(client.py)', '710': '__exit__(utils.py)', '709': '__enter__(utils.py)', '580': 'test_kernelapp_lifecycle(test_kernelapp.py)', '579': '_launch(test_kernelapp.py)', '473': 'clone(session.py)', '481': 'send_raw(session.py)', '683': 'test_bad_roundtrip(test_session.py)', '685': 'test_bad_unpacker(test_session.py)', '682': 'test_bad_packer(test_session.py)', '681': 'test_bad_pack(test_session.py)', '675': '_bad_packer(test_session.py)', '697': 'test_session_id(test_session.py)', '699': 'test_unique_msg_ids(test_session.py)', '445': 'msg_header(session.py)', '680': 'test_args(test_session.py)', '478': 'msg_id(session.py)', '674': 'TestSession(test_session.py)', '673': 'SessionTestCase(test_session.py)', '678': 'setUp(test_session.py)', '556': 'test_shutdown(test_client.py)', '548': '_check_reply(test_client.py)', '550': 'test_comm_info(test_client.py)', '555': 'test_kernel_info(test_client.py)', '551': 'test_complete(test_client.py)', '554': 'test_inspect(test_client.py)', '553': 'test_history(test_client.py)', '117': 'reqrep(client.py)', '124': 'wrapped(client.py)', '150': '_handle_kernel_info_reply(client.py)', '125': 'HBChannel(channels.py)', '102': 'hb_channel(client.py)', '196': '_make_url(connect.py)', '91': 'reqrep(client.py)', '105': 'wrapped(client.py)', '80': 'ZMQSocketChannel(channels.py)', '154': 'control_channel(client.py)', '723': 'ioloop(threaded.py)', '160': 'hb_channel(client.py)', '171': 'stdin_channel(client.py)', '164': 'iopub_channel(client.py)', '168': 'shell_channel(client.py)', '740': 'send_interrupt(win_interrupt.py)', '334': '__del__(manager.py)', '293': 'start(kernelspecapp.py)', '294': 'path_key(kernelspecapp.py)', '735': 'start(threaded.py)', '720': 'start(threaded.py)', '141': 'start(channelsabc.py)', '432': 'start(restarter.py)', '288': 'start(kernelspecapp.py)', '89': 'start(channels.py)', '115': 'start(channels.py)', '290': 'start(kernelspecapp.py)', '438': 'parse_command_line(runapp.py)', '218': 'build_kernel_argv(consoleapp.py)', '308': '_only_once(localinterfaces.py)', '317': 'wrapped(localinterfaces.py)', '47': 'V4toV5(adapter.py)', '46': 'Adapter(adapter.py)', '77': 'object_info_request(adapter.py)', '52': 'extract_oname_v4(adapter.py)', '70': 'complete_request(adapter.py)', '75': 'kernel_info_reply(adapter.py)', '49': '_version_str_to_list(adapter.py)', '48': 'V5toV4(adapter.py)', '53': '__call__(adapter.py)', '54': 'handle_reply_status_error(adapter.py)', '57': 'update_msg_type(adapter.py)', '56': 'update_metadata(adapter.py)', '55': 'update_header(adapter.py)', '247': 'initialize(kernelapp.py)', '246': '_record_started(kernelapp.py)', '585': 'config(test_kernelmanager.py)', '262': 'install_native_kernel_spec(kernelspec.py)', '276': 'install_native_kernel_spec(kernelspec.py)', '265': 'to_json(kernelspec.py)', '264': 'to_dict(kernelspec.py)', '449': 'test_msg2obj(session.py)', '453': '__init__(session.py)', '470': '_signature_scheme_changed(session.py)', '463': '_key_default(session.py)', '447': 'new_id_bytes(session.py)', '462': '_key_changed(session.py)', '443': 'default_secure(session.py)', '469': '_session_default(session.py)', '446': 'new_id(session.py)', '413': 'list_kernel_ids(multikernelmanager.py)', '721': 'stop(threaded.py)', '724': 'start_channels(threaded.py)', '722': '_check_kernel_info_reply(threaded.py)', '716': '__init__(threaded.py)', '416': 'remove_kernel(multikernelmanager.py)', '713': 'IOLoopThread(threaded.py)', '714': 'ThreadedKernelClient(threaded.py)', '715': 'ThreadedZMQSocketChannel(threaded.py)', '731': 'flush(threaded.py)', '727': '_flush(threaded.py)', '418': 'request_shutdown(multikernelmanager.py)', '402': 'cleanup_resources(multikernelmanager.py)', '408': 'finish_shutdown(multikernelmanager.py)', '393': '__len__(multikernelmanager.py)', '198': '_session_default(connect.py)', '298': 'launch_kernel(launcher.py)', '739': 'create_interrupt_event(win_interrupt.py)', '741': 'SECURITY_ATTRIBUTES(win_interrupt.py)', '509': '__init__(signalkernel.py)', '127': '__init__(channels.py)', '126': 'InvalidPortNumber(channels.py)', '107': '__init__(channels.py)', '81': '__init__(channels.py)', '726': '__init__(threaded.py)', '737': 'setup_stream(threaded.py)', '728': '_handle_recv(threaded.py)', '729': 'call_handlers(threaded.py)', '136': 'stop(channels.py)', '133': 'is_beating(channels.py)', '145': 'time_to_dead(channelsabc.py)', '131': 'call_handlers(channels.py)', '130': '_poll(channels.py)'}}, {'key': 201, 'parent': 1586, 'tfidf_word': 'EP: 201, Name: initialize &rarr; handle_sigint &rarr; interrupt_kernel &rarr; msg &rarr; msg &rarr; msg_header &rarr; msg_id', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 203, 'parent': 1586, 'tfidf_word': 'EP: 203, Name: initialize &rarr; handle_sigint &rarr; interrupt_kernel &rarr; msg &rarr; msg &rarr; msg &rarr; msg_header &rarr; msg_id', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 205, 'parent': 1587, 'tfidf_word': 'EP: 205, Name: initialize &rarr; handle_sigint &rarr; interrupt_kernel &rarr; msg &rarr; msg &rarr; msg_header &rarr; msg_id', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 207, 'parent': 1587, 'tfidf_word': 'EP: 207, Name: initialize &rarr; handle_sigint &rarr; interrupt_kernel &rarr; msg &rarr; msg &rarr; msg &rarr; msg_header &rarr; msg_id', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 187, 'parent': 1868, 'tfidf_word': 'EP: 187, Name: initialize &rarr; handle_sigint &rarr; interrupt_kernel &rarr; msg &rarr; extract_header', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 195, 'parent': 1868, 'tfidf_word': 'EP: 195, Name: initialize &rarr; handle_sigint &rarr; interrupt_kernel &rarr; send &rarr; msg &rarr; extract_header', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1772, 'parent': 2024, 'tfidf_word': 'extract handle header initialize interrupt kernel sigint msg ', 'tfidf_method': 'interrupt_kernel handle_sigint initialize extract_header msg msg msg ', 'lda_word': ' msg,handle,extract,kernel,interrupt,', 'lda_method': ' msg,initialize,handle_sigint,interrupt_kernel,extract_header,', 'lsi_word': ' msg,kernel,initialize,sigint,interrupt,', 'lsi_method': ' msg,extract_header,handle_sigint,initialize,interrupt_kernel,', 'spm_method': '  &#187; initialize(runapp.py) &rarr; handle_sigint(runapp.py) &rarr; interrupt_kernel(manager.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br>', 'text_summary': '', 'files_count': 4, 'files': ['runapp.py', 'manager.py', 'test_adapter.py', 'session.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'437': 'initialize(runapp.py)', '435': 'handle_sigint(runapp.py)', '355': 'interrupt_kernel(manager.py)', '520': 'msg(test_adapter.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '534': 'msg(test_adapter.py)'}}, {'key': 1773, 'parent': 2024, 'tfidf_word': 'extract handle header initialize interrupt kernel sigint msg ', 'tfidf_method': 'interrupt_kernel handle_sigint initialize extract_header msg msg msg ', 'lda_word': ' msg,initialize,header,sigint,extract,', 'lda_method': ' msg,extract_header,handle_sigint,interrupt_kernel,initialize,', 'lsi_word': ' msg,extract,kernel,initialize,interrupt,', 'lsi_method': ' msg,handle_sigint,initialize,interrupt_kernel,extract_header,', 'spm_method': '  &#187; initialize(runapp.py) &rarr; handle_sigint(runapp.py) &rarr; interrupt_kernel(manager.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br>', 'text_summary': '', 'files_count': 4, 'files': ['runapp.py', 'manager.py', 'test_adapter.py', 'session.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'437': 'initialize(runapp.py)', '435': 'handle_sigint(runapp.py)', '355': 'interrupt_kernel(manager.py)', '534': 'msg(test_adapter.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '520': 'msg(test_adapter.py)'}}, {'key': 186, 'parent': 2113, 'tfidf_word': 'EP: 186, Name: initialize &rarr; handle_sigint &rarr; interrupt_kernel', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 210, 'parent': 2113, 'tfidf_word': 'EP: 210, Name: initialize &rarr; handle_sigint &rarr; interrupt_kernel', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1983, 'parent': 2383, 'tfidf_word': 'initialize interrupt kernel send sigint adapt message serialize sign utcnow ', 'tfidf_method': 'interrupt_kernel handle_sigint initialize send Message utcnow serialize sign adapt ', 'lda_word': ' interrupt,handle,kernel,initialize,send,', 'lda_method': ' send,handle_sigint,interrupt_kernel,initialize,sign,', 'lsi_word': ' handle,sigint,initialize,kernel,send,', 'lsi_method': ' initialize,handle_sigint,send,interrupt_kernel,utcnow,', 'spm_method': ' ', 'text_summary': 'Interrupts the kernel by sending it a signal. Pass a message to the ZMQ socket to send.', 'files_count': 4, 'files': ['runapp.py', 'manager.py', 'session.py', 'adapter.py'], 'execution_path_count': 3, 'function_id_to_name_file': {'437': 'initialize(runapp.py)', '435': 'handle_sigint(runapp.py)', '355': 'interrupt_kernel(manager.py)', '480': 'send(session.py)', '50': 'adapt(adapter.py)', '450': 'utcnow(session.py)', '482': 'serialize(session.py)', '483': 'sign(session.py)', '440': 'Message(session.py)'}}, {'key': 2353, 'parent': 2383, 'tfidf_word': 'launch make url control signal thread send kernel connect socket ', 'tfidf_method': '_make_url _launch_kernel has_kernel send _connect_control_socket signal_kernel send thread_send send_interrupt send ', 'lda_word': ' send,thread,initialize,sigint,handle,', 'lda_method': ' interrupt_kernel,handle_sigint,initialize,send,make_url,', 'lsi_word': ' kernel,interrupt,handle,sigint,initialize,', 'lsi_method': ' initialize,interrupt_kernel,handle_sigint,send,make_url,', 'spm_method': ' ', 'text_summary': 'Interrupts the kernel by sending it a signal.', 'files_count': 6, 'files': ['runapp.py', 'manager.py', 'connect.py', 'threaded.py', 'channels.py', 'win_interrupt.py'], 'execution_path_count': 8, 'function_id_to_name_file': {'437': 'initialize(runapp.py)', '435': 'handle_sigint(runapp.py)', '355': 'interrupt_kernel(manager.py)', '354': 'has_kernel(manager.py)', '347': '_launch_kernel(manager.py)', '365': 'signal_kernel(manager.py)', '338': '_connect_control_socket(manager.py)', '192': '_create_connected_socket(connect.py)', '196': '_make_url(connect.py)', '734': 'send(threaded.py)', '738': 'thread_send(threaded.py)', '114': 'send(channels.py)', '88': 'send(channels.py)', '740': 'send_interrupt(win_interrupt.py)'}}, {'key': 1558, 'parent': 1971, 'tfidf_word': 'connection header id open passwordless try paramiko tunnel msg ', 'tfidf_method': 'msg msg_header msg_id _try_passwordless_paramiko open_tunnel paramiko_tunnel tunnel_connection msg msg ', 'lda_word': ' msg,tunnel,paramiko,header,connection,', 'lda_method': ' msg,try_passwordless_paramiko,msg_id,msg_header,paramiko_tunnel,', 'lsi_word': ' msg,tunnel,paramiko,try,connection,', 'lsi_method': ' msg,msg_id,try_passwordless_paramiko,open_tunnel,paramiko_tunnel,', 'spm_method': '  &#187; tunnel_connection(tunnel.py) &rarr; open_tunnel(tunnel.py) &rarr; paramiko_tunnel(tunnel.py) &rarr; _try_passwordless_paramiko(tunnel.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; open_tunnel(tunnel.py) &rarr; paramiko_tunnel(tunnel.py) &rarr; _try_passwordless_paramiko(tunnel.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; paramiko_tunnel(tunnel.py) &rarr; _try_passwordless_paramiko(tunnel.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br>', 'text_summary': 'Connect a socket to an address via an ssh tunnel.', 'files_count': 3, 'files': ['tunnel.py', 'test_adapter.py', 'session.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'505': 'tunnel_connection(tunnel.py)', '500': 'open_tunnel(tunnel.py)', '502': 'paramiko_tunnel(tunnel.py)', '499': '_try_passwordless_paramiko(tunnel.py)', '520': 'msg(test_adapter.py)', '476': 'msg(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '534': 'msg(test_adapter.py)'}}, {'key': 1559, 'parent': 1971, 'tfidf_word': 'connection header id open passwordless try paramiko tunnel msg ', 'tfidf_method': 'msg msg_header msg_id _try_passwordless_paramiko open_tunnel paramiko_tunnel tunnel_connection msg msg ', 'lda_word': ' msg,tunnel,paramiko,header,passwordless,', 'lda_method': ' msg,try_passwordless_paramiko,msg_header,paramiko_tunnel,msg_id,', 'lsi_word': ' msg,tunnel,paramiko,connection,open,', 'lsi_method': ' msg,msg_header,open_tunnel,paramiko_tunnel,msg_id,', 'spm_method': '  &#187; tunnel_connection(tunnel.py) &rarr; open_tunnel(tunnel.py) &rarr; paramiko_tunnel(tunnel.py) &rarr; _try_passwordless_paramiko(tunnel.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; open_tunnel(tunnel.py) &rarr; paramiko_tunnel(tunnel.py) &rarr; _try_passwordless_paramiko(tunnel.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; paramiko_tunnel(tunnel.py) &rarr; _try_passwordless_paramiko(tunnel.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br>', 'text_summary': 'Open a tunneled connection from a 0MQ url.', 'files_count': 3, 'files': ['tunnel.py', 'test_adapter.py', 'session.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'505': 'tunnel_connection(tunnel.py)', '500': 'open_tunnel(tunnel.py)', '502': 'paramiko_tunnel(tunnel.py)', '499': '_try_passwordless_paramiko(tunnel.py)', '534': 'msg(test_adapter.py)', '476': 'msg(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '520': 'msg(test_adapter.py)'}}, {'key': 1988, 'parent': 2294, 'tfidf_word': 'connection extract header open passwordless try paramiko msg tunnel ', 'tfidf_method': 'extract_header msg _try_passwordless_paramiko open_tunnel paramiko_tunnel tunnel_connection msg msg ', 'lda_word': ' tunnel,msg,paramiko,passwordless,header,', 'lda_method': ' msg,paramiko_tunnel,tunnel_connection,open_tunnel,extract_header,', 'lsi_word': ' tunnel,msg,paramiko,open,extract,', 'lsi_method': ' msg,open_tunnel,tunnel_connection,paramiko_tunnel,try_passwordless_paramiko,', 'spm_method': '  &#187; tunnel_connection(tunnel.py) &rarr; open_tunnel(tunnel.py) &rarr; paramiko_tunnel(tunnel.py) &rarr; _try_passwordless_paramiko(tunnel.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br> &#187; open_tunnel(tunnel.py) &rarr; paramiko_tunnel(tunnel.py) &rarr; _try_passwordless_paramiko(tunnel.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br>', 'text_summary': 'This should only be used Try passwordless login with paramiko. launch a tunner with paramiko in a subprocess.', 'files_count': 3, 'files': ['tunnel.py', 'test_adapter.py', 'session.py'], 'execution_path_count': 4, 'function_id_to_name_file': {'505': 'tunnel_connection(tunnel.py)', '500': 'open_tunnel(tunnel.py)', '502': 'paramiko_tunnel(tunnel.py)', '499': '_try_passwordless_paramiko(tunnel.py)', '520': 'msg(test_adapter.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '534': 'msg(test_adapter.py)'}}, {'key': 1997, 'parent': 2294, 'tfidf_word': 'passwordless try header paramiko extract id server split tunnel msg ', 'tfidf_method': '_try_passwordless_paramiko open_tunnel paramiko_tunnel tunnel_connection msg extract_header msg_header msg_id _split_server ', 'lda_word': ' tunnel,paramiko,connection,msg,try,', 'lda_method': ' open_tunnel,try_passwordless_paramiko,tunnel_connection,paramiko_tunnel,msg,', 'lsi_word': ' tunnel,paramiko,msg,passwordless,try,', 'lsi_method': ' paramiko_tunnel,tunnel_connection,open_tunnel,try_passwordless_paramiko,msg,', 'spm_method': ' ', 'text_summary': 'Connect a socket to an address via an ssh tunnel. launch a tunner with paramiko in a subprocess.', 'files_count': 2, 'files': ['tunnel.py', 'session.py'], 'execution_path_count': 3, 'function_id_to_name_file': {'505': 'tunnel_connection(tunnel.py)', '500': 'open_tunnel(tunnel.py)', '502': 'paramiko_tunnel(tunnel.py)', '499': '_try_passwordless_paramiko(tunnel.py)', '496': '_split_server(tunnel.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)'}}, {'key': 1843, 'parent': 1967, 'tfidf_word': 'close connection open port random select tunnel ', 'tfidf_method': 'open_tunnel select_random_ports tunnel_connection close close close close ', 'lda_word': ' port,tunnel,random,connection,open,', 'lda_method': ' select_random_ports,close,tunnel_connection,open_tunnel,', 'lsi_word': ' tunnel,select,open,connection,random,', 'lsi_method': ' close,open_tunnel,select_random_ports,tunnel_connection,', 'spm_method': ' ', 'text_summary': '', 'files_count': 3, 'files': ['tunnel.py', 'threaded.py', 'channels.py'], 'execution_path_count': 4, 'function_id_to_name_file': {'505': 'tunnel_connection(tunnel.py)', '500': 'open_tunnel(tunnel.py)', '503': 'select_random_ports(tunnel.py)', '730': 'close(threaded.py)', '718': 'close(threaded.py)', '109': 'close(channels.py)', '132': 'close(channels.py)'}}, {'key': 1966, 'parent': 1967, 'tfidf_word': 'connection open random select close port tunnel ', 'tfidf_method': 'open_tunnel select_random_ports tunnel_connection ports close ', 'lda_word': ' tunnel,select,port,open,connection,', 'lda_method': ' select_random_ports,open_tunnel,tunnel_connection,close,port,', 'lsi_word': ' tunnel,port,connection,select,open,', 'lsi_method': ' open_tunnel,select_random_ports,tunnel_connection,close,port,', 'spm_method': ' ', 'text_summary': '', 'files_count': 3, 'files': ['tunnel.py', 'channels.py', 'connect.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'505': 'tunnel_connection(tunnel.py)', '500': 'open_tunnel(tunnel.py)', '503': 'select_random_ports(tunnel.py)', '83': 'close(channels.py)', '211': 'ports(connect.py)'}}, {'key': 1763, 'parent': 2410, 'tfidf_word': 'connection open forward server split paramiko tunnel ', 'tfidf_method': '_paramiko_tunnel open_tunnel paramiko_tunnel tunnel_connection forward_tunnel _split_server ', 'lda_word': ' tunnel,paramiko,connection,open,split,', 'lda_method': ' paramiko_tunnel,open_tunnel,tunnel_connection,forward_tunnel,split_server,', 'lsi_word': ' tunnel,paramiko,open,connection,forward,', 'lsi_method': ' paramiko_tunnel,tunnel_connection,open_tunnel,split_server,forward_tunnel,', 'spm_method': ' ', 'text_summary': 'Connect a socket to an address via an ssh tunnel.', 'files_count': 2, 'files': ['tunnel.py', 'forward.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'505': 'tunnel_connection(tunnel.py)', '500': 'open_tunnel(tunnel.py)', '502': 'paramiko_tunnel(tunnel.py)', '495': '_paramiko_tunnel(tunnel.py)', '496': '_split_server(tunnel.py)', '491': 'forward_tunnel(forward.py)'}}, {'key': 1965, 'parent': 2410, 'tfidf_word': 'connection open openssh exception ssh stop tunnel ', 'tfidf_method': 'open_tunnel openssh_tunnel tunnel_connection SSHException _stop_tunnel ', 'lda_word': ' tunnel,openssh,open,connection,ssh,', 'lda_method': ' tunnel_connection,openssh_tunnel,open_tunnel,sshexception,stop_tunnel,', 'lsi_word': ' tunnel,open,openssh,connection,stop,', 'lsi_method': ' open_tunnel,openssh_tunnel,tunnel_connection,sshexception,stop_tunnel,', 'spm_method': ' ', 'text_summary': 'Connect a socket to an address via an ssh tunnel.', 'files_count': 1, 'files': ['tunnel.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'505': 'tunnel_connection(tunnel.py)', '500': 'open_tunnel(tunnel.py)', '501': 'openssh_tunnel(tunnel.py)', '494': 'SSHException(tunnel.py)', '497': '_stop_tunnel(tunnel.py)'}}, {'key': 185, 'parent': 2112, 'tfidf_word': 'EP: 185, Name: initialize &rarr; init_kernel_info &rarr; get_shell_msg', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2111, 'parent': 2112, 'tfidf_word': 'info init initialize kernel unpause ', 'tfidf_method': 'init_kernel_info initialize unpause unpause ', 'lda_word': ' kernel,unpause,init,initialize,info,', 'lda_method': ' unpause,init_kernel_info,initialize,', 'lsi_word': ' init,initialize,kernel,unpause,info,', 'lsi_method': ' init_kernel_info,initialize,unpause,', 'spm_method': ' ', 'text_summary': '', 'files_count': 3, 'files': ['runapp.py', 'channels.py', 'channelsabc.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'437': 'initialize(runapp.py)', '436': 'init_kernel_info(runapp.py)', '137': 'unpause(channels.py)', '146': 'unpause(channelsabc.py)'}}, {'key': 1981, 'parent': 2660, 'tfidf_word': 'header id init initialize info kernel msg ', 'tfidf_method': 'kernel_info init_kernel_info initialize msg msg_header msg_id msg msg ', 'lda_word': ' msg,info,kernel,initialize,header,', 'lda_method': ' msg,msg_header,kernel_info,msg_id,initialize,', 'lsi_word': ' msg,info,kernel,header,init,', 'lsi_method': ' msg,init_kernel_info,initialize,msg_id,msg_header,', 'spm_method': '  &#187; initialize(runapp.py) &rarr; init_kernel_info(runapp.py) &rarr; kernel_info(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; init_kernel_info(runapp.py) &rarr; kernel_info(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br>', 'text_summary': '', 'files_count': 4, 'files': ['runapp.py', 'client.py', 'test_adapter.py', 'session.py'], 'execution_path_count': 5, 'function_id_to_name_file': {'437': 'initialize(runapp.py)', '436': 'init_kernel_info(runapp.py)', '167': 'kernel_info(client.py)', '534': 'msg(test_adapter.py)', '476': 'msg(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '520': 'msg(test_adapter.py)'}}, {'key': 2020, 'parent': 2660, 'tfidf_word': 'extract header init initialize info kernel msg ', 'tfidf_method': 'kernel_info init_kernel_info initialize extract_header msg msg msg ', 'lda_word': ' msg,info,kernel,initialize,header,', 'lda_method': ' msg,initialize,extract_header,kernel_info,init_kernel_info,', 'lsi_word': ' msg,kernel,info,init,initialize,', 'lsi_method': ' msg,init_kernel_info,initialize,kernel_info,extract_header,', 'spm_method': '  &#187; initialize(runapp.py) &rarr; init_kernel_info(runapp.py) &rarr; kernel_info(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br>', 'text_summary': '', 'files_count': 4, 'files': ['runapp.py', 'client.py', 'test_adapter.py', 'session.py'], 'execution_path_count': 5, 'function_id_to_name_file': {'437': 'initialize(runapp.py)', '436': 'init_kernel_info(runapp.py)', '167': 'kernel_info(client.py)', '534': 'msg(test_adapter.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '520': 'msg(test_adapter.py)'}}, {'key': 1982, 'parent': 2661, 'tfidf_word': 'header id input start msg ', 'tfidf_method': 'input start start msg msg_header msg_id msg msg ', 'lda_word': ' msg,start,input,header,', 'lda_method': ' start,msg,input,msg_header,msg_id,', 'lsi_word': ' msg,start,input,header,', 'lsi_method': ' msg,start,msg_header,msg_id,input,', 'spm_method': '  &#187; start(kernelspecapp.py) &rarr; start(kernelspecapp.py) &rarr; input(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; start(kernelspecapp.py) &rarr; input(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br>', 'text_summary': '', 'files_count': 4, 'files': ['kernelspecapp.py', 'client.py', 'test_adapter.py', 'session.py'], 'execution_path_count': 5, 'function_id_to_name_file': {'291': 'start(kernelspecapp.py)', '297': 'start(kernelspecapp.py)', '162': 'input(client.py)', '534': 'msg(test_adapter.py)', '476': 'msg(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '520': 'msg(test_adapter.py)'}}, {'key': 2021, 'parent': 2661, 'tfidf_word': 'extract header input start msg ', 'tfidf_method': 'input start start extract_header msg msg msg ', 'lda_word': ' msg,start,header,input,extract,', 'lda_method': ' msg,start,input,extract_header,', 'lsi_word': ' msg,start,input,extract,header,', 'lsi_method': ' msg,start,input,extract_header,', 'spm_method': '  &#187; start(kernelspecapp.py) &rarr; start(kernelspecapp.py) &rarr; input(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br>', 'text_summary': '', 'files_count': 4, 'files': ['kernelspecapp.py', 'client.py', 'test_adapter.py', 'session.py'], 'execution_path_count': 5, 'function_id_to_name_file': {'291': 'start(kernelspecapp.py)', '297': 'start(kernelspecapp.py)', '162': 'input(client.py)', '534': 'msg(test_adapter.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '520': 'msg(test_adapter.py)'}}, {'key': 1980, 'parent': 2667, 'tfidf_word': 'header id kernel paramiko ssh tunnel passwordless try msg ', 'tfidf_method': 'tunnel_to_kernel msg msg_header msg_id _try_passwordless_paramiko try_passwordless_ssh msg msg ', 'lda_word': ' msg,passwordless,try,tunnel,kernel,', 'lda_method': ' msg,try_passwordless_paramiko,msg_id,try_passwordless_ssh,msg_header,', 'lsi_word': ' msg,try,passwordless,header,kernel,', 'lsi_method': ' msg,msg_header,msg_id,try_passwordless_paramiko,try_passwordless_ssh,', 'spm_method': '  &#187; tunnel_to_kernel(connect.py) &rarr; try_passwordless_ssh(tunnel.py) &rarr; _try_passwordless_paramiko(tunnel.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; try_passwordless_ssh(tunnel.py) &rarr; _try_passwordless_paramiko(tunnel.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br>', 'text_summary': '', 'files_count': 4, 'files': ['connect.py', 'tunnel.py', 'test_adapter.py', 'session.py'], 'execution_path_count': 5, 'function_id_to_name_file': {'190': 'tunnel_to_kernel(connect.py)', '504': 'try_passwordless_ssh(tunnel.py)', '499': '_try_passwordless_paramiko(tunnel.py)', '534': 'msg(test_adapter.py)', '476': 'msg(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '520': 'msg(test_adapter.py)'}}, {'key': 2404, 'parent': 2667, 'tfidf_word': 'extract header passwordless ssh try exception openssh server split msg ', 'tfidf_method': 'tunnel_to_kernel try_passwordless_ssh _try_passwordless_paramiko extract_header msg msg msg SSHException _split_server _try_passwordless_openssh ', 'lda_word': ' passwordless,try,msg,paramiko,kernel,', 'lda_method': ' tunnel_to_kernel,try_passwordless_ssh,try_passwordless_openssh,sshexception,msg,', 'lsi_word': ' try,passwordless,msg,ssh,kernel,', 'lsi_method': ' msg,tunnel_to_kernel,try_passwordless_ssh,try_passwordless_paramiko,extract_header,', 'spm_method': '  &#187; tunnel_to_kernel(connect.py) &rarr; try_passwordless_ssh(tunnel.py) &rarr; _try_passwordless_paramiko(tunnel.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br>', 'text_summary': 'Attempt to make an ssh connection without a password. Try passwordless login with shell ssh command. Try passwordless login with paramiko.', 'files_count': 4, 'files': ['connect.py', 'tunnel.py', 'test_adapter.py', 'session.py'], 'execution_path_count': 7, 'function_id_to_name_file': {'190': 'tunnel_to_kernel(connect.py)', '504': 'try_passwordless_ssh(tunnel.py)', '498': '_try_passwordless_openssh(tunnel.py)', '494': 'SSHException(tunnel.py)', '499': '_try_passwordless_paramiko(tunnel.py)', '496': '_split_server(tunnel.py)', '534': 'msg(test_adapter.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '520': 'msg(test_adapter.py)'}}, {'key': 307, 'parent': 1409, 'tfidf_word': 'EP: 307, Name: restart_kernel &rarr; shutdown_kernel &rarr; cleanup &rarr; cleanup_resources &rarr; _close_control_socket &rarr; _create_connected_socket &rarr; _make_url', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 378, 'parent': 1409, 'tfidf_word': 'EP: 378, Name: start_new_async_kernel &rarr; shutdown_kernel &rarr; cleanup &rarr; cleanup_resources &rarr; _close_control_socket &rarr; _create_connected_socket &rarr; _make_url', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 303, 'parent': 1469, 'tfidf_word': 'EP: 303, Name: restart_kernel &rarr; shutdown_kernel &rarr; cleanup_resources &rarr; _close_control_socket &rarr; _create_connected_socket &rarr; _make_url', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 374, 'parent': 1469, 'tfidf_word': 'EP: 374, Name: start_new_async_kernel &rarr; shutdown_kernel &rarr; cleanup_resources &rarr; _close_control_socket &rarr; _create_connected_socket &rarr; _make_url', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1295, 'parent': 1470, 'tfidf_word': 'EP: 1295, Name: do_execute &rarr; poll &rarr; restart_kernel &rarr; shutdown_kernel &rarr; cleanup_resources &rarr; _close_control_socket &rarr; _create_connected_socket &rarr; _make_url', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1299, 'parent': 1470, 'tfidf_word': 'EP: 1299, Name: do_execute &rarr; poll &rarr; restart_kernel &rarr; shutdown_kernel &rarr; cleanup &rarr; cleanup_resources &rarr; _close_control_socket &rarr; _create_connected_socket &rarr; _make_url', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 437, 'parent': 1592, 'tfidf_word': 'EP: 437, Name: run_kernel &rarr; start_new_kernel &rarr; shutdown_kernel &rarr; cleanup_resources &rarr; _close_control_socket &rarr; _create_connected_socket &rarr; _make_url', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 441, 'parent': 1592, 'tfidf_word': 'EP: 441, Name: run_kernel &rarr; start_new_kernel &rarr; shutdown_kernel &rarr; cleanup &rarr; cleanup_resources &rarr; _close_control_socket &rarr; _create_connected_socket &rarr; _make_url', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 312, 'parent': 1684, 'tfidf_word': 'EP: 312, Name: restart_kernel &rarr; shutdown_kernel &rarr; request_shutdown &rarr; _create_connected_socket &rarr; _make_url', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 383, 'parent': 1684, 'tfidf_word': 'EP: 383, Name: start_new_async_kernel &rarr; shutdown_kernel &rarr; request_shutdown &rarr; _create_connected_socket &rarr; _make_url', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 349, 'parent': 2263, 'tfidf_word': 'EP: 349, Name: interrupt_kernel &rarr; _connect_control_socket &rarr; _create_connected_socket &rarr; _make_url', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1474, 'parent': 2263, 'tfidf_word': 'request url async new restart start connect kernel shutdown socket ', 'tfidf_method': '_create_connected_socket _make_url shutdown_kernel _connect_control_socket request_shutdown start_new_async_kernel restart_kernel ', 'lda_word': ' kernel,shutdown,socket,connect,restart,', 'lda_method': ' shutdown_kernel,make_url,connect_control_socket,create_connected_socket,request_shutdown,', 'lsi_word': ' shutdown,socket,connect,kernel,request,', 'lsi_method': ' shutdown_kernel,create_connected_socket,make_url,request_shutdown,connect_control_socket,', 'spm_method': ' ', 'text_summary': 'Attempts to stop the kernel process cleanly. Restarts a kernel with the arguments that were used to launch it.', 'files_count': 2, 'files': ['manager.py', 'connect.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'330': 'restart_kernel(manager.py)', '331': 'shutdown_kernel(manager.py)', '362': 'request_shutdown(manager.py)', '338': '_connect_control_socket(manager.py)', '192': '_create_connected_socket(connect.py)', '196': '_make_url(connect.py)', '322': 'start_new_async_kernel(manager.py)'}}, {'key': 610, 'parent': 1914, 'tfidf_word': 'EP: 610, Name: AsyncIOLoopKernelManager &rarr; connect_control &rarr; _create_connected_socket &rarr; _make_url', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1901, 'parent': 1914, 'tfidf_word': 'make socket url channel io kernel loop manager connect control ', 'tfidf_method': '_create_connected_socket _make_url connect_control control_channel IOLoopKernelManager ', 'lda_word': ' connect,control,socket,create,make,', 'lda_method': ' connect_control,make_url,create_connected_socket,ioloopkernelmanager,control_channel,', 'lsi_word': ' connect,control,create,socket,make,', 'lsi_method': ' connect_control,create_connected_socket,make_url,ioloopkernelmanager,control_channel,', 'spm_method': ' ', 'text_summary': 'return zmq Socket connected to the Control channel.', 'files_count': 3, 'files': ['client.py', 'connect.py', 'manager.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'154': 'control_channel(client.py)', '203': 'connect_control(connect.py)', '192': '_create_connected_socket(connect.py)', '196': '_make_url(connect.py)', '225': 'IOLoopKernelManager(manager.py)'}}, {'key': 1913, 'parent': 2665, 'tfidf_word': 'socket url io kernel loop manager connect stdin async channel ', 'tfidf_method': '_create_connected_socket _make_url connect_stdin stdin_channel AsyncIOLoopKernelManager IOLoopKernelManager ', 'lda_word': ' stdin,socket,connect,create,url,', 'lda_method': ' connect_stdin,create_connected_socket,make_url,ioloopkernelmanager,stdin_channel,', 'lsi_word': ' connect,stdin,socket,make,url,', 'lsi_method': ' connect_stdin,create_connected_socket,make_url,asyncioloopkernelmanager,stdin_channel,', 'spm_method': ' ', 'text_summary': 'return zmq Socket connected to the StdIn channel.', 'files_count': 3, 'files': ['manager.py', 'connect.py', 'client.py'], 'execution_path_count': 3, 'function_id_to_name_file': {'224': 'AsyncIOLoopKernelManager(manager.py)', '207': 'connect_stdin(connect.py)', '192': '_create_connected_socket(connect.py)', '196': '_make_url(connect.py)', '171': 'stdin_channel(client.py)', '225': 'IOLoopKernelManager(manager.py)'}}, {'key': 2662, 'parent': 2665, 'tfidf_word': 'socket async channel hb del control close interrupt iopub shell ', 'tfidf_method': 'connect_iopub connect_shell AsyncIOLoopKernelManager IOLoopKernelManager connect_hb iopub_channel shell_channel interrupt_kernel __del__ _close_control_socket ', 'lda_word': ' connect,socket,kernel,make,create,', 'lda_method': ' create_connected_socket,make_url,asyncioloopkernelmanager,ioloopkernelmanager,connect_iopub,', 'lsi_word': ' connect,socket,make,url,create,', 'lsi_method': ' make_url,create_connected_socket,asyncioloopkernelmanager,ioloopkernelmanager,connect_shell,', 'spm_method': ' ', 'text_summary': 'Create a zmq Socket and connect it to the kernel.', 'files_count': 3, 'files': ['manager.py', 'connect.py', 'client.py'], 'execution_path_count': 10, 'function_id_to_name_file': {'224': 'AsyncIOLoopKernelManager(manager.py)', '206': 'connect_shell(connect.py)', '192': '_create_connected_socket(connect.py)', '196': '_make_url(connect.py)', '168': 'shell_channel(client.py)', '225': 'IOLoopKernelManager(manager.py)', '205': 'connect_iopub(connect.py)', '164': 'iopub_channel(client.py)', '204': 'connect_hb(connect.py)', '334': '__del__(manager.py)', '337': '_close_control_socket(manager.py)', '328': 'interrupt_kernel(manager.py)'}}, {'key': 615, 'parent': 2121, 'tfidf_word': 'EP: 615, Name: start_restarter &rarr; has_kernel &rarr; _launch_kernel', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2120, 'parent': 2121, 'tfidf_word': 'launch interrupt restarter start kernel ', 'tfidf_method': '_launch_kernel has_kernel start_restarter interrupt_kernel ', 'lda_word': ' kernel,launch,interrupt,restarter,start,', 'lda_method': ' has_kernel,start_restarter,launch_kernel,interrupt_kernel,', 'lsi_word': ' kernel,launch,interrupt,restarter,start,', 'lsi_method': ' launch_kernel,has_kernel,start_restarter,interrupt_kernel,', 'spm_method': ' ', 'text_summary': 'Interrupts the kernel by sending it a signal.', 'files_count': 1, 'files': ['manager.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'328': 'interrupt_kernel(manager.py)', '354': 'has_kernel(manager.py)', '347': '_launch_kernel(manager.py)', '231': 'start_restarter(manager.py)'}}, {'key': 1998, 'parent': 2355, 'tfidf_word': 'alive execute interactive launch kernel start ', 'tfidf_method': 'start _launch_kernel has_kernel is_alive start execute_interactive execute_interactive ', 'lda_word': ' start,alive,kernel,interactive,launch,', 'lda_method': ' start,has_kernel,execute_interactive,launch_kernel,is_alive,', 'lsi_word': ' start,kernel,alive,launch,execute,', 'lsi_method': ' start,has_kernel,is_alive,launch_kernel,execute_interactive,', 'spm_method': ' ', 'text_summary': 'Has a kernel been started that we are managing. actually launch the kernel.', 'files_count': 4, 'files': ['kernelspecapp.py', 'runapp.py', 'client.py', 'manager.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'291': 'start(kernelspecapp.py)', '439': 'start(runapp.py)', '122': 'execute_interactive(client.py)', '357': 'is_alive(manager.py)', '354': 'has_kernel(manager.py)', '347': '_launch_kernel(manager.py)', '97': 'execute_interactive(client.py)'}}, {'key': 2037, 'parent': 2355, 'tfidf_word': 'launch ready wait alive kernel beating channels execute poll stop ', 'tfidf_method': 'has_kernel is_alive is_alive wait_for_ready wait_for_ready is_beating is_alive poll do_execute stop_channels ', 'lda_word': ' kernel,alive,launch,ready,wait,', 'lda_method': ' has_kernel,launch_kernel,is_alive,do_execute,poll,', 'lsi_word': ' kernel,alive,launch,wait,ready,', 'lsi_method': ' is_alive,launch_kernel,has_kernel,wait_for_ready,do_execute,', 'spm_method': ' ', 'text_summary': '', 'files_count': 6, 'files': ['signalkernel.py', 'restarter.py', 'manager.py', 'client.py', 'channels.py', 'threaded.py'], 'execution_path_count': 5, 'function_id_to_name_file': {'510': 'do_execute(signalkernel.py)', '236': 'poll(restarter.py)', '357': 'is_alive(manager.py)', '354': 'has_kernel(manager.py)', '347': '_launch_kernel(manager.py)', '123': 'wait_for_ready(client.py)', '165': 'is_alive(client.py)', '104': 'wait_for_ready(client.py)', '103': 'is_alive(client.py)', '133': 'is_beating(channels.py)', '725': 'stop_channels(threaded.py)'}}, {'key': 1416, 'parent': 2261, 'tfidf_word': 'alive finish launch wait new restart start async shutdown kernel ', 'tfidf_method': '_async_wait finish_shutdown is_alive shutdown_kernel _launch_kernel has_kernel start_new_async_kernel restart_kernel ', 'lda_word': ' kernel,shutdown,alive,launch,wait,', 'lda_method': ' shutdown_kernel,is_alive,has_kernel,launch_kernel,finish_shutdown,', 'lsi_word': ' kernel,shutdown,async,finish,launch,', 'lsi_method': ' async_wait,has_kernel,shutdown_kernel,is_alive,launch_kernel,', 'spm_method': '  &#187; shutdown_kernel(manager.py) &rarr; finish_shutdown(manager.py) &rarr; _async_wait(manager.py) &rarr; is_alive(manager.py) &rarr; has_kernel(manager.py) &rarr; _launch_kernel(manager.py) . <br>', 'text_summary': 'actually launch the kernel. Restarts a kernel with the arguments that were used to launch it.', 'files_count': 1, 'files': ['manager.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'330': 'restart_kernel(manager.py)', '331': 'shutdown_kernel(manager.py)', '327': 'finish_shutdown(manager.py)', '324': '_async_wait(manager.py)', '329': 'is_alive(manager.py)', '354': 'has_kernel(manager.py)', '347': '_launch_kernel(manager.py)', '322': 'start_new_async_kernel(manager.py)'}}, {'key': 2006, 'parent': 2261, 'tfidf_word': 'kill launch wait finish new restart start async shutdown kernel ', 'tfidf_method': '_async_wait _kill_kernel is_alive shutdown_kernel _launch_kernel has_kernel start_new_async_kernel finish_shutdown restart_kernel ', 'lda_word': ' kernel,async,launch,alive,shutdown,', 'lda_method': ' async_wait,is_alive,launch_kernel,shutdown_kernel,has_kernel,', 'lsi_word': ' kernel,async,shutdown,kill,launch,', 'lsi_method': ' async_wait,launch_kernel,shutdown_kernel,kill_kernel,is_alive,', 'spm_method': '  &#187; restart_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; _kill_kernel(manager.py) &rarr; _async_wait(manager.py) &rarr; is_alive(manager.py) &rarr; has_kernel(manager.py) &rarr; _launch_kernel(manager.py) . <br> &#187; shutdown_kernel(manager.py) &rarr; finish_shutdown(manager.py) &rarr; _kill_kernel(manager.py) &rarr; _async_wait(manager.py) &rarr; is_alive(manager.py) &rarr; has_kernel(manager.py) &rarr; _launch_kernel(manager.py) . <br> &#187; finish_shutdown(manager.py) &rarr; _kill_kernel(manager.py) &rarr; _async_wait(manager.py) &rarr; is_alive(manager.py) &rarr; has_kernel(manager.py) &rarr; _launch_kernel(manager.py) . <br> &#187; start_new_async_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; _kill_kernel(manager.py) &rarr; _async_wait(manager.py) &rarr; is_alive(manager.py) &rarr; has_kernel(manager.py) &rarr; _launch_kernel(manager.py) . <br>', 'text_summary': "actually launch the kernel. Wait for kernel shutdown, then kill process if it doesn't shutdown. Kill the running kernel.", 'files_count': 1, 'files': ['manager.py'], 'execution_path_count': 4, 'function_id_to_name_file': {'330': 'restart_kernel(manager.py)', '331': 'shutdown_kernel(manager.py)', '327': 'finish_shutdown(manager.py)', '325': '_kill_kernel(manager.py)', '324': '_async_wait(manager.py)', '329': 'is_alive(manager.py)', '354': 'has_kernel(manager.py)', '347': '_launch_kernel(manager.py)', '322': 'start_new_async_kernel(manager.py)'}}, {'key': 2277, 'parent': 2673, 'tfidf_word': 'kill launch async finish new restart start shutdown kernel ', 'tfidf_method': '_kill_kernel shutdown_kernel _launch_kernel has_kernel start_new_async_kernel finish_shutdown restart_kernel ', 'lda_word': ' kernel,shutdown,kill,launch,new,', 'lda_method': ' kill_kernel,launch_kernel,shutdown_kernel,has_kernel,start_new_async_kernel,', 'lsi_word': ' kernel,shutdown,launch,kill,finish,', 'lsi_method': ' shutdown_kernel,launch_kernel,kill_kernel,has_kernel,finish_shutdown,', 'spm_method': ' ', 'text_summary': "actually launch the kernel. Wait for kernel shutdown, then kill process if it doesn't shutdown. Kill the running kernel.", 'files_count': 1, 'files': ['manager.py'], 'execution_path_count': 4, 'function_id_to_name_file': {'330': 'restart_kernel(manager.py)', '331': 'shutdown_kernel(manager.py)', '327': 'finish_shutdown(manager.py)', '325': '_kill_kernel(manager.py)', '354': 'has_kernel(manager.py)', '347': '_launch_kernel(manager.py)', '322': 'start_new_async_kernel(manager.py)'}}, {'key': 2295, 'parent': 2673, 'tfidf_word': 'signal kill async finish new restart start shutdown interrupt kernel ', 'tfidf_method': 'signal_kernel _launch_kernel has_kernel _kill_kernel shutdown_kernel start_new_async_kernel finish_shutdown restart_kernel interrupt_kernel ', 'lda_word': ' kernel,signal,shutdown,launch,kill,', 'lda_method': ' signal_kernel,launch_kernel,has_kernel,interrupt_kernel,restart_kernel,', 'lsi_word': ' kernel,shutdown,launch,signal,kill,', 'lsi_method': ' has_kernel,launch_kernel,signal_kernel,shutdown_kernel,kill_kernel,', 'spm_method': '  &#187; restart_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; _kill_kernel(manager.py) &rarr; signal_kernel(manager.py) &rarr; has_kernel(manager.py) &rarr; _launch_kernel(manager.py) . <br> &#187; shutdown_kernel(manager.py) &rarr; finish_shutdown(manager.py) &rarr; _kill_kernel(manager.py) &rarr; signal_kernel(manager.py) &rarr; has_kernel(manager.py) &rarr; _launch_kernel(manager.py) . <br> &#187; start_new_async_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; _kill_kernel(manager.py) &rarr; signal_kernel(manager.py) &rarr; has_kernel(manager.py) &rarr; _launch_kernel(manager.py) . <br>', 'text_summary': "Sends a signal to the process group of the kernel (this. Wait for kernel shutdown, then kill process if it doesn't shutdown. Interrupts the kernel by sending it a signal. Kill the running kernel.", 'files_count': 1, 'files': ['manager.py'], 'execution_path_count': 5, 'function_id_to_name_file': {'328': 'interrupt_kernel(manager.py)', '332': 'signal_kernel(manager.py)', '354': 'has_kernel(manager.py)', '347': '_launch_kernel(manager.py)', '330': 'restart_kernel(manager.py)', '331': 'shutdown_kernel(manager.py)', '327': 'finish_shutdown(manager.py)', '325': '_kill_kernel(manager.py)', '322': 'start_new_async_kernel(manager.py)'}}, {'key': 2279, 'parent': 2388, 'tfidf_word': 'header msg request async new restart send start kernel shutdown ', 'tfidf_method': 'shutdown_kernel request_shutdown extract_header msg start_new_async_kernel restart_kernel send ', 'lda_word': ' shutdown,kernel,header,msg,send,', 'lda_method': ' shutdown_kernel,request_shutdown,restart_kernel,msg,extract_header,', 'lsi_word': ' shutdown,kernel,extract,header,request,', 'lsi_method': ' request_shutdown,msg,shutdown_kernel,extract_header,send,', 'spm_method': ' ', 'text_summary': 'Attempts to stop the kernel process cleanly. Restarts a kernel with the arguments that were used to launch it. Pass a message to the ZMQ socket to send.', 'files_count': 2, 'files': ['manager.py', 'session.py'], 'execution_path_count': 4, 'function_id_to_name_file': {'330': 'restart_kernel(manager.py)', '331': 'shutdown_kernel(manager.py)', '362': 'request_shutdown(manager.py)', '480': 'send(session.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '322': 'start_new_async_kernel(manager.py)'}}, {'key': 2372, 'parent': 2388, 'tfidf_word': 'extract header request async new restart start kernel shutdown msg ', 'tfidf_method': 'shutdown_kernel request_shutdown extract_header msg msg msg start_new_async_kernel restart_kernel ', 'lda_word': ' shutdown,kernel,msg,header,request,', 'lda_method': ' msg,extract_header,request_shutdown,shutdown_kernel,start_new_async_kernel,', 'lsi_word': ' msg,shutdown,kernel,request,header,', 'lsi_method': ' msg,request_shutdown,shutdown_kernel,extract_header,restart_kernel,', 'spm_method': '  &#187; restart_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br> &#187; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) &rarr; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br> &#187; start_new_async_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br>', 'text_summary': 'Given a message or header, return the header. Attempts to stop the kernel process cleanly. Restarts a kernel with the arguments that were used to launch it.', 'files_count': 3, 'files': ['manager.py', 'test_adapter.py', 'session.py'], 'execution_path_count': 8, 'function_id_to_name_file': {'330': 'restart_kernel(manager.py)', '331': 'shutdown_kernel(manager.py)', '362': 'request_shutdown(manager.py)', '520': 'msg(test_adapter.py)', '534': 'msg(test_adapter.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '322': 'start_new_async_kernel(manager.py)'}}, {'key': 2319, 'parent': 2682, 'tfidf_word': 'new restart start kernel shutdown adapt message serialize sign utcnow ', 'tfidf_method': 'shutdown_kernel request_shutdown send start_new_async_kernel restart_kernel Message utcnow serialize sign adapt ', 'lda_word': ' kernel,shutdown,send,request,start,', 'lda_method': ' shutdown_kernel,request_shutdown,send,sign,serialize,', 'lsi_word': ' shutdown,kernel,request,send,async,', 'lsi_method': ' request_shutdown,shutdown_kernel,send,restart_kernel,start_new_async_kernel,', 'spm_method': ' ', 'text_summary': "If no auth, return b''. Return timezone-aware UTC timestamp. Pass a message to the ZMQ socket to send.", 'files_count': 3, 'files': ['manager.py', 'session.py', 'adapter.py'], 'execution_path_count': 6, 'function_id_to_name_file': {'330': 'restart_kernel(manager.py)', '331': 'shutdown_kernel(manager.py)', '362': 'request_shutdown(manager.py)', '480': 'send(session.py)', '50': 'adapt(adapter.py)', '450': 'utcnow(session.py)', '322': 'start_new_async_kernel(manager.py)', '482': 'serialize(session.py)', '483': 'sign(session.py)', '440': 'Message(session.py)'}}, {'key': 2387, 'parent': 2682, 'tfidf_word': 'request async new restart start kernel send shutdown thread ', 'tfidf_method': 'shutdown_kernel request_shutdown start_new_async_kernel restart_kernel send send thread_send send ', 'lda_word': ' shutdown,kernel,send,request,restart,', 'lda_method': ' restart_kernel,send,shutdown_kernel,request_shutdown,thread_send,', 'lsi_word': ' shutdown,kernel,send,request,new,', 'lsi_method': ' request_shutdown,send,shutdown_kernel,restart_kernel,start_new_async_kernel,', 'spm_method': ' ', 'text_summary': 'Attempts to stop the kernel process cleanly. Restarts a kernel with the arguments that were used to launch it. Send a shutdown request via control channel.', 'files_count': 3, 'files': ['manager.py', 'threaded.py', 'channels.py'], 'execution_path_count': 6, 'function_id_to_name_file': {'330': 'restart_kernel(manager.py)', '331': 'shutdown_kernel(manager.py)', '362': 'request_shutdown(manager.py)', '734': 'send(threaded.py)', '738': 'thread_send(threaded.py)', '322': 'start_new_async_kernel(manager.py)', '88': 'send(channels.py)', '114': 'send(channels.py)'}}, {'key': 2117, 'parent': 2688, 'tfidf_word': 'restarter shutdown stop async new restart start kernel ', 'tfidf_method': 'shutdown_kernel stop_restarter start_new_async_kernel restart_kernel ', 'lda_word': ' kernel,async,restarter,new,start,', 'lda_method': ' stop_restarter,start_new_async_kernel,shutdown_kernel,restart_kernel,', 'lsi_word': ' kernel,restarter,stop,shutdown,async,', 'lsi_method': ' shutdown_kernel,stop_restarter,restart_kernel,start_new_async_kernel,', 'spm_method': ' ', 'text_summary': '', 'files_count': 1, 'files': ['manager.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'330': 'restart_kernel(manager.py)', '331': 'shutdown_kernel(manager.py)', '368': 'stop_restarter(manager.py)', '322': 'start_new_async_kernel(manager.py)'}}, {'key': 2671, 'parent': 2688, 'tfidf_word': 'launch finish kill async new restart start shutdown kernel ', 'tfidf_method': '_launch_kernel shutdown_kernel _kill_kernel finish_shutdown start_new_async_kernel restart_kernel ', 'lda_word': ' kernel,shutdown,restart,launch,finish,', 'lda_method': ' shutdown_kernel,launch_kernel,kill_kernel,finish_shutdown,start_new_async_kernel,', 'lsi_word': ' kernel,shutdown,launch,kill,finish,', 'lsi_method': ' shutdown_kernel,launch_kernel,finish_shutdown,kill_kernel,restart_kernel,', 'spm_method': ' ', 'text_summary': "actually launch the kernel. Wait for kernel shutdown, then kill process if it doesn't shutdown.", 'files_count': 1, 'files': ['manager.py'], 'execution_path_count': 6, 'function_id_to_name_file': {'330': 'restart_kernel(manager.py)', '331': 'shutdown_kernel(manager.py)', '327': 'finish_shutdown(manager.py)', '326': '_launch_kernel(manager.py)', '322': 'start_new_async_kernel(manager.py)', '325': '_kill_kernel(manager.py)'}}, {'key': 2278, 'parent': 2691, 'tfidf_word': 'ipc port resource shutdown async new restart start kernel cleanup ', 'tfidf_method': 'cleanup_ipc_files ports shutdown_kernel cleanup_resources start_new_async_kernel restart_kernel cleanup ', 'lda_word': ' cleanup,kernel,start,port,shutdown,', 'lda_method': ' cleanup_ipc_files,shutdown_kernel,port,start_new_async_kernel,cleanup_resources,', 'lsi_word': ' cleanup,kernel,ipc,shutdown,resource,', 'lsi_method': ' shutdown_kernel,port,cleanup_resources,cleanup_ipc_files,cleanup,', 'spm_method': ' ', 'text_summary': '', 'files_count': 2, 'files': ['manager.py', 'connect.py'], 'execution_path_count': 4, 'function_id_to_name_file': {'330': 'restart_kernel(manager.py)', '331': 'shutdown_kernel(manager.py)', '349': 'cleanup(manager.py)', '350': 'cleanup_resources(manager.py)', '201': 'cleanup_ipc_files(connect.py)', '211': 'ports(connect.py)', '322': 'start_new_async_kernel(manager.py)'}}, {'key': 2381, 'parent': 2691, 'tfidf_word': 'connection file resource shutdown async new restart start kernel cleanup ', 'tfidf_method': 'cleanup_connection_file shutdown_kernel cleanup_resources start_new_async_kernel restart_kernel cleanup ', 'lda_word': ' cleanup,kernel,shutdown,resource,connection,', 'lda_method': ' cleanup_resources,shutdown_kernel,cleanup_connection_file,start_new_async_kernel,cleanup,', 'lsi_word': ' cleanup,kernel,file,shutdown,resource,', 'lsi_method': ' cleanup_connection_file,cleanup_resources,shutdown_kernel,cleanup,start_new_async_kernel,', 'spm_method': ' ', 'text_summary': '', 'files_count': 2, 'files': ['manager.py', 'connect.py'], 'execution_path_count': 4, 'function_id_to_name_file': {'330': 'restart_kernel(manager.py)', '331': 'shutdown_kernel(manager.py)', '349': 'cleanup(manager.py)', '350': 'cleanup_resources(manager.py)', '200': 'cleanup_connection_file(connect.py)', '322': 'start_new_async_kernel(manager.py)'}}, {'key': 958, 'parent': 1541, 'tfidf_word': 'EP: 958, Name: test_object_info_reply &rarr; msg &rarr; msg &rarr; msg &rarr; msg_header &rarr; msg_id', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1540, 'parent': 1541, 'tfidf_word': 'raw version type kernel interrupt info identity feed object msg ', 'tfidf_method': 'test_rename_type test_execute_request test_no_adapt test_send_raw test_execute_reply test_complete_request test_complete_reply interrupt_kernel test_object_info_request test_serialize ', 'lda_word': ' msg,raw,send,header,test,', 'lda_method': ' msg,msg_header,msg_id,test_serialize,test_execute_reply,', 'lsi_word': ' msg,header,test,request,complete,', 'lsi_method': ' msg,msg_header,msg_id,test_object_info_request,test_send,', 'spm_method': ' ', 'text_summary': 'Interrupts the kernel by sending it a signal.', 'files_count': 5, 'files': ['test_adapter.py', 'session.py', 'test_session.py', 'manager.py', 'client.py'], 'execution_path_count': 15, 'function_id_to_name_file': {'531': 'test_object_info_request(test_adapter.py)', '520': 'msg(test_adapter.py)', '534': 'msg(test_adapter.py)', '476': 'msg(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '521': 'test_complete_reply(test_adapter.py)', '522': 'test_complete_request(test_adapter.py)', '524': 'test_execute_reply(test_adapter.py)', '525': 'test_execute_request(test_adapter.py)', '532': 'test_rename_type(test_adapter.py)', '528': 'test_no_adapt(test_adapter.py)', '533': 'test_same_version(test_adapter.py)', '695': 'test_send_raw(test_session.py)', '692': 'test_feed_identities(test_session.py)', '694': 'test_send(test_session.py)', '696': 'test_serialize(test_session.py)', '693': 'test_msg(test_session.py)', '328': 'interrupt_kernel(manager.py)', '166': 'is_complete(client.py)'}}, {'key': 1022, 'parent': 1661, 'tfidf_word': 'EP: 1022, Name: test_inspect_reply &rarr; msg &rarr; msg &rarr; msg_header &rarr; msg_id', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1660, 'parent': 1661, 'tfidf_word': 'token reply version raw type identity feed execute rename msg ', 'tfidf_method': 'test_complete_request test_execute_request test_inspect_request test_inspect_request_token test_no_adapt test_rename_type test_same_version test_feed_identities test_send test_send_raw ', 'lda_word': ' msg,test,header,request,complete,', 'lda_method': ' msg,msg_id,msg_header,test_complete_request,test_no_adapt,', 'lsi_word': ' msg,header,test,request,inspect,', 'lsi_method': ' msg,msg_header,msg_id,test_inspect_request_token,test_complete_request,', 'spm_method': ' ', 'text_summary': 'Empty', 'files_count': 3, 'files': ['test_adapter.py', 'session.py', 'test_session.py'], 'execution_path_count': 11, 'function_id_to_name_file': {'542': 'test_inspect_request_token(test_adapter.py)', '534': 'msg(test_adapter.py)', '476': 'msg(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '541': 'test_inspect_request(test_adapter.py)', '535': 'test_complete_reply(test_adapter.py)', '536': 'test_complete_request(test_adapter.py)', '538': 'test_execute_request(test_adapter.py)', '545': 'test_rename_type(test_adapter.py)', '546': 'test_same_version(test_adapter.py)', '544': 'test_no_adapt(test_adapter.py)', '695': 'test_send_raw(test_session.py)', '694': 'test_send(test_session.py)', '692': 'test_feed_identities(test_session.py)'}}, {'key': 1024, 'parent': 1554, 'tfidf_word': 'EP: 1024, Name: test_inspect_reply &rarr; msg &rarr; msg &rarr; msg &rarr; msg_header &rarr; msg_id', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1553, 'parent': 1554, 'tfidf_word': 'rename version type kernel interrupt identity feed execute raw msg ', 'tfidf_method': 'test_rename_type test_no_adapt test_execute_request test_inspect_request test_send_raw test_complete_request test_complete_reply interrupt_kernel test_inspect_request_token test_serialize ', 'lda_word': ' msg,header,test,request,complete,', 'lda_method': ' msg,msg_id,msg_header,test_same_version,test_complete_reply,', 'lsi_word': ' msg,header,test,request,complete,', 'lsi_method': ' msg,msg_header,msg_id,test_inspect_request_token,test_complete_reply,', 'spm_method': ' ', 'text_summary': 'Ask the kernel whether some code is complete and ready to execute.', 'files_count': 5, 'files': ['test_adapter.py', 'session.py', 'test_session.py', 'manager.py', 'client.py'], 'execution_path_count': 15, 'function_id_to_name_file': {'542': 'test_inspect_request_token(test_adapter.py)', '534': 'msg(test_adapter.py)', '520': 'msg(test_adapter.py)', '476': 'msg(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '541': 'test_inspect_request(test_adapter.py)', '535': 'test_complete_reply(test_adapter.py)', '536': 'test_complete_request(test_adapter.py)', '538': 'test_execute_request(test_adapter.py)', '545': 'test_rename_type(test_adapter.py)', '544': 'test_no_adapt(test_adapter.py)', '546': 'test_same_version(test_adapter.py)', '695': 'test_send_raw(test_session.py)', '692': 'test_feed_identities(test_session.py)', '694': 'test_send(test_session.py)', '696': 'test_serialize(test_session.py)', '693': 'test_msg(test_session.py)', '328': 'interrupt_kernel(manager.py)', '166': 'is_complete(client.py)'}}, {'key': 966, 'parent': 1652, 'tfidf_word': 'EP: 966, Name: test_kernel_info_reply &rarr; msg &rarr; msg &rarr; msg_header &rarr; msg_id', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1651, 'parent': 1652, 'tfidf_word': 'send adapt rename version type identity found feed raw msg ', 'tfidf_method': 'test_object_info_request test_object_info_reply_not_found test_no_adapt test_send test_execute_request test_execute_reply test_complete_request test_complete_reply test_object_info_reply test_send_raw ', 'lda_word': ' msg,test,header,object,request,', 'lda_method': ' msg,msg_id,msg_header,test_object_info_reply_not_found,test_execute_reply,', 'lsi_word': ' msg,test,header,reply,object,', 'lsi_method': ' msg,msg_id,msg_header,test_object_info_reply_not_found,test_complete_request,', 'spm_method': ' ', 'text_summary': 'Empty', 'files_count': 3, 'files': ['test_adapter.py', 'session.py', 'test_session.py'], 'execution_path_count': 13, 'function_id_to_name_file': {'530': 'test_object_info_reply_not_found(test_adapter.py)', '520': 'msg(test_adapter.py)', '476': 'msg(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '529': 'test_object_info_reply(test_adapter.py)', '531': 'test_object_info_request(test_adapter.py)', '521': 'test_complete_reply(test_adapter.py)', '522': 'test_complete_request(test_adapter.py)', '524': 'test_execute_reply(test_adapter.py)', '525': 'test_execute_request(test_adapter.py)', '532': 'test_rename_type(test_adapter.py)', '533': 'test_same_version(test_adapter.py)', '528': 'test_no_adapt(test_adapter.py)', '695': 'test_send_raw(test_session.py)', '694': 'test_send(test_session.py)', '692': 'test_feed_identities(test_session.py)'}}, {'key': 361, 'parent': 1691, 'tfidf_word': 'EP: 361, Name: interrupt_kernel &rarr; msg &rarr; msg &rarr; msg_header &rarr; msg_id', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 493, 'parent': 1691, 'tfidf_word': 'EP: 493, Name: is_complete &rarr; msg &rarr; msg &rarr; msg_header &rarr; msg_id', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 903, 'parent': 1835, 'tfidf_word': 'EP: 903, Name: test_default_version &rarr; msg &rarr; msg_header &rarr; msg_id', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1834, 'parent': 1835, 'tfidf_word': 'header id test send feed identity raw serialize msg ', 'tfidf_method': 'msg msg_header msg_id test_feed_identities test_msg test_send test_send_raw test_serialize ', 'lda_word': ' msg,header,test,send,serialize,', 'lda_method': ' msg_header,msg_id,msg,test_feed_identities,test_msg,', 'lsi_word': ' msg,test,header,send,raw,', 'lsi_method': ' msg,msg_header,msg_id,test_send_raw,test_msg,', 'spm_method': ' ', 'text_summary': '', 'files_count': 2, 'files': ['test_session.py', 'session.py'], 'execution_path_count': 5, 'function_id_to_name_file': {'695': 'test_send_raw(test_session.py)', '476': 'msg(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '692': 'test_feed_identities(test_session.py)', '694': 'test_send(test_session.py)', '693': 'test_msg(test_session.py)', '696': 'test_serialize(test_session.py)'}}, {'key': 348, 'parent': 1887, 'tfidf_word': 'EP: 348, Name: interrupt_kernel &rarr; msg &rarr; msg_header &rarr; msg_id', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 491, 'parent': 1887, 'tfidf_word': 'EP: 491, Name: is_complete &rarr; msg &rarr; msg_header &rarr; msg_id', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 967, 'parent': 1637, 'tfidf_word': 'EP: 967, Name: test_kernel_info_reply &rarr; msg &rarr; msg &rarr; msg &rarr; extract_header', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1636, 'parent': 1637, 'tfidf_word': 'send msg rename adapt type identity found feed raw version ', 'tfidf_method': 'test_object_info_request test_object_info_reply_not_found test_object_info_reply test_no_adapt test_execute_request test_execute_reply test_complete_request test_complete_reply test_send test_send_raw ', 'lda_word': ' msg,header,extract,test,type,', 'lda_method': ' msg,extract_header,test_complete_request,test_complete_reply,test_object_info_reply,', 'lsi_word': ' msg,header,test,extract,reply,', 'lsi_method': ' msg,extract_header,test_execute_request,test_same_version,test_send_raw,', 'spm_method': ' ', 'text_summary': '', 'files_count': 3, 'files': ['test_adapter.py', 'session.py', 'test_session.py'], 'execution_path_count': 13, 'function_id_to_name_file': {'530': 'test_object_info_reply_not_found(test_adapter.py)', '520': 'msg(test_adapter.py)', '534': 'msg(test_adapter.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '529': 'test_object_info_reply(test_adapter.py)', '531': 'test_object_info_request(test_adapter.py)', '521': 'test_complete_reply(test_adapter.py)', '522': 'test_complete_request(test_adapter.py)', '524': 'test_execute_reply(test_adapter.py)', '525': 'test_execute_request(test_adapter.py)', '532': 'test_rename_type(test_adapter.py)', '533': 'test_same_version(test_adapter.py)', '528': 'test_no_adapt(test_adapter.py)', '695': 'test_send_raw(test_session.py)', '694': 'test_send(test_session.py)', '692': 'test_feed_identities(test_session.py)'}}, {'key': 362, 'parent': 1670, 'tfidf_word': 'EP: 362, Name: interrupt_kernel &rarr; msg &rarr; msg &rarr; msg &rarr; extract_header', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 494, 'parent': 1670, 'tfidf_word': 'EP: 494, Name: is_complete &rarr; msg &rarr; msg &rarr; msg &rarr; extract_header', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1815, 'parent': 1850, 'tfidf_word': 'send msg adapt feed identity raw rename serialize type version ', 'tfidf_method': 'msg msg test_no_adapt test_rename_type test_same_version test_feed_identities test_msg test_send test_send_raw test_serialize ', 'lda_word': ' msg,test,header,extract,rename,', 'lda_method': ' msg,extract_header,test_send_raw,test_msg,test_same_version,', 'lsi_word': ' msg,extract,test,header,send,', 'lsi_method': ' msg,extract_header,test_rename_type,test_send_raw,test_serialize,', 'spm_method': ' ', 'text_summary': '', 'files_count': 3, 'files': ['test_adapter.py', 'session.py', 'test_session.py'], 'execution_path_count': 8, 'function_id_to_name_file': {'545': 'test_rename_type(test_adapter.py)', '534': 'msg(test_adapter.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '544': 'test_no_adapt(test_adapter.py)', '546': 'test_same_version(test_adapter.py)', '695': 'test_send_raw(test_session.py)', '692': 'test_feed_identities(test_session.py)', '694': 'test_send(test_session.py)', '693': 'test_msg(test_session.py)', '696': 'test_serialize(test_session.py)'}}, {'key': 1848, 'parent': 1850, 'tfidf_word': 'extract header complete interrupt kernel msg ', 'tfidf_method': 'extract_header msg msg is_complete interrupt_kernel ', 'lda_word': ' msg,extract,header,complete,kernel,', 'lda_method': ' msg,extract_header,interrupt_kernel,is_complete,', 'lsi_word': ' msg,extract,header,interrupt,kernel,', 'lsi_method': ' msg,extract_header,interrupt_kernel,is_complete,', 'spm_method': ' ', 'text_summary': '', 'files_count': 4, 'files': ['manager.py', 'test_adapter.py', 'session.py', 'client.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'328': 'interrupt_kernel(manager.py)', '534': 'msg(test_adapter.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '166': 'is_complete(client.py)'}}, {'key': 1031, 'parent': 1818, 'tfidf_word': 'EP: 1031, Name: test_display_data &rarr; msg &rarr; msg &rarr; extract_header', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1817, 'parent': 1818, 'tfidf_word': 'extract header test inspect reply msg info kernel request token ', 'tfidf_method': 'extract_header msg msg test_inspect_reply test_inspect_request_token test_kernel_info_reply ', 'lda_word': ' msg,header,test,extract,reply,', 'lda_method': ' msg,extract_header,test_inspect_reply,test_inspect_request_token,test_kernel_info_reply,', 'lsi_word': ' msg,test,extract,header,reply,', 'lsi_method': ' msg,extract_header,test_inspect_request_token,test_inspect_reply,test_kernel_info_reply,', 'spm_method': ' ', 'text_summary': '', 'files_count': 2, 'files': ['test_adapter.py', 'session.py'], 'execution_path_count': 3, 'function_id_to_name_file': {'543': 'test_kernel_info_reply(test_adapter.py)', '534': 'msg(test_adapter.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '542': 'test_inspect_request_token(test_adapter.py)', '540': 'test_inspect_reply(test_adapter.py)'}}, {'key': 857, 'parent': 2072, 'tfidf_word': 'EP: 857, Name: test_send_raw &rarr; msg &rarr; extract_header', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2064, 'parent': 2072, 'tfidf_word': 'extract header msg test feed identity send ', 'tfidf_method': 'extract_header msg test_feed_identities test_send ', 'lda_word': ' extract,header,msg,test,identity,', 'lda_method': ' extract_header,msg,test_send,test_feed_identities,', 'lsi_word': ' header,msg,test,extract,identity,', 'lsi_method': ' extract_header,msg,test_feed_identities,test_send,', 'spm_method': ' ', 'text_summary': '', 'files_count': 2, 'files': ['test_session.py', 'session.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'694': 'test_send(test_session.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '692': 'test_feed_identities(test_session.py)'}}, {'key': 729, 'parent': 2152, 'tfidf_word': 'EP: 729, Name: test_msg &rarr; msg &rarr; extract_header', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2122, 'parent': 2152, 'tfidf_word': 'extract header msg complete interrupt kernel ', 'tfidf_method': 'extract_header msg is_complete interrupt_kernel ', 'lda_word': ' header,msg,extract,interrupt,kernel,', 'lda_method': ' extract_header,msg,interrupt_kernel,is_complete,', 'lsi_word': ' extract,header,msg,interrupt,kernel,', 'lsi_method': ' msg,extract_header,interrupt_kernel,is_complete,', 'spm_method': ' ', 'text_summary': '', 'files_count': 3, 'files': ['manager.py', 'session.py', 'client.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'328': 'interrupt_kernel(manager.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '166': 'is_complete(client.py)'}}, {'key': 1033, 'parent': 1625, 'tfidf_word': 'EP: 1033, Name: test_display_data &rarr; msg &rarr; msg &rarr; msg &rarr; extract_header', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1624, 'parent': 1625, 'tfidf_word': 'token rename kernel type info identity feed execute raw version ', 'tfidf_method': 'test_no_adapt test_kernel_info_reply test_inspect_request test_send test_inspect_reply test_execute_request test_complete_request test_complete_reply test_inspect_request_token test_send_raw ', 'lda_word': ' msg,extract,test,header,request,', 'lda_method': ' msg,extract_header,test_complete_reply,test_send_raw,test_kernel_info_reply,', 'lsi_word': ' msg,header,extract,test,request,', 'lsi_method': ' msg,extract_header,test_inspect_request_token,test_feed_identities,test_no_adapt,', 'spm_method': ' ', 'text_summary': '', 'files_count': 3, 'files': ['test_adapter.py', 'session.py', 'test_session.py'], 'execution_path_count': 13, 'function_id_to_name_file': {'543': 'test_kernel_info_reply(test_adapter.py)', '534': 'msg(test_adapter.py)', '520': 'msg(test_adapter.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '540': 'test_inspect_reply(test_adapter.py)', '542': 'test_inspect_request_token(test_adapter.py)', '541': 'test_inspect_request(test_adapter.py)', '535': 'test_complete_reply(test_adapter.py)', '536': 'test_complete_request(test_adapter.py)', '538': 'test_execute_request(test_adapter.py)', '545': 'test_rename_type(test_adapter.py)', '546': 'test_same_version(test_adapter.py)', '544': 'test_no_adapt(test_adapter.py)', '695': 'test_send_raw(test_session.py)', '694': 'test_send(test_session.py)', '692': 'test_feed_identities(test_session.py)'}}, {'key': 737, 'parent': 1667, 'tfidf_word': 'EP: 737, Name: test_msg &rarr; msg &rarr; msg &rarr; msg &rarr; extract_header', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1666, 'parent': 1667, 'tfidf_word': 'extract header complete interrupt kernel msg ', 'tfidf_method': 'extract_header msg msg msg is_complete interrupt_kernel ', 'lda_word': ' msg,header,extract,complete,interrupt,', 'lda_method': ' msg,extract_header,is_complete,interrupt_kernel,', 'lsi_word': ' msg,header,extract,interrupt,kernel,', 'lsi_method': ' msg,extract_header,is_complete,interrupt_kernel,', 'spm_method': ' ', 'text_summary': '', 'files_count': 4, 'files': ['manager.py', 'test_adapter.py', 'session.py', 'client.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'328': 'interrupt_kernel(manager.py)', '534': 'msg(test_adapter.py)', '520': 'msg(test_adapter.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '166': 'is_complete(client.py)'}}, {'key': 930, 'parent': 1851, 'tfidf_word': 'EP: 930, Name: test_execute_request &rarr; msg &rarr; msg &rarr; extract_header', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1849, 'parent': 1851, 'tfidf_word': 'complete feed identity interrupt kernel raw rename serialize type version ', 'tfidf_method': 'is_complete interrupt_kernel test_no_adapt test_rename_type test_same_version test_feed_identities test_msg test_send test_send_raw test_serialize ', 'lda_word': ' msg,extract,header,test,send,', 'lda_method': ' msg,extract_header,test_rename_type,test_msg,test_send,', 'lsi_word': ' msg,header,extract,test,send,', 'lsi_method': ' msg,extract_header,test_send_raw,test_feed_identities,test_no_adapt,', 'spm_method': ' ', 'text_summary': 'Given a message or header, return the header.', 'files_count': 5, 'files': ['test_adapter.py', 'session.py', 'test_session.py', 'manager.py', 'client.py'], 'execution_path_count': 10, 'function_id_to_name_file': {'532': 'test_rename_type(test_adapter.py)', '520': 'msg(test_adapter.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '528': 'test_no_adapt(test_adapter.py)', '533': 'test_same_version(test_adapter.py)', '695': 'test_send_raw(test_session.py)', '692': 'test_feed_identities(test_session.py)', '694': 'test_send(test_session.py)', '693': 'test_msg(test_session.py)', '696': 'test_serialize(test_session.py)', '328': 'interrupt_kernel(manager.py)', '166': 'is_complete(client.py)'}}, {'key': 975, 'parent': 1812, 'tfidf_word': 'EP: 975, Name: test_input_request &rarr; msg &rarr; msg &rarr; extract_header', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1811, 'parent': 1812, 'tfidf_word': 'test info object reply msg data display found kernel request ', 'tfidf_method': 'extract_header msg msg test_display_data test_kernel_info_reply test_object_info_reply test_object_info_reply_not_found test_object_info_request ', 'lda_word': ' msg,header,extract,test,object,', 'lda_method': ' msg,extract_header,test_object_info_request,test_object_info_reply_not_found,test_display_data,', 'lsi_word': ' msg,extract,header,test,info,', 'lsi_method': ' msg,extract_header,test_object_info_reply,test_display_data,test_kernel_info_reply,', 'spm_method': ' ', 'text_summary': '', 'files_count': 2, 'files': ['test_adapter.py', 'session.py'], 'execution_path_count': 5, 'function_id_to_name_file': {'523': 'test_display_data(test_adapter.py)', '520': 'msg(test_adapter.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '527': 'test_kernel_info_reply(test_adapter.py)', '530': 'test_object_info_reply_not_found(test_adapter.py)', '531': 'test_object_info_request(test_adapter.py)', '529': 'test_object_info_reply(test_adapter.py)'}}, {'key': 941, 'parent': 1853, 'tfidf_word': 'EP: 941, Name: test_complete_request &rarr; msg &rarr; msg &rarr; extract_header', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 945, 'parent': 1853, 'tfidf_word': 'EP: 945, Name: test_complete_reply &rarr; msg &rarr; msg &rarr; extract_header', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 243, 'parent': 1822, 'tfidf_word': 'EP: 243, Name: start &rarr; start &rarr; execute_interactive &rarr; is_alive', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1821, 'parent': 1822, 'tfidf_word': 'alive execute interactive start ', 'tfidf_method': 'execute_interactive start start is_alive is_alive is_alive ', 'lda_word': ' start,interactive,alive,execute,', 'lda_method': ' start,is_alive,execute_interactive,', 'lsi_word': ' start,alive,execute,interactive,', 'lsi_method': ' start,is_alive,execute_interactive,', 'spm_method': ' ', 'text_summary': '', 'files_count': 6, 'files': ['kernelspecapp.py', 'runapp.py', 'client.py', 'multikernelmanager.py', 'channelsabc.py', 'channels.py'], 'execution_path_count': 3, 'function_id_to_name_file': {'291': 'start(kernelspecapp.py)', '439': 'start(runapp.py)', '122': 'execute_interactive(client.py)', '412': 'is_alive(multikernelmanager.py)', '140': 'is_alive(channelsabc.py)', '86': 'is_alive(channels.py)'}}, {'key': 254, 'parent': 1826, 'tfidf_word': 'EP: 254, Name: start &rarr; start &rarr; execute_interactive &rarr; is_alive', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1825, 'parent': 1826, 'tfidf_word': 'execute interactive alive start default hook output ', 'tfidf_method': 'start start execute_interactive is_alive is_alive _output_hook_default ', 'lda_word': ' start,execute,interactive,alive,hook,', 'lda_method': ' start,execute_interactive,output_hook_default,is_alive,', 'lsi_word': ' start,interactive,execute,alive,hook,', 'lsi_method': ' start,execute_interactive,is_alive,output_hook_default,', 'spm_method': ' ', 'text_summary': '', 'files_count': 5, 'files': ['kernelspecapp.py', 'runapp.py', 'client.py', 'multikernelmanager.py', 'channels.py'], 'execution_path_count': 3, 'function_id_to_name_file': {'291': 'start(kernelspecapp.py)', '439': 'start(runapp.py)', '97': 'execute_interactive(client.py)', '412': 'is_alive(multikernelmanager.py)', '86': 'is_alive(channels.py)', '93': '_output_hook_default(client.py)'}}, {'key': 810, 'parent': 1931, 'tfidf_word': 'EP: 810, Name: test_zero_digest_history &rarr; __init__ &rarr; _check_packers &rarr; utcnow', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 811, 'parent': 1931, 'tfidf_word': 'EP: 811, Name: test_zero_digest_history &rarr; __init__ &rarr; _check_packers &rarr; squash_dates', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1930, 'parent': 2323, 'tfidf_word': 'check id init packer session test date squash utcnow ', 'tfidf_method': '__init__ _check_packers test_session_id squash_dates utcnow ', 'lda_word': ' check,init,session,test,packer,', 'lda_method': ' init,test_session_id,check_packers,squash_dates,utcnow,', 'lsi_word': ' test,packer,session,init,check,', 'lsi_method': ' check_packers,init,test_session_id,squash_dates,utcnow,', 'spm_method': ' ', 'text_summary': '', 'files_count': 3, 'files': ['test_session.py', 'session.py', 'jsonutil.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'697': 'test_session_id(test_session.py)', '457': '__init__(session.py)', '459': '_check_packers(session.py)', '450': 'utcnow(session.py)', '244': 'squash_dates(jsonutil.py)'}}, {'key': 2322, 'parent': 2323, 'tfidf_word': 'check init packer args date set squash test up utcnow ', 'tfidf_method': '__init__ _check_packers squash_dates utcnow setUp test_args ', 'lda_word': ' utcnow,check,init,packer,test,', 'lda_method': ' init,check_packers,setup,utcnow,test_args,', 'lsi_word': ' check,init,packer,date,squash,', 'lsi_method': ' init,check_packers,test_args,squash_dates,utcnow,', 'spm_method': ' ', 'text_summary': 'Return timezone-aware UTC timestamp. initialization arguments for Session.', 'files_count': 3, 'files': ['test_session.py', 'session.py', 'jsonutil.py'], 'execution_path_count': 4, 'function_id_to_name_file': {'678': 'setUp(test_session.py)', '457': '__init__(session.py)', '459': '_check_packers(session.py)', '450': 'utcnow(session.py)', '244': 'squash_dates(jsonutil.py)', '680': 'test_args(test_session.py)'}}, {'key': 1178, 'parent': 1441, 'tfidf_word': 'EP: 1178, Name: test_tcp_lifecycle &rarr; raw_tcp_lifecycle &rarr; _get_tcp_km &rarr; AsyncMultiKernelManager &rarr; MultiKernelManager &rarr; KernelSpecManager &rarr; KernelSpec', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1181, 'parent': 1441, 'tfidf_word': 'EP: 1181, Name: test_tcp_lifecycle_with_kernel_id &rarr; raw_tcp_lifecycle &rarr; _get_tcp_km &rarr; AsyncMultiKernelManager &rarr; MultiKernelManager &rarr; KernelSpecManager &rarr; KernelSpec', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 447, 'parent': 1696, 'tfidf_word': 'EP: 447, Name: run_kernel &rarr; start_new_kernel &rarr; shutdown_kernel &rarr; request_shutdown &rarr; send', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 448, 'parent': 1696, 'tfidf_word': 'EP: 448, Name: run_kernel &rarr; start_new_kernel &rarr; shutdown_kernel &rarr; request_shutdown &rarr; send', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 149, 'parent': 1459, 'tfidf_word': 'EP: 149, Name: _requires_ips &rarr; ips_loaded &rarr; _load_ips &rarr; _load_ips_ipconfig &rarr; _populate_from_list &rarr; local_ips', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 150, 'parent': 1459, 'tfidf_word': 'EP: 150, Name: _requires_ips &rarr; ips_loaded &rarr; _load_ips &rarr; _load_ips_ipconfig &rarr; _populate_from_list &rarr; _uniq_stable', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 145, 'parent': 1457, 'tfidf_word': 'EP: 145, Name: _requires_ips &rarr; ips_loaded &rarr; _load_ips &rarr; _load_ips_ifconfig &rarr; _populate_from_list &rarr; public_ips', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1456, 'parent': 1457, 'tfidf_word': 'ifconfig list populate require local stable uniq load ip ', 'tfidf_method': '_load_ips _load_ips_ifconfig _populate_from_list _requires_ips ips_loaded _uniq_stable local_ips ', 'lda_word': ' ip,load,populate,require,ifconfig,', 'lda_method': ' ips_loaded,requires_ips,load_ips,local_ips,load_ips_ifconfig,', 'lsi_word': ' ip,load,ifconfig,list,require,', 'lsi_method': ' populate_from_list,load_ips,requires_ips,ips_loaded,load_ips_ifconfig,', 'spm_method': ' ', 'text_summary': 'load the IPs that point to this machine. populate local and public IPs from flat list of all IPs. return the IP addresses that point to this machine.', 'files_count': 1, 'files': ['localinterfaces.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'310': '_requires_ips(localinterfaces.py)', '318': 'ips_loaded(localinterfaces.py)', '301': '_load_ips(localinterfaces.py)', '304': '_load_ips_ifconfig(localinterfaces.py)', '309': '_populate_from_list(localinterfaces.py)', '314': 'local_ips(localinterfaces.py)', '311': '_uniq_stable(localinterfaces.py)'}}, {'key': 141, 'parent': 1455, 'tfidf_word': 'EP: 141, Name: _requires_ips &rarr; ips_loaded &rarr; _load_ips &rarr; _load_ips_ip &rarr; _populate_from_list &rarr; NoIPAddresses', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1454, 'parent': 1455, 'tfidf_word': 'list populate require local public stable uniq load ip ', 'tfidf_method': '_load_ips _load_ips_ip _populate_from_list _requires_ips ips_loaded _uniq_stable local_ips public_ips ', 'lda_word': ' ip,load,require,list,populate,', 'lda_method': ' load_ips,requires_ips,ips_loaded,load_ips_ip,populate_from_list,', 'lsi_word': ' ip,load,require,populate,list,', 'lsi_method': ' ips_loaded,load_ips_ip,load_ips,requires_ips,populate_from_list,', 'spm_method': ' ', 'text_summary': 'load the IPs that point to this machine. populate local and public IPs from flat list of all IPs. return the IP addresses that point to this machine.', 'files_count': 1, 'files': ['localinterfaces.py'], 'execution_path_count': 3, 'function_id_to_name_file': {'310': '_requires_ips(localinterfaces.py)', '318': 'ips_loaded(localinterfaces.py)', '301': '_load_ips(localinterfaces.py)', '305': '_load_ips_ip(localinterfaces.py)', '309': '_populate_from_list(localinterfaces.py)', '316': 'public_ips(localinterfaces.py)', '314': 'local_ips(localinterfaces.py)', '311': '_uniq_stable(localinterfaces.py)'}}, {'key': 156, 'parent': 1676, 'tfidf_word': 'EP: 156, Name: _requires_ips &rarr; ips_loaded &rarr; _load_ips &rarr; _load_ips_netifaces &rarr; _uniq_stable', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1675, 'parent': 1676, 'tfidf_word': 'netifaces require local public load ip ', 'tfidf_method': '_load_ips _load_ips_netifaces _requires_ips ips_loaded local_ips public_ips ', 'lda_word': ' ip,load,netifaces,require,local,', 'lda_method': ' load_ips,load_ips_netifaces,requires_ips,ips_loaded,local_ips,', 'lsi_word': ' ip,load,netifaces,require,local,', 'lsi_method': ' load_ips,ips_loaded,load_ips_netifaces,requires_ips,local_ips,', 'spm_method': ' ', 'text_summary': 'load the IPs that point to this machine.', 'files_count': 1, 'files': ['localinterfaces.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'310': '_requires_ips(localinterfaces.py)', '318': 'ips_loaded(localinterfaces.py)', '301': '_load_ips(localinterfaces.py)', '307': '_load_ips_netifaces(localinterfaces.py)', '314': 'local_ips(localinterfaces.py)', '316': 'public_ips(localinterfaces.py)'}}, {'key': 153, 'parent': 1865, 'tfidf_word': 'EP: 153, Name: _requires_ips &rarr; ips_loaded &rarr; _load_ips &rarr; _load_ips_dumb', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 157, 'parent': 1865, 'tfidf_word': 'EP: 157, Name: _requires_ips &rarr; ips_loaded &rarr; _load_ips &rarr; NoIPAddresses', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1124, 'parent': 1745, 'tfidf_word': 'EP: 1124, Name: test_load_ips &rarr; _load_ips &rarr; _load_ips_ipconfig &rarr; _populate_from_list &rarr; local_ips', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1125, 'parent': 1745, 'tfidf_word': 'EP: 1125, Name: test_load_ips &rarr; _load_ips &rarr; _load_ips_ipconfig &rarr; _populate_from_list &rarr; _uniq_stable', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1120, 'parent': 1743, 'tfidf_word': 'EP: 1120, Name: test_load_ips &rarr; _load_ips &rarr; _load_ips_ifconfig &rarr; _populate_from_list &rarr; public_ips', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1742, 'parent': 1743, 'tfidf_word': 'ifconfig list populate test local stable uniq load ip ', 'tfidf_method': '_load_ips _load_ips_ifconfig _populate_from_list test_load_ips _uniq_stable local_ips ', 'lda_word': ' ip,load,ifconfig,populate,local,', 'lda_method': ' load_ips,load_ips_ifconfig,populate_from_list,test_load_ips,uniq_stable,', 'lsi_word': ' ip,load,ifconfig,list,test,', 'lsi_method': ' load_ips_ifconfig,load_ips,populate_from_list,test_load_ips,uniq_stable,', 'spm_method': ' ', 'text_summary': 'load the IPs that point to this machine. populate local and public IPs from flat list of all IPs. uniq_stable(elems) -> list.', 'files_count': 2, 'files': ['test_localinterfaces.py', 'localinterfaces.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'634': 'test_load_ips(test_localinterfaces.py)', '301': '_load_ips(localinterfaces.py)', '304': '_load_ips_ifconfig(localinterfaces.py)', '309': '_populate_from_list(localinterfaces.py)', '314': 'local_ips(localinterfaces.py)', '311': '_uniq_stable(localinterfaces.py)'}}, {'key': 1116, 'parent': 1741, 'tfidf_word': 'EP: 1116, Name: test_load_ips &rarr; _load_ips &rarr; _load_ips_ip &rarr; _populate_from_list &rarr; NoIPAddresses', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1740, 'parent': 1741, 'tfidf_word': 'list populate test local public stable uniq load ip ', 'tfidf_method': '_load_ips _load_ips_ip _populate_from_list test_load_ips _uniq_stable local_ips public_ips ', 'lda_word': ' ip,load,test,populate,list,', 'lda_method': ' load_ips,populate_from_list,test_load_ips,load_ips_ip,uniq_stable,', 'lsi_word': ' ip,load,list,test,populate,', 'lsi_method': ' load_ips,populate_from_list,load_ips_ip,test_load_ips,local_ips,', 'spm_method': ' ', 'text_summary': 'populate local and public IPs from flat list of all IPs. return the IP addresses that point to this machine. populate local and public IPs from flat list of all IPs. return the IP addresses for this machine that are visible to other machines. populate local and public IPs from flat list of all IPs. uniq_stable(elems) -> list.', 'files_count': 2, 'files': ['test_localinterfaces.py', 'localinterfaces.py'], 'execution_path_count': 3, 'function_id_to_name_file': {'634': 'test_load_ips(test_localinterfaces.py)', '301': '_load_ips(localinterfaces.py)', '305': '_load_ips_ip(localinterfaces.py)', '309': '_populate_from_list(localinterfaces.py)', '316': 'public_ips(localinterfaces.py)', '314': 'local_ips(localinterfaces.py)', '311': '_uniq_stable(localinterfaces.py)'}}, {'key': 158, 'parent': 2014, 'tfidf_word': 'EP: 158, Name: _requires_ips &rarr; ips_loaded &rarr; _load_ips &rarr; _load_ips_gethostbyname &rarr; _uniq_stable', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1133, 'parent': 2014, 'tfidf_word': 'EP: 1133, Name: test_load_ips &rarr; _load_ips &rarr; _load_ips_gethostbyname &rarr; _uniq_stable', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1951, 'parent': 2384, 'tfidf_word': 'netifaces test local public stable uniq load ip ', 'tfidf_method': '_load_ips _load_ips_netifaces test_load_ips _uniq_stable local_ips public_ips ', 'lda_word': ' ip,load,netifaces,test,public,', 'lda_method': ' load_ips,test_load_ips,load_ips_netifaces,uniq_stable,local_ips,', 'lsi_word': ' ip,load,netifaces,test,local,', 'lsi_method': ' load_ips,load_ips_netifaces,test_load_ips,public_ips,uniq_stable,', 'spm_method': ' ', 'text_summary': 'load the IPs that point to this machine. return the IP addresses that point to this machine.', 'files_count': 2, 'files': ['test_localinterfaces.py', 'localinterfaces.py'], 'execution_path_count': 3, 'function_id_to_name_file': {'634': 'test_load_ips(test_localinterfaces.py)', '301': '_load_ips(localinterfaces.py)', '307': '_load_ips_netifaces(localinterfaces.py)', '311': '_uniq_stable(localinterfaces.py)', '314': 'local_ips(localinterfaces.py)', '316': 'public_ips(localinterfaces.py)'}}, {'key': 2188, 'parent': 2384, 'tfidf_word': 'test addresses dumb no ip load ', 'tfidf_method': '_load_ips test_load_ips NoIPAddresses _load_ips_dumb ', 'lda_word': ' ip,load,test,address,dumb,', 'lda_method': ' test_load_ips,noipaddresses,load_ips,load_ips_dumb,', 'lsi_word': ' ip,load,test,dumb,address,', 'lsi_method': ' load_ips,test_load_ips,load_ips_dumb,noipaddresses,', 'spm_method': ' ', 'text_summary': '', 'files_count': 2, 'files': ['test_localinterfaces.py', 'localinterfaces.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'634': 'test_load_ips(test_localinterfaces.py)', '301': '_load_ips(localinterfaces.py)', '302': '_load_ips_dumb(localinterfaces.py)', '299': 'NoIPAddresses(localinterfaces.py)'}}, {'key': 906, 'parent': 2075, 'tfidf_word': 'EP: 906, Name: test_default_version &rarr; __init__ &rarr; _new_auth', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2071, 'parent': 2075, 'tfidf_word': 'cull msgpack unpacker pack packer pickle roundtrip session unpack zero ', 'tfidf_method': 'test_bad_pack test_bad_packer test_bad_roundtrip test_bad_unpack test_bad_unpacker test_cull_digest_history test_datetimes_msgpack test_datetimes_pickle test_session_id test_zero_digest_history ', 'lda_word': ' auth,init,new,test,bad,', 'lda_method': ' new_auth,init,test_bad_unpack,test_cull_digest_history,test_datetimes_pickle,', 'lsi_word': ' init,test,new,auth,bad,', 'lsi_method': ' new_auth,init,test_bad_unpacker,test_datetimes_msgpack,test_bad_roundtrip,', 'spm_method': ' ', 'text_summary': '', 'files_count': 2, 'files': ['test_session.py', 'session.py'], 'execution_path_count': 10, 'function_id_to_name_file': {'689': 'test_datetimes_msgpack(test_session.py)', '457': '__init__(session.py)', '465': '_new_auth(session.py)', '690': 'test_datetimes_pickle(test_session.py)', '683': 'test_bad_roundtrip(test_session.py)', '685': 'test_bad_unpacker(test_session.py)', '682': 'test_bad_packer(test_session.py)', '681': 'test_bad_pack(test_session.py)', '684': 'test_bad_unpack(test_session.py)', '687': 'test_cull_digest_history(test_session.py)', '697': 'test_session_id(test_session.py)', '700': 'test_zero_digest_history(test_session.py)'}}, {'key': 1101, 'parent': 1438, 'tfidf_word': 'EP: 1101, Name: test_find_connection_file &rarr; initialize &rarr; init_connection_file &rarr; load_connection_file &rarr; load_connection_info &rarr; _ip_default &rarr; localhost', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1437, 'parent': 1438, 'tfidf_word': 'initialize ip localhost test session app kn file load connection ', 'tfidf_method': '_ip_default load_connection_file load_connection_info init_connection_file localhost initialize test_app_load_connection_file test_load_connection_file_session test_load_connection_file_session_with_kn ', 'lda_word': ' connection,load,file,localhost,initialize,', 'lda_method': ' init_connection_file,localhost,load_connection_info,initialize,load_connection_file,', 'lsi_word': ' connection,file,load,localhost,init,', 'lsi_method': ' init_connection_file,initialize,localhost,load_connection_info,load_connection_file,', 'spm_method': '  &#187; initialize(test_connect.py) &rarr; init_connection_file(consoleapp.py) &rarr; load_connection_file(connect.py) &rarr; load_connection_info(connect.py) &rarr; _ip_default(connect.py) &rarr; localhost(localinterfaces.py) . <br>', 'text_summary': 'return ip for localhost (almost always 127.0.0.1) test load_connection_file() after. Load connection info from JSON dict in self.connection_file.', 'files_count': 4, 'files': ['test_connect.py', 'consoleapp.py', 'connect.py', 'localinterfaces.py'], 'execution_path_count': 3, 'function_id_to_name_file': {'559': 'test_app_load_connection_file(test_connect.py)', '572': 'initialize(test_connect.py)', '219': 'init_connection_file(consoleapp.py)', '209': 'load_connection_file(connect.py)', '210': 'load_connection_info(connect.py)', '195': '_ip_default(connect.py)', '315': 'localhost(localinterfaces.py)', '564': 'test_load_connection_file_session(test_connect.py)', '565': 'test_load_connection_file_session_with_kn(test_connect.py)'}}, {'key': 1065, 'parent': 1738, 'tfidf_word': 'EP: 1065, Name: test_load_connection_file_session &rarr; load_connection_file &rarr; load_connection_info &rarr; _ip_default &rarr; localhost', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1084, 'parent': 1738, 'tfidf_word': 'EP: 1084, Name: test_load_connection_file_session_with_kn &rarr; load_connection_file &rarr; load_connection_info &rarr; _ip_default &rarr; localhost', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1102, 'parent': 1565, 'tfidf_word': 'EP: 1102, Name: test_find_connection_file &rarr; initialize &rarr; init_connection_file &rarr; load_connection_file &rarr; load_connection_info &rarr; _record_random_port_names', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1564, 'parent': 1565, 'tfidf_word': 'port random record test session app kn file load connection ', 'tfidf_method': '_record_random_port_names load_connection_file load_connection_info init_connection_file initialize test_app_load_connection_file test_load_connection_file_session test_load_connection_file_session_with_kn ', 'lda_word': ' connection,load,file,test,initialize,', 'lda_method': ' initialize,init_connection_file,load_connection_file,record_random_port_names,load_connection_info,', 'lsi_word': ' connection,file,load,random,port,', 'lsi_method': ' load_connection_file,initialize,record_random_port_names,load_connection_info,init_connection_file,', 'spm_method': ' ', 'text_summary': 'Load connection info from JSON dict in self.connection_file. test load_connection_file() after.', 'files_count': 3, 'files': ['test_connect.py', 'consoleapp.py', 'connect.py'], 'execution_path_count': 3, 'function_id_to_name_file': {'559': 'test_app_load_connection_file(test_connect.py)', '572': 'initialize(test_connect.py)', '219': 'init_connection_file(consoleapp.py)', '209': 'load_connection_file(connect.py)', '210': 'load_connection_info(connect.py)', '197': '_record_random_port_names(connect.py)', '564': 'test_load_connection_file_session(test_connect.py)', '565': 'test_load_connection_file_session_with_kn(test_connect.py)'}}, {'key': 1066, 'parent': 1945, 'tfidf_word': 'EP: 1066, Name: test_load_connection_file_session &rarr; load_connection_file &rarr; load_connection_info &rarr; _record_random_port_names', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1085, 'parent': 1945, 'tfidf_word': 'EP: 1085, Name: test_load_connection_file_session_with_kn &rarr; load_connection_file &rarr; load_connection_info &rarr; _record_random_port_names', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1768, 'parent': 2351, 'tfidf_word': 'default ip localhost names port random record connection initialize load ', 'tfidf_method': 'load_connection_file load_connection_info init_ssh initialize initialize _ip_default _record_random_port_names localhost ', 'lda_word': ' connection,initialize,load,init,info,', 'lda_method': ' initialize,load_connection_file,load_connection_info,init_ssh,localhost,', 'lsi_word': ' connection,load,initialize,init,ssh,', 'lsi_method': ' initialize,init_ssh,load_connection_info,load_connection_file,localhost,', 'spm_method': ' ', 'text_summary': 'Load connection info from JSON dict in self.connection_file.', 'files_count': 4, 'files': ['runapp.py', 'consoleapp.py', 'connect.py', 'localinterfaces.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'437': 'initialize(runapp.py)', '223': 'initialize(consoleapp.py)', '222': 'init_ssh(consoleapp.py)', '209': 'load_connection_file(connect.py)', '210': 'load_connection_info(connect.py)', '195': '_ip_default(connect.py)', '315': 'localhost(localinterfaces.py)', '197': '_record_random_port_names(connect.py)'}}, {'key': 2227, 'parent': 2351, 'tfidf_word': 'names port random record write initialize load localhost connection file ', 'tfidf_method': 'init_ssh initialize initialize _record_random_port_names write_connection_file load_connection_file localhost ', 'lda_word': ' initialize,file,connection,init,ssh,', 'lda_method': ' initialize,init_ssh,write_connection_file,record_random_port_names,localhost,', 'lsi_word': ' initialize,connection,file,ssh,init,', 'lsi_method': ' initialize,init_ssh,record_random_port_names,write_connection_file,load_connection_file,', 'spm_method': ' ', 'text_summary': 'Write connection info to JSON dict in self.connection_file. Load connection info from JSON dict in self.connection_file.', 'files_count': 4, 'files': ['runapp.py', 'consoleapp.py', 'localinterfaces.py', 'connect.py'], 'execution_path_count': 3, 'function_id_to_name_file': {'437': 'initialize(runapp.py)', '223': 'initialize(consoleapp.py)', '222': 'init_ssh(consoleapp.py)', '315': 'localhost(localinterfaces.py)', '212': 'write_connection_file(connect.py)', '197': '_record_random_port_names(connect.py)', '209': 'load_connection_file(connect.py)'}}, {'key': 2028, 'parent': 2681, 'tfidf_word': 'random record initialize load default ip localhost write connection file ', 'tfidf_method': 'load_connection_file init_connection_file initialize initialize _record_random_port_names load_connection_info _ip_default write_connection_file localhost ', 'lda_word': ' file,connection,initialize,random,init,', 'lda_method': ' initialize,load_connection_file,init_connection_file,record_random_port_names,load_connection_info,', 'lsi_word': ' connection,file,initialize,load,init,', 'lsi_method': ' initialize,init_connection_file,load_connection_file,load_connection_info,record_random_port_names,', 'spm_method': ' ', 'text_summary': 'Load connection info from JSON dict in self.connection_file.', 'files_count': 4, 'files': ['runapp.py', 'consoleapp.py', 'connect.py', 'localinterfaces.py'], 'execution_path_count': 3, 'function_id_to_name_file': {'437': 'initialize(runapp.py)', '223': 'initialize(consoleapp.py)', '219': 'init_connection_file(consoleapp.py)', '209': 'load_connection_file(connect.py)', '212': 'write_connection_file(connect.py)', '197': '_record_random_port_names(connect.py)', '210': 'load_connection_info(connect.py)', '195': '_ip_default(connect.py)', '315': 'localhost(localinterfaces.py)'}}, {'key': 2366, 'parent': 2681, 'tfidf_word': 'init localhost manager initialize kernel client no such ', 'tfidf_method': 'initialize initialize init_kernel_manager localhost init_kernel_client NoSuchKernel ', 'lda_word': ' initialize,kernel,init,localhost,manager,', 'lda_method': ' initialize,init_kernel_manager,nosuchkernel,localhost,init_kernel_client,', 'lsi_word': ' initialize,kernel,init,manager,localhost,', 'lsi_method': ' initialize,localhost,init_kernel_manager,nosuchkernel,init_kernel_client,', 'spm_method': ' ', 'text_summary': 'Empty', 'files_count': 4, 'files': ['runapp.py', 'consoleapp.py', 'localinterfaces.py', 'kernelspec.py'], 'execution_path_count': 3, 'function_id_to_name_file': {'437': 'initialize(runapp.py)', '223': 'initialize(consoleapp.py)', '220': 'init_kernel_client(consoleapp.py)', '315': 'localhost(localinterfaces.py)', '221': 'init_kernel_manager(consoleapp.py)', '255': 'NoSuchKernel(kernelspec.py)'}}, {'key': 1100, 'parent': 1464, 'tfidf_word': 'EP: 1100, Name: test_find_connection_file &rarr; initialize &rarr; init_connection_file &rarr; load_connection_file &rarr; write_connection_file &rarr; _record_random_port_names', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1463, 'parent': 1464, 'tfidf_word': 'random record test write session load app kn connection file ', 'tfidf_method': '_record_random_port_names load_connection_file write_connection_file init_connection_file initialize test_app_load_connection_file test_load_connection_file_session test_load_connection_file_session_with_kn ', 'lda_word': ' file,connection,load,record,port,', 'lda_method': ' load_connection_file,initialize,init_connection_file,write_connection_file,record_random_port_names,', 'lsi_word': ' file,connection,load,write,port,', 'lsi_method': ' write_connection_file,record_random_port_names,load_connection_file,initialize,init_connection_file,', 'spm_method': ' ', 'text_summary': 'Write connection info to JSON dict in self.connection_file. Load connection info from JSON dict in self.connection_file.', 'files_count': 3, 'files': ['test_connect.py', 'consoleapp.py', 'connect.py'], 'execution_path_count': 3, 'function_id_to_name_file': {'559': 'test_app_load_connection_file(test_connect.py)', '572': 'initialize(test_connect.py)', '219': 'init_connection_file(consoleapp.py)', '209': 'load_connection_file(connect.py)', '212': 'write_connection_file(connect.py)', '197': '_record_random_port_names(connect.py)', '564': 'test_load_connection_file_session(test_connect.py)', '565': 'test_load_connection_file_session_with_kn(test_connect.py)'}}, {'key': 2015, 'parent': 2397, 'tfidf_word': 'names new port random record start write async run kernel ', 'tfidf_method': '_record_random_port_names write_connection_file client run_kernel start_new_async_kernel start_new_kernel ', 'lda_word': ' kernel,file,start,random,port,', 'lda_method': ' client,write_connection_file,start_new_kernel,run_kernel,record_random_port_names,', 'lsi_word': ' kernel,port,names,record,random,', 'lsi_method': ' client,write_connection_file,record_random_port_names,start_new_kernel,run_kernel,', 'spm_method': ' ', 'text_summary': 'Create a client configured to connect to our kernel. Context manager to create a kernel in a subprocess.', 'files_count': 2, 'files': ['manager.py', 'connect.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'322': 'start_new_async_kernel(manager.py)', '351': 'client(manager.py)', '212': 'write_connection_file(connect.py)', '197': '_record_random_port_names(connect.py)', '321': 'run_kernel(manager.py)', '323': 'start_new_kernel(manager.py)'}}, {'key': 2361, 'parent': 2397, 'tfidf_word': 'mixin session port random record cleanup kn connection file load ', 'tfidf_method': '_record_random_port_names write_connection_file load_connection_file test_load_connection_file_session test_load_connection_file_session_with_kn test_mixin_cleanup_random_ports test_mixin_record_random_ports ', 'lda_word': ' connection,file,load,write,names,', 'lda_method': ' write_connection_file,record_random_port_names,load_connection_file,test_mixin_cleanup_random_ports,test_load_connection_file_session,', 'lsi_word': ' connection,file,random,port,load,', 'lsi_method': ' record_random_port_names,write_connection_file,load_connection_file,test_load_connection_file_session,test_load_connection_file_session_with_kn,', 'spm_method': ' ', 'text_summary': 'Write connection info to JSON dict in self.connection_file. Load connection info from JSON dict in self.connection_file. test load_connection_file() after.', 'files_count': 2, 'files': ['test_connect.py', 'connect.py'], 'execution_path_count': 4, 'function_id_to_name_file': {'564': 'test_load_connection_file_session(test_connect.py)', '209': 'load_connection_file(connect.py)', '212': 'write_connection_file(connect.py)', '197': '_record_random_port_names(connect.py)', '565': 'test_load_connection_file_session_with_kn(test_connect.py)', '568': 'test_mixin_record_random_ports(test_connect.py)', '567': 'test_mixin_cleanup_random_ports(test_connect.py)'}}, {'key': 1235, 'parent': 1760, 'tfidf_word': 'EP: 1235, Name: test_find_all_specs &rarr; get_all_specs &rarr; find_kernel_specs &rarr; _list_kernels_in &rarr; _is_valid_kernel_name', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1236, 'parent': 1760, 'tfidf_word': 'EP: 1236, Name: test_find_all_specs &rarr; get_all_specs &rarr; find_kernel_specs &rarr; _list_kernels_in &rarr; _is_kernel_dir', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1262, 'parent': 1762, 'tfidf_word': 'EP: 1262, Name: test_subclass &rarr; get_all_specs &rarr; find_kernel_specs &rarr; _list_kernels_in &rarr; _is_valid_kernel_name', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1263, 'parent': 1762, 'tfidf_word': 'EP: 1263, Name: test_subclass &rarr; get_all_specs &rarr; find_kernel_specs &rarr; _list_kernels_in &rarr; _is_kernel_dir', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1252, 'parent': 1761, 'tfidf_word': 'EP: 1252, Name: test_remove_kernel_spec &rarr; remove_kernel_spec &rarr; find_kernel_specs &rarr; _list_kernels_in &rarr; _is_valid_kernel_name', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1253, 'parent': 1761, 'tfidf_word': 'EP: 1253, Name: test_remove_kernel_spec &rarr; remove_kernel_spec &rarr; find_kernel_specs &rarr; _list_kernels_in &rarr; _is_kernel_dir', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2334, 'parent': 2349, 'tfidf_word': 'spec specs test install dir name valid prefix priority kernel ', 'tfidf_method': '_list_kernels_in find_kernel_specs _is_kernel_dir _is_valid_kernel_name test_install_kernel_spec test_install_kernel_spec_prefix test_kernel_spec_priority ', 'lda_word': ' kernel,spec,test,specs,find,', 'lda_method': ' find_kernel_specs,list_kernels_in,test_kernel_spec_priority,is_valid_kernel_name,test_install_kernel_spec,', 'lsi_word': ' kernel,specs,test,list,spec,', 'lsi_method': ' find_kernel_specs,list_kernels_in,is_kernel_dir,is_valid_kernel_name,test_install_kernel_spec,', 'spm_method': ' ', 'text_summary': 'Return a mapping of kernel names to resource directories from dir. Is ``path`` a kernel directory?.', 'files_count': 2, 'files': ['test_kernelspec.py', 'kernelspec.py'], 'execution_path_count': 6, 'function_id_to_name_file': {'625': 'test_install_kernel_spec_prefix(test_kernelspec.py)', '272': 'find_kernel_specs(kernelspec.py)', '258': '_list_kernels_in(kernelspec.py)', '257': '_is_valid_kernel_name(kernelspec.py)', '256': '_is_kernel_dir(kernelspec.py)', '626': 'test_kernel_spec_priority(test_kernelspec.py)', '624': 'test_install_kernel_spec(test_kernelspec.py)'}}, {'key': 2341, 'parent': 2349, 'tfidf_word': 'list dir name test valid find specs kernel ', 'tfidf_method': '_list_kernels_in find_kernel_specs _is_kernel_dir _is_valid_kernel_name find_kernel_specs test_find_kernel_specs ', 'lda_word': ' kernel,find,specs,list,name,', 'lda_method': ' find_kernel_specs,list_kernels_in,is_kernel_dir,is_valid_kernel_name,test_find_kernel_specs,', 'lsi_word': ' kernel,specs,find,list,name,', 'lsi_method': ' find_kernel_specs,list_kernels_in,is_valid_kernel_name,is_kernel_dir,test_find_kernel_specs,', 'spm_method': ' ', 'text_summary': 'Return a mapping of kernel names to resource directories from dir.', 'files_count': 2, 'files': ['kernelspec.py', 'test_kernelspec.py'], 'execution_path_count': 4, 'function_id_to_name_file': {'259': 'find_kernel_specs(kernelspec.py)', '272': 'find_kernel_specs(kernelspec.py)', '258': '_list_kernels_in(kernelspec.py)', '257': '_is_valid_kernel_name(kernelspec.py)', '256': '_is_kernel_dir(kernelspec.py)', '622': 'test_find_kernel_specs(test_kernelspec.py)'}}, {'key': 1526, 'parent': 2025, 'tfidf_word': 'deserialize ensure extract parse recv tzinfo handle send test date ', 'tfidf_method': '_ensure_tzinfo extract_dates parse_date deserialize recv handle test_send ', 'lda_word': ' recv,date,tzinfo,parse,deserialize,', 'lda_method': ' parse_date,recv,deserialize,extract_dates,ensure_tzinfo,', 'lsi_word': ' date,recv,tzinfo,parse,deserialize,', 'lsi_method': ' deserialize,recv,parse_date,extract_dates,ensure_tzinfo,', 'spm_method': ' ', 'text_summary': 'Receive and unpack a message. extract ISO8601 dates from unpacked JSON.', 'files_count': 4, 'files': ['test_session.py', 'session.py', 'jsonutil.py', 'forward.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'694': 'test_send(test_session.py)', '479': 'recv(session.py)', '474': 'deserialize(session.py)', '242': 'extract_dates(jsonutil.py)', '243': 'parse_date(jsonutil.py)', '240': '_ensure_tzinfo(jsonutil.py)', '492': 'handle(forward.py)'}}, {'key': 1735, 'parent': 2025, 'tfidf_word': 'ensure extract parse tzinfo test send date raw serialize unserialize ', 'tfidf_method': '_ensure_tzinfo extract_dates parse_date deserialize unserialize test_send test_send_raw test_serialize ', 'lda_word': ' date,deserialize,parse,extract,tzinfo,', 'lda_method': ' ensure_tzinfo,parse_date,extract_dates,deserialize,test_send,', 'lsi_word': ' date,extract,parse,tzinfo,ensure,', 'lsi_method': ' deserialize,ensure_tzinfo,extract_dates,parse_date,unserialize,', 'spm_method': ' ', 'text_summary': 'extract ISO8601 dates from unpacked JSON. Ensure a datetime object has tzinfo.', 'files_count': 3, 'files': ['test_session.py', 'session.py', 'jsonutil.py'], 'execution_path_count': 4, 'function_id_to_name_file': {'695': 'test_send_raw(test_session.py)', '474': 'deserialize(session.py)', '242': 'extract_dates(jsonutil.py)', '243': 'parse_date(jsonutil.py)', '240': '_ensure_tzinfo(jsonutil.py)', '694': 'test_send(test_session.py)', '484': 'unserialize(session.py)', '696': 'test_serialize(test_session.py)'}}, {'key': 1354, 'parent': 2374, 'tfidf_word': 'EP: 1354, Name: test_parse_ms_precision &rarr; parse_date &rarr; _ensure_tzinfo', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2287, 'parent': 2374, 'tfidf_word': 'tzinfo datetime datetimes extract test default msgpack naive pickle date ', 'tfidf_method': '_ensure_tzinfo extract_dates parse_date _datetime_test test_date_default test_extract_date_from_naive test_extract_dates test_datetimes test_datetimes_msgpack test_datetimes_pickle ', 'lda_word': ' pickle,test,date,datetimes,datetime,', 'lda_method': ' extract_dates,parse_date,ensure_tzinfo,datetime_test,test_date_default,', 'lsi_word': ' date,test,extract,ensure,parse,', 'lsi_method': ' ensure_tzinfo,extract_dates,parse_date,datetime_test,test_datetimes,', 'spm_method': ' ', 'text_summary': '', 'files_count': 3, 'files': ['test_session.py', 'jsonutil.py', 'test_jsonutil.py'], 'execution_path_count': 6, 'function_id_to_name_file': {'689': 'test_datetimes_msgpack(test_session.py)', '679': '_datetime_test(test_session.py)', '242': 'extract_dates(jsonutil.py)', '243': 'parse_date(jsonutil.py)', '240': '_ensure_tzinfo(jsonutil.py)', '688': 'test_datetimes(test_session.py)', '690': 'test_datetimes_pickle(test_session.py)', '575': 'test_date_default(test_jsonutil.py)', '576': 'test_extract_date_from_naive(test_jsonutil.py)', '577': 'test_extract_dates(test_jsonutil.py)'}}, {'key': 2690, 'parent': 2737, 'tfidf_word': 'control create launch make restarter url kernel start connect socket ', 'tfidf_method': 'start_kernel post_start_kernel start_new_async_kernel restart_kernel _create_connected_socket _make_url _launch_kernel _connect_control_socket start_restarter ', 'lda_word': ' kernel,start,restart,post,new,', 'lda_method': ' post_start_kernel,restart_kernel,start_kernel,connect_control_socket,make_url,', 'lsi_word': ' kernel,start,socket,connect,post,', 'lsi_method': ' start_kernel,post_start_kernel,restart_kernel,start_new_async_kernel,create_connected_socket,', 'spm_method': ' ', 'text_summary': 'actually launch the kernel. Restarts a kernel with the arguments that were used to launch it.', 'files_count': 2, 'files': ['manager.py', 'connect.py'], 'execution_path_count': 6, 'function_id_to_name_file': {'330': 'restart_kernel(manager.py)', '333': 'start_kernel(manager.py)', '326': '_launch_kernel(manager.py)', '322': 'start_new_async_kernel(manager.py)', '359': 'post_start_kernel(manager.py)', '338': '_connect_control_socket(manager.py)', '192': '_create_connected_socket(connect.py)', '196': '_make_url(connect.py)', '367': 'start_restarter(manager.py)'}}, {'key': 2709, 'parent': 2737, 'tfidf_word': 'path real substitution get env start connection file spec kernel ', 'tfidf_method': 'restart_kernel _record_random_port_names write_connection_file KernelSpec kernel_spec from_ns test_connection_file_real_path is_local_ip local_ips _get_env_substitutions ', 'lda_word': ' kernel,start,pre,format,file,', 'lda_method': ' format_kernel_cmd,from_ns,test_connection_file_real_path,pre_start_kernel,start_kernel,', 'lsi_word': ' kernel,start,pre,format,cmd,', 'lsi_method': ' pre_start_kernel,start_kernel,format_kernel_cmd,start_new_async_kernel,restart_kernel,', 'spm_method': ' ', 'text_summary': '{connection_file})  Restarts a kernel with the arguments that were used to launch it. return the IP addresses that point to this machine. Verify realpath is used when formatting connection file. Walks env entries in templated_env and applies possible substitutions from current env. Write connection info to JSON dict in self.connection_file. {connection_file})   Prepares a kernel for startup in a separate process. replace templated args (e.g.', 'files_count': 5, 'files': ['test_manager.py', 'manager.py', 'kernelspec.py', 'connect.py', 'localinterfaces.py'], 'execution_path_count': 17, 'function_id_to_name_file': {'635': 'test_connection_file_real_path(test_manager.py)', '353': 'format_kernel_cmd(manager.py)', '358': 'kernel_spec(manager.py)', '253': 'KernelSpec(kernelspec.py)', '330': 'restart_kernel(manager.py)', '333': 'start_kernel(manager.py)', '360': 'pre_start_kernel(manager.py)', '322': 'start_new_async_kernel(manager.py)', '369': 'from_ns(manager.py)', '212': 'write_connection_file(connect.py)', '197': '_record_random_port_names(connect.py)', '341': '_get_env_substitutions(manager.py)', '314': 'local_ips(localinterfaces.py)', '312': 'is_local_ip(localinterfaces.py)'}}, {'key': 2766, 'parent': 2783, 'tfidf_word': 'directory init no such valid kernel spec get find specs ', 'tfidf_method': '_find_spec_directory _get_kernel_spec_by_name NoSuchKernel _is_valid_kernel_name __init__ test_find_all_specs test_get_kernel_spec get_kernel_spec get_kernel_spec find_kernel_specs ', 'lda_word': ' kernel,spec,get,set,find,', 'lda_method': ' get_kernel_spec,find_spec_directory,is_kernel_dir,is_valid_kernel_name,setup,', 'lsi_word': ' kernel,get,spec,test,specs,', 'lsi_method': ' get_kernel_spec,setup,get_all_specs,test_subclass,find_spec_directory,', 'spm_method': ' ', 'text_summary': 'Find the resource directory of a named kernel spec. Returns a dict mapping kernel names to kernelspecs.', 'files_count': 3, 'files': ['test_kernelspec.py', 'kernelspec.py', 'test_client.py'], 'execution_path_count': 39, 'function_id_to_name_file': {'623': 'test_get_kernel_spec(test_kernelspec.py)', '267': '_find_spec_directory(kernelspec.py)', '256': '_is_kernel_dir(kernelspec.py)', '632': 'find_kernel_specs(test_kernelspec.py)', '621': 'test_find_all_specs(test_kernelspec.py)', '273': 'get_all_specs(kernelspec.py)', '274': 'get_kernel_spec(kernelspec.py)', '629': 'test_subclass(test_kernelspec.py)', '633': 'get_kernel_spec(test_kernelspec.py)', '549': 'setUp(test_client.py)', '269': '_get_kernel_spec_by_name(kernelspec.py)', '255': 'NoSuchKernel(kernelspec.py)', '278': '__init__(kernelspec.py)', '257': '_is_valid_kernel_name(kernelspec.py)', '260': 'get_kernel_spec(kernelspec.py)'}}, {'key': 2780, 'parent': 2783, 'tfidf_word': 'loop digest flush permission native io tunnel cleanup code restarter ', 'tfidf_method': 'test_find_connection_file_relative test_mixin_record_random_ports test_secure_write update_msg_type check_user_only_permissions fetch_win32_permissions _launch test_kernelapp_lifecycle test_same_version test_get_kernel_spec ', 'lda_word': ' test,session,execute,send,adapt,', 'lda_method': ' close,session,write_connection_file,jupyterconsoleapp,deserialize,', 'lsi_word': ' kernel,test,connection,file,lifecycle,', 'lsi_method': ' init,get_tcp_km,check_packers,test_tcp_lifecycle,utcnow,', 'spm_method': ' ', 'text_summary': "Subclasses may override  Prepares a kernel for startup in a separate process. return ip for localhost (almost always 127.0.0.1) test `ipython console --existing` loads a connection file. Prepares a kernel for startup in a separate process. return ip for localhost (almost always 127.0.0.1)   Ensure that a sequence of kernel startups doesn't break anything. Sends a signal to the process group of the kernel (this. Pass a message to the ZMQ socket to send. Return the connection info as a dict. Subclasses may override Start the polling of the kernel. return ip for localhost (almost always 127.0.0.1) test load_connection_file() after. Launches a localhost kernel, binding to the specified ports. test `ipython console --existing` loads a connection file. find a connection file, and return its absolute path. return ip for localhost (almost always 127.0.0.1)      find a connection file, and return its absolute path. tunnel connections to a kernel via ssh. For tests, create a file to indicate that we've started. handle kernel info reply. Get the hb channel object for this kernel. Returns the id to associate with the kernel for this request. Send a raw message via ident path. Make a blocking client connected to my kernel. return ip for localhost (almost always 127.0.0.1)  Write connection info to JSON dict in self.connection_file. Get a message from the stdin channel. Immediately processes all pending messages on this channel. Return the number of running kernels. Unserialize a msg_list to a nested message dict. Get the single KernelManager object for a kernel by its uuid. Interrupts the kernel by sending it a signal. Get a message from the shell channel. Get a message from the iopub channel. This is run in the ioloop thread when the kernel info reply is received. default function for packing datetime objects in JSON. Send a shutdown request via control channel. test load_connection_file() after. Write connection info to JSON dict in self.connection_file. test that messages receive unique ids.", 'files_count': 35, 'files': ['test_session.py', 'session.py', 'adapter.py', 'forward.py', 'test_adapter.py', 'manager.py', 'test_connect.py', 'connect.py', 'channels.py', 'localinterfaces.py', 'threaded.py', 'consoleapp.py', 'runapp.py', 'test_multikernelmanager.py', 'multikernelmanager.py', 'tunnel.py', 'test_ssh.py', 'client.py', 'managerabc.py', 'channelsabc.py', 'test_kernelspec.py', 'kernelspec.py', 'test_kernelmanager.py', 'jsonutil.py', 'test_manager.py', 'utils.py', 'restarter.py', 'signalkernel.py', 'kernelspecapp.py', 'kernelapp.py', 'test_jsonutil.py', 'test_kernelapp.py', 'test_client.py', 'win_interrupt.py', 'launcher.py'], 'execution_path_count': 444, 'function_id_to_name_file': {'694': 'test_send(test_session.py)', '479': 'recv(session.py)', '474': 'deserialize(session.py)', '50': 'adapt(adapter.py)', '450': 'utcnow(session.py)', '492': 'handle(forward.py)', '695': 'test_send_raw(test_session.py)', '484': 'unserialize(session.py)', '696': 'test_serialize(test_session.py)', '516': 'test_default_version(test_adapter.py)', '698': 'test_tracking(test_session.py)', '480': 'send(session.py)', '328': 'interrupt_kernel(manager.py)', '559': 'test_app_load_connection_file(test_connect.py)', '191': 'write_connection_file(connect.py)', '109': 'close(channels.py)', '83': 'close(channels.py)', '315': 'localhost(localinterfaces.py)', '730': 'close(threaded.py)', '132': 'close(channels.py)', '211': 'ports(connect.py)', '718': 'close(threaded.py)', '565': 'test_load_connection_file_session_with_kn(test_connect.py)', '570': 'test_write_connection_file(test_connect.py)', '564': 'test_load_connection_file_session(test_connect.py)', '686': 'test_clone(test_session.py)', '458': '_add_digest(session.py)', '460': '_cull_digest_history(session.py)', '700': 'test_zero_digest_history(test_session.py)', '687': 'test_cull_digest_history(test_session.py)', '558': 'DummyConsoleApp(test_connect.py)', '214': 'JupyterConsoleApp(consoleapp.py)', '441': 'Session(session.py)', '188': 'ConnectionFileMixin(connect.py)', '560': 'test_find_connection_file(test_connect.py)', '213': 'IPythonConsoleApp(consoleapp.py)', '434': 'RunApp(runapp.py)', '665': 'test_start_sequence_tcp_kernels(test_multikernelmanager.py)', '655': '_get_tcp_km(test_multikernelmanager.py)', '392': '__init__(multikernelmanager.py)', '666': 'test_tcp_cinfo(test_multikernelmanager.py)', '668': 'test_tcp_lifecycle_with_kernel_id(test_multikernelmanager.py)', '661': 'test_shutdown_all(test_multikernelmanager.py)', '663': 'test_start_parallel_thread_kernels(test_multikernelmanager.py)', '658': 'tcp_lifecycle_with_loop(test_multikernelmanager.py)', '667': 'test_tcp_lifecycle(test_multikernelmanager.py)', '662': 'test_start_parallel_process_kernels(test_multikernelmanager.py)', '190': 'tunnel_to_kernel(connect.py)', '503': 'select_random_ports(tunnel.py)', '701': 'test_random_ports(test_ssh.py)', '386': 'shutdown_all(multikernelmanager.py)', '383': 'finish_shutdown(multikernelmanager.py)', '410': 'get_kernel(multikernelmanager.py)', '394': '_check_kernel_id(multikernelmanager.py)', '388': 'signal_kernel(multikernelmanager.py)', '385': 'restart_kernel(multikernelmanager.py)', '384': 'interrupt_kernel(multikernelmanager.py)', '387': 'shutdown_kernel(multikernelmanager.py)', '421': 'shutdown_kernel(multikernelmanager.py)', '420': 'shutdown_all(multikernelmanager.py)', '104': 'wait_for_ready(client.py)', '103': 'is_alive(client.py)', '412': 'is_alive(multikernelmanager.py)', '373': 'is_alive(managerabc.py)', '140': 'is_alive(channelsabc.py)', '732': 'is_alive(threaded.py)', '86': 'is_alive(channels.py)', '112': 'is_alive(channels.py)', '123': 'wait_for_ready(client.py)', '165': 'is_alive(client.py)', '648': 'test_start_parallel_thread_kernels(test_multikernelmanager.py)', '643': 'tcp_lifecycle_with_loop(test_multikernelmanager.py)', '642': 'raw_tcp_lifecycle(test_multikernelmanager.py)', '641': '_run_lifecycle(test_multikernelmanager.py)', '647': 'test_start_parallel_process_kernels(test_multikernelmanager.py)', '652': 'test_tcp_lifecycle(test_multikernelmanager.py)', '653': 'test_tcp_lifecycle_with_kernel_id(test_multikernelmanager.py)', '483': 'sign(session.py)', '440': 'Message(session.py)', '482': 'serialize(session.py)', '135': 'run(channels.py)', '128': '_create_socket(channels.py)', '84': 'get_msg(channels.py)', '82': '_recv(channels.py)', '101': 'get_stdin_msg(client.py)', '85': 'get_msgs(channels.py)', '99': 'get_iopub_msg(client.py)', '110': 'get_msg(channels.py)', '108': '_recv(channels.py)', '111': 'get_msgs(channels.py)', '620': 'test_cant_install_kernel_spec(test_kernelspec.py)', '275': 'install_kernel_spec(kernelspec.py)', '268': '_get_destination_dir(kernelspec.py)', '257': '_is_valid_kernel_name(kernelspec.py)', '625': 'test_install_kernel_spec_prefix(test_kernelspec.py)', '261': 'install_kernel_spec(kernelspec.py)', '624': 'test_install_kernel_spec(test_kernelspec.py)', '614': 'test_start_sequence_process_kernels(test_kernelmanager.py)', '610': '_run_signaltest_lifecycle(test_kernelmanager.py)', '615': 'execute(test_kernelmanager.py)', '609': '_prepare_kernel(test_kernelmanager.py)', '611': 'test_start_parallel_process_kernels(test_kernelmanager.py)', '613': 'test_start_sequence_kernels(test_kernelmanager.py)', '612': 'test_start_parallel_thread_kernels(test_kernelmanager.py)', '398': '_kernel_manager_class_changed(multikernelmanager.py)', '396': '_create_kernel_manager_factory(multikernelmanager.py)', '424': 'create_kernel_manager(multikernelmanager.py)', '397': '_find_available_port(multikernelmanager.py)', '395': '_context_default(multikernelmanager.py)', '399': '_kernel_manager_factory_default(multikernelmanager.py)', '215': '__init__(consoleapp.py)', '485': '__init__(session.py)', '457': '__init__(session.py)', '465': '_new_auth(session.py)', '459': '_check_packers(session.py)', '244': 'squash_dates(jsonutil.py)', '90': 'AsyncKernelClient(client.py)', '147': 'KernelClient(client.py)', '139': 'HBChannelABC(channelsabc.py)', '138': 'ChannelABC(channelsabc.py)', '116': 'BlockingKernelClient(client.py)', '322': 'start_new_async_kernel(manager.py)', '319': 'AsyncKernelManager(manager.py)', '320': 'KernelManager(manager.py)', '224': 'AsyncIOLoopKernelManager(manager.py)', '225': 'IOLoopKernelManager(manager.py)', '635': 'test_connection_file_real_path(test_manager.py)', '657': '_run_lifecycle(test_multikernelmanager.py)', '704': 'execute(utils.py)', '155': 'execute(client.py)', '148': 'validate_string_dict(client.py)', '689': 'test_datetimes_msgpack(test_session.py)', '679': '_datetime_test(test_session.py)', '688': 'test_datetimes(test_session.py)', '690': 'test_datetimes_pickle(test_session.py)', '734': 'send(threaded.py)', '738': 'thread_send(threaded.py)', '664': 'test_start_sequence_ipc_kernels(test_multikernelmanager.py)', '654': '_get_ipc_km(test_multikernelmanager.py)', '660': 'test_ipc_lifecycle(test_multikernelmanager.py)', '659': 'test_ipc_cinfo(test_multikernelmanager.py)', '423': 'start_kernel(multikernelmanager.py)', '415': 'pre_start_kernel(multikernelmanager.py)', '380': 'DuplicateKernelError(multikernelmanager.py)', '414': 'new_kernel_id(multikernelmanager.py)', '389': 'start_kernel(multikernelmanager.py)', '238': 'start(restarter.py)', '430': 'poll(restarter.py)', '433': 'stop(restarter.py)', '428': '_fire_callbacks(restarter.py)', '510': 'do_execute(signalkernel.py)', '501': 'openssh_tunnel(tunnel.py)', '494': 'SSHException(tunnel.py)', '497': '_stop_tunnel(tunnel.py)', '475': 'feed_identities(session.py)', '330': 'restart_kernel(manager.py)', '202': 'cleanup_random_ports(connect.py)', '200': 'cleanup_connection_file(connect.py)', '567': 'test_mixin_cleanup_random_ports(test_connect.py)', '106': 'ZMQSocketChannel(channels.py)', '226': 'as_zmqstream(manager.py)', '233': 'wrapped(manager.py)', '568': 'test_mixin_record_random_ports(test_connect.py)', '557': 'DummyConfigurable(test_connect.py)', '235': 'IOLoopKernelRestarter(restarter.py)', '426': 'KernelRestarter(restarter.py)', '234': 'AsyncIOLoopKernelRestarter(restarter.py)', '291': 'start(kernelspecapp.py)', '251': 'start(kernelapp.py)', '249': 'setup_signals(kernelapp.py)', '252': 'shutdown_handler(kernelapp.py)', '250': 'shutdown(kernelapp.py)', '248': 'log_connection_info(kernelapp.py)', '199': 'blocking_client(connect.py)', '208': 'get_connection_info(connect.py)', '725': 'stop_channels(threaded.py)', '684': 'test_bad_unpack(test_session.py)', '676': '_bad_unpacker(test_session.py)', '536': 'test_complete_request(test_adapter.py)', '517': 'adapt(test_adapter.py)', '562': 'test_find_connection_file_local(test_connect.py)', '189': 'find_connection_file(connect.py)', '493': 'SubHander(forward.py)', '490': 'Handler(forward.py)', '253': 'KernelSpec(kernelspec.py)', '114': 'send(channels.py)', '88': 'send(channels.py)', '575': 'test_date_default(test_jsonutil.py)', '241': 'date_default(jsonutil.py)', '240': '_ensure_tzinfo(jsonutil.py)', '597': 'test_subclasses(test_kernelmanager.py)', '703': 'AsyncKernelManagerWithCleanup(utils.py)', '595': 'test_signal_kernel_subprocesses(test_kernelmanager.py)', '598': 'execute(test_kernelmanager.py)', '702': 'AsyncKernelManagerSubclass(utils.py)', '591': 'transport(test_kernelmanager.py)', '606': 'test_templated_kspec_env(test_kernelmanager.py)', '599': '_env_test_body(test_kernelmanager.py)', '607': 'execute(test_kernelmanager.py)', '604': 'test_signal_kernel_subprocesses(test_kernelmanager.py)', '608': 'execute(test_kernelmanager.py)', '586': 'env(test_kernelmanager.py)', '712': 'stop(utils.py)', '711': 'start(utils.py)', '705': 'test_env(utils.py)', '630': 'test_validate_kernel_name(test_kernelspec.py)', '506': 'SignalTestApp(signalkernel.py)', '507': 'SignalTestKernel(signalkernel.py)', '627': 'test_remove_kernel_spec(test_kernelspec.py)', '617': '_install_sample_kernel(test_kernelspec.py)', '626': 'test_kernel_spec_priority(test_kernelspec.py)', '651': 'test_tcp_cinfo(test_multikernelmanager.py)', '640': '_run_cinfo(test_multikernelmanager.py)', '621': 'test_find_all_specs(test_kernelspec.py)', '622': 'test_find_kernel_specs(test_kernelspec.py)', '623': 'test_get_kernel_spec(test_kernelspec.py)', '619': 'tearDown(test_kernelspec.py)', '618': 'setUp(test_kernelspec.py)', '649': 'test_start_sequence_ipc_kernels(test_multikernelmanager.py)', '650': 'test_start_sequence_tcp_kernels(test_multikernelmanager.py)', '644': 'test_ipc_cinfo(test_multikernelmanager.py)', '645': 'test_ipc_lifecycle(test_multikernelmanager.py)', '656': '_run_cinfo(test_multikernelmanager.py)', '569': 'test_secure_write(test_connect.py)', '573': 'check_user_only_permissions(test_connect.py)', '574': 'fetch_win32_permissions(test_connect.py)', '563': 'test_find_connection_file_relative(test_connect.py)', '561': 'test_find_connection_file_abspath(test_connect.py)', '539': 'test_input_request(test_adapter.py)', '537': 'test_display_data(test_adapter.py)', '540': 'test_inspect_reply(test_adapter.py)', '543': 'test_kernel_info_reply(test_adapter.py)', '542': 'test_inspect_request_token(test_adapter.py)', '535': 'test_complete_reply(test_adapter.py)', '541': 'test_inspect_request(test_adapter.py)', '538': 'test_execute_request(test_adapter.py)', '545': 'test_rename_type(test_adapter.py)', '544': 'test_no_adapt(test_adapter.py)', '546': 'test_same_version(test_adapter.py)', '514': 'V5toV4TestCase(test_adapter.py)', '512': 'AdapterTest(test_adapter.py)', '526': 'test_input_request(test_adapter.py)', '523': 'test_display_data(test_adapter.py)', '527': 'test_kernel_info_reply(test_adapter.py)', '530': 'test_object_info_reply_not_found(test_adapter.py)', '529': 'test_object_info_reply(test_adapter.py)', '531': 'test_object_info_request(test_adapter.py)', '521': 'test_complete_reply(test_adapter.py)', '522': 'test_complete_request(test_adapter.py)', '524': 'test_execute_reply(test_adapter.py)', '532': 'test_rename_type(test_adapter.py)', '525': 'test_execute_request(test_adapter.py)', '528': 'test_no_adapt(test_adapter.py)', '533': 'test_same_version(test_adapter.py)', '513': 'V4toV5TestCase(test_adapter.py)', '519': 'setUp(test_adapter.py)', '515': 'test_code_to_line_no_code(test_adapter.py)', '51': 'code_to_line(adapter.py)', '158': 'get_shell_msg(client.py)', '157': 'get_iopub_msg(client.py)', '710': '__exit__(utils.py)', '709': '__enter__(utils.py)', '580': 'test_kernelapp_lifecycle(test_kernelapp.py)', '579': '_launch(test_kernelapp.py)', '473': 'clone(session.py)', '481': 'send_raw(session.py)', '683': 'test_bad_roundtrip(test_session.py)', '685': 'test_bad_unpacker(test_session.py)', '682': 'test_bad_packer(test_session.py)', '681': 'test_bad_pack(test_session.py)', '675': '_bad_packer(test_session.py)', '697': 'test_session_id(test_session.py)', '699': 'test_unique_msg_ids(test_session.py)', '445': 'msg_header(session.py)', '680': 'test_args(test_session.py)', '478': 'msg_id(session.py)', '674': 'TestSession(test_session.py)', '673': 'SessionTestCase(test_session.py)', '678': 'setUp(test_session.py)', '556': 'test_shutdown(test_client.py)', '548': '_check_reply(test_client.py)', '550': 'test_comm_info(test_client.py)', '555': 'test_kernel_info(test_client.py)', '551': 'test_complete(test_client.py)', '554': 'test_inspect(test_client.py)', '553': 'test_history(test_client.py)', '549': 'setUp(test_client.py)', '255': 'NoSuchKernel(kernelspec.py)', '117': 'reqrep(client.py)', '124': 'wrapped(client.py)', '150': '_handle_kernel_info_reply(client.py)', '125': 'HBChannel(channels.py)', '102': 'hb_channel(client.py)', '196': '_make_url(connect.py)', '91': 'reqrep(client.py)', '105': 'wrapped(client.py)', '80': 'ZMQSocketChannel(channels.py)', '154': 'control_channel(client.py)', '723': 'ioloop(threaded.py)', '160': 'hb_channel(client.py)', '171': 'stdin_channel(client.py)', '164': 'iopub_channel(client.py)', '168': 'shell_channel(client.py)', '740': 'send_interrupt(win_interrupt.py)', '334': '__del__(manager.py)', '293': 'start(kernelspecapp.py)', '294': 'path_key(kernelspecapp.py)', '735': 'start(threaded.py)', '720': 'start(threaded.py)', '141': 'start(channelsabc.py)', '432': 'start(restarter.py)', '288': 'start(kernelspecapp.py)', '89': 'start(channels.py)', '115': 'start(channels.py)', '290': 'start(kernelspecapp.py)', '438': 'parse_command_line(runapp.py)', '218': 'build_kernel_argv(consoleapp.py)', '308': '_only_once(localinterfaces.py)', '317': 'wrapped(localinterfaces.py)', '47': 'V4toV5(adapter.py)', '46': 'Adapter(adapter.py)', '77': 'object_info_request(adapter.py)', '52': 'extract_oname_v4(adapter.py)', '70': 'complete_request(adapter.py)', '75': 'kernel_info_reply(adapter.py)', '49': '_version_str_to_list(adapter.py)', '48': 'V5toV4(adapter.py)', '53': '__call__(adapter.py)', '54': 'handle_reply_status_error(adapter.py)', '57': 'update_msg_type(adapter.py)', '56': 'update_metadata(adapter.py)', '55': 'update_header(adapter.py)', '247': 'initialize(kernelapp.py)', '246': '_record_started(kernelapp.py)', '585': 'config(test_kernelmanager.py)', '262': 'install_native_kernel_spec(kernelspec.py)', '276': 'install_native_kernel_spec(kernelspec.py)', '265': 'to_json(kernelspec.py)', '264': 'to_dict(kernelspec.py)', '449': 'test_msg2obj(session.py)', '453': '__init__(session.py)', '470': '_signature_scheme_changed(session.py)', '463': '_key_default(session.py)', '447': 'new_id_bytes(session.py)', '462': '_key_changed(session.py)', '443': 'default_secure(session.py)', '469': '_session_default(session.py)', '446': 'new_id(session.py)', '413': 'list_kernel_ids(multikernelmanager.py)', '721': 'stop(threaded.py)', '724': 'start_channels(threaded.py)', '722': '_check_kernel_info_reply(threaded.py)', '716': '__init__(threaded.py)', '416': 'remove_kernel(multikernelmanager.py)', '713': 'IOLoopThread(threaded.py)', '714': 'ThreadedKernelClient(threaded.py)', '715': 'ThreadedZMQSocketChannel(threaded.py)', '731': 'flush(threaded.py)', '727': '_flush(threaded.py)', '418': 'request_shutdown(multikernelmanager.py)', '402': 'cleanup_resources(multikernelmanager.py)', '408': 'finish_shutdown(multikernelmanager.py)', '393': '__len__(multikernelmanager.py)', '198': '_session_default(connect.py)', '298': 'launch_kernel(launcher.py)', '739': 'create_interrupt_event(win_interrupt.py)', '741': 'SECURITY_ATTRIBUTES(win_interrupt.py)', '509': '__init__(signalkernel.py)', '278': '__init__(kernelspec.py)', '127': '__init__(channels.py)', '126': 'InvalidPortNumber(channels.py)', '107': '__init__(channels.py)', '81': '__init__(channels.py)', '726': '__init__(threaded.py)', '737': 'setup_stream(threaded.py)', '728': '_handle_recv(threaded.py)', '729': 'call_handlers(threaded.py)', '136': 'stop(channels.py)', '133': 'is_beating(channels.py)', '145': 'time_to_dead(channelsabc.py)', '131': 'call_handlers(channels.py)', '130': '_poll(channels.py)'}}, {'key': 200, 'parent': 1772, 'tfidf_word': 'EP: 200, Name: initialize &rarr; handle_sigint &rarr; interrupt_kernel &rarr; msg &rarr; msg &rarr; extract_header', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 202, 'parent': 1772, 'tfidf_word': 'EP: 202, Name: initialize &rarr; handle_sigint &rarr; interrupt_kernel &rarr; msg &rarr; msg &rarr; msg &rarr; extract_header', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 204, 'parent': 1773, 'tfidf_word': 'EP: 204, Name: initialize &rarr; handle_sigint &rarr; interrupt_kernel &rarr; msg &rarr; msg &rarr; extract_header', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 206, 'parent': 1773, 'tfidf_word': 'EP: 206, Name: initialize &rarr; handle_sigint &rarr; interrupt_kernel &rarr; msg &rarr; msg &rarr; msg &rarr; extract_header', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 199, 'parent': 1983, 'tfidf_word': 'EP: 199, Name: initialize &rarr; handle_sigint &rarr; interrupt_kernel &rarr; send &rarr; adapt &rarr; utcnow', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1873, 'parent': 1983, 'tfidf_word': 'handle initialize interrupt kernel send sigint message serialize sign ', 'tfidf_method': 'interrupt_kernel handle_sigint initialize send Message serialize sign ', 'lda_word': ' kernel,initialize,handle,sigint,send,', 'lda_method': ' handle_sigint,initialize,send,interrupt_kernel,message,', 'lsi_word': ' handle,interrupt,sigint,send,kernel,', 'lsi_method': ' interrupt_kernel,send,handle_sigint,initialize,sign,', 'spm_method': ' ', 'text_summary': 'Pass a message to the ZMQ socket to send.', 'files_count': 3, 'files': ['runapp.py', 'manager.py', 'session.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'437': 'initialize(runapp.py)', '435': 'handle_sigint(runapp.py)', '355': 'interrupt_kernel(manager.py)', '480': 'send(session.py)', '482': 'serialize(session.py)', '483': 'sign(session.py)', '440': 'Message(session.py)'}}, {'key': 1871, 'parent': 2353, 'tfidf_word': 'handle initialize interrupt launch sigint signal kernel ', 'tfidf_method': '_launch_kernel has_kernel interrupt_kernel handle_sigint initialize signal_kernel ', 'lda_word': ' kernel,signal,sigint,launch,interrupt,', 'lda_method': ' launch_kernel,handle_sigint,interrupt_kernel,initialize,has_kernel,', 'lsi_word': ' kernel,handle,launch,interrupt,sigint,', 'lsi_method': ' launch_kernel,initialize,interrupt_kernel,has_kernel,handle_sigint,', 'spm_method': ' ', 'text_summary': 'Has a kernel been started that we are managing. actually launch the kernel.', 'files_count': 2, 'files': ['runapp.py', 'manager.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'437': 'initialize(runapp.py)', '435': 'handle_sigint(runapp.py)', '355': 'interrupt_kernel(manager.py)', '354': 'has_kernel(manager.py)', '347': '_launch_kernel(manager.py)', '365': 'signal_kernel(manager.py)'}}, {'key': 2297, 'parent': 2353, 'tfidf_word': 'sigint interrupt create make url control thread send connect socket ', 'tfidf_method': 'handle_sigint initialize _create_connected_socket _make_url send _connect_control_socket send thread_send send_interrupt send ', 'lda_word': ' kernel,sigint,initialize,interrupt,handle,', 'lda_method': ' handle_sigint,interrupt_kernel,initialize,send,make_url,', 'lsi_word': ' interrupt,initialize,sigint,kernel,handle,', 'lsi_method': ' initialize,handle_sigint,interrupt_kernel,send,make_url,', 'spm_method': ' ', 'text_summary': 'Interrupts the kernel by sending it a signal.', 'files_count': 6, 'files': ['runapp.py', 'manager.py', 'connect.py', 'threaded.py', 'channels.py', 'win_interrupt.py'], 'execution_path_count': 6, 'function_id_to_name_file': {'437': 'initialize(runapp.py)', '435': 'handle_sigint(runapp.py)', '355': 'interrupt_kernel(manager.py)', '338': '_connect_control_socket(manager.py)', '192': '_create_connected_socket(connect.py)', '196': '_make_url(connect.py)', '734': 'send(threaded.py)', '738': 'thread_send(threaded.py)', '114': 'send(channels.py)', '88': 'send(channels.py)', '740': 'send_interrupt(win_interrupt.py)'}}, {'key': 1377, 'parent': 1558, 'tfidf_word': 'EP: 1377, Name: tunnel_connection &rarr; open_tunnel &rarr; paramiko_tunnel &rarr; _try_passwordless_paramiko &rarr; msg &rarr; msg &rarr; msg_header &rarr; msg_id', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1379, 'parent': 1558, 'tfidf_word': 'EP: 1379, Name: tunnel_connection &rarr; open_tunnel &rarr; paramiko_tunnel &rarr; _try_passwordless_paramiko &rarr; msg &rarr; msg &rarr; msg &rarr; msg_header &rarr; msg_id', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1381, 'parent': 1559, 'tfidf_word': 'EP: 1381, Name: tunnel_connection &rarr; open_tunnel &rarr; paramiko_tunnel &rarr; _try_passwordless_paramiko &rarr; msg &rarr; msg &rarr; msg_header &rarr; msg_id', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1383, 'parent': 1559, 'tfidf_word': 'EP: 1383, Name: tunnel_connection &rarr; open_tunnel &rarr; paramiko_tunnel &rarr; _try_passwordless_paramiko &rarr; msg &rarr; msg &rarr; msg &rarr; msg_header &rarr; msg_id', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1605, 'parent': 1988, 'tfidf_word': 'connection extract header open passwordless try paramiko msg tunnel ', 'tfidf_method': 'extract_header msg _try_passwordless_paramiko open_tunnel paramiko_tunnel tunnel_connection msg msg ', 'lda_word': ' tunnel,msg,paramiko,connection,header,', 'lda_method': ' msg,try_passwordless_paramiko,extract_header,tunnel_connection,open_tunnel,', 'lsi_word': ' tunnel,msg,paramiko,connection,try,', 'lsi_method': ' msg,tunnel_connection,paramiko_tunnel,try_passwordless_paramiko,open_tunnel,', 'spm_method': '  &#187; tunnel_connection(tunnel.py) &rarr; open_tunnel(tunnel.py) &rarr; paramiko_tunnel(tunnel.py) &rarr; _try_passwordless_paramiko(tunnel.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br> &#187; open_tunnel(tunnel.py) &rarr; paramiko_tunnel(tunnel.py) &rarr; _try_passwordless_paramiko(tunnel.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br>', 'text_summary': 'Open a tunneled connection from a 0MQ url. Connect a socket to an address via an ssh tunnel.', 'files_count': 3, 'files': ['tunnel.py', 'test_adapter.py', 'session.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'505': 'tunnel_connection(tunnel.py)', '500': 'open_tunnel(tunnel.py)', '502': 'paramiko_tunnel(tunnel.py)', '499': '_try_passwordless_paramiko(tunnel.py)', '520': 'msg(test_adapter.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '534': 'msg(test_adapter.py)'}}, {'key': 1606, 'parent': 1988, 'tfidf_word': 'connection extract header open passwordless try paramiko msg tunnel ', 'tfidf_method': 'extract_header msg _try_passwordless_paramiko open_tunnel paramiko_tunnel tunnel_connection msg msg ', 'lda_word': ' tunnel,msg,paramiko,open,try,', 'lda_method': ' msg,open_tunnel,paramiko_tunnel,extract_header,tunnel_connection,', 'lsi_word': ' tunnel,msg,paramiko,header,passwordless,', 'lsi_method': ' msg,extract_header,open_tunnel,paramiko_tunnel,try_passwordless_paramiko,', 'spm_method': '  &#187; tunnel_connection(tunnel.py) &rarr; open_tunnel(tunnel.py) &rarr; paramiko_tunnel(tunnel.py) &rarr; _try_passwordless_paramiko(tunnel.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br> &#187; open_tunnel(tunnel.py) &rarr; paramiko_tunnel(tunnel.py) &rarr; _try_passwordless_paramiko(tunnel.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br>', 'text_summary': 'Open a tunneled connection from a 0MQ url. This should only be used Try passwordless login with paramiko.', 'files_count': 3, 'files': ['tunnel.py', 'test_adapter.py', 'session.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'505': 'tunnel_connection(tunnel.py)', '500': 'open_tunnel(tunnel.py)', '502': 'paramiko_tunnel(tunnel.py)', '499': '_try_passwordless_paramiko(tunnel.py)', '534': 'msg(test_adapter.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '520': 'msg(test_adapter.py)'}}, {'key': 1384, 'parent': 1997, 'tfidf_word': 'EP: 1384, Name: tunnel_connection &rarr; open_tunnel &rarr; paramiko_tunnel &rarr; _try_passwordless_paramiko &rarr; _split_server', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1784, 'parent': 1997, 'tfidf_word': 'connection header open passwordless try extract id paramiko msg tunnel ', 'tfidf_method': 'msg _try_passwordless_paramiko open_tunnel paramiko_tunnel tunnel_connection extract_header msg_header msg_id ', 'lda_word': ' tunnel,paramiko,msg,open,connection,', 'lda_method': ' tunnel_connection,open_tunnel,paramiko_tunnel,try_passwordless_paramiko,msg,', 'lsi_word': ' tunnel,msg,paramiko,header,try,', 'lsi_method': ' open_tunnel,try_passwordless_paramiko,tunnel_connection,msg,paramiko_tunnel,', 'spm_method': ' ', 'text_summary': 'This should only be used Try passwordless login with paramiko. launch a tunner with paramiko in a subprocess.', 'files_count': 2, 'files': ['tunnel.py', 'session.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'505': 'tunnel_connection(tunnel.py)', '500': 'open_tunnel(tunnel.py)', '502': 'paramiko_tunnel(tunnel.py)', '499': '_try_passwordless_paramiko(tunnel.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)'}}, {'key': 1371, 'parent': 1843, 'tfidf_word': 'EP: 1371, Name: tunnel_connection &rarr; open_tunnel &rarr; select_random_ports &rarr; close', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1842, 'parent': 1843, 'tfidf_word': 'close connection open port random select tunnel ', 'tfidf_method': 'open_tunnel select_random_ports tunnel_connection close close close ', 'lda_word': ' tunnel,close,connection,open,select,', 'lda_method': ' tunnel_connection,select_random_ports,close,open_tunnel,', 'lsi_word': ' tunnel,random,select,connection,port,', 'lsi_method': ' close,open_tunnel,select_random_ports,tunnel_connection,', 'spm_method': ' ', 'text_summary': '', 'files_count': 3, 'files': ['tunnel.py', 'threaded.py', 'channels.py'], 'execution_path_count': 3, 'function_id_to_name_file': {'505': 'tunnel_connection(tunnel.py)', '500': 'open_tunnel(tunnel.py)', '503': 'select_random_ports(tunnel.py)', '718': 'close(threaded.py)', '109': 'close(channels.py)', '132': 'close(channels.py)'}}, {'key': 1366, 'parent': 1966, 'tfidf_word': 'EP: 1366, Name: tunnel_connection &rarr; open_tunnel &rarr; select_random_ports &rarr; close', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1367, 'parent': 1966, 'tfidf_word': 'EP: 1367, Name: tunnel_connection &rarr; open_tunnel &rarr; select_random_ports &rarr; ports', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1372, 'parent': 1763, 'tfidf_word': 'EP: 1372, Name: tunnel_connection &rarr; open_tunnel &rarr; paramiko_tunnel &rarr; _paramiko_tunnel &rarr; _split_server', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1373, 'parent': 1763, 'tfidf_word': 'EP: 1373, Name: tunnel_connection &rarr; open_tunnel &rarr; paramiko_tunnel &rarr; _paramiko_tunnel &rarr; forward_tunnel', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1364, 'parent': 1965, 'tfidf_word': 'EP: 1364, Name: tunnel_connection &rarr; open_tunnel &rarr; openssh_tunnel &rarr; SSHException', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1365, 'parent': 1965, 'tfidf_word': 'EP: 1365, Name: tunnel_connection &rarr; open_tunnel &rarr; openssh_tunnel &rarr; _stop_tunnel', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 183, 'parent': 2111, 'tfidf_word': 'EP: 183, Name: initialize &rarr; init_kernel_info &rarr; unpause', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 184, 'parent': 2111, 'tfidf_word': 'EP: 184, Name: initialize &rarr; init_kernel_info &rarr; unpause', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1585, 'parent': 1981, 'tfidf_word': 'header id init initialize info kernel msg ', 'tfidf_method': 'kernel_info init_kernel_info initialize msg msg_header msg_id msg msg ', 'lda_word': ' msg,info,kernel,init,initialize,', 'lda_method': ' msg,init_kernel_info,kernel_info,msg_header,initialize,', 'lsi_word': ' msg,info,kernel,init,initialize,', 'lsi_method': ' msg,initialize,msg_id,kernel_info,msg_header,', 'spm_method': '  &#187; initialize(runapp.py) &rarr; init_kernel_info(runapp.py) &rarr; kernel_info(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; init_kernel_info(runapp.py) &rarr; kernel_info(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br>', 'text_summary': '', 'files_count': 4, 'files': ['runapp.py', 'client.py', 'test_adapter.py', 'session.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'437': 'initialize(runapp.py)', '436': 'init_kernel_info(runapp.py)', '167': 'kernel_info(client.py)', '534': 'msg(test_adapter.py)', '476': 'msg(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '520': 'msg(test_adapter.py)'}}, {'key': 1795, 'parent': 1981, 'tfidf_word': 'header id init initialize info kernel msg ', 'tfidf_method': 'kernel_info init_kernel_info initialize msg msg_header msg_id msg msg ', 'lda_word': ' msg,kernel,info,header,initialize,', 'lda_method': ' msg,init_kernel_info,msg_id,kernel_info,msg_header,', 'lsi_word': ' msg,kernel,info,header,init,', 'lsi_method': ' msg,init_kernel_info,msg_id,kernel_info,msg_header,', 'spm_method': '  &#187; initialize(runapp.py) &rarr; init_kernel_info(runapp.py) &rarr; kernel_info(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; init_kernel_info(runapp.py) &rarr; kernel_info(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br>', 'text_summary': '', 'files_count': 4, 'files': ['runapp.py', 'client.py', 'session.py', 'test_adapter.py'], 'execution_path_count': 3, 'function_id_to_name_file': {'437': 'initialize(runapp.py)', '436': 'init_kernel_info(runapp.py)', '167': 'kernel_info(client.py)', '476': 'msg(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '520': 'msg(test_adapter.py)', '534': 'msg(test_adapter.py)'}}, {'key': 1770, 'parent': 2020, 'tfidf_word': 'extract header init initialize info kernel msg ', 'tfidf_method': 'kernel_info init_kernel_info initialize extract_header msg msg msg ', 'lda_word': ' msg,kernel,initialize,extract,info,', 'lda_method': ' msg,initialize,kernel_info,extract_header,init_kernel_info,', 'lsi_word': ' msg,kernel,info,init,initialize,', 'lsi_method': ' msg,extract_header,init_kernel_info,initialize,kernel_info,', 'spm_method': '  &#187; initialize(runapp.py) &rarr; init_kernel_info(runapp.py) &rarr; kernel_info(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br>', 'text_summary': '', 'files_count': 4, 'files': ['runapp.py', 'client.py', 'test_adapter.py', 'session.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'437': 'initialize(runapp.py)', '436': 'init_kernel_info(runapp.py)', '167': 'kernel_info(client.py)', '534': 'msg(test_adapter.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '520': 'msg(test_adapter.py)'}}, {'key': 1994, 'parent': 2020, 'tfidf_word': 'extract header init initialize info kernel msg ', 'tfidf_method': 'kernel_info init_kernel_info initialize extract_header msg msg msg ', 'lda_word': ' msg,info,kernel,initialize,init,', 'lda_method': ' msg,extract_header,initialize,init_kernel_info,kernel_info,', 'lsi_word': ' msg,kernel,info,extract,initialize,', 'lsi_method': ' msg,extract_header,init_kernel_info,initialize,kernel_info,', 'spm_method': '  &#187; initialize(runapp.py) &rarr; init_kernel_info(runapp.py) &rarr; kernel_info(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br>', 'text_summary': '', 'files_count': 4, 'files': ['runapp.py', 'client.py', 'session.py', 'test_adapter.py'], 'execution_path_count': 3, 'function_id_to_name_file': {'437': 'initialize(runapp.py)', '436': 'init_kernel_info(runapp.py)', '167': 'kernel_info(client.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '520': 'msg(test_adapter.py)', '534': 'msg(test_adapter.py)'}}, {'key': 1591, 'parent': 1982, 'tfidf_word': 'header id input start msg ', 'tfidf_method': 'input start start msg msg_header msg_id msg msg ', 'lda_word': ' msg,start,input,header,', 'lda_method': ' msg,start,msg_id,input,msg_header,', 'lsi_word': ' msg,start,header,input,', 'lsi_method': ' msg,start,input,msg_header,msg_id,', 'spm_method': '  &#187; start(kernelspecapp.py) &rarr; start(kernelspecapp.py) &rarr; input(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; start(kernelspecapp.py) &rarr; input(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br>', 'text_summary': '', 'files_count': 4, 'files': ['kernelspecapp.py', 'client.py', 'test_adapter.py', 'session.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'291': 'start(kernelspecapp.py)', '297': 'start(kernelspecapp.py)', '162': 'input(client.py)', '534': 'msg(test_adapter.py)', '476': 'msg(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '520': 'msg(test_adapter.py)'}}, {'key': 1796, 'parent': 1982, 'tfidf_word': 'header id input start msg ', 'tfidf_method': 'input start start msg msg_header msg_id msg msg ', 'lda_word': ' msg,start,input,header,', 'lda_method': ' msg,msg_header,start,msg_id,input,', 'lsi_word': ' msg,start,input,header,', 'lsi_method': ' msg,start,input,msg_header,msg_id,', 'spm_method': '  &#187; start(kernelspecapp.py) &rarr; start(kernelspecapp.py) &rarr; input(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; start(kernelspecapp.py) &rarr; input(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br>', 'text_summary': '', 'files_count': 4, 'files': ['kernelspecapp.py', 'client.py', 'session.py', 'test_adapter.py'], 'execution_path_count': 3, 'function_id_to_name_file': {'291': 'start(kernelspecapp.py)', '297': 'start(kernelspecapp.py)', '162': 'input(client.py)', '476': 'msg(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '520': 'msg(test_adapter.py)', '534': 'msg(test_adapter.py)'}}, {'key': 1775, 'parent': 2021, 'tfidf_word': 'extract header input start msg ', 'tfidf_method': 'input start start extract_header msg msg msg ', 'lda_word': ' msg,input,start,extract,header,', 'lda_method': ' start,msg,input,extract_header,', 'lsi_word': ' msg,start,header,input,extract,', 'lsi_method': ' msg,start,input,extract_header,', 'spm_method': '  &#187; start(kernelspecapp.py) &rarr; start(kernelspecapp.py) &rarr; input(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br>', 'text_summary': '', 'files_count': 4, 'files': ['kernelspecapp.py', 'client.py', 'test_adapter.py', 'session.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'291': 'start(kernelspecapp.py)', '297': 'start(kernelspecapp.py)', '162': 'input(client.py)', '534': 'msg(test_adapter.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '520': 'msg(test_adapter.py)'}}, {'key': 1995, 'parent': 2021, 'tfidf_word': 'extract header input start msg ', 'tfidf_method': 'input start start extract_header msg msg msg ', 'lda_word': ' msg,start,extract,input,header,', 'lda_method': ' start,extract_header,input,msg,', 'lsi_word': ' msg,start,extract,header,input,', 'lsi_method': ' msg,start,input,extract_header,', 'spm_method': '  &#187; start(kernelspecapp.py) &rarr; start(kernelspecapp.py) &rarr; input(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br>', 'text_summary': '', 'files_count': 4, 'files': ['kernelspecapp.py', 'client.py', 'session.py', 'test_adapter.py'], 'execution_path_count': 3, 'function_id_to_name_file': {'291': 'start(kernelspecapp.py)', '297': 'start(kernelspecapp.py)', '162': 'input(client.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '520': 'msg(test_adapter.py)', '534': 'msg(test_adapter.py)'}}, {'key': 1583, 'parent': 1980, 'tfidf_word': 'header id kernel paramiko ssh tunnel passwordless try msg ', 'tfidf_method': 'tunnel_to_kernel msg msg_header msg_id _try_passwordless_paramiko try_passwordless_ssh msg msg ', 'lda_word': ' msg,passwordless,tunnel,try,kernel,', 'lda_method': ' msg,try_passwordless_ssh,msg_header,try_passwordless_paramiko,tunnel_to_kernel,', 'lsi_word': ' msg,try,passwordless,ssh,paramiko,', 'lsi_method': ' msg,msg_header,msg_id,try_passwordless_paramiko,try_passwordless_ssh,', 'spm_method': '  &#187; tunnel_to_kernel(connect.py) &rarr; try_passwordless_ssh(tunnel.py) &rarr; _try_passwordless_paramiko(tunnel.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; try_passwordless_ssh(tunnel.py) &rarr; _try_passwordless_paramiko(tunnel.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br>', 'text_summary': '', 'files_count': 4, 'files': ['connect.py', 'tunnel.py', 'test_adapter.py', 'session.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'190': 'tunnel_to_kernel(connect.py)', '504': 'try_passwordless_ssh(tunnel.py)', '499': '_try_passwordless_paramiko(tunnel.py)', '534': 'msg(test_adapter.py)', '476': 'msg(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '520': 'msg(test_adapter.py)'}}, {'key': 1794, 'parent': 1980, 'tfidf_word': 'header id kernel paramiko ssh tunnel passwordless try msg ', 'tfidf_method': 'tunnel_to_kernel msg msg_header msg_id _try_passwordless_paramiko try_passwordless_ssh msg msg ', 'lda_word': ' msg,passwordless,try,paramiko,tunnel,', 'lda_method': ' msg,tunnel_to_kernel,try_passwordless_paramiko,try_passwordless_ssh,msg_id,', 'lsi_word': ' msg,passwordless,try,header,kernel,', 'lsi_method': ' msg,msg_header,tunnel_to_kernel,try_passwordless_paramiko,try_passwordless_ssh,', 'spm_method': '  &#187; tunnel_to_kernel(connect.py) &rarr; try_passwordless_ssh(tunnel.py) &rarr; _try_passwordless_paramiko(tunnel.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; try_passwordless_ssh(tunnel.py) &rarr; _try_passwordless_paramiko(tunnel.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br>', 'text_summary': '', 'files_count': 4, 'files': ['connect.py', 'tunnel.py', 'session.py', 'test_adapter.py'], 'execution_path_count': 3, 'function_id_to_name_file': {'190': 'tunnel_to_kernel(connect.py)', '504': 'try_passwordless_ssh(tunnel.py)', '499': '_try_passwordless_paramiko(tunnel.py)', '476': 'msg(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '520': 'msg(test_adapter.py)', '534': 'msg(test_adapter.py)'}}, {'key': 40, 'parent': 2404, 'tfidf_word': 'EP: 40, Name: tunnel_to_kernel &rarr; try_passwordless_ssh &rarr; _try_passwordless_openssh &rarr; SSHException', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2270, 'parent': 2404, 'tfidf_word': 'paramiko ssh tunnel extract header passwordless try server split msg ', 'tfidf_method': 'tunnel_to_kernel _try_passwordless_paramiko try_passwordless_ssh extract_header msg msg msg _split_server ', 'lda_word': ' passwordless,try,msg,paramiko,ssh,', 'lda_method': ' msg,extract_header,try_passwordless_ssh,tunnel_to_kernel,try_passwordless_paramiko,', 'lsi_word': ' try,passwordless,msg,kernel,paramiko,', 'lsi_method': ' msg,try_passwordless_paramiko,try_passwordless_ssh,tunnel_to_kernel,extract_header,', 'spm_method': '  &#187; tunnel_to_kernel(connect.py) &rarr; try_passwordless_ssh(tunnel.py) &rarr; _try_passwordless_paramiko(tunnel.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br>', 'text_summary': 'Attempt to make an ssh connection without a password. Given a message or header, return the header.', 'files_count': 4, 'files': ['connect.py', 'tunnel.py', 'test_adapter.py', 'session.py'], 'execution_path_count': 6, 'function_id_to_name_file': {'190': 'tunnel_to_kernel(connect.py)', '504': 'try_passwordless_ssh(tunnel.py)', '499': '_try_passwordless_paramiko(tunnel.py)', '496': '_split_server(tunnel.py)', '534': 'msg(test_adapter.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '520': 'msg(test_adapter.py)'}}, {'key': 311, 'parent': 1474, 'tfidf_word': 'EP: 311, Name: restart_kernel &rarr; shutdown_kernel &rarr; request_shutdown &rarr; _connect_control_socket &rarr; _create_connected_socket &rarr; _make_url', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 382, 'parent': 1474, 'tfidf_word': 'EP: 382, Name: start_new_async_kernel &rarr; shutdown_kernel &rarr; request_shutdown &rarr; _connect_control_socket &rarr; _create_connected_socket &rarr; _make_url', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 489, 'parent': 1901, 'tfidf_word': 'EP: 489, Name: control_channel &rarr; connect_control &rarr; _create_connected_socket &rarr; _make_url', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 600, 'parent': 1901, 'tfidf_word': 'EP: 600, Name: IOLoopKernelManager &rarr; connect_control &rarr; _create_connected_socket &rarr; _make_url', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 608, 'parent': 1913, 'tfidf_word': 'EP: 608, Name: AsyncIOLoopKernelManager &rarr; connect_stdin &rarr; _create_connected_socket &rarr; _make_url', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1900, 'parent': 1913, 'tfidf_word': 'make socket url channel io kernel loop manager connect stdin ', 'tfidf_method': '_create_connected_socket _make_url connect_stdin stdin_channel IOLoopKernelManager ', 'lda_word': ' connect,stdin,socket,make,create,', 'lda_method': ' create_connected_socket,connect_stdin,make_url,ioloopkernelmanager,stdin_channel,', 'lsi_word': ' connect,stdin,socket,url,make,', 'lsi_method': ' create_connected_socket,connect_stdin,make_url,stdin_channel,ioloopkernelmanager,', 'spm_method': ' ', 'text_summary': 'return zmq Socket connected to the StdIn channel.', 'files_count': 3, 'files': ['client.py', 'connect.py', 'manager.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'171': 'stdin_channel(client.py)', '207': 'connect_stdin(connect.py)', '192': '_create_connected_socket(connect.py)', '196': '_make_url(connect.py)', '225': 'IOLoopKernelManager(manager.py)'}}, {'key': 1912, 'parent': 2662, 'tfidf_word': 'socket url io kernel loop manager connect shell async channel ', 'tfidf_method': '_create_connected_socket _make_url connect_shell shell_channel AsyncIOLoopKernelManager IOLoopKernelManager ', 'lda_word': ' make,connect,url,socket,shell,', 'lda_method': ' make_url,connect_shell,create_connected_socket,ioloopkernelmanager,asyncioloopkernelmanager,', 'lsi_word': ' connect,shell,socket,make,url,', 'lsi_method': ' connect_shell,create_connected_socket,make_url,ioloopkernelmanager,asyncioloopkernelmanager,', 'spm_method': ' ', 'text_summary': 'return zmq Socket connected to the Shell channel.', 'files_count': 3, 'files': ['manager.py', 'connect.py', 'client.py'], 'execution_path_count': 3, 'function_id_to_name_file': {'224': 'AsyncIOLoopKernelManager(manager.py)', '206': 'connect_shell(connect.py)', '192': '_create_connected_socket(connect.py)', '196': '_make_url(connect.py)', '168': 'shell_channel(client.py)', '225': 'IOLoopKernelManager(manager.py)'}}, {'key': 2406, 'parent': 2662, 'tfidf_word': 'connect socket async hb del control close channel interrupt iopub ', 'tfidf_method': '_create_connected_socket _make_url connect_iopub connect_hb AsyncIOLoopKernelManager IOLoopKernelManager iopub_channel interrupt_kernel __del__ _close_control_socket ', 'lda_word': ' connect,async,iopub,io,kernel,', 'lda_method': ' create_connected_socket,make_url,connect_iopub,asyncioloopkernelmanager,ioloopkernelmanager,', 'lsi_word': ' connect,socket,make,url,create,', 'lsi_method': ' make_url,create_connected_socket,connect_iopub,ioloopkernelmanager,asyncioloopkernelmanager,', 'spm_method': ' ', 'text_summary': 'Create a zmq Socket and connect it to the kernel. return zmq Socket connected to the Heartbeat channel. return zmq Socket connected to the IOPub channel.', 'files_count': 3, 'files': ['manager.py', 'connect.py', 'client.py'], 'execution_path_count': 7, 'function_id_to_name_file': {'224': 'AsyncIOLoopKernelManager(manager.py)', '205': 'connect_iopub(connect.py)', '192': '_create_connected_socket(connect.py)', '196': '_make_url(connect.py)', '164': 'iopub_channel(client.py)', '225': 'IOLoopKernelManager(manager.py)', '204': 'connect_hb(connect.py)', '334': '__del__(manager.py)', '337': '_close_control_socket(manager.py)', '328': 'interrupt_kernel(manager.py)'}}, {'key': 352, 'parent': 2120, 'tfidf_word': 'EP: 352, Name: interrupt_kernel &rarr; has_kernel &rarr; _launch_kernel', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 605, 'parent': 2120, 'tfidf_word': 'EP: 605, Name: start_restarter &rarr; has_kernel &rarr; _launch_kernel', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 237, 'parent': 1998, 'tfidf_word': 'EP: 237, Name: start &rarr; start &rarr; execute_interactive &rarr; is_alive &rarr; has_kernel &rarr; _launch_kernel', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 246, 'parent': 1998, 'tfidf_word': 'EP: 246, Name: start &rarr; start &rarr; execute_interactive &rarr; is_alive &rarr; has_kernel &rarr; _launch_kernel', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1277, 'parent': 2037, 'tfidf_word': 'EP: 1277, Name: do_execute &rarr; poll &rarr; is_alive &rarr; has_kernel &rarr; _launch_kernel', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2035, 'parent': 2037, 'tfidf_word': 'launch ready wait alive kernel beating channels stop ', 'tfidf_method': '_launch_kernel has_kernel is_alive is_alive wait_for_ready wait_for_ready is_beating is_alive stop_channels ', 'lda_word': ' alive,kernel,launch,ready,wait,', 'lda_method': ' has_kernel,launch_kernel,is_alive,is_beating,wait_for_ready,', 'lsi_word': ' kernel,alive,launch,ready,wait,', 'lsi_method': ' is_alive,has_kernel,launch_kernel,wait_for_ready,stop_channels,', 'spm_method': ' ', 'text_summary': '', 'files_count': 4, 'files': ['client.py', 'manager.py', 'channels.py', 'threaded.py'], 'execution_path_count': 4, 'function_id_to_name_file': {'123': 'wait_for_ready(client.py)', '165': 'is_alive(client.py)', '357': 'is_alive(manager.py)', '354': 'has_kernel(manager.py)', '347': '_launch_kernel(manager.py)', '104': 'wait_for_ready(client.py)', '103': 'is_alive(client.py)', '133': 'is_beating(channels.py)', '725': 'stop_channels(threaded.py)'}}, {'key': 329, 'parent': 1416, 'tfidf_word': 'EP: 329, Name: restart_kernel &rarr; shutdown_kernel &rarr; finish_shutdown &rarr; _async_wait &rarr; is_alive &rarr; has_kernel &rarr; _launch_kernel', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 400, 'parent': 1416, 'tfidf_word': 'EP: 400, Name: start_new_async_kernel &rarr; shutdown_kernel &rarr; finish_shutdown &rarr; _async_wait &rarr; is_alive &rarr; has_kernel &rarr; _launch_kernel', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1406, 'parent': 2006, 'tfidf_word': 'finish kill launch wait new restart start async shutdown kernel ', 'tfidf_method': '_async_wait _kill_kernel finish_shutdown is_alive shutdown_kernel _launch_kernel has_kernel start_new_async_kernel restart_kernel ', 'lda_word': ' kernel,async,launch,alive,finish,', 'lda_method': ' shutdown_kernel,finish_shutdown,is_alive,launch_kernel,kill_kernel,', 'lsi_word': ' kernel,shutdown,async,finish,kill,', 'lsi_method': ' shutdown_kernel,has_kernel,launch_kernel,kill_kernel,finish_shutdown,', 'spm_method': '  &#187; shutdown_kernel(manager.py) &rarr; finish_shutdown(manager.py) &rarr; _kill_kernel(manager.py) &rarr; _async_wait(manager.py) &rarr; is_alive(manager.py) &rarr; has_kernel(manager.py) &rarr; _launch_kernel(manager.py) . <br> &#187; finish_shutdown(manager.py) &rarr; _kill_kernel(manager.py) &rarr; _async_wait(manager.py) &rarr; is_alive(manager.py) &rarr; has_kernel(manager.py) &rarr; _launch_kernel(manager.py) . <br>', 'text_summary': "actually launch the kernel. Wait for kernel shutdown, then kill process if it doesn't shutdown.", 'files_count': 1, 'files': ['manager.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'330': 'restart_kernel(manager.py)', '331': 'shutdown_kernel(manager.py)', '327': 'finish_shutdown(manager.py)', '325': '_kill_kernel(manager.py)', '324': '_async_wait(manager.py)', '329': 'is_alive(manager.py)', '354': 'has_kernel(manager.py)', '347': '_launch_kernel(manager.py)', '322': 'start_new_async_kernel(manager.py)'}}, {'key': 1410, 'parent': 2006, 'tfidf_word': 'alive kill launch shutdown wait new restart start async kernel ', 'tfidf_method': '_async_wait _kill_kernel is_alive shutdown_kernel _launch_kernel has_kernel start_new_async_kernel restart_kernel ', 'lda_word': ' kernel,wait,kill,launch,shutdown,', 'lda_method': ' is_alive,launch_kernel,shutdown_kernel,async_wait,kill_kernel,', 'lsi_word': ' kernel,async,shutdown,kill,launch,', 'lsi_method': ' async_wait,launch_kernel,shutdown_kernel,kill_kernel,is_alive,', 'spm_method': '  &#187; shutdown_kernel(manager.py) &rarr; _kill_kernel(manager.py) &rarr; _async_wait(manager.py) &rarr; is_alive(manager.py) &rarr; has_kernel(manager.py) &rarr; _launch_kernel(manager.py) . <br>', 'text_summary': 'actually launch the kernel. Restarts a kernel with the arguments that were used to launch it.', 'files_count': 1, 'files': ['manager.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'330': 'restart_kernel(manager.py)', '331': 'shutdown_kernel(manager.py)', '325': '_kill_kernel(manager.py)', '324': '_async_wait(manager.py)', '329': 'is_alive(manager.py)', '354': 'has_kernel(manager.py)', '347': '_launch_kernel(manager.py)', '322': 'start_new_async_kernel(manager.py)'}}, {'key': 1480, 'parent': 2277, 'tfidf_word': 'finish kill launch async new restart start shutdown kernel ', 'tfidf_method': '_kill_kernel finish_shutdown shutdown_kernel _launch_kernel has_kernel start_new_async_kernel restart_kernel ', 'lda_word': ' kernel,shutdown,kill,finish,launch,', 'lda_method': ' kill_kernel,launch_kernel,has_kernel,finish_shutdown,shutdown_kernel,', 'lsi_word': ' kernel,shutdown,finish,kill,launch,', 'lsi_method': ' finish_shutdown,shutdown_kernel,has_kernel,kill_kernel,launch_kernel,', 'spm_method': ' ', 'text_summary': "actually launch the kernel. Wait for kernel shutdown, then kill process if it doesn't shutdown.", 'files_count': 1, 'files': ['manager.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'330': 'restart_kernel(manager.py)', '331': 'shutdown_kernel(manager.py)', '327': 'finish_shutdown(manager.py)', '325': '_kill_kernel(manager.py)', '354': 'has_kernel(manager.py)', '347': '_launch_kernel(manager.py)', '322': 'start_new_async_kernel(manager.py)'}}, {'key': 1680, 'parent': 2277, 'tfidf_word': 'kill launch shutdown async new restart start kernel ', 'tfidf_method': '_kill_kernel shutdown_kernel _launch_kernel has_kernel start_new_async_kernel restart_kernel ', 'lda_word': ' kernel,kill,launch,shutdown,restart,', 'lda_method': ' shutdown_kernel,launch_kernel,has_kernel,kill_kernel,restart_kernel,', 'lsi_word': ' kernel,launch,kill,shutdown,new,', 'lsi_method': ' has_kernel,kill_kernel,launch_kernel,shutdown_kernel,restart_kernel,', 'spm_method': ' ', 'text_summary': 'actually launch the kernel. Restarts a kernel with the arguments that were used to launch it.', 'files_count': 1, 'files': ['manager.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'330': 'restart_kernel(manager.py)', '331': 'shutdown_kernel(manager.py)', '325': '_kill_kernel(manager.py)', '354': 'has_kernel(manager.py)', '347': '_launch_kernel(manager.py)', '322': 'start_new_async_kernel(manager.py)'}}, {'key': 346, 'parent': 2295, 'tfidf_word': 'EP: 346, Name: interrupt_kernel &rarr; signal_kernel &rarr; has_kernel &rarr; _launch_kernel', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2049, 'parent': 2295, 'tfidf_word': 'kill launch signal async finish new restart start shutdown kernel ', 'tfidf_method': '_kill_kernel shutdown_kernel signal_kernel _launch_kernel has_kernel start_new_async_kernel finish_shutdown restart_kernel ', 'lda_word': ' kernel,shutdown,kill,launch,signal,', 'lda_method': ' has_kernel,shutdown_kernel,kill_kernel,launch_kernel,signal_kernel,', 'lsi_word': ' kernel,shutdown,launch,signal,kill,', 'lsi_method': ' shutdown_kernel,launch_kernel,kill_kernel,has_kernel,signal_kernel,', 'spm_method': '  &#187; restart_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; _kill_kernel(manager.py) &rarr; signal_kernel(manager.py) &rarr; has_kernel(manager.py) &rarr; _launch_kernel(manager.py) . <br> &#187; shutdown_kernel(manager.py) &rarr; finish_shutdown(manager.py) &rarr; _kill_kernel(manager.py) &rarr; signal_kernel(manager.py) &rarr; has_kernel(manager.py) &rarr; _launch_kernel(manager.py) . <br> &#187; start_new_async_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; _kill_kernel(manager.py) &rarr; signal_kernel(manager.py) &rarr; has_kernel(manager.py) &rarr; _launch_kernel(manager.py) . <br>', 'text_summary': "actually launch the kernel. Wait for kernel shutdown, then kill process if it doesn't shutdown. Kill the running kernel.", 'files_count': 1, 'files': ['manager.py'], 'execution_path_count': 4, 'function_id_to_name_file': {'330': 'restart_kernel(manager.py)', '331': 'shutdown_kernel(manager.py)', '327': 'finish_shutdown(manager.py)', '325': '_kill_kernel(manager.py)', '332': 'signal_kernel(manager.py)', '354': 'has_kernel(manager.py)', '347': '_launch_kernel(manager.py)', '322': 'start_new_async_kernel(manager.py)'}}, {'key': 1475, 'parent': 2279, 'tfidf_word': 'header msg request send async new restart start kernel shutdown ', 'tfidf_method': 'shutdown_kernel request_shutdown extract_header msg send start_new_async_kernel restart_kernel ', 'lda_word': ' kernel,shutdown,header,send,extract,', 'lda_method': ' extract_header,shutdown_kernel,request_shutdown,send,msg,', 'lsi_word': ' kernel,shutdown,send,msg,request,', 'lsi_method': ' extract_header,shutdown_kernel,request_shutdown,send,msg,', 'spm_method': ' ', 'text_summary': 'Restarts a kernel with the arguments that were used to launch it. Pass a message to the ZMQ socket to send.', 'files_count': 2, 'files': ['manager.py', 'session.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'330': 'restart_kernel(manager.py)', '331': 'shutdown_kernel(manager.py)', '362': 'request_shutdown(manager.py)', '480': 'send(session.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '322': 'start_new_async_kernel(manager.py)'}}, {'key': 1683, 'parent': 2279, 'tfidf_word': 'extract header msg request async new restart start kernel shutdown ', 'tfidf_method': 'shutdown_kernel request_shutdown extract_header msg start_new_async_kernel restart_kernel ', 'lda_word': ' shutdown,kernel,extract,msg,header,', 'lda_method': ' request_shutdown,msg,extract_header,shutdown_kernel,restart_kernel,', 'lsi_word': ' shutdown,kernel,msg,request,header,', 'lsi_method': ' extract_header,request_shutdown,shutdown_kernel,msg,restart_kernel,', 'spm_method': ' ', 'text_summary': 'Attempts to stop the kernel process cleanly.', 'files_count': 2, 'files': ['manager.py', 'session.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'330': 'restart_kernel(manager.py)', '331': 'shutdown_kernel(manager.py)', '362': 'request_shutdown(manager.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '322': 'start_new_async_kernel(manager.py)'}}, {'key': 2051, 'parent': 2372, 'tfidf_word': 'extract header request async new restart start kernel shutdown msg ', 'tfidf_method': 'shutdown_kernel request_shutdown extract_header msg msg start_new_async_kernel restart_kernel msg ', 'lda_word': ' msg,kernel,shutdown,extract,header,', 'lda_method': ' msg,extract_header,request_shutdown,shutdown_kernel,restart_kernel,', 'lsi_word': ' msg,shutdown,kernel,extract,request,', 'lsi_method': ' msg,request_shutdown,extract_header,shutdown_kernel,start_new_async_kernel,', 'spm_method': '  &#187; restart_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br> &#187; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) &rarr; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br> &#187; start_new_async_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br>', 'text_summary': 'Given a message or header, return the header.', 'files_count': 3, 'files': ['manager.py', 'test_adapter.py', 'session.py'], 'execution_path_count': 4, 'function_id_to_name_file': {'330': 'restart_kernel(manager.py)', '331': 'shutdown_kernel(manager.py)', '362': 'request_shutdown(manager.py)', '520': 'msg(test_adapter.py)', '534': 'msg(test_adapter.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '322': 'start_new_async_kernel(manager.py)'}}, {'key': 2052, 'parent': 2372, 'tfidf_word': 'extract header request async new restart start kernel shutdown msg ', 'tfidf_method': 'shutdown_kernel request_shutdown extract_header msg msg start_new_async_kernel restart_kernel msg ', 'lda_word': ' msg,kernel,shutdown,request,header,', 'lda_method': ' msg,restart_kernel,extract_header,request_shutdown,shutdown_kernel,', 'lsi_word': ' msg,shutdown,kernel,request,header,', 'lsi_method': ' msg,extract_header,request_shutdown,shutdown_kernel,restart_kernel,', 'spm_method': '  &#187; restart_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br> &#187; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) &rarr; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br> &#187; start_new_async_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br>', 'text_summary': 'Attempts to stop the kernel process cleanly. Restarts a kernel with the arguments that were used to launch it. Send a shutdown request via control channel.', 'files_count': 3, 'files': ['manager.py', 'test_adapter.py', 'session.py'], 'execution_path_count': 4, 'function_id_to_name_file': {'330': 'restart_kernel(manager.py)', '331': 'shutdown_kernel(manager.py)', '362': 'request_shutdown(manager.py)', '534': 'msg(test_adapter.py)', '520': 'msg(test_adapter.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '322': 'start_new_async_kernel(manager.py)'}}, {'key': 1477, 'parent': 2319, 'tfidf_word': 'adapt request send utcnow async new restart start kernel shutdown ', 'tfidf_method': 'shutdown_kernel request_shutdown utcnow send adapt start_new_async_kernel restart_kernel ', 'lda_word': ' shutdown,kernel,send,utcnow,request,', 'lda_method': ' send,utcnow,shutdown_kernel,adapt,request_shutdown,', 'lsi_word': ' shutdown,kernel,send,request,utcnow,', 'lsi_method': ' shutdown_kernel,send,utcnow,request_shutdown,adapt,', 'spm_method': ' ', 'text_summary': 'Attempts to stop the kernel process cleanly. Restarts a kernel with the arguments that were used to launch it.', 'files_count': 3, 'files': ['manager.py', 'session.py', 'adapter.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'330': 'restart_kernel(manager.py)', '331': 'shutdown_kernel(manager.py)', '362': 'request_shutdown(manager.py)', '480': 'send(session.py)', '50': 'adapt(adapter.py)', '450': 'utcnow(session.py)', '322': 'start_new_async_kernel(manager.py)'}}, {'key': 2280, 'parent': 2319, 'tfidf_word': 'send async message new restart serialize sign start kernel shutdown ', 'tfidf_method': 'shutdown_kernel request_shutdown send start_new_async_kernel restart_kernel Message serialize sign ', 'lda_word': ' kernel,shutdown,send,request,new,', 'lda_method': ' sign,serialize,send,request_shutdown,shutdown_kernel,', 'lsi_word': ' shutdown,kernel,request,send,async,', 'lsi_method': ' shutdown_kernel,send,request_shutdown,sign,serialize,', 'spm_method': ' ', 'text_summary': 'Attempts to stop the kernel process cleanly. Restarts a kernel with the arguments that were used to launch it. Pass a message to the ZMQ socket to send.', 'files_count': 2, 'files': ['manager.py', 'session.py'], 'execution_path_count': 4, 'function_id_to_name_file': {'330': 'restart_kernel(manager.py)', '331': 'shutdown_kernel(manager.py)', '362': 'request_shutdown(manager.py)', '480': 'send(session.py)', '482': 'serialize(session.py)', '483': 'sign(session.py)', '322': 'start_new_async_kernel(manager.py)', '440': 'Message(session.py)'}}, {'key': 1686, 'parent': 2387, 'tfidf_word': 'request thread async new restart start kernel send shutdown ', 'tfidf_method': 'shutdown_kernel request_shutdown send thread_send start_new_async_kernel restart_kernel ', 'lda_word': ' send,kernel,shutdown,thread,request,', 'lda_method': ' shutdown_kernel,thread_send,send,request_shutdown,start_new_async_kernel,', 'lsi_word': ' shutdown,kernel,send,thread,request,', 'lsi_method': ' request_shutdown,send,shutdown_kernel,thread_send,start_new_async_kernel,', 'spm_method': ' ', 'text_summary': 'Pass a message to the ZMQ socket to send.', 'files_count': 2, 'files': ['manager.py', 'threaded.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'330': 'restart_kernel(manager.py)', '331': 'shutdown_kernel(manager.py)', '362': 'request_shutdown(manager.py)', '734': 'send(threaded.py)', '738': 'thread_send(threaded.py)', '322': 'start_new_async_kernel(manager.py)'}}, {'key': 2338, 'parent': 2387, 'tfidf_word': 'request send async new restart start kernel shutdown ', 'tfidf_method': 'shutdown_kernel request_shutdown send start_new_async_kernel restart_kernel send ', 'lda_word': ' kernel,request,shutdown,send,start,', 'lda_method': ' shutdown_kernel,request_shutdown,send,start_new_async_kernel,restart_kernel,', 'lsi_word': ' shutdown,kernel,request,send,new,', 'lsi_method': ' request_shutdown,send,shutdown_kernel,restart_kernel,start_new_async_kernel,', 'spm_method': ' ', 'text_summary': 'Restarts a kernel with the arguments that were used to launch it. Pass a message to the ZMQ socket to send. Send a shutdown request via control channel.', 'files_count': 2, 'files': ['manager.py', 'channels.py'], 'execution_path_count': 4, 'function_id_to_name_file': {'330': 'restart_kernel(manager.py)', '331': 'shutdown_kernel(manager.py)', '362': 'request_shutdown(manager.py)', '88': 'send(channels.py)', '114': 'send(channels.py)', '322': 'start_new_async_kernel(manager.py)'}}, {'key': 305, 'parent': 2117, 'tfidf_word': 'EP: 305, Name: restart_kernel &rarr; shutdown_kernel &rarr; stop_restarter', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 376, 'parent': 2117, 'tfidf_word': 'EP: 376, Name: start_new_async_kernel &rarr; shutdown_kernel &rarr; stop_restarter', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1883, 'parent': 2671, 'tfidf_word': 'finish launch async new restart start shutdown kernel ', 'tfidf_method': '_launch_kernel finish_shutdown shutdown_kernel start_new_async_kernel restart_kernel ', 'lda_word': ' kernel,shutdown,launch,finish,restart,', 'lda_method': ' launch_kernel,finish_shutdown,start_new_async_kernel,shutdown_kernel,restart_kernel,', 'lsi_word': ' kernel,shutdown,finish,launch,new,', 'lsi_method': ' finish_shutdown,launch_kernel,shutdown_kernel,start_new_async_kernel,restart_kernel,', 'spm_method': ' ', 'text_summary': 'actually launch the kernel.', 'files_count': 1, 'files': ['manager.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'330': 'restart_kernel(manager.py)', '331': 'shutdown_kernel(manager.py)', '327': 'finish_shutdown(manager.py)', '326': '_launch_kernel(manager.py)', '322': 'start_new_async_kernel(manager.py)'}}, {'key': 2380, 'parent': 2671, 'tfidf_word': 'kill launch async finish new restart start shutdown kernel ', 'tfidf_method': '_kill_kernel _launch_kernel shutdown_kernel start_new_async_kernel finish_shutdown restart_kernel ', 'lda_word': ' kernel,shutdown,launch,kill,restart,', 'lda_method': ' launch_kernel,kill_kernel,shutdown_kernel,start_new_async_kernel,finish_shutdown,', 'lsi_word': ' kernel,shutdown,kill,launch,finish,', 'lsi_method': ' kill_kernel,launch_kernel,shutdown_kernel,finish_shutdown,restart_kernel,', 'spm_method': ' ', 'text_summary': "actually launch the kernel. Wait for kernel shutdown, then kill process if it doesn't shutdown.", 'files_count': 1, 'files': ['manager.py'], 'execution_path_count': 4, 'function_id_to_name_file': {'330': 'restart_kernel(manager.py)', '331': 'shutdown_kernel(manager.py)', '327': 'finish_shutdown(manager.py)', '325': '_kill_kernel(manager.py)', '326': '_launch_kernel(manager.py)', '322': 'start_new_async_kernel(manager.py)'}}, {'key': 1472, 'parent': 2278, 'tfidf_word': 'ipc port resource shutdown async new restart start kernel cleanup ', 'tfidf_method': 'cleanup_ipc_files ports shutdown_kernel cleanup cleanup_resources start_new_async_kernel restart_kernel ', 'lda_word': ' cleanup,kernel,shutdown,file,port,', 'lda_method': ' shutdown_kernel,cleanup_resources,port,cleanup,cleanup_ipc_files,', 'lsi_word': ' cleanup,kernel,file,shutdown,resource,', 'lsi_method': ' cleanup,shutdown_kernel,port,cleanup_ipc_files,cleanup_resources,', 'spm_method': ' ', 'text_summary': '', 'files_count': 2, 'files': ['manager.py', 'connect.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'330': 'restart_kernel(manager.py)', '331': 'shutdown_kernel(manager.py)', '349': 'cleanup(manager.py)', '350': 'cleanup_resources(manager.py)', '201': 'cleanup_ipc_files(connect.py)', '211': 'ports(connect.py)', '322': 'start_new_async_kernel(manager.py)'}}, {'key': 1681, 'parent': 2278, 'tfidf_word': 'ipc port resource shutdown async new restart start cleanup kernel ', 'tfidf_method': 'cleanup_ipc_files ports shutdown_kernel cleanup_resources start_new_async_kernel restart_kernel ', 'lda_word': ' kernel,cleanup,ipc,port,file,', 'lda_method': ' cleanup_resources,cleanup_ipc_files,port,shutdown_kernel,start_new_async_kernel,', 'lsi_word': ' cleanup,kernel,shutdown,resource,port,', 'lsi_method': ' cleanup_ipc_files,port,shutdown_kernel,cleanup_resources,start_new_async_kernel,', 'spm_method': ' ', 'text_summary': '', 'files_count': 2, 'files': ['manager.py', 'connect.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'330': 'restart_kernel(manager.py)', '331': 'shutdown_kernel(manager.py)', '350': 'cleanup_resources(manager.py)', '201': 'cleanup_ipc_files(connect.py)', '211': 'ports(connect.py)', '322': 'start_new_async_kernel(manager.py)'}}, {'key': 1682, 'parent': 2381, 'tfidf_word': 'connection file resource shutdown async new restart start kernel cleanup ', 'tfidf_method': 'cleanup_connection_file shutdown_kernel cleanup cleanup_resources start_new_async_kernel restart_kernel ', 'lda_word': ' cleanup,connection,shutdown,kernel,file,', 'lda_method': ' cleanup,shutdown_kernel,start_new_async_kernel,cleanup_connection_file,cleanup_resources,', 'lsi_word': ' cleanup,kernel,resource,file,connection,', 'lsi_method': ' cleanup_resources,shutdown_kernel,cleanup_connection_file,cleanup,restart_kernel,', 'spm_method': ' ', 'text_summary': '', 'files_count': 2, 'files': ['manager.py', 'connect.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'330': 'restart_kernel(manager.py)', '331': 'shutdown_kernel(manager.py)', '349': 'cleanup(manager.py)', '350': 'cleanup_resources(manager.py)', '200': 'cleanup_connection_file(connect.py)', '322': 'start_new_async_kernel(manager.py)'}}, {'key': 1881, 'parent': 2381, 'tfidf_word': 'connection file resource shutdown async new restart start cleanup kernel ', 'tfidf_method': 'cleanup_connection_file shutdown_kernel cleanup_resources start_new_async_kernel restart_kernel ', 'lda_word': ' kernel,cleanup,connection,shutdown,restart,', 'lda_method': ' cleanup_connection_file,cleanup_resources,shutdown_kernel,start_new_async_kernel,restart_kernel,', 'lsi_word': ' cleanup,kernel,shutdown,resource,file,', 'lsi_method': ' shutdown_kernel,cleanup_resources,cleanup_connection_file,restart_kernel,start_new_async_kernel,', 'spm_method': ' ', 'text_summary': '', 'files_count': 2, 'files': ['manager.py', 'connect.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'330': 'restart_kernel(manager.py)', '331': 'shutdown_kernel(manager.py)', '350': 'cleanup_resources(manager.py)', '200': 'cleanup_connection_file(connect.py)', '322': 'start_new_async_kernel(manager.py)'}}, {'key': 953, 'parent': 1540, 'tfidf_word': 'EP: 953, Name: test_object_info_request &rarr; msg &rarr; msg &rarr; msg &rarr; msg_header &rarr; msg_id', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1539, 'parent': 1540, 'tfidf_word': 'serialize rename version type kernel interrupt identity feed raw msg ', 'tfidf_method': 'test_same_version test_rename_type test_execute_request test_send_raw test_execute_reply test_complete_request test_complete_reply interrupt_kernel test_no_adapt test_serialize ', 'lda_word': ' msg,header,test,complete,request,', 'lda_method': ' msg,msg_id,msg_header,test_msg,test_feed_identities,', 'lsi_word': ' msg,header,test,complete,reply,', 'lsi_method': ' msg,msg_header,msg_id,test_complete_reply,is_complete,', 'spm_method': ' ', 'text_summary': 'scrub the front for zmq IDENTITIES.', 'files_count': 5, 'files': ['test_adapter.py', 'session.py', 'test_session.py', 'manager.py', 'client.py'], 'execution_path_count': 14, 'function_id_to_name_file': {'521': 'test_complete_reply(test_adapter.py)', '520': 'msg(test_adapter.py)', '534': 'msg(test_adapter.py)', '476': 'msg(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '522': 'test_complete_request(test_adapter.py)', '524': 'test_execute_reply(test_adapter.py)', '525': 'test_execute_request(test_adapter.py)', '532': 'test_rename_type(test_adapter.py)', '528': 'test_no_adapt(test_adapter.py)', '533': 'test_same_version(test_adapter.py)', '695': 'test_send_raw(test_session.py)', '692': 'test_feed_identities(test_session.py)', '694': 'test_send(test_session.py)', '696': 'test_serialize(test_session.py)', '693': 'test_msg(test_session.py)', '328': 'interrupt_kernel(manager.py)', '166': 'is_complete(client.py)'}}, {'key': 1017, 'parent': 1660, 'tfidf_word': 'EP: 1017, Name: test_inspect_request_token &rarr; msg &rarr; msg &rarr; msg_header &rarr; msg_id', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1659, 'parent': 1660, 'tfidf_word': 'reply rename version type inspect identity feed execute raw msg ', 'tfidf_method': 'test_complete_reply test_complete_request test_execute_request test_inspect_request test_no_adapt test_rename_type test_same_version test_feed_identities test_send test_send_raw ', 'lda_word': ' msg,test,header,send,complete,', 'lda_method': ' msg,msg_header,msg_id,test_send_raw,test_same_version,', 'lsi_word': ' msg,header,test,request,complete,', 'lsi_method': ' msg,msg_header,msg_id,test_same_version,test_inspect_request,', 'spm_method': ' ', 'text_summary': 'Empty', 'files_count': 3, 'files': ['test_adapter.py', 'session.py', 'test_session.py'], 'execution_path_count': 10, 'function_id_to_name_file': {'541': 'test_inspect_request(test_adapter.py)', '534': 'msg(test_adapter.py)', '476': 'msg(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '535': 'test_complete_reply(test_adapter.py)', '536': 'test_complete_request(test_adapter.py)', '538': 'test_execute_request(test_adapter.py)', '545': 'test_rename_type(test_adapter.py)', '546': 'test_same_version(test_adapter.py)', '544': 'test_no_adapt(test_adapter.py)', '695': 'test_send_raw(test_session.py)', '694': 'test_send(test_session.py)', '692': 'test_feed_identities(test_session.py)'}}, {'key': 1019, 'parent': 1553, 'tfidf_word': 'EP: 1019, Name: test_inspect_request_token &rarr; msg &rarr; msg &rarr; msg &rarr; msg_header &rarr; msg_id', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1552, 'parent': 1553, 'tfidf_word': 'raw kernel type interrupt inspect identity feed execute version msg ', 'tfidf_method': 'test_same_version test_rename_type test_execute_request test_inspect_request test_send_raw test_complete_request test_complete_reply interrupt_kernel test_no_adapt test_serialize ', 'lda_word': ' msg,header,test,inspect,complete,', 'lda_method': ' msg,msg_id,msg_header,test_msg,test_same_version,', 'lsi_word': ' msg,header,test,request,complete,', 'lsi_method': ' msg,msg_id,msg_header,test_complete_reply,test_serialize,', 'spm_method': ' ', 'text_summary': 'message format.', 'files_count': 5, 'files': ['test_adapter.py', 'session.py', 'test_session.py', 'manager.py', 'client.py'], 'execution_path_count': 14, 'function_id_to_name_file': {'541': 'test_inspect_request(test_adapter.py)', '534': 'msg(test_adapter.py)', '520': 'msg(test_adapter.py)', '476': 'msg(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '535': 'test_complete_reply(test_adapter.py)', '536': 'test_complete_request(test_adapter.py)', '538': 'test_execute_request(test_adapter.py)', '545': 'test_rename_type(test_adapter.py)', '544': 'test_no_adapt(test_adapter.py)', '546': 'test_same_version(test_adapter.py)', '695': 'test_send_raw(test_session.py)', '692': 'test_feed_identities(test_session.py)', '694': 'test_send(test_session.py)', '696': 'test_serialize(test_session.py)', '693': 'test_msg(test_session.py)', '328': 'interrupt_kernel(manager.py)', '166': 'is_complete(client.py)'}}, {'key': 961, 'parent': 1651, 'tfidf_word': 'EP: 961, Name: test_object_info_reply_not_found &rarr; msg &rarr; msg &rarr; msg_header &rarr; msg_id', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1650, 'parent': 1651, 'tfidf_word': 'info object adapt version raw type identity feed rename msg ', 'tfidf_method': 'test_execute_reply test_execute_request test_no_adapt test_object_info_reply test_object_info_request test_rename_type test_same_version test_feed_identities test_send test_send_raw ', 'lda_word': ' msg,header,test,object,info,', 'lda_method': ' msg,msg_header,msg_id,test_complete_request,test_execute_reply,', 'lsi_word': ' msg,test,header,request,reply,', 'lsi_method': ' msg,msg_header,msg_id,test_execute_reply,test_rename_type,', 'spm_method': ' ', 'text_summary': 'Empty', 'files_count': 3, 'files': ['test_adapter.py', 'session.py', 'test_session.py'], 'execution_path_count': 12, 'function_id_to_name_file': {'529': 'test_object_info_reply(test_adapter.py)', '520': 'msg(test_adapter.py)', '476': 'msg(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '531': 'test_object_info_request(test_adapter.py)', '521': 'test_complete_reply(test_adapter.py)', '522': 'test_complete_request(test_adapter.py)', '524': 'test_execute_reply(test_adapter.py)', '525': 'test_execute_request(test_adapter.py)', '532': 'test_rename_type(test_adapter.py)', '533': 'test_same_version(test_adapter.py)', '528': 'test_no_adapt(test_adapter.py)', '695': 'test_send_raw(test_session.py)', '694': 'test_send(test_session.py)', '692': 'test_feed_identities(test_session.py)'}}, {'key': 858, 'parent': 1834, 'tfidf_word': 'EP: 858, Name: test_send_raw &rarr; msg &rarr; msg_header &rarr; msg_id', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1833, 'parent': 1834, 'tfidf_word': 'header id test feed identity send serialize msg ', 'tfidf_method': 'msg msg_header msg_id test_feed_identities test_msg test_send test_serialize ', 'lda_word': ' msg,header,test,serialize,identity,', 'lda_method': ' msg_header,msg,msg_id,test_serialize,test_send,', 'lsi_word': ' msg,header,test,feed,identity,', 'lsi_method': ' msg,msg_id,msg_header,test_msg,test_serialize,', 'spm_method': ' ', 'text_summary': '', 'files_count': 2, 'files': ['test_session.py', 'session.py'], 'execution_path_count': 4, 'function_id_to_name_file': {'692': 'test_feed_identities(test_session.py)', '476': 'msg(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '694': 'test_send(test_session.py)', '693': 'test_msg(test_session.py)', '696': 'test_serialize(test_session.py)'}}, {'key': 962, 'parent': 1636, 'tfidf_word': 'EP: 962, Name: test_object_info_reply_not_found &rarr; msg &rarr; msg &rarr; msg &rarr; extract_header', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1635, 'parent': 1636, 'tfidf_word': 'info object msg adapt raw type identity feed rename version ', 'tfidf_method': 'test_execute_reply test_execute_request test_no_adapt test_object_info_reply test_object_info_request test_rename_type test_same_version test_feed_identities test_send test_send_raw ', 'lda_word': ' msg,test,extract,header,reply,', 'lda_method': ' msg,extract_header,test_no_adapt,test_object_info_request,test_rename_type,', 'lsi_word': ' msg,header,extract,test,reply,', 'lsi_method': ' msg,extract_header,test_complete_reply,test_complete_request,test_execute_reply,', 'spm_method': ' ', 'text_summary': '', 'files_count': 3, 'files': ['test_adapter.py', 'session.py', 'test_session.py'], 'execution_path_count': 12, 'function_id_to_name_file': {'529': 'test_object_info_reply(test_adapter.py)', '520': 'msg(test_adapter.py)', '534': 'msg(test_adapter.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '531': 'test_object_info_request(test_adapter.py)', '521': 'test_complete_reply(test_adapter.py)', '522': 'test_complete_request(test_adapter.py)', '524': 'test_execute_reply(test_adapter.py)', '525': 'test_execute_request(test_adapter.py)', '532': 'test_rename_type(test_adapter.py)', '533': 'test_same_version(test_adapter.py)', '528': 'test_no_adapt(test_adapter.py)', '695': 'test_send_raw(test_session.py)', '694': 'test_send(test_session.py)', '692': 'test_feed_identities(test_session.py)'}}, {'key': 991, 'parent': 1815, 'tfidf_word': 'EP: 991, Name: test_rename_type &rarr; msg &rarr; msg &rarr; extract_header', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1814, 'parent': 1815, 'tfidf_word': 'header test send adapt feed identity raw serialize version msg ', 'tfidf_method': 'extract_header msg msg test_no_adapt test_same_version test_feed_identities test_msg test_send test_send_raw test_serialize ', 'lda_word': ' msg,test,header,extract,send,', 'lda_method': ' msg,extract_header,test_send,test_serialize,test_no_adapt,', 'lsi_word': ' msg,header,test,extract,send,', 'lsi_method': ' msg,extract_header,test_no_adapt,test_same_version,test_send,', 'spm_method': ' ', 'text_summary': '', 'files_count': 3, 'files': ['test_adapter.py', 'session.py', 'test_session.py'], 'execution_path_count': 7, 'function_id_to_name_file': {'544': 'test_no_adapt(test_adapter.py)', '534': 'msg(test_adapter.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '546': 'test_same_version(test_adapter.py)', '695': 'test_send_raw(test_session.py)', '692': 'test_feed_identities(test_session.py)', '694': 'test_send(test_session.py)', '693': 'test_msg(test_session.py)', '696': 'test_serialize(test_session.py)'}}, {'key': 364, 'parent': 1848, 'tfidf_word': 'EP: 364, Name: interrupt_kernel &rarr; msg &rarr; msg &rarr; extract_header', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 496, 'parent': 1848, 'tfidf_word': 'EP: 496, Name: is_complete &rarr; msg &rarr; msg &rarr; extract_header', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1026, 'parent': 1817, 'tfidf_word': 'EP: 1026, Name: test_kernel_info_reply &rarr; msg &rarr; msg &rarr; extract_header', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1816, 'parent': 1817, 'tfidf_word': 'extract header inspect test reply request token msg ', 'tfidf_method': 'extract_header msg msg test_inspect_reply test_inspect_request_token ', 'lda_word': ' msg,inspect,extract,header,test,', 'lda_method': ' msg,extract_header,test_inspect_reply,test_inspect_request_token,', 'lsi_word': ' msg,test,inspect,header,extract,', 'lsi_method': ' msg,extract_header,test_inspect_request_token,test_inspect_reply,', 'spm_method': ' ', 'text_summary': '', 'files_count': 2, 'files': ['test_adapter.py', 'session.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'542': 'test_inspect_request_token(test_adapter.py)', '534': 'msg(test_adapter.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '540': 'test_inspect_reply(test_adapter.py)'}}, {'key': 771, 'parent': 2064, 'tfidf_word': 'EP: 771, Name: test_send &rarr; msg &rarr; extract_header', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 796, 'parent': 2064, 'tfidf_word': 'EP: 796, Name: test_feed_identities &rarr; msg &rarr; extract_header', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 347, 'parent': 2122, 'tfidf_word': 'EP: 347, Name: interrupt_kernel &rarr; msg &rarr; extract_header', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 490, 'parent': 2122, 'tfidf_word': 'EP: 490, Name: is_complete &rarr; msg &rarr; extract_header', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1028, 'parent': 1624, 'tfidf_word': 'EP: 1028, Name: test_kernel_info_reply &rarr; msg &rarr; msg &rarr; msg &rarr; extract_header', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1623, 'parent': 1624, 'tfidf_word': 'msg token adapt raw type identity feed execute rename version ', 'tfidf_method': 'test_execute_request test_inspect_reply test_inspect_request test_inspect_request_token test_no_adapt test_rename_type test_same_version test_feed_identities test_send test_send_raw ', 'lda_word': ' msg,extract,header,test,complete,', 'lda_method': ' msg,extract_header,test_send,test_same_version,test_send_raw,', 'lsi_word': ' msg,extract,header,test,request,', 'lsi_method': ' msg,extract_header,test_send_raw,test_inspect_reply,test_same_version,', 'spm_method': ' ', 'text_summary': '', 'files_count': 3, 'files': ['test_adapter.py', 'session.py', 'test_session.py'], 'execution_path_count': 12, 'function_id_to_name_file': {'540': 'test_inspect_reply(test_adapter.py)', '534': 'msg(test_adapter.py)', '520': 'msg(test_adapter.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '542': 'test_inspect_request_token(test_adapter.py)', '541': 'test_inspect_request(test_adapter.py)', '535': 'test_complete_reply(test_adapter.py)', '536': 'test_complete_request(test_adapter.py)', '538': 'test_execute_request(test_adapter.py)', '545': 'test_rename_type(test_adapter.py)', '546': 'test_same_version(test_adapter.py)', '544': 'test_no_adapt(test_adapter.py)', '695': 'test_send_raw(test_session.py)', '694': 'test_send(test_session.py)', '692': 'test_feed_identities(test_session.py)'}}, {'key': 366, 'parent': 1666, 'tfidf_word': 'EP: 366, Name: interrupt_kernel &rarr; msg &rarr; msg &rarr; msg &rarr; extract_header', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 498, 'parent': 1666, 'tfidf_word': 'EP: 498, Name: is_complete &rarr; msg &rarr; msg &rarr; msg &rarr; extract_header', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1807, 'parent': 1849, 'tfidf_word': 'send msg adapt feed identity raw rename serialize type version ', 'tfidf_method': 'msg msg test_no_adapt test_rename_type test_same_version test_feed_identities test_msg test_send test_send_raw test_serialize ', 'lda_word': ' msg,extract,test,header,serialize,', 'lda_method': ' msg,extract_header,test_rename_type,test_no_adapt,test_msg,', 'lsi_word': ' msg,header,test,extract,send,', 'lsi_method': ' msg,extract_header,test_no_adapt,test_same_version,test_feed_identities,', 'spm_method': ' ', 'text_summary': '', 'files_count': 3, 'files': ['test_adapter.py', 'session.py', 'test_session.py'], 'execution_path_count': 8, 'function_id_to_name_file': {'532': 'test_rename_type(test_adapter.py)', '520': 'msg(test_adapter.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '528': 'test_no_adapt(test_adapter.py)', '533': 'test_same_version(test_adapter.py)', '695': 'test_send_raw(test_session.py)', '692': 'test_feed_identities(test_session.py)', '694': 'test_send(test_session.py)', '693': 'test_msg(test_session.py)', '696': 'test_serialize(test_session.py)'}}, {'key': 1847, 'parent': 1849, 'tfidf_word': 'extract header complete interrupt kernel msg ', 'tfidf_method': 'extract_header msg msg is_complete interrupt_kernel ', 'lda_word': ' extract,msg,header,complete,kernel,', 'lda_method': ' msg,extract_header,is_complete,interrupt_kernel,', 'lsi_word': ' msg,extract,header,interrupt,kernel,', 'lsi_method': ' msg,extract_header,is_complete,interrupt_kernel,', 'spm_method': ' ', 'text_summary': '', 'files_count': 4, 'files': ['manager.py', 'test_adapter.py', 'session.py', 'client.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'328': 'interrupt_kernel(manager.py)', '520': 'msg(test_adapter.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '166': 'is_complete(client.py)'}}, {'key': 970, 'parent': 1811, 'tfidf_word': 'EP: 970, Name: test_display_data &rarr; msg &rarr; msg &rarr; extract_header', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1810, 'parent': 1811, 'tfidf_word': 'extract header info test object reply msg found kernel request ', 'tfidf_method': 'extract_header msg msg test_kernel_info_reply test_object_info_reply test_object_info_reply_not_found test_object_info_request ', 'lda_word': ' msg,extract,header,test,info,', 'lda_method': ' msg,extract_header,test_kernel_info_reply,test_object_info_reply_not_found,test_object_info_request,', 'lsi_word': ' msg,header,test,info,extract,', 'lsi_method': ' msg,extract_header,test_object_info_request,test_object_info_reply,test_object_info_reply_not_found,', 'spm_method': ' ', 'text_summary': '', 'files_count': 2, 'files': ['test_adapter.py', 'session.py'], 'execution_path_count': 4, 'function_id_to_name_file': {'527': 'test_kernel_info_reply(test_adapter.py)', '520': 'msg(test_adapter.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '530': 'test_object_info_reply_not_found(test_adapter.py)', '531': 'test_object_info_request(test_adapter.py)', '529': 'test_object_info_reply(test_adapter.py)'}}, {'key': 242, 'parent': 1821, 'tfidf_word': 'EP: 242, Name: start &rarr; start &rarr; execute_interactive &rarr; is_alive', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1820, 'parent': 1821, 'tfidf_word': 'alive execute interactive start ', 'tfidf_method': 'execute_interactive start start is_alive is_alive ', 'lda_word': ' start,alive,execute,interactive,', 'lda_method': ' start,is_alive,execute_interactive,', 'lsi_word': ' start,execute,interactive,alive,', 'lsi_method': ' start,execute_interactive,is_alive,', 'spm_method': ' ', 'text_summary': '', 'files_count': 5, 'files': ['kernelspecapp.py', 'runapp.py', 'client.py', 'channelsabc.py', 'channels.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'291': 'start(kernelspecapp.py)', '439': 'start(runapp.py)', '122': 'execute_interactive(client.py)', '140': 'is_alive(channelsabc.py)', '86': 'is_alive(channels.py)'}}, {'key': 253, 'parent': 1825, 'tfidf_word': 'EP: 253, Name: start &rarr; start &rarr; execute_interactive &rarr; is_alive', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1824, 'parent': 1825, 'tfidf_word': 'execute interactive alive default hook output start ', 'tfidf_method': 'start start execute_interactive is_alive _output_hook_default ', 'lda_word': ' start,interactive,execute,alive,default,', 'lda_method': ' start,execute_interactive,is_alive,output_hook_default,', 'lsi_word': ' start,execute,interactive,hook,output,', 'lsi_method': ' start,execute_interactive,is_alive,output_hook_default,', 'spm_method': ' ', 'text_summary': '', 'files_count': 4, 'files': ['kernelspecapp.py', 'runapp.py', 'client.py', 'channels.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'291': 'start(kernelspecapp.py)', '439': 'start(runapp.py)', '97': 'execute_interactive(client.py)', '86': 'is_alive(channels.py)', '93': '_output_hook_default(client.py)'}}, {'key': 806, 'parent': 1930, 'tfidf_word': 'EP: 806, Name: test_session_id &rarr; __init__ &rarr; _check_packers &rarr; utcnow', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 807, 'parent': 1930, 'tfidf_word': 'EP: 807, Name: test_session_id &rarr; __init__ &rarr; _check_packers &rarr; squash_dates', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1920, 'parent': 2322, 'tfidf_word': 'check init packer set up date squash utcnow ', 'tfidf_method': '__init__ _check_packers setUp squash_dates utcnow ', 'lda_word': ' set,packer,check,init,date,', 'lda_method': ' init,check_packers,setup,squash_dates,utcnow,', 'lsi_word': ' init,set,packer,check,date,', 'lsi_method': ' check_packers,init,setup,squash_dates,utcnow,', 'spm_method': ' ', 'text_summary': '', 'files_count': 3, 'files': ['test_session.py', 'session.py', 'jsonutil.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'678': 'setUp(test_session.py)', '457': '__init__(session.py)', '459': '_check_packers(session.py)', '450': 'utcnow(session.py)', '244': 'squash_dates(jsonutil.py)'}}, {'key': 1926, 'parent': 2322, 'tfidf_word': 'args check init packer test date squash utcnow ', 'tfidf_method': '__init__ _check_packers test_args squash_dates utcnow ', 'lda_word': ' args,init,test,packer,check,', 'lda_method': ' check_packers,test_args,init,squash_dates,utcnow,', 'lsi_word': ' args,test,packer,check,init,', 'lsi_method': ' init,check_packers,test_args,utcnow,squash_dates,', 'spm_method': ' ', 'text_summary': 'check packers for datetime support.', 'files_count': 3, 'files': ['test_session.py', 'session.py', 'jsonutil.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'680': 'test_args(test_session.py)', '457': '__init__(session.py)', '459': '_check_packers(session.py)', '450': 'utcnow(session.py)', '244': 'squash_dates(jsonutil.py)'}}, {'key': 143, 'parent': 1456, 'tfidf_word': 'EP: 143, Name: _requires_ips &rarr; ips_loaded &rarr; _load_ips &rarr; _load_ips_ifconfig &rarr; _populate_from_list &rarr; local_ips', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 144, 'parent': 1456, 'tfidf_word': 'EP: 144, Name: _requires_ips &rarr; ips_loaded &rarr; _load_ips &rarr; _load_ips_ifconfig &rarr; _populate_from_list &rarr; _uniq_stable', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 140, 'parent': 1454, 'tfidf_word': 'EP: 140, Name: _requires_ips &rarr; ips_loaded &rarr; _load_ips &rarr; _load_ips_ip &rarr; _populate_from_list &rarr; public_ips', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1453, 'parent': 1454, 'tfidf_word': 'list populate require local stable uniq load ip ', 'tfidf_method': '_load_ips _load_ips_ip _populate_from_list _requires_ips ips_loaded _uniq_stable local_ips ', 'lda_word': ' ip,load,populate,list,require,', 'lda_method': ' requires_ips,populate_from_list,load_ips,ips_loaded,load_ips_ip,', 'lsi_word': ' ip,load,require,list,populate,', 'lsi_method': ' ips_loaded,requires_ips,load_ips_ip,load_ips,populate_from_list,', 'spm_method': ' ', 'text_summary': 'load the IPs that point to this machine. populate local and public IPs from flat list of all IPs. return the IP addresses that point to this machine.', 'files_count': 1, 'files': ['localinterfaces.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'310': '_requires_ips(localinterfaces.py)', '318': 'ips_loaded(localinterfaces.py)', '301': '_load_ips(localinterfaces.py)', '305': '_load_ips_ip(localinterfaces.py)', '309': '_populate_from_list(localinterfaces.py)', '314': 'local_ips(localinterfaces.py)', '311': '_uniq_stable(localinterfaces.py)'}}, {'key': 154, 'parent': 1675, 'tfidf_word': 'EP: 154, Name: _requires_ips &rarr; ips_loaded &rarr; _load_ips &rarr; _load_ips_netifaces &rarr; local_ips', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 155, 'parent': 1675, 'tfidf_word': 'EP: 155, Name: _requires_ips &rarr; ips_loaded &rarr; _load_ips &rarr; _load_ips_netifaces &rarr; public_ips', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1118, 'parent': 1742, 'tfidf_word': 'EP: 1118, Name: test_load_ips &rarr; _load_ips &rarr; _load_ips_ifconfig &rarr; _populate_from_list &rarr; local_ips', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1119, 'parent': 1742, 'tfidf_word': 'EP: 1119, Name: test_load_ips &rarr; _load_ips &rarr; _load_ips_ifconfig &rarr; _populate_from_list &rarr; _uniq_stable', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1115, 'parent': 1740, 'tfidf_word': 'EP: 1115, Name: test_load_ips &rarr; _load_ips &rarr; _load_ips_ip &rarr; _populate_from_list &rarr; public_ips', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1739, 'parent': 1740, 'tfidf_word': 'list populate test local stable uniq load ip ', 'tfidf_method': '_load_ips _load_ips_ip _populate_from_list test_load_ips _uniq_stable local_ips ', 'lda_word': ' ip,load,list,populate,test,', 'lda_method': ' test_load_ips,load_ips,populate_from_list,load_ips_ip,uniq_stable,', 'lsi_word': ' ip,load,list,test,populate,', 'lsi_method': ' test_load_ips,load_ips_ip,populate_from_list,load_ips,local_ips,', 'spm_method': ' ', 'text_summary': 'load the IPs that point to this machine. load ip addresses from `ip addr` output (Linux).', 'files_count': 2, 'files': ['test_localinterfaces.py', 'localinterfaces.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'634': 'test_load_ips(test_localinterfaces.py)', '301': '_load_ips(localinterfaces.py)', '305': '_load_ips_ip(localinterfaces.py)', '309': '_populate_from_list(localinterfaces.py)', '314': 'local_ips(localinterfaces.py)', '311': '_uniq_stable(localinterfaces.py)'}}, {'key': 1131, 'parent': 1951, 'tfidf_word': 'EP: 1131, Name: test_load_ips &rarr; _load_ips &rarr; _load_ips_netifaces &rarr; _uniq_stable', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1950, 'parent': 1951, 'tfidf_word': 'netifaces test local public load ip ', 'tfidf_method': '_load_ips _load_ips_netifaces test_load_ips local_ips public_ips ', 'lda_word': ' load,ip,netifaces,test,public,', 'lda_method': ' load_ips_netifaces,test_load_ips,load_ips,local_ips,public_ips,', 'lsi_word': ' ip,load,netifaces,test,public,', 'lsi_method': ' load_ips,load_ips_netifaces,test_load_ips,public_ips,local_ips,', 'spm_method': ' ', 'text_summary': 'load ip addresses with netifaces.', 'files_count': 2, 'files': ['test_localinterfaces.py', 'localinterfaces.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'634': 'test_load_ips(test_localinterfaces.py)', '301': '_load_ips(localinterfaces.py)', '307': '_load_ips_netifaces(localinterfaces.py)', '314': 'local_ips(localinterfaces.py)', '316': 'public_ips(localinterfaces.py)'}}, {'key': 1128, 'parent': 2188, 'tfidf_word': 'EP: 1128, Name: test_load_ips &rarr; _load_ips &rarr; _load_ips_dumb', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1132, 'parent': 2188, 'tfidf_word': 'EP: 1132, Name: test_load_ips &rarr; _load_ips &rarr; NoIPAddresses', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 855, 'parent': 2071, 'tfidf_word': 'EP: 855, Name: test_datetimes_msgpack &rarr; __init__ &rarr; _new_auth', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2070, 'parent': 2071, 'tfidf_word': 'cull unpacker pack packer pickle roundtrip session unpack datetimes zero ', 'tfidf_method': '_new_auth test_bad_pack test_bad_packer test_bad_roundtrip test_bad_unpack test_bad_unpacker test_cull_digest_history test_datetimes_pickle test_session_id test_zero_digest_history ', 'lda_word': ' auth,new,test,init,bad,', 'lda_method': ' new_auth,init,test_bad_roundtrip,test_zero_digest_history,test_bad_packer,', 'lsi_word': ' new,init,test,auth,bad,', 'lsi_method': ' new_auth,init,test_bad_unpack,test_datetimes_pickle,test_bad_unpacker,', 'spm_method': ' ', 'text_summary': '', 'files_count': 2, 'files': ['test_session.py', 'session.py'], 'execution_path_count': 9, 'function_id_to_name_file': {'690': 'test_datetimes_pickle(test_session.py)', '457': '__init__(session.py)', '465': '_new_auth(session.py)', '683': 'test_bad_roundtrip(test_session.py)', '685': 'test_bad_unpacker(test_session.py)', '682': 'test_bad_packer(test_session.py)', '681': 'test_bad_pack(test_session.py)', '684': 'test_bad_unpack(test_session.py)', '687': 'test_cull_digest_history(test_session.py)', '697': 'test_session_id(test_session.py)', '700': 'test_zero_digest_history(test_session.py)'}}, {'key': 1096, 'parent': 1437, 'tfidf_word': 'EP: 1096, Name: test_app_load_connection_file &rarr; initialize &rarr; init_connection_file &rarr; load_connection_file &rarr; load_connection_info &rarr; _ip_default &rarr; localhost', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1436, 'parent': 1437, 'tfidf_word': 'init initialize ip localhost session test kn file load connection ', 'tfidf_method': '_ip_default load_connection_file load_connection_info init_connection_file localhost initialize test_load_connection_file_session test_load_connection_file_session_with_kn ', 'lda_word': ' connection,load,file,session,info,', 'lda_method': ' initialize,load_connection_info,init_connection_file,ip_default,localhost,', 'lsi_word': ' connection,load,file,init,test,', 'lsi_method': ' init_connection_file,load_connection_info,localhost,load_connection_file,ip_default,', 'spm_method': '  &#187; initialize(test_connect.py) &rarr; init_connection_file(consoleapp.py) &rarr; load_connection_file(connect.py) &rarr; load_connection_info(connect.py) &rarr; _ip_default(connect.py) &rarr; localhost(localinterfaces.py) . <br>', 'text_summary': 'return ip for localhost (almost always 127.0.0.1) test load_connection_file() after. Load connection info from JSON dict in self.connection_file.', 'files_count': 4, 'files': ['test_connect.py', 'consoleapp.py', 'connect.py', 'localinterfaces.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'564': 'test_load_connection_file_session(test_connect.py)', '572': 'initialize(test_connect.py)', '219': 'init_connection_file(consoleapp.py)', '209': 'load_connection_file(connect.py)', '210': 'load_connection_info(connect.py)', '195': '_ip_default(connect.py)', '315': 'localhost(localinterfaces.py)', '565': 'test_load_connection_file_session_with_kn(test_connect.py)'}}, {'key': 1097, 'parent': 1564, 'tfidf_word': 'EP: 1097, Name: test_app_load_connection_file &rarr; initialize &rarr; init_connection_file &rarr; load_connection_file &rarr; load_connection_info &rarr; _record_random_port_names', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1563, 'parent': 1564, 'tfidf_word': 'names port random record session test kn file load connection ', 'tfidf_method': '_record_random_port_names load_connection_file load_connection_info init_connection_file initialize test_load_connection_file_session test_load_connection_file_session_with_kn ', 'lda_word': ' load,file,connection,info,session,', 'lda_method': ' initialize,load_connection_file,record_random_port_names,load_connection_info,test_load_connection_file_session,', 'lsi_word': ' connection,load,file,init,test,', 'lsi_method': ' init_connection_file,initialize,record_random_port_names,load_connection_info,load_connection_file,', 'spm_method': ' ', 'text_summary': 'Load connection info from JSON dict in self.connection_file. find the connection file, and load the info if found.', 'files_count': 3, 'files': ['test_connect.py', 'consoleapp.py', 'connect.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'564': 'test_load_connection_file_session(test_connect.py)', '572': 'initialize(test_connect.py)', '219': 'init_connection_file(consoleapp.py)', '209': 'load_connection_file(connect.py)', '210': 'load_connection_info(connect.py)', '197': '_record_random_port_names(connect.py)', '565': 'test_load_connection_file_session_with_kn(test_connect.py)'}}, {'key': 168, 'parent': 1768, 'tfidf_word': 'EP: 168, Name: initialize &rarr; initialize &rarr; init_ssh &rarr; load_connection_file &rarr; load_connection_info &rarr; _ip_default &rarr; localhost', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 169, 'parent': 1768, 'tfidf_word': 'EP: 169, Name: initialize &rarr; initialize &rarr; init_ssh &rarr; load_connection_file &rarr; load_connection_info &rarr; _record_random_port_names', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 170, 'parent': 2227, 'tfidf_word': 'EP: 170, Name: initialize &rarr; initialize &rarr; init_ssh &rarr; localhost', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1866, 'parent': 2227, 'tfidf_word': 'names port random record ssh write load connection file initialize ', 'tfidf_method': '_record_random_port_names write_connection_file init_ssh initialize initialize load_connection_file ', 'lda_word': ' connection,file,initialize,port,init,', 'lda_method': ' initialize,record_random_port_names,write_connection_file,init_ssh,load_connection_file,', 'lsi_word': ' initialize,file,connection,random,ssh,', 'lsi_method': ' initialize,init_ssh,write_connection_file,record_random_port_names,load_connection_file,', 'spm_method': ' ', 'text_summary': 'set up ssh tunnels, if needed.', 'files_count': 3, 'files': ['runapp.py', 'consoleapp.py', 'connect.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'437': 'initialize(runapp.py)', '223': 'initialize(consoleapp.py)', '222': 'init_ssh(consoleapp.py)', '212': 'write_connection_file(connect.py)', '197': '_record_random_port_names(connect.py)', '209': 'load_connection_file(connect.py)'}}, {'key': 162, 'parent': 2028, 'tfidf_word': 'EP: 162, Name: initialize &rarr; initialize &rarr; init_connection_file &rarr; load_connection_file &rarr; write_connection_file &rarr; _record_random_port_names', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1767, 'parent': 2028, 'tfidf_word': 'ip localhost names port random record file initialize load connection ', 'tfidf_method': 'load_connection_file load_connection_info init_connection_file initialize initialize _ip_default _record_random_port_names localhost ', 'lda_word': ' connection,load,initialize,file,init,', 'lda_method': ' initialize,load_connection_file,record_random_port_names,init_connection_file,load_connection_info,', 'lsi_word': ' connection,file,load,initialize,info,', 'lsi_method': ' initialize,init_connection_file,load_connection_info,load_connection_file,localhost,', 'spm_method': ' ', 'text_summary': 'Load connection info from JSON dict in self.connection_file.', 'files_count': 4, 'files': ['runapp.py', 'consoleapp.py', 'connect.py', 'localinterfaces.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'437': 'initialize(runapp.py)', '223': 'initialize(consoleapp.py)', '219': 'init_connection_file(consoleapp.py)', '209': 'load_connection_file(connect.py)', '210': 'load_connection_info(connect.py)', '195': '_ip_default(connect.py)', '315': 'localhost(localinterfaces.py)', '197': '_record_random_port_names(connect.py)'}}, {'key': 165, 'parent': 2366, 'tfidf_word': 'EP: 165, Name: initialize &rarr; initialize &rarr; init_kernel_client &rarr; localhost', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1867, 'parent': 2366, 'tfidf_word': 'init manager localhost no such initialize kernel ', 'tfidf_method': 'init_kernel_manager initialize initialize NoSuchKernel localhost ', 'lda_word': ' initialize,kernel,init,manager,localhost,', 'lda_method': ' initialize,init_kernel_manager,nosuchkernel,localhost,', 'lsi_word': ' initialize,kernel,manager,init,localhost,', 'lsi_method': ' initialize,init_kernel_manager,localhost,nosuchkernel,', 'spm_method': ' ', 'text_summary': 'Empty', 'files_count': 4, 'files': ['runapp.py', 'consoleapp.py', 'kernelspec.py', 'localinterfaces.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'437': 'initialize(runapp.py)', '223': 'initialize(consoleapp.py)', '221': 'init_kernel_manager(consoleapp.py)', '255': 'NoSuchKernel(kernelspec.py)', '315': 'localhost(localinterfaces.py)'}}, {'key': 1095, 'parent': 1463, 'tfidf_word': 'EP: 1095, Name: test_app_load_connection_file &rarr; initialize &rarr; init_connection_file &rarr; load_connection_file &rarr; write_connection_file &rarr; _record_random_port_names', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1462, 'parent': 1463, 'tfidf_word': 'port random record session test write kn load connection file ', 'tfidf_method': '_record_random_port_names load_connection_file write_connection_file init_connection_file initialize test_load_connection_file_session test_load_connection_file_session_with_kn ', 'lda_word': ' connection,file,load,record,initialize,', 'lda_method': ' record_random_port_names,init_connection_file,load_connection_file,write_connection_file,initialize,', 'lsi_word': ' file,connection,load,session,record,', 'lsi_method': ' init_connection_file,write_connection_file,record_random_port_names,initialize,load_connection_file,', 'spm_method': ' ', 'text_summary': 'Write connection info to JSON dict in self.connection_file. Load connection info from JSON dict in self.connection_file.', 'files_count': 3, 'files': ['test_connect.py', 'consoleapp.py', 'connect.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'564': 'test_load_connection_file_session(test_connect.py)', '572': 'initialize(test_connect.py)', '219': 'init_connection_file(consoleapp.py)', '209': 'load_connection_file(connect.py)', '212': 'write_connection_file(connect.py)', '197': '_record_random_port_names(connect.py)', '565': 'test_load_connection_file_session_with_kn(test_connect.py)'}}, {'key': 409, 'parent': 2015, 'tfidf_word': 'EP: 409, Name: start_new_async_kernel &rarr; client &rarr; write_connection_file &rarr; _record_random_port_names', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 433, 'parent': 2015, 'tfidf_word': 'EP: 433, Name: run_kernel &rarr; start_new_kernel &rarr; client &rarr; write_connection_file &rarr; _record_random_port_names', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1944, 'parent': 2361, 'tfidf_word': 'port random record session test write kn load connection file ', 'tfidf_method': '_record_random_port_names load_connection_file write_connection_file test_load_connection_file_session test_load_connection_file_session_with_kn ', 'lda_word': ' file,connection,load,session,port,', 'lda_method': ' record_random_port_names,write_connection_file,load_connection_file,test_load_connection_file_session,test_load_connection_file_session_with_kn,', 'lsi_word': ' connection,file,load,session,port,', 'lsi_method': ' load_connection_file,write_connection_file,record_random_port_names,test_load_connection_file_session_with_kn,test_load_connection_file_session,', 'spm_method': ' ', 'text_summary': 'Write connection info to JSON dict in self.connection_file.', 'files_count': 2, 'files': ['test_connect.py', 'connect.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'564': 'test_load_connection_file_session(test_connect.py)', '209': 'load_connection_file(connect.py)', '212': 'write_connection_file(connect.py)', '197': '_record_random_port_names(connect.py)', '565': 'test_load_connection_file_session_with_kn(test_connect.py)'}}, {'key': 2187, 'parent': 2361, 'tfidf_word': 'connection file mixin names test write cleanup port random record ', 'tfidf_method': '_record_random_port_names write_connection_file test_mixin_cleanup_random_ports test_mixin_record_random_ports ', 'lda_word': ' port,random,record,file,connection,', 'lda_method': ' record_random_port_names,test_mixin_record_random_ports,write_connection_file,test_mixin_cleanup_random_ports,', 'lsi_word': ' port,random,record,mixin,names,', 'lsi_method': ' write_connection_file,record_random_port_names,test_mixin_cleanup_random_ports,test_mixin_record_random_ports,', 'spm_method': ' ', 'text_summary': '', 'files_count': 2, 'files': ['test_connect.py', 'connect.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'568': 'test_mixin_record_random_ports(test_connect.py)', '212': 'write_connection_file(connect.py)', '197': '_record_random_port_names(connect.py)', '567': 'test_mixin_cleanup_random_ports(test_connect.py)'}}, {'key': 1960, 'parent': 2334, 'tfidf_word': 'install list prefix spec specs test dir name valid kernel ', 'tfidf_method': '_list_kernels_in find_kernel_specs test_install_kernel_spec_prefix _is_kernel_dir _is_valid_kernel_name ', 'lda_word': ' kernel,find,specs,list,spec,', 'lda_method': ' test_install_kernel_spec_prefix,find_kernel_specs,is_valid_kernel_name,list_kernels_in,is_kernel_dir,', 'lsi_word': ' kernel,list,specs,prefix,spec,', 'lsi_method': ' list_kernels_in,test_install_kernel_spec_prefix,find_kernel_specs,is_valid_kernel_name,is_kernel_dir,', 'spm_method': ' ', 'text_summary': 'Is ``path`` a kernel directory?.', 'files_count': 2, 'files': ['test_kernelspec.py', 'kernelspec.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'625': 'test_install_kernel_spec_prefix(test_kernelspec.py)', '272': 'find_kernel_specs(kernelspec.py)', '258': '_list_kernels_in(kernelspec.py)', '257': '_is_valid_kernel_name(kernelspec.py)', '256': '_is_kernel_dir(kernelspec.py)'}}, {'key': 2333, 'parent': 2334, 'tfidf_word': 'list spec specs test dir install name priority valid kernel ', 'tfidf_method': '_list_kernels_in find_kernel_specs _is_kernel_dir _is_valid_kernel_name test_install_kernel_spec test_kernel_spec_priority ', 'lda_word': ' kernel,spec,specs,test,find,', 'lda_method': ' find_kernel_specs,list_kernels_in,test_kernel_spec_priority,test_install_kernel_spec,is_valid_kernel_name,', 'lsi_word': ' kernel,find,specs,test,spec,', 'lsi_method': ' list_kernels_in,find_kernel_specs,is_valid_kernel_name,test_install_kernel_spec,is_kernel_dir,', 'spm_method': ' ', 'text_summary': 'Return a mapping of kernel names to resource directories from dir.', 'files_count': 2, 'files': ['test_kernelspec.py', 'kernelspec.py'], 'execution_path_count': 4, 'function_id_to_name_file': {'626': 'test_kernel_spec_priority(test_kernelspec.py)', '272': 'find_kernel_specs(kernelspec.py)', '258': '_list_kernels_in(kernelspec.py)', '257': '_is_valid_kernel_name(kernelspec.py)', '256': '_is_kernel_dir(kernelspec.py)', '624': 'test_install_kernel_spec(test_kernelspec.py)'}}, {'key': 1864, 'parent': 2341, 'tfidf_word': 'list dir name valid find specs kernel ', 'tfidf_method': '_list_kernels_in find_kernel_specs find_kernel_specs _is_kernel_dir _is_valid_kernel_name ', 'lda_word': ' kernel,specs,find,list,dir,', 'lda_method': ' find_kernel_specs,list_kernels_in,is_kernel_dir,is_valid_kernel_name,', 'lsi_word': ' kernel,find,specs,list,name,', 'lsi_method': ' find_kernel_specs,list_kernels_in,is_valid_kernel_name,is_kernel_dir,', 'spm_method': ' ', 'text_summary': 'Return a mapping of kernel names to resource directories from dir.', 'files_count': 1, 'files': ['kernelspec.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'259': 'find_kernel_specs(kernelspec.py)', '272': 'find_kernel_specs(kernelspec.py)', '258': '_list_kernels_in(kernelspec.py)', '257': '_is_valid_kernel_name(kernelspec.py)', '256': '_is_kernel_dir(kernelspec.py)'}}, {'key': 1955, 'parent': 2341, 'tfidf_word': 'list test dir name valid find specs kernel ', 'tfidf_method': '_list_kernels_in find_kernel_specs test_find_kernel_specs _is_kernel_dir _is_valid_kernel_name ', 'lda_word': ' kernel,find,specs,test,list,', 'lda_method': ' test_find_kernel_specs,find_kernel_specs,list_kernels_in,is_kernel_dir,is_valid_kernel_name,', 'lsi_word': ' kernel,find,specs,list,test,', 'lsi_method': ' find_kernel_specs,list_kernels_in,test_find_kernel_specs,is_kernel_dir,is_valid_kernel_name,', 'spm_method': ' ', 'text_summary': 'Return a mapping of kernel names to resource directories from dir.', 'files_count': 2, 'files': ['test_kernelspec.py', 'kernelspec.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'622': 'test_find_kernel_specs(test_kernelspec.py)', '272': 'find_kernel_specs(kernelspec.py)', '258': '_list_kernels_in(kernelspec.py)', '257': '_is_valid_kernel_name(kernelspec.py)', '256': '_is_kernel_dir(kernelspec.py)'}}, {'key': 781, 'parent': 1526, 'tfidf_word': 'EP: 781, Name: test_send &rarr; recv &rarr; deserialize &rarr; extract_dates &rarr; parse_date &rarr; _ensure_tzinfo', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1398, 'parent': 1526, 'tfidf_word': 'EP: 1398, Name: handle &rarr; recv &rarr; deserialize &rarr; extract_dates &rarr; parse_date &rarr; _ensure_tzinfo', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 861, 'parent': 1735, 'tfidf_word': 'EP: 861, Name: test_send_raw &rarr; deserialize &rarr; extract_dates &rarr; parse_date &rarr; _ensure_tzinfo', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1725, 'parent': 1735, 'tfidf_word': 'deserialize ensure extract parse tzinfo test date send serialize unserialize ', 'tfidf_method': '_ensure_tzinfo extract_dates parse_date deserialize unserialize test_send test_serialize ', 'lda_word': ' date,extract,deserialize,tzinfo,ensure,', 'lda_method': ' deserialize,parse_date,ensure_tzinfo,extract_dates,test_serialize,', 'lsi_word': ' date,deserialize,tzinfo,parse,ensure,', 'lsi_method': ' deserialize,ensure_tzinfo,extract_dates,parse_date,test_serialize,', 'spm_method': ' ', 'text_summary': 'extract ISO8601 dates from unpacked JSON. Unserialize a msg_list to a nested message dict.', 'files_count': 3, 'files': ['test_session.py', 'session.py', 'jsonutil.py'], 'execution_path_count': 3, 'function_id_to_name_file': {'694': 'test_send(test_session.py)', '474': 'deserialize(session.py)', '242': 'extract_dates(jsonutil.py)', '243': 'parse_date(jsonutil.py)', '240': '_ensure_tzinfo(jsonutil.py)', '484': 'unserialize(session.py)', '696': 'test_serialize(test_session.py)'}}, {'key': 1734, 'parent': 2287, 'tfidf_word': 'datetime datetimes ensure extract parse tzinfo date test msgpack pickle ', 'tfidf_method': '_ensure_tzinfo extract_dates parse_date _datetime_test test_datetimes test_datetimes_msgpack test_datetimes_pickle ', 'lda_word': ' date,test,extract,datetimes,datetime,', 'lda_method': ' parse_date,ensure_tzinfo,datetime_test,extract_dates,test_datetimes_pickle,', 'lsi_word': ' date,test,datetime,parse,tzinfo,', 'lsi_method': ' extract_dates,parse_date,datetime_test,ensure_tzinfo,test_datetimes,', 'spm_method': ' ', 'text_summary': '', 'files_count': 2, 'files': ['test_session.py', 'jsonutil.py'], 'execution_path_count': 3, 'function_id_to_name_file': {'689': 'test_datetimes_msgpack(test_session.py)', '679': '_datetime_test(test_session.py)', '242': 'extract_dates(jsonutil.py)', '243': 'parse_date(jsonutil.py)', '240': '_ensure_tzinfo(jsonutil.py)', '688': 'test_datetimes(test_session.py)', '690': 'test_datetimes_pickle(test_session.py)'}}, {'key': 1964, 'parent': 2287, 'tfidf_word': 'ensure parse test tzinfo extract default naive date ', 'tfidf_method': '_ensure_tzinfo extract_dates parse_date test_date_default test_extract_date_from_naive test_extract_dates ', 'lda_word': ' date,extract,naive,tzinfo,parse,', 'lda_method': ' parse_date,extract_dates,ensure_tzinfo,test_extract_date_from_naive,test_date_default,', 'lsi_word': ' date,extract,ensure,tzinfo,parse,', 'lsi_method': ' ensure_tzinfo,extract_dates,parse_date,test_date_default,test_extract_date_from_naive,', 'spm_method': ' ', 'text_summary': '', 'files_count': 2, 'files': ['test_jsonutil.py', 'jsonutil.py'], 'execution_path_count': 3, 'function_id_to_name_file': {'575': 'test_date_default(test_jsonutil.py)', '242': 'extract_dates(jsonutil.py)', '243': 'parse_date(jsonutil.py)', '240': '_ensure_tzinfo(jsonutil.py)', '576': 'test_extract_date_from_naive(test_jsonutil.py)', '577': 'test_extract_dates(test_jsonutil.py)'}}, {'key': 2119, 'parent': 2690, 'tfidf_word': 'launch async new restart start kernel ', 'tfidf_method': '_launch_kernel start_kernel start_new_async_kernel restart_kernel ', 'lda_word': ' kernel,start,launch,restart,new,', 'lda_method': ' launch_kernel,start_kernel,restart_kernel,start_new_async_kernel,', 'lsi_word': ' kernel,start,launch,new,async,', 'lsi_method': ' launch_kernel,start_kernel,start_new_async_kernel,restart_kernel,', 'spm_method': ' ', 'text_summary': '', 'files_count': 1, 'files': ['manager.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'330': 'restart_kernel(manager.py)', '333': 'start_kernel(manager.py)', '326': '_launch_kernel(manager.py)', '322': 'start_new_async_kernel(manager.py)'}}, {'key': 2395, 'parent': 2690, 'tfidf_word': 'create make new restart restarter url kernel connect socket start ', 'tfidf_method': 'start_kernel post_start_kernel _create_connected_socket _make_url start_new_async_kernel restart_kernel _connect_control_socket start_restarter ', 'lda_word': ' start,kernel,post,connect,restarter,', 'lda_method': ' connect_control_socket,make_url,create_connected_socket,start_kernel,post_start_kernel,', 'lsi_word': ' start,kernel,socket,connect,post,', 'lsi_method': ' start_kernel,post_start_kernel,connect_control_socket,create_connected_socket,make_url,', 'spm_method': ' ', 'text_summary': '', 'files_count': 2, 'files': ['manager.py', 'connect.py'], 'execution_path_count': 4, 'function_id_to_name_file': {'330': 'restart_kernel(manager.py)', '333': 'start_kernel(manager.py)', '359': 'post_start_kernel(manager.py)', '338': '_connect_control_socket(manager.py)', '192': '_create_connected_socket(connect.py)', '196': '_make_url(connect.py)', '322': 'start_new_async_kernel(manager.py)', '367': 'start_restarter(manager.py)'}}, {'key': 2679, 'parent': 2709, 'tfidf_word': 'connection file new path real restart test spec start kernel ', 'tfidf_method': 'format_kernel_cmd start_kernel pre_start_kernel KernelSpec kernel_spec from_ns start_new_async_kernel restart_kernel test_connection_file_real_path ', 'lda_word': ' kernel,start,cmd,format,spec,', 'lda_method': ' format_kernel_cmd,test_connection_file_real_path,kernelspec,kernel_spec,from_ns,', 'lsi_word': ' kernel,start,spec,format,cmd,', 'lsi_method': ' format_kernel_cmd,pre_start_kernel,start_kernel,kernel_spec,kernelspec,', 'spm_method': ' ', 'text_summary': '{connection_file})  Verify realpath is used when formatting connection file. Restarts a kernel with the arguments that were used to launch it. Prepares a kernel for startup in a separate process. Verify realpath is used when formatting connection file. {connection_file})  Restarts a kernel with the arguments that were used to launch it.', 'files_count': 3, 'files': ['test_manager.py', 'manager.py', 'kernelspec.py'], 'execution_path_count': 6, 'function_id_to_name_file': {'635': 'test_connection_file_real_path(test_manager.py)', '353': 'format_kernel_cmd(manager.py)', '358': 'kernel_spec(manager.py)', '253': 'KernelSpec(kernelspec.py)', '330': 'restart_kernel(manager.py)', '333': 'start_kernel(manager.py)', '360': 'pre_start_kernel(manager.py)', '322': 'start_new_async_kernel(manager.py)', '369': 'from_ns(manager.py)'}}, {'key': 2696, 'parent': 2709, 'tfidf_word': 'get env substitution start test path real file connection kernel ', 'tfidf_method': 'pre_start_kernel _record_random_port_names write_connection_file start_new_async_kernel restart_kernel format_kernel_cmd is_local_ip local_ips _get_env_substitutions test_connection_file_real_path ', 'lda_word': ' kernel,start,pre,ip,local,', 'lda_method': ' start_kernel,start_new_async_kernel,pre_start_kernel,write_connection_file,restart_kernel,', 'lsi_word': ' kernel,start,pre,file,connection,', 'lsi_method': ' pre_start_kernel,start_kernel,write_connection_file,record_random_port_names,start_new_async_kernel,', 'spm_method': ' ', 'text_summary': 'Restarts a kernel with the arguments that were used to launch it. Prepares a kernel for startup in a separate process. {connection_file}) Write connection info to JSON dict in self.connection_file. Walks env entries in templated_env and applies possible substitutions from current env. Write connection info to JSON dict in self.connection_file. replace templated args (e.g.', 'files_count': 4, 'files': ['manager.py', 'connect.py', 'test_manager.py', 'localinterfaces.py'], 'execution_path_count': 11, 'function_id_to_name_file': {'330': 'restart_kernel(manager.py)', '333': 'start_kernel(manager.py)', '360': 'pre_start_kernel(manager.py)', '212': 'write_connection_file(connect.py)', '197': '_record_random_port_names(connect.py)', '322': 'start_new_async_kernel(manager.py)', '635': 'test_connection_file_real_path(test_manager.py)', '353': 'format_kernel_cmd(manager.py)', '341': '_get_env_substitutions(manager.py)', '314': 'local_ips(localinterfaces.py)', '312': 'is_local_ip(localinterfaces.py)'}}, {'key': 2403, 'parent': 2766, 'tfidf_word': 'directory test find get subclass kernel spec set up specs ', 'tfidf_method': '_is_kernel_dir _find_spec_directory get_kernel_spec get_all_specs test_get_kernel_spec test_subclass setUp test_find_all_specs find_kernel_specs get_kernel_spec ', 'lda_word': ' kernel,spec,directory,get,find,', 'lda_method': ' get_kernel_spec,is_kernel_dir,find_spec_directory,get_all_specs,test_subclass,', 'lsi_word': ' kernel,spec,get,find,dir,', 'lsi_method': ' find_spec_directory,is_kernel_dir,get_kernel_spec,get_all_specs,test_subclass,', 'spm_method': ' ', 'text_summary': 'Find the resource directory of a named kernel spec. Is ``path`` a kernel directory?.', 'files_count': 3, 'files': ['test_kernelspec.py', 'kernelspec.py', 'test_client.py'], 'execution_path_count': 8, 'function_id_to_name_file': {'623': 'test_get_kernel_spec(test_kernelspec.py)', '267': '_find_spec_directory(kernelspec.py)', '256': '_is_kernel_dir(kernelspec.py)', '632': 'find_kernel_specs(test_kernelspec.py)', '621': 'test_find_all_specs(test_kernelspec.py)', '273': 'get_all_specs(kernelspec.py)', '274': 'get_kernel_spec(kernelspec.py)', '629': 'test_subclass(test_kernelspec.py)', '633': 'get_kernel_spec(test_kernelspec.py)', '549': 'setUp(test_client.py)'}}, {'key': 2760, 'parent': 2766, 'tfidf_word': 'no such valid find get kernel spec specs dir directory ', 'tfidf_method': 'test_subclass NoSuchKernel _is_valid_kernel_name __init__ get_kernel_spec test_find_all_specs test_get_kernel_spec get_kernel_spec _is_kernel_dir _find_spec_directory ', 'lda_word': ' kernel,spec,get,set,name,', 'lda_method': ' get_kernel_spec,nosuchkernel,get_all_specs,test_subclass,setup,', 'lsi_word': ' kernel,get,spec,name,test,', 'lsi_method': ' get_kernel_spec,setup,get_all_specs,get_kernel_spec_by_name,test_subclass,', 'spm_method': ' ', 'text_summary': 'Returns a :class:`KernelSpec` instance for a given kernel_name. Find the resource directory of a named kernel spec. Returns a dict mapping kernel names to kernelspecs.', 'files_count': 3, 'files': ['test_kernelspec.py', 'kernelspec.py', 'test_client.py'], 'execution_path_count': 31, 'function_id_to_name_file': {'621': 'test_find_all_specs(test_kernelspec.py)', '273': 'get_all_specs(kernelspec.py)', '269': '_get_kernel_spec_by_name(kernelspec.py)', '629': 'test_subclass(test_kernelspec.py)', '274': 'get_kernel_spec(kernelspec.py)', '255': 'NoSuchKernel(kernelspec.py)', '278': '__init__(kernelspec.py)', '257': '_is_valid_kernel_name(kernelspec.py)', '549': 'setUp(test_client.py)', '260': 'get_kernel_spec(kernelspec.py)', '267': '_find_spec_directory(kernelspec.py)', '256': '_is_kernel_dir(kernelspec.py)', '633': 'get_kernel_spec(test_kernelspec.py)', '623': 'test_get_kernel_spec(test_kernelspec.py)'}}, {'key': 2698, 'parent': 2780, 'tfidf_word': 'recv send default interrupt kernel raw serialize tracking unserialize version ', 'tfidf_method': 'send test_send recv handle interrupt_kernel unserialize test_default_version test_send_raw test_serialize test_tracking ', 'lda_word': ' send,utcnow,adapt,deserialize,test,', 'lda_method': ' utcnow,adapt,deserialize,send,test_send,', 'lsi_word': ' adapt,utcnow,send,test,deserialize,', 'lsi_method': ' utcnow,adapt,deserialize,send,test_send,', 'spm_method': ' ', 'text_summary': 'test tracking messages. Receive and unpack a message. Pass a message to the ZMQ socket to send. Unserialize a msg_list to a nested message dict.', 'files_count': 6, 'files': ['test_session.py', 'session.py', 'adapter.py', 'forward.py', 'test_adapter.py', 'manager.py'], 'execution_path_count': 11, 'function_id_to_name_file': {'694': 'test_send(test_session.py)', '479': 'recv(session.py)', '474': 'deserialize(session.py)', '50': 'adapt(adapter.py)', '450': 'utcnow(session.py)', '492': 'handle(forward.py)', '695': 'test_send_raw(test_session.py)', '484': 'unserialize(session.py)', '696': 'test_serialize(test_session.py)', '516': 'test_default_version(test_adapter.py)', '698': 'test_tracking(test_session.py)', '480': 'send(session.py)', '328': 'interrupt_kernel(manager.py)'}}, {'key': 2779, 'parent': 2780, 'tfidf_word': 'loop digest flush permission native io tunnel cleanup code restarter ', 'tfidf_method': 'test_find_connection_file_local test_find_connection_file_relative test_mixin_record_random_ports test_secure_write update_msg_type check_user_only_permissions fetch_win32_permissions _launch test_rename_type test_find_kernel_specs ', 'lda_word': ' start,alive,init,stop,wait,', 'lda_method': ' write_connection_file,close,session,test_load_connection_file_session,test_load_connection_file_session_with_kn,', 'lsi_word': ' kernel,test,connection,file,lifecycle,', 'lsi_method': ' init,get_tcp_km,check_packers,test_tcp_lifecycle,utcnow,', 'spm_method': ' ', 'text_summary': "Subclasses may override  Prepares a kernel for startup in a separate process. return ip for localhost (almost always 127.0.0.1) test `ipython console --existing` loads a connection file. Prepares a kernel for startup in a separate process. return ip for localhost (almost always 127.0.0.1)   Ensure that a sequence of kernel startups doesn't break anything. Sends a signal to the process group of the kernel (this. Pass a message to the ZMQ socket to send. Return the connection info as a dict. Subclasses may override Start the polling of the kernel. Ensure that a sequence of kernel startups doesn't break anything. return ip for localhost (almost always 127.0.0.1) test load_connection_file() after. Launches a localhost kernel, binding to the specified ports. test `ipython console --existing` loads a connection file. find a connection file, and return its absolute path. return ip for localhost (almost always 127.0.0.1)      find a connection file, and return its absolute path. tunnel connections to a kernel via ssh. For tests, create a file to indicate that we've started. handle kernel info reply. Get the hb channel object for this kernel. Returns the id to associate with the kernel for this request. Send a raw message via ident path. Make a blocking client connected to my kernel. return ip for localhost (almost always 127.0.0.1)  Write connection info to JSON dict in self.connection_file. Get a message from the stdin channel. Immediately processes all pending messages on this channel. Return the number of running kernels. Unserialize a msg_list to a nested message dict. Get the single KernelManager object for a kernel by its uuid. Interrupts the kernel by sending it a signal. Get a message from the shell channel. Get a message from the iopub channel. This is run in the ioloop thread when the kernel info reply is received. default function for packing datetime objects in JSON. Send a shutdown request via control channel. test load_connection_file() after. Write connection info to JSON dict in self.connection_file. test that messages receive unique ids.", 'files_count': 35, 'files': ['test_connect.py', 'connect.py', 'channels.py', 'localinterfaces.py', 'threaded.py', 'test_session.py', 'session.py', 'forward.py', 'consoleapp.py', 'runapp.py', 'test_multikernelmanager.py', 'multikernelmanager.py', 'tunnel.py', 'test_ssh.py', 'client.py', 'managerabc.py', 'channelsabc.py', 'manager.py', 'test_kernelspec.py', 'kernelspec.py', 'test_kernelmanager.py', 'jsonutil.py', 'test_manager.py', 'utils.py', 'restarter.py', 'signalkernel.py', 'kernelspecapp.py', 'kernelapp.py', 'test_adapter.py', 'test_jsonutil.py', 'adapter.py', 'test_kernelapp.py', 'test_client.py', 'win_interrupt.py', 'launcher.py'], 'execution_path_count': 433, 'function_id_to_name_file': {'559': 'test_app_load_connection_file(test_connect.py)', '191': 'write_connection_file(connect.py)', '109': 'close(channels.py)', '83': 'close(channels.py)', '315': 'localhost(localinterfaces.py)', '730': 'close(threaded.py)', '132': 'close(channels.py)', '211': 'ports(connect.py)', '718': 'close(threaded.py)', '565': 'test_load_connection_file_session_with_kn(test_connect.py)', '570': 'test_write_connection_file(test_connect.py)', '564': 'test_load_connection_file_session(test_connect.py)', '686': 'test_clone(test_session.py)', '458': '_add_digest(session.py)', '460': '_cull_digest_history(session.py)', '700': 'test_zero_digest_history(test_session.py)', '687': 'test_cull_digest_history(test_session.py)', '694': 'test_send(test_session.py)', '479': 'recv(session.py)', '474': 'deserialize(session.py)', '492': 'handle(forward.py)', '695': 'test_send_raw(test_session.py)', '484': 'unserialize(session.py)', '696': 'test_serialize(test_session.py)', '558': 'DummyConsoleApp(test_connect.py)', '214': 'JupyterConsoleApp(consoleapp.py)', '441': 'Session(session.py)', '188': 'ConnectionFileMixin(connect.py)', '560': 'test_find_connection_file(test_connect.py)', '213': 'IPythonConsoleApp(consoleapp.py)', '434': 'RunApp(runapp.py)', '665': 'test_start_sequence_tcp_kernels(test_multikernelmanager.py)', '655': '_get_tcp_km(test_multikernelmanager.py)', '392': '__init__(multikernelmanager.py)', '666': 'test_tcp_cinfo(test_multikernelmanager.py)', '668': 'test_tcp_lifecycle_with_kernel_id(test_multikernelmanager.py)', '661': 'test_shutdown_all(test_multikernelmanager.py)', '663': 'test_start_parallel_thread_kernels(test_multikernelmanager.py)', '658': 'tcp_lifecycle_with_loop(test_multikernelmanager.py)', '667': 'test_tcp_lifecycle(test_multikernelmanager.py)', '662': 'test_start_parallel_process_kernels(test_multikernelmanager.py)', '190': 'tunnel_to_kernel(connect.py)', '503': 'select_random_ports(tunnel.py)', '701': 'test_random_ports(test_ssh.py)', '386': 'shutdown_all(multikernelmanager.py)', '383': 'finish_shutdown(multikernelmanager.py)', '410': 'get_kernel(multikernelmanager.py)', '394': '_check_kernel_id(multikernelmanager.py)', '388': 'signal_kernel(multikernelmanager.py)', '385': 'restart_kernel(multikernelmanager.py)', '384': 'interrupt_kernel(multikernelmanager.py)', '387': 'shutdown_kernel(multikernelmanager.py)', '421': 'shutdown_kernel(multikernelmanager.py)', '420': 'shutdown_all(multikernelmanager.py)', '104': 'wait_for_ready(client.py)', '103': 'is_alive(client.py)', '412': 'is_alive(multikernelmanager.py)', '373': 'is_alive(managerabc.py)', '140': 'is_alive(channelsabc.py)', '732': 'is_alive(threaded.py)', '86': 'is_alive(channels.py)', '112': 'is_alive(channels.py)', '123': 'wait_for_ready(client.py)', '165': 'is_alive(client.py)', '648': 'test_start_parallel_thread_kernels(test_multikernelmanager.py)', '643': 'tcp_lifecycle_with_loop(test_multikernelmanager.py)', '642': 'raw_tcp_lifecycle(test_multikernelmanager.py)', '641': '_run_lifecycle(test_multikernelmanager.py)', '647': 'test_start_parallel_process_kernels(test_multikernelmanager.py)', '652': 'test_tcp_lifecycle(test_multikernelmanager.py)', '653': 'test_tcp_lifecycle_with_kernel_id(test_multikernelmanager.py)', '483': 'sign(session.py)', '480': 'send(session.py)', '440': 'Message(session.py)', '698': 'test_tracking(test_session.py)', '328': 'interrupt_kernel(manager.py)', '482': 'serialize(session.py)', '135': 'run(channels.py)', '128': '_create_socket(channels.py)', '84': 'get_msg(channels.py)', '82': '_recv(channels.py)', '101': 'get_stdin_msg(client.py)', '85': 'get_msgs(channels.py)', '99': 'get_iopub_msg(client.py)', '110': 'get_msg(channels.py)', '108': '_recv(channels.py)', '111': 'get_msgs(channels.py)', '620': 'test_cant_install_kernel_spec(test_kernelspec.py)', '275': 'install_kernel_spec(kernelspec.py)', '268': '_get_destination_dir(kernelspec.py)', '257': '_is_valid_kernel_name(kernelspec.py)', '625': 'test_install_kernel_spec_prefix(test_kernelspec.py)', '261': 'install_kernel_spec(kernelspec.py)', '624': 'test_install_kernel_spec(test_kernelspec.py)', '614': 'test_start_sequence_process_kernels(test_kernelmanager.py)', '610': '_run_signaltest_lifecycle(test_kernelmanager.py)', '615': 'execute(test_kernelmanager.py)', '609': '_prepare_kernel(test_kernelmanager.py)', '611': 'test_start_parallel_process_kernels(test_kernelmanager.py)', '613': 'test_start_sequence_kernels(test_kernelmanager.py)', '612': 'test_start_parallel_thread_kernels(test_kernelmanager.py)', '398': '_kernel_manager_class_changed(multikernelmanager.py)', '396': '_create_kernel_manager_factory(multikernelmanager.py)', '424': 'create_kernel_manager(multikernelmanager.py)', '397': '_find_available_port(multikernelmanager.py)', '395': '_context_default(multikernelmanager.py)', '399': '_kernel_manager_factory_default(multikernelmanager.py)', '215': '__init__(consoleapp.py)', '485': '__init__(session.py)', '457': '__init__(session.py)', '465': '_new_auth(session.py)', '459': '_check_packers(session.py)', '450': 'utcnow(session.py)', '244': 'squash_dates(jsonutil.py)', '90': 'AsyncKernelClient(client.py)', '147': 'KernelClient(client.py)', '139': 'HBChannelABC(channelsabc.py)', '138': 'ChannelABC(channelsabc.py)', '116': 'BlockingKernelClient(client.py)', '322': 'start_new_async_kernel(manager.py)', '319': 'AsyncKernelManager(manager.py)', '320': 'KernelManager(manager.py)', '224': 'AsyncIOLoopKernelManager(manager.py)', '225': 'IOLoopKernelManager(manager.py)', '635': 'test_connection_file_real_path(test_manager.py)', '657': '_run_lifecycle(test_multikernelmanager.py)', '704': 'execute(utils.py)', '155': 'execute(client.py)', '148': 'validate_string_dict(client.py)', '689': 'test_datetimes_msgpack(test_session.py)', '679': '_datetime_test(test_session.py)', '688': 'test_datetimes(test_session.py)', '690': 'test_datetimes_pickle(test_session.py)', '734': 'send(threaded.py)', '738': 'thread_send(threaded.py)', '664': 'test_start_sequence_ipc_kernels(test_multikernelmanager.py)', '654': '_get_ipc_km(test_multikernelmanager.py)', '660': 'test_ipc_lifecycle(test_multikernelmanager.py)', '659': 'test_ipc_cinfo(test_multikernelmanager.py)', '423': 'start_kernel(multikernelmanager.py)', '415': 'pre_start_kernel(multikernelmanager.py)', '380': 'DuplicateKernelError(multikernelmanager.py)', '414': 'new_kernel_id(multikernelmanager.py)', '389': 'start_kernel(multikernelmanager.py)', '238': 'start(restarter.py)', '430': 'poll(restarter.py)', '433': 'stop(restarter.py)', '428': '_fire_callbacks(restarter.py)', '510': 'do_execute(signalkernel.py)', '501': 'openssh_tunnel(tunnel.py)', '494': 'SSHException(tunnel.py)', '497': '_stop_tunnel(tunnel.py)', '475': 'feed_identities(session.py)', '330': 'restart_kernel(manager.py)', '202': 'cleanup_random_ports(connect.py)', '200': 'cleanup_connection_file(connect.py)', '567': 'test_mixin_cleanup_random_ports(test_connect.py)', '106': 'ZMQSocketChannel(channels.py)', '226': 'as_zmqstream(manager.py)', '233': 'wrapped(manager.py)', '568': 'test_mixin_record_random_ports(test_connect.py)', '557': 'DummyConfigurable(test_connect.py)', '235': 'IOLoopKernelRestarter(restarter.py)', '426': 'KernelRestarter(restarter.py)', '234': 'AsyncIOLoopKernelRestarter(restarter.py)', '291': 'start(kernelspecapp.py)', '251': 'start(kernelapp.py)', '249': 'setup_signals(kernelapp.py)', '252': 'shutdown_handler(kernelapp.py)', '250': 'shutdown(kernelapp.py)', '248': 'log_connection_info(kernelapp.py)', '199': 'blocking_client(connect.py)', '208': 'get_connection_info(connect.py)', '725': 'stop_channels(threaded.py)', '684': 'test_bad_unpack(test_session.py)', '676': '_bad_unpacker(test_session.py)', '536': 'test_complete_request(test_adapter.py)', '517': 'adapt(test_adapter.py)', '562': 'test_find_connection_file_local(test_connect.py)', '189': 'find_connection_file(connect.py)', '493': 'SubHander(forward.py)', '490': 'Handler(forward.py)', '253': 'KernelSpec(kernelspec.py)', '114': 'send(channels.py)', '88': 'send(channels.py)', '575': 'test_date_default(test_jsonutil.py)', '241': 'date_default(jsonutil.py)', '240': '_ensure_tzinfo(jsonutil.py)', '597': 'test_subclasses(test_kernelmanager.py)', '703': 'AsyncKernelManagerWithCleanup(utils.py)', '595': 'test_signal_kernel_subprocesses(test_kernelmanager.py)', '598': 'execute(test_kernelmanager.py)', '702': 'AsyncKernelManagerSubclass(utils.py)', '591': 'transport(test_kernelmanager.py)', '606': 'test_templated_kspec_env(test_kernelmanager.py)', '599': '_env_test_body(test_kernelmanager.py)', '607': 'execute(test_kernelmanager.py)', '604': 'test_signal_kernel_subprocesses(test_kernelmanager.py)', '608': 'execute(test_kernelmanager.py)', '586': 'env(test_kernelmanager.py)', '712': 'stop(utils.py)', '711': 'start(utils.py)', '705': 'test_env(utils.py)', '630': 'test_validate_kernel_name(test_kernelspec.py)', '506': 'SignalTestApp(signalkernel.py)', '507': 'SignalTestKernel(signalkernel.py)', '627': 'test_remove_kernel_spec(test_kernelspec.py)', '617': '_install_sample_kernel(test_kernelspec.py)', '626': 'test_kernel_spec_priority(test_kernelspec.py)', '651': 'test_tcp_cinfo(test_multikernelmanager.py)', '640': '_run_cinfo(test_multikernelmanager.py)', '621': 'test_find_all_specs(test_kernelspec.py)', '622': 'test_find_kernel_specs(test_kernelspec.py)', '623': 'test_get_kernel_spec(test_kernelspec.py)', '619': 'tearDown(test_kernelspec.py)', '618': 'setUp(test_kernelspec.py)', '649': 'test_start_sequence_ipc_kernels(test_multikernelmanager.py)', '650': 'test_start_sequence_tcp_kernels(test_multikernelmanager.py)', '644': 'test_ipc_cinfo(test_multikernelmanager.py)', '645': 'test_ipc_lifecycle(test_multikernelmanager.py)', '656': '_run_cinfo(test_multikernelmanager.py)', '569': 'test_secure_write(test_connect.py)', '573': 'check_user_only_permissions(test_connect.py)', '574': 'fetch_win32_permissions(test_connect.py)', '563': 'test_find_connection_file_relative(test_connect.py)', '561': 'test_find_connection_file_abspath(test_connect.py)', '539': 'test_input_request(test_adapter.py)', '537': 'test_display_data(test_adapter.py)', '540': 'test_inspect_reply(test_adapter.py)', '543': 'test_kernel_info_reply(test_adapter.py)', '542': 'test_inspect_request_token(test_adapter.py)', '535': 'test_complete_reply(test_adapter.py)', '541': 'test_inspect_request(test_adapter.py)', '538': 'test_execute_request(test_adapter.py)', '545': 'test_rename_type(test_adapter.py)', '544': 'test_no_adapt(test_adapter.py)', '546': 'test_same_version(test_adapter.py)', '514': 'V5toV4TestCase(test_adapter.py)', '512': 'AdapterTest(test_adapter.py)', '526': 'test_input_request(test_adapter.py)', '523': 'test_display_data(test_adapter.py)', '527': 'test_kernel_info_reply(test_adapter.py)', '530': 'test_object_info_reply_not_found(test_adapter.py)', '529': 'test_object_info_reply(test_adapter.py)', '531': 'test_object_info_request(test_adapter.py)', '521': 'test_complete_reply(test_adapter.py)', '522': 'test_complete_request(test_adapter.py)', '524': 'test_execute_reply(test_adapter.py)', '532': 'test_rename_type(test_adapter.py)', '525': 'test_execute_request(test_adapter.py)', '528': 'test_no_adapt(test_adapter.py)', '533': 'test_same_version(test_adapter.py)', '513': 'V4toV5TestCase(test_adapter.py)', '519': 'setUp(test_adapter.py)', '516': 'test_default_version(test_adapter.py)', '515': 'test_code_to_line_no_code(test_adapter.py)', '51': 'code_to_line(adapter.py)', '158': 'get_shell_msg(client.py)', '157': 'get_iopub_msg(client.py)', '710': '__exit__(utils.py)', '709': '__enter__(utils.py)', '580': 'test_kernelapp_lifecycle(test_kernelapp.py)', '579': '_launch(test_kernelapp.py)', '473': 'clone(session.py)', '481': 'send_raw(session.py)', '683': 'test_bad_roundtrip(test_session.py)', '685': 'test_bad_unpacker(test_session.py)', '682': 'test_bad_packer(test_session.py)', '681': 'test_bad_pack(test_session.py)', '675': '_bad_packer(test_session.py)', '697': 'test_session_id(test_session.py)', '699': 'test_unique_msg_ids(test_session.py)', '445': 'msg_header(session.py)', '680': 'test_args(test_session.py)', '478': 'msg_id(session.py)', '674': 'TestSession(test_session.py)', '673': 'SessionTestCase(test_session.py)', '678': 'setUp(test_session.py)', '556': 'test_shutdown(test_client.py)', '548': '_check_reply(test_client.py)', '550': 'test_comm_info(test_client.py)', '555': 'test_kernel_info(test_client.py)', '551': 'test_complete(test_client.py)', '554': 'test_inspect(test_client.py)', '553': 'test_history(test_client.py)', '549': 'setUp(test_client.py)', '255': 'NoSuchKernel(kernelspec.py)', '117': 'reqrep(client.py)', '124': 'wrapped(client.py)', '150': '_handle_kernel_info_reply(client.py)', '125': 'HBChannel(channels.py)', '102': 'hb_channel(client.py)', '196': '_make_url(connect.py)', '91': 'reqrep(client.py)', '105': 'wrapped(client.py)', '80': 'ZMQSocketChannel(channels.py)', '154': 'control_channel(client.py)', '723': 'ioloop(threaded.py)', '160': 'hb_channel(client.py)', '171': 'stdin_channel(client.py)', '164': 'iopub_channel(client.py)', '168': 'shell_channel(client.py)', '740': 'send_interrupt(win_interrupt.py)', '334': '__del__(manager.py)', '293': 'start(kernelspecapp.py)', '294': 'path_key(kernelspecapp.py)', '735': 'start(threaded.py)', '720': 'start(threaded.py)', '141': 'start(channelsabc.py)', '432': 'start(restarter.py)', '288': 'start(kernelspecapp.py)', '89': 'start(channels.py)', '115': 'start(channels.py)', '290': 'start(kernelspecapp.py)', '438': 'parse_command_line(runapp.py)', '218': 'build_kernel_argv(consoleapp.py)', '308': '_only_once(localinterfaces.py)', '317': 'wrapped(localinterfaces.py)', '47': 'V4toV5(adapter.py)', '46': 'Adapter(adapter.py)', '77': 'object_info_request(adapter.py)', '52': 'extract_oname_v4(adapter.py)', '70': 'complete_request(adapter.py)', '75': 'kernel_info_reply(adapter.py)', '49': '_version_str_to_list(adapter.py)', '48': 'V5toV4(adapter.py)', '53': '__call__(adapter.py)', '54': 'handle_reply_status_error(adapter.py)', '57': 'update_msg_type(adapter.py)', '56': 'update_metadata(adapter.py)', '55': 'update_header(adapter.py)', '247': 'initialize(kernelapp.py)', '246': '_record_started(kernelapp.py)', '585': 'config(test_kernelmanager.py)', '262': 'install_native_kernel_spec(kernelspec.py)', '276': 'install_native_kernel_spec(kernelspec.py)', '265': 'to_json(kernelspec.py)', '264': 'to_dict(kernelspec.py)', '449': 'test_msg2obj(session.py)', '453': '__init__(session.py)', '470': '_signature_scheme_changed(session.py)', '463': '_key_default(session.py)', '447': 'new_id_bytes(session.py)', '462': '_key_changed(session.py)', '443': 'default_secure(session.py)', '469': '_session_default(session.py)', '446': 'new_id(session.py)', '413': 'list_kernel_ids(multikernelmanager.py)', '721': 'stop(threaded.py)', '724': 'start_channels(threaded.py)', '722': '_check_kernel_info_reply(threaded.py)', '716': '__init__(threaded.py)', '416': 'remove_kernel(multikernelmanager.py)', '713': 'IOLoopThread(threaded.py)', '714': 'ThreadedKernelClient(threaded.py)', '715': 'ThreadedZMQSocketChannel(threaded.py)', '731': 'flush(threaded.py)', '727': '_flush(threaded.py)', '418': 'request_shutdown(multikernelmanager.py)', '402': 'cleanup_resources(multikernelmanager.py)', '408': 'finish_shutdown(multikernelmanager.py)', '393': '__len__(multikernelmanager.py)', '198': '_session_default(connect.py)', '298': 'launch_kernel(launcher.py)', '739': 'create_interrupt_event(win_interrupt.py)', '741': 'SECURITY_ATTRIBUTES(win_interrupt.py)', '509': '__init__(signalkernel.py)', '278': '__init__(kernelspec.py)', '127': '__init__(channels.py)', '126': 'InvalidPortNumber(channels.py)', '107': '__init__(channels.py)', '81': '__init__(channels.py)', '726': '__init__(threaded.py)', '737': 'setup_stream(threaded.py)', '728': '_handle_recv(threaded.py)', '729': 'call_handlers(threaded.py)', '136': 'stop(channels.py)', '133': 'is_beating(channels.py)', '145': 'time_to_dead(channelsabc.py)', '131': 'call_handlers(channels.py)', '130': '_poll(channels.py)'}}, {'key': 197, 'parent': 1873, 'tfidf_word': 'EP: 197, Name: initialize &rarr; handle_sigint &rarr; interrupt_kernel &rarr; send &rarr; serialize &rarr; sign', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 198, 'parent': 1873, 'tfidf_word': 'EP: 198, Name: initialize &rarr; handle_sigint &rarr; interrupt_kernel &rarr; send &rarr; Message', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 192, 'parent': 1871, 'tfidf_word': 'EP: 192, Name: initialize &rarr; handle_sigint &rarr; interrupt_kernel &rarr; has_kernel &rarr; _launch_kernel', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 208, 'parent': 1871, 'tfidf_word': 'EP: 208, Name: initialize &rarr; handle_sigint &rarr; interrupt_kernel &rarr; signal_kernel &rarr; has_kernel &rarr; _launch_kernel', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1869, 'parent': 2297, 'tfidf_word': 'handle initialize interrupt kernel make sigint url control connect socket ', 'tfidf_method': '_create_connected_socket _make_url interrupt_kernel handle_sigint initialize _connect_control_socket ', 'lda_word': ' connect,handle,create,url,kernel,', 'lda_method': ' make_url,interrupt_kernel,handle_sigint,create_connected_socket,initialize,', 'lsi_word': ' socket,connect,kernel,sigint,make,', 'lsi_method': ' make_url,create_connected_socket,handle_sigint,initialize,interrupt_kernel,', 'spm_method': ' ', 'text_summary': '', 'files_count': 3, 'files': ['runapp.py', 'manager.py', 'connect.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'437': 'initialize(runapp.py)', '435': 'handle_sigint(runapp.py)', '355': 'interrupt_kernel(manager.py)', '338': '_connect_control_socket(manager.py)', '192': '_create_connected_socket(connect.py)', '196': '_make_url(connect.py)'}}, {'key': 2029, 'parent': 2297, 'tfidf_word': 'handle initialize kernel sigint interrupt send thread ', 'tfidf_method': 'interrupt_kernel handle_sigint initialize send send thread_send send_interrupt send ', 'lda_word': ' send,interrupt,kernel,initialize,sigint,', 'lda_method': ' interrupt_kernel,initialize,handle_sigint,send,send_interrupt,', 'lsi_word': ' send,interrupt,handle,sigint,kernel,', 'lsi_method': ' initialize,interrupt_kernel,handle_sigint,send,thread_send,', 'spm_method': ' ', 'text_summary': 'Interrupts the kernel by sending it a signal.', 'files_count': 5, 'files': ['runapp.py', 'manager.py', 'threaded.py', 'channels.py', 'win_interrupt.py'], 'execution_path_count': 4, 'function_id_to_name_file': {'437': 'initialize(runapp.py)', '435': 'handle_sigint(runapp.py)', '355': 'interrupt_kernel(manager.py)', '734': 'send(threaded.py)', '738': 'thread_send(threaded.py)', '114': 'send(channels.py)', '88': 'send(channels.py)', '740': 'send_interrupt(win_interrupt.py)'}}, {'key': 1376, 'parent': 1605, 'tfidf_word': 'EP: 1376, Name: tunnel_connection &rarr; open_tunnel &rarr; paramiko_tunnel &rarr; _try_passwordless_paramiko &rarr; msg &rarr; msg &rarr; extract_header', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1378, 'parent': 1605, 'tfidf_word': 'EP: 1378, Name: tunnel_connection &rarr; open_tunnel &rarr; paramiko_tunnel &rarr; _try_passwordless_paramiko &rarr; msg &rarr; msg &rarr; msg &rarr; extract_header', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1380, 'parent': 1606, 'tfidf_word': 'EP: 1380, Name: tunnel_connection &rarr; open_tunnel &rarr; paramiko_tunnel &rarr; _try_passwordless_paramiko &rarr; msg &rarr; msg &rarr; extract_header', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1382, 'parent': 1606, 'tfidf_word': 'EP: 1382, Name: tunnel_connection &rarr; open_tunnel &rarr; paramiko_tunnel &rarr; _try_passwordless_paramiko &rarr; msg &rarr; msg &rarr; msg &rarr; extract_header', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1374, 'parent': 1784, 'tfidf_word': 'EP: 1374, Name: tunnel_connection &rarr; open_tunnel &rarr; paramiko_tunnel &rarr; _try_passwordless_paramiko &rarr; msg &rarr; extract_header', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1375, 'parent': 1784, 'tfidf_word': 'EP: 1375, Name: tunnel_connection &rarr; open_tunnel &rarr; paramiko_tunnel &rarr; _try_passwordless_paramiko &rarr; msg &rarr; msg_header &rarr; msg_id', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1370, 'parent': 1842, 'tfidf_word': 'EP: 1370, Name: tunnel_connection &rarr; open_tunnel &rarr; select_random_ports &rarr; close', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1841, 'parent': 1842, 'tfidf_word': 'close connection open port random select tunnel ', 'tfidf_method': 'open_tunnel select_random_ports tunnel_connection close close ', 'lda_word': ' tunnel,port,connection,select,close,', 'lda_method': ' select_random_ports,close,open_tunnel,tunnel_connection,', 'lsi_word': ' tunnel,connection,close,select,random,', 'lsi_method': ' tunnel_connection,open_tunnel,select_random_ports,close,', 'spm_method': ' ', 'text_summary': '', 'files_count': 2, 'files': ['tunnel.py', 'channels.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'505': 'tunnel_connection(tunnel.py)', '500': 'open_tunnel(tunnel.py)', '503': 'select_random_ports(tunnel.py)', '109': 'close(channels.py)', '132': 'close(channels.py)'}}, {'key': 180, 'parent': 1585, 'tfidf_word': 'EP: 180, Name: initialize &rarr; init_kernel_info &rarr; kernel_info &rarr; msg &rarr; msg &rarr; msg_header &rarr; msg_id', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 182, 'parent': 1585, 'tfidf_word': 'EP: 182, Name: initialize &rarr; init_kernel_info &rarr; kernel_info &rarr; msg &rarr; msg &rarr; msg &rarr; msg_header &rarr; msg_id', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 174, 'parent': 1795, 'tfidf_word': 'EP: 174, Name: initialize &rarr; init_kernel_info &rarr; kernel_info &rarr; msg &rarr; msg_header &rarr; msg_id', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1584, 'parent': 1795, 'tfidf_word': 'header id init initialize info kernel msg ', 'tfidf_method': 'kernel_info init_kernel_info initialize msg msg_header msg_id msg msg ', 'lda_word': ' msg,kernel,info,initialize,init,', 'lda_method': ' msg,initialize,kernel_info,msg_header,msg_id,', 'lsi_word': ' msg,info,kernel,init,initialize,', 'lsi_method': ' msg,init_kernel_info,initialize,kernel_info,msg_header,', 'spm_method': '  &#187; initialize(runapp.py) &rarr; init_kernel_info(runapp.py) &rarr; kernel_info(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; init_kernel_info(runapp.py) &rarr; kernel_info(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br>', 'text_summary': '', 'files_count': 4, 'files': ['runapp.py', 'client.py', 'test_adapter.py', 'session.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'437': 'initialize(runapp.py)', '436': 'init_kernel_info(runapp.py)', '167': 'kernel_info(client.py)', '520': 'msg(test_adapter.py)', '476': 'msg(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '534': 'msg(test_adapter.py)'}}, {'key': 179, 'parent': 1770, 'tfidf_word': 'EP: 179, Name: initialize &rarr; init_kernel_info &rarr; kernel_info &rarr; msg &rarr; msg &rarr; extract_header', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 181, 'parent': 1770, 'tfidf_word': 'EP: 181, Name: initialize &rarr; init_kernel_info &rarr; kernel_info &rarr; msg &rarr; msg &rarr; msg &rarr; extract_header', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 173, 'parent': 1994, 'tfidf_word': 'EP: 173, Name: initialize &rarr; init_kernel_info &rarr; kernel_info &rarr; msg &rarr; extract_header', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1769, 'parent': 1994, 'tfidf_word': 'extract header init initialize info kernel msg ', 'tfidf_method': 'kernel_info init_kernel_info initialize extract_header msg msg msg ', 'lda_word': ' msg,kernel,info,init,initialize,', 'lda_method': ' msg,init_kernel_info,kernel_info,extract_header,initialize,', 'lsi_word': ' msg,info,kernel,header,init,', 'lsi_method': ' msg,extract_header,init_kernel_info,initialize,kernel_info,', 'spm_method': '  &#187; initialize(runapp.py) &rarr; init_kernel_info(runapp.py) &rarr; kernel_info(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br>', 'text_summary': '', 'files_count': 4, 'files': ['runapp.py', 'client.py', 'test_adapter.py', 'session.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'437': 'initialize(runapp.py)', '436': 'init_kernel_info(runapp.py)', '167': 'kernel_info(client.py)', '520': 'msg(test_adapter.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '534': 'msg(test_adapter.py)'}}, {'key': 292, 'parent': 1591, 'tfidf_word': 'EP: 292, Name: start &rarr; start &rarr; input &rarr; msg &rarr; msg &rarr; msg_header &rarr; msg_id', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 294, 'parent': 1591, 'tfidf_word': 'EP: 294, Name: start &rarr; start &rarr; input &rarr; msg &rarr; msg &rarr; msg &rarr; msg_header &rarr; msg_id', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 286, 'parent': 1796, 'tfidf_word': 'EP: 286, Name: start &rarr; start &rarr; input &rarr; msg &rarr; msg_header &rarr; msg_id', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1590, 'parent': 1796, 'tfidf_word': 'header id input start msg ', 'tfidf_method': 'input start start msg msg_header msg_id msg msg ', 'lda_word': ' msg,input,start,header,', 'lda_method': ' msg,start,msg_header,msg_id,input,', 'lsi_word': ' msg,start,header,input,', 'lsi_method': ' msg,start,input,msg_header,msg_id,', 'spm_method': '  &#187; start(kernelspecapp.py) &rarr; start(kernelspecapp.py) &rarr; input(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; start(kernelspecapp.py) &rarr; input(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br>', 'text_summary': '', 'files_count': 4, 'files': ['kernelspecapp.py', 'client.py', 'test_adapter.py', 'session.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'291': 'start(kernelspecapp.py)', '297': 'start(kernelspecapp.py)', '162': 'input(client.py)', '520': 'msg(test_adapter.py)', '476': 'msg(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '534': 'msg(test_adapter.py)'}}, {'key': 291, 'parent': 1775, 'tfidf_word': 'EP: 291, Name: start &rarr; start &rarr; input &rarr; msg &rarr; msg &rarr; extract_header', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 293, 'parent': 1775, 'tfidf_word': 'EP: 293, Name: start &rarr; start &rarr; input &rarr; msg &rarr; msg &rarr; msg &rarr; extract_header', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 285, 'parent': 1995, 'tfidf_word': 'EP: 285, Name: start &rarr; start &rarr; input &rarr; msg &rarr; extract_header', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1774, 'parent': 1995, 'tfidf_word': 'extract header input start msg ', 'tfidf_method': 'input start start extract_header msg msg msg ', 'lda_word': ' msg,start,header,extract,input,', 'lda_method': ' msg,start,input,extract_header,', 'lsi_word': ' msg,start,header,input,extract,', 'lsi_method': ' msg,start,input,extract_header,', 'spm_method': '  &#187; start(kernelspecapp.py) &rarr; start(kernelspecapp.py) &rarr; input(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br>', 'text_summary': '', 'files_count': 4, 'files': ['kernelspecapp.py', 'client.py', 'test_adapter.py', 'session.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'291': 'start(kernelspecapp.py)', '297': 'start(kernelspecapp.py)', '162': 'input(client.py)', '520': 'msg(test_adapter.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '534': 'msg(test_adapter.py)'}}, {'key': 48, 'parent': 1583, 'tfidf_word': 'EP: 48, Name: tunnel_to_kernel &rarr; try_passwordless_ssh &rarr; _try_passwordless_paramiko &rarr; msg &rarr; msg &rarr; msg_header &rarr; msg_id', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 50, 'parent': 1583, 'tfidf_word': 'EP: 50, Name: tunnel_to_kernel &rarr; try_passwordless_ssh &rarr; _try_passwordless_paramiko &rarr; msg &rarr; msg &rarr; msg &rarr; msg_header &rarr; msg_id', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 42, 'parent': 1794, 'tfidf_word': 'EP: 42, Name: tunnel_to_kernel &rarr; try_passwordless_ssh &rarr; _try_passwordless_paramiko &rarr; msg &rarr; msg_header &rarr; msg_id', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1582, 'parent': 1794, 'tfidf_word': 'header id kernel paramiko ssh tunnel passwordless try msg ', 'tfidf_method': 'tunnel_to_kernel msg msg_header msg_id _try_passwordless_paramiko try_passwordless_ssh msg msg ', 'lda_word': ' msg,passwordless,ssh,kernel,try,', 'lda_method': ' msg,tunnel_to_kernel,try_passwordless_paramiko,try_passwordless_ssh,msg_header,', 'lsi_word': ' msg,passwordless,try,kernel,paramiko,', 'lsi_method': ' msg,msg_id,msg_header,try_passwordless_paramiko,try_passwordless_ssh,', 'spm_method': '  &#187; tunnel_to_kernel(connect.py) &rarr; try_passwordless_ssh(tunnel.py) &rarr; _try_passwordless_paramiko(tunnel.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; try_passwordless_ssh(tunnel.py) &rarr; _try_passwordless_paramiko(tunnel.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br>', 'text_summary': '', 'files_count': 4, 'files': ['connect.py', 'tunnel.py', 'test_adapter.py', 'session.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'190': 'tunnel_to_kernel(connect.py)', '504': 'try_passwordless_ssh(tunnel.py)', '499': '_try_passwordless_paramiko(tunnel.py)', '520': 'msg(test_adapter.py)', '476': 'msg(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '534': 'msg(test_adapter.py)'}}, {'key': 51, 'parent': 2270, 'tfidf_word': 'EP: 51, Name: tunnel_to_kernel &rarr; try_passwordless_ssh &rarr; _try_passwordless_paramiko &rarr; _split_server', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2019, 'parent': 2270, 'tfidf_word': 'extract header kernel paramiko ssh tunnel passwordless try msg ', 'tfidf_method': 'tunnel_to_kernel extract_header msg _try_passwordless_paramiko try_passwordless_ssh msg msg ', 'lda_word': ' passwordless,try,ssh,paramiko,header,', 'lda_method': ' msg,extract_header,tunnel_to_kernel,try_passwordless_paramiko,try_passwordless_ssh,', 'lsi_word': ' msg,passwordless,try,tunnel,ssh,', 'lsi_method': ' msg,extract_header,try_passwordless_paramiko,try_passwordless_ssh,tunnel_to_kernel,', 'spm_method': '  &#187; tunnel_to_kernel(connect.py) &rarr; try_passwordless_ssh(tunnel.py) &rarr; _try_passwordless_paramiko(tunnel.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br>', 'text_summary': 'Given a message or header, return the header. Try passwordless login with paramiko.', 'files_count': 4, 'files': ['connect.py', 'tunnel.py', 'test_adapter.py', 'session.py'], 'execution_path_count': 5, 'function_id_to_name_file': {'190': 'tunnel_to_kernel(connect.py)', '504': 'try_passwordless_ssh(tunnel.py)', '499': '_try_passwordless_paramiko(tunnel.py)', '534': 'msg(test_adapter.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '520': 'msg(test_adapter.py)'}}, {'key': 485, 'parent': 1900, 'tfidf_word': 'EP: 485, Name: stdin_channel &rarr; connect_stdin &rarr; _create_connected_socket &rarr; _make_url', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 598, 'parent': 1900, 'tfidf_word': 'EP: 598, Name: IOLoopKernelManager &rarr; connect_stdin &rarr; _create_connected_socket &rarr; _make_url', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 607, 'parent': 1912, 'tfidf_word': 'EP: 607, Name: AsyncIOLoopKernelManager &rarr; connect_shell &rarr; _create_connected_socket &rarr; _make_url', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1898, 'parent': 1912, 'tfidf_word': 'make socket url channel io kernel loop manager connect shell ', 'tfidf_method': '_create_connected_socket _make_url connect_shell shell_channel IOLoopKernelManager ', 'lda_word': ' connect,create,kernel,manager,url,', 'lda_method': ' connect_shell,create_connected_socket,make_url,shell_channel,ioloopkernelmanager,', 'lsi_word': ' connect,shell,make,url,socket,', 'lsi_method': ' create_connected_socket,make_url,connect_shell,ioloopkernelmanager,shell_channel,', 'spm_method': ' ', 'text_summary': 'return zmq Socket connected to the Shell channel.', 'files_count': 3, 'files': ['client.py', 'connect.py', 'manager.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'168': 'shell_channel(client.py)', '206': 'connect_shell(connect.py)', '192': '_create_connected_socket(connect.py)', '196': '_make_url(connect.py)', '225': 'IOLoopKernelManager(manager.py)'}}, {'key': 1911, 'parent': 2406, 'tfidf_word': 'socket url io kernel loop manager connect iopub async channel ', 'tfidf_method': '_create_connected_socket _make_url connect_iopub iopub_channel AsyncIOLoopKernelManager IOLoopKernelManager ', 'lda_word': ' connect,manager,loop,kernel,io,', 'lda_method': ' connect_iopub,create_connected_socket,ioloopkernelmanager,make_url,asyncioloopkernelmanager,', 'lsi_word': ' connect,iopub,make,url,create,', 'lsi_method': ' create_connected_socket,make_url,connect_iopub,ioloopkernelmanager,asyncioloopkernelmanager,', 'spm_method': ' ', 'text_summary': 'return zmq Socket connected to the IOPub channel.', 'files_count': 3, 'files': ['manager.py', 'connect.py', 'client.py'], 'execution_path_count': 3, 'function_id_to_name_file': {'224': 'AsyncIOLoopKernelManager(manager.py)', '205': 'connect_iopub(connect.py)', '192': '_create_connected_socket(connect.py)', '196': '_make_url(connect.py)', '164': 'iopub_channel(client.py)', '225': 'IOLoopKernelManager(manager.py)'}}, {'key': 2369, 'parent': 2406, 'tfidf_word': 'io loop manager connect socket async close control del interrupt ', 'tfidf_method': '_create_connected_socket _make_url connect_hb AsyncIOLoopKernelManager IOLoopKernelManager interrupt_kernel __del__ _close_control_socket ', 'lda_word': ' connect,create,manager,async,url,', 'lda_method': ' create_connected_socket,make_url,close_control_socket,del,connect_hb,', 'lsi_word': ' connect,socket,create,make,url,', 'lsi_method': ' create_connected_socket,make_url,connect_hb,ioloopkernelmanager,asyncioloopkernelmanager,', 'spm_method': ' ', 'text_summary': 'Make a ZeroMQ URL for a given channel.', 'files_count': 2, 'files': ['manager.py', 'connect.py'], 'execution_path_count': 4, 'function_id_to_name_file': {'225': 'IOLoopKernelManager(manager.py)', '204': 'connect_hb(connect.py)', '192': '_create_connected_socket(connect.py)', '196': '_make_url(connect.py)', '224': 'AsyncIOLoopKernelManager(manager.py)', '334': '__del__(manager.py)', '337': '_close_control_socket(manager.py)', '328': 'interrupt_kernel(manager.py)'}}, {'key': 698, 'parent': 2035, 'tfidf_word': 'EP: 698, Name: wait_for_ready &rarr; is_alive &rarr; is_alive &rarr; has_kernel &rarr; _launch_kernel', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2026, 'parent': 2035, 'tfidf_word': 'launch alive kernel beating channels ready stop wait ', 'tfidf_method': '_launch_kernel has_kernel is_alive is_alive wait_for_ready is_beating stop_channels ', 'lda_word': ' kernel,alive,launch,beating,ready,', 'lda_method': ' launch_kernel,has_kernel,is_beating,is_alive,stop_channels,', 'lsi_word': ' kernel,alive,launch,ready,wait,', 'lsi_method': ' is_alive,has_kernel,launch_kernel,wait_for_ready,is_beating,', 'spm_method': ' ', 'text_summary': '', 'files_count': 4, 'files': ['client.py', 'manager.py', 'channels.py', 'threaded.py'], 'execution_path_count': 3, 'function_id_to_name_file': {'104': 'wait_for_ready(client.py)', '103': 'is_alive(client.py)', '357': 'is_alive(manager.py)', '354': 'has_kernel(manager.py)', '347': '_launch_kernel(manager.py)', '133': 'is_beating(channels.py)', '725': 'stop_channels(threaded.py)'}}, {'key': 332, 'parent': 1406, 'tfidf_word': 'EP: 332, Name: restart_kernel &rarr; shutdown_kernel &rarr; finish_shutdown &rarr; _kill_kernel &rarr; _async_wait &rarr; is_alive &rarr; has_kernel &rarr; _launch_kernel', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 403, 'parent': 1406, 'tfidf_word': 'EP: 403, Name: start_new_async_kernel &rarr; shutdown_kernel &rarr; finish_shutdown &rarr; _kill_kernel &rarr; _async_wait &rarr; is_alive &rarr; has_kernel &rarr; _launch_kernel', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 300, 'parent': 1410, 'tfidf_word': 'EP: 300, Name: restart_kernel &rarr; shutdown_kernel &rarr; _kill_kernel &rarr; _async_wait &rarr; is_alive &rarr; has_kernel &rarr; _launch_kernel', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 371, 'parent': 1410, 'tfidf_word': 'EP: 371, Name: start_new_async_kernel &rarr; shutdown_kernel &rarr; _kill_kernel &rarr; _async_wait &rarr; is_alive &rarr; has_kernel &rarr; _launch_kernel', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 331, 'parent': 1480, 'tfidf_word': 'EP: 331, Name: restart_kernel &rarr; shutdown_kernel &rarr; finish_shutdown &rarr; _kill_kernel &rarr; has_kernel &rarr; _launch_kernel', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 402, 'parent': 1480, 'tfidf_word': 'EP: 402, Name: start_new_async_kernel &rarr; shutdown_kernel &rarr; finish_shutdown &rarr; _kill_kernel &rarr; has_kernel &rarr; _launch_kernel', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 299, 'parent': 1680, 'tfidf_word': 'EP: 299, Name: restart_kernel &rarr; shutdown_kernel &rarr; _kill_kernel &rarr; has_kernel &rarr; _launch_kernel', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 370, 'parent': 1680, 'tfidf_word': 'EP: 370, Name: start_new_async_kernel &rarr; shutdown_kernel &rarr; _kill_kernel &rarr; has_kernel &rarr; _launch_kernel', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1417, 'parent': 2049, 'tfidf_word': 'finish kill launch signal async new restart start shutdown kernel ', 'tfidf_method': '_kill_kernel finish_shutdown shutdown_kernel signal_kernel _launch_kernel has_kernel start_new_async_kernel restart_kernel ', 'lda_word': ' kernel,shutdown,kill,signal,launch,', 'lda_method': ' has_kernel,kill_kernel,shutdown_kernel,finish_shutdown,launch_kernel,', 'lsi_word': ' kernel,shutdown,launch,signal,kill,', 'lsi_method': ' finish_shutdown,shutdown_kernel,kill_kernel,has_kernel,signal_kernel,', 'spm_method': '  &#187; shutdown_kernel(manager.py) &rarr; finish_shutdown(manager.py) &rarr; _kill_kernel(manager.py) &rarr; signal_kernel(manager.py) &rarr; has_kernel(manager.py) &rarr; _launch_kernel(manager.py) . <br>', 'text_summary': "actually launch the kernel. Wait for kernel shutdown, then kill process if it doesn't shutdown.", 'files_count': 1, 'files': ['manager.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'330': 'restart_kernel(manager.py)', '331': 'shutdown_kernel(manager.py)', '327': 'finish_shutdown(manager.py)', '325': '_kill_kernel(manager.py)', '332': 'signal_kernel(manager.py)', '354': 'has_kernel(manager.py)', '347': '_launch_kernel(manager.py)', '322': 'start_new_async_kernel(manager.py)'}}, {'key': 1471, 'parent': 2049, 'tfidf_word': 'kill launch shutdown signal async new restart start kernel ', 'tfidf_method': '_kill_kernel shutdown_kernel signal_kernel _launch_kernel has_kernel start_new_async_kernel restart_kernel ', 'lda_word': ' kernel,kill,launch,restart,signal,', 'lda_method': ' has_kernel,signal_kernel,kill_kernel,shutdown_kernel,launch_kernel,', 'lsi_word': ' kernel,launch,signal,shutdown,kill,', 'lsi_method': ' has_kernel,signal_kernel,launch_kernel,shutdown_kernel,kill_kernel,', 'spm_method': ' ', 'text_summary': 'actually launch the kernel. Restarts a kernel with the arguments that were used to launch it.', 'files_count': 1, 'files': ['manager.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'330': 'restart_kernel(manager.py)', '331': 'shutdown_kernel(manager.py)', '325': '_kill_kernel(manager.py)', '332': 'signal_kernel(manager.py)', '354': 'has_kernel(manager.py)', '347': '_launch_kernel(manager.py)', '322': 'start_new_async_kernel(manager.py)'}}, {'key': 315, 'parent': 1475, 'tfidf_word': 'EP: 315, Name: restart_kernel &rarr; shutdown_kernel &rarr; request_shutdown &rarr; send &rarr; msg &rarr; extract_header', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 386, 'parent': 1475, 'tfidf_word': 'EP: 386, Name: start_new_async_kernel &rarr; shutdown_kernel &rarr; request_shutdown &rarr; send &rarr; msg &rarr; extract_header', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 309, 'parent': 1683, 'tfidf_word': 'EP: 309, Name: restart_kernel &rarr; shutdown_kernel &rarr; request_shutdown &rarr; msg &rarr; extract_header', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 380, 'parent': 1683, 'tfidf_word': 'EP: 380, Name: start_new_async_kernel &rarr; shutdown_kernel &rarr; request_shutdown &rarr; msg &rarr; extract_header', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1413, 'parent': 2051, 'tfidf_word': 'extract header request async new restart start kernel shutdown msg ', 'tfidf_method': 'shutdown_kernel request_shutdown extract_header msg msg msg start_new_async_kernel restart_kernel ', 'lda_word': ' msg,shutdown,kernel,extract,request,', 'lda_method': ' msg,request_shutdown,shutdown_kernel,extract_header,restart_kernel,', 'lsi_word': ' msg,shutdown,kernel,header,request,', 'lsi_method': ' msg,request_shutdown,shutdown_kernel,extract_header,start_new_async_kernel,', 'spm_method': '  &#187; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) &rarr; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br>', 'text_summary': 'Attempts to stop the kernel process cleanly. Restarts a kernel with the arguments that were used to launch it.', 'files_count': 3, 'files': ['manager.py', 'test_adapter.py', 'session.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'330': 'restart_kernel(manager.py)', '331': 'shutdown_kernel(manager.py)', '362': 'request_shutdown(manager.py)', '520': 'msg(test_adapter.py)', '534': 'msg(test_adapter.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '322': 'start_new_async_kernel(manager.py)'}}, {'key': 1478, 'parent': 2051, 'tfidf_word': 'extract header request async new restart start kernel msg shutdown ', 'tfidf_method': 'shutdown_kernel request_shutdown extract_header msg msg start_new_async_kernel restart_kernel ', 'lda_word': ' shutdown,header,msg,kernel,request,', 'lda_method': ' msg,shutdown_kernel,request_shutdown,extract_header,start_new_async_kernel,', 'lsi_word': ' shutdown,msg,kernel,extract,request,', 'lsi_method': ' msg,request_shutdown,shutdown_kernel,extract_header,start_new_async_kernel,', 'spm_method': ' ', 'text_summary': 'Attempts to stop the kernel process cleanly.', 'files_count': 3, 'files': ['manager.py', 'test_adapter.py', 'session.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'330': 'restart_kernel(manager.py)', '331': 'shutdown_kernel(manager.py)', '362': 'request_shutdown(manager.py)', '520': 'msg(test_adapter.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '322': 'start_new_async_kernel(manager.py)'}}, {'key': 1415, 'parent': 2052, 'tfidf_word': 'extract header request async new restart start kernel shutdown msg ', 'tfidf_method': 'shutdown_kernel request_shutdown extract_header msg msg msg start_new_async_kernel restart_kernel ', 'lda_word': ' msg,shutdown,kernel,new,extract,', 'lda_method': ' msg,extract_header,restart_kernel,shutdown_kernel,request_shutdown,', 'lsi_word': ' msg,kernel,shutdown,header,request,', 'lsi_method': ' msg,extract_header,request_shutdown,shutdown_kernel,restart_kernel,', 'spm_method': '  &#187; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) &rarr; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br>', 'text_summary': 'Given a message or header, return the header.', 'files_count': 3, 'files': ['manager.py', 'test_adapter.py', 'session.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'330': 'restart_kernel(manager.py)', '331': 'shutdown_kernel(manager.py)', '362': 'request_shutdown(manager.py)', '534': 'msg(test_adapter.py)', '520': 'msg(test_adapter.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '322': 'start_new_async_kernel(manager.py)'}}, {'key': 1479, 'parent': 2052, 'tfidf_word': 'extract header request async new restart start kernel msg shutdown ', 'tfidf_method': 'shutdown_kernel request_shutdown extract_header msg msg start_new_async_kernel restart_kernel ', 'lda_word': ' msg,shutdown,kernel,extract,header,', 'lda_method': ' msg,extract_header,shutdown_kernel,request_shutdown,start_new_async_kernel,', 'lsi_word': ' shutdown,kernel,msg,request,header,', 'lsi_method': ' msg,extract_header,request_shutdown,shutdown_kernel,start_new_async_kernel,', 'spm_method': ' ', 'text_summary': 'Send a shutdown request via control channel.', 'files_count': 3, 'files': ['manager.py', 'test_adapter.py', 'session.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'330': 'restart_kernel(manager.py)', '331': 'shutdown_kernel(manager.py)', '362': 'request_shutdown(manager.py)', '534': 'msg(test_adapter.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '322': 'start_new_async_kernel(manager.py)'}}, {'key': 319, 'parent': 1477, 'tfidf_word': 'EP: 319, Name: restart_kernel &rarr; shutdown_kernel &rarr; request_shutdown &rarr; send &rarr; adapt &rarr; utcnow', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 390, 'parent': 1477, 'tfidf_word': 'EP: 390, Name: start_new_async_kernel &rarr; shutdown_kernel &rarr; request_shutdown &rarr; send &rarr; adapt &rarr; utcnow', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1476, 'parent': 2280, 'tfidf_word': 'request send serialize sign async new restart start kernel shutdown ', 'tfidf_method': 'shutdown_kernel request_shutdown send serialize sign start_new_async_kernel restart_kernel ', 'lda_word': ' kernel,shutdown,sign,serialize,async,', 'lda_method': ' send,request_shutdown,sign,shutdown_kernel,serialize,', 'lsi_word': ' kernel,shutdown,sign,serialize,request,', 'lsi_method': ' shutdown_kernel,serialize,send,sign,request_shutdown,', 'spm_method': ' ', 'text_summary': 'Attempts to stop the kernel process cleanly. Restarts a kernel with the arguments that were used to launch it. Pass a message to the ZMQ socket to send.', 'files_count': 2, 'files': ['manager.py', 'session.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'330': 'restart_kernel(manager.py)', '331': 'shutdown_kernel(manager.py)', '362': 'request_shutdown(manager.py)', '480': 'send(session.py)', '482': 'serialize(session.py)', '483': 'sign(session.py)', '322': 'start_new_async_kernel(manager.py)'}}, {'key': 1685, 'parent': 2280, 'tfidf_word': 'message request send async new restart start kernel shutdown ', 'tfidf_method': 'shutdown_kernel request_shutdown Message send start_new_async_kernel restart_kernel ', 'lda_word': ' shutdown,kernel,send,request,message,', 'lda_method': ' shutdown_kernel,send,message,request_shutdown,restart_kernel,', 'lsi_word': ' kernel,shutdown,send,request,message,', 'lsi_method': ' message,request_shutdown,send,shutdown_kernel,restart_kernel,', 'spm_method': ' ', 'text_summary': 'Send a shutdown request via control channel.', 'files_count': 2, 'files': ['manager.py', 'session.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'330': 'restart_kernel(manager.py)', '331': 'shutdown_kernel(manager.py)', '362': 'request_shutdown(manager.py)', '480': 'send(session.py)', '440': 'Message(session.py)', '322': 'start_new_async_kernel(manager.py)'}}, {'key': 328, 'parent': 1686, 'tfidf_word': 'EP: 328, Name: restart_kernel &rarr; shutdown_kernel &rarr; request_shutdown &rarr; send &rarr; thread_send', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 399, 'parent': 1686, 'tfidf_word': 'EP: 399, Name: start_new_async_kernel &rarr; shutdown_kernel &rarr; request_shutdown &rarr; send &rarr; thread_send', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1882, 'parent': 2338, 'tfidf_word': 'request restart send kernel shutdown ', 'tfidf_method': 'restart_kernel shutdown_kernel request_shutdown send send ', 'lda_word': ' shutdown,kernel,send,request,restart,', 'lda_method': ' request_shutdown,send,shutdown_kernel,restart_kernel,', 'lsi_word': ' kernel,shutdown,restart,send,request,', 'lsi_method': ' shutdown_kernel,request_shutdown,restart_kernel,send,', 'spm_method': ' ', 'text_summary': 'Attempts to stop the kernel process cleanly.', 'files_count': 2, 'files': ['manager.py', 'channels.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'330': 'restart_kernel(manager.py)', '331': 'shutdown_kernel(manager.py)', '362': 'request_shutdown(manager.py)', '88': 'send(channels.py)', '114': 'send(channels.py)'}}, {'key': 1892, 'parent': 2338, 'tfidf_word': 'async new request send start kernel shutdown ', 'tfidf_method': 'start_new_async_kernel shutdown_kernel request_shutdown send send ', 'lda_word': ' shutdown,kernel,async,send,request,', 'lda_method': ' shutdown_kernel,send,request_shutdown,start_new_async_kernel,', 'lsi_word': ' kernel,shutdown,request,start,send,', 'lsi_method': ' start_new_async_kernel,send,shutdown_kernel,request_shutdown,', 'spm_method': ' ', 'text_summary': '', 'files_count': 2, 'files': ['manager.py', 'channels.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'322': 'start_new_async_kernel(manager.py)', '331': 'shutdown_kernel(manager.py)', '362': 'request_shutdown(manager.py)', '88': 'send(channels.py)', '114': 'send(channels.py)'}}, {'key': 334, 'parent': 1883, 'tfidf_word': 'EP: 334, Name: restart_kernel &rarr; shutdown_kernel &rarr; finish_shutdown &rarr; _launch_kernel', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 405, 'parent': 1883, 'tfidf_word': 'EP: 405, Name: start_new_async_kernel &rarr; shutdown_kernel &rarr; finish_shutdown &rarr; _launch_kernel', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1687, 'parent': 2380, 'tfidf_word': 'finish kill launch async new restart start shutdown kernel ', 'tfidf_method': '_kill_kernel _launch_kernel finish_shutdown shutdown_kernel start_new_async_kernel restart_kernel ', 'lda_word': ' kernel,shutdown,kill,launch,finish,', 'lda_method': ' kill_kernel,finish_shutdown,launch_kernel,shutdown_kernel,restart_kernel,', 'lsi_word': ' kernel,shutdown,kill,launch,finish,', 'lsi_method': ' finish_shutdown,kill_kernel,launch_kernel,shutdown_kernel,restart_kernel,', 'spm_method': ' ', 'text_summary': "actually launch the kernel. Wait for kernel shutdown, then kill process if it doesn't shutdown.", 'files_count': 1, 'files': ['manager.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'330': 'restart_kernel(manager.py)', '331': 'shutdown_kernel(manager.py)', '327': 'finish_shutdown(manager.py)', '325': '_kill_kernel(manager.py)', '326': '_launch_kernel(manager.py)', '322': 'start_new_async_kernel(manager.py)'}}, {'key': 1880, 'parent': 2380, 'tfidf_word': 'kill launch shutdown async new restart start kernel ', 'tfidf_method': '_kill_kernel _launch_kernel shutdown_kernel start_new_async_kernel restart_kernel ', 'lda_word': ' kernel,launch,shutdown,kill,start,', 'lda_method': ' shutdown_kernel,kill_kernel,launch_kernel,start_new_async_kernel,restart_kernel,', 'lsi_word': ' kernel,launch,kill,shutdown,new,', 'lsi_method': ' kill_kernel,shutdown_kernel,launch_kernel,start_new_async_kernel,restart_kernel,', 'spm_method': ' ', 'text_summary': 'actually launch the kernel.', 'files_count': 1, 'files': ['manager.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'330': 'restart_kernel(manager.py)', '331': 'shutdown_kernel(manager.py)', '325': '_kill_kernel(manager.py)', '326': '_launch_kernel(manager.py)', '322': 'start_new_async_kernel(manager.py)'}}, {'key': 308, 'parent': 1472, 'tfidf_word': 'EP: 308, Name: restart_kernel &rarr; shutdown_kernel &rarr; cleanup &rarr; cleanup_resources &rarr; cleanup_ipc_files &rarr; ports', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 379, 'parent': 1472, 'tfidf_word': 'EP: 379, Name: start_new_async_kernel &rarr; shutdown_kernel &rarr; cleanup &rarr; cleanup_resources &rarr; cleanup_ipc_files &rarr; ports', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 304, 'parent': 1681, 'tfidf_word': 'EP: 304, Name: restart_kernel &rarr; shutdown_kernel &rarr; cleanup_resources &rarr; cleanup_ipc_files &rarr; ports', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 375, 'parent': 1681, 'tfidf_word': 'EP: 375, Name: start_new_async_kernel &rarr; shutdown_kernel &rarr; cleanup_resources &rarr; cleanup_ipc_files &rarr; ports', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 306, 'parent': 1682, 'tfidf_word': 'EP: 306, Name: restart_kernel &rarr; shutdown_kernel &rarr; cleanup &rarr; cleanup_resources &rarr; cleanup_connection_file', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 377, 'parent': 1682, 'tfidf_word': 'EP: 377, Name: start_new_async_kernel &rarr; shutdown_kernel &rarr; cleanup &rarr; cleanup_resources &rarr; cleanup_connection_file', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 302, 'parent': 1881, 'tfidf_word': 'EP: 302, Name: restart_kernel &rarr; shutdown_kernel &rarr; cleanup_resources &rarr; cleanup_connection_file', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 373, 'parent': 1881, 'tfidf_word': 'EP: 373, Name: start_new_async_kernel &rarr; shutdown_kernel &rarr; cleanup_resources &rarr; cleanup_connection_file', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 948, 'parent': 1539, 'tfidf_word': 'EP: 948, Name: test_complete_reply &rarr; msg &rarr; msg &rarr; msg &rarr; msg_header &rarr; msg_id', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1538, 'parent': 1539, 'tfidf_word': 'reply rename version type kernel interrupt identity feed raw msg ', 'tfidf_method': 'test_feed_identities test_same_version test_execute_request test_no_adapt test_send_raw test_execute_reply test_complete_request interrupt_kernel test_rename_type test_serialize ', 'lda_word': ' msg,header,test,execute,send,', 'lda_method': ' msg,test_execute_request,msg_header,msg_id,test_msg,', 'lsi_word': ' msg,header,test,request,execute,', 'lsi_method': ' msg,msg_id,msg_header,test_complete_request,test_send,', 'spm_method': ' ', 'text_summary': 'Interrupts the kernel by sending it a signal.', 'files_count': 5, 'files': ['test_adapter.py', 'session.py', 'test_session.py', 'manager.py', 'client.py'], 'execution_path_count': 13, 'function_id_to_name_file': {'522': 'test_complete_request(test_adapter.py)', '520': 'msg(test_adapter.py)', '534': 'msg(test_adapter.py)', '476': 'msg(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '524': 'test_execute_reply(test_adapter.py)', '525': 'test_execute_request(test_adapter.py)', '532': 'test_rename_type(test_adapter.py)', '528': 'test_no_adapt(test_adapter.py)', '533': 'test_same_version(test_adapter.py)', '695': 'test_send_raw(test_session.py)', '692': 'test_feed_identities(test_session.py)', '694': 'test_send(test_session.py)', '696': 'test_serialize(test_session.py)', '693': 'test_msg(test_session.py)', '328': 'interrupt_kernel(manager.py)', '166': 'is_complete(client.py)'}}, {'key': 1012, 'parent': 1659, 'tfidf_word': 'EP: 1012, Name: test_inspect_request &rarr; msg &rarr; msg &rarr; msg_header &rarr; msg_id', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1658, 'parent': 1659, 'tfidf_word': 'adapt execute feed identity raw rename reply type version msg ', 'tfidf_method': 'msg test_complete_reply test_complete_request test_execute_request test_no_adapt test_rename_type test_same_version test_feed_identities test_send test_send_raw ', 'lda_word': ' msg,test,header,request,send,', 'lda_method': ' msg,msg_id,msg_header,test_execute_request,test_send,', 'lsi_word': ' msg,header,test,request,complete,', 'lsi_method': ' msg,msg_header,msg_id,test_execute_request,test_rename_type,', 'spm_method': ' ', 'text_summary': 'Empty', 'files_count': 3, 'files': ['test_adapter.py', 'session.py', 'test_session.py'], 'execution_path_count': 9, 'function_id_to_name_file': {'535': 'test_complete_reply(test_adapter.py)', '534': 'msg(test_adapter.py)', '476': 'msg(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '536': 'test_complete_request(test_adapter.py)', '538': 'test_execute_request(test_adapter.py)', '545': 'test_rename_type(test_adapter.py)', '546': 'test_same_version(test_adapter.py)', '544': 'test_no_adapt(test_adapter.py)', '695': 'test_send_raw(test_session.py)', '694': 'test_send(test_session.py)', '692': 'test_feed_identities(test_session.py)'}}, {'key': 1014, 'parent': 1552, 'tfidf_word': 'EP: 1014, Name: test_inspect_request &rarr; msg &rarr; msg &rarr; msg &rarr; msg_header &rarr; msg_id', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1551, 'parent': 1552, 'tfidf_word': 'rename version type kernel interrupt identity feed execute raw msg ', 'tfidf_method': 'test_feed_identities test_same_version test_rename_type test_complete_request test_execute_request test_send_raw test_complete_reply interrupt_kernel test_no_adapt test_serialize ', 'lda_word': ' msg,header,test,complete,request,', 'lda_method': ' msg,msg_id,msg_header,test_rename_type,test_complete_request,', 'lsi_word': ' msg,header,test,complete,request,', 'lsi_method': ' msg,msg_id,msg_header,test_complete_reply,test_rename_type,', 'spm_method': ' ', 'text_summary': 'scrub the front for zmq IDENTITIES.', 'files_count': 5, 'files': ['test_adapter.py', 'session.py', 'test_session.py', 'manager.py', 'client.py'], 'execution_path_count': 13, 'function_id_to_name_file': {'535': 'test_complete_reply(test_adapter.py)', '534': 'msg(test_adapter.py)', '520': 'msg(test_adapter.py)', '476': 'msg(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '536': 'test_complete_request(test_adapter.py)', '538': 'test_execute_request(test_adapter.py)', '545': 'test_rename_type(test_adapter.py)', '544': 'test_no_adapt(test_adapter.py)', '546': 'test_same_version(test_adapter.py)', '695': 'test_send_raw(test_session.py)', '692': 'test_feed_identities(test_session.py)', '694': 'test_send(test_session.py)', '696': 'test_serialize(test_session.py)', '693': 'test_msg(test_session.py)', '328': 'interrupt_kernel(manager.py)', '166': 'is_complete(client.py)'}}, {'key': 956, 'parent': 1650, 'tfidf_word': 'EP: 956, Name: test_object_info_reply &rarr; msg &rarr; msg &rarr; msg_header &rarr; msg_id', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1649, 'parent': 1650, 'tfidf_word': 'adapt rename version object type info identity feed raw msg ', 'tfidf_method': 'test_complete_request test_execute_reply test_execute_request test_no_adapt test_object_info_request test_rename_type test_same_version test_feed_identities test_send test_send_raw ', 'lda_word': ' msg,header,test,send,request,', 'lda_method': ' test_same_version,msg,msg_id,msg_header,test_no_adapt,', 'lsi_word': ' msg,header,test,request,execute,', 'lsi_method': ' msg,msg_id,msg_header,test_object_info_request,test_send_raw,', 'spm_method': ' ', 'text_summary': 'Empty', 'files_count': 3, 'files': ['test_adapter.py', 'session.py', 'test_session.py'], 'execution_path_count': 11, 'function_id_to_name_file': {'531': 'test_object_info_request(test_adapter.py)', '520': 'msg(test_adapter.py)', '476': 'msg(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '521': 'test_complete_reply(test_adapter.py)', '522': 'test_complete_request(test_adapter.py)', '524': 'test_execute_reply(test_adapter.py)', '525': 'test_execute_request(test_adapter.py)', '532': 'test_rename_type(test_adapter.py)', '533': 'test_same_version(test_adapter.py)', '528': 'test_no_adapt(test_adapter.py)', '695': 'test_send_raw(test_session.py)', '694': 'test_send(test_session.py)', '692': 'test_feed_identities(test_session.py)'}}, {'key': 797, 'parent': 1833, 'tfidf_word': 'EP: 797, Name: test_feed_identities &rarr; msg &rarr; msg_header &rarr; msg_id', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1832, 'parent': 1833, 'tfidf_word': 'header id test send serialize msg ', 'tfidf_method': 'msg msg_header msg_id test_msg test_send test_serialize ', 'lda_word': ' msg,header,test,serialize,send,', 'lda_method': ' msg_header,msg,msg_id,test_serialize,test_msg,', 'lsi_word': ' msg,test,header,send,serialize,', 'lsi_method': ' msg_header,msg,msg_id,test_msg,test_serialize,', 'spm_method': ' ', 'text_summary': 'Empty', 'files_count': 2, 'files': ['test_session.py', 'session.py'], 'execution_path_count': 3, 'function_id_to_name_file': {'694': 'test_send(test_session.py)', '476': 'msg(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '693': 'test_msg(test_session.py)', '696': 'test_serialize(test_session.py)'}}, {'key': 957, 'parent': 1635, 'tfidf_word': 'EP: 957, Name: test_object_info_reply &rarr; msg &rarr; msg &rarr; msg &rarr; extract_header', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1634, 'parent': 1635, 'tfidf_word': 'msg rename adapt object type info identity feed raw version ', 'tfidf_method': 'test_complete_request test_execute_reply test_execute_request test_no_adapt test_object_info_request test_rename_type test_same_version test_feed_identities test_send test_send_raw ', 'lda_word': ' msg,header,test,extract,send,', 'lda_method': ' msg,extract_header,test_complete_reply,test_complete_request,test_execute_reply,', 'lsi_word': ' msg,header,test,extract,request,', 'lsi_method': ' msg,extract_header,test_object_info_request,test_no_adapt,test_same_version,', 'spm_method': ' ', 'text_summary': '', 'files_count': 3, 'files': ['test_adapter.py', 'session.py', 'test_session.py'], 'execution_path_count': 11, 'function_id_to_name_file': {'531': 'test_object_info_request(test_adapter.py)', '520': 'msg(test_adapter.py)', '534': 'msg(test_adapter.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '521': 'test_complete_reply(test_adapter.py)', '522': 'test_complete_request(test_adapter.py)', '524': 'test_execute_reply(test_adapter.py)', '525': 'test_execute_request(test_adapter.py)', '532': 'test_rename_type(test_adapter.py)', '533': 'test_same_version(test_adapter.py)', '528': 'test_no_adapt(test_adapter.py)', '695': 'test_send_raw(test_session.py)', '694': 'test_send(test_session.py)', '692': 'test_feed_identities(test_session.py)'}}, {'key': 987, 'parent': 1814, 'tfidf_word': 'EP: 987, Name: test_no_adapt &rarr; msg &rarr; msg &rarr; extract_header', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1813, 'parent': 1814, 'tfidf_word': 'extract header test send feed identity raw serialize version msg ', 'tfidf_method': 'extract_header msg msg test_same_version test_feed_identities test_msg test_send test_send_raw test_serialize ', 'lda_word': ' msg,test,header,extract,send,', 'lda_method': ' msg,extract_header,test_same_version,test_msg,test_feed_identities,', 'lsi_word': ' msg,extract,header,test,send,', 'lsi_method': ' msg,extract_header,test_same_version,test_serialize,test_msg,', 'spm_method': ' ', 'text_summary': '', 'files_count': 3, 'files': ['test_adapter.py', 'session.py', 'test_session.py'], 'execution_path_count': 6, 'function_id_to_name_file': {'546': 'test_same_version(test_adapter.py)', '534': 'msg(test_adapter.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '695': 'test_send_raw(test_session.py)', '692': 'test_feed_identities(test_session.py)', '694': 'test_send(test_session.py)', '693': 'test_msg(test_session.py)', '696': 'test_serialize(test_session.py)'}}, {'key': 1016, 'parent': 1816, 'tfidf_word': 'EP: 1016, Name: test_inspect_request_token &rarr; msg &rarr; msg &rarr; extract_header', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1021, 'parent': 1816, 'tfidf_word': 'EP: 1021, Name: test_inspect_reply &rarr; msg &rarr; msg &rarr; extract_header', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1023, 'parent': 1623, 'tfidf_word': 'EP: 1023, Name: test_inspect_reply &rarr; msg &rarr; msg &rarr; msg &rarr; extract_header', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1622, 'parent': 1623, 'tfidf_word': 'token reply adapt raw type identity feed execute rename version ', 'tfidf_method': 'test_complete_request test_execute_request test_inspect_request test_inspect_request_token test_no_adapt test_rename_type test_same_version test_feed_identities test_send test_send_raw ', 'lda_word': ' msg,extract,test,header,request,', 'lda_method': ' msg,extract_header,test_no_adapt,test_rename_type,test_inspect_request,', 'lsi_word': ' msg,extract,test,header,request,', 'lsi_method': ' msg,extract_header,test_inspect_request_token,test_no_adapt,test_feed_identities,', 'spm_method': ' ', 'text_summary': '', 'files_count': 3, 'files': ['test_adapter.py', 'session.py', 'test_session.py'], 'execution_path_count': 11, 'function_id_to_name_file': {'542': 'test_inspect_request_token(test_adapter.py)', '534': 'msg(test_adapter.py)', '520': 'msg(test_adapter.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '541': 'test_inspect_request(test_adapter.py)', '535': 'test_complete_reply(test_adapter.py)', '536': 'test_complete_request(test_adapter.py)', '538': 'test_execute_request(test_adapter.py)', '545': 'test_rename_type(test_adapter.py)', '546': 'test_same_version(test_adapter.py)', '544': 'test_no_adapt(test_adapter.py)', '695': 'test_send_raw(test_session.py)', '694': 'test_send(test_session.py)', '692': 'test_feed_identities(test_session.py)'}}, {'key': 925, 'parent': 1807, 'tfidf_word': 'EP: 925, Name: test_rename_type &rarr; msg &rarr; msg &rarr; extract_header', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1806, 'parent': 1807, 'tfidf_word': 'header test send adapt feed identity raw serialize version msg ', 'tfidf_method': 'extract_header msg msg test_no_adapt test_same_version test_feed_identities test_msg test_send test_send_raw test_serialize ', 'lda_word': ' msg,test,extract,header,send,', 'lda_method': ' msg,extract_header,test_same_version,test_msg,test_send_raw,', 'lsi_word': ' msg,header,extract,test,send,', 'lsi_method': ' msg,extract_header,test_msg,test_feed_identities,test_serialize,', 'spm_method': ' ', 'text_summary': '', 'files_count': 3, 'files': ['test_adapter.py', 'session.py', 'test_session.py'], 'execution_path_count': 7, 'function_id_to_name_file': {'528': 'test_no_adapt(test_adapter.py)', '520': 'msg(test_adapter.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '533': 'test_same_version(test_adapter.py)', '695': 'test_send_raw(test_session.py)', '692': 'test_feed_identities(test_session.py)', '694': 'test_send(test_session.py)', '693': 'test_msg(test_session.py)', '696': 'test_serialize(test_session.py)'}}, {'key': 360, 'parent': 1847, 'tfidf_word': 'EP: 360, Name: interrupt_kernel &rarr; msg &rarr; msg &rarr; extract_header', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 492, 'parent': 1847, 'tfidf_word': 'EP: 492, Name: is_complete &rarr; msg &rarr; msg &rarr; extract_header', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 965, 'parent': 1810, 'tfidf_word': 'EP: 965, Name: test_kernel_info_reply &rarr; msg &rarr; msg &rarr; extract_header', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1809, 'parent': 1810, 'tfidf_word': 'extract header info object test reply msg found request ', 'tfidf_method': 'extract_header msg msg test_object_info_reply test_object_info_reply_not_found test_object_info_request ', 'lda_word': ' msg,test,reply,info,extract,', 'lda_method': ' msg,extract_header,test_object_info_request,test_object_info_reply_not_found,test_object_info_reply,', 'lsi_word': ' msg,object,test,extract,header,', 'lsi_method': ' msg,extract_header,test_object_info_request,test_object_info_reply_not_found,test_object_info_reply,', 'spm_method': ' ', 'text_summary': '', 'files_count': 2, 'files': ['test_adapter.py', 'session.py'], 'execution_path_count': 3, 'function_id_to_name_file': {'530': 'test_object_info_reply_not_found(test_adapter.py)', '520': 'msg(test_adapter.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '531': 'test_object_info_request(test_adapter.py)', '529': 'test_object_info_reply(test_adapter.py)'}}, {'key': 239, 'parent': 1820, 'tfidf_word': 'EP: 239, Name: start &rarr; start &rarr; execute_interactive &rarr; is_alive', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 241, 'parent': 1820, 'tfidf_word': 'EP: 241, Name: start &rarr; start &rarr; execute_interactive &rarr; is_alive', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 251, 'parent': 1824, 'tfidf_word': 'EP: 251, Name: start &rarr; start &rarr; execute_interactive &rarr; is_alive', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 252, 'parent': 1824, 'tfidf_word': 'EP: 252, Name: start &rarr; start &rarr; execute_interactive &rarr; _output_hook_default', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 725, 'parent': 1920, 'tfidf_word': 'EP: 725, Name: setUp &rarr; __init__ &rarr; _check_packers &rarr; utcnow', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 726, 'parent': 1920, 'tfidf_word': 'EP: 726, Name: setUp &rarr; __init__ &rarr; _check_packers &rarr; squash_dates', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 784, 'parent': 1926, 'tfidf_word': 'EP: 784, Name: test_args &rarr; __init__ &rarr; _check_packers &rarr; utcnow', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 785, 'parent': 1926, 'tfidf_word': 'EP: 785, Name: test_args &rarr; __init__ &rarr; _check_packers &rarr; squash_dates', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 138, 'parent': 1453, 'tfidf_word': 'EP: 138, Name: _requires_ips &rarr; ips_loaded &rarr; _load_ips &rarr; _load_ips_ip &rarr; _populate_from_list &rarr; local_ips', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 139, 'parent': 1453, 'tfidf_word': 'EP: 139, Name: _requires_ips &rarr; ips_loaded &rarr; _load_ips &rarr; _load_ips_ip &rarr; _populate_from_list &rarr; _uniq_stable', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1113, 'parent': 1739, 'tfidf_word': 'EP: 1113, Name: test_load_ips &rarr; _load_ips &rarr; _load_ips_ip &rarr; _populate_from_list &rarr; local_ips', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1114, 'parent': 1739, 'tfidf_word': 'EP: 1114, Name: test_load_ips &rarr; _load_ips &rarr; _load_ips_ip &rarr; _populate_from_list &rarr; _uniq_stable', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1129, 'parent': 1950, 'tfidf_word': 'EP: 1129, Name: test_load_ips &rarr; _load_ips &rarr; _load_ips_netifaces &rarr; local_ips', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1130, 'parent': 1950, 'tfidf_word': 'EP: 1130, Name: test_load_ips &rarr; _load_ips &rarr; _load_ips_netifaces &rarr; public_ips', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 850, 'parent': 2070, 'tfidf_word': 'EP: 850, Name: test_datetimes_pickle &rarr; __init__ &rarr; _new_auth', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2069, 'parent': 2070, 'tfidf_word': 'history cull id pack packer roundtrip session unpack unpacker zero ', 'tfidf_method': '__init__ _new_auth test_bad_pack test_bad_packer test_bad_roundtrip test_bad_unpack test_bad_unpacker test_cull_digest_history test_session_id test_zero_digest_history ', 'lda_word': ' auth,test,init,new,bad,', 'lda_method': ' init,new_auth,test_bad_packer,test_session_id,test_bad_roundtrip,', 'lsi_word': ' auth,new,init,test,bad,', 'lsi_method': ' new_auth,init,test_bad_packer,test_cull_digest_history,test_bad_pack,', 'spm_method': ' ', 'text_summary': '', 'files_count': 2, 'files': ['test_session.py', 'session.py'], 'execution_path_count': 8, 'function_id_to_name_file': {'683': 'test_bad_roundtrip(test_session.py)', '457': '__init__(session.py)', '465': '_new_auth(session.py)', '685': 'test_bad_unpacker(test_session.py)', '682': 'test_bad_packer(test_session.py)', '681': 'test_bad_pack(test_session.py)', '684': 'test_bad_unpack(test_session.py)', '687': 'test_cull_digest_history(test_session.py)', '697': 'test_session_id(test_session.py)', '700': 'test_zero_digest_history(test_session.py)'}}, {'key': 1058, 'parent': 1436, 'tfidf_word': 'EP: 1058, Name: test_load_connection_file_session &rarr; initialize &rarr; init_connection_file &rarr; load_connection_file &rarr; load_connection_info &rarr; _ip_default &rarr; localhost', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1077, 'parent': 1436, 'tfidf_word': 'EP: 1077, Name: test_load_connection_file_session_with_kn &rarr; initialize &rarr; init_connection_file &rarr; load_connection_file &rarr; load_connection_info &rarr; _ip_default &rarr; localhost', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1059, 'parent': 1563, 'tfidf_word': 'EP: 1059, Name: test_load_connection_file_session &rarr; initialize &rarr; init_connection_file &rarr; load_connection_file &rarr; load_connection_info &rarr; _record_random_port_names', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1078, 'parent': 1563, 'tfidf_word': 'EP: 1078, Name: test_load_connection_file_session_with_kn &rarr; initialize &rarr; init_connection_file &rarr; load_connection_file &rarr; load_connection_info &rarr; _record_random_port_names', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 166, 'parent': 1866, 'tfidf_word': 'EP: 166, Name: initialize &rarr; initialize &rarr; init_ssh &rarr; write_connection_file &rarr; _record_random_port_names', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 167, 'parent': 1866, 'tfidf_word': 'EP: 167, Name: initialize &rarr; initialize &rarr; init_ssh &rarr; load_connection_file &rarr; write_connection_file &rarr; _record_random_port_names', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 163, 'parent': 1767, 'tfidf_word': 'EP: 163, Name: initialize &rarr; initialize &rarr; init_connection_file &rarr; load_connection_file &rarr; load_connection_info &rarr; _ip_default &rarr; localhost', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 164, 'parent': 1767, 'tfidf_word': 'EP: 164, Name: initialize &rarr; initialize &rarr; init_connection_file &rarr; load_connection_file &rarr; load_connection_info &rarr; _record_random_port_names', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 171, 'parent': 1867, 'tfidf_word': 'EP: 171, Name: initialize &rarr; initialize &rarr; init_kernel_manager &rarr; NoSuchKernel', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 172, 'parent': 1867, 'tfidf_word': 'EP: 172, Name: initialize &rarr; initialize &rarr; init_kernel_manager &rarr; localhost', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1057, 'parent': 1462, 'tfidf_word': 'EP: 1057, Name: test_load_connection_file_session &rarr; initialize &rarr; init_connection_file &rarr; load_connection_file &rarr; write_connection_file &rarr; _record_random_port_names', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1076, 'parent': 1462, 'tfidf_word': 'EP: 1076, Name: test_load_connection_file_session_with_kn &rarr; initialize &rarr; init_connection_file &rarr; load_connection_file &rarr; write_connection_file &rarr; _record_random_port_names', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1064, 'parent': 1944, 'tfidf_word': 'EP: 1064, Name: test_load_connection_file_session &rarr; load_connection_file &rarr; write_connection_file &rarr; _record_random_port_names', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1083, 'parent': 1944, 'tfidf_word': 'EP: 1083, Name: test_load_connection_file_session_with_kn &rarr; load_connection_file &rarr; write_connection_file &rarr; _record_random_port_names', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1108, 'parent': 2187, 'tfidf_word': 'EP: 1108, Name: test_mixin_record_random_ports &rarr; write_connection_file &rarr; _record_random_port_names', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1111, 'parent': 2187, 'tfidf_word': 'EP: 1111, Name: test_mixin_cleanup_random_ports &rarr; write_connection_file &rarr; _record_random_port_names', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1247, 'parent': 1960, 'tfidf_word': 'EP: 1247, Name: test_install_kernel_spec_prefix &rarr; find_kernel_specs &rarr; _list_kernels_in &rarr; _is_valid_kernel_name', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1248, 'parent': 1960, 'tfidf_word': 'EP: 1248, Name: test_install_kernel_spec_prefix &rarr; find_kernel_specs &rarr; _list_kernels_in &rarr; _is_kernel_dir', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1958, 'parent': 2333, 'tfidf_word': 'find list priority spec specs test dir name valid kernel ', 'tfidf_method': '_list_kernels_in find_kernel_specs test_kernel_spec_priority _is_kernel_dir _is_valid_kernel_name ', 'lda_word': ' kernel,test,priority,spec,specs,', 'lda_method': ' test_kernel_spec_priority,find_kernel_specs,list_kernels_in,is_valid_kernel_name,is_kernel_dir,', 'lsi_word': ' kernel,spec,specs,test,list,', 'lsi_method': ' find_kernel_specs,list_kernels_in,test_kernel_spec_priority,is_valid_kernel_name,is_kernel_dir,', 'spm_method': ' ', 'text_summary': 'Return a mapping of kernel names to resource directories from dir.', 'files_count': 2, 'files': ['test_kernelspec.py', 'kernelspec.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'626': 'test_kernel_spec_priority(test_kernelspec.py)', '272': 'find_kernel_specs(kernelspec.py)', '258': '_list_kernels_in(kernelspec.py)', '257': '_is_valid_kernel_name(kernelspec.py)', '256': '_is_kernel_dir(kernelspec.py)'}}, {'key': 1959, 'parent': 2333, 'tfidf_word': 'find install list spec specs test dir name valid kernel ', 'tfidf_method': '_list_kernels_in find_kernel_specs test_install_kernel_spec _is_kernel_dir _is_valid_kernel_name ', 'lda_word': ' kernel,valid,test,list,specs,', 'lda_method': ' find_kernel_specs,test_install_kernel_spec,list_kernels_in,is_kernel_dir,is_valid_kernel_name,', 'lsi_word': ' kernel,install,specs,spec,test,', 'lsi_method': ' find_kernel_specs,list_kernels_in,test_install_kernel_spec,is_kernel_dir,is_valid_kernel_name,', 'spm_method': ' ', 'text_summary': 'Return a mapping of kernel names to resource directories from dir.', 'files_count': 2, 'files': ['test_kernelspec.py', 'kernelspec.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'624': 'test_install_kernel_spec(test_kernelspec.py)', '272': 'find_kernel_specs(kernelspec.py)', '258': '_list_kernels_in(kernelspec.py)', '257': '_is_valid_kernel_name(kernelspec.py)', '256': '_is_kernel_dir(kernelspec.py)'}}, {'key': 119, 'parent': 1864, 'tfidf_word': 'EP: 119, Name: find_kernel_specs &rarr; find_kernel_specs &rarr; _list_kernels_in &rarr; _is_valid_kernel_name', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 120, 'parent': 1864, 'tfidf_word': 'EP: 120, Name: find_kernel_specs &rarr; find_kernel_specs &rarr; _list_kernels_in &rarr; _is_kernel_dir', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1220, 'parent': 1955, 'tfidf_word': 'EP: 1220, Name: test_find_kernel_specs &rarr; find_kernel_specs &rarr; _list_kernels_in &rarr; _is_valid_kernel_name', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1221, 'parent': 1955, 'tfidf_word': 'EP: 1221, Name: test_find_kernel_specs &rarr; find_kernel_specs &rarr; _list_kernels_in &rarr; _is_kernel_dir', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 757, 'parent': 1725, 'tfidf_word': 'EP: 757, Name: test_send &rarr; deserialize &rarr; extract_dates &rarr; parse_date &rarr; _ensure_tzinfo', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1674, 'parent': 1725, 'tfidf_word': 'deserialize ensure extract parse tzinfo serialize test unserialize date ', 'tfidf_method': '_ensure_tzinfo extract_dates parse_date deserialize unserialize test_serialize ', 'lda_word': ' parse,date,tzinfo,deserialize,ensure,', 'lda_method': ' ensure_tzinfo,deserialize,extract_dates,parse_date,unserialize,', 'lsi_word': ' date,deserialize,ensure,tzinfo,parse,', 'lsi_method': ' deserialize,ensure_tzinfo,extract_dates,parse_date,unserialize,', 'spm_method': ' ', 'text_summary': 'Unserialize a msg_list to a nested message dict.', 'files_count': 3, 'files': ['session.py', 'jsonutil.py', 'test_session.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'484': 'unserialize(session.py)', '474': 'deserialize(session.py)', '242': 'extract_dates(jsonutil.py)', '243': 'parse_date(jsonutil.py)', '240': '_ensure_tzinfo(jsonutil.py)', '696': 'test_serialize(test_session.py)'}}, {'key': 852, 'parent': 1734, 'tfidf_word': 'EP: 852, Name: test_datetimes_msgpack &rarr; _datetime_test &rarr; extract_dates &rarr; parse_date &rarr; _ensure_tzinfo', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1733, 'parent': 1734, 'tfidf_word': 'datetime datetimes ensure extract parse tzinfo pickle date test ', 'tfidf_method': '_ensure_tzinfo extract_dates parse_date _datetime_test test_datetimes test_datetimes_pickle ', 'lda_word': ' date,test,tzinfo,ensure,datetime,', 'lda_method': ' ensure_tzinfo,extract_dates,datetime_test,parse_date,test_datetimes_pickle,', 'lsi_word': ' date,test,parse,tzinfo,extract,', 'lsi_method': ' datetime_test,ensure_tzinfo,extract_dates,parse_date,test_datetimes_pickle,', 'spm_method': ' ', 'text_summary': '', 'files_count': 2, 'files': ['test_session.py', 'jsonutil.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'688': 'test_datetimes(test_session.py)', '679': '_datetime_test(test_session.py)', '242': 'extract_dates(jsonutil.py)', '243': 'parse_date(jsonutil.py)', '240': '_ensure_tzinfo(jsonutil.py)', '690': 'test_datetimes_pickle(test_session.py)'}}, {'key': 1356, 'parent': 1964, 'tfidf_word': 'EP: 1356, Name: test_date_default &rarr; extract_dates &rarr; parse_date &rarr; _ensure_tzinfo', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1963, 'parent': 1964, 'tfidf_word': 'ensure parse test tzinfo naive extract date ', 'tfidf_method': '_ensure_tzinfo extract_dates parse_date test_extract_date_from_naive test_extract_dates ', 'lda_word': ' date,extract,tzinfo,test,parse,', 'lda_method': ' parse_date,ensure_tzinfo,extract_dates,test_extract_date_from_naive,test_extract_dates,', 'lsi_word': ' date,extract,ensure,test,tzinfo,', 'lsi_method': ' parse_date,extract_dates,ensure_tzinfo,test_extract_dates,test_extract_date_from_naive,', 'spm_method': ' ', 'text_summary': '', 'files_count': 2, 'files': ['test_jsonutil.py', 'jsonutil.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'576': 'test_extract_date_from_naive(test_jsonutil.py)', '242': 'extract_dates(jsonutil.py)', '243': 'parse_date(jsonutil.py)', '240': '_ensure_tzinfo(jsonutil.py)', '577': 'test_extract_dates(test_jsonutil.py)'}}, {'key': 345, 'parent': 2119, 'tfidf_word': 'EP: 345, Name: restart_kernel &rarr; start_kernel &rarr; _launch_kernel', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 419, 'parent': 2119, 'tfidf_word': 'EP: 419, Name: start_new_async_kernel &rarr; start_kernel &rarr; _launch_kernel', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1481, 'parent': 2395, 'tfidf_word': 'make post url async new restart connect socket kernel start ', 'tfidf_method': '_create_connected_socket _make_url start_kernel _connect_control_socket post_start_kernel start_new_async_kernel restart_kernel ', 'lda_word': ' socket,start,connect,kernel,control,', 'lda_method': ' start_kernel,connect_control_socket,post_start_kernel,create_connected_socket,make_url,', 'lsi_word': ' kernel,start,socket,connect,control,', 'lsi_method': ' connect_control_socket,create_connected_socket,post_start_kernel,make_url,start_kernel,', 'spm_method': ' ', 'text_summary': '', 'files_count': 2, 'files': ['manager.py', 'connect.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'330': 'restart_kernel(manager.py)', '333': 'start_kernel(manager.py)', '359': 'post_start_kernel(manager.py)', '338': '_connect_control_socket(manager.py)', '192': '_create_connected_socket(connect.py)', '196': '_make_url(connect.py)', '322': 'start_new_async_kernel(manager.py)'}}, {'key': 1884, 'parent': 2395, 'tfidf_word': 'post restarter async new restart kernel start ', 'tfidf_method': 'start_kernel post_start_kernel start_restarter start_new_async_kernel restart_kernel ', 'lda_word': ' start,kernel,restarter,post,restart,', 'lda_method': ' start_kernel,post_start_kernel,start_restarter,start_new_async_kernel,restart_kernel,', 'lsi_word': ' start,kernel,post,restarter,async,', 'lsi_method': ' post_start_kernel,start_kernel,start_restarter,start_new_async_kernel,restart_kernel,', 'spm_method': ' ', 'text_summary': 'Empty', 'files_count': 1, 'files': ['manager.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'330': 'restart_kernel(manager.py)', '333': 'start_kernel(manager.py)', '359': 'post_start_kernel(manager.py)', '367': 'start_restarter(manager.py)', '322': 'start_new_async_kernel(manager.py)'}}, {'key': 2264, 'parent': 2679, 'tfidf_word': 'async connection file new path real restart test start kernel ', 'tfidf_method': 'KernelSpec format_kernel_cmd kernel_spec start_kernel pre_start_kernel start_new_async_kernel restart_kernel test_connection_file_real_path ', 'lda_word': ' kernel,spec,format,cmd,test,', 'lda_method': ' kernel_spec,format_kernel_cmd,kernelspec,pre_start_kernel,start_kernel,', 'lsi_word': ' kernel,spec,start,format,cmd,', 'lsi_method': ' kernel_spec,kernelspec,format_kernel_cmd,start_kernel,pre_start_kernel,', 'spm_method': ' ', 'text_summary': 'Prepares a kernel for startup in a separate process. {connection_file})   Prepares a kernel for startup in a separate process.', 'files_count': 3, 'files': ['test_manager.py', 'manager.py', 'kernelspec.py'], 'execution_path_count': 3, 'function_id_to_name_file': {'635': 'test_connection_file_real_path(test_manager.py)', '353': 'format_kernel_cmd(manager.py)', '358': 'kernel_spec(manager.py)', '253': 'KernelSpec(kernelspec.py)', '330': 'restart_kernel(manager.py)', '333': 'start_kernel(manager.py)', '360': 'pre_start_kernel(manager.py)', '322': 'start_new_async_kernel(manager.py)'}}, {'key': 2370, 'parent': 2679, 'tfidf_word': 'async connection file new path real restart test kernel start ', 'tfidf_method': 'format_kernel_cmd from_ns start_kernel pre_start_kernel start_new_async_kernel restart_kernel test_connection_file_real_path ', 'lda_word': ' kernel,start,format,cmd,test,', 'lda_method': ' format_kernel_cmd,from_ns,test_connection_file_real_path,start_kernel,pre_start_kernel,', 'lsi_word': ' kernel,start,format,cmd,pre,', 'lsi_method': ' format_kernel_cmd,from_ns,pre_start_kernel,start_kernel,start_new_async_kernel,', 'spm_method': ' ', 'text_summary': 'Prepares a kernel for startup in a separate process. Restarts a kernel with the arguments that were used to launch it.', 'files_count': 2, 'files': ['test_manager.py', 'manager.py'], 'execution_path_count': 3, 'function_id_to_name_file': {'635': 'test_connection_file_real_path(test_manager.py)', '353': 'format_kernel_cmd(manager.py)', '369': 'from_ns(manager.py)', '330': 'restart_kernel(manager.py)', '333': 'start_kernel(manager.py)', '360': 'pre_start_kernel(manager.py)', '322': 'start_new_async_kernel(manager.py)'}}, {'key': 2368, 'parent': 2696, 'tfidf_word': 'restart async new file connection real test path start kernel ', 'tfidf_method': '_record_random_port_names write_connection_file start_kernel pre_start_kernel format_kernel_cmd start_new_async_kernel restart_kernel test_connection_file_real_path ', 'lda_word': ' kernel,start,port,record,pre,', 'lda_method': ' write_connection_file,pre_start_kernel,record_random_port_names,start_new_async_kernel,format_kernel_cmd,', 'lsi_word': ' kernel,start,connection,file,record,', 'lsi_method': ' record_random_port_names,write_connection_file,start_kernel,pre_start_kernel,format_kernel_cmd,', 'spm_method': ' ', 'text_summary': 'Write connection info to JSON dict in self.connection_file. Restarts a kernel with the arguments that were used to launch it. {connection_file}) Write connection info to JSON dict in self.connection_file.', 'files_count': 3, 'files': ['manager.py', 'connect.py', 'test_manager.py'], 'execution_path_count': 5, 'function_id_to_name_file': {'330': 'restart_kernel(manager.py)', '333': 'start_kernel(manager.py)', '360': 'pre_start_kernel(manager.py)', '212': 'write_connection_file(connect.py)', '197': '_record_random_port_names(connect.py)', '322': 'start_new_async_kernel(manager.py)', '635': 'test_connection_file_real_path(test_manager.py)', '353': 'format_kernel_cmd(manager.py)'}}, {'key': 2401, 'parent': 2696, 'tfidf_word': 'ip local async new restart env get substitution kernel start ', 'tfidf_method': 'start_kernel pre_start_kernel start_new_async_kernel restart_kernel is_local_ip local_ips _get_env_substitutions ', 'lda_word': ' kernel,start,pre,get,env,', 'lda_method': ' start_new_async_kernel,start_kernel,pre_start_kernel,local_ips,get_env_substitutions,', 'lsi_word': ' kernel,start,pre,ip,local,', 'lsi_method': ' start_kernel,pre_start_kernel,start_new_async_kernel,restart_kernel,get_env_substitutions,', 'spm_method': ' ', 'text_summary': 'Prepares a kernel for startup in a separate process. return the IP addresses that point to this machine. does `ip` point to this machine?.', 'files_count': 2, 'files': ['manager.py', 'localinterfaces.py'], 'execution_path_count': 6, 'function_id_to_name_file': {'330': 'restart_kernel(manager.py)', '333': 'start_kernel(manager.py)', '360': 'pre_start_kernel(manager.py)', '341': '_get_env_substitutions(manager.py)', '314': 'local_ips(localinterfaces.py)', '312': 'is_local_ip(localinterfaces.py)', '322': 'start_new_async_kernel(manager.py)'}}, {'key': 2198, 'parent': 2403, 'tfidf_word': 'dir directory get specs test find kernel spec ', 'tfidf_method': '_is_kernel_dir _find_spec_directory test_get_kernel_spec find_kernel_specs ', 'lda_word': ' find,spec,kernel,dir,directory,', 'lda_method': ' find_spec_directory,is_kernel_dir,test_get_kernel_spec,find_kernel_specs,', 'lsi_word': ' kernel,spec,find,dir,directory,', 'lsi_method': ' find_spec_directory,is_kernel_dir,test_get_kernel_spec,find_kernel_specs,', 'spm_method': ' ', 'text_summary': '', 'files_count': 2, 'files': ['test_kernelspec.py', 'kernelspec.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'623': 'test_get_kernel_spec(test_kernelspec.py)', '267': '_find_spec_directory(kernelspec.py)', '256': '_is_kernel_dir(kernelspec.py)', '632': 'find_kernel_specs(test_kernelspec.py)'}}, {'key': 2268, 'parent': 2403, 'tfidf_word': 'directory test find get subclass set up kernel spec specs ', 'tfidf_method': '_is_kernel_dir _find_spec_directory get_kernel_spec get_all_specs test_subclass setUp test_find_all_specs test_get_kernel_spec get_kernel_spec ', 'lda_word': ' specs,find,get,spec,kernel,', 'lda_method': ' find_spec_directory,is_kernel_dir,get_kernel_spec,test_get_kernel_spec,get_all_specs,', 'lsi_word': ' spec,kernel,get,find,dir,', 'lsi_method': ' get_kernel_spec,is_kernel_dir,find_spec_directory,get_all_specs,test_subclass,', 'spm_method': ' ', 'text_summary': 'Is ``path`` a kernel directory?.', 'files_count': 3, 'files': ['test_kernelspec.py', 'kernelspec.py', 'test_client.py'], 'execution_path_count': 6, 'function_id_to_name_file': {'621': 'test_find_all_specs(test_kernelspec.py)', '273': 'get_all_specs(kernelspec.py)', '274': 'get_kernel_spec(kernelspec.py)', '267': '_find_spec_directory(kernelspec.py)', '256': '_is_kernel_dir(kernelspec.py)', '629': 'test_subclass(test_kernelspec.py)', '633': 'get_kernel_spec(test_kernelspec.py)', '549': 'setUp(test_client.py)', '623': 'test_get_kernel_spec(test_kernelspec.py)'}}, {'key': 2694, 'parent': 2760, 'tfidf_word': 'find subclass kernel spec specs init no such valid get ', 'tfidf_method': 'get_all_specs get_kernel_spec test_find_all_specs test_subclass _get_kernel_spec_by_name NoSuchKernel _is_valid_kernel_name __init__ ', 'lda_word': ' get,specs,test,spec,kernel,', 'lda_method': ' get_all_specs,get_kernel_spec,test_find_all_specs,test_subclass,get_kernel_spec_by_name,', 'lsi_word': ' get,kernel,specs,spec,test,', 'lsi_method': ' get_all_specs,get_kernel_spec,test_find_all_specs,test_subclass,get_kernel_spec_by_name,', 'spm_method': ' ', 'text_summary': 'Test get_all_specs in subclasses that override find_kernel_specs. Check that a kernel name is valid.', 'files_count': 2, 'files': ['test_kernelspec.py', 'kernelspec.py'], 'execution_path_count': 10, 'function_id_to_name_file': {'621': 'test_find_all_specs(test_kernelspec.py)', '273': 'get_all_specs(kernelspec.py)', '269': '_get_kernel_spec_by_name(kernelspec.py)', '629': 'test_subclass(test_kernelspec.py)', '274': 'get_kernel_spec(kernelspec.py)', '255': 'NoSuchKernel(kernelspec.py)', '278': '__init__(kernelspec.py)', '257': '_is_valid_kernel_name(kernelspec.py)'}}, {'key': 2746, 'parent': 2760, 'tfidf_word': 'no such valid subclass get kernel spec dir directory find ', 'tfidf_method': 'NoSuchKernel _is_valid_kernel_name get_kernel_spec _get_kernel_spec_by_name __init__ test_get_kernel_spec test_subclass get_kernel_spec _is_kernel_dir _find_spec_directory ', 'lda_word': ' kernel,spec,get,name,test,', 'lda_method': ' get_kernel_spec,setup,nosuchkernel,init,is_valid_kernel_name,', 'lsi_word': ' kernel,spec,get,name,set,', 'lsi_method': ' get_kernel_spec,setup,init,nosuchkernel,is_valid_kernel_name,', 'spm_method': ' ', 'text_summary': 'Find the resource directory of a named kernel spec. Check that a kernel name is valid. Is ``path`` a kernel directory?.', 'files_count': 3, 'files': ['test_client.py', 'kernelspec.py', 'test_kernelspec.py'], 'execution_path_count': 21, 'function_id_to_name_file': {'549': 'setUp(test_client.py)', '260': 'get_kernel_spec(kernelspec.py)', '274': 'get_kernel_spec(kernelspec.py)', '267': '_find_spec_directory(kernelspec.py)', '256': '_is_kernel_dir(kernelspec.py)', '255': 'NoSuchKernel(kernelspec.py)', '278': '__init__(kernelspec.py)', '269': '_get_kernel_spec_by_name(kernelspec.py)', '257': '_is_valid_kernel_name(kernelspec.py)', '633': 'get_kernel_spec(test_kernelspec.py)', '629': 'test_subclass(test_kernelspec.py)', '623': 'test_get_kernel_spec(test_kernelspec.py)'}}, {'key': 2267, 'parent': 2698, 'tfidf_word': 'adapt deserialize utcnow test send recv handle raw serialize unserialize ', 'tfidf_method': 'utcnow deserialize adapt recv test_send unserialize handle test_send_raw test_serialize ', 'lda_word': ' adapt,deserialize,utcnow,test,send,', 'lda_method': ' deserialize,utcnow,adapt,test_send,recv,', 'lsi_word': ' adapt,utcnow,deserialize,test,send,', 'lsi_method': ' deserialize,utcnow,adapt,recv,test_send,', 'spm_method': ' ', 'text_summary': '', 'files_count': 4, 'files': ['test_session.py', 'session.py', 'adapter.py', 'forward.py'], 'execution_path_count': 6, 'function_id_to_name_file': {'694': 'test_send(test_session.py)', '479': 'recv(session.py)', '474': 'deserialize(session.py)', '50': 'adapt(adapter.py)', '450': 'utcnow(session.py)', '492': 'handle(forward.py)', '695': 'test_send_raw(test_session.py)', '484': 'unserialize(session.py)', '696': 'test_serialize(test_session.py)'}}, {'key': 2357, 'parent': 2698, 'tfidf_word': 'adapt utcnow test send default handle interrupt kernel tracking version ', 'tfidf_method': 'utcnow adapt send interrupt_kernel handle test_default_version test_send test_tracking ', 'lda_word': ' adapt,utcnow,interrupt,default,kernel,', 'lda_method': ' utcnow,send,adapt,test_send,test_tracking,', 'lsi_word': ' send,utcnow,adapt,test,tracking,', 'lsi_method': ' utcnow,adapt,send,interrupt_kernel,test_send,', 'spm_method': ' ', 'text_summary': 'test tracking messages. Pass a message to the ZMQ socket to send.', 'files_count': 6, 'files': ['test_adapter.py', 'adapter.py', 'session.py', 'test_session.py', 'forward.py', 'manager.py'], 'execution_path_count': 5, 'function_id_to_name_file': {'516': 'test_default_version(test_adapter.py)', '50': 'adapt(adapter.py)', '450': 'utcnow(session.py)', '698': 'test_tracking(test_session.py)', '480': 'send(session.py)', '492': 'handle(forward.py)', '328': 'interrupt_kernel(manager.py)', '694': 'test_send(test_session.py)'}}, {'key': 2763, 'parent': 2779, 'tfidf_word': 'load close session connection file write app kn localhost port ', 'tfidf_method': 'test_load_connection_file_session test_load_connection_file_session_with_kn test_write_connection_file close close ports localhost close close close ', 'lda_word': ' file,connection,write,close,test,', 'lda_method': ' test_load_connection_file_session,write_connection_file,close,localhost,test_write_connection_file,', 'lsi_word': ' file,connection,write,test,load,', 'lsi_method': ' write_connection_file,close,test_write_connection_file,test_load_connection_file_session_with_kn,test_load_connection_file_session,', 'spm_method': ' ', 'text_summary': 'Write connection info to JSON dict in self.connection_file. return ip for localhost (almost always 127.0.0.1) test `ipython console --existing` loads a connection file. test `ipython console --existing` loads a connection file.', 'files_count': 5, 'files': ['test_connect.py', 'connect.py', 'channels.py', 'localinterfaces.py', 'threaded.py'], 'execution_path_count': 28, 'function_id_to_name_file': {'559': 'test_app_load_connection_file(test_connect.py)', '191': 'write_connection_file(connect.py)', '109': 'close(channels.py)', '83': 'close(channels.py)', '315': 'localhost(localinterfaces.py)', '730': 'close(threaded.py)', '132': 'close(channels.py)', '211': 'ports(connect.py)', '718': 'close(threaded.py)', '565': 'test_load_connection_file_session_with_kn(test_connect.py)', '570': 'test_write_connection_file(test_connect.py)', '564': 'test_load_connection_file_session(test_connect.py)'}}, {'key': 2778, 'parent': 2779, 'tfidf_word': 'app digest native flush permission io tunnel cleanup code restarter ', 'tfidf_method': 'test_find_connection_file_local test_find_connection_file_relative test_mixin_record_random_ports test_secure_write update_msg_type check_user_only_permissions fetch_win32_permissions finish_shutdown test_kernelapp_lifecycle test_find_all_specs ', 'lda_word': ' test,session,start,port,app,', 'lda_method': ' session,run_lifecycle,jupyterconsoleapp,run_signaltest_lifecycle,raw_tcp_lifecycle,', 'lsi_word': ' kernel,test,lifecycle,start,tcp,', 'lsi_method': ' init,get_tcp_km,check_packers,test_tcp_lifecycle,utcnow,', 'spm_method': ' ', 'text_summary': "Subclasses may override  Prepares a kernel for startup in a separate process. Prepares a kernel for startup in a separate process. return ip for localhost (almost always 127.0.0.1)   Ensure that a sequence of kernel startups doesn't break anything. Sends a signal to the process group of the kernel (this. Pass a message to the ZMQ socket to send. This method is called in the ioloop thread when a message arrives. Return the connection info as a dict. Subclasses may override Start the polling of the kernel. Ensure that a sequence of kernel startups doesn't break anything. test `ipython console --existing` loads a connection file. find a connection file, and return its absolute path. return ip for localhost (almost always 127.0.0.1)      find a connection file, and return its absolute path. tunnel connections to a kernel via ssh. For tests, create a file to indicate that we've started. handle kernel info reply. Get the hb channel object for this kernel. Returns the id to associate with the kernel for this request. Send a raw message via ident path. Make a blocking client connected to my kernel. Get a message from the stdin channel. Immediately processes all pending messages on this channel. Return the number of running kernels. Unserialize a msg_list to a nested message dict. Get the single KernelManager object for a kernel by its uuid. Interrupts the kernel by sending it a signal. Get a message from the shell channel. Create an ssh tunnel using command-line ssh that connects port lport. Get a message from the iopub channel. This is run in the ioloop thread when the kernel info reply is received. default function for packing datetime objects in JSON. Start the polling of the kernel. Send a shutdown request via control channel. test load_connection_file() after. Sends an interrupt event using the specified handle. test that messages receive unique ids.", 'files_count': 35, 'files': ['test_session.py', 'session.py', 'forward.py', 'test_connect.py', 'consoleapp.py', 'connect.py', 'runapp.py', 'test_multikernelmanager.py', 'multikernelmanager.py', 'tunnel.py', 'threaded.py', 'channels.py', 'test_ssh.py', 'client.py', 'managerabc.py', 'channelsabc.py', 'manager.py', 'test_kernelspec.py', 'kernelspec.py', 'test_kernelmanager.py', 'jsonutil.py', 'test_manager.py', 'utils.py', 'restarter.py', 'signalkernel.py', 'kernelspecapp.py', 'kernelapp.py', 'test_adapter.py', 'test_jsonutil.py', 'localinterfaces.py', 'adapter.py', 'test_kernelapp.py', 'test_client.py', 'win_interrupt.py', 'launcher.py'], 'execution_path_count': 405, 'function_id_to_name_file': {'686': 'test_clone(test_session.py)', '458': '_add_digest(session.py)', '460': '_cull_digest_history(session.py)', '700': 'test_zero_digest_history(test_session.py)', '687': 'test_cull_digest_history(test_session.py)', '694': 'test_send(test_session.py)', '479': 'recv(session.py)', '474': 'deserialize(session.py)', '492': 'handle(forward.py)', '695': 'test_send_raw(test_session.py)', '484': 'unserialize(session.py)', '696': 'test_serialize(test_session.py)', '559': 'test_app_load_connection_file(test_connect.py)', '558': 'DummyConsoleApp(test_connect.py)', '214': 'JupyterConsoleApp(consoleapp.py)', '441': 'Session(session.py)', '188': 'ConnectionFileMixin(connect.py)', '560': 'test_find_connection_file(test_connect.py)', '564': 'test_load_connection_file_session(test_connect.py)', '565': 'test_load_connection_file_session_with_kn(test_connect.py)', '213': 'IPythonConsoleApp(consoleapp.py)', '434': 'RunApp(runapp.py)', '665': 'test_start_sequence_tcp_kernels(test_multikernelmanager.py)', '655': '_get_tcp_km(test_multikernelmanager.py)', '392': '__init__(multikernelmanager.py)', '666': 'test_tcp_cinfo(test_multikernelmanager.py)', '668': 'test_tcp_lifecycle_with_kernel_id(test_multikernelmanager.py)', '661': 'test_shutdown_all(test_multikernelmanager.py)', '663': 'test_start_parallel_thread_kernels(test_multikernelmanager.py)', '658': 'tcp_lifecycle_with_loop(test_multikernelmanager.py)', '667': 'test_tcp_lifecycle(test_multikernelmanager.py)', '662': 'test_start_parallel_process_kernels(test_multikernelmanager.py)', '190': 'tunnel_to_kernel(connect.py)', '503': 'select_random_ports(tunnel.py)', '718': 'close(threaded.py)', '730': 'close(threaded.py)', '132': 'close(channels.py)', '109': 'close(channels.py)', '83': 'close(channels.py)', '211': 'ports(connect.py)', '701': 'test_random_ports(test_ssh.py)', '386': 'shutdown_all(multikernelmanager.py)', '383': 'finish_shutdown(multikernelmanager.py)', '410': 'get_kernel(multikernelmanager.py)', '394': '_check_kernel_id(multikernelmanager.py)', '388': 'signal_kernel(multikernelmanager.py)', '385': 'restart_kernel(multikernelmanager.py)', '384': 'interrupt_kernel(multikernelmanager.py)', '387': 'shutdown_kernel(multikernelmanager.py)', '421': 'shutdown_kernel(multikernelmanager.py)', '420': 'shutdown_all(multikernelmanager.py)', '104': 'wait_for_ready(client.py)', '103': 'is_alive(client.py)', '412': 'is_alive(multikernelmanager.py)', '373': 'is_alive(managerabc.py)', '140': 'is_alive(channelsabc.py)', '732': 'is_alive(threaded.py)', '86': 'is_alive(channels.py)', '112': 'is_alive(channels.py)', '123': 'wait_for_ready(client.py)', '165': 'is_alive(client.py)', '648': 'test_start_parallel_thread_kernels(test_multikernelmanager.py)', '643': 'tcp_lifecycle_with_loop(test_multikernelmanager.py)', '642': 'raw_tcp_lifecycle(test_multikernelmanager.py)', '641': '_run_lifecycle(test_multikernelmanager.py)', '647': 'test_start_parallel_process_kernels(test_multikernelmanager.py)', '652': 'test_tcp_lifecycle(test_multikernelmanager.py)', '653': 'test_tcp_lifecycle_with_kernel_id(test_multikernelmanager.py)', '483': 'sign(session.py)', '480': 'send(session.py)', '440': 'Message(session.py)', '698': 'test_tracking(test_session.py)', '328': 'interrupt_kernel(manager.py)', '482': 'serialize(session.py)', '135': 'run(channels.py)', '128': '_create_socket(channels.py)', '84': 'get_msg(channels.py)', '82': '_recv(channels.py)', '101': 'get_stdin_msg(client.py)', '85': 'get_msgs(channels.py)', '99': 'get_iopub_msg(client.py)', '110': 'get_msg(channels.py)', '108': '_recv(channels.py)', '111': 'get_msgs(channels.py)', '620': 'test_cant_install_kernel_spec(test_kernelspec.py)', '275': 'install_kernel_spec(kernelspec.py)', '268': '_get_destination_dir(kernelspec.py)', '257': '_is_valid_kernel_name(kernelspec.py)', '625': 'test_install_kernel_spec_prefix(test_kernelspec.py)', '261': 'install_kernel_spec(kernelspec.py)', '624': 'test_install_kernel_spec(test_kernelspec.py)', '614': 'test_start_sequence_process_kernels(test_kernelmanager.py)', '610': '_run_signaltest_lifecycle(test_kernelmanager.py)', '615': 'execute(test_kernelmanager.py)', '609': '_prepare_kernel(test_kernelmanager.py)', '611': 'test_start_parallel_process_kernels(test_kernelmanager.py)', '613': 'test_start_sequence_kernels(test_kernelmanager.py)', '612': 'test_start_parallel_thread_kernels(test_kernelmanager.py)', '398': '_kernel_manager_class_changed(multikernelmanager.py)', '396': '_create_kernel_manager_factory(multikernelmanager.py)', '424': 'create_kernel_manager(multikernelmanager.py)', '397': '_find_available_port(multikernelmanager.py)', '395': '_context_default(multikernelmanager.py)', '399': '_kernel_manager_factory_default(multikernelmanager.py)', '215': '__init__(consoleapp.py)', '485': '__init__(session.py)', '457': '__init__(session.py)', '465': '_new_auth(session.py)', '459': '_check_packers(session.py)', '450': 'utcnow(session.py)', '244': 'squash_dates(jsonutil.py)', '90': 'AsyncKernelClient(client.py)', '147': 'KernelClient(client.py)', '139': 'HBChannelABC(channelsabc.py)', '138': 'ChannelABC(channelsabc.py)', '116': 'BlockingKernelClient(client.py)', '322': 'start_new_async_kernel(manager.py)', '319': 'AsyncKernelManager(manager.py)', '320': 'KernelManager(manager.py)', '224': 'AsyncIOLoopKernelManager(manager.py)', '225': 'IOLoopKernelManager(manager.py)', '635': 'test_connection_file_real_path(test_manager.py)', '657': '_run_lifecycle(test_multikernelmanager.py)', '704': 'execute(utils.py)', '155': 'execute(client.py)', '148': 'validate_string_dict(client.py)', '689': 'test_datetimes_msgpack(test_session.py)', '679': '_datetime_test(test_session.py)', '688': 'test_datetimes(test_session.py)', '690': 'test_datetimes_pickle(test_session.py)', '734': 'send(threaded.py)', '738': 'thread_send(threaded.py)', '664': 'test_start_sequence_ipc_kernels(test_multikernelmanager.py)', '654': '_get_ipc_km(test_multikernelmanager.py)', '660': 'test_ipc_lifecycle(test_multikernelmanager.py)', '659': 'test_ipc_cinfo(test_multikernelmanager.py)', '423': 'start_kernel(multikernelmanager.py)', '415': 'pre_start_kernel(multikernelmanager.py)', '380': 'DuplicateKernelError(multikernelmanager.py)', '414': 'new_kernel_id(multikernelmanager.py)', '389': 'start_kernel(multikernelmanager.py)', '238': 'start(restarter.py)', '430': 'poll(restarter.py)', '433': 'stop(restarter.py)', '428': '_fire_callbacks(restarter.py)', '510': 'do_execute(signalkernel.py)', '501': 'openssh_tunnel(tunnel.py)', '494': 'SSHException(tunnel.py)', '497': '_stop_tunnel(tunnel.py)', '475': 'feed_identities(session.py)', '330': 'restart_kernel(manager.py)', '202': 'cleanup_random_ports(connect.py)', '200': 'cleanup_connection_file(connect.py)', '567': 'test_mixin_cleanup_random_ports(test_connect.py)', '106': 'ZMQSocketChannel(channels.py)', '226': 'as_zmqstream(manager.py)', '233': 'wrapped(manager.py)', '568': 'test_mixin_record_random_ports(test_connect.py)', '557': 'DummyConfigurable(test_connect.py)', '235': 'IOLoopKernelRestarter(restarter.py)', '426': 'KernelRestarter(restarter.py)', '234': 'AsyncIOLoopKernelRestarter(restarter.py)', '291': 'start(kernelspecapp.py)', '251': 'start(kernelapp.py)', '249': 'setup_signals(kernelapp.py)', '252': 'shutdown_handler(kernelapp.py)', '250': 'shutdown(kernelapp.py)', '248': 'log_connection_info(kernelapp.py)', '199': 'blocking_client(connect.py)', '208': 'get_connection_info(connect.py)', '725': 'stop_channels(threaded.py)', '684': 'test_bad_unpack(test_session.py)', '676': '_bad_unpacker(test_session.py)', '536': 'test_complete_request(test_adapter.py)', '517': 'adapt(test_adapter.py)', '562': 'test_find_connection_file_local(test_connect.py)', '189': 'find_connection_file(connect.py)', '493': 'SubHander(forward.py)', '490': 'Handler(forward.py)', '253': 'KernelSpec(kernelspec.py)', '114': 'send(channels.py)', '88': 'send(channels.py)', '575': 'test_date_default(test_jsonutil.py)', '241': 'date_default(jsonutil.py)', '240': '_ensure_tzinfo(jsonutil.py)', '597': 'test_subclasses(test_kernelmanager.py)', '703': 'AsyncKernelManagerWithCleanup(utils.py)', '595': 'test_signal_kernel_subprocesses(test_kernelmanager.py)', '598': 'execute(test_kernelmanager.py)', '702': 'AsyncKernelManagerSubclass(utils.py)', '591': 'transport(test_kernelmanager.py)', '606': 'test_templated_kspec_env(test_kernelmanager.py)', '599': '_env_test_body(test_kernelmanager.py)', '607': 'execute(test_kernelmanager.py)', '604': 'test_signal_kernel_subprocesses(test_kernelmanager.py)', '608': 'execute(test_kernelmanager.py)', '586': 'env(test_kernelmanager.py)', '712': 'stop(utils.py)', '711': 'start(utils.py)', '705': 'test_env(utils.py)', '630': 'test_validate_kernel_name(test_kernelspec.py)', '506': 'SignalTestApp(signalkernel.py)', '507': 'SignalTestKernel(signalkernel.py)', '627': 'test_remove_kernel_spec(test_kernelspec.py)', '617': '_install_sample_kernel(test_kernelspec.py)', '626': 'test_kernel_spec_priority(test_kernelspec.py)', '651': 'test_tcp_cinfo(test_multikernelmanager.py)', '640': '_run_cinfo(test_multikernelmanager.py)', '621': 'test_find_all_specs(test_kernelspec.py)', '622': 'test_find_kernel_specs(test_kernelspec.py)', '623': 'test_get_kernel_spec(test_kernelspec.py)', '619': 'tearDown(test_kernelspec.py)', '618': 'setUp(test_kernelspec.py)', '649': 'test_start_sequence_ipc_kernels(test_multikernelmanager.py)', '650': 'test_start_sequence_tcp_kernels(test_multikernelmanager.py)', '644': 'test_ipc_cinfo(test_multikernelmanager.py)', '315': 'localhost(localinterfaces.py)', '645': 'test_ipc_lifecycle(test_multikernelmanager.py)', '656': '_run_cinfo(test_multikernelmanager.py)', '569': 'test_secure_write(test_connect.py)', '573': 'check_user_only_permissions(test_connect.py)', '574': 'fetch_win32_permissions(test_connect.py)', '563': 'test_find_connection_file_relative(test_connect.py)', '561': 'test_find_connection_file_abspath(test_connect.py)', '539': 'test_input_request(test_adapter.py)', '537': 'test_display_data(test_adapter.py)', '540': 'test_inspect_reply(test_adapter.py)', '543': 'test_kernel_info_reply(test_adapter.py)', '542': 'test_inspect_request_token(test_adapter.py)', '535': 'test_complete_reply(test_adapter.py)', '541': 'test_inspect_request(test_adapter.py)', '538': 'test_execute_request(test_adapter.py)', '545': 'test_rename_type(test_adapter.py)', '544': 'test_no_adapt(test_adapter.py)', '546': 'test_same_version(test_adapter.py)', '514': 'V5toV4TestCase(test_adapter.py)', '512': 'AdapterTest(test_adapter.py)', '526': 'test_input_request(test_adapter.py)', '523': 'test_display_data(test_adapter.py)', '527': 'test_kernel_info_reply(test_adapter.py)', '530': 'test_object_info_reply_not_found(test_adapter.py)', '529': 'test_object_info_reply(test_adapter.py)', '531': 'test_object_info_request(test_adapter.py)', '521': 'test_complete_reply(test_adapter.py)', '522': 'test_complete_request(test_adapter.py)', '524': 'test_execute_reply(test_adapter.py)', '532': 'test_rename_type(test_adapter.py)', '525': 'test_execute_request(test_adapter.py)', '528': 'test_no_adapt(test_adapter.py)', '533': 'test_same_version(test_adapter.py)', '513': 'V4toV5TestCase(test_adapter.py)', '519': 'setUp(test_adapter.py)', '516': 'test_default_version(test_adapter.py)', '515': 'test_code_to_line_no_code(test_adapter.py)', '51': 'code_to_line(adapter.py)', '158': 'get_shell_msg(client.py)', '157': 'get_iopub_msg(client.py)', '710': '__exit__(utils.py)', '709': '__enter__(utils.py)', '580': 'test_kernelapp_lifecycle(test_kernelapp.py)', '579': '_launch(test_kernelapp.py)', '473': 'clone(session.py)', '481': 'send_raw(session.py)', '683': 'test_bad_roundtrip(test_session.py)', '685': 'test_bad_unpacker(test_session.py)', '682': 'test_bad_packer(test_session.py)', '681': 'test_bad_pack(test_session.py)', '675': '_bad_packer(test_session.py)', '697': 'test_session_id(test_session.py)', '699': 'test_unique_msg_ids(test_session.py)', '445': 'msg_header(session.py)', '680': 'test_args(test_session.py)', '478': 'msg_id(session.py)', '674': 'TestSession(test_session.py)', '673': 'SessionTestCase(test_session.py)', '678': 'setUp(test_session.py)', '556': 'test_shutdown(test_client.py)', '548': '_check_reply(test_client.py)', '550': 'test_comm_info(test_client.py)', '555': 'test_kernel_info(test_client.py)', '551': 'test_complete(test_client.py)', '554': 'test_inspect(test_client.py)', '553': 'test_history(test_client.py)', '549': 'setUp(test_client.py)', '255': 'NoSuchKernel(kernelspec.py)', '117': 'reqrep(client.py)', '124': 'wrapped(client.py)', '150': '_handle_kernel_info_reply(client.py)', '125': 'HBChannel(channels.py)', '102': 'hb_channel(client.py)', '196': '_make_url(connect.py)', '91': 'reqrep(client.py)', '105': 'wrapped(client.py)', '80': 'ZMQSocketChannel(channels.py)', '154': 'control_channel(client.py)', '723': 'ioloop(threaded.py)', '160': 'hb_channel(client.py)', '171': 'stdin_channel(client.py)', '164': 'iopub_channel(client.py)', '168': 'shell_channel(client.py)', '740': 'send_interrupt(win_interrupt.py)', '334': '__del__(manager.py)', '293': 'start(kernelspecapp.py)', '294': 'path_key(kernelspecapp.py)', '735': 'start(threaded.py)', '720': 'start(threaded.py)', '141': 'start(channelsabc.py)', '432': 'start(restarter.py)', '288': 'start(kernelspecapp.py)', '89': 'start(channels.py)', '115': 'start(channels.py)', '290': 'start(kernelspecapp.py)', '438': 'parse_command_line(runapp.py)', '218': 'build_kernel_argv(consoleapp.py)', '308': '_only_once(localinterfaces.py)', '317': 'wrapped(localinterfaces.py)', '47': 'V4toV5(adapter.py)', '46': 'Adapter(adapter.py)', '77': 'object_info_request(adapter.py)', '52': 'extract_oname_v4(adapter.py)', '70': 'complete_request(adapter.py)', '75': 'kernel_info_reply(adapter.py)', '49': '_version_str_to_list(adapter.py)', '48': 'V5toV4(adapter.py)', '53': '__call__(adapter.py)', '54': 'handle_reply_status_error(adapter.py)', '57': 'update_msg_type(adapter.py)', '56': 'update_metadata(adapter.py)', '55': 'update_header(adapter.py)', '247': 'initialize(kernelapp.py)', '246': '_record_started(kernelapp.py)', '585': 'config(test_kernelmanager.py)', '262': 'install_native_kernel_spec(kernelspec.py)', '276': 'install_native_kernel_spec(kernelspec.py)', '265': 'to_json(kernelspec.py)', '264': 'to_dict(kernelspec.py)', '449': 'test_msg2obj(session.py)', '453': '__init__(session.py)', '470': '_signature_scheme_changed(session.py)', '463': '_key_default(session.py)', '447': 'new_id_bytes(session.py)', '462': '_key_changed(session.py)', '443': 'default_secure(session.py)', '469': '_session_default(session.py)', '446': 'new_id(session.py)', '413': 'list_kernel_ids(multikernelmanager.py)', '721': 'stop(threaded.py)', '724': 'start_channels(threaded.py)', '722': '_check_kernel_info_reply(threaded.py)', '716': '__init__(threaded.py)', '416': 'remove_kernel(multikernelmanager.py)', '713': 'IOLoopThread(threaded.py)', '714': 'ThreadedKernelClient(threaded.py)', '715': 'ThreadedZMQSocketChannel(threaded.py)', '731': 'flush(threaded.py)', '727': '_flush(threaded.py)', '418': 'request_shutdown(multikernelmanager.py)', '402': 'cleanup_resources(multikernelmanager.py)', '408': 'finish_shutdown(multikernelmanager.py)', '393': '__len__(multikernelmanager.py)', '198': '_session_default(connect.py)', '298': 'launch_kernel(launcher.py)', '739': 'create_interrupt_event(win_interrupt.py)', '741': 'SECURITY_ATTRIBUTES(win_interrupt.py)', '509': '__init__(signalkernel.py)', '278': '__init__(kernelspec.py)', '127': '__init__(channels.py)', '126': 'InvalidPortNumber(channels.py)', '107': '__init__(channels.py)', '81': '__init__(channels.py)', '726': '__init__(threaded.py)', '737': 'setup_stream(threaded.py)', '728': '_handle_recv(threaded.py)', '729': 'call_handlers(threaded.py)', '136': 'stop(channels.py)', '133': 'is_beating(channels.py)', '145': 'time_to_dead(channelsabc.py)', '131': 'call_handlers(channels.py)', '130': '_poll(channels.py)'}}, {'key': 189, 'parent': 1869, 'tfidf_word': 'EP: 189, Name: initialize &rarr; handle_sigint &rarr; interrupt_kernel &rarr; _connect_control_socket &rarr; _create_connected_socket &rarr; _make_url', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 190, 'parent': 1869, 'tfidf_word': 'EP: 190, Name: initialize &rarr; handle_sigint &rarr; interrupt_kernel &rarr; _create_connected_socket &rarr; _make_url', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 209, 'parent': 2029, 'tfidf_word': 'EP: 209, Name: initialize &rarr; handle_sigint &rarr; interrupt_kernel &rarr; send &rarr; thread_send', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1872, 'parent': 2029, 'tfidf_word': 'handle initialize kernel send sigint interrupt ', 'tfidf_method': 'interrupt_kernel handle_sigint initialize send send_interrupt send ', 'lda_word': ' send,handle,sigint,kernel,initialize,', 'lda_method': ' initialize,interrupt_kernel,handle_sigint,send,send_interrupt,', 'lsi_word': ' interrupt,handle,sigint,kernel,send,', 'lsi_method': ' initialize,interrupt_kernel,handle_sigint,send,send_interrupt,', 'spm_method': ' ', 'text_summary': 'Sends an interrupt event using the specified handle. Interrupts the kernel by sending it a signal.', 'files_count': 4, 'files': ['runapp.py', 'manager.py', 'channels.py', 'win_interrupt.py'], 'execution_path_count': 3, 'function_id_to_name_file': {'437': 'initialize(runapp.py)', '435': 'handle_sigint(runapp.py)', '355': 'interrupt_kernel(manager.py)', '114': 'send(channels.py)', '88': 'send(channels.py)', '740': 'send_interrupt(win_interrupt.py)'}}, {'key': 1368, 'parent': 1841, 'tfidf_word': 'EP: 1368, Name: tunnel_connection &rarr; open_tunnel &rarr; select_random_ports &rarr; close', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1369, 'parent': 1841, 'tfidf_word': 'EP: 1369, Name: tunnel_connection &rarr; open_tunnel &rarr; select_random_ports &rarr; close', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 176, 'parent': 1584, 'tfidf_word': 'EP: 176, Name: initialize &rarr; init_kernel_info &rarr; kernel_info &rarr; msg &rarr; msg &rarr; msg_header &rarr; msg_id', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 178, 'parent': 1584, 'tfidf_word': 'EP: 178, Name: initialize &rarr; init_kernel_info &rarr; kernel_info &rarr; msg &rarr; msg &rarr; msg &rarr; msg_header &rarr; msg_id', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 175, 'parent': 1769, 'tfidf_word': 'EP: 175, Name: initialize &rarr; init_kernel_info &rarr; kernel_info &rarr; msg &rarr; msg &rarr; extract_header', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 177, 'parent': 1769, 'tfidf_word': 'EP: 177, Name: initialize &rarr; init_kernel_info &rarr; kernel_info &rarr; msg &rarr; msg &rarr; msg &rarr; extract_header', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 288, 'parent': 1590, 'tfidf_word': 'EP: 288, Name: start &rarr; start &rarr; input &rarr; msg &rarr; msg &rarr; msg_header &rarr; msg_id', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 290, 'parent': 1590, 'tfidf_word': 'EP: 290, Name: start &rarr; start &rarr; input &rarr; msg &rarr; msg &rarr; msg &rarr; msg_header &rarr; msg_id', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 287, 'parent': 1774, 'tfidf_word': 'EP: 287, Name: start &rarr; start &rarr; input &rarr; msg &rarr; msg &rarr; extract_header', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 289, 'parent': 1774, 'tfidf_word': 'EP: 289, Name: start &rarr; start &rarr; input &rarr; msg &rarr; msg &rarr; msg &rarr; extract_header', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 44, 'parent': 1582, 'tfidf_word': 'EP: 44, Name: tunnel_to_kernel &rarr; try_passwordless_ssh &rarr; _try_passwordless_paramiko &rarr; msg &rarr; msg &rarr; msg_header &rarr; msg_id', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 46, 'parent': 1582, 'tfidf_word': 'EP: 46, Name: tunnel_to_kernel &rarr; try_passwordless_ssh &rarr; _try_passwordless_paramiko &rarr; msg &rarr; msg &rarr; msg &rarr; msg_header &rarr; msg_id', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1766, 'parent': 2019, 'tfidf_word': 'extract header kernel paramiko ssh tunnel passwordless try msg ', 'tfidf_method': 'tunnel_to_kernel extract_header msg _try_passwordless_paramiko try_passwordless_ssh msg msg ', 'lda_word': ' msg,try,passwordless,kernel,extract,', 'lda_method': ' msg,try_passwordless_ssh,tunnel_to_kernel,extract_header,try_passwordless_paramiko,', 'lsi_word': ' msg,passwordless,try,header,tunnel,', 'lsi_method': ' msg,try_passwordless_paramiko,try_passwordless_ssh,tunnel_to_kernel,extract_header,', 'spm_method': '  &#187; tunnel_to_kernel(connect.py) &rarr; try_passwordless_ssh(tunnel.py) &rarr; _try_passwordless_paramiko(tunnel.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br>', 'text_summary': 'Try passwordless login with paramiko.', 'files_count': 4, 'files': ['connect.py', 'tunnel.py', 'test_adapter.py', 'session.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'190': 'tunnel_to_kernel(connect.py)', '504': 'try_passwordless_ssh(tunnel.py)', '499': '_try_passwordless_paramiko(tunnel.py)', '534': 'msg(test_adapter.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '520': 'msg(test_adapter.py)'}}, {'key': 1993, 'parent': 2019, 'tfidf_word': 'extract header kernel paramiko ssh tunnel passwordless try msg ', 'tfidf_method': 'tunnel_to_kernel extract_header msg _try_passwordless_paramiko try_passwordless_ssh msg msg ', 'lda_word': ' msg,try,passwordless,paramiko,tunnel,', 'lda_method': ' msg,extract_header,try_passwordless_ssh,tunnel_to_kernel,try_passwordless_paramiko,', 'lsi_word': ' msg,passwordless,try,paramiko,tunnel,', 'lsi_method': ' msg,try_passwordless_paramiko,try_passwordless_ssh,tunnel_to_kernel,extract_header,', 'spm_method': '  &#187; tunnel_to_kernel(connect.py) &rarr; try_passwordless_ssh(tunnel.py) &rarr; _try_passwordless_paramiko(tunnel.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br>', 'text_summary': 'Given a message or header, return the header. Try passwordless login with paramiko.', 'files_count': 4, 'files': ['connect.py', 'tunnel.py', 'session.py', 'test_adapter.py'], 'execution_path_count': 3, 'function_id_to_name_file': {'190': 'tunnel_to_kernel(connect.py)', '504': 'try_passwordless_ssh(tunnel.py)', '499': '_try_passwordless_paramiko(tunnel.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '520': 'msg(test_adapter.py)', '534': 'msg(test_adapter.py)'}}, {'key': 479, 'parent': 1898, 'tfidf_word': 'EP: 479, Name: shell_channel &rarr; connect_shell &rarr; _create_connected_socket &rarr; _make_url', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 597, 'parent': 1898, 'tfidf_word': 'EP: 597, Name: IOLoopKernelManager &rarr; connect_shell &rarr; _create_connected_socket &rarr; _make_url', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 606, 'parent': 1911, 'tfidf_word': 'EP: 606, Name: AsyncIOLoopKernelManager &rarr; connect_iopub &rarr; _create_connected_socket &rarr; _make_url', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1899, 'parent': 1911, 'tfidf_word': 'make socket url channel io kernel loop manager connect iopub ', 'tfidf_method': '_create_connected_socket _make_url connect_iopub iopub_channel IOLoopKernelManager ', 'lda_word': ' connect,iopub,create,socket,make,', 'lda_method': ' create_connected_socket,connect_iopub,make_url,iopub_channel,ioloopkernelmanager,', 'lsi_word': ' connect,iopub,make,url,socket,', 'lsi_method': ' connect_iopub,create_connected_socket,make_url,ioloopkernelmanager,iopub_channel,', 'spm_method': ' ', 'text_summary': 'return zmq Socket connected to the IOPub channel.', 'files_count': 3, 'files': ['client.py', 'connect.py', 'manager.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'164': 'iopub_channel(client.py)', '205': 'connect_iopub(connect.py)', '192': '_create_connected_socket(connect.py)', '196': '_make_url(connect.py)', '225': 'IOLoopKernelManager(manager.py)'}}, {'key': 1909, 'parent': 2369, 'tfidf_word': 'hb io kernel loop make manager socket url async connect ', 'tfidf_method': '_create_connected_socket _make_url connect_hb AsyncIOLoopKernelManager IOLoopKernelManager ', 'lda_word': ' connect,make,socket,io,kernel,', 'lda_method': ' make_url,connect_hb,create_connected_socket,asyncioloopkernelmanager,ioloopkernelmanager,', 'lsi_word': ' connect,hb,manager,url,socket,', 'lsi_method': ' connect_hb,create_connected_socket,make_url,asyncioloopkernelmanager,ioloopkernelmanager,', 'spm_method': ' ', 'text_summary': 'return zmq Socket connected to the Heartbeat channel.', 'files_count': 2, 'files': ['manager.py', 'connect.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'225': 'IOLoopKernelManager(manager.py)', '204': 'connect_hb(connect.py)', '192': '_create_connected_socket(connect.py)', '196': '_make_url(connect.py)', '224': 'AsyncIOLoopKernelManager(manager.py)'}}, {'key': 2274, 'parent': 2369, 'tfidf_word': 'connect create make url close control del interrupt kernel socket ', 'tfidf_method': '_create_connected_socket _make_url interrupt_kernel __del__ _close_control_socket ', 'lda_word': ' connect,make,url,kernel,socket,', 'lda_method': ' del,create_connected_socket,close_control_socket,make_url,interrupt_kernel,', 'lsi_word': ' socket,connect,make,url,create,', 'lsi_method': ' make_url,create_connected_socket,del,close_control_socket,interrupt_kernel,', 'spm_method': ' ', 'text_summary': '', 'files_count': 2, 'files': ['manager.py', 'connect.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'334': '__del__(manager.py)', '337': '_close_control_socket(manager.py)', '192': '_create_connected_socket(connect.py)', '196': '_make_url(connect.py)', '328': 'interrupt_kernel(manager.py)'}}, {'key': 586, 'parent': 2026, 'tfidf_word': 'EP: 586, Name: wait_for_ready &rarr; is_alive &rarr; is_alive &rarr; has_kernel &rarr; _launch_kernel', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1845, 'parent': 2026, 'tfidf_word': 'alive launch beating channels stop kernel ', 'tfidf_method': '_launch_kernel has_kernel is_alive is_beating stop_channels ', 'lda_word': ' kernel,launch,alive,beating,stop,', 'lda_method': ' has_kernel,is_alive,launch_kernel,is_beating,stop_channels,', 'lsi_word': ' kernel,launch,alive,stop,channels,', 'lsi_method': ' is_alive,launch_kernel,has_kernel,stop_channels,is_beating,', 'spm_method': ' ', 'text_summary': '', 'files_count': 3, 'files': ['channels.py', 'manager.py', 'threaded.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'133': 'is_beating(channels.py)', '357': 'is_alive(manager.py)', '354': 'has_kernel(manager.py)', '347': '_launch_kernel(manager.py)', '725': 'stop_channels(threaded.py)'}}, {'key': 330, 'parent': 1417, 'tfidf_word': 'EP: 330, Name: restart_kernel &rarr; shutdown_kernel &rarr; finish_shutdown &rarr; _kill_kernel &rarr; signal_kernel &rarr; has_kernel &rarr; _launch_kernel', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 401, 'parent': 1417, 'tfidf_word': 'EP: 401, Name: start_new_async_kernel &rarr; shutdown_kernel &rarr; finish_shutdown &rarr; _kill_kernel &rarr; signal_kernel &rarr; has_kernel &rarr; _launch_kernel', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 298, 'parent': 1471, 'tfidf_word': 'EP: 298, Name: restart_kernel &rarr; shutdown_kernel &rarr; _kill_kernel &rarr; signal_kernel &rarr; has_kernel &rarr; _launch_kernel', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 369, 'parent': 1471, 'tfidf_word': 'EP: 369, Name: start_new_async_kernel &rarr; shutdown_kernel &rarr; _kill_kernel &rarr; signal_kernel &rarr; has_kernel &rarr; _launch_kernel', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 322, 'parent': 1413, 'tfidf_word': 'EP: 322, Name: restart_kernel &rarr; shutdown_kernel &rarr; request_shutdown &rarr; msg &rarr; msg &rarr; msg &rarr; extract_header', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 393, 'parent': 1413, 'tfidf_word': 'EP: 393, Name: start_new_async_kernel &rarr; shutdown_kernel &rarr; request_shutdown &rarr; msg &rarr; msg &rarr; msg &rarr; extract_header', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 320, 'parent': 1478, 'tfidf_word': 'EP: 320, Name: restart_kernel &rarr; shutdown_kernel &rarr; request_shutdown &rarr; msg &rarr; msg &rarr; extract_header', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 391, 'parent': 1478, 'tfidf_word': 'EP: 391, Name: start_new_async_kernel &rarr; shutdown_kernel &rarr; request_shutdown &rarr; msg &rarr; msg &rarr; extract_header', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 326, 'parent': 1415, 'tfidf_word': 'EP: 326, Name: restart_kernel &rarr; shutdown_kernel &rarr; request_shutdown &rarr; msg &rarr; msg &rarr; msg &rarr; extract_header', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 397, 'parent': 1415, 'tfidf_word': 'EP: 397, Name: start_new_async_kernel &rarr; shutdown_kernel &rarr; request_shutdown &rarr; msg &rarr; msg &rarr; msg &rarr; extract_header', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 324, 'parent': 1479, 'tfidf_word': 'EP: 324, Name: restart_kernel &rarr; shutdown_kernel &rarr; request_shutdown &rarr; msg &rarr; msg &rarr; extract_header', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 395, 'parent': 1479, 'tfidf_word': 'EP: 395, Name: start_new_async_kernel &rarr; shutdown_kernel &rarr; request_shutdown &rarr; msg &rarr; msg &rarr; extract_header', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 317, 'parent': 1476, 'tfidf_word': 'EP: 317, Name: restart_kernel &rarr; shutdown_kernel &rarr; request_shutdown &rarr; send &rarr; serialize &rarr; sign', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 388, 'parent': 1476, 'tfidf_word': 'EP: 388, Name: start_new_async_kernel &rarr; shutdown_kernel &rarr; request_shutdown &rarr; send &rarr; serialize &rarr; sign', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 318, 'parent': 1685, 'tfidf_word': 'EP: 318, Name: restart_kernel &rarr; shutdown_kernel &rarr; request_shutdown &rarr; send &rarr; Message', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 389, 'parent': 1685, 'tfidf_word': 'EP: 389, Name: start_new_async_kernel &rarr; shutdown_kernel &rarr; request_shutdown &rarr; send &rarr; Message', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 313, 'parent': 1882, 'tfidf_word': 'EP: 313, Name: restart_kernel &rarr; shutdown_kernel &rarr; request_shutdown &rarr; send', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 314, 'parent': 1882, 'tfidf_word': 'EP: 314, Name: restart_kernel &rarr; shutdown_kernel &rarr; request_shutdown &rarr; send', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 384, 'parent': 1892, 'tfidf_word': 'EP: 384, Name: start_new_async_kernel &rarr; shutdown_kernel &rarr; request_shutdown &rarr; send', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 385, 'parent': 1892, 'tfidf_word': 'EP: 385, Name: start_new_async_kernel &rarr; shutdown_kernel &rarr; request_shutdown &rarr; send', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 333, 'parent': 1687, 'tfidf_word': 'EP: 333, Name: restart_kernel &rarr; shutdown_kernel &rarr; finish_shutdown &rarr; _kill_kernel &rarr; _launch_kernel', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 404, 'parent': 1687, 'tfidf_word': 'EP: 404, Name: start_new_async_kernel &rarr; shutdown_kernel &rarr; finish_shutdown &rarr; _kill_kernel &rarr; _launch_kernel', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 301, 'parent': 1880, 'tfidf_word': 'EP: 301, Name: restart_kernel &rarr; shutdown_kernel &rarr; _kill_kernel &rarr; _launch_kernel', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 372, 'parent': 1880, 'tfidf_word': 'EP: 372, Name: start_new_async_kernel &rarr; shutdown_kernel &rarr; _kill_kernel &rarr; _launch_kernel', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 944, 'parent': 1538, 'tfidf_word': 'EP: 944, Name: test_complete_request &rarr; msg &rarr; msg &rarr; msg &rarr; msg_header &rarr; msg_id', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1537, 'parent': 1538, 'tfidf_word': 'rename version type kernel interrupt identity feed complete raw msg ', 'tfidf_method': 'test_msg test_feed_identities test_same_version test_no_adapt test_send_raw test_execute_request test_execute_reply interrupt_kernel test_rename_type test_serialize ', 'lda_word': ' msg,header,test,send,execute,', 'lda_method': ' msg,msg_header,msg_id,is_complete,interrupt_kernel,', 'lsi_word': ' msg,header,test,execute,send,', 'lsi_method': ' msg,msg_id,msg_header,interrupt_kernel,test_feed_identities,', 'spm_method': ' ', 'text_summary': 'message format.', 'files_count': 5, 'files': ['test_adapter.py', 'session.py', 'test_session.py', 'manager.py', 'client.py'], 'execution_path_count': 12, 'function_id_to_name_file': {'524': 'test_execute_reply(test_adapter.py)', '520': 'msg(test_adapter.py)', '534': 'msg(test_adapter.py)', '476': 'msg(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '525': 'test_execute_request(test_adapter.py)', '532': 'test_rename_type(test_adapter.py)', '528': 'test_no_adapt(test_adapter.py)', '533': 'test_same_version(test_adapter.py)', '695': 'test_send_raw(test_session.py)', '692': 'test_feed_identities(test_session.py)', '694': 'test_send(test_session.py)', '696': 'test_serialize(test_session.py)', '693': 'test_msg(test_session.py)', '328': 'interrupt_kernel(manager.py)', '166': 'is_complete(client.py)'}}, {'key': 1007, 'parent': 1658, 'tfidf_word': 'EP: 1007, Name: test_complete_reply &rarr; msg &rarr; msg &rarr; msg_header &rarr; msg_id', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1657, 'parent': 1658, 'tfidf_word': 'adapt complete execute feed identity raw rename type version msg ', 'tfidf_method': 'msg_id msg test_complete_request test_execute_request test_no_adapt test_rename_type test_same_version test_feed_identities test_send test_send_raw ', 'lda_word': ' msg,test,header,version,rename,', 'lda_method': ' msg,msg_header,msg_id,test_same_version,test_send_raw,', 'lsi_word': ' msg,header,test,request,send,', 'lsi_method': ' msg,msg_id,msg_header,test_complete_request,test_send_raw,', 'spm_method': ' ', 'text_summary': 'Empty', 'files_count': 3, 'files': ['test_adapter.py', 'session.py', 'test_session.py'], 'execution_path_count': 8, 'function_id_to_name_file': {'536': 'test_complete_request(test_adapter.py)', '534': 'msg(test_adapter.py)', '476': 'msg(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '538': 'test_execute_request(test_adapter.py)', '545': 'test_rename_type(test_adapter.py)', '546': 'test_same_version(test_adapter.py)', '544': 'test_no_adapt(test_adapter.py)', '695': 'test_send_raw(test_session.py)', '694': 'test_send(test_session.py)', '692': 'test_feed_identities(test_session.py)'}}, {'key': 1009, 'parent': 1551, 'tfidf_word': 'EP: 1009, Name: test_complete_reply &rarr; msg &rarr; msg &rarr; msg &rarr; msg_header &rarr; msg_id', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1550, 'parent': 1551, 'tfidf_word': 'rename raw kernel type interrupt identity feed execute version msg ', 'tfidf_method': 'test_msg test_feed_identities test_same_version test_execute_request test_no_adapt test_send_raw test_complete_request interrupt_kernel test_rename_type test_serialize ', 'lda_word': ' msg,header,test,complete,send,', 'lda_method': ' msg,msg_id,msg_header,test_send_raw,test_rename_type,', 'lsi_word': ' msg,header,test,request,send,', 'lsi_method': ' msg,msg_id,msg_header,test_complete_request,interrupt_kernel,', 'spm_method': ' ', 'text_summary': 'Ask the kernel whether some code is complete and ready to execute.', 'files_count': 5, 'files': ['test_adapter.py', 'session.py', 'test_session.py', 'manager.py', 'client.py'], 'execution_path_count': 12, 'function_id_to_name_file': {'536': 'test_complete_request(test_adapter.py)', '534': 'msg(test_adapter.py)', '520': 'msg(test_adapter.py)', '476': 'msg(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '538': 'test_execute_request(test_adapter.py)', '545': 'test_rename_type(test_adapter.py)', '544': 'test_no_adapt(test_adapter.py)', '546': 'test_same_version(test_adapter.py)', '695': 'test_send_raw(test_session.py)', '692': 'test_feed_identities(test_session.py)', '694': 'test_send(test_session.py)', '696': 'test_serialize(test_session.py)', '693': 'test_msg(test_session.py)', '328': 'interrupt_kernel(manager.py)', '166': 'is_complete(client.py)'}}, {'key': 951, 'parent': 1649, 'tfidf_word': 'EP: 951, Name: test_object_info_request &rarr; msg &rarr; msg &rarr; msg_header &rarr; msg_id', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1648, 'parent': 1649, 'tfidf_word': 'request send adapt feed identity raw rename type version msg ', 'tfidf_method': 'test_complete_reply test_complete_request test_execute_reply test_execute_request test_no_adapt test_rename_type test_same_version test_feed_identities test_send test_send_raw ', 'lda_word': ' msg,test,header,send,complete,', 'lda_method': ' test_same_version,msg,msg_id,msg_header,test_feed_identities,', 'lsi_word': ' msg,test,header,execute,request,', 'lsi_method': ' msg,msg_header,msg_id,test_feed_identities,test_execute_reply,', 'spm_method': ' ', 'text_summary': 'Empty', 'files_count': 3, 'files': ['test_adapter.py', 'session.py', 'test_session.py'], 'execution_path_count': 10, 'function_id_to_name_file': {'521': 'test_complete_reply(test_adapter.py)', '520': 'msg(test_adapter.py)', '476': 'msg(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '522': 'test_complete_request(test_adapter.py)', '524': 'test_execute_reply(test_adapter.py)', '525': 'test_execute_request(test_adapter.py)', '532': 'test_rename_type(test_adapter.py)', '533': 'test_same_version(test_adapter.py)', '528': 'test_no_adapt(test_adapter.py)', '695': 'test_send_raw(test_session.py)', '694': 'test_send(test_session.py)', '692': 'test_feed_identities(test_session.py)'}}, {'key': 772, 'parent': 1832, 'tfidf_word': 'EP: 772, Name: test_send &rarr; msg &rarr; msg_header &rarr; msg_id', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1830, 'parent': 1832, 'tfidf_word': 'header id test serialize msg ', 'tfidf_method': 'msg msg_header msg_id test_msg test_serialize ', 'lda_word': ' msg,test,header,serialize,', 'lda_method': ' msg_header,msg_id,test_serialize,msg,test_msg,', 'lsi_word': ' msg,test,header,serialize,', 'lsi_method': ' msg,msg_header,msg_id,test_serialize,test_msg,', 'spm_method': ' ', 'text_summary': 'Empty', 'files_count': 2, 'files': ['test_session.py', 'session.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'693': 'test_msg(test_session.py)', '476': 'msg(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '696': 'test_serialize(test_session.py)'}}, {'key': 952, 'parent': 1634, 'tfidf_word': 'EP: 952, Name: test_object_info_request &rarr; msg &rarr; msg &rarr; msg &rarr; extract_header', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1633, 'parent': 1634, 'tfidf_word': 'request send msg adapt feed identity raw rename type version ', 'tfidf_method': 'test_complete_reply test_complete_request test_execute_reply test_execute_request test_no_adapt test_rename_type test_same_version test_feed_identities test_send test_send_raw ', 'lda_word': ' msg,header,extract,test,send,', 'lda_method': ' msg,extract_header,test_feed_identities,test_same_version,test_no_adapt,', 'lsi_word': ' msg,header,test,extract,request,', 'lsi_method': ' msg,extract_header,test_execute_request,test_execute_reply,test_no_adapt,', 'spm_method': ' ', 'text_summary': '', 'files_count': 3, 'files': ['test_adapter.py', 'session.py', 'test_session.py'], 'execution_path_count': 10, 'function_id_to_name_file': {'521': 'test_complete_reply(test_adapter.py)', '520': 'msg(test_adapter.py)', '534': 'msg(test_adapter.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '522': 'test_complete_request(test_adapter.py)', '524': 'test_execute_reply(test_adapter.py)', '525': 'test_execute_request(test_adapter.py)', '532': 'test_rename_type(test_adapter.py)', '533': 'test_same_version(test_adapter.py)', '528': 'test_no_adapt(test_adapter.py)', '695': 'test_send_raw(test_session.py)', '694': 'test_send(test_session.py)', '692': 'test_feed_identities(test_session.py)'}}, {'key': 981, 'parent': 1813, 'tfidf_word': 'EP: 981, Name: test_same_version &rarr; msg &rarr; msg &rarr; extract_header', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1804, 'parent': 1813, 'tfidf_word': 'extract header test send feed identity raw serialize msg ', 'tfidf_method': 'extract_header msg msg test_feed_identities test_msg test_send test_send_raw test_serialize ', 'lda_word': ' msg,test,header,extract,serialize,', 'lda_method': ' msg,extract_header,test_send,test_serialize,test_feed_identities,', 'lsi_word': ' msg,header,test,extract,send,', 'lsi_method': ' msg,extract_header,test_send_raw,test_serialize,test_msg,', 'spm_method': ' ', 'text_summary': '', 'files_count': 3, 'files': ['test_session.py', 'test_adapter.py', 'session.py'], 'execution_path_count': 5, 'function_id_to_name_file': {'695': 'test_send_raw(test_session.py)', '534': 'msg(test_adapter.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '692': 'test_feed_identities(test_session.py)', '694': 'test_send(test_session.py)', '693': 'test_msg(test_session.py)', '696': 'test_serialize(test_session.py)'}}, {'key': 1018, 'parent': 1622, 'tfidf_word': 'EP: 1018, Name: test_inspect_request_token &rarr; msg &rarr; msg &rarr; msg &rarr; extract_header', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1621, 'parent': 1622, 'tfidf_word': 'reply rename adapt type inspect identity feed execute raw version ', 'tfidf_method': 'test_complete_reply test_complete_request test_execute_request test_inspect_request test_no_adapt test_rename_type test_same_version test_feed_identities test_send test_send_raw ', 'lda_word': ' msg,header,extract,test,send,', 'lda_method': ' msg,extract_header,test_send,test_same_version,test_rename_type,', 'lsi_word': ' msg,header,test,extract,request,', 'lsi_method': ' msg,extract_header,test_same_version,test_rename_type,test_inspect_request,', 'spm_method': ' ', 'text_summary': '', 'files_count': 3, 'files': ['test_adapter.py', 'session.py', 'test_session.py'], 'execution_path_count': 10, 'function_id_to_name_file': {'541': 'test_inspect_request(test_adapter.py)', '534': 'msg(test_adapter.py)', '520': 'msg(test_adapter.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '535': 'test_complete_reply(test_adapter.py)', '536': 'test_complete_request(test_adapter.py)', '538': 'test_execute_request(test_adapter.py)', '545': 'test_rename_type(test_adapter.py)', '546': 'test_same_version(test_adapter.py)', '544': 'test_no_adapt(test_adapter.py)', '695': 'test_send_raw(test_session.py)', '694': 'test_send(test_session.py)', '692': 'test_feed_identities(test_session.py)'}}, {'key': 921, 'parent': 1806, 'tfidf_word': 'EP: 921, Name: test_no_adapt &rarr; msg &rarr; msg &rarr; extract_header', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1805, 'parent': 1806, 'tfidf_word': 'extract header test send feed identity raw serialize version msg ', 'tfidf_method': 'extract_header msg msg test_same_version test_feed_identities test_msg test_send test_send_raw test_serialize ', 'lda_word': ' msg,header,extract,test,send,', 'lda_method': ' msg,extract_header,test_same_version,test_send_raw,test_serialize,', 'lsi_word': ' msg,header,test,extract,send,', 'lsi_method': ' msg,extract_header,test_same_version,test_send_raw,test_feed_identities,', 'spm_method': ' ', 'text_summary': '', 'files_count': 3, 'files': ['test_adapter.py', 'session.py', 'test_session.py'], 'execution_path_count': 6, 'function_id_to_name_file': {'533': 'test_same_version(test_adapter.py)', '520': 'msg(test_adapter.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '695': 'test_send_raw(test_session.py)', '692': 'test_feed_identities(test_session.py)', '694': 'test_send(test_session.py)', '693': 'test_msg(test_session.py)', '696': 'test_serialize(test_session.py)'}}, {'key': 960, 'parent': 1809, 'tfidf_word': 'EP: 960, Name: test_object_info_reply_not_found &rarr; msg &rarr; msg &rarr; extract_header', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1808, 'parent': 1809, 'tfidf_word': 'extract header info object test reply request msg ', 'tfidf_method': 'extract_header msg msg test_object_info_reply test_object_info_request ', 'lda_word': ' header,msg,test,object,extract,', 'lda_method': ' msg,extract_header,test_object_info_reply,test_object_info_request,', 'lsi_word': ' msg,extract,info,test,object,', 'lsi_method': ' msg,extract_header,test_object_info_request,test_object_info_reply,', 'spm_method': ' ', 'text_summary': '', 'files_count': 2, 'files': ['test_adapter.py', 'session.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'531': 'test_object_info_request(test_adapter.py)', '520': 'msg(test_adapter.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '529': 'test_object_info_reply(test_adapter.py)'}}, {'key': 840, 'parent': 2069, 'tfidf_word': 'EP: 840, Name: test_bad_roundtrip &rarr; __init__ &rarr; _new_auth', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2068, 'parent': 2069, 'tfidf_word': 'digest history cull id pack packer session unpack unpacker zero ', 'tfidf_method': '__init__ _new_auth test_bad_pack test_bad_packer test_bad_unpack test_bad_unpacker test_cull_digest_history test_session_id test_zero_digest_history ', 'lda_word': ' auth,init,test,new,bad,', 'lda_method': ' new_auth,init,test_bad_unpacker,test_bad_packer,test_cull_digest_history,', 'lsi_word': ' test,auth,init,new,bad,', 'lsi_method': ' init,new_auth,test_session_id,test_cull_digest_history,test_bad_pack,', 'spm_method': ' ', 'text_summary': '', 'files_count': 2, 'files': ['test_session.py', 'session.py'], 'execution_path_count': 7, 'function_id_to_name_file': {'685': 'test_bad_unpacker(test_session.py)', '457': '__init__(session.py)', '465': '_new_auth(session.py)', '682': 'test_bad_packer(test_session.py)', '681': 'test_bad_pack(test_session.py)', '684': 'test_bad_unpack(test_session.py)', '687': 'test_cull_digest_history(test_session.py)', '697': 'test_session_id(test_session.py)', '700': 'test_zero_digest_history(test_session.py)'}}, {'key': 1238, 'parent': 1958, 'tfidf_word': 'EP: 1238, Name: test_kernel_spec_priority &rarr; find_kernel_specs &rarr; _list_kernels_in &rarr; _is_valid_kernel_name', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1239, 'parent': 1958, 'tfidf_word': 'EP: 1239, Name: test_kernel_spec_priority &rarr; find_kernel_specs &rarr; _list_kernels_in &rarr; _is_kernel_dir', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1243, 'parent': 1959, 'tfidf_word': 'EP: 1243, Name: test_install_kernel_spec &rarr; find_kernel_specs &rarr; _list_kernels_in &rarr; _is_valid_kernel_name', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1244, 'parent': 1959, 'tfidf_word': 'EP: 1244, Name: test_install_kernel_spec &rarr; find_kernel_specs &rarr; _list_kernels_in &rarr; _is_kernel_dir', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 113, 'parent': 1674, 'tfidf_word': 'EP: 113, Name: unserialize &rarr; deserialize &rarr; extract_dates &rarr; parse_date &rarr; _ensure_tzinfo', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 744, 'parent': 1674, 'tfidf_word': 'EP: 744, Name: test_serialize &rarr; deserialize &rarr; extract_dates &rarr; parse_date &rarr; _ensure_tzinfo', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 843, 'parent': 1733, 'tfidf_word': 'EP: 843, Name: test_datetimes &rarr; _datetime_test &rarr; extract_dates &rarr; parse_date &rarr; _ensure_tzinfo', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 846, 'parent': 1733, 'tfidf_word': 'EP: 846, Name: test_datetimes_pickle &rarr; _datetime_test &rarr; extract_dates &rarr; parse_date &rarr; _ensure_tzinfo', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1352, 'parent': 1963, 'tfidf_word': 'EP: 1352, Name: test_extract_date_from_naive &rarr; extract_dates &rarr; parse_date &rarr; _ensure_tzinfo', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1353, 'parent': 1963, 'tfidf_word': 'EP: 1353, Name: test_extract_dates &rarr; extract_dates &rarr; parse_date &rarr; _ensure_tzinfo', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 336, 'parent': 1481, 'tfidf_word': 'EP: 336, Name: restart_kernel &rarr; start_kernel &rarr; post_start_kernel &rarr; _connect_control_socket &rarr; _create_connected_socket &rarr; _make_url', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 410, 'parent': 1481, 'tfidf_word': 'EP: 410, Name: start_new_async_kernel &rarr; start_kernel &rarr; post_start_kernel &rarr; _connect_control_socket &rarr; _create_connected_socket &rarr; _make_url', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 337, 'parent': 1884, 'tfidf_word': 'EP: 337, Name: restart_kernel &rarr; start_kernel &rarr; post_start_kernel &rarr; start_restarter', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 411, 'parent': 1884, 'tfidf_word': 'EP: 411, Name: start_new_async_kernel &rarr; start_kernel &rarr; post_start_kernel &rarr; start_restarter', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1362, 'parent': 2264, 'tfidf_word': 'EP: 1362, Name: test_connection_file_real_path &rarr; format_kernel_cmd &rarr; kernel_spec &rarr; KernelSpec', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1482, 'parent': 2264, 'tfidf_word': 'cmd format pre async new restart spec start kernel ', 'tfidf_method': 'KernelSpec start_kernel format_kernel_cmd kernel_spec pre_start_kernel start_new_async_kernel restart_kernel ', 'lda_word': ' kernel,start,format,spec,pre,', 'lda_method': ' kernel_spec,pre_start_kernel,start_kernel,kernelspec,format_kernel_cmd,', 'lsi_word': ' kernel,start,spec,cmd,pre,', 'lsi_method': ' format_kernel_cmd,kernel_spec,pre_start_kernel,kernelspec,start_kernel,', 'spm_method': ' ', 'text_summary': 'Prepares a kernel for startup in a separate process. {connection_file})   Prepares a kernel for startup in a separate process.', 'files_count': 2, 'files': ['manager.py', 'kernelspec.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'330': 'restart_kernel(manager.py)', '333': 'start_kernel(manager.py)', '360': 'pre_start_kernel(manager.py)', '353': 'format_kernel_cmd(manager.py)', '358': 'kernel_spec(manager.py)', '253': 'KernelSpec(kernelspec.py)', '322': 'start_new_async_kernel(manager.py)'}}, {'key': 1361, 'parent': 2370, 'tfidf_word': 'EP: 1361, Name: test_connection_file_real_path &rarr; format_kernel_cmd &rarr; from_ns', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1689, 'parent': 2370, 'tfidf_word': 'cmd format n pre async new restart start kernel ', 'tfidf_method': 'start_kernel format_kernel_cmd pre_start_kernel from_ns start_new_async_kernel restart_kernel ', 'lda_word': ' kernel,start,cmd,pre,format,', 'lda_method': ' from_ns,start_kernel,pre_start_kernel,restart_kernel,format_kernel_cmd,', 'lsi_word': ' kernel,start,cmd,pre,format,', 'lsi_method': ' start_kernel,format_kernel_cmd,from_ns,pre_start_kernel,restart_kernel,', 'spm_method': ' ', 'text_summary': 'Restarts a kernel with the arguments that were used to launch it. replace templated args (e.g.', 'files_count': 1, 'files': ['manager.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'330': 'restart_kernel(manager.py)', '333': 'start_kernel(manager.py)', '360': 'pre_start_kernel(manager.py)', '353': 'format_kernel_cmd(manager.py)', '369': 'from_ns(manager.py)', '322': 'start_new_async_kernel(manager.py)'}}, {'key': 1688, 'parent': 2368, 'tfidf_word': 'port pre random record write async new restart kernel start ', 'tfidf_method': '_record_random_port_names write_connection_file start_kernel pre_start_kernel start_new_async_kernel restart_kernel ', 'lda_word': ' kernel,start,names,random,write,', 'lda_method': ' start_kernel,record_random_port_names,write_connection_file,pre_start_kernel,restart_kernel,', 'lsi_word': ' kernel,start,connection,file,pre,', 'lsi_method': ' pre_start_kernel,start_kernel,write_connection_file,record_random_port_names,start_new_async_kernel,', 'spm_method': ' ', 'text_summary': 'Write connection info to JSON dict in self.connection_file.', 'files_count': 2, 'files': ['manager.py', 'connect.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'330': 'restart_kernel(manager.py)', '333': 'start_kernel(manager.py)', '360': 'pre_start_kernel(manager.py)', '212': 'write_connection_file(connect.py)', '197': '_record_random_port_names(connect.py)', '322': 'start_new_async_kernel(manager.py)'}}, {'key': 2265, 'parent': 2368, 'tfidf_word': 'connection file restart real async new test path kernel start ', 'tfidf_method': '_record_random_port_names write_connection_file format_kernel_cmd start_kernel pre_start_kernel start_new_async_kernel restart_kernel test_connection_file_real_path ', 'lda_word': ' file,connection,format,port,test,', 'lda_method': ' format_kernel_cmd,record_random_port_names,write_connection_file,start_kernel,pre_start_kernel,', 'lsi_word': ' kernel,start,file,connection,record,', 'lsi_method': ' format_kernel_cmd,write_connection_file,record_random_port_names,start_kernel,pre_start_kernel,', 'spm_method': ' ', 'text_summary': '', 'files_count': 3, 'files': ['test_manager.py', 'manager.py', 'connect.py'], 'execution_path_count': 3, 'function_id_to_name_file': {'635': 'test_connection_file_real_path(test_manager.py)', '353': 'format_kernel_cmd(manager.py)', '212': 'write_connection_file(connect.py)', '197': '_record_random_port_names(connect.py)', '330': 'restart_kernel(manager.py)', '333': 'start_kernel(manager.py)', '360': 'pre_start_kernel(manager.py)', '322': 'start_new_async_kernel(manager.py)'}}, {'key': 1886, 'parent': 2401, 'tfidf_word': 'pre restart ip local start env get substitution kernel ', 'tfidf_method': 'restart_kernel start_kernel pre_start_kernel is_local_ip local_ips _get_env_substitutions ', 'lda_word': ' kernel,start,local,ip,restart,', 'lda_method': ' restart_kernel,start_kernel,pre_start_kernel,get_env_substitutions,local_ips,', 'lsi_word': ' kernel,start,restart,pre,ip,', 'lsi_method': ' pre_start_kernel,restart_kernel,start_kernel,get_env_substitutions,is_local_ip,', 'spm_method': ' ', 'text_summary': 'return the IP addresses that point to this machine. Restarts a kernel with the arguments that were used to launch it. does `ip` point to this machine?.', 'files_count': 2, 'files': ['manager.py', 'localinterfaces.py'], 'execution_path_count': 3, 'function_id_to_name_file': {'330': 'restart_kernel(manager.py)', '333': 'start_kernel(manager.py)', '360': 'pre_start_kernel(manager.py)', '341': '_get_env_substitutions(manager.py)', '314': 'local_ips(localinterfaces.py)', '312': 'is_local_ip(localinterfaces.py)'}}, {'key': 1895, 'parent': 2401, 'tfidf_word': 'async new pre ip local env get substitution kernel start ', 'tfidf_method': 'start_new_async_kernel start_kernel pre_start_kernel is_local_ip local_ips _get_env_substitutions ', 'lda_word': ' start,kernel,new,pre,async,', 'lda_method': ' start_kernel,pre_start_kernel,start_new_async_kernel,is_local_ip,local_ips,', 'lsi_word': ' start,kernel,async,pre,new,', 'lsi_method': ' start_kernel,start_new_async_kernel,pre_start_kernel,get_env_substitutions,local_ips,', 'spm_method': ' ', 'text_summary': 'Prepares a kernel for startup in a separate process. Walks env entries in templated_env and applies possible substitutions from current env.', 'files_count': 2, 'files': ['manager.py', 'localinterfaces.py'], 'execution_path_count': 3, 'function_id_to_name_file': {'322': 'start_new_async_kernel(manager.py)', '333': 'start_kernel(manager.py)', '360': 'pre_start_kernel(manager.py)', '341': '_get_env_substitutions(manager.py)', '314': 'local_ips(localinterfaces.py)', '312': 'is_local_ip(localinterfaces.py)'}}, {'key': 1222, 'parent': 2198, 'tfidf_word': 'EP: 1222, Name: test_get_kernel_spec &rarr; _find_spec_directory &rarr; _is_kernel_dir', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1275, 'parent': 2198, 'tfidf_word': 'EP: 1275, Name: find_kernel_specs &rarr; _find_spec_directory &rarr; _is_kernel_dir', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1759, 'parent': 2268, 'tfidf_word': 'dir directory test subclass find get kernel spec specs ', 'tfidf_method': '_is_kernel_dir _find_spec_directory get_all_specs get_kernel_spec test_find_all_specs test_subclass ', 'lda_word': ' get,spec,find,kernel,specs,', 'lda_method': ' is_kernel_dir,get_kernel_spec,find_spec_directory,get_all_specs,test_find_all_specs,', 'lsi_word': ' get,spec,kernel,find,specs,', 'lsi_method': ' get_kernel_spec,is_kernel_dir,get_all_specs,find_spec_directory,test_subclass,', 'spm_method': ' ', 'text_summary': 'Is ``path`` a kernel directory?.', 'files_count': 2, 'files': ['test_kernelspec.py', 'kernelspec.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'621': 'test_find_all_specs(test_kernelspec.py)', '273': 'get_all_specs(kernelspec.py)', '274': 'get_kernel_spec(kernelspec.py)', '267': '_find_spec_directory(kernelspec.py)', '256': '_is_kernel_dir(kernelspec.py)', '629': 'test_subclass(test_kernelspec.py)'}}, {'key': 1919, 'parent': 2268, 'tfidf_word': 'dir directory find test get set subclass up kernel spec ', 'tfidf_method': '_is_kernel_dir _find_spec_directory get_kernel_spec setUp test_get_kernel_spec test_subclass get_kernel_spec ', 'lda_word': ' kernel,spec,directory,get,dir,', 'lda_method': ' get_kernel_spec,is_kernel_dir,find_spec_directory,test_subclass,setup,', 'lsi_word': ' kernel,spec,get,dir,find,', 'lsi_method': ' get_kernel_spec,find_spec_directory,is_kernel_dir,test_subclass,setup,', 'spm_method': ' ', 'text_summary': 'Is ``path`` a kernel directory?.', 'files_count': 3, 'files': ['test_kernelspec.py', 'kernelspec.py', 'test_client.py'], 'execution_path_count': 4, 'function_id_to_name_file': {'629': 'test_subclass(test_kernelspec.py)', '274': 'get_kernel_spec(kernelspec.py)', '267': '_find_spec_directory(kernelspec.py)', '256': '_is_kernel_dir(kernelspec.py)', '633': 'get_kernel_spec(test_kernelspec.py)', '549': 'setUp(test_client.py)', '623': 'test_get_kernel_spec(test_kernelspec.py)'}}, {'key': 2202, 'parent': 2694, 'tfidf_word': 'kernel name spec test find subclass get specs ', 'tfidf_method': '_get_kernel_spec_by_name get_all_specs test_find_all_specs test_subclass ', 'lda_word': ' specs,test,spec,name,get,', 'lda_method': ' get_kernel_spec_by_name,get_all_specs,test_subclass,test_find_all_specs,', 'lsi_word': ' get,specs,spec,test,name,', 'lsi_method': ' get_kernel_spec_by_name,get_all_specs,test_find_all_specs,test_subclass,', 'spm_method': ' ', 'text_summary': 'Returns a dict mapping kernel names to kernelspecs.', 'files_count': 2, 'files': ['test_kernelspec.py', 'kernelspec.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'621': 'test_find_all_specs(test_kernelspec.py)', '273': 'get_all_specs(kernelspec.py)', '269': '_get_kernel_spec_by_name(kernelspec.py)', '629': 'test_subclass(test_kernelspec.py)'}}, {'key': 2674, 'parent': 2694, 'tfidf_word': 'name subclass kernel spec specs init no such valid get ', 'tfidf_method': 'get_all_specs get_kernel_spec test_find_all_specs test_subclass NoSuchKernel _is_valid_kernel_name _get_kernel_spec_by_name __init__ ', 'lda_word': ' get,kernel,valid,name,test,', 'lda_method': ' get_all_specs,get_kernel_spec,test_find_all_specs,test_subclass,nosuchkernel,', 'lsi_word': ' get,kernel,specs,spec,test,', 'lsi_method': ' get_all_specs,get_kernel_spec,test_subclass,test_find_all_specs,get_kernel_spec_by_name,', 'spm_method': ' ', 'text_summary': 'Returns a dict mapping kernel names to kernelspecs. Check that a kernel name is valid. Returns a :class:`KernelSpec` instance for a given kernel_name.', 'files_count': 2, 'files': ['test_kernelspec.py', 'kernelspec.py'], 'execution_path_count': 8, 'function_id_to_name_file': {'621': 'test_find_all_specs(test_kernelspec.py)', '273': 'get_all_specs(kernelspec.py)', '274': 'get_kernel_spec(kernelspec.py)', '255': 'NoSuchKernel(kernelspec.py)', '278': '__init__(kernelspec.py)', '269': '_get_kernel_spec_by_name(kernelspec.py)', '257': '_is_valid_kernel_name(kernelspec.py)', '629': 'test_subclass(test_kernelspec.py)'}}, {'key': 2034, 'parent': 2746, 'tfidf_word': 'dir directory find init no such valid get kernel spec ', 'tfidf_method': 'get_kernel_spec get_kernel_spec setUp NoSuchKernel _is_kernel_dir _is_valid_kernel_name _find_spec_directory _get_kernel_spec_by_name __init__ ', 'lda_word': ' kernel,spec,get,name,set,', 'lda_method': ' get_kernel_spec,setup,find_spec_directory,is_kernel_dir,is_valid_kernel_name,', 'lsi_word': ' kernel,spec,get,set,name,', 'lsi_method': ' get_kernel_spec,setup,is_kernel_dir,find_spec_directory,is_valid_kernel_name,', 'spm_method': ' ', 'text_summary': 'Check that a kernel name is valid.', 'files_count': 2, 'files': ['test_client.py', 'kernelspec.py'], 'execution_path_count': 5, 'function_id_to_name_file': {'549': 'setUp(test_client.py)', '260': 'get_kernel_spec(kernelspec.py)', '274': 'get_kernel_spec(kernelspec.py)', '267': '_find_spec_directory(kernelspec.py)', '256': '_is_kernel_dir(kernelspec.py)', '255': 'NoSuchKernel(kernelspec.py)', '278': '__init__(kernelspec.py)', '269': '_get_kernel_spec_by_name(kernelspec.py)', '257': '_is_valid_kernel_name(kernelspec.py)'}}, {'key': 2727, 'parent': 2746, 'tfidf_word': 'init no set subclass such up valid get kernel spec ', 'tfidf_method': 'get_kernel_spec NoSuchKernel _is_valid_kernel_name _get_kernel_spec_by_name __init__ setUp test_get_kernel_spec test_subclass get_kernel_spec ', 'lda_word': ' kernel,spec,get,test,subclass,', 'lda_method': ' get_kernel_spec,setup,test_get_kernel_spec,init,get_kernel_spec_by_name,', 'lsi_word': ' kernel,get,spec,name,test,', 'lsi_method': ' get_kernel_spec,get_kernel_spec_by_name,nosuchkernel,init,is_valid_kernel_name,', 'spm_method': ' ', 'text_summary': 'Check that a kernel name is valid. Returns a :class:`KernelSpec` instance for a given kernel_name.', 'files_count': 3, 'files': ['test_kernelspec.py', 'kernelspec.py', 'test_client.py'], 'execution_path_count': 16, 'function_id_to_name_file': {'633': 'get_kernel_spec(test_kernelspec.py)', '274': 'get_kernel_spec(kernelspec.py)', '278': '__init__(kernelspec.py)', '255': 'NoSuchKernel(kernelspec.py)', '269': '_get_kernel_spec_by_name(kernelspec.py)', '257': '_is_valid_kernel_name(kernelspec.py)', '629': 'test_subclass(test_kernelspec.py)', '549': 'setUp(test_client.py)', '623': 'test_get_kernel_spec(test_kernelspec.py)'}}, {'key': 1728, 'parent': 2267, 'tfidf_word': 'adapt deserialize recv utcnow handle send test ', 'tfidf_method': 'utcnow deserialize recv adapt handle test_send ', 'lda_word': ' adapt,utcnow,recv,deserialize,handle,', 'lda_method': ' deserialize,adapt,recv,utcnow,test_send,', 'lsi_word': ' utcnow,recv,deserialize,adapt,send,', 'lsi_method': ' utcnow,deserialize,adapt,recv,handle,', 'spm_method': ' ', 'text_summary': '', 'files_count': 4, 'files': ['test_session.py', 'session.py', 'adapter.py', 'forward.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'694': 'test_send(test_session.py)', '479': 'recv(session.py)', '474': 'deserialize(session.py)', '50': 'adapt(adapter.py)', '450': 'utcnow(session.py)', '492': 'handle(forward.py)'}}, {'key': 1923, 'parent': 2267, 'tfidf_word': 'adapt deserialize utcnow test send raw serialize unserialize ', 'tfidf_method': 'utcnow deserialize adapt unserialize test_send test_send_raw test_serialize ', 'lda_word': ' adapt,deserialize,utcnow,test,send,', 'lda_method': ' deserialize,utcnow,adapt,test_serialize,unserialize,', 'lsi_word': ' deserialize,utcnow,adapt,test,send,', 'lsi_method': ' adapt,utcnow,deserialize,test_serialize,test_send,', 'spm_method': ' ', 'text_summary': '', 'files_count': 3, 'files': ['test_session.py', 'session.py', 'adapter.py'], 'execution_path_count': 4, 'function_id_to_name_file': {'694': 'test_send(test_session.py)', '474': 'deserialize(session.py)', '50': 'adapt(adapter.py)', '450': 'utcnow(session.py)', '695': 'test_send_raw(test_session.py)', '484': 'unserialize(session.py)', '696': 'test_serialize(test_session.py)'}}, {'key': 908, 'parent': 2357, 'tfidf_word': 'EP: 908, Name: test_default_version &rarr; adapt &rarr; utcnow', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1928, 'parent': 2357, 'tfidf_word': 'adapt utcnow test send handle interrupt kernel tracking ', 'tfidf_method': 'utcnow send adapt interrupt_kernel handle test_send test_tracking ', 'lda_word': ' utcnow,adapt,send,kernel,interrupt,', 'lda_method': ' adapt,send,utcnow,handle,test_tracking,', 'lsi_word': ' send,utcnow,adapt,test,tracking,', 'lsi_method': ' send,utcnow,adapt,test_tracking,handle,', 'spm_method': ' ', 'text_summary': 'Return timezone-aware UTC timestamp.', 'files_count': 5, 'files': ['test_session.py', 'session.py', 'adapter.py', 'forward.py', 'manager.py'], 'execution_path_count': 4, 'function_id_to_name_file': {'698': 'test_tracking(test_session.py)', '480': 'send(session.py)', '50': 'adapt(adapter.py)', '450': 'utcnow(session.py)', '492': 'handle(forward.py)', '328': 'interrupt_kernel(manager.py)', '694': 'test_send(test_session.py)'}}, {'key': 2185, 'parent': 2763, 'tfidf_word': 'app load test write close connection file localhost port ', 'tfidf_method': 'write_connection_file test_app_load_connection_file close close ports localhost close close close ', 'lda_word': ' file,connection,write,close,test,', 'lda_method': ' write_connection_file,test_app_load_connection_file,close,localhost,port,', 'lsi_word': ' connection,file,test,load,write,', 'lsi_method': ' write_connection_file,test_app_load_connection_file,close,localhost,port,', 'spm_method': ' ', 'text_summary': 'test `ipython console --existing` loads a connection file.', 'files_count': 5, 'files': ['test_connect.py', 'connect.py', 'channels.py', 'localinterfaces.py', 'threaded.py'], 'execution_path_count': 7, 'function_id_to_name_file': {'559': 'test_app_load_connection_file(test_connect.py)', '191': 'write_connection_file(connect.py)', '109': 'close(channels.py)', '83': 'close(channels.py)', '315': 'localhost(localinterfaces.py)', '730': 'close(threaded.py)', '132': 'close(channels.py)', '211': 'ports(connect.py)', '718': 'close(threaded.py)'}}, {'key': 2762, 'parent': 2763, 'tfidf_word': 'test close load session connection file write kn localhost port ', 'tfidf_method': 'test_load_connection_file_session test_load_connection_file_session_with_kn test_write_connection_file close close ports localhost close close close ', 'lda_word': ' connection,file,write,test,close,', 'lda_method': ' port,write_connection_file,test_load_connection_file_session,test_load_connection_file_session_with_kn,close,', 'lsi_word': ' connection,file,write,test,close,', 'lsi_method': ' write_connection_file,close,test_load_connection_file_session_with_kn,test_write_connection_file,test_load_connection_file_session,', 'spm_method': ' ', 'text_summary': 'Write connection info to JSON dict in self.connection_file. return ip for localhost (almost always 127.0.0.1) test load_connection_file() after.', 'files_count': 5, 'files': ['test_connect.py', 'connect.py', 'channels.py', 'localinterfaces.py', 'threaded.py'], 'execution_path_count': 21, 'function_id_to_name_file': {'565': 'test_load_connection_file_session_with_kn(test_connect.py)', '191': 'write_connection_file(connect.py)', '109': 'close(channels.py)', '83': 'close(channels.py)', '315': 'localhost(localinterfaces.py)', '730': 'close(threaded.py)', '132': 'close(channels.py)', '211': 'ports(connect.py)', '718': 'close(threaded.py)', '570': 'test_write_connection_file(test_connect.py)', '564': 'test_load_connection_file_session(test_connect.py)'}}, {'key': 2412, 'parent': 2778, 'tfidf_word': 'history send recv digest clone handle raw serialize unserialize zero ', 'tfidf_method': 'deserialize recv test_send unserialize handle test_clone test_cull_digest_history test_send_raw test_serialize test_zero_digest_history ', 'lda_word': ' digest,deserialize,add,history,cull,', 'lda_method': ' deserialize,add_digest,cull_digest_history,handle,test_send_raw,', 'lsi_word': ' digest,history,cull,add,test,', 'lsi_method': ' cull_digest_history,add_digest,deserialize,recv,test_send,', 'spm_method': ' ', 'text_summary': 'cull the digest history.', 'files_count': 3, 'files': ['test_session.py', 'session.py', 'forward.py'], 'execution_path_count': 9, 'function_id_to_name_file': {'686': 'test_clone(test_session.py)', '458': '_add_digest(session.py)', '460': '_cull_digest_history(session.py)', '700': 'test_zero_digest_history(test_session.py)', '687': 'test_cull_digest_history(test_session.py)', '694': 'test_send(test_session.py)', '479': 'recv(session.py)', '474': 'deserialize(session.py)', '492': 'handle(forward.py)', '695': 'test_send_raw(test_session.py)', '484': 'unserialize(session.py)', '696': 'test_serialize(test_session.py)'}}, {'key': 2777, 'parent': 2778, 'tfidf_word': 'manager app flush native permission tunnel io cleanup code restarter ', 'tfidf_method': 'test_find_connection_file_relative finish_shutdown cleanup_resources test_mixin_record_random_ports test_secure_write update_msg_type check_user_only_permissions fetch_win32_permissions test_kernelapp_lifecycle setUp ', 'lda_word': ' kernel,client,test,handle,send,', 'lda_method': ' start,test_send,tunnel_to_kernel,select_random_ports,run_lifecycle,', 'lsi_word': ' kernel,test,lifecycle,start,tcp,', 'lsi_method': ' init,get_tcp_km,check_packers,test_tcp_lifecycle,utcnow,', 'spm_method': ' ', 'text_summary': "Subclasses may override  Prepares a kernel for startup in a separate process. Prepares a kernel for startup in a separate process. return ip for localhost (almost always 127.0.0.1)   Ensure that a sequence of kernel startups doesn't break anything. Sends a signal to the process group of the kernel (this. Pass a message to the ZMQ socket to send. This method is called in the ioloop thread when a message arrives. Return the connection info as a dict. Subclasses may override Start the polling of the kernel. Ensure that a sequence of kernel startups doesn't break anything. test `ipython console --existing` loads a connection file. find a connection file, and return its absolute path. return ip for localhost (almost always 127.0.0.1)      find a connection file, and return its absolute path. tunnel connections to a kernel via ssh. For tests, create a file to indicate that we've started. handle kernel info reply. Get the hb channel object for this kernel. Returns the id to associate with the kernel for this request. Send a raw message via ident path. Make a blocking client connected to my kernel. Get a message from the stdin channel. Immediately processes all pending messages on this channel. Return the number of running kernels. Get the single KernelManager object for a kernel by its uuid. Interrupts the kernel by sending it a signal. Get a message from the shell channel. Create an ssh tunnel using command-line ssh that connects port lport. Get a message from the iopub channel. This is run in the ioloop thread when the kernel info reply is received. default function for packing datetime objects in JSON. Start the polling of the kernel. Send a shutdown request via control channel. test load_connection_file() after. Sends an interrupt event using the specified handle. test that messages receive unique ids. Forgets randomly assigned port numbers and cleans up the connection file.", 'files_count': 35, 'files': ['test_connect.py', 'consoleapp.py', 'session.py', 'connect.py', 'runapp.py', 'test_multikernelmanager.py', 'multikernelmanager.py', 'tunnel.py', 'threaded.py', 'channels.py', 'test_ssh.py', 'client.py', 'managerabc.py', 'channelsabc.py', 'test_session.py', 'forward.py', 'manager.py', 'test_kernelspec.py', 'kernelspec.py', 'test_kernelmanager.py', 'jsonutil.py', 'test_manager.py', 'utils.py', 'restarter.py', 'signalkernel.py', 'kernelspecapp.py', 'kernelapp.py', 'test_adapter.py', 'test_jsonutil.py', 'localinterfaces.py', 'adapter.py', 'test_kernelapp.py', 'test_client.py', 'win_interrupt.py', 'launcher.py'], 'execution_path_count': 396, 'function_id_to_name_file': {'559': 'test_app_load_connection_file(test_connect.py)', '558': 'DummyConsoleApp(test_connect.py)', '214': 'JupyterConsoleApp(consoleapp.py)', '441': 'Session(session.py)', '188': 'ConnectionFileMixin(connect.py)', '560': 'test_find_connection_file(test_connect.py)', '564': 'test_load_connection_file_session(test_connect.py)', '565': 'test_load_connection_file_session_with_kn(test_connect.py)', '213': 'IPythonConsoleApp(consoleapp.py)', '434': 'RunApp(runapp.py)', '665': 'test_start_sequence_tcp_kernels(test_multikernelmanager.py)', '655': '_get_tcp_km(test_multikernelmanager.py)', '392': '__init__(multikernelmanager.py)', '666': 'test_tcp_cinfo(test_multikernelmanager.py)', '668': 'test_tcp_lifecycle_with_kernel_id(test_multikernelmanager.py)', '661': 'test_shutdown_all(test_multikernelmanager.py)', '663': 'test_start_parallel_thread_kernels(test_multikernelmanager.py)', '658': 'tcp_lifecycle_with_loop(test_multikernelmanager.py)', '667': 'test_tcp_lifecycle(test_multikernelmanager.py)', '662': 'test_start_parallel_process_kernels(test_multikernelmanager.py)', '190': 'tunnel_to_kernel(connect.py)', '503': 'select_random_ports(tunnel.py)', '718': 'close(threaded.py)', '730': 'close(threaded.py)', '132': 'close(channels.py)', '109': 'close(channels.py)', '83': 'close(channels.py)', '211': 'ports(connect.py)', '701': 'test_random_ports(test_ssh.py)', '386': 'shutdown_all(multikernelmanager.py)', '383': 'finish_shutdown(multikernelmanager.py)', '410': 'get_kernel(multikernelmanager.py)', '394': '_check_kernel_id(multikernelmanager.py)', '388': 'signal_kernel(multikernelmanager.py)', '385': 'restart_kernel(multikernelmanager.py)', '384': 'interrupt_kernel(multikernelmanager.py)', '387': 'shutdown_kernel(multikernelmanager.py)', '421': 'shutdown_kernel(multikernelmanager.py)', '420': 'shutdown_all(multikernelmanager.py)', '104': 'wait_for_ready(client.py)', '103': 'is_alive(client.py)', '412': 'is_alive(multikernelmanager.py)', '373': 'is_alive(managerabc.py)', '140': 'is_alive(channelsabc.py)', '732': 'is_alive(threaded.py)', '86': 'is_alive(channels.py)', '112': 'is_alive(channels.py)', '123': 'wait_for_ready(client.py)', '165': 'is_alive(client.py)', '648': 'test_start_parallel_thread_kernels(test_multikernelmanager.py)', '643': 'tcp_lifecycle_with_loop(test_multikernelmanager.py)', '642': 'raw_tcp_lifecycle(test_multikernelmanager.py)', '641': '_run_lifecycle(test_multikernelmanager.py)', '647': 'test_start_parallel_process_kernels(test_multikernelmanager.py)', '652': 'test_tcp_lifecycle(test_multikernelmanager.py)', '653': 'test_tcp_lifecycle_with_kernel_id(test_multikernelmanager.py)', '694': 'test_send(test_session.py)', '479': 'recv(session.py)', '474': 'deserialize(session.py)', '483': 'sign(session.py)', '492': 'handle(forward.py)', '695': 'test_send_raw(test_session.py)', '484': 'unserialize(session.py)', '696': 'test_serialize(test_session.py)', '480': 'send(session.py)', '440': 'Message(session.py)', '698': 'test_tracking(test_session.py)', '328': 'interrupt_kernel(manager.py)', '482': 'serialize(session.py)', '135': 'run(channels.py)', '128': '_create_socket(channels.py)', '84': 'get_msg(channels.py)', '82': '_recv(channels.py)', '101': 'get_stdin_msg(client.py)', '85': 'get_msgs(channels.py)', '99': 'get_iopub_msg(client.py)', '110': 'get_msg(channels.py)', '108': '_recv(channels.py)', '111': 'get_msgs(channels.py)', '620': 'test_cant_install_kernel_spec(test_kernelspec.py)', '275': 'install_kernel_spec(kernelspec.py)', '268': '_get_destination_dir(kernelspec.py)', '257': '_is_valid_kernel_name(kernelspec.py)', '625': 'test_install_kernel_spec_prefix(test_kernelspec.py)', '261': 'install_kernel_spec(kernelspec.py)', '624': 'test_install_kernel_spec(test_kernelspec.py)', '614': 'test_start_sequence_process_kernels(test_kernelmanager.py)', '610': '_run_signaltest_lifecycle(test_kernelmanager.py)', '615': 'execute(test_kernelmanager.py)', '609': '_prepare_kernel(test_kernelmanager.py)', '611': 'test_start_parallel_process_kernels(test_kernelmanager.py)', '613': 'test_start_sequence_kernels(test_kernelmanager.py)', '612': 'test_start_parallel_thread_kernels(test_kernelmanager.py)', '398': '_kernel_manager_class_changed(multikernelmanager.py)', '396': '_create_kernel_manager_factory(multikernelmanager.py)', '424': 'create_kernel_manager(multikernelmanager.py)', '397': '_find_available_port(multikernelmanager.py)', '395': '_context_default(multikernelmanager.py)', '399': '_kernel_manager_factory_default(multikernelmanager.py)', '215': '__init__(consoleapp.py)', '485': '__init__(session.py)', '457': '__init__(session.py)', '465': '_new_auth(session.py)', '459': '_check_packers(session.py)', '450': 'utcnow(session.py)', '244': 'squash_dates(jsonutil.py)', '90': 'AsyncKernelClient(client.py)', '147': 'KernelClient(client.py)', '139': 'HBChannelABC(channelsabc.py)', '138': 'ChannelABC(channelsabc.py)', '116': 'BlockingKernelClient(client.py)', '322': 'start_new_async_kernel(manager.py)', '319': 'AsyncKernelManager(manager.py)', '320': 'KernelManager(manager.py)', '224': 'AsyncIOLoopKernelManager(manager.py)', '225': 'IOLoopKernelManager(manager.py)', '635': 'test_connection_file_real_path(test_manager.py)', '657': '_run_lifecycle(test_multikernelmanager.py)', '704': 'execute(utils.py)', '155': 'execute(client.py)', '148': 'validate_string_dict(client.py)', '689': 'test_datetimes_msgpack(test_session.py)', '679': '_datetime_test(test_session.py)', '688': 'test_datetimes(test_session.py)', '690': 'test_datetimes_pickle(test_session.py)', '734': 'send(threaded.py)', '738': 'thread_send(threaded.py)', '664': 'test_start_sequence_ipc_kernels(test_multikernelmanager.py)', '654': '_get_ipc_km(test_multikernelmanager.py)', '660': 'test_ipc_lifecycle(test_multikernelmanager.py)', '659': 'test_ipc_cinfo(test_multikernelmanager.py)', '423': 'start_kernel(multikernelmanager.py)', '415': 'pre_start_kernel(multikernelmanager.py)', '380': 'DuplicateKernelError(multikernelmanager.py)', '414': 'new_kernel_id(multikernelmanager.py)', '389': 'start_kernel(multikernelmanager.py)', '238': 'start(restarter.py)', '430': 'poll(restarter.py)', '433': 'stop(restarter.py)', '428': '_fire_callbacks(restarter.py)', '510': 'do_execute(signalkernel.py)', '501': 'openssh_tunnel(tunnel.py)', '494': 'SSHException(tunnel.py)', '497': '_stop_tunnel(tunnel.py)', '475': 'feed_identities(session.py)', '330': 'restart_kernel(manager.py)', '202': 'cleanup_random_ports(connect.py)', '200': 'cleanup_connection_file(connect.py)', '567': 'test_mixin_cleanup_random_ports(test_connect.py)', '106': 'ZMQSocketChannel(channels.py)', '226': 'as_zmqstream(manager.py)', '233': 'wrapped(manager.py)', '568': 'test_mixin_record_random_ports(test_connect.py)', '557': 'DummyConfigurable(test_connect.py)', '235': 'IOLoopKernelRestarter(restarter.py)', '426': 'KernelRestarter(restarter.py)', '234': 'AsyncIOLoopKernelRestarter(restarter.py)', '291': 'start(kernelspecapp.py)', '251': 'start(kernelapp.py)', '249': 'setup_signals(kernelapp.py)', '252': 'shutdown_handler(kernelapp.py)', '250': 'shutdown(kernelapp.py)', '248': 'log_connection_info(kernelapp.py)', '199': 'blocking_client(connect.py)', '208': 'get_connection_info(connect.py)', '725': 'stop_channels(threaded.py)', '684': 'test_bad_unpack(test_session.py)', '676': '_bad_unpacker(test_session.py)', '536': 'test_complete_request(test_adapter.py)', '517': 'adapt(test_adapter.py)', '562': 'test_find_connection_file_local(test_connect.py)', '189': 'find_connection_file(connect.py)', '493': 'SubHander(forward.py)', '490': 'Handler(forward.py)', '253': 'KernelSpec(kernelspec.py)', '114': 'send(channels.py)', '88': 'send(channels.py)', '575': 'test_date_default(test_jsonutil.py)', '241': 'date_default(jsonutil.py)', '240': '_ensure_tzinfo(jsonutil.py)', '597': 'test_subclasses(test_kernelmanager.py)', '703': 'AsyncKernelManagerWithCleanup(utils.py)', '595': 'test_signal_kernel_subprocesses(test_kernelmanager.py)', '598': 'execute(test_kernelmanager.py)', '702': 'AsyncKernelManagerSubclass(utils.py)', '591': 'transport(test_kernelmanager.py)', '606': 'test_templated_kspec_env(test_kernelmanager.py)', '599': '_env_test_body(test_kernelmanager.py)', '607': 'execute(test_kernelmanager.py)', '604': 'test_signal_kernel_subprocesses(test_kernelmanager.py)', '608': 'execute(test_kernelmanager.py)', '586': 'env(test_kernelmanager.py)', '712': 'stop(utils.py)', '711': 'start(utils.py)', '705': 'test_env(utils.py)', '630': 'test_validate_kernel_name(test_kernelspec.py)', '506': 'SignalTestApp(signalkernel.py)', '507': 'SignalTestKernel(signalkernel.py)', '627': 'test_remove_kernel_spec(test_kernelspec.py)', '617': '_install_sample_kernel(test_kernelspec.py)', '626': 'test_kernel_spec_priority(test_kernelspec.py)', '651': 'test_tcp_cinfo(test_multikernelmanager.py)', '640': '_run_cinfo(test_multikernelmanager.py)', '621': 'test_find_all_specs(test_kernelspec.py)', '622': 'test_find_kernel_specs(test_kernelspec.py)', '623': 'test_get_kernel_spec(test_kernelspec.py)', '619': 'tearDown(test_kernelspec.py)', '618': 'setUp(test_kernelspec.py)', '649': 'test_start_sequence_ipc_kernels(test_multikernelmanager.py)', '650': 'test_start_sequence_tcp_kernels(test_multikernelmanager.py)', '644': 'test_ipc_cinfo(test_multikernelmanager.py)', '315': 'localhost(localinterfaces.py)', '645': 'test_ipc_lifecycle(test_multikernelmanager.py)', '656': '_run_cinfo(test_multikernelmanager.py)', '569': 'test_secure_write(test_connect.py)', '573': 'check_user_only_permissions(test_connect.py)', '574': 'fetch_win32_permissions(test_connect.py)', '563': 'test_find_connection_file_relative(test_connect.py)', '561': 'test_find_connection_file_abspath(test_connect.py)', '539': 'test_input_request(test_adapter.py)', '537': 'test_display_data(test_adapter.py)', '540': 'test_inspect_reply(test_adapter.py)', '543': 'test_kernel_info_reply(test_adapter.py)', '542': 'test_inspect_request_token(test_adapter.py)', '535': 'test_complete_reply(test_adapter.py)', '541': 'test_inspect_request(test_adapter.py)', '538': 'test_execute_request(test_adapter.py)', '545': 'test_rename_type(test_adapter.py)', '544': 'test_no_adapt(test_adapter.py)', '546': 'test_same_version(test_adapter.py)', '514': 'V5toV4TestCase(test_adapter.py)', '512': 'AdapterTest(test_adapter.py)', '526': 'test_input_request(test_adapter.py)', '523': 'test_display_data(test_adapter.py)', '527': 'test_kernel_info_reply(test_adapter.py)', '530': 'test_object_info_reply_not_found(test_adapter.py)', '529': 'test_object_info_reply(test_adapter.py)', '531': 'test_object_info_request(test_adapter.py)', '521': 'test_complete_reply(test_adapter.py)', '522': 'test_complete_request(test_adapter.py)', '524': 'test_execute_reply(test_adapter.py)', '532': 'test_rename_type(test_adapter.py)', '525': 'test_execute_request(test_adapter.py)', '528': 'test_no_adapt(test_adapter.py)', '533': 'test_same_version(test_adapter.py)', '513': 'V4toV5TestCase(test_adapter.py)', '519': 'setUp(test_adapter.py)', '516': 'test_default_version(test_adapter.py)', '515': 'test_code_to_line_no_code(test_adapter.py)', '51': 'code_to_line(adapter.py)', '158': 'get_shell_msg(client.py)', '157': 'get_iopub_msg(client.py)', '710': '__exit__(utils.py)', '709': '__enter__(utils.py)', '580': 'test_kernelapp_lifecycle(test_kernelapp.py)', '579': '_launch(test_kernelapp.py)', '686': 'test_clone(test_session.py)', '473': 'clone(session.py)', '481': 'send_raw(session.py)', '683': 'test_bad_roundtrip(test_session.py)', '685': 'test_bad_unpacker(test_session.py)', '682': 'test_bad_packer(test_session.py)', '681': 'test_bad_pack(test_session.py)', '675': '_bad_packer(test_session.py)', '687': 'test_cull_digest_history(test_session.py)', '700': 'test_zero_digest_history(test_session.py)', '697': 'test_session_id(test_session.py)', '699': 'test_unique_msg_ids(test_session.py)', '445': 'msg_header(session.py)', '680': 'test_args(test_session.py)', '478': 'msg_id(session.py)', '674': 'TestSession(test_session.py)', '673': 'SessionTestCase(test_session.py)', '678': 'setUp(test_session.py)', '556': 'test_shutdown(test_client.py)', '548': '_check_reply(test_client.py)', '550': 'test_comm_info(test_client.py)', '555': 'test_kernel_info(test_client.py)', '551': 'test_complete(test_client.py)', '554': 'test_inspect(test_client.py)', '553': 'test_history(test_client.py)', '549': 'setUp(test_client.py)', '255': 'NoSuchKernel(kernelspec.py)', '117': 'reqrep(client.py)', '124': 'wrapped(client.py)', '150': '_handle_kernel_info_reply(client.py)', '125': 'HBChannel(channels.py)', '102': 'hb_channel(client.py)', '196': '_make_url(connect.py)', '91': 'reqrep(client.py)', '105': 'wrapped(client.py)', '80': 'ZMQSocketChannel(channels.py)', '154': 'control_channel(client.py)', '723': 'ioloop(threaded.py)', '160': 'hb_channel(client.py)', '171': 'stdin_channel(client.py)', '164': 'iopub_channel(client.py)', '168': 'shell_channel(client.py)', '740': 'send_interrupt(win_interrupt.py)', '334': '__del__(manager.py)', '293': 'start(kernelspecapp.py)', '294': 'path_key(kernelspecapp.py)', '735': 'start(threaded.py)', '720': 'start(threaded.py)', '141': 'start(channelsabc.py)', '432': 'start(restarter.py)', '288': 'start(kernelspecapp.py)', '89': 'start(channels.py)', '115': 'start(channels.py)', '290': 'start(kernelspecapp.py)', '438': 'parse_command_line(runapp.py)', '218': 'build_kernel_argv(consoleapp.py)', '308': '_only_once(localinterfaces.py)', '317': 'wrapped(localinterfaces.py)', '47': 'V4toV5(adapter.py)', '46': 'Adapter(adapter.py)', '77': 'object_info_request(adapter.py)', '52': 'extract_oname_v4(adapter.py)', '70': 'complete_request(adapter.py)', '75': 'kernel_info_reply(adapter.py)', '49': '_version_str_to_list(adapter.py)', '48': 'V5toV4(adapter.py)', '53': '__call__(adapter.py)', '54': 'handle_reply_status_error(adapter.py)', '57': 'update_msg_type(adapter.py)', '56': 'update_metadata(adapter.py)', '55': 'update_header(adapter.py)', '247': 'initialize(kernelapp.py)', '246': '_record_started(kernelapp.py)', '585': 'config(test_kernelmanager.py)', '262': 'install_native_kernel_spec(kernelspec.py)', '276': 'install_native_kernel_spec(kernelspec.py)', '265': 'to_json(kernelspec.py)', '264': 'to_dict(kernelspec.py)', '449': 'test_msg2obj(session.py)', '453': '__init__(session.py)', '470': '_signature_scheme_changed(session.py)', '463': '_key_default(session.py)', '447': 'new_id_bytes(session.py)', '462': '_key_changed(session.py)', '443': 'default_secure(session.py)', '469': '_session_default(session.py)', '446': 'new_id(session.py)', '413': 'list_kernel_ids(multikernelmanager.py)', '721': 'stop(threaded.py)', '724': 'start_channels(threaded.py)', '722': '_check_kernel_info_reply(threaded.py)', '716': '__init__(threaded.py)', '416': 'remove_kernel(multikernelmanager.py)', '713': 'IOLoopThread(threaded.py)', '714': 'ThreadedKernelClient(threaded.py)', '715': 'ThreadedZMQSocketChannel(threaded.py)', '731': 'flush(threaded.py)', '727': '_flush(threaded.py)', '418': 'request_shutdown(multikernelmanager.py)', '402': 'cleanup_resources(multikernelmanager.py)', '408': 'finish_shutdown(multikernelmanager.py)', '393': '__len__(multikernelmanager.py)', '198': '_session_default(connect.py)', '298': 'launch_kernel(launcher.py)', '739': 'create_interrupt_event(win_interrupt.py)', '741': 'SECURITY_ATTRIBUTES(win_interrupt.py)', '509': '__init__(signalkernel.py)', '278': '__init__(kernelspec.py)', '127': '__init__(channels.py)', '126': 'InvalidPortNumber(channels.py)', '107': '__init__(channels.py)', '81': '__init__(channels.py)', '726': '__init__(threaded.py)', '737': 'setup_stream(threaded.py)', '728': '_handle_recv(threaded.py)', '729': 'call_handlers(threaded.py)', '136': 'stop(channels.py)', '133': 'is_beating(channels.py)', '145': 'time_to_dead(channelsabc.py)', '131': 'call_handlers(channels.py)', '130': '_poll(channels.py)'}}, {'key': 194, 'parent': 1872, 'tfidf_word': 'EP: 194, Name: initialize &rarr; handle_sigint &rarr; interrupt_kernel &rarr; send', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1870, 'parent': 1872, 'tfidf_word': 'handle initialize kernel send sigint interrupt ', 'tfidf_method': 'interrupt_kernel handle_sigint initialize send_interrupt send ', 'lda_word': ' handle,interrupt,sigint,send,kernel,', 'lda_method': ' handle_sigint,initialize,interrupt_kernel,send_interrupt,send,', 'lsi_word': ' interrupt,sigint,kernel,send,handle,', 'lsi_method': ' initialize,interrupt_kernel,handle_sigint,send_interrupt,send,', 'spm_method': ' ', 'text_summary': 'Interrupts the kernel by sending it a signal.', 'files_count': 4, 'files': ['runapp.py', 'manager.py', 'channels.py', 'win_interrupt.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'437': 'initialize(runapp.py)', '435': 'handle_sigint(runapp.py)', '355': 'interrupt_kernel(manager.py)', '88': 'send(channels.py)', '740': 'send_interrupt(win_interrupt.py)'}}, {'key': 47, 'parent': 1766, 'tfidf_word': 'EP: 47, Name: tunnel_to_kernel &rarr; try_passwordless_ssh &rarr; _try_passwordless_paramiko &rarr; msg &rarr; msg &rarr; extract_header', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 49, 'parent': 1766, 'tfidf_word': 'EP: 49, Name: tunnel_to_kernel &rarr; try_passwordless_ssh &rarr; _try_passwordless_paramiko &rarr; msg &rarr; msg &rarr; msg &rarr; extract_header', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 41, 'parent': 1993, 'tfidf_word': 'EP: 41, Name: tunnel_to_kernel &rarr; try_passwordless_ssh &rarr; _try_passwordless_paramiko &rarr; msg &rarr; extract_header', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1765, 'parent': 1993, 'tfidf_word': 'extract header kernel paramiko ssh tunnel passwordless try msg ', 'tfidf_method': 'tunnel_to_kernel extract_header msg _try_passwordless_paramiko try_passwordless_ssh msg msg ', 'lda_word': ' passwordless,try,msg,tunnel,extract,', 'lda_method': ' msg,try_passwordless_paramiko,tunnel_to_kernel,try_passwordless_ssh,extract_header,', 'lsi_word': ' msg,passwordless,try,kernel,header,', 'lsi_method': ' msg,extract_header,try_passwordless_paramiko,try_passwordless_ssh,tunnel_to_kernel,', 'spm_method': '  &#187; tunnel_to_kernel(connect.py) &rarr; try_passwordless_ssh(tunnel.py) &rarr; _try_passwordless_paramiko(tunnel.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br>', 'text_summary': 'tunnel connections to a kernel via ssh. Try passwordless login with paramiko.', 'files_count': 4, 'files': ['connect.py', 'tunnel.py', 'test_adapter.py', 'session.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'190': 'tunnel_to_kernel(connect.py)', '504': 'try_passwordless_ssh(tunnel.py)', '499': '_try_passwordless_paramiko(tunnel.py)', '520': 'msg(test_adapter.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '534': 'msg(test_adapter.py)'}}, {'key': 482, 'parent': 1899, 'tfidf_word': 'EP: 482, Name: iopub_channel &rarr; connect_iopub &rarr; _create_connected_socket &rarr; _make_url', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 596, 'parent': 1899, 'tfidf_word': 'EP: 596, Name: IOLoopKernelManager &rarr; connect_iopub &rarr; _create_connected_socket &rarr; _make_url', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 599, 'parent': 1909, 'tfidf_word': 'EP: 599, Name: IOLoopKernelManager &rarr; connect_hb &rarr; _create_connected_socket &rarr; _make_url', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 609, 'parent': 1909, 'tfidf_word': 'EP: 609, Name: AsyncIOLoopKernelManager &rarr; connect_hb &rarr; _create_connected_socket &rarr; _make_url', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 297, 'parent': 2274, 'tfidf_word': 'EP: 297, Name: __del__ &rarr; _close_control_socket &rarr; _create_connected_socket &rarr; _make_url', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 350, 'parent': 2274, 'tfidf_word': 'EP: 350, Name: interrupt_kernel &rarr; _create_connected_socket &rarr; _make_url', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 9, 'parent': 1845, 'tfidf_word': 'EP: 9, Name: is_beating &rarr; is_alive &rarr; has_kernel &rarr; _launch_kernel', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 100, 'parent': 1845, 'tfidf_word': 'EP: 100, Name: stop_channels &rarr; is_alive &rarr; has_kernel &rarr; _launch_kernel', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 938, 'parent': 1537, 'tfidf_word': 'EP: 938, Name: test_execute_reply &rarr; msg &rarr; msg &rarr; msg &rarr; msg_header &rarr; msg_id', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1536, 'parent': 1537, 'tfidf_word': 'raw kernel type interrupt identity feed execute complete version msg ', 'tfidf_method': 'interrupt_kernel test_execute_request test_no_adapt test_rename_type test_same_version test_feed_identities test_msg test_send test_send_raw test_serialize ', 'lda_word': ' msg,header,test,send,execute,', 'lda_method': ' msg,msg_header,msg_id,test_rename_type,test_send,', 'lsi_word': ' msg,header,test,send,raw,', 'lsi_method': ' msg,msg_id,msg_header,test_rename_type,test_send,', 'spm_method': ' ', 'text_summary': 'message format.', 'files_count': 5, 'files': ['test_adapter.py', 'session.py', 'test_session.py', 'manager.py', 'client.py'], 'execution_path_count': 11, 'function_id_to_name_file': {'525': 'test_execute_request(test_adapter.py)', '520': 'msg(test_adapter.py)', '534': 'msg(test_adapter.py)', '476': 'msg(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '532': 'test_rename_type(test_adapter.py)', '528': 'test_no_adapt(test_adapter.py)', '533': 'test_same_version(test_adapter.py)', '695': 'test_send_raw(test_session.py)', '692': 'test_feed_identities(test_session.py)', '694': 'test_send(test_session.py)', '696': 'test_serialize(test_session.py)', '693': 'test_msg(test_session.py)', '328': 'interrupt_kernel(manager.py)', '166': 'is_complete(client.py)'}}, {'key': 1003, 'parent': 1657, 'tfidf_word': 'EP: 1003, Name: test_complete_request &rarr; msg &rarr; msg &rarr; msg_header &rarr; msg_id', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1656, 'parent': 1657, 'tfidf_word': 'adapt execute feed identity raw rename request type version msg ', 'tfidf_method': 'msg_header msg_id msg test_execute_request test_no_adapt test_rename_type test_same_version test_feed_identities test_send test_send_raw ', 'lda_word': ' msg,header,test,adapt,send,', 'lda_method': ' msg,msg_id,msg_header,test_no_adapt,test_feed_identities,', 'lsi_word': ' msg,test,header,send,raw,', 'lsi_method': ' msg,msg_header,msg_id,test_no_adapt,test_send_raw,', 'spm_method': ' ', 'text_summary': 'Empty', 'files_count': 3, 'files': ['test_adapter.py', 'session.py', 'test_session.py'], 'execution_path_count': 7, 'function_id_to_name_file': {'538': 'test_execute_request(test_adapter.py)', '534': 'msg(test_adapter.py)', '476': 'msg(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '545': 'test_rename_type(test_adapter.py)', '546': 'test_same_version(test_adapter.py)', '544': 'test_no_adapt(test_adapter.py)', '695': 'test_send_raw(test_session.py)', '694': 'test_send(test_session.py)', '692': 'test_feed_identities(test_session.py)'}}, {'key': 1005, 'parent': 1550, 'tfidf_word': 'EP: 1005, Name: test_complete_request &rarr; msg &rarr; msg &rarr; msg &rarr; msg_header &rarr; msg_id', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1549, 'parent': 1550, 'tfidf_word': 'raw kernel type interrupt identity feed execute complete version msg ', 'tfidf_method': 'interrupt_kernel test_execute_request test_no_adapt test_rename_type test_same_version test_feed_identities test_msg test_send test_send_raw test_serialize ', 'lda_word': ' msg,test,header,send,feed,', 'lda_method': ' msg,msg_id,msg_header,test_serialize,is_complete,', 'lsi_word': ' msg,header,test,send,raw,', 'lsi_method': ' msg,msg_header,msg_id,test_execute_request,test_rename_type,', 'spm_method': ' ', 'text_summary': 'scrub the front for zmq IDENTITIES.', 'files_count': 5, 'files': ['test_adapter.py', 'session.py', 'test_session.py', 'manager.py', 'client.py'], 'execution_path_count': 11, 'function_id_to_name_file': {'538': 'test_execute_request(test_adapter.py)', '534': 'msg(test_adapter.py)', '520': 'msg(test_adapter.py)', '476': 'msg(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '545': 'test_rename_type(test_adapter.py)', '544': 'test_no_adapt(test_adapter.py)', '546': 'test_same_version(test_adapter.py)', '695': 'test_send_raw(test_session.py)', '692': 'test_feed_identities(test_session.py)', '694': 'test_send(test_session.py)', '696': 'test_serialize(test_session.py)', '693': 'test_msg(test_session.py)', '328': 'interrupt_kernel(manager.py)', '166': 'is_complete(client.py)'}}, {'key': 946, 'parent': 1648, 'tfidf_word': 'EP: 946, Name: test_complete_reply &rarr; msg &rarr; msg &rarr; msg_header &rarr; msg_id', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1647, 'parent': 1648, 'tfidf_word': 'adapt complete feed identity raw rename reply type version msg ', 'tfidf_method': 'msg test_complete_request test_execute_reply test_execute_request test_no_adapt test_rename_type test_same_version test_feed_identities test_send test_send_raw ', 'lda_word': ' msg,header,test,execute,request,', 'lda_method': ' msg,msg_header,msg_id,test_send_raw,test_send,', 'lsi_word': ' msg,header,test,request,execute,', 'lsi_method': ' msg,msg_header,msg_id,test_complete_request,test_same_version,', 'spm_method': ' ', 'text_summary': 'Empty', 'files_count': 3, 'files': ['test_adapter.py', 'session.py', 'test_session.py'], 'execution_path_count': 9, 'function_id_to_name_file': {'522': 'test_complete_request(test_adapter.py)', '520': 'msg(test_adapter.py)', '476': 'msg(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '524': 'test_execute_reply(test_adapter.py)', '525': 'test_execute_request(test_adapter.py)', '532': 'test_rename_type(test_adapter.py)', '533': 'test_same_version(test_adapter.py)', '528': 'test_no_adapt(test_adapter.py)', '695': 'test_send_raw(test_session.py)', '694': 'test_send(test_session.py)', '692': 'test_feed_identities(test_session.py)'}}, {'key': 730, 'parent': 1830, 'tfidf_word': 'EP: 730, Name: test_msg &rarr; msg &rarr; msg_header &rarr; msg_id', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 740, 'parent': 1830, 'tfidf_word': 'EP: 740, Name: test_serialize &rarr; msg &rarr; msg_header &rarr; msg_id', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 947, 'parent': 1633, 'tfidf_word': 'EP: 947, Name: test_complete_reply &rarr; msg &rarr; msg &rarr; msg &rarr; extract_header', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1632, 'parent': 1633, 'tfidf_word': 'msg adapt complete feed identity raw rename reply type version ', 'tfidf_method': 'msg test_complete_request test_execute_reply test_execute_request test_no_adapt test_rename_type test_same_version test_feed_identities test_send test_send_raw ', 'lda_word': ' msg,extract,test,header,request,', 'lda_method': ' msg,extract_header,test_no_adapt,test_execute_request,test_complete_request,', 'lsi_word': ' msg,extract,test,header,request,', 'lsi_method': ' msg,extract_header,test_complete_request,test_send,test_execute_reply,', 'spm_method': ' ', 'text_summary': '', 'files_count': 3, 'files': ['test_adapter.py', 'session.py', 'test_session.py'], 'execution_path_count': 9, 'function_id_to_name_file': {'522': 'test_complete_request(test_adapter.py)', '520': 'msg(test_adapter.py)', '534': 'msg(test_adapter.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '524': 'test_execute_reply(test_adapter.py)', '525': 'test_execute_request(test_adapter.py)', '532': 'test_rename_type(test_adapter.py)', '533': 'test_same_version(test_adapter.py)', '528': 'test_no_adapt(test_adapter.py)', '695': 'test_send_raw(test_session.py)', '694': 'test_send(test_session.py)', '692': 'test_feed_identities(test_session.py)'}}, {'key': 868, 'parent': 1804, 'tfidf_word': 'EP: 868, Name: test_send_raw &rarr; msg &rarr; msg &rarr; extract_header', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1802, 'parent': 1804, 'tfidf_word': 'extract header test feed identity send serialize msg ', 'tfidf_method': 'extract_header msg msg test_feed_identities test_msg test_send test_serialize ', 'lda_word': ' msg,header,test,extract,serialize,', 'lda_method': ' msg,extract_header,test_send,test_serialize,test_feed_identities,', 'lsi_word': ' msg,header,test,extract,identity,', 'lsi_method': ' msg,extract_header,test_msg,test_send,test_serialize,', 'spm_method': ' ', 'text_summary': '', 'files_count': 3, 'files': ['test_session.py', 'test_adapter.py', 'session.py'], 'execution_path_count': 4, 'function_id_to_name_file': {'692': 'test_feed_identities(test_session.py)', '534': 'msg(test_adapter.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '694': 'test_send(test_session.py)', '693': 'test_msg(test_session.py)', '696': 'test_serialize(test_session.py)'}}, {'key': 1013, 'parent': 1621, 'tfidf_word': 'EP: 1013, Name: test_inspect_request &rarr; msg &rarr; msg &rarr; msg &rarr; extract_header', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1620, 'parent': 1621, 'tfidf_word': 'msg adapt execute feed identity raw rename reply type version ', 'tfidf_method': 'msg test_complete_reply test_complete_request test_execute_request test_no_adapt test_rename_type test_same_version test_feed_identities test_send test_send_raw ', 'lda_word': ' msg,extract,test,header,send,', 'lda_method': ' msg,extract_header,test_send_raw,test_execute_request,test_feed_identities,', 'lsi_word': ' msg,test,extract,header,request,', 'lsi_method': ' msg,extract_header,test_send_raw,test_send,test_no_adapt,', 'spm_method': ' ', 'text_summary': '', 'files_count': 3, 'files': ['test_adapter.py', 'session.py', 'test_session.py'], 'execution_path_count': 9, 'function_id_to_name_file': {'535': 'test_complete_reply(test_adapter.py)', '534': 'msg(test_adapter.py)', '520': 'msg(test_adapter.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '536': 'test_complete_request(test_adapter.py)', '538': 'test_execute_request(test_adapter.py)', '545': 'test_rename_type(test_adapter.py)', '546': 'test_same_version(test_adapter.py)', '544': 'test_no_adapt(test_adapter.py)', '695': 'test_send_raw(test_session.py)', '694': 'test_send(test_session.py)', '692': 'test_feed_identities(test_session.py)'}}, {'key': 915, 'parent': 1805, 'tfidf_word': 'EP: 915, Name: test_same_version &rarr; msg &rarr; msg &rarr; extract_header', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1803, 'parent': 1805, 'tfidf_word': 'extract header test send feed identity raw serialize msg ', 'tfidf_method': 'extract_header msg msg test_feed_identities test_msg test_send test_send_raw test_serialize ', 'lda_word': ' msg,header,test,extract,send,', 'lda_method': ' msg,extract_header,test_msg,test_send,test_feed_identities,', 'lsi_word': ' msg,extract,header,test,send,', 'lsi_method': ' msg,extract_header,test_feed_identities,test_msg,test_send,', 'spm_method': ' ', 'text_summary': '', 'files_count': 3, 'files': ['test_session.py', 'test_adapter.py', 'session.py'], 'execution_path_count': 5, 'function_id_to_name_file': {'695': 'test_send_raw(test_session.py)', '520': 'msg(test_adapter.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '692': 'test_feed_identities(test_session.py)', '694': 'test_send(test_session.py)', '693': 'test_msg(test_session.py)', '696': 'test_serialize(test_session.py)'}}, {'key': 950, 'parent': 1808, 'tfidf_word': 'EP: 950, Name: test_object_info_request &rarr; msg &rarr; msg &rarr; extract_header', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 955, 'parent': 1808, 'tfidf_word': 'EP: 955, Name: test_object_info_reply &rarr; msg &rarr; msg &rarr; extract_header', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 836, 'parent': 2068, 'tfidf_word': 'EP: 836, Name: test_bad_unpacker &rarr; __init__ &rarr; _new_auth', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2067, 'parent': 2068, 'tfidf_word': 'bad digest history cull id pack packer session unpack zero ', 'tfidf_method': '__init__ _new_auth test_bad_pack test_bad_packer test_bad_unpack test_cull_digest_history test_session_id test_zero_digest_history ', 'lda_word': ' new,init,test,auth,bad,', 'lda_method': ' new_auth,init,test_cull_digest_history,test_bad_pack,test_bad_unpack,', 'lsi_word': ' test,new,init,auth,bad,', 'lsi_method': ' init,new_auth,test_zero_digest_history,test_bad_packer,test_bad_pack,', 'spm_method': ' ', 'text_summary': '', 'files_count': 2, 'files': ['test_session.py', 'session.py'], 'execution_path_count': 6, 'function_id_to_name_file': {'682': 'test_bad_packer(test_session.py)', '457': '__init__(session.py)', '465': '_new_auth(session.py)', '681': 'test_bad_pack(test_session.py)', '684': 'test_bad_unpack(test_session.py)', '687': 'test_cull_digest_history(test_session.py)', '697': 'test_session_id(test_session.py)', '700': 'test_zero_digest_history(test_session.py)'}}, {'key': 343, 'parent': 1482, 'tfidf_word': 'EP: 343, Name: restart_kernel &rarr; start_kernel &rarr; pre_start_kernel &rarr; format_kernel_cmd &rarr; kernel_spec &rarr; KernelSpec', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 417, 'parent': 1482, 'tfidf_word': 'EP: 417, Name: start_new_async_kernel &rarr; start_kernel &rarr; pre_start_kernel &rarr; format_kernel_cmd &rarr; kernel_spec &rarr; KernelSpec', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 342, 'parent': 1689, 'tfidf_word': 'EP: 342, Name: restart_kernel &rarr; start_kernel &rarr; pre_start_kernel &rarr; format_kernel_cmd &rarr; from_ns', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 416, 'parent': 1689, 'tfidf_word': 'EP: 416, Name: start_new_async_kernel &rarr; start_kernel &rarr; pre_start_kernel &rarr; format_kernel_cmd &rarr; from_ns', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 341, 'parent': 1688, 'tfidf_word': 'EP: 341, Name: restart_kernel &rarr; start_kernel &rarr; pre_start_kernel &rarr; write_connection_file &rarr; _record_random_port_names', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 415, 'parent': 1688, 'tfidf_word': 'EP: 415, Name: start_new_async_kernel &rarr; start_kernel &rarr; pre_start_kernel &rarr; write_connection_file &rarr; _record_random_port_names', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1363, 'parent': 2265, 'tfidf_word': 'EP: 1363, Name: test_connection_file_real_path &rarr; format_kernel_cmd &rarr; write_connection_file &rarr; _record_random_port_names', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1483, 'parent': 2265, 'tfidf_word': 'port pre random record write async new restart start kernel ', 'tfidf_method': '_record_random_port_names write_connection_file start_kernel format_kernel_cmd pre_start_kernel start_new_async_kernel restart_kernel ', 'lda_word': ' kernel,start,write,connection,file,', 'lda_method': ' start_kernel,format_kernel_cmd,write_connection_file,record_random_port_names,pre_start_kernel,', 'lsi_word': ' kernel,start,cmd,file,connection,', 'lsi_method': ' format_kernel_cmd,record_random_port_names,pre_start_kernel,start_kernel,write_connection_file,', 'spm_method': ' ', 'text_summary': '', 'files_count': 2, 'files': ['manager.py', 'connect.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'330': 'restart_kernel(manager.py)', '333': 'start_kernel(manager.py)', '360': 'pre_start_kernel(manager.py)', '353': 'format_kernel_cmd(manager.py)', '212': 'write_connection_file(connect.py)', '197': '_record_random_port_names(connect.py)', '322': 'start_new_async_kernel(manager.py)'}}, {'key': 340, 'parent': 1886, 'tfidf_word': 'EP: 340, Name: restart_kernel &rarr; start_kernel &rarr; pre_start_kernel &rarr; _get_env_substitutions', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1885, 'parent': 1886, 'tfidf_word': 'ip local pre restart start kernel ', 'tfidf_method': 'restart_kernel start_kernel pre_start_kernel is_local_ip local_ips ', 'lda_word': ' kernel,start,ip,restart,local,', 'lda_method': ' restart_kernel,start_kernel,pre_start_kernel,is_local_ip,local_ips,', 'lsi_word': ' kernel,start,pre,restart,local,', 'lsi_method': ' pre_start_kernel,restart_kernel,start_kernel,local_ips,is_local_ip,', 'spm_method': ' ', 'text_summary': 'Restarts a kernel with the arguments that were used to launch it. does `ip` point to this machine?.', 'files_count': 2, 'files': ['manager.py', 'localinterfaces.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'330': 'restart_kernel(manager.py)', '333': 'start_kernel(manager.py)', '360': 'pre_start_kernel(manager.py)', '314': 'local_ips(localinterfaces.py)', '312': 'is_local_ip(localinterfaces.py)'}}, {'key': 414, 'parent': 1895, 'tfidf_word': 'EP: 414, Name: start_new_async_kernel &rarr; start_kernel &rarr; pre_start_kernel &rarr; _get_env_substitutions', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1894, 'parent': 1895, 'tfidf_word': 'async ip local new pre kernel start ', 'tfidf_method': 'start_new_async_kernel start_kernel pre_start_kernel is_local_ip local_ips ', 'lda_word': ' start,kernel,async,pre,ip,', 'lda_method': ' pre_start_kernel,start_kernel,start_new_async_kernel,is_local_ip,local_ips,', 'lsi_word': ' kernel,start,async,ip,local,', 'lsi_method': ' start_kernel,start_new_async_kernel,pre_start_kernel,local_ips,is_local_ip,', 'spm_method': ' ', 'text_summary': '', 'files_count': 2, 'files': ['manager.py', 'localinterfaces.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'322': 'start_new_async_kernel(manager.py)', '333': 'start_kernel(manager.py)', '360': 'pre_start_kernel(manager.py)', '314': 'local_ips(localinterfaces.py)', '312': 'is_local_ip(localinterfaces.py)'}}, {'key': 1233, 'parent': 1759, 'tfidf_word': 'EP: 1233, Name: test_find_all_specs &rarr; get_all_specs &rarr; get_kernel_spec &rarr; _find_spec_directory &rarr; _is_kernel_dir', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1260, 'parent': 1759, 'tfidf_word': 'EP: 1260, Name: test_subclass &rarr; get_all_specs &rarr; get_kernel_spec &rarr; _find_spec_directory &rarr; _is_kernel_dir', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1829, 'parent': 1919, 'tfidf_word': 'dir directory find subclass test get kernel spec ', 'tfidf_method': '_is_kernel_dir _find_spec_directory get_kernel_spec test_subclass get_kernel_spec ', 'lda_word': ' spec,kernel,get,find,dir,', 'lda_method': ' get_kernel_spec,find_spec_directory,is_kernel_dir,test_subclass,', 'lsi_word': ' kernel,spec,get,dir,find,', 'lsi_method': ' get_kernel_spec,find_spec_directory,is_kernel_dir,test_subclass,', 'spm_method': ' ', 'text_summary': 'Is ``path`` a kernel directory?.', 'files_count': 2, 'files': ['test_kernelspec.py', 'kernelspec.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'629': 'test_subclass(test_kernelspec.py)', '274': 'get_kernel_spec(kernelspec.py)', '267': '_find_spec_directory(kernelspec.py)', '256': '_is_kernel_dir(kernelspec.py)', '633': 'get_kernel_spec(test_kernelspec.py)'}}, {'key': 1918, 'parent': 1919, 'tfidf_word': 'dir directory find set test up get kernel spec ', 'tfidf_method': '_is_kernel_dir _find_spec_directory get_kernel_spec setUp test_get_kernel_spec ', 'lda_word': ' spec,kernel,get,test,find,', 'lda_method': ' find_spec_directory,test_get_kernel_spec,get_kernel_spec,is_kernel_dir,setup,', 'lsi_word': ' spec,kernel,get,directory,find,', 'lsi_method': ' is_kernel_dir,get_kernel_spec,find_spec_directory,test_get_kernel_spec,setup,', 'spm_method': ' ', 'text_summary': '', 'files_count': 3, 'files': ['test_client.py', 'kernelspec.py', 'test_kernelspec.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'549': 'setUp(test_client.py)', '274': 'get_kernel_spec(kernelspec.py)', '267': '_find_spec_directory(kernelspec.py)', '256': '_is_kernel_dir(kernelspec.py)', '623': 'test_get_kernel_spec(test_kernelspec.py)'}}, {'key': 1229, 'parent': 2202, 'tfidf_word': 'EP: 1229, Name: test_find_all_specs &rarr; get_all_specs &rarr; _get_kernel_spec_by_name', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1256, 'parent': 2202, 'tfidf_word': 'EP: 1256, Name: test_subclass &rarr; get_all_specs &rarr; _get_kernel_spec_by_name', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1957, 'parent': 2674, 'tfidf_word': 'test name kernel spec specs init no such valid get ', 'tfidf_method': 'get_all_specs get_kernel_spec test_find_all_specs NoSuchKernel _is_valid_kernel_name _get_kernel_spec_by_name __init__ ', 'lda_word': ' get,kernel,specs,test,find,', 'lda_method': ' test_find_all_specs,get_all_specs,get_kernel_spec,nosuchkernel,init,', 'lsi_word': ' get,specs,kernel,spec,test,', 'lsi_method': ' get_kernel_spec,test_find_all_specs,get_all_specs,init,nosuchkernel,', 'spm_method': ' ', 'text_summary': 'Returns a dict mapping kernel names to kernelspecs. Returns a :class:`KernelSpec` instance for a given kernel_name.', 'files_count': 2, 'files': ['test_kernelspec.py', 'kernelspec.py'], 'execution_path_count': 4, 'function_id_to_name_file': {'621': 'test_find_all_specs(test_kernelspec.py)', '273': 'get_all_specs(kernelspec.py)', '274': 'get_kernel_spec(kernelspec.py)', '255': 'NoSuchKernel(kernelspec.py)', '278': '__init__(kernelspec.py)', '269': '_get_kernel_spec_by_name(kernelspec.py)', '257': '_is_valid_kernel_name(kernelspec.py)'}}, {'key': 1962, 'parent': 2674, 'tfidf_word': 'subclass test name kernel spec init no such valid get ', 'tfidf_method': 'get_all_specs get_kernel_spec test_subclass NoSuchKernel _is_valid_kernel_name _get_kernel_spec_by_name __init__ ', 'lda_word': ' get,kernel,spec,test,subclass,', 'lda_method': ' get_kernel_spec,test_subclass,get_all_specs,get_kernel_spec_by_name,is_valid_kernel_name,', 'lsi_word': ' get,kernel,spec,specs,subclass,', 'lsi_method': ' get_all_specs,get_kernel_spec,test_subclass,get_kernel_spec_by_name,nosuchkernel,', 'spm_method': ' ', 'text_summary': 'Check that a kernel name is valid. Returns a dict mapping kernel names to kernelspecs.', 'files_count': 2, 'files': ['test_kernelspec.py', 'kernelspec.py'], 'execution_path_count': 4, 'function_id_to_name_file': {'629': 'test_subclass(test_kernelspec.py)', '273': 'get_all_specs(kernelspec.py)', '274': 'get_kernel_spec(kernelspec.py)', '255': 'NoSuchKernel(kernelspec.py)', '278': '__init__(kernelspec.py)', '269': '_get_kernel_spec_by_name(kernelspec.py)', '257': '_is_valid_kernel_name(kernelspec.py)'}}, {'key': 710, 'parent': 2034, 'tfidf_word': 'EP: 710, Name: setUp &rarr; get_kernel_spec &rarr; get_kernel_spec &rarr; _find_spec_directory &rarr; _is_kernel_dir', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1917, 'parent': 2034, 'tfidf_word': 'set up name init no such valid get kernel spec ', 'tfidf_method': 'get_kernel_spec get_kernel_spec setUp NoSuchKernel _is_valid_kernel_name _get_kernel_spec_by_name __init__ ', 'lda_word': ' kernel,get,spec,set,name,', 'lda_method': ' get_kernel_spec,setup,is_valid_kernel_name,init,get_kernel_spec_by_name,', 'lsi_word': ' kernel,get,spec,set,name,', 'lsi_method': ' get_kernel_spec,setup,nosuchkernel,get_kernel_spec_by_name,is_valid_kernel_name,', 'spm_method': ' ', 'text_summary': '', 'files_count': 2, 'files': ['test_client.py', 'kernelspec.py'], 'execution_path_count': 4, 'function_id_to_name_file': {'549': 'setUp(test_client.py)', '260': 'get_kernel_spec(kernelspec.py)', '274': 'get_kernel_spec(kernelspec.py)', '255': 'NoSuchKernel(kernelspec.py)', '278': '__init__(kernelspec.py)', '269': '_get_kernel_spec_by_name(kernelspec.py)', '257': '_is_valid_kernel_name(kernelspec.py)'}}, {'key': 2211, 'parent': 2727, 'tfidf_word': 'name init no such valid get kernel spec ', 'tfidf_method': 'get_kernel_spec get_kernel_spec NoSuchKernel _is_valid_kernel_name _get_kernel_spec_by_name __init__ ', 'lda_word': ' spec,get,kernel,init,valid,', 'lda_method': ' get_kernel_spec,nosuchkernel,get_kernel_spec_by_name,init,is_valid_kernel_name,', 'lsi_word': ' kernel,spec,get,name,valid,', 'lsi_method': ' get_kernel_spec,is_valid_kernel_name,get_kernel_spec_by_name,init,nosuchkernel,', 'spm_method': ' ', 'text_summary': '', 'files_count': 2, 'files': ['test_kernelspec.py', 'kernelspec.py'], 'execution_path_count': 4, 'function_id_to_name_file': {'633': 'get_kernel_spec(test_kernelspec.py)', '274': 'get_kernel_spec(kernelspec.py)', '278': '__init__(kernelspec.py)', '255': 'NoSuchKernel(kernelspec.py)', '269': '_get_kernel_spec_by_name(kernelspec.py)', '257': '_is_valid_kernel_name(kernelspec.py)'}}, {'key': 2726, 'parent': 2727, 'tfidf_word': 'set subclass up init no such valid get kernel spec ', 'tfidf_method': 'get_kernel_spec setUp test_get_kernel_spec test_subclass NoSuchKernel _is_valid_kernel_name _get_kernel_spec_by_name __init__ ', 'lda_word': ' kernel,spec,get,name,test,', 'lda_method': ' test_subclass,get_kernel_spec,nosuchkernel,init,get_kernel_spec_by_name,', 'lsi_word': ' kernel,spec,get,test,name,', 'lsi_method': ' get_kernel_spec,setup,test_get_kernel_spec,test_subclass,is_valid_kernel_name,', 'spm_method': ' ', 'text_summary': 'Check that a kernel name is valid.', 'files_count': 3, 'files': ['test_kernelspec.py', 'kernelspec.py', 'test_client.py'], 'execution_path_count': 12, 'function_id_to_name_file': {'629': 'test_subclass(test_kernelspec.py)', '274': 'get_kernel_spec(kernelspec.py)', '278': '__init__(kernelspec.py)', '255': 'NoSuchKernel(kernelspec.py)', '269': '_get_kernel_spec_by_name(kernelspec.py)', '257': '_is_valid_kernel_name(kernelspec.py)', '549': 'setUp(test_client.py)', '623': 'test_get_kernel_spec(test_kernelspec.py)'}}, {'key': 782, 'parent': 1728, 'tfidf_word': 'EP: 782, Name: test_send &rarr; recv &rarr; deserialize &rarr; adapt &rarr; utcnow', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1399, 'parent': 1728, 'tfidf_word': 'EP: 1399, Name: handle &rarr; recv &rarr; deserialize &rarr; adapt &rarr; utcnow', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1836, 'parent': 1923, 'tfidf_word': 'adapt deserialize send test utcnow raw ', 'tfidf_method': 'utcnow deserialize adapt test_send test_send_raw ', 'lda_word': ' deserialize,send,utcnow,adapt,test,', 'lda_method': ' adapt,deserialize,utcnow,test_send,test_send_raw,', 'lsi_word': ' adapt,send,deserialize,test,utcnow,', 'lsi_method': ' adapt,deserialize,utcnow,test_send,test_send_raw,', 'spm_method': ' ', 'text_summary': '', 'files_count': 3, 'files': ['test_session.py', 'session.py', 'adapter.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'694': 'test_send(test_session.py)', '474': 'deserialize(session.py)', '50': 'adapt(adapter.py)', '450': 'utcnow(session.py)', '695': 'test_send_raw(test_session.py)'}}, {'key': 1862, 'parent': 1923, 'tfidf_word': 'adapt deserialize utcnow serialize test unserialize ', 'tfidf_method': 'utcnow deserialize adapt unserialize test_serialize ', 'lda_word': ' deserialize,adapt,utcnow,unserialize,test,', 'lda_method': ' utcnow,deserialize,adapt,unserialize,test_serialize,', 'lsi_word': ' adapt,deserialize,utcnow,test,serialize,', 'lsi_method': ' utcnow,deserialize,adapt,unserialize,test_serialize,', 'spm_method': ' ', 'text_summary': '', 'files_count': 3, 'files': ['session.py', 'adapter.py', 'test_session.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'484': 'unserialize(session.py)', '474': 'deserialize(session.py)', '50': 'adapt(adapter.py)', '450': 'utcnow(session.py)', '696': 'test_serialize(test_session.py)'}}, {'key': 1838, 'parent': 1928, 'tfidf_word': 'adapt send utcnow handle test tracking ', 'tfidf_method': 'utcnow send adapt handle test_tracking ', 'lda_word': ' adapt,utcnow,tracking,send,test,', 'lda_method': ' adapt,send,handle,utcnow,test_tracking,', 'lsi_word': ' send,utcnow,adapt,test,tracking,', 'lsi_method': ' adapt,send,utcnow,handle,test_tracking,', 'spm_method': ' ', 'text_summary': '', 'files_count': 4, 'files': ['test_session.py', 'session.py', 'adapter.py', 'forward.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'698': 'test_tracking(test_session.py)', '480': 'send(session.py)', '50': 'adapt(adapter.py)', '450': 'utcnow(session.py)', '492': 'handle(forward.py)'}}, {'key': 1891, 'parent': 1928, 'tfidf_word': 'adapt utcnow interrupt kernel test send ', 'tfidf_method': 'utcnow send adapt interrupt_kernel test_send ', 'lda_word': ' send,utcnow,adapt,interrupt,test,', 'lda_method': ' adapt,test_send,utcnow,send,interrupt_kernel,', 'lsi_word': ' send,adapt,utcnow,test,interrupt,', 'lsi_method': ' adapt,send,utcnow,interrupt_kernel,test_send,', 'spm_method': ' ', 'text_summary': '', 'files_count': 4, 'files': ['manager.py', 'session.py', 'adapter.py', 'test_session.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'328': 'interrupt_kernel(manager.py)', '480': 'send(session.py)', '50': 'adapt(adapter.py)', '450': 'utcnow(session.py)', '694': 'test_send(test_session.py)'}}, {'key': 2086, 'parent': 2185, 'tfidf_word': 'app load test write close connection file localhost ', 'tfidf_method': 'write_connection_file test_app_load_connection_file close localhost close ', 'lda_word': ' file,connection,app,test,write,', 'lda_method': ' test_app_load_connection_file,write_connection_file,close,localhost,', 'lsi_word': ' connection,file,test,write,load,', 'lsi_method': ' test_app_load_connection_file,write_connection_file,close,localhost,', 'spm_method': ' ', 'text_summary': '', 'files_count': 4, 'files': ['test_connect.py', 'connect.py', 'channels.py', 'localinterfaces.py'], 'execution_path_count': 3, 'function_id_to_name_file': {'559': 'test_app_load_connection_file(test_connect.py)', '191': 'write_connection_file(connect.py)', '109': 'close(channels.py)', '83': 'close(channels.py)', '315': 'localhost(localinterfaces.py)'}}, {'key': 2184, 'parent': 2185, 'tfidf_word': 'app load test write close connection file port ', 'tfidf_method': 'write_connection_file test_app_load_connection_file close ports close close ', 'lda_word': ' connection,file,load,app,write,', 'lda_method': ' write_connection_file,test_app_load_connection_file,close,port,', 'lsi_word': ' connection,file,app,test,write,', 'lsi_method': ' test_app_load_connection_file,write_connection_file,close,port,', 'spm_method': ' ', 'text_summary': '', 'files_count': 4, 'files': ['test_connect.py', 'connect.py', 'threaded.py', 'channels.py'], 'execution_path_count': 4, 'function_id_to_name_file': {'559': 'test_app_load_connection_file(test_connect.py)', '191': 'write_connection_file(connect.py)', '730': 'close(threaded.py)', '132': 'close(channels.py)', '211': 'ports(connect.py)', '718': 'close(threaded.py)'}}, {'key': 2181, 'parent': 2762, 'tfidf_word': 'kn load session test write close connection file localhost port ', 'tfidf_method': 'write_connection_file test_load_connection_file_session_with_kn close close ports localhost close close close ', 'lda_word': ' connection,file,load,test,write,', 'lda_method': ' close,test_load_connection_file_session_with_kn,write_connection_file,port,localhost,', 'lsi_word': ' connection,file,kn,session,write,', 'lsi_method': ' test_load_connection_file_session_with_kn,write_connection_file,close,localhost,port,', 'spm_method': ' ', 'text_summary': 'return ip for localhost (almost always 127.0.0.1) test load_connection_file() after. test load_connection_file() after.', 'files_count': 5, 'files': ['test_connect.py', 'connect.py', 'channels.py', 'localinterfaces.py', 'threaded.py'], 'execution_path_count': 7, 'function_id_to_name_file': {'565': 'test_load_connection_file_session_with_kn(test_connect.py)', '191': 'write_connection_file(connect.py)', '109': 'close(channels.py)', '83': 'close(channels.py)', '315': 'localhost(localinterfaces.py)', '730': 'close(threaded.py)', '132': 'close(channels.py)', '211': 'ports(connect.py)', '718': 'close(threaded.py)'}}, {'key': 2761, 'parent': 2762, 'tfidf_word': 'test close load session connection file write localhost port ', 'tfidf_method': 'write_connection_file test_load_connection_file_session test_write_connection_file close close ports localhost close close close ', 'lda_word': ' connection,file,write,test,close,', 'lda_method': ' write_connection_file,close,test_write_connection_file,test_load_connection_file_session,port,', 'lsi_word': ' connection,file,write,test,close,', 'lsi_method': ' write_connection_file,close,test_load_connection_file_session,test_write_connection_file,port,', 'spm_method': ' ', 'text_summary': 'return ip for localhost (almost always 127.0.0.1) test load_connection_file() after. test load_connection_file() after.', 'files_count': 5, 'files': ['test_connect.py', 'connect.py', 'channels.py', 'localinterfaces.py', 'threaded.py'], 'execution_path_count': 14, 'function_id_to_name_file': {'570': 'test_write_connection_file(test_connect.py)', '191': 'write_connection_file(connect.py)', '109': 'close(channels.py)', '83': 'close(channels.py)', '315': 'localhost(localinterfaces.py)', '730': 'close(threaded.py)', '132': 'close(channels.py)', '211': 'ports(connect.py)', '718': 'close(threaded.py)', '564': 'test_load_connection_file_session(test_connect.py)'}}, {'key': 2164, 'parent': 2412, 'tfidf_word': 'add test cull history clone zero digest ', 'tfidf_method': '_add_digest _cull_digest_history test_clone test_cull_digest_history test_zero_digest_history ', 'lda_word': ' digest,history,add,test,cull,', 'lda_method': ' cull_digest_history,add_digest,test_clone,test_cull_digest_history,test_zero_digest_history,', 'lsi_word': ' digest,history,cull,test,add,', 'lsi_method': ' cull_digest_history,add_digest,test_cull_digest_history,test_zero_digest_history,test_clone,', 'spm_method': ' ', 'text_summary': '', 'files_count': 2, 'files': ['test_session.py', 'session.py'], 'execution_path_count': 3, 'function_id_to_name_file': {'686': 'test_clone(test_session.py)', '458': '_add_digest(session.py)', '460': '_cull_digest_history(session.py)', '700': 'test_zero_digest_history(test_session.py)', '687': 'test_cull_digest_history(test_session.py)'}}, {'key': 2269, 'parent': 2412, 'tfidf_word': 'deserialize history test send digest recv handle raw serialize unserialize ', 'tfidf_method': '_add_digest _cull_digest_history deserialize recv test_send unserialize handle test_send_raw test_serialize ', 'lda_word': ' send,digest,test,recv,cull,', 'lda_method': ' add_digest,cull_digest_history,deserialize,test_send_raw,test_send,', 'lsi_word': ' digest,cull,deserialize,history,add,', 'lsi_method': ' deserialize,cull_digest_history,add_digest,recv,test_send,', 'spm_method': ' ', 'text_summary': 'cull the digest history. Receive and unpack a message. Unserialize a msg_list to a nested message dict.', 'files_count': 3, 'files': ['test_session.py', 'session.py', 'forward.py'], 'execution_path_count': 6, 'function_id_to_name_file': {'694': 'test_send(test_session.py)', '479': 'recv(session.py)', '474': 'deserialize(session.py)', '458': '_add_digest(session.py)', '460': '_cull_digest_history(session.py)', '492': 'handle(forward.py)', '695': 'test_send_raw(test_session.py)', '484': 'unserialize(session.py)', '696': 'test_serialize(test_session.py)'}}, {'key': 2715, 'parent': 2777, 'tfidf_word': 'console connection file find i kn python run session app ', 'tfidf_method': 'JupyterConsoleApp DummyConsoleApp ConnectionFileMixin Session IPythonConsoleApp RunApp test_app_load_connection_file test_find_connection_file test_load_connection_file_session test_load_connection_file_session_with_kn ', 'lda_word': ' app,console,connection,file,dummy,', 'lda_method': ' connectionfilemixin,jupyterconsoleapp,runapp,ipythonconsoleapp,dummyconsoleapp,', 'lsi_word': ' app,console,connection,file,jupyter,', 'lsi_method': ' jupyterconsoleapp,dummyconsoleapp,connectionfilemixin,session,test_load_connection_file_session,', 'spm_method': ' ', 'text_summary': '', 'files_count': 5, 'files': ['test_connect.py', 'consoleapp.py', 'session.py', 'connect.py', 'runapp.py'], 'execution_path_count': 12, 'function_id_to_name_file': {'559': 'test_app_load_connection_file(test_connect.py)', '558': 'DummyConsoleApp(test_connect.py)', '214': 'JupyterConsoleApp(consoleapp.py)', '441': 'Session(session.py)', '188': 'ConnectionFileMixin(connect.py)', '560': 'test_find_connection_file(test_connect.py)', '564': 'test_load_connection_file_session(test_connect.py)', '565': 'test_load_connection_file_session_with_kn(test_connect.py)', '213': 'IPythonConsoleApp(consoleapp.py)', '434': 'RunApp(runapp.py)'}}, {'key': 2773, 'parent': 2777, 'tfidf_word': 'loop manager native permission flush tunnel io cleanup code restarter ', 'tfidf_method': 'test_find_connection_file_relative test_load_connection_file_session test_load_connection_file_session_with_kn finish_shutdown test_mixin_record_random_ports test_secure_write update_msg_type check_user_only_permissions test_find_connection_file setUp ', 'lda_word': ' kernel,client,test,start,connection,', 'lda_method': ' start,recv,get_msg,test_send,sign,', 'lsi_word': ' kernel,test,lifecycle,start,tcp,', 'lsi_method': ' init,get_tcp_km,check_packers,test_tcp_lifecycle,utcnow,', 'spm_method': ' ', 'text_summary': "Subclasses may override  Prepares a kernel for startup in a separate process. Prepares a kernel for startup in a separate process. return ip for localhost (almost always 127.0.0.1)   Ensure that a sequence of kernel startups doesn't break anything. Sends a signal to the process group of the kernel (this. Pass a message to the ZMQ socket to send. This method is called in the ioloop thread when a message arrives. Return the connection info as a dict. Subclasses may override Start the polling of the kernel. Ensure that a sequence of kernel startups doesn't break anything. find a connection file, and return its absolute path. return ip for localhost (almost always 127.0.0.1)      find a connection file, and return its absolute path. tunnel connections to a kernel via ssh. handle kernel info reply. Get the hb channel object for this kernel. Returns the id to associate with the kernel for this request. Send a raw message via ident path. Make a blocking client connected to my kernel. Get a message from the stdin channel. Immediately processes all pending messages on this channel. Return the number of running kernels. Unserialize a msg_list to a nested message dict. Get the single KernelManager object for a kernel by its uuid. Interrupts the kernel by sending it a signal. Get a message from the shell channel. Create an ssh tunnel using command-line ssh that connects port lport. Get a message from the iopub channel. This is run in the ioloop thread when the kernel info reply is received. default function for packing datetime objects in JSON. Start the polling of the kernel. Send a shutdown request via control channel. test load_connection_file() after. Sends an interrupt event using the specified handle. test that messages receive unique ids. Forgets randomly assigned port numbers and cleans up the connection file.", 'files_count': 35, 'files': ['test_multikernelmanager.py', 'multikernelmanager.py', 'connect.py', 'tunnel.py', 'threaded.py', 'channels.py', 'test_ssh.py', 'client.py', 'managerabc.py', 'channelsabc.py', 'test_session.py', 'session.py', 'forward.py', 'manager.py', 'test_kernelspec.py', 'kernelspec.py', 'test_kernelmanager.py', 'consoleapp.py', 'jsonutil.py', 'test_manager.py', 'utils.py', 'restarter.py', 'signalkernel.py', 'test_connect.py', 'kernelspecapp.py', 'kernelapp.py', 'test_adapter.py', 'test_jsonutil.py', 'localinterfaces.py', 'adapter.py', 'test_kernelapp.py', 'test_client.py', 'win_interrupt.py', 'runapp.py', 'launcher.py'], 'execution_path_count': 384, 'function_id_to_name_file': {'665': 'test_start_sequence_tcp_kernels(test_multikernelmanager.py)', '655': '_get_tcp_km(test_multikernelmanager.py)', '392': '__init__(multikernelmanager.py)', '666': 'test_tcp_cinfo(test_multikernelmanager.py)', '668': 'test_tcp_lifecycle_with_kernel_id(test_multikernelmanager.py)', '661': 'test_shutdown_all(test_multikernelmanager.py)', '663': 'test_start_parallel_thread_kernels(test_multikernelmanager.py)', '658': 'tcp_lifecycle_with_loop(test_multikernelmanager.py)', '667': 'test_tcp_lifecycle(test_multikernelmanager.py)', '662': 'test_start_parallel_process_kernels(test_multikernelmanager.py)', '190': 'tunnel_to_kernel(connect.py)', '503': 'select_random_ports(tunnel.py)', '718': 'close(threaded.py)', '730': 'close(threaded.py)', '132': 'close(channels.py)', '109': 'close(channels.py)', '83': 'close(channels.py)', '211': 'ports(connect.py)', '701': 'test_random_ports(test_ssh.py)', '386': 'shutdown_all(multikernelmanager.py)', '383': 'finish_shutdown(multikernelmanager.py)', '410': 'get_kernel(multikernelmanager.py)', '394': '_check_kernel_id(multikernelmanager.py)', '388': 'signal_kernel(multikernelmanager.py)', '385': 'restart_kernel(multikernelmanager.py)', '384': 'interrupt_kernel(multikernelmanager.py)', '387': 'shutdown_kernel(multikernelmanager.py)', '421': 'shutdown_kernel(multikernelmanager.py)', '420': 'shutdown_all(multikernelmanager.py)', '104': 'wait_for_ready(client.py)', '103': 'is_alive(client.py)', '412': 'is_alive(multikernelmanager.py)', '373': 'is_alive(managerabc.py)', '140': 'is_alive(channelsabc.py)', '732': 'is_alive(threaded.py)', '86': 'is_alive(channels.py)', '112': 'is_alive(channels.py)', '123': 'wait_for_ready(client.py)', '165': 'is_alive(client.py)', '648': 'test_start_parallel_thread_kernels(test_multikernelmanager.py)', '643': 'tcp_lifecycle_with_loop(test_multikernelmanager.py)', '642': 'raw_tcp_lifecycle(test_multikernelmanager.py)', '641': '_run_lifecycle(test_multikernelmanager.py)', '647': 'test_start_parallel_process_kernels(test_multikernelmanager.py)', '652': 'test_tcp_lifecycle(test_multikernelmanager.py)', '653': 'test_tcp_lifecycle_with_kernel_id(test_multikernelmanager.py)', '694': 'test_send(test_session.py)', '479': 'recv(session.py)', '474': 'deserialize(session.py)', '483': 'sign(session.py)', '492': 'handle(forward.py)', '695': 'test_send_raw(test_session.py)', '484': 'unserialize(session.py)', '696': 'test_serialize(test_session.py)', '480': 'send(session.py)', '440': 'Message(session.py)', '698': 'test_tracking(test_session.py)', '328': 'interrupt_kernel(manager.py)', '482': 'serialize(session.py)', '135': 'run(channels.py)', '128': '_create_socket(channels.py)', '84': 'get_msg(channels.py)', '82': '_recv(channels.py)', '101': 'get_stdin_msg(client.py)', '85': 'get_msgs(channels.py)', '99': 'get_iopub_msg(client.py)', '110': 'get_msg(channels.py)', '108': '_recv(channels.py)', '111': 'get_msgs(channels.py)', '620': 'test_cant_install_kernel_spec(test_kernelspec.py)', '275': 'install_kernel_spec(kernelspec.py)', '268': '_get_destination_dir(kernelspec.py)', '257': '_is_valid_kernel_name(kernelspec.py)', '625': 'test_install_kernel_spec_prefix(test_kernelspec.py)', '261': 'install_kernel_spec(kernelspec.py)', '624': 'test_install_kernel_spec(test_kernelspec.py)', '614': 'test_start_sequence_process_kernels(test_kernelmanager.py)', '610': '_run_signaltest_lifecycle(test_kernelmanager.py)', '615': 'execute(test_kernelmanager.py)', '609': '_prepare_kernel(test_kernelmanager.py)', '611': 'test_start_parallel_process_kernels(test_kernelmanager.py)', '613': 'test_start_sequence_kernels(test_kernelmanager.py)', '612': 'test_start_parallel_thread_kernels(test_kernelmanager.py)', '398': '_kernel_manager_class_changed(multikernelmanager.py)', '396': '_create_kernel_manager_factory(multikernelmanager.py)', '424': 'create_kernel_manager(multikernelmanager.py)', '397': '_find_available_port(multikernelmanager.py)', '395': '_context_default(multikernelmanager.py)', '399': '_kernel_manager_factory_default(multikernelmanager.py)', '215': '__init__(consoleapp.py)', '485': '__init__(session.py)', '441': 'Session(session.py)', '457': '__init__(session.py)', '465': '_new_auth(session.py)', '459': '_check_packers(session.py)', '450': 'utcnow(session.py)', '244': 'squash_dates(jsonutil.py)', '90': 'AsyncKernelClient(client.py)', '147': 'KernelClient(client.py)', '139': 'HBChannelABC(channelsabc.py)', '138': 'ChannelABC(channelsabc.py)', '116': 'BlockingKernelClient(client.py)', '188': 'ConnectionFileMixin(connect.py)', '322': 'start_new_async_kernel(manager.py)', '319': 'AsyncKernelManager(manager.py)', '320': 'KernelManager(manager.py)', '224': 'AsyncIOLoopKernelManager(manager.py)', '225': 'IOLoopKernelManager(manager.py)', '635': 'test_connection_file_real_path(test_manager.py)', '657': '_run_lifecycle(test_multikernelmanager.py)', '704': 'execute(utils.py)', '155': 'execute(client.py)', '148': 'validate_string_dict(client.py)', '689': 'test_datetimes_msgpack(test_session.py)', '679': '_datetime_test(test_session.py)', '688': 'test_datetimes(test_session.py)', '690': 'test_datetimes_pickle(test_session.py)', '734': 'send(threaded.py)', '738': 'thread_send(threaded.py)', '664': 'test_start_sequence_ipc_kernels(test_multikernelmanager.py)', '654': '_get_ipc_km(test_multikernelmanager.py)', '660': 'test_ipc_lifecycle(test_multikernelmanager.py)', '659': 'test_ipc_cinfo(test_multikernelmanager.py)', '423': 'start_kernel(multikernelmanager.py)', '415': 'pre_start_kernel(multikernelmanager.py)', '380': 'DuplicateKernelError(multikernelmanager.py)', '414': 'new_kernel_id(multikernelmanager.py)', '389': 'start_kernel(multikernelmanager.py)', '238': 'start(restarter.py)', '430': 'poll(restarter.py)', '433': 'stop(restarter.py)', '428': '_fire_callbacks(restarter.py)', '510': 'do_execute(signalkernel.py)', '501': 'openssh_tunnel(tunnel.py)', '494': 'SSHException(tunnel.py)', '497': '_stop_tunnel(tunnel.py)', '475': 'feed_identities(session.py)', '330': 'restart_kernel(manager.py)', '202': 'cleanup_random_ports(connect.py)', '200': 'cleanup_connection_file(connect.py)', '567': 'test_mixin_cleanup_random_ports(test_connect.py)', '106': 'ZMQSocketChannel(channels.py)', '226': 'as_zmqstream(manager.py)', '233': 'wrapped(manager.py)', '568': 'test_mixin_record_random_ports(test_connect.py)', '557': 'DummyConfigurable(test_connect.py)', '235': 'IOLoopKernelRestarter(restarter.py)', '426': 'KernelRestarter(restarter.py)', '234': 'AsyncIOLoopKernelRestarter(restarter.py)', '291': 'start(kernelspecapp.py)', '251': 'start(kernelapp.py)', '249': 'setup_signals(kernelapp.py)', '252': 'shutdown_handler(kernelapp.py)', '250': 'shutdown(kernelapp.py)', '248': 'log_connection_info(kernelapp.py)', '199': 'blocking_client(connect.py)', '208': 'get_connection_info(connect.py)', '725': 'stop_channels(threaded.py)', '684': 'test_bad_unpack(test_session.py)', '676': '_bad_unpacker(test_session.py)', '536': 'test_complete_request(test_adapter.py)', '517': 'adapt(test_adapter.py)', '562': 'test_find_connection_file_local(test_connect.py)', '189': 'find_connection_file(connect.py)', '493': 'SubHander(forward.py)', '490': 'Handler(forward.py)', '253': 'KernelSpec(kernelspec.py)', '114': 'send(channels.py)', '88': 'send(channels.py)', '575': 'test_date_default(test_jsonutil.py)', '241': 'date_default(jsonutil.py)', '240': '_ensure_tzinfo(jsonutil.py)', '597': 'test_subclasses(test_kernelmanager.py)', '703': 'AsyncKernelManagerWithCleanup(utils.py)', '595': 'test_signal_kernel_subprocesses(test_kernelmanager.py)', '598': 'execute(test_kernelmanager.py)', '702': 'AsyncKernelManagerSubclass(utils.py)', '591': 'transport(test_kernelmanager.py)', '606': 'test_templated_kspec_env(test_kernelmanager.py)', '599': '_env_test_body(test_kernelmanager.py)', '607': 'execute(test_kernelmanager.py)', '604': 'test_signal_kernel_subprocesses(test_kernelmanager.py)', '608': 'execute(test_kernelmanager.py)', '586': 'env(test_kernelmanager.py)', '712': 'stop(utils.py)', '711': 'start(utils.py)', '705': 'test_env(utils.py)', '630': 'test_validate_kernel_name(test_kernelspec.py)', '506': 'SignalTestApp(signalkernel.py)', '507': 'SignalTestKernel(signalkernel.py)', '627': 'test_remove_kernel_spec(test_kernelspec.py)', '617': '_install_sample_kernel(test_kernelspec.py)', '626': 'test_kernel_spec_priority(test_kernelspec.py)', '651': 'test_tcp_cinfo(test_multikernelmanager.py)', '640': '_run_cinfo(test_multikernelmanager.py)', '621': 'test_find_all_specs(test_kernelspec.py)', '622': 'test_find_kernel_specs(test_kernelspec.py)', '623': 'test_get_kernel_spec(test_kernelspec.py)', '619': 'tearDown(test_kernelspec.py)', '618': 'setUp(test_kernelspec.py)', '649': 'test_start_sequence_ipc_kernels(test_multikernelmanager.py)', '650': 'test_start_sequence_tcp_kernels(test_multikernelmanager.py)', '644': 'test_ipc_cinfo(test_multikernelmanager.py)', '315': 'localhost(localinterfaces.py)', '645': 'test_ipc_lifecycle(test_multikernelmanager.py)', '656': '_run_cinfo(test_multikernelmanager.py)', '569': 'test_secure_write(test_connect.py)', '573': 'check_user_only_permissions(test_connect.py)', '574': 'fetch_win32_permissions(test_connect.py)', '563': 'test_find_connection_file_relative(test_connect.py)', '561': 'test_find_connection_file_abspath(test_connect.py)', '560': 'test_find_connection_file(test_connect.py)', '565': 'test_load_connection_file_session_with_kn(test_connect.py)', '539': 'test_input_request(test_adapter.py)', '564': 'test_load_connection_file_session(test_connect.py)', '537': 'test_display_data(test_adapter.py)', '540': 'test_inspect_reply(test_adapter.py)', '543': 'test_kernel_info_reply(test_adapter.py)', '542': 'test_inspect_request_token(test_adapter.py)', '535': 'test_complete_reply(test_adapter.py)', '541': 'test_inspect_request(test_adapter.py)', '538': 'test_execute_request(test_adapter.py)', '545': 'test_rename_type(test_adapter.py)', '544': 'test_no_adapt(test_adapter.py)', '546': 'test_same_version(test_adapter.py)', '514': 'V5toV4TestCase(test_adapter.py)', '512': 'AdapterTest(test_adapter.py)', '526': 'test_input_request(test_adapter.py)', '523': 'test_display_data(test_adapter.py)', '527': 'test_kernel_info_reply(test_adapter.py)', '530': 'test_object_info_reply_not_found(test_adapter.py)', '529': 'test_object_info_reply(test_adapter.py)', '531': 'test_object_info_request(test_adapter.py)', '521': 'test_complete_reply(test_adapter.py)', '522': 'test_complete_request(test_adapter.py)', '524': 'test_execute_reply(test_adapter.py)', '532': 'test_rename_type(test_adapter.py)', '525': 'test_execute_request(test_adapter.py)', '528': 'test_no_adapt(test_adapter.py)', '533': 'test_same_version(test_adapter.py)', '513': 'V4toV5TestCase(test_adapter.py)', '519': 'setUp(test_adapter.py)', '516': 'test_default_version(test_adapter.py)', '515': 'test_code_to_line_no_code(test_adapter.py)', '51': 'code_to_line(adapter.py)', '158': 'get_shell_msg(client.py)', '157': 'get_iopub_msg(client.py)', '710': '__exit__(utils.py)', '709': '__enter__(utils.py)', '580': 'test_kernelapp_lifecycle(test_kernelapp.py)', '579': '_launch(test_kernelapp.py)', '686': 'test_clone(test_session.py)', '473': 'clone(session.py)', '481': 'send_raw(session.py)', '683': 'test_bad_roundtrip(test_session.py)', '685': 'test_bad_unpacker(test_session.py)', '682': 'test_bad_packer(test_session.py)', '681': 'test_bad_pack(test_session.py)', '675': '_bad_packer(test_session.py)', '687': 'test_cull_digest_history(test_session.py)', '700': 'test_zero_digest_history(test_session.py)', '697': 'test_session_id(test_session.py)', '699': 'test_unique_msg_ids(test_session.py)', '445': 'msg_header(session.py)', '680': 'test_args(test_session.py)', '478': 'msg_id(session.py)', '674': 'TestSession(test_session.py)', '673': 'SessionTestCase(test_session.py)', '678': 'setUp(test_session.py)', '556': 'test_shutdown(test_client.py)', '548': '_check_reply(test_client.py)', '550': 'test_comm_info(test_client.py)', '555': 'test_kernel_info(test_client.py)', '551': 'test_complete(test_client.py)', '554': 'test_inspect(test_client.py)', '553': 'test_history(test_client.py)', '549': 'setUp(test_client.py)', '255': 'NoSuchKernel(kernelspec.py)', '117': 'reqrep(client.py)', '124': 'wrapped(client.py)', '150': '_handle_kernel_info_reply(client.py)', '125': 'HBChannel(channels.py)', '102': 'hb_channel(client.py)', '196': '_make_url(connect.py)', '91': 'reqrep(client.py)', '105': 'wrapped(client.py)', '80': 'ZMQSocketChannel(channels.py)', '154': 'control_channel(client.py)', '723': 'ioloop(threaded.py)', '160': 'hb_channel(client.py)', '171': 'stdin_channel(client.py)', '164': 'iopub_channel(client.py)', '168': 'shell_channel(client.py)', '740': 'send_interrupt(win_interrupt.py)', '334': '__del__(manager.py)', '293': 'start(kernelspecapp.py)', '294': 'path_key(kernelspecapp.py)', '735': 'start(threaded.py)', '720': 'start(threaded.py)', '141': 'start(channelsabc.py)', '432': 'start(restarter.py)', '288': 'start(kernelspecapp.py)', '89': 'start(channels.py)', '115': 'start(channels.py)', '290': 'start(kernelspecapp.py)', '438': 'parse_command_line(runapp.py)', '218': 'build_kernel_argv(consoleapp.py)', '308': '_only_once(localinterfaces.py)', '317': 'wrapped(localinterfaces.py)', '47': 'V4toV5(adapter.py)', '46': 'Adapter(adapter.py)', '77': 'object_info_request(adapter.py)', '52': 'extract_oname_v4(adapter.py)', '70': 'complete_request(adapter.py)', '75': 'kernel_info_reply(adapter.py)', '49': '_version_str_to_list(adapter.py)', '48': 'V5toV4(adapter.py)', '53': '__call__(adapter.py)', '54': 'handle_reply_status_error(adapter.py)', '57': 'update_msg_type(adapter.py)', '56': 'update_metadata(adapter.py)', '55': 'update_header(adapter.py)', '247': 'initialize(kernelapp.py)', '246': '_record_started(kernelapp.py)', '585': 'config(test_kernelmanager.py)', '262': 'install_native_kernel_spec(kernelspec.py)', '276': 'install_native_kernel_spec(kernelspec.py)', '265': 'to_json(kernelspec.py)', '264': 'to_dict(kernelspec.py)', '449': 'test_msg2obj(session.py)', '453': '__init__(session.py)', '470': '_signature_scheme_changed(session.py)', '463': '_key_default(session.py)', '447': 'new_id_bytes(session.py)', '462': '_key_changed(session.py)', '443': 'default_secure(session.py)', '469': '_session_default(session.py)', '446': 'new_id(session.py)', '413': 'list_kernel_ids(multikernelmanager.py)', '721': 'stop(threaded.py)', '724': 'start_channels(threaded.py)', '722': '_check_kernel_info_reply(threaded.py)', '716': '__init__(threaded.py)', '416': 'remove_kernel(multikernelmanager.py)', '713': 'IOLoopThread(threaded.py)', '714': 'ThreadedKernelClient(threaded.py)', '715': 'ThreadedZMQSocketChannel(threaded.py)', '731': 'flush(threaded.py)', '727': '_flush(threaded.py)', '418': 'request_shutdown(multikernelmanager.py)', '402': 'cleanup_resources(multikernelmanager.py)', '408': 'finish_shutdown(multikernelmanager.py)', '393': '__len__(multikernelmanager.py)', '198': '_session_default(connect.py)', '298': 'launch_kernel(launcher.py)', '739': 'create_interrupt_event(win_interrupt.py)', '741': 'SECURITY_ATTRIBUTES(win_interrupt.py)', '509': '__init__(signalkernel.py)', '278': '__init__(kernelspec.py)', '127': '__init__(channels.py)', '126': 'InvalidPortNumber(channels.py)', '107': '__init__(channels.py)', '81': '__init__(channels.py)', '726': '__init__(threaded.py)', '737': 'setup_stream(threaded.py)', '728': '_handle_recv(threaded.py)', '729': 'call_handlers(threaded.py)', '136': 'stop(channels.py)', '133': 'is_beating(channels.py)', '145': 'time_to_dead(channelsabc.py)', '131': 'call_handlers(channels.py)', '130': '_poll(channels.py)'}}, {'key': 191, 'parent': 1870, 'tfidf_word': 'EP: 191, Name: initialize &rarr; handle_sigint &rarr; interrupt_kernel &rarr; send', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 193, 'parent': 1870, 'tfidf_word': 'EP: 193, Name: initialize &rarr; handle_sigint &rarr; interrupt_kernel &rarr; send_interrupt', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 43, 'parent': 1765, 'tfidf_word': 'EP: 43, Name: tunnel_to_kernel &rarr; try_passwordless_ssh &rarr; _try_passwordless_paramiko &rarr; msg &rarr; msg &rarr; extract_header', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 45, 'parent': 1765, 'tfidf_word': 'EP: 45, Name: tunnel_to_kernel &rarr; try_passwordless_ssh &rarr; _try_passwordless_paramiko &rarr; msg &rarr; msg &rarr; msg &rarr; extract_header', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 933, 'parent': 1536, 'tfidf_word': 'EP: 933, Name: test_execute_request &rarr; msg &rarr; msg &rarr; msg &rarr; msg_header &rarr; msg_id', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1535, 'parent': 1536, 'tfidf_word': 'feed identity interrupt kernel raw rename serialize type version msg ', 'tfidf_method': 'is_complete interrupt_kernel test_no_adapt test_rename_type test_same_version test_feed_identities test_msg test_send test_send_raw test_serialize ', 'lda_word': ' msg,header,test,send,kernel,', 'lda_method': ' test_same_version,msg,msg_header,msg_id,test_send,', 'lsi_word': ' msg,header,test,send,raw,', 'lsi_method': ' msg,msg_header,msg_id,test_rename_type,test_msg,', 'spm_method': ' ', 'text_summary': 'Interrupts the kernel by sending it a signal.', 'files_count': 5, 'files': ['test_adapter.py', 'session.py', 'test_session.py', 'manager.py', 'client.py'], 'execution_path_count': 10, 'function_id_to_name_file': {'532': 'test_rename_type(test_adapter.py)', '520': 'msg(test_adapter.py)', '534': 'msg(test_adapter.py)', '476': 'msg(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '528': 'test_no_adapt(test_adapter.py)', '533': 'test_same_version(test_adapter.py)', '695': 'test_send_raw(test_session.py)', '692': 'test_feed_identities(test_session.py)', '694': 'test_send(test_session.py)', '696': 'test_serialize(test_session.py)', '693': 'test_msg(test_session.py)', '328': 'interrupt_kernel(manager.py)', '166': 'is_complete(client.py)'}}, {'key': 997, 'parent': 1656, 'tfidf_word': 'EP: 997, Name: test_execute_request &rarr; msg &rarr; msg &rarr; msg_header &rarr; msg_id', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1655, 'parent': 1656, 'tfidf_word': 'test send adapt feed identity raw rename type version msg ', 'tfidf_method': 'msg msg_header msg_id msg test_no_adapt test_rename_type test_same_version test_feed_identities test_send test_send_raw ', 'lda_word': ' msg,header,test,send,type,', 'lda_method': ' msg,msg_id,msg_header,test_same_version,test_send_raw,', 'lsi_word': ' msg,test,header,send,raw,', 'lsi_method': ' msg,msg_id,msg_header,test_send_raw,test_rename_type,', 'spm_method': ' ', 'text_summary': 'Empty', 'files_count': 3, 'files': ['test_adapter.py', 'session.py', 'test_session.py'], 'execution_path_count': 6, 'function_id_to_name_file': {'545': 'test_rename_type(test_adapter.py)', '534': 'msg(test_adapter.py)', '476': 'msg(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '546': 'test_same_version(test_adapter.py)', '544': 'test_no_adapt(test_adapter.py)', '695': 'test_send_raw(test_session.py)', '694': 'test_send(test_session.py)', '692': 'test_feed_identities(test_session.py)'}}, {'key': 999, 'parent': 1549, 'tfidf_word': 'EP: 999, Name: test_execute_request &rarr; msg &rarr; msg &rarr; msg &rarr; msg_header &rarr; msg_id', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1548, 'parent': 1549, 'tfidf_word': 'feed identity interrupt kernel raw rename serialize type version msg ', 'tfidf_method': 'is_complete interrupt_kernel test_no_adapt test_rename_type test_same_version test_feed_identities test_msg test_send test_send_raw test_serialize ', 'lda_word': ' msg,header,test,complete,send,', 'lda_method': ' msg,msg_header,msg_id,test_feed_identities,interrupt_kernel,', 'lsi_word': ' msg,header,test,send,raw,', 'lsi_method': ' msg,msg_id,msg_header,test_no_adapt,is_complete,', 'spm_method': ' ', 'text_summary': 'message format.', 'files_count': 5, 'files': ['test_adapter.py', 'session.py', 'test_session.py', 'manager.py', 'client.py'], 'execution_path_count': 10, 'function_id_to_name_file': {'545': 'test_rename_type(test_adapter.py)', '534': 'msg(test_adapter.py)', '520': 'msg(test_adapter.py)', '476': 'msg(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '544': 'test_no_adapt(test_adapter.py)', '546': 'test_same_version(test_adapter.py)', '695': 'test_send_raw(test_session.py)', '692': 'test_feed_identities(test_session.py)', '694': 'test_send(test_session.py)', '696': 'test_serialize(test_session.py)', '693': 'test_msg(test_session.py)', '328': 'interrupt_kernel(manager.py)', '166': 'is_complete(client.py)'}}, {'key': 942, 'parent': 1647, 'tfidf_word': 'EP: 942, Name: test_complete_request &rarr; msg &rarr; msg &rarr; msg_header &rarr; msg_id', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1646, 'parent': 1647, 'tfidf_word': 'adapt feed identity raw rename reply request type version msg ', 'tfidf_method': 'msg_id msg test_execute_reply test_execute_request test_no_adapt test_rename_type test_same_version test_feed_identities test_send test_send_raw ', 'lda_word': ' msg,test,header,raw,send,', 'lda_method': ' test_execute_reply,msg,msg_header,msg_id,test_rename_type,', 'lsi_word': ' msg,test,header,execute,send,', 'lsi_method': ' msg,msg_header,msg_id,test_execute_reply,test_send_raw,', 'spm_method': ' ', 'text_summary': 'Empty', 'files_count': 3, 'files': ['test_adapter.py', 'session.py', 'test_session.py'], 'execution_path_count': 8, 'function_id_to_name_file': {'524': 'test_execute_reply(test_adapter.py)', '520': 'msg(test_adapter.py)', '476': 'msg(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '525': 'test_execute_request(test_adapter.py)', '532': 'test_rename_type(test_adapter.py)', '533': 'test_same_version(test_adapter.py)', '528': 'test_no_adapt(test_adapter.py)', '695': 'test_send_raw(test_session.py)', '694': 'test_send(test_session.py)', '692': 'test_feed_identities(test_session.py)'}}, {'key': 943, 'parent': 1632, 'tfidf_word': 'EP: 943, Name: test_complete_request &rarr; msg &rarr; msg &rarr; msg &rarr; extract_header', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1631, 'parent': 1632, 'tfidf_word': 'msg adapt feed identity raw rename reply request type version ', 'tfidf_method': 'msg msg test_execute_reply test_execute_request test_no_adapt test_rename_type test_same_version test_feed_identities test_send test_send_raw ', 'lda_word': ' msg,extract,test,header,execute,', 'lda_method': ' msg,extract_header,test_execute_request,test_no_adapt,test_send_raw,', 'lsi_word': ' msg,test,extract,header,execute,', 'lsi_method': ' msg,extract_header,test_execute_reply,test_rename_type,test_send_raw,', 'spm_method': ' ', 'text_summary': '', 'files_count': 3, 'files': ['test_adapter.py', 'session.py', 'test_session.py'], 'execution_path_count': 8, 'function_id_to_name_file': {'524': 'test_execute_reply(test_adapter.py)', '520': 'msg(test_adapter.py)', '534': 'msg(test_adapter.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '525': 'test_execute_request(test_adapter.py)', '532': 'test_rename_type(test_adapter.py)', '533': 'test_same_version(test_adapter.py)', '528': 'test_no_adapt(test_adapter.py)', '695': 'test_send_raw(test_session.py)', '694': 'test_send(test_session.py)', '692': 'test_feed_identities(test_session.py)'}}, {'key': 802, 'parent': 1802, 'tfidf_word': 'EP: 802, Name: test_feed_identities &rarr; msg &rarr; msg &rarr; extract_header', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1800, 'parent': 1802, 'tfidf_word': 'extract header test send serialize msg ', 'tfidf_method': 'extract_header msg msg test_msg test_send test_serialize ', 'lda_word': ' msg,test,extract,header,send,', 'lda_method': ' msg,extract_header,test_serialize,test_send,test_msg,', 'lsi_word': ' msg,extract,test,header,serialize,', 'lsi_method': ' msg,extract_header,test_msg,test_send,test_serialize,', 'spm_method': ' ', 'text_summary': '', 'files_count': 3, 'files': ['test_session.py', 'test_adapter.py', 'session.py'], 'execution_path_count': 3, 'function_id_to_name_file': {'694': 'test_send(test_session.py)', '534': 'msg(test_adapter.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '693': 'test_msg(test_session.py)', '696': 'test_serialize(test_session.py)'}}, {'key': 1008, 'parent': 1620, 'tfidf_word': 'EP: 1008, Name: test_complete_reply &rarr; msg &rarr; msg &rarr; msg &rarr; extract_header', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1619, 'parent': 1620, 'tfidf_word': 'msg adapt complete execute feed identity raw rename type version ', 'tfidf_method': 'msg msg test_complete_request test_execute_request test_no_adapt test_rename_type test_same_version test_feed_identities test_send test_send_raw ', 'lda_word': ' msg,header,test,extract,adapt,', 'lda_method': ' msg,extract_header,test_rename_type,test_execute_request,test_feed_identities,', 'lsi_word': ' msg,extract,test,header,request,', 'lsi_method': ' msg,extract_header,test_send_raw,test_no_adapt,test_send,', 'spm_method': ' ', 'text_summary': '', 'files_count': 3, 'files': ['test_adapter.py', 'session.py', 'test_session.py'], 'execution_path_count': 8, 'function_id_to_name_file': {'536': 'test_complete_request(test_adapter.py)', '534': 'msg(test_adapter.py)', '520': 'msg(test_adapter.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '538': 'test_execute_request(test_adapter.py)', '545': 'test_rename_type(test_adapter.py)', '546': 'test_same_version(test_adapter.py)', '544': 'test_no_adapt(test_adapter.py)', '695': 'test_send_raw(test_session.py)', '694': 'test_send(test_session.py)', '692': 'test_feed_identities(test_session.py)'}}, {'key': 864, 'parent': 1803, 'tfidf_word': 'EP: 864, Name: test_send_raw &rarr; msg &rarr; msg &rarr; extract_header', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1801, 'parent': 1803, 'tfidf_word': 'extract header test feed identity send serialize msg ', 'tfidf_method': 'extract_header msg msg test_feed_identities test_msg test_send test_serialize ', 'lda_word': ' msg,header,test,extract,serialize,', 'lda_method': ' msg,extract_header,test_send,test_serialize,test_feed_identities,', 'lsi_word': ' msg,header,test,extract,identity,', 'lsi_method': ' msg,extract_header,test_msg,test_send,test_serialize,', 'spm_method': ' ', 'text_summary': '', 'files_count': 3, 'files': ['test_session.py', 'test_adapter.py', 'session.py'], 'execution_path_count': 4, 'function_id_to_name_file': {'692': 'test_feed_identities(test_session.py)', '520': 'msg(test_adapter.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '694': 'test_send(test_session.py)', '693': 'test_msg(test_session.py)', '696': 'test_serialize(test_session.py)'}}, {'key': 2054, 'parent': 2067, 'tfidf_word': 'auth bad init new test pack packer unpack ', 'tfidf_method': '__init__ _new_auth test_bad_pack test_bad_packer test_bad_unpack ', 'lda_word': ' init,test,bad,auth,new,', 'lda_method': ' init,test_bad_unpack,new_auth,test_bad_pack,test_bad_packer,', 'lsi_word': ' auth,test,new,bad,init,', 'lsi_method': ' init,new_auth,test_bad_packer,test_bad_pack,test_bad_unpack,', 'spm_method': ' ', 'text_summary': '', 'files_count': 2, 'files': ['test_session.py', 'session.py'], 'execution_path_count': 3, 'function_id_to_name_file': {'682': 'test_bad_packer(test_session.py)', '457': '__init__(session.py)', '465': '_new_auth(session.py)', '681': 'test_bad_pack(test_session.py)', '684': 'test_bad_unpack(test_session.py)'}}, {'key': 2066, 'parent': 2067, 'tfidf_word': 'auth init new test digest history cull id session zero ', 'tfidf_method': '__init__ _new_auth test_cull_digest_history test_session_id test_zero_digest_history ', 'lda_word': ' new,digest,test,auth,init,', 'lda_method': ' init,new_auth,test_zero_digest_history,test_session_id,test_cull_digest_history,', 'lsi_word': ' auth,test,new,init,history,', 'lsi_method': ' new_auth,init,test_zero_digest_history,test_session_id,test_cull_digest_history,', 'spm_method': ' ', 'text_summary': '', 'files_count': 2, 'files': ['test_session.py', 'session.py'], 'execution_path_count': 3, 'function_id_to_name_file': {'687': 'test_cull_digest_history(test_session.py)', '457': '__init__(session.py)', '465': '_new_auth(session.py)', '697': 'test_session_id(test_session.py)', '700': 'test_zero_digest_history(test_session.py)'}}, {'key': 344, 'parent': 1483, 'tfidf_word': 'EP: 344, Name: restart_kernel &rarr; start_kernel &rarr; pre_start_kernel &rarr; format_kernel_cmd &rarr; write_connection_file &rarr; _record_random_port_names', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 418, 'parent': 1483, 'tfidf_word': 'EP: 418, Name: start_new_async_kernel &rarr; start_kernel &rarr; pre_start_kernel &rarr; format_kernel_cmd &rarr; write_connection_file &rarr; _record_random_port_names', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 338, 'parent': 1885, 'tfidf_word': 'EP: 338, Name: restart_kernel &rarr; start_kernel &rarr; pre_start_kernel &rarr; local_ips', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 339, 'parent': 1885, 'tfidf_word': 'EP: 339, Name: restart_kernel &rarr; start_kernel &rarr; pre_start_kernel &rarr; is_local_ip', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 412, 'parent': 1894, 'tfidf_word': 'EP: 412, Name: start_new_async_kernel &rarr; start_kernel &rarr; pre_start_kernel &rarr; local_ips', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 413, 'parent': 1894, 'tfidf_word': 'EP: 413, Name: start_new_async_kernel &rarr; start_kernel &rarr; pre_start_kernel &rarr; is_local_ip', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1267, 'parent': 1829, 'tfidf_word': 'EP: 1267, Name: test_subclass &rarr; get_kernel_spec &rarr; _find_spec_directory &rarr; _is_kernel_dir', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1273, 'parent': 1829, 'tfidf_word': 'EP: 1273, Name: get_kernel_spec &rarr; get_kernel_spec &rarr; _find_spec_directory &rarr; _is_kernel_dir', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 716, 'parent': 1918, 'tfidf_word': 'EP: 716, Name: setUp &rarr; get_kernel_spec &rarr; _find_spec_directory &rarr; _is_kernel_dir', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1227, 'parent': 1918, 'tfidf_word': 'EP: 1227, Name: test_get_kernel_spec &rarr; get_kernel_spec &rarr; _find_spec_directory &rarr; _is_kernel_dir', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1839, 'parent': 1957, 'tfidf_word': 'find spec test init no such get kernel specs ', 'tfidf_method': 'get_all_specs get_kernel_spec test_find_all_specs NoSuchKernel __init__ ', 'lda_word': ' specs,get,kernel,spec,test,', 'lda_method': ' get_all_specs,test_find_all_specs,get_kernel_spec,nosuchkernel,init,', 'lsi_word': ' specs,get,kernel,find,spec,', 'lsi_method': ' get_all_specs,get_kernel_spec,test_find_all_specs,nosuchkernel,init,', 'spm_method': ' ', 'text_summary': '', 'files_count': 2, 'files': ['test_kernelspec.py', 'kernelspec.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'621': 'test_find_all_specs(test_kernelspec.py)', '273': 'get_all_specs(kernelspec.py)', '274': 'get_kernel_spec(kernelspec.py)', '255': 'NoSuchKernel(kernelspec.py)', '278': '__init__(kernelspec.py)'}}, {'key': 1956, 'parent': 1957, 'tfidf_word': 'find name test valid kernel spec specs get ', 'tfidf_method': 'get_all_specs get_kernel_spec test_find_all_specs _is_valid_kernel_name _get_kernel_spec_by_name ', 'lda_word': ' get,specs,kernel,spec,test,', 'lda_method': ' test_find_all_specs,get_all_specs,get_kernel_spec,get_kernel_spec_by_name,is_valid_kernel_name,', 'lsi_word': ' get,specs,kernel,spec,find,', 'lsi_method': ' get_all_specs,get_kernel_spec,test_find_all_specs,is_valid_kernel_name,get_kernel_spec_by_name,', 'spm_method': ' ', 'text_summary': 'Returns a :class:`KernelSpec` instance for a given kernel_name.', 'files_count': 2, 'files': ['test_kernelspec.py', 'kernelspec.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'621': 'test_find_all_specs(test_kernelspec.py)', '273': 'get_all_specs(kernelspec.py)', '274': 'get_kernel_spec(kernelspec.py)', '269': '_get_kernel_spec_by_name(kernelspec.py)', '257': '_is_valid_kernel_name(kernelspec.py)'}}, {'key': 1840, 'parent': 1962, 'tfidf_word': 'spec specs subclass test init no such get kernel ', 'tfidf_method': 'get_all_specs get_kernel_spec test_subclass NoSuchKernel __init__ ', 'lda_word': ' get,kernel,test,subclass,specs,', 'lda_method': ' get_all_specs,get_kernel_spec,test_subclass,init,nosuchkernel,', 'lsi_word': ' get,kernel,test,specs,subclass,', 'lsi_method': ' get_all_specs,get_kernel_spec,test_subclass,nosuchkernel,init,', 'spm_method': ' ', 'text_summary': '', 'files_count': 2, 'files': ['test_kernelspec.py', 'kernelspec.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'629': 'test_subclass(test_kernelspec.py)', '273': 'get_all_specs(kernelspec.py)', '274': 'get_kernel_spec(kernelspec.py)', '255': 'NoSuchKernel(kernelspec.py)', '278': '__init__(kernelspec.py)'}}, {'key': 1961, 'parent': 1962, 'tfidf_word': 'name specs subclass test valid kernel spec get ', 'tfidf_method': 'get_all_specs get_kernel_spec test_subclass _is_valid_kernel_name _get_kernel_spec_by_name ', 'lda_word': ' kernel,get,name,subclass,specs,', 'lda_method': ' get_all_specs,test_subclass,get_kernel_spec,get_kernel_spec_by_name,is_valid_kernel_name,', 'lsi_word': ' get,kernel,spec,subclass,name,', 'lsi_method': ' get_all_specs,get_kernel_spec,test_subclass,is_valid_kernel_name,get_kernel_spec_by_name,', 'spm_method': ' ', 'text_summary': 'Check that a kernel name is valid. Returns a dict mapping kernel names to kernelspecs.', 'files_count': 2, 'files': ['test_kernelspec.py', 'kernelspec.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'629': 'test_subclass(test_kernelspec.py)', '273': 'get_all_specs(kernelspec.py)', '274': 'get_kernel_spec(kernelspec.py)', '269': '_get_kernel_spec_by_name(kernelspec.py)', '257': '_is_valid_kernel_name(kernelspec.py)'}}, {'key': 1828, 'parent': 1917, 'tfidf_word': 'set up init no such get spec kernel ', 'tfidf_method': 'get_kernel_spec get_kernel_spec setUp NoSuchKernel __init__ ', 'lda_word': ' kernel,spec,get,set,init,', 'lda_method': ' get_kernel_spec,setup,init,nosuchkernel,', 'lsi_word': ' kernel,get,spec,set,init,', 'lsi_method': ' get_kernel_spec,setup,nosuchkernel,init,', 'spm_method': ' ', 'text_summary': '', 'files_count': 2, 'files': ['test_client.py', 'kernelspec.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'549': 'setUp(test_client.py)', '260': 'get_kernel_spec(kernelspec.py)', '274': 'get_kernel_spec(kernelspec.py)', '255': 'NoSuchKernel(kernelspec.py)', '278': '__init__(kernelspec.py)'}}, {'key': 1916, 'parent': 1917, 'tfidf_word': 'name set up valid get kernel spec ', 'tfidf_method': 'get_kernel_spec get_kernel_spec setUp _is_valid_kernel_name _get_kernel_spec_by_name ', 'lda_word': ' kernel,spec,get,set,name,', 'lda_method': ' get_kernel_spec,is_valid_kernel_name,setup,get_kernel_spec_by_name,', 'lsi_word': ' kernel,spec,get,name,set,', 'lsi_method': ' get_kernel_spec,setup,is_valid_kernel_name,get_kernel_spec_by_name,', 'spm_method': ' ', 'text_summary': '', 'files_count': 2, 'files': ['test_client.py', 'kernelspec.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'549': 'setUp(test_client.py)', '260': 'get_kernel_spec(kernelspec.py)', '274': 'get_kernel_spec(kernelspec.py)', '269': '_get_kernel_spec_by_name(kernelspec.py)', '257': '_is_valid_kernel_name(kernelspec.py)'}}, {'key': 1274, 'parent': 2211, 'tfidf_word': 'EP: 1274, Name: get_kernel_spec &rarr; get_kernel_spec &rarr; __init__', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2210, 'parent': 2211, 'tfidf_word': 'name no such valid get kernel spec ', 'tfidf_method': 'get_kernel_spec get_kernel_spec NoSuchKernel _is_valid_kernel_name _get_kernel_spec_by_name ', 'lda_word': ' kernel,spec,get,name,valid,', 'lda_method': ' get_kernel_spec,is_valid_kernel_name,nosuchkernel,get_kernel_spec_by_name,', 'lsi_word': ' kernel,get,spec,name,valid,', 'lsi_method': ' get_kernel_spec,get_kernel_spec_by_name,is_valid_kernel_name,nosuchkernel,', 'spm_method': ' ', 'text_summary': '', 'files_count': 2, 'files': ['test_kernelspec.py', 'kernelspec.py'], 'execution_path_count': 3, 'function_id_to_name_file': {'633': 'get_kernel_spec(test_kernelspec.py)', '274': 'get_kernel_spec(kernelspec.py)', '255': 'NoSuchKernel(kernelspec.py)', '269': '_get_kernel_spec_by_name(kernelspec.py)', '257': '_is_valid_kernel_name(kernelspec.py)'}}, {'key': 2208, 'parent': 2726, 'tfidf_word': 'subclass test name get kernel spec init no such valid ', 'tfidf_method': 'get_kernel_spec test_subclass NoSuchKernel _is_valid_kernel_name _get_kernel_spec_by_name __init__ ', 'lda_word': ' kernel,test,subclass,spec,get,', 'lda_method': ' get_kernel_spec,test_subclass,nosuchkernel,init,get_kernel_spec_by_name,', 'lsi_word': ' kernel,get,spec,test,subclass,', 'lsi_method': ' test_subclass,get_kernel_spec,nosuchkernel,get_kernel_spec_by_name,is_valid_kernel_name,', 'spm_method': ' ', 'text_summary': 'Test get_all_specs in subclasses that override find_kernel_specs. Check that a kernel name is valid.', 'files_count': 2, 'files': ['test_kernelspec.py', 'kernelspec.py'], 'execution_path_count': 4, 'function_id_to_name_file': {'629': 'test_subclass(test_kernelspec.py)', '274': 'get_kernel_spec(kernelspec.py)', '278': '__init__(kernelspec.py)', '255': 'NoSuchKernel(kernelspec.py)', '269': '_get_kernel_spec_by_name(kernelspec.py)', '257': '_is_valid_kernel_name(kernelspec.py)'}}, {'key': 2725, 'parent': 2726, 'tfidf_word': 'set test up init no such valid get kernel spec ', 'tfidf_method': 'get_kernel_spec setUp test_get_kernel_spec NoSuchKernel _is_valid_kernel_name _get_kernel_spec_by_name __init__ ', 'lda_word': ' kernel,get,spec,set,name,', 'lda_method': ' setup,get_kernel_spec,is_valid_kernel_name,test_get_kernel_spec,nosuchkernel,', 'lsi_word': ' kernel,spec,get,test,name,', 'lsi_method': ' get_kernel_spec,test_get_kernel_spec,setup,is_valid_kernel_name,get_kernel_spec_by_name,', 'spm_method': ' ', 'text_summary': '', 'files_count': 3, 'files': ['test_client.py', 'kernelspec.py', 'test_kernelspec.py'], 'execution_path_count': 8, 'function_id_to_name_file': {'549': 'setUp(test_client.py)', '274': 'get_kernel_spec(kernelspec.py)', '278': '__init__(kernelspec.py)', '255': 'NoSuchKernel(kernelspec.py)', '269': '_get_kernel_spec_by_name(kernelspec.py)', '257': '_is_valid_kernel_name(kernelspec.py)', '623': 'test_get_kernel_spec(test_kernelspec.py)'}}, {'key': 758, 'parent': 1836, 'tfidf_word': 'EP: 758, Name: test_send &rarr; deserialize &rarr; adapt &rarr; utcnow', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 862, 'parent': 1836, 'tfidf_word': 'EP: 862, Name: test_send_raw &rarr; deserialize &rarr; adapt &rarr; utcnow', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 114, 'parent': 1862, 'tfidf_word': 'EP: 114, Name: unserialize &rarr; deserialize &rarr; adapt &rarr; utcnow', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 745, 'parent': 1862, 'tfidf_word': 'EP: 745, Name: test_serialize &rarr; deserialize &rarr; adapt &rarr; utcnow', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 792, 'parent': 1838, 'tfidf_word': 'EP: 792, Name: test_tracking &rarr; send &rarr; adapt &rarr; utcnow', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1393, 'parent': 1838, 'tfidf_word': 'EP: 1393, Name: handle &rarr; send &rarr; adapt &rarr; utcnow', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 359, 'parent': 1891, 'tfidf_word': 'EP: 359, Name: interrupt_kernel &rarr; send &rarr; adapt &rarr; utcnow', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 778, 'parent': 1891, 'tfidf_word': 'EP: 778, Name: test_send &rarr; send &rarr; adapt &rarr; utcnow', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1094, 'parent': 2086, 'tfidf_word': 'EP: 1094, Name: test_app_load_connection_file &rarr; write_connection_file &rarr; close', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2085, 'parent': 2086, 'tfidf_word': 'app load test write close localhost connection file ', 'tfidf_method': 'write_connection_file test_app_load_connection_file localhost close ', 'lda_word': ' connection,file,load,write,app,', 'lda_method': ' test_app_load_connection_file,write_connection_file,close,localhost,', 'lsi_word': ' file,connection,test,write,load,', 'lsi_method': ' test_app_load_connection_file,write_connection_file,close,localhost,', 'spm_method': ' ', 'text_summary': '', 'files_count': 4, 'files': ['test_connect.py', 'connect.py', 'channels.py', 'localinterfaces.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'559': 'test_app_load_connection_file(test_connect.py)', '191': 'write_connection_file(connect.py)', '83': 'close(channels.py)', '315': 'localhost(localinterfaces.py)'}}, {'key': 1091, 'parent': 2184, 'tfidf_word': 'EP: 1091, Name: test_app_load_connection_file &rarr; write_connection_file &rarr; close', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2183, 'parent': 2184, 'tfidf_word': 'app load test write close connection file port ', 'tfidf_method': 'write_connection_file test_app_load_connection_file close ports close ', 'lda_word': ' file,connection,load,app,test,', 'lda_method': ' test_app_load_connection_file,write_connection_file,close,port,', 'lsi_word': ' connection,file,app,test,write,', 'lsi_method': ' test_app_load_connection_file,write_connection_file,close,port,', 'spm_method': ' ', 'text_summary': '', 'files_count': 4, 'files': ['test_connect.py', 'connect.py', 'channels.py', 'threaded.py'], 'execution_path_count': 3, 'function_id_to_name_file': {'559': 'test_app_load_connection_file(test_connect.py)', '191': 'write_connection_file(connect.py)', '132': 'close(channels.py)', '211': 'ports(connect.py)', '718': 'close(threaded.py)'}}, {'key': 2083, 'parent': 2181, 'tfidf_word': 'kn load session test write close connection file localhost ', 'tfidf_method': 'write_connection_file test_load_connection_file_session_with_kn close localhost close ', 'lda_word': ' file,connection,load,session,kn,', 'lda_method': ' test_load_connection_file_session_with_kn,write_connection_file,close,localhost,', 'lsi_word': ' connection,file,kn,session,write,', 'lsi_method': ' test_load_connection_file_session_with_kn,write_connection_file,close,localhost,', 'spm_method': ' ', 'text_summary': '', 'files_count': 4, 'files': ['test_connect.py', 'connect.py', 'channels.py', 'localinterfaces.py'], 'execution_path_count': 3, 'function_id_to_name_file': {'565': 'test_load_connection_file_session_with_kn(test_connect.py)', '191': 'write_connection_file(connect.py)', '109': 'close(channels.py)', '83': 'close(channels.py)', '315': 'localhost(localinterfaces.py)'}}, {'key': 2180, 'parent': 2181, 'tfidf_word': 'kn load session test write close connection file port ', 'tfidf_method': 'write_connection_file test_load_connection_file_session_with_kn close ports close close ', 'lda_word': ' file,connection,write,load,kn,', 'lda_method': ' write_connection_file,test_load_connection_file_session_with_kn,close,port,', 'lsi_word': ' file,connection,test,session,write,', 'lsi_method': ' test_load_connection_file_session_with_kn,write_connection_file,close,port,', 'spm_method': ' ', 'text_summary': '', 'files_count': 4, 'files': ['test_connect.py', 'connect.py', 'threaded.py', 'channels.py'], 'execution_path_count': 4, 'function_id_to_name_file': {'565': 'test_load_connection_file_session_with_kn(test_connect.py)', '191': 'write_connection_file(connect.py)', '730': 'close(threaded.py)', '132': 'close(channels.py)', '211': 'ports(connect.py)', '718': 'close(threaded.py)'}}, {'key': 2173, 'parent': 2761, 'tfidf_word': 'test close connection file write localhost port ', 'tfidf_method': 'write_connection_file test_write_connection_file close close ports localhost close close close ', 'lda_word': ' file,write,connection,close,test,', 'lda_method': ' close,write_connection_file,test_write_connection_file,localhost,port,', 'lsi_word': ' write,file,connection,test,close,', 'lsi_method': ' test_write_connection_file,write_connection_file,close,port,localhost,', 'spm_method': ' ', 'text_summary': '', 'files_count': 5, 'files': ['test_connect.py', 'connect.py', 'channels.py', 'localinterfaces.py', 'threaded.py'], 'execution_path_count': 7, 'function_id_to_name_file': {'570': 'test_write_connection_file(test_connect.py)', '191': 'write_connection_file(connect.py)', '109': 'close(channels.py)', '83': 'close(channels.py)', '315': 'localhost(localinterfaces.py)', '730': 'close(threaded.py)', '132': 'close(channels.py)', '211': 'ports(connect.py)', '718': 'close(threaded.py)'}}, {'key': 2177, 'parent': 2761, 'tfidf_word': 'load session test write close connection file localhost port ', 'tfidf_method': 'write_connection_file test_load_connection_file_session close close ports localhost close close close ', 'lda_word': ' connection,file,port,session,test,', 'lda_method': ' test_load_connection_file_session,write_connection_file,close,localhost,port,', 'lsi_word': ' connection,file,write,load,session,', 'lsi_method': ' test_load_connection_file_session,write_connection_file,close,localhost,port,', 'spm_method': ' ', 'text_summary': 'return ip for localhost (almost always 127.0.0.1) test load_connection_file() after. test load_connection_file() after.', 'files_count': 5, 'files': ['test_connect.py', 'connect.py', 'channels.py', 'localinterfaces.py', 'threaded.py'], 'execution_path_count': 7, 'function_id_to_name_file': {'564': 'test_load_connection_file_session(test_connect.py)', '191': 'write_connection_file(connect.py)', '109': 'close(channels.py)', '83': 'close(channels.py)', '315': 'localhost(localinterfaces.py)', '730': 'close(threaded.py)', '132': 'close(channels.py)', '211': 'ports(connect.py)', '718': 'close(threaded.py)'}}, {'key': 875, 'parent': 2164, 'tfidf_word': 'EP: 875, Name: test_clone &rarr; _add_digest &rarr; _cull_digest_history', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2160, 'parent': 2164, 'tfidf_word': 'add test zero cull history digest ', 'tfidf_method': '_add_digest _cull_digest_history test_cull_digest_history test_zero_digest_history ', 'lda_word': ' digest,history,cull,test,add,', 'lda_method': ' cull_digest_history,add_digest,test_zero_digest_history,test_cull_digest_history,', 'lsi_word': ' digest,history,cull,add,test,', 'lsi_method': ' add_digest,cull_digest_history,test_cull_digest_history,test_zero_digest_history,', 'spm_method': ' ', 'text_summary': '', 'files_count': 2, 'files': ['test_session.py', 'session.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'700': 'test_zero_digest_history(test_session.py)', '458': '_add_digest(session.py)', '460': '_cull_digest_history(session.py)', '687': 'test_cull_digest_history(test_session.py)'}}, {'key': 1729, 'parent': 2269, 'tfidf_word': 'add cull deserialize history recv handle send test digest ', 'tfidf_method': '_add_digest _cull_digest_history deserialize recv handle test_send ', 'lda_word': ' digest,recv,cull,deserialize,add,', 'lda_method': ' deserialize,test_send,add_digest,cull_digest_history,recv,', 'lsi_word': ' digest,add,recv,history,deserialize,', 'lsi_method': ' cull_digest_history,add_digest,deserialize,recv,handle,', 'spm_method': ' ', 'text_summary': 'cull the digest history. Unserialize a msg_list to a nested message dict.', 'files_count': 3, 'files': ['test_session.py', 'session.py', 'forward.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'694': 'test_send(test_session.py)', '479': 'recv(session.py)', '474': 'deserialize(session.py)', '458': '_add_digest(session.py)', '460': '_cull_digest_history(session.py)', '492': 'handle(forward.py)'}}, {'key': 1924, 'parent': 2269, 'tfidf_word': 'add cull deserialize history test send digest raw serialize unserialize ', 'tfidf_method': '_add_digest _cull_digest_history deserialize unserialize test_send test_send_raw test_serialize ', 'lda_word': ' digest,history,cull,add,test,', 'lda_method': ' deserialize,cull_digest_history,add_digest,test_serialize,test_send,', 'lsi_word': ' digest,add,deserialize,history,cull,', 'lsi_method': ' cull_digest_history,add_digest,deserialize,test_send_raw,unserialize,', 'spm_method': ' ', 'text_summary': '', 'files_count': 2, 'files': ['test_session.py', 'session.py'], 'execution_path_count': 4, 'function_id_to_name_file': {'694': 'test_send(test_session.py)', '474': 'deserialize(session.py)', '458': '_add_digest(session.py)', '460': '_cull_digest_history(session.py)', '695': 'test_send_raw(test_session.py)', '484': 'unserialize(session.py)', '696': 'test_serialize(test_session.py)'}}, {'key': 2348, 'parent': 2715, 'tfidf_word': 'test load mixin connection console file find kn session app ', 'tfidf_method': 'JupyterConsoleApp DummyConsoleApp ConnectionFileMixin Session test_app_load_connection_file test_find_connection_file test_load_connection_file_session test_load_connection_file_session_with_kn ', 'lda_word': ' app,console,file,connection,test,', 'lda_method': ' dummyconsoleapp,jupyterconsoleapp,test_app_load_connection_file,connectionfilemixin,session,', 'lsi_word': ' app,console,file,connection,dummy,', 'lsi_method': ' dummyconsoleapp,jupyterconsoleapp,session,connectionfilemixin,test_app_load_connection_file,', 'spm_method': ' ', 'text_summary': '', 'files_count': 4, 'files': ['test_connect.py', 'consoleapp.py', 'session.py', 'connect.py'], 'execution_path_count': 8, 'function_id_to_name_file': {'559': 'test_app_load_connection_file(test_connect.py)', '558': 'DummyConsoleApp(test_connect.py)', '214': 'JupyterConsoleApp(consoleapp.py)', '441': 'Session(session.py)', '188': 'ConnectionFileMixin(connect.py)', '560': 'test_find_connection_file(test_connect.py)', '564': 'test_load_connection_file_session(test_connect.py)', '565': 'test_load_connection_file_session_with_kn(test_connect.py)'}}, {'key': 2649, 'parent': 2715, 'tfidf_word': 'jupyter connection file i mixin python run session app console ', 'tfidf_method': 'JupyterConsoleApp ConnectionFileMixin IPythonConsoleApp RunApp Session ', 'lda_word': ' app,jupyter,console,session,python,', 'lda_method': ' jupyterconsoleapp,runapp,ipythonconsoleapp,connectionfilemixin,session,', 'lsi_word': ' app,console,jupyter,python,mixin,', 'lsi_method': ' jupyterconsoleapp,ipythonconsoleapp,session,connectionfilemixin,runapp,', 'spm_method': ' ', 'text_summary': '', 'files_count': 4, 'files': ['consoleapp.py', 'session.py', 'connect.py', 'runapp.py'], 'execution_path_count': 4, 'function_id_to_name_file': {'213': 'IPythonConsoleApp(consoleapp.py)', '214': 'JupyterConsoleApp(consoleapp.py)', '441': 'Session(session.py)', '188': 'ConnectionFileMixin(connect.py)', '434': 'RunApp(runapp.py)'}}, {'key': 2659, 'parent': 2773, 'tfidf_word': 'test loop process thread lifecycle tcp cinfo id sequence shutdown ', 'tfidf_method': '__init__ _get_tcp_km test_tcp_lifecycle tcp_lifecycle_with_loop test_start_parallel_process_kernels test_start_parallel_thread_kernels test_shutdown_all test_start_sequence_tcp_kernels test_tcp_cinfo test_tcp_lifecycle_with_kernel_id ', 'lda_word': ' tcp,test,get,km,init,', 'lda_method': ' get_tcp_km,init,test_tcp_lifecycle,test_start_parallel_thread_kernels,test_tcp_cinfo,', 'lsi_word': ' tcp,test,lifecycle,get,km,', 'lsi_method': ' init,get_tcp_km,test_tcp_lifecycle,tcp_lifecycle_with_loop,test_start_parallel_thread_kernels,', 'spm_method': ' ', 'text_summary': 'Empty', 'files_count': 2, 'files': ['test_multikernelmanager.py', 'multikernelmanager.py'], 'execution_path_count': 8, 'function_id_to_name_file': {'665': 'test_start_sequence_tcp_kernels(test_multikernelmanager.py)', '655': '_get_tcp_km(test_multikernelmanager.py)', '392': '__init__(multikernelmanager.py)', '666': 'test_tcp_cinfo(test_multikernelmanager.py)', '668': 'test_tcp_lifecycle_with_kernel_id(test_multikernelmanager.py)', '661': 'test_shutdown_all(test_multikernelmanager.py)', '663': 'test_start_parallel_thread_kernels(test_multikernelmanager.py)', '658': 'tcp_lifecycle_with_loop(test_multikernelmanager.py)', '667': 'test_tcp_lifecycle(test_multikernelmanager.py)', '662': 'test_start_parallel_process_kernels(test_multikernelmanager.py)'}}, {'key': 2768, 'parent': 2773, 'tfidf_word': 'manager loop flush native permission tunnel io cleanup code restarter ', 'tfidf_method': 'test_find_connection_file test_find_connection_file_abspath test_find_connection_file_local test_find_connection_file_relative test_load_connection_file_session test_load_connection_file_session_with_kn test_mixin_record_random_ports test_secure_write test_kernel_info wrapped ', 'lda_word': ' test,kernel,get,send,spec,', 'lda_method': ' start,test_send,pre_start_kernel,start_kernel,setup,', 'lsi_word': ' kernel,test,lifecycle,start,manager,', 'lsi_method': ' init,check_packers,utcnow,get_ipc_km,new_auth,', 'spm_method': ' ', 'text_summary': "Subclasses may override  Prepares a kernel for startup in a separate process. Prepares a kernel for startup in a separate process. return ip for localhost (almost always 127.0.0.1)   Ensure that a sequence of kernel startups doesn't break anything. Sends a signal to the process group of the kernel (this. Pass a message to the ZMQ socket to send. This method is called in the ioloop thread when a message arrives. Return the connection info as a dict. Subclasses may override Start the polling of the kernel. Ensure that a sequence of kernel startups doesn't break anything. find a connection file, and return its absolute path. return ip for localhost (almost always 127.0.0.1)      find a connection file, and return its absolute path. tunnel connections to a kernel via ssh. handle kernel info reply. Get the hb channel object for this kernel. Returns the id to associate with the kernel for this request. Send a raw message via ident path. Make a blocking client connected to my kernel. Get a message from the stdin channel. Immediately processes all pending messages on this channel. Return the number of running kernels. Unserialize a msg_list to a nested message dict. Get the single KernelManager object for a kernel by its uuid. Interrupts the kernel by sending it a signal. Get a message from the shell channel. Create an ssh tunnel using command-line ssh that connects port lport. Get a message from the iopub channel. This is run in the ioloop thread when the kernel info reply is received. default function for packing datetime objects in JSON. Start the polling of the kernel. Send a shutdown request via control channel. test load_connection_file() after. Sends an interrupt event using the specified handle. test that messages receive unique ids. Forgets randomly assigned port numbers and cleans up the connection file.", 'files_count': 35, 'files': ['connect.py', 'tunnel.py', 'threaded.py', 'channels.py', 'test_ssh.py', 'multikernelmanager.py', 'client.py', 'managerabc.py', 'channelsabc.py', 'test_multikernelmanager.py', 'test_session.py', 'session.py', 'forward.py', 'manager.py', 'test_kernelspec.py', 'kernelspec.py', 'test_kernelmanager.py', 'consoleapp.py', 'jsonutil.py', 'test_manager.py', 'utils.py', 'restarter.py', 'signalkernel.py', 'test_connect.py', 'kernelspecapp.py', 'kernelapp.py', 'test_adapter.py', 'test_jsonutil.py', 'localinterfaces.py', 'adapter.py', 'test_kernelapp.py', 'test_client.py', 'win_interrupt.py', 'runapp.py', 'launcher.py'], 'execution_path_count': 376, 'function_id_to_name_file': {'190': 'tunnel_to_kernel(connect.py)', '503': 'select_random_ports(tunnel.py)', '718': 'close(threaded.py)', '730': 'close(threaded.py)', '132': 'close(channels.py)', '109': 'close(channels.py)', '83': 'close(channels.py)', '211': 'ports(connect.py)', '701': 'test_random_ports(test_ssh.py)', '386': 'shutdown_all(multikernelmanager.py)', '383': 'finish_shutdown(multikernelmanager.py)', '410': 'get_kernel(multikernelmanager.py)', '394': '_check_kernel_id(multikernelmanager.py)', '388': 'signal_kernel(multikernelmanager.py)', '385': 'restart_kernel(multikernelmanager.py)', '384': 'interrupt_kernel(multikernelmanager.py)', '387': 'shutdown_kernel(multikernelmanager.py)', '421': 'shutdown_kernel(multikernelmanager.py)', '420': 'shutdown_all(multikernelmanager.py)', '104': 'wait_for_ready(client.py)', '103': 'is_alive(client.py)', '412': 'is_alive(multikernelmanager.py)', '373': 'is_alive(managerabc.py)', '140': 'is_alive(channelsabc.py)', '732': 'is_alive(threaded.py)', '86': 'is_alive(channels.py)', '112': 'is_alive(channels.py)', '123': 'wait_for_ready(client.py)', '165': 'is_alive(client.py)', '648': 'test_start_parallel_thread_kernels(test_multikernelmanager.py)', '643': 'tcp_lifecycle_with_loop(test_multikernelmanager.py)', '642': 'raw_tcp_lifecycle(test_multikernelmanager.py)', '641': '_run_lifecycle(test_multikernelmanager.py)', '647': 'test_start_parallel_process_kernels(test_multikernelmanager.py)', '652': 'test_tcp_lifecycle(test_multikernelmanager.py)', '653': 'test_tcp_lifecycle_with_kernel_id(test_multikernelmanager.py)', '694': 'test_send(test_session.py)', '479': 'recv(session.py)', '474': 'deserialize(session.py)', '483': 'sign(session.py)', '492': 'handle(forward.py)', '695': 'test_send_raw(test_session.py)', '484': 'unserialize(session.py)', '696': 'test_serialize(test_session.py)', '480': 'send(session.py)', '440': 'Message(session.py)', '698': 'test_tracking(test_session.py)', '328': 'interrupt_kernel(manager.py)', '482': 'serialize(session.py)', '135': 'run(channels.py)', '128': '_create_socket(channels.py)', '84': 'get_msg(channels.py)', '82': '_recv(channels.py)', '101': 'get_stdin_msg(client.py)', '85': 'get_msgs(channels.py)', '99': 'get_iopub_msg(client.py)', '110': 'get_msg(channels.py)', '108': '_recv(channels.py)', '111': 'get_msgs(channels.py)', '620': 'test_cant_install_kernel_spec(test_kernelspec.py)', '275': 'install_kernel_spec(kernelspec.py)', '268': '_get_destination_dir(kernelspec.py)', '257': '_is_valid_kernel_name(kernelspec.py)', '625': 'test_install_kernel_spec_prefix(test_kernelspec.py)', '261': 'install_kernel_spec(kernelspec.py)', '624': 'test_install_kernel_spec(test_kernelspec.py)', '614': 'test_start_sequence_process_kernels(test_kernelmanager.py)', '610': '_run_signaltest_lifecycle(test_kernelmanager.py)', '615': 'execute(test_kernelmanager.py)', '609': '_prepare_kernel(test_kernelmanager.py)', '611': 'test_start_parallel_process_kernels(test_kernelmanager.py)', '613': 'test_start_sequence_kernels(test_kernelmanager.py)', '612': 'test_start_parallel_thread_kernels(test_kernelmanager.py)', '398': '_kernel_manager_class_changed(multikernelmanager.py)', '396': '_create_kernel_manager_factory(multikernelmanager.py)', '424': 'create_kernel_manager(multikernelmanager.py)', '397': '_find_available_port(multikernelmanager.py)', '395': '_context_default(multikernelmanager.py)', '399': '_kernel_manager_factory_default(multikernelmanager.py)', '215': '__init__(consoleapp.py)', '485': '__init__(session.py)', '441': 'Session(session.py)', '457': '__init__(session.py)', '465': '_new_auth(session.py)', '459': '_check_packers(session.py)', '450': 'utcnow(session.py)', '244': 'squash_dates(jsonutil.py)', '90': 'AsyncKernelClient(client.py)', '147': 'KernelClient(client.py)', '139': 'HBChannelABC(channelsabc.py)', '138': 'ChannelABC(channelsabc.py)', '116': 'BlockingKernelClient(client.py)', '188': 'ConnectionFileMixin(connect.py)', '322': 'start_new_async_kernel(manager.py)', '319': 'AsyncKernelManager(manager.py)', '320': 'KernelManager(manager.py)', '224': 'AsyncIOLoopKernelManager(manager.py)', '225': 'IOLoopKernelManager(manager.py)', '635': 'test_connection_file_real_path(test_manager.py)', '663': 'test_start_parallel_thread_kernels(test_multikernelmanager.py)', '658': 'tcp_lifecycle_with_loop(test_multikernelmanager.py)', '667': 'test_tcp_lifecycle(test_multikernelmanager.py)', '657': '_run_lifecycle(test_multikernelmanager.py)', '662': 'test_start_parallel_process_kernels(test_multikernelmanager.py)', '704': 'execute(utils.py)', '155': 'execute(client.py)', '148': 'validate_string_dict(client.py)', '689': 'test_datetimes_msgpack(test_session.py)', '679': '_datetime_test(test_session.py)', '688': 'test_datetimes(test_session.py)', '690': 'test_datetimes_pickle(test_session.py)', '734': 'send(threaded.py)', '738': 'thread_send(threaded.py)', '664': 'test_start_sequence_ipc_kernels(test_multikernelmanager.py)', '654': '_get_ipc_km(test_multikernelmanager.py)', '392': '__init__(multikernelmanager.py)', '660': 'test_ipc_lifecycle(test_multikernelmanager.py)', '659': 'test_ipc_cinfo(test_multikernelmanager.py)', '423': 'start_kernel(multikernelmanager.py)', '415': 'pre_start_kernel(multikernelmanager.py)', '380': 'DuplicateKernelError(multikernelmanager.py)', '414': 'new_kernel_id(multikernelmanager.py)', '389': 'start_kernel(multikernelmanager.py)', '238': 'start(restarter.py)', '430': 'poll(restarter.py)', '433': 'stop(restarter.py)', '428': '_fire_callbacks(restarter.py)', '510': 'do_execute(signalkernel.py)', '501': 'openssh_tunnel(tunnel.py)', '494': 'SSHException(tunnel.py)', '497': '_stop_tunnel(tunnel.py)', '475': 'feed_identities(session.py)', '330': 'restart_kernel(manager.py)', '202': 'cleanup_random_ports(connect.py)', '200': 'cleanup_connection_file(connect.py)', '567': 'test_mixin_cleanup_random_ports(test_connect.py)', '106': 'ZMQSocketChannel(channels.py)', '226': 'as_zmqstream(manager.py)', '233': 'wrapped(manager.py)', '568': 'test_mixin_record_random_ports(test_connect.py)', '557': 'DummyConfigurable(test_connect.py)', '235': 'IOLoopKernelRestarter(restarter.py)', '426': 'KernelRestarter(restarter.py)', '234': 'AsyncIOLoopKernelRestarter(restarter.py)', '291': 'start(kernelspecapp.py)', '251': 'start(kernelapp.py)', '249': 'setup_signals(kernelapp.py)', '252': 'shutdown_handler(kernelapp.py)', '250': 'shutdown(kernelapp.py)', '248': 'log_connection_info(kernelapp.py)', '199': 'blocking_client(connect.py)', '208': 'get_connection_info(connect.py)', '725': 'stop_channels(threaded.py)', '684': 'test_bad_unpack(test_session.py)', '676': '_bad_unpacker(test_session.py)', '536': 'test_complete_request(test_adapter.py)', '517': 'adapt(test_adapter.py)', '562': 'test_find_connection_file_local(test_connect.py)', '189': 'find_connection_file(connect.py)', '493': 'SubHander(forward.py)', '490': 'Handler(forward.py)', '253': 'KernelSpec(kernelspec.py)', '114': 'send(channels.py)', '88': 'send(channels.py)', '575': 'test_date_default(test_jsonutil.py)', '241': 'date_default(jsonutil.py)', '240': '_ensure_tzinfo(jsonutil.py)', '597': 'test_subclasses(test_kernelmanager.py)', '703': 'AsyncKernelManagerWithCleanup(utils.py)', '595': 'test_signal_kernel_subprocesses(test_kernelmanager.py)', '598': 'execute(test_kernelmanager.py)', '702': 'AsyncKernelManagerSubclass(utils.py)', '591': 'transport(test_kernelmanager.py)', '606': 'test_templated_kspec_env(test_kernelmanager.py)', '599': '_env_test_body(test_kernelmanager.py)', '607': 'execute(test_kernelmanager.py)', '604': 'test_signal_kernel_subprocesses(test_kernelmanager.py)', '608': 'execute(test_kernelmanager.py)', '586': 'env(test_kernelmanager.py)', '712': 'stop(utils.py)', '711': 'start(utils.py)', '705': 'test_env(utils.py)', '630': 'test_validate_kernel_name(test_kernelspec.py)', '506': 'SignalTestApp(signalkernel.py)', '507': 'SignalTestKernel(signalkernel.py)', '627': 'test_remove_kernel_spec(test_kernelspec.py)', '617': '_install_sample_kernel(test_kernelspec.py)', '626': 'test_kernel_spec_priority(test_kernelspec.py)', '651': 'test_tcp_cinfo(test_multikernelmanager.py)', '640': '_run_cinfo(test_multikernelmanager.py)', '621': 'test_find_all_specs(test_kernelspec.py)', '622': 'test_find_kernel_specs(test_kernelspec.py)', '623': 'test_get_kernel_spec(test_kernelspec.py)', '619': 'tearDown(test_kernelspec.py)', '618': 'setUp(test_kernelspec.py)', '649': 'test_start_sequence_ipc_kernels(test_multikernelmanager.py)', '650': 'test_start_sequence_tcp_kernels(test_multikernelmanager.py)', '644': 'test_ipc_cinfo(test_multikernelmanager.py)', '315': 'localhost(localinterfaces.py)', '645': 'test_ipc_lifecycle(test_multikernelmanager.py)', '665': 'test_start_sequence_tcp_kernels(test_multikernelmanager.py)', '656': '_run_cinfo(test_multikernelmanager.py)', '666': 'test_tcp_cinfo(test_multikernelmanager.py)', '668': 'test_tcp_lifecycle_with_kernel_id(test_multikernelmanager.py)', '569': 'test_secure_write(test_connect.py)', '573': 'check_user_only_permissions(test_connect.py)', '574': 'fetch_win32_permissions(test_connect.py)', '563': 'test_find_connection_file_relative(test_connect.py)', '561': 'test_find_connection_file_abspath(test_connect.py)', '560': 'test_find_connection_file(test_connect.py)', '565': 'test_load_connection_file_session_with_kn(test_connect.py)', '539': 'test_input_request(test_adapter.py)', '564': 'test_load_connection_file_session(test_connect.py)', '537': 'test_display_data(test_adapter.py)', '540': 'test_inspect_reply(test_adapter.py)', '543': 'test_kernel_info_reply(test_adapter.py)', '542': 'test_inspect_request_token(test_adapter.py)', '535': 'test_complete_reply(test_adapter.py)', '541': 'test_inspect_request(test_adapter.py)', '538': 'test_execute_request(test_adapter.py)', '545': 'test_rename_type(test_adapter.py)', '544': 'test_no_adapt(test_adapter.py)', '546': 'test_same_version(test_adapter.py)', '514': 'V5toV4TestCase(test_adapter.py)', '512': 'AdapterTest(test_adapter.py)', '526': 'test_input_request(test_adapter.py)', '523': 'test_display_data(test_adapter.py)', '527': 'test_kernel_info_reply(test_adapter.py)', '530': 'test_object_info_reply_not_found(test_adapter.py)', '529': 'test_object_info_reply(test_adapter.py)', '531': 'test_object_info_request(test_adapter.py)', '521': 'test_complete_reply(test_adapter.py)', '522': 'test_complete_request(test_adapter.py)', '524': 'test_execute_reply(test_adapter.py)', '532': 'test_rename_type(test_adapter.py)', '525': 'test_execute_request(test_adapter.py)', '528': 'test_no_adapt(test_adapter.py)', '533': 'test_same_version(test_adapter.py)', '513': 'V4toV5TestCase(test_adapter.py)', '519': 'setUp(test_adapter.py)', '516': 'test_default_version(test_adapter.py)', '515': 'test_code_to_line_no_code(test_adapter.py)', '51': 'code_to_line(adapter.py)', '158': 'get_shell_msg(client.py)', '157': 'get_iopub_msg(client.py)', '710': '__exit__(utils.py)', '709': '__enter__(utils.py)', '580': 'test_kernelapp_lifecycle(test_kernelapp.py)', '579': '_launch(test_kernelapp.py)', '686': 'test_clone(test_session.py)', '473': 'clone(session.py)', '481': 'send_raw(session.py)', '683': 'test_bad_roundtrip(test_session.py)', '685': 'test_bad_unpacker(test_session.py)', '682': 'test_bad_packer(test_session.py)', '681': 'test_bad_pack(test_session.py)', '675': '_bad_packer(test_session.py)', '687': 'test_cull_digest_history(test_session.py)', '700': 'test_zero_digest_history(test_session.py)', '697': 'test_session_id(test_session.py)', '699': 'test_unique_msg_ids(test_session.py)', '445': 'msg_header(session.py)', '680': 'test_args(test_session.py)', '478': 'msg_id(session.py)', '674': 'TestSession(test_session.py)', '673': 'SessionTestCase(test_session.py)', '678': 'setUp(test_session.py)', '556': 'test_shutdown(test_client.py)', '548': '_check_reply(test_client.py)', '550': 'test_comm_info(test_client.py)', '555': 'test_kernel_info(test_client.py)', '551': 'test_complete(test_client.py)', '554': 'test_inspect(test_client.py)', '553': 'test_history(test_client.py)', '549': 'setUp(test_client.py)', '255': 'NoSuchKernel(kernelspec.py)', '117': 'reqrep(client.py)', '124': 'wrapped(client.py)', '150': '_handle_kernel_info_reply(client.py)', '125': 'HBChannel(channels.py)', '102': 'hb_channel(client.py)', '196': '_make_url(connect.py)', '91': 'reqrep(client.py)', '105': 'wrapped(client.py)', '80': 'ZMQSocketChannel(channels.py)', '154': 'control_channel(client.py)', '723': 'ioloop(threaded.py)', '160': 'hb_channel(client.py)', '171': 'stdin_channel(client.py)', '164': 'iopub_channel(client.py)', '168': 'shell_channel(client.py)', '740': 'send_interrupt(win_interrupt.py)', '334': '__del__(manager.py)', '293': 'start(kernelspecapp.py)', '294': 'path_key(kernelspecapp.py)', '735': 'start(threaded.py)', '720': 'start(threaded.py)', '141': 'start(channelsabc.py)', '432': 'start(restarter.py)', '288': 'start(kernelspecapp.py)', '89': 'start(channels.py)', '115': 'start(channels.py)', '290': 'start(kernelspecapp.py)', '438': 'parse_command_line(runapp.py)', '218': 'build_kernel_argv(consoleapp.py)', '308': '_only_once(localinterfaces.py)', '317': 'wrapped(localinterfaces.py)', '47': 'V4toV5(adapter.py)', '46': 'Adapter(adapter.py)', '77': 'object_info_request(adapter.py)', '52': 'extract_oname_v4(adapter.py)', '70': 'complete_request(adapter.py)', '75': 'kernel_info_reply(adapter.py)', '49': '_version_str_to_list(adapter.py)', '48': 'V5toV4(adapter.py)', '53': '__call__(adapter.py)', '54': 'handle_reply_status_error(adapter.py)', '57': 'update_msg_type(adapter.py)', '56': 'update_metadata(adapter.py)', '55': 'update_header(adapter.py)', '247': 'initialize(kernelapp.py)', '246': '_record_started(kernelapp.py)', '585': 'config(test_kernelmanager.py)', '262': 'install_native_kernel_spec(kernelspec.py)', '276': 'install_native_kernel_spec(kernelspec.py)', '265': 'to_json(kernelspec.py)', '264': 'to_dict(kernelspec.py)', '449': 'test_msg2obj(session.py)', '453': '__init__(session.py)', '470': '_signature_scheme_changed(session.py)', '463': '_key_default(session.py)', '447': 'new_id_bytes(session.py)', '462': '_key_changed(session.py)', '443': 'default_secure(session.py)', '469': '_session_default(session.py)', '446': 'new_id(session.py)', '413': 'list_kernel_ids(multikernelmanager.py)', '721': 'stop(threaded.py)', '724': 'start_channels(threaded.py)', '722': '_check_kernel_info_reply(threaded.py)', '716': '__init__(threaded.py)', '416': 'remove_kernel(multikernelmanager.py)', '713': 'IOLoopThread(threaded.py)', '714': 'ThreadedKernelClient(threaded.py)', '715': 'ThreadedZMQSocketChannel(threaded.py)', '731': 'flush(threaded.py)', '727': '_flush(threaded.py)', '418': 'request_shutdown(multikernelmanager.py)', '402': 'cleanup_resources(multikernelmanager.py)', '408': 'finish_shutdown(multikernelmanager.py)', '393': '__len__(multikernelmanager.py)', '198': '_session_default(connect.py)', '298': 'launch_kernel(launcher.py)', '739': 'create_interrupt_event(win_interrupt.py)', '741': 'SECURITY_ATTRIBUTES(win_interrupt.py)', '509': '__init__(signalkernel.py)', '278': '__init__(kernelspec.py)', '127': '__init__(channels.py)', '126': 'InvalidPortNumber(channels.py)', '107': '__init__(channels.py)', '81': '__init__(channels.py)', '726': '__init__(threaded.py)', '737': 'setup_stream(threaded.py)', '728': '_handle_recv(threaded.py)', '729': 'call_handlers(threaded.py)', '136': 'stop(channels.py)', '133': 'is_beating(channels.py)', '145': 'time_to_dead(channelsabc.py)', '131': 'call_handlers(channels.py)', '130': '_poll(channels.py)'}}, {'key': 928, 'parent': 1535, 'tfidf_word': 'EP: 928, Name: test_rename_type &rarr; msg &rarr; msg &rarr; msg &rarr; msg_header &rarr; msg_id', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1534, 'parent': 1535, 'tfidf_word': 'adapt complete feed identity interrupt kernel raw serialize version msg ', 'tfidf_method': 'msg is_complete interrupt_kernel test_no_adapt test_same_version test_feed_identities test_msg test_send test_send_raw test_serialize ', 'lda_word': ' msg,test,header,send,version,', 'lda_method': ' msg,msg_header,msg_id,test_same_version,interrupt_kernel,', 'lsi_word': ' msg,header,test,send,raw,', 'lsi_method': ' msg,msg_header,msg_id,test_feed_identities,interrupt_kernel,', 'spm_method': ' ', 'text_summary': 'Ask the kernel whether some code is complete and ready to execute.', 'files_count': 5, 'files': ['test_adapter.py', 'session.py', 'test_session.py', 'manager.py', 'client.py'], 'execution_path_count': 9, 'function_id_to_name_file': {'528': 'test_no_adapt(test_adapter.py)', '520': 'msg(test_adapter.py)', '534': 'msg(test_adapter.py)', '476': 'msg(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '533': 'test_same_version(test_adapter.py)', '695': 'test_send_raw(test_session.py)', '692': 'test_feed_identities(test_session.py)', '694': 'test_send(test_session.py)', '696': 'test_serialize(test_session.py)', '693': 'test_msg(test_session.py)', '328': 'interrupt_kernel(manager.py)', '166': 'is_complete(client.py)'}}, {'key': 1614, 'parent': 1655, 'tfidf_word': 'header id test adapt rename type version msg ', 'tfidf_method': 'msg msg_header msg_id msg test_no_adapt test_rename_type test_same_version ', 'lda_word': ' msg,header,test,adapt,rename,', 'lda_method': ' msg,msg_id,msg_header,test_rename_type,test_same_version,', 'lsi_word': ' msg,header,test,rename,type,', 'lsi_method': ' msg,msg_id,msg_header,test_rename_type,test_same_version,', 'spm_method': ' ', 'text_summary': '', 'files_count': 2, 'files': ['test_adapter.py', 'session.py'], 'execution_path_count': 3, 'function_id_to_name_file': {'545': 'test_rename_type(test_adapter.py)', '534': 'msg(test_adapter.py)', '476': 'msg(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '546': 'test_same_version(test_adapter.py)', '544': 'test_no_adapt(test_adapter.py)'}}, {'key': 1643, 'parent': 1655, 'tfidf_word': 'header id test send feed identity raw msg ', 'tfidf_method': 'msg msg_header msg_id msg test_feed_identities test_send test_send_raw ', 'lda_word': ' msg,header,test,send,raw,', 'lda_method': ' msg,msg_id,msg_header,test_feed_identities,test_send_raw,', 'lsi_word': ' msg,header,test,send,raw,', 'lsi_method': ' msg,msg_header,msg_id,test_send,test_send_raw,', 'spm_method': ' ', 'text_summary': 'Empty', 'files_count': 3, 'files': ['test_session.py', 'test_adapter.py', 'session.py'], 'execution_path_count': 3, 'function_id_to_name_file': {'695': 'test_send_raw(test_session.py)', '534': 'msg(test_adapter.py)', '476': 'msg(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '694': 'test_send(test_session.py)', '692': 'test_feed_identities(test_session.py)'}}, {'key': 994, 'parent': 1548, 'tfidf_word': 'EP: 994, Name: test_rename_type &rarr; msg &rarr; msg &rarr; msg &rarr; msg_header &rarr; msg_id', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1547, 'parent': 1548, 'tfidf_word': 'adapt complete feed identity interrupt kernel raw serialize version msg ', 'tfidf_method': 'msg is_complete interrupt_kernel test_no_adapt test_same_version test_feed_identities test_msg test_send test_send_raw test_serialize ', 'lda_word': ' msg,header,test,version,kernel,', 'lda_method': ' msg,msg_header,msg_id,test_msg,test_feed_identities,', 'lsi_word': ' msg,header,test,send,raw,', 'lsi_method': ' msg,msg_header,msg_id,test_no_adapt,test_serialize,', 'spm_method': ' ', 'text_summary': 'message format.', 'files_count': 5, 'files': ['test_adapter.py', 'session.py', 'test_session.py', 'manager.py', 'client.py'], 'execution_path_count': 9, 'function_id_to_name_file': {'544': 'test_no_adapt(test_adapter.py)', '534': 'msg(test_adapter.py)', '520': 'msg(test_adapter.py)', '476': 'msg(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '546': 'test_same_version(test_adapter.py)', '695': 'test_send_raw(test_session.py)', '692': 'test_feed_identities(test_session.py)', '694': 'test_send(test_session.py)', '696': 'test_serialize(test_session.py)', '693': 'test_msg(test_session.py)', '328': 'interrupt_kernel(manager.py)', '166': 'is_complete(client.py)'}}, {'key': 936, 'parent': 1646, 'tfidf_word': 'EP: 936, Name: test_execute_reply &rarr; msg &rarr; msg &rarr; msg_header &rarr; msg_id', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1645, 'parent': 1646, 'tfidf_word': 'adapt execute feed identity raw rename request type version msg ', 'tfidf_method': 'msg_header msg_id msg test_execute_request test_no_adapt test_rename_type test_same_version test_feed_identities test_send test_send_raw ', 'lda_word': ' msg,header,test,send,adapt,', 'lda_method': ' msg,msg_id,msg_header,test_execute_request,test_send,', 'lsi_word': ' msg,header,test,send,raw,', 'lsi_method': ' msg,msg_id,msg_header,test_rename_type,test_same_version,', 'spm_method': ' ', 'text_summary': 'Empty', 'files_count': 3, 'files': ['test_adapter.py', 'session.py', 'test_session.py'], 'execution_path_count': 7, 'function_id_to_name_file': {'525': 'test_execute_request(test_adapter.py)', '520': 'msg(test_adapter.py)', '476': 'msg(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '532': 'test_rename_type(test_adapter.py)', '533': 'test_same_version(test_adapter.py)', '528': 'test_no_adapt(test_adapter.py)', '695': 'test_send_raw(test_session.py)', '694': 'test_send(test_session.py)', '692': 'test_feed_identities(test_session.py)'}}, {'key': 937, 'parent': 1631, 'tfidf_word': 'EP: 937, Name: test_execute_reply &rarr; msg &rarr; msg &rarr; msg &rarr; extract_header', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1630, 'parent': 1631, 'tfidf_word': 'adapt execute feed identity raw rename request type version msg ', 'tfidf_method': 'msg msg msg test_execute_request test_no_adapt test_rename_type test_same_version test_feed_identities test_send test_send_raw ', 'lda_word': ' msg,test,header,extract,send,', 'lda_method': ' msg,extract_header,test_send_raw,test_no_adapt,test_feed_identities,', 'lsi_word': ' msg,test,header,extract,send,', 'lsi_method': ' msg,extract_header,test_execute_request,test_rename_type,test_feed_identities,', 'spm_method': ' ', 'text_summary': '', 'files_count': 3, 'files': ['test_adapter.py', 'session.py', 'test_session.py'], 'execution_path_count': 7, 'function_id_to_name_file': {'525': 'test_execute_request(test_adapter.py)', '520': 'msg(test_adapter.py)', '534': 'msg(test_adapter.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '532': 'test_rename_type(test_adapter.py)', '533': 'test_same_version(test_adapter.py)', '528': 'test_no_adapt(test_adapter.py)', '695': 'test_send_raw(test_session.py)', '694': 'test_send(test_session.py)', '692': 'test_feed_identities(test_session.py)'}}, {'key': 766, 'parent': 1800, 'tfidf_word': 'EP: 766, Name: test_send &rarr; msg &rarr; msg &rarr; extract_header', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1798, 'parent': 1800, 'tfidf_word': 'extract header test serialize msg ', 'tfidf_method': 'extract_header msg msg test_msg test_serialize ', 'lda_word': ' msg,header,extract,test,serialize,', 'lda_method': ' msg,test_serialize,extract_header,test_msg,', 'lsi_word': ' msg,extract,header,test,serialize,', 'lsi_method': ' msg,extract_header,test_msg,test_serialize,', 'spm_method': ' ', 'text_summary': '', 'files_count': 3, 'files': ['test_session.py', 'test_adapter.py', 'session.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'693': 'test_msg(test_session.py)', '534': 'msg(test_adapter.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '696': 'test_serialize(test_session.py)'}}, {'key': 1004, 'parent': 1619, 'tfidf_word': 'EP: 1004, Name: test_complete_request &rarr; msg &rarr; msg &rarr; msg &rarr; extract_header', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1618, 'parent': 1619, 'tfidf_word': 'adapt execute feed identity raw rename request type version msg ', 'tfidf_method': 'msg msg msg test_execute_request test_no_adapt test_rename_type test_same_version test_feed_identities test_send test_send_raw ', 'lda_word': ' msg,header,extract,test,send,', 'lda_method': ' msg,extract_header,test_feed_identities,test_send,test_no_adapt,', 'lsi_word': ' msg,test,header,extract,send,', 'lsi_method': ' msg,extract_header,test_rename_type,test_same_version,test_send_raw,', 'spm_method': ' ', 'text_summary': '', 'files_count': 3, 'files': ['test_adapter.py', 'session.py', 'test_session.py'], 'execution_path_count': 7, 'function_id_to_name_file': {'538': 'test_execute_request(test_adapter.py)', '534': 'msg(test_adapter.py)', '520': 'msg(test_adapter.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '545': 'test_rename_type(test_adapter.py)', '546': 'test_same_version(test_adapter.py)', '544': 'test_no_adapt(test_adapter.py)', '695': 'test_send_raw(test_session.py)', '694': 'test_send(test_session.py)', '692': 'test_feed_identities(test_session.py)'}}, {'key': 798, 'parent': 1801, 'tfidf_word': 'EP: 798, Name: test_feed_identities &rarr; msg &rarr; msg &rarr; extract_header', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1799, 'parent': 1801, 'tfidf_word': 'extract header test send serialize msg ', 'tfidf_method': 'extract_header msg msg test_msg test_send test_serialize ', 'lda_word': ' msg,test,extract,header,send,', 'lda_method': ' msg,extract_header,test_send,test_msg,test_serialize,', 'lsi_word': ' msg,header,test,extract,send,', 'lsi_method': ' msg,extract_header,test_send,test_msg,test_serialize,', 'spm_method': ' ', 'text_summary': '', 'files_count': 3, 'files': ['test_session.py', 'test_adapter.py', 'session.py'], 'execution_path_count': 3, 'function_id_to_name_file': {'694': 'test_send(test_session.py)', '520': 'msg(test_adapter.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '693': 'test_msg(test_session.py)', '696': 'test_serialize(test_session.py)'}}, {'key': 832, 'parent': 2054, 'tfidf_word': 'EP: 832, Name: test_bad_packer &rarr; __init__ &rarr; _new_auth', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2053, 'parent': 2054, 'tfidf_word': 'auth bad init new test pack unpack ', 'tfidf_method': '__init__ _new_auth test_bad_pack test_bad_unpack ', 'lda_word': ' new,bad,test,unpack,init,', 'lda_method': ' init,test_bad_unpack,test_bad_pack,new_auth,', 'lsi_word': ' auth,bad,new,init,test,', 'lsi_method': ' init,new_auth,test_bad_pack,test_bad_unpack,', 'spm_method': ' ', 'text_summary': '', 'files_count': 2, 'files': ['test_session.py', 'session.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'681': 'test_bad_pack(test_session.py)', '457': '__init__(session.py)', '465': '_new_auth(session.py)', '684': 'test_bad_unpack(test_session.py)'}}, {'key': 817, 'parent': 2066, 'tfidf_word': 'EP: 817, Name: test_cull_digest_history &rarr; __init__ &rarr; _new_auth', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2065, 'parent': 2066, 'tfidf_word': 'auth init new test digest history id session zero ', 'tfidf_method': '__init__ _new_auth test_session_id test_zero_digest_history ', 'lda_word': ' auth,init,new,test,session,', 'lda_method': ' new_auth,init,test_zero_digest_history,test_session_id,', 'lsi_word': ' test,auth,init,new,digest,', 'lsi_method': ' init,new_auth,test_zero_digest_history,test_session_id,', 'spm_method': ' ', 'text_summary': '', 'files_count': 2, 'files': ['test_session.py', 'session.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'697': 'test_session_id(test_session.py)', '457': '__init__(session.py)', '465': '_new_auth(session.py)', '700': 'test_zero_digest_history(test_session.py)'}}, {'key': 1232, 'parent': 1839, 'tfidf_word': 'EP: 1232, Name: test_find_all_specs &rarr; get_all_specs &rarr; get_kernel_spec &rarr; NoSuchKernel', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1234, 'parent': 1839, 'tfidf_word': 'EP: 1234, Name: test_find_all_specs &rarr; get_all_specs &rarr; get_kernel_spec &rarr; __init__', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1230, 'parent': 1956, 'tfidf_word': 'EP: 1230, Name: test_find_all_specs &rarr; get_all_specs &rarr; get_kernel_spec &rarr; _get_kernel_spec_by_name', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1231, 'parent': 1956, 'tfidf_word': 'EP: 1231, Name: test_find_all_specs &rarr; get_all_specs &rarr; get_kernel_spec &rarr; _is_valid_kernel_name', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1259, 'parent': 1840, 'tfidf_word': 'EP: 1259, Name: test_subclass &rarr; get_all_specs &rarr; get_kernel_spec &rarr; NoSuchKernel', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1261, 'parent': 1840, 'tfidf_word': 'EP: 1261, Name: test_subclass &rarr; get_all_specs &rarr; get_kernel_spec &rarr; __init__', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1257, 'parent': 1961, 'tfidf_word': 'EP: 1257, Name: test_subclass &rarr; get_all_specs &rarr; get_kernel_spec &rarr; _get_kernel_spec_by_name', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1258, 'parent': 1961, 'tfidf_word': 'EP: 1258, Name: test_subclass &rarr; get_all_specs &rarr; get_kernel_spec &rarr; _is_valid_kernel_name', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 709, 'parent': 1828, 'tfidf_word': 'EP: 709, Name: setUp &rarr; get_kernel_spec &rarr; get_kernel_spec &rarr; NoSuchKernel', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 711, 'parent': 1828, 'tfidf_word': 'EP: 711, Name: setUp &rarr; get_kernel_spec &rarr; get_kernel_spec &rarr; __init__', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 707, 'parent': 1916, 'tfidf_word': 'EP: 707, Name: setUp &rarr; get_kernel_spec &rarr; get_kernel_spec &rarr; _get_kernel_spec_by_name', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 708, 'parent': 1916, 'tfidf_word': 'EP: 708, Name: setUp &rarr; get_kernel_spec &rarr; get_kernel_spec &rarr; _is_valid_kernel_name', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1272, 'parent': 2210, 'tfidf_word': 'EP: 1272, Name: get_kernel_spec &rarr; get_kernel_spec &rarr; NoSuchKernel', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2209, 'parent': 2210, 'tfidf_word': 'name valid get kernel spec ', 'tfidf_method': 'get_kernel_spec get_kernel_spec _is_valid_kernel_name _get_kernel_spec_by_name ', 'lda_word': ' get,spec,kernel,name,valid,', 'lda_method': ' get_kernel_spec,is_valid_kernel_name,get_kernel_spec_by_name,', 'lsi_word': ' kernel,get,spec,name,valid,', 'lsi_method': ' get_kernel_spec,is_valid_kernel_name,get_kernel_spec_by_name,', 'spm_method': ' ', 'text_summary': '', 'files_count': 2, 'files': ['test_kernelspec.py', 'kernelspec.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'633': 'get_kernel_spec(test_kernelspec.py)', '274': 'get_kernel_spec(kernelspec.py)', '269': '_get_kernel_spec_by_name(kernelspec.py)', '257': '_is_valid_kernel_name(kernelspec.py)'}}, {'key': 1268, 'parent': 2208, 'tfidf_word': 'EP: 1268, Name: test_subclass &rarr; get_kernel_spec &rarr; __init__', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2207, 'parent': 2208, 'tfidf_word': 'subclass test name get kernel spec no such valid ', 'tfidf_method': 'get_kernel_spec test_subclass NoSuchKernel _is_valid_kernel_name _get_kernel_spec_by_name ', 'lda_word': ' get,spec,kernel,test,name,', 'lda_method': ' get_kernel_spec,is_valid_kernel_name,test_subclass,nosuchkernel,get_kernel_spec_by_name,', 'lsi_word': ' kernel,get,spec,subclass,test,', 'lsi_method': ' get_kernel_spec,test_subclass,is_valid_kernel_name,nosuchkernel,get_kernel_spec_by_name,', 'spm_method': ' ', 'text_summary': 'Check that a kernel name is valid.', 'files_count': 2, 'files': ['test_kernelspec.py', 'kernelspec.py'], 'execution_path_count': 3, 'function_id_to_name_file': {'629': 'test_subclass(test_kernelspec.py)', '274': 'get_kernel_spec(kernelspec.py)', '255': 'NoSuchKernel(kernelspec.py)', '269': '_get_kernel_spec_by_name(kernelspec.py)', '257': '_is_valid_kernel_name(kernelspec.py)'}}, {'key': 2150, 'parent': 2725, 'tfidf_word': 'set up name get kernel spec init no such valid ', 'tfidf_method': 'get_kernel_spec setUp NoSuchKernel _is_valid_kernel_name _get_kernel_spec_by_name __init__ ', 'lda_word': ' kernel,spec,get,set,name,', 'lda_method': ' setup,get_kernel_spec,init,get_kernel_spec_by_name,is_valid_kernel_name,', 'lsi_word': ' kernel,spec,get,set,name,', 'lsi_method': ' get_kernel_spec,setup,get_kernel_spec_by_name,is_valid_kernel_name,init,', 'spm_method': ' ', 'text_summary': '', 'files_count': 2, 'files': ['test_client.py', 'kernelspec.py'], 'execution_path_count': 4, 'function_id_to_name_file': {'549': 'setUp(test_client.py)', '274': 'get_kernel_spec(kernelspec.py)', '278': '__init__(kernelspec.py)', '255': 'NoSuchKernel(kernelspec.py)', '269': '_get_kernel_spec_by_name(kernelspec.py)', '257': '_is_valid_kernel_name(kernelspec.py)'}}, {'key': 2201, 'parent': 2725, 'tfidf_word': 'test name init no such valid get kernel spec ', 'tfidf_method': 'get_kernel_spec test_get_kernel_spec NoSuchKernel _is_valid_kernel_name _get_kernel_spec_by_name __init__ ', 'lda_word': ' kernel,spec,get,name,test,', 'lda_method': ' test_get_kernel_spec,get_kernel_spec,get_kernel_spec_by_name,init,is_valid_kernel_name,', 'lsi_word': ' kernel,spec,get,test,name,', 'lsi_method': ' get_kernel_spec,test_get_kernel_spec,init,get_kernel_spec_by_name,is_valid_kernel_name,', 'spm_method': ' ', 'text_summary': '', 'files_count': 2, 'files': ['test_kernelspec.py', 'kernelspec.py'], 'execution_path_count': 4, 'function_id_to_name_file': {'623': 'test_get_kernel_spec(test_kernelspec.py)', '274': 'get_kernel_spec(kernelspec.py)', '278': '__init__(kernelspec.py)', '255': 'NoSuchKernel(kernelspec.py)', '269': '_get_kernel_spec_by_name(kernelspec.py)', '257': '_is_valid_kernel_name(kernelspec.py)'}}, {'key': 1092, 'parent': 2085, 'tfidf_word': 'EP: 1092, Name: test_app_load_connection_file &rarr; write_connection_file &rarr; close', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1093, 'parent': 2085, 'tfidf_word': 'EP: 1093, Name: test_app_load_connection_file &rarr; write_connection_file &rarr; localhost', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1090, 'parent': 2183, 'tfidf_word': 'EP: 1090, Name: test_app_load_connection_file &rarr; write_connection_file &rarr; close', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2182, 'parent': 2183, 'tfidf_word': 'app load test write close port connection file ', 'tfidf_method': 'write_connection_file test_app_load_connection_file ports close ', 'lda_word': ' file,connection,app,write,test,', 'lda_method': ' write_connection_file,test_app_load_connection_file,port,close,', 'lsi_word': ' connection,file,load,app,write,', 'lsi_method': ' write_connection_file,test_app_load_connection_file,port,close,', 'spm_method': ' ', 'text_summary': '', 'files_count': 3, 'files': ['test_connect.py', 'connect.py', 'threaded.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'559': 'test_app_load_connection_file(test_connect.py)', '191': 'write_connection_file(connect.py)', '211': 'ports(connect.py)', '718': 'close(threaded.py)'}}, {'key': 1075, 'parent': 2083, 'tfidf_word': 'EP: 1075, Name: test_load_connection_file_session_with_kn &rarr; write_connection_file &rarr; close', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2082, 'parent': 2083, 'tfidf_word': 'kn load session test write close localhost connection file ', 'tfidf_method': 'write_connection_file test_load_connection_file_session_with_kn localhost close ', 'lda_word': ' connection,file,test,kn,write,', 'lda_method': ' test_load_connection_file_session_with_kn,close,write_connection_file,localhost,', 'lsi_word': ' connection,file,kn,session,write,', 'lsi_method': ' test_load_connection_file_session_with_kn,write_connection_file,localhost,close,', 'spm_method': ' ', 'text_summary': '', 'files_count': 4, 'files': ['test_connect.py', 'connect.py', 'channels.py', 'localinterfaces.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'565': 'test_load_connection_file_session_with_kn(test_connect.py)', '191': 'write_connection_file(connect.py)', '83': 'close(channels.py)', '315': 'localhost(localinterfaces.py)'}}, {'key': 1072, 'parent': 2180, 'tfidf_word': 'EP: 1072, Name: test_load_connection_file_session_with_kn &rarr; write_connection_file &rarr; close', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2179, 'parent': 2180, 'tfidf_word': 'kn load session test write close connection file port ', 'tfidf_method': 'write_connection_file test_load_connection_file_session_with_kn close ports close ', 'lda_word': ' connection,file,close,test,write,', 'lda_method': ' test_load_connection_file_session_with_kn,write_connection_file,port,close,', 'lsi_word': ' connection,file,kn,session,write,', 'lsi_method': ' write_connection_file,test_load_connection_file_session_with_kn,close,port,', 'spm_method': ' ', 'text_summary': '', 'files_count': 4, 'files': ['test_connect.py', 'connect.py', 'channels.py', 'threaded.py'], 'execution_path_count': 3, 'function_id_to_name_file': {'565': 'test_load_connection_file_session_with_kn(test_connect.py)', '191': 'write_connection_file(connect.py)', '132': 'close(channels.py)', '211': 'ports(connect.py)', '718': 'close(threaded.py)'}}, {'key': 2078, 'parent': 2173, 'tfidf_word': 'test close connection file write localhost ', 'tfidf_method': 'write_connection_file test_write_connection_file close localhost close ', 'lda_word': ' write,connection,file,test,localhost,', 'lda_method': ' test_write_connection_file,write_connection_file,close,localhost,', 'lsi_word': ' connection,file,write,test,close,', 'lsi_method': ' test_write_connection_file,write_connection_file,close,localhost,', 'spm_method': ' ', 'text_summary': '', 'files_count': 4, 'files': ['test_connect.py', 'connect.py', 'channels.py', 'localinterfaces.py'], 'execution_path_count': 3, 'function_id_to_name_file': {'570': 'test_write_connection_file(test_connect.py)', '191': 'write_connection_file(connect.py)', '109': 'close(channels.py)', '83': 'close(channels.py)', '315': 'localhost(localinterfaces.py)'}}, {'key': 2172, 'parent': 2173, 'tfidf_word': 'test close connection file write port ', 'tfidf_method': 'write_connection_file test_write_connection_file close ports close close ', 'lda_word': ' connection,file,write,test,close,', 'lda_method': ' close,write_connection_file,test_write_connection_file,port,', 'lsi_word': ' file,write,connection,test,close,', 'lsi_method': ' test_write_connection_file,write_connection_file,close,port,', 'spm_method': ' ', 'text_summary': '', 'files_count': 4, 'files': ['test_connect.py', 'connect.py', 'threaded.py', 'channels.py'], 'execution_path_count': 4, 'function_id_to_name_file': {'570': 'test_write_connection_file(test_connect.py)', '191': 'write_connection_file(connect.py)', '730': 'close(threaded.py)', '132': 'close(channels.py)', '211': 'ports(connect.py)', '718': 'close(threaded.py)'}}, {'key': 2080, 'parent': 2177, 'tfidf_word': 'load session test write close connection file localhost ', 'tfidf_method': 'write_connection_file test_load_connection_file_session close localhost close ', 'lda_word': ' file,connection,write,test,load,', 'lda_method': ' test_load_connection_file_session,close,write_connection_file,localhost,', 'lsi_word': ' connection,file,session,write,load,', 'lsi_method': ' test_load_connection_file_session,write_connection_file,close,localhost,', 'spm_method': ' ', 'text_summary': '', 'files_count': 4, 'files': ['test_connect.py', 'connect.py', 'channels.py', 'localinterfaces.py'], 'execution_path_count': 3, 'function_id_to_name_file': {'564': 'test_load_connection_file_session(test_connect.py)', '191': 'write_connection_file(connect.py)', '109': 'close(channels.py)', '83': 'close(channels.py)', '315': 'localhost(localinterfaces.py)'}}, {'key': 2176, 'parent': 2177, 'tfidf_word': 'load session test write close connection file port ', 'tfidf_method': 'write_connection_file test_load_connection_file_session close ports close close ', 'lda_word': ' connection,file,write,load,session,', 'lda_method': ' write_connection_file,test_load_connection_file_session,close,port,', 'lsi_word': ' connection,file,session,write,load,', 'lsi_method': ' write_connection_file,test_load_connection_file_session,close,port,', 'spm_method': ' ', 'text_summary': '', 'files_count': 4, 'files': ['test_connect.py', 'connect.py', 'threaded.py', 'channels.py'], 'execution_path_count': 4, 'function_id_to_name_file': {'564': 'test_load_connection_file_session(test_connect.py)', '191': 'write_connection_file(connect.py)', '730': 'close(threaded.py)', '132': 'close(channels.py)', '211': 'ports(connect.py)', '718': 'close(threaded.py)'}}, {'key': 814, 'parent': 2160, 'tfidf_word': 'EP: 814, Name: test_zero_digest_history &rarr; _add_digest &rarr; _cull_digest_history', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 819, 'parent': 2160, 'tfidf_word': 'EP: 819, Name: test_cull_digest_history &rarr; _add_digest &rarr; _cull_digest_history', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 783, 'parent': 1729, 'tfidf_word': 'EP: 783, Name: test_send &rarr; recv &rarr; deserialize &rarr; _add_digest &rarr; _cull_digest_history', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1400, 'parent': 1729, 'tfidf_word': 'EP: 1400, Name: handle &rarr; recv &rarr; deserialize &rarr; _add_digest &rarr; _cull_digest_history', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1837, 'parent': 1924, 'tfidf_word': 'add cull deserialize history send test raw digest ', 'tfidf_method': '_add_digest _cull_digest_history deserialize test_send test_send_raw ', 'lda_word': ' digest,add,cull,send,test,', 'lda_method': ' cull_digest_history,deserialize,add_digest,test_send,test_send_raw,', 'lsi_word': ' digest,send,test,cull,history,', 'lsi_method': ' add_digest,cull_digest_history,deserialize,test_send_raw,test_send,', 'spm_method': ' ', 'text_summary': '', 'files_count': 2, 'files': ['test_session.py', 'session.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'694': 'test_send(test_session.py)', '474': 'deserialize(session.py)', '458': '_add_digest(session.py)', '460': '_cull_digest_history(session.py)', '695': 'test_send_raw(test_session.py)'}}, {'key': 1863, 'parent': 1924, 'tfidf_word': 'add cull deserialize history serialize test unserialize digest ', 'tfidf_method': '_add_digest _cull_digest_history deserialize unserialize test_serialize ', 'lda_word': ' digest,cull,add,deserialize,history,', 'lda_method': ' deserialize,add_digest,cull_digest_history,test_serialize,unserialize,', 'lsi_word': ' digest,add,history,deserialize,cull,', 'lsi_method': ' cull_digest_history,deserialize,add_digest,test_serialize,unserialize,', 'spm_method': ' ', 'text_summary': '', 'files_count': 2, 'files': ['session.py', 'test_session.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'484': 'unserialize(session.py)', '474': 'deserialize(session.py)', '458': '_add_digest(session.py)', '460': '_cull_digest_history(session.py)', '696': 'test_serialize(test_session.py)'}}, {'key': 2332, 'parent': 2348, 'tfidf_word': 'jupyter test find load mixin session connection console file app ', 'tfidf_method': 'JupyterConsoleApp DummyConsoleApp ConnectionFileMixin Session test_app_load_connection_file test_find_connection_file ', 'lda_word': ' app,console,file,connection,jupyter,', 'lda_method': ' jupyterconsoleapp,connectionfilemixin,dummyconsoleapp,test_find_connection_file,test_app_load_connection_file,', 'lsi_word': ' app,console,connection,file,test,', 'lsi_method': ' dummyconsoleapp,jupyterconsoleapp,test_find_connection_file,connectionfilemixin,test_app_load_connection_file,', 'spm_method': ' ', 'text_summary': '', 'files_count': 4, 'files': ['test_connect.py', 'consoleapp.py', 'session.py', 'connect.py'], 'execution_path_count': 4, 'function_id_to_name_file': {'559': 'test_app_load_connection_file(test_connect.py)', '558': 'DummyConsoleApp(test_connect.py)', '214': 'JupyterConsoleApp(consoleapp.py)', '441': 'Session(session.py)', '188': 'ConnectionFileMixin(connect.py)', '560': 'test_find_connection_file(test_connect.py)'}}, {'key': 2347, 'parent': 2348, 'tfidf_word': 'jupyter load test kn mixin app connection console file session ', 'tfidf_method': 'JupyterConsoleApp DummyConsoleApp ConnectionFileMixin Session test_load_connection_file_session test_load_connection_file_session_with_kn ', 'lda_word': ' console,app,connection,session,file,', 'lda_method': ' session,dummyconsoleapp,jupyterconsoleapp,test_load_connection_file_session_with_kn,connectionfilemixin,', 'lsi_word': ' console,app,connection,file,session,', 'lsi_method': ' dummyconsoleapp,jupyterconsoleapp,session,test_load_connection_file_session,connectionfilemixin,', 'spm_method': ' ', 'text_summary': '', 'files_count': 4, 'files': ['test_connect.py', 'consoleapp.py', 'session.py', 'connect.py'], 'execution_path_count': 4, 'function_id_to_name_file': {'564': 'test_load_connection_file_session(test_connect.py)', '558': 'DummyConsoleApp(test_connect.py)', '214': 'JupyterConsoleApp(consoleapp.py)', '441': 'Session(session.py)', '188': 'ConnectionFileMixin(connect.py)', '565': 'test_load_connection_file_session_with_kn(test_connect.py)'}}, {'key': 2094, 'parent': 2649, 'tfidf_word': 'i jupyter python connection file mixin session app console ', 'tfidf_method': 'IPythonConsoleApp JupyterConsoleApp ConnectionFileMixin Session ', 'lda_word': ' app,console,jupyter,python,session,', 'lda_method': ' ipythonconsoleapp,jupyterconsoleapp,session,connectionfilemixin,', 'lsi_word': ' app,console,python,jupyter,file,', 'lsi_method': ' jupyterconsoleapp,ipythonconsoleapp,session,connectionfilemixin,', 'spm_method': ' ', 'text_summary': '', 'files_count': 3, 'files': ['consoleapp.py', 'session.py', 'connect.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'213': 'IPythonConsoleApp(consoleapp.py)', '214': 'JupyterConsoleApp(consoleapp.py)', '441': 'Session(session.py)', '188': 'ConnectionFileMixin(connect.py)'}}, {'key': 2110, 'parent': 2649, 'tfidf_word': 'console jupyter run connection file mixin session app ', 'tfidf_method': 'JupyterConsoleApp RunApp ConnectionFileMixin Session ', 'lda_word': ' app,console,jupyter,run,file,', 'lda_method': ' runapp,jupyterconsoleapp,connectionfilemixin,session,', 'lsi_word': ' app,run,jupyter,console,connection,', 'lsi_method': ' jupyterconsoleapp,runapp,connectionfilemixin,session,', 'spm_method': ' ', 'text_summary': '', 'files_count': 4, 'files': ['runapp.py', 'consoleapp.py', 'session.py', 'connect.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'434': 'RunApp(runapp.py)', '214': 'JupyterConsoleApp(consoleapp.py)', '441': 'Session(session.py)', '188': 'ConnectionFileMixin(connect.py)'}}, {'key': 2192, 'parent': 2659, 'tfidf_word': 'km test kernel tcp cinfo id lifecycle sequence shutdown start ', 'tfidf_method': '__init__ _get_tcp_km test_shutdown_all test_start_sequence_tcp_kernels test_tcp_cinfo test_tcp_lifecycle_with_kernel_id ', 'lda_word': ' tcp,get,km,test,init,', 'lda_method': ' init,get_tcp_km,test_tcp_lifecycle_with_kernel_id,test_shutdown_all,test_start_sequence_tcp_kernels,', 'lsi_word': ' tcp,get,test,init,km,', 'lsi_method': ' get_tcp_km,init,test_start_sequence_tcp_kernels,test_tcp_lifecycle_with_kernel_id,test_tcp_cinfo,', 'spm_method': ' ', 'text_summary': 'Empty', 'files_count': 2, 'files': ['test_multikernelmanager.py', 'multikernelmanager.py'], 'execution_path_count': 4, 'function_id_to_name_file': {'665': 'test_start_sequence_tcp_kernels(test_multikernelmanager.py)', '655': '_get_tcp_km(test_multikernelmanager.py)', '392': '__init__(multikernelmanager.py)', '666': 'test_tcp_cinfo(test_multikernelmanager.py)', '668': 'test_tcp_lifecycle_with_kernel_id(test_multikernelmanager.py)', '661': 'test_shutdown_all(test_multikernelmanager.py)'}}, {'key': 2260, 'parent': 2659, 'tfidf_word': 'kernel km parallel start loop process thread lifecycle test tcp ', 'tfidf_method': '__init__ _get_tcp_km test_tcp_lifecycle tcp_lifecycle_with_loop test_start_parallel_process_kernels test_start_parallel_thread_kernels ', 'lda_word': ' tcp,test,lifecycle,km,get,', 'lda_method': ' get_tcp_km,test_tcp_lifecycle,init,test_start_parallel_process_kernels,test_start_parallel_thread_kernels,', 'lsi_word': ' tcp,test,lifecycle,get,start,', 'lsi_method': ' get_tcp_km,test_tcp_lifecycle,init,tcp_lifecycle_with_loop,test_start_parallel_thread_kernels,', 'spm_method': ' ', 'text_summary': '', 'files_count': 2, 'files': ['test_multikernelmanager.py', 'multikernelmanager.py'], 'execution_path_count': 4, 'function_id_to_name_file': {'663': 'test_start_parallel_thread_kernels(test_multikernelmanager.py)', '658': 'tcp_lifecycle_with_loop(test_multikernelmanager.py)', '667': 'test_tcp_lifecycle(test_multikernelmanager.py)', '655': '_get_tcp_km(test_multikernelmanager.py)', '392': '__init__(multikernelmanager.py)', '662': 'test_start_parallel_process_kernels(test_multikernelmanager.py)'}}, {'key': 2754, 'parent': 2768, 'tfidf_word': 'select close kernel test tunnel random port ', 'tfidf_method': 'select_random_ports tunnel_to_kernel test_random_ports close close ports close close close ', 'lda_word': ' port,random,test,select,close,', 'lda_method': ' test_random_ports,select_random_ports,close,port,tunnel_to_kernel,', 'lsi_word': ' port,random,select,close,test,', 'lsi_method': ' select_random_ports,close,tunnel_to_kernel,test_random_ports,port,', 'spm_method': ' ', 'text_summary': '', 'files_count': 5, 'files': ['connect.py', 'tunnel.py', 'threaded.py', 'channels.py', 'test_ssh.py'], 'execution_path_count': 12, 'function_id_to_name_file': {'190': 'tunnel_to_kernel(connect.py)', '503': 'select_random_ports(tunnel.py)', '718': 'close(threaded.py)', '730': 'close(threaded.py)', '132': 'close(channels.py)', '109': 'close(channels.py)', '83': 'close(channels.py)', '211': 'ports(connect.py)', '701': 'test_random_ports(test_ssh.py)'}}, {'key': 2767, 'parent': 2768, 'tfidf_word': 'manager loop flush native permission io cleanup code tunnel restarter ', 'tfidf_method': 'test_kernelapp_lifecycle config __len__ test_signal_kernel_subprocesses signal_kernel Handler _env_test_body test_signal_kernel_subprocesses SubHander setUp ', 'lda_word': ' test,kernel,send,client,connection,', 'lda_method': ' init,session,adapt,send,sign,', 'lsi_word': ' kernel,test,lifecycle,start,manager,', 'lsi_method': ' init,check_packers,utcnow,get_ipc_km,new_auth,', 'spm_method': ' ', 'text_summary': "Subclasses may override  Prepares a kernel for startup in a separate process. Prepares a kernel for startup in a separate process. return ip for localhost (almost always 127.0.0.1)   Ensure that a sequence of kernel startups doesn't break anything. Sends a signal to the process group of the kernel (this. Pass a message to the ZMQ socket to send. This method is called in the ioloop thread when a message arrives. Return the connection info as a dict. Subclasses may override Start the polling of the kernel. Ensure that a sequence of kernel startups doesn't break anything. find a connection file, and return its absolute path. return ip for localhost (almost always 127.0.0.1)      find a connection file, and return its absolute path. tunnel connections to a kernel via ssh. handle kernel info reply. Get the hb channel object for this kernel. Returns the id to associate with the kernel for this request. Send a raw message via ident path. Make a blocking client connected to my kernel. Get a message from the stdin channel. Immediately processes all pending messages on this channel. Return the number of running kernels. Unserialize a msg_list to a nested message dict. Get the single KernelManager object for a kernel by its uuid. Interrupts the kernel by sending it a signal. Get a message from the shell channel. Create an ssh tunnel using command-line ssh that connects port lport. Get a message from the iopub channel. This is run in the ioloop thread when the kernel info reply is received. default function for packing datetime objects in JSON. Start the polling of the kernel. Send a shutdown request via control channel. test load_connection_file() after. Sends an interrupt event using the specified handle. test that messages receive unique ids.", 'files_count': 34, 'files': ['multikernelmanager.py', 'client.py', 'managerabc.py', 'channelsabc.py', 'threaded.py', 'channels.py', 'test_multikernelmanager.py', 'test_session.py', 'session.py', 'forward.py', 'manager.py', 'test_kernelspec.py', 'kernelspec.py', 'test_kernelmanager.py', 'consoleapp.py', 'jsonutil.py', 'connect.py', 'test_manager.py', 'utils.py', 'restarter.py', 'signalkernel.py', 'tunnel.py', 'test_connect.py', 'kernelspecapp.py', 'kernelapp.py', 'test_adapter.py', 'test_jsonutil.py', 'localinterfaces.py', 'adapter.py', 'test_kernelapp.py', 'test_client.py', 'win_interrupt.py', 'runapp.py', 'launcher.py'], 'execution_path_count': 364, 'function_id_to_name_file': {'386': 'shutdown_all(multikernelmanager.py)', '383': 'finish_shutdown(multikernelmanager.py)', '410': 'get_kernel(multikernelmanager.py)', '394': '_check_kernel_id(multikernelmanager.py)', '388': 'signal_kernel(multikernelmanager.py)', '385': 'restart_kernel(multikernelmanager.py)', '384': 'interrupt_kernel(multikernelmanager.py)', '387': 'shutdown_kernel(multikernelmanager.py)', '421': 'shutdown_kernel(multikernelmanager.py)', '420': 'shutdown_all(multikernelmanager.py)', '104': 'wait_for_ready(client.py)', '103': 'is_alive(client.py)', '412': 'is_alive(multikernelmanager.py)', '373': 'is_alive(managerabc.py)', '140': 'is_alive(channelsabc.py)', '732': 'is_alive(threaded.py)', '86': 'is_alive(channels.py)', '112': 'is_alive(channels.py)', '123': 'wait_for_ready(client.py)', '165': 'is_alive(client.py)', '648': 'test_start_parallel_thread_kernels(test_multikernelmanager.py)', '643': 'tcp_lifecycle_with_loop(test_multikernelmanager.py)', '642': 'raw_tcp_lifecycle(test_multikernelmanager.py)', '641': '_run_lifecycle(test_multikernelmanager.py)', '647': 'test_start_parallel_process_kernels(test_multikernelmanager.py)', '652': 'test_tcp_lifecycle(test_multikernelmanager.py)', '653': 'test_tcp_lifecycle_with_kernel_id(test_multikernelmanager.py)', '694': 'test_send(test_session.py)', '479': 'recv(session.py)', '474': 'deserialize(session.py)', '483': 'sign(session.py)', '492': 'handle(forward.py)', '695': 'test_send_raw(test_session.py)', '484': 'unserialize(session.py)', '696': 'test_serialize(test_session.py)', '480': 'send(session.py)', '440': 'Message(session.py)', '698': 'test_tracking(test_session.py)', '328': 'interrupt_kernel(manager.py)', '482': 'serialize(session.py)', '135': 'run(channels.py)', '128': '_create_socket(channels.py)', '718': 'close(threaded.py)', '730': 'close(threaded.py)', '132': 'close(channels.py)', '83': 'close(channels.py)', '109': 'close(channels.py)', '84': 'get_msg(channels.py)', '82': '_recv(channels.py)', '101': 'get_stdin_msg(client.py)', '85': 'get_msgs(channels.py)', '99': 'get_iopub_msg(client.py)', '110': 'get_msg(channels.py)', '108': '_recv(channels.py)', '111': 'get_msgs(channels.py)', '620': 'test_cant_install_kernel_spec(test_kernelspec.py)', '275': 'install_kernel_spec(kernelspec.py)', '268': '_get_destination_dir(kernelspec.py)', '257': '_is_valid_kernel_name(kernelspec.py)', '625': 'test_install_kernel_spec_prefix(test_kernelspec.py)', '261': 'install_kernel_spec(kernelspec.py)', '624': 'test_install_kernel_spec(test_kernelspec.py)', '614': 'test_start_sequence_process_kernels(test_kernelmanager.py)', '610': '_run_signaltest_lifecycle(test_kernelmanager.py)', '615': 'execute(test_kernelmanager.py)', '609': '_prepare_kernel(test_kernelmanager.py)', '611': 'test_start_parallel_process_kernels(test_kernelmanager.py)', '613': 'test_start_sequence_kernels(test_kernelmanager.py)', '612': 'test_start_parallel_thread_kernels(test_kernelmanager.py)', '398': '_kernel_manager_class_changed(multikernelmanager.py)', '396': '_create_kernel_manager_factory(multikernelmanager.py)', '424': 'create_kernel_manager(multikernelmanager.py)', '397': '_find_available_port(multikernelmanager.py)', '395': '_context_default(multikernelmanager.py)', '399': '_kernel_manager_factory_default(multikernelmanager.py)', '215': '__init__(consoleapp.py)', '485': '__init__(session.py)', '441': 'Session(session.py)', '457': '__init__(session.py)', '465': '_new_auth(session.py)', '459': '_check_packers(session.py)', '450': 'utcnow(session.py)', '244': 'squash_dates(jsonutil.py)', '90': 'AsyncKernelClient(client.py)', '147': 'KernelClient(client.py)', '139': 'HBChannelABC(channelsabc.py)', '138': 'ChannelABC(channelsabc.py)', '116': 'BlockingKernelClient(client.py)', '188': 'ConnectionFileMixin(connect.py)', '322': 'start_new_async_kernel(manager.py)', '319': 'AsyncKernelManager(manager.py)', '320': 'KernelManager(manager.py)', '224': 'AsyncIOLoopKernelManager(manager.py)', '225': 'IOLoopKernelManager(manager.py)', '635': 'test_connection_file_real_path(test_manager.py)', '663': 'test_start_parallel_thread_kernels(test_multikernelmanager.py)', '658': 'tcp_lifecycle_with_loop(test_multikernelmanager.py)', '667': 'test_tcp_lifecycle(test_multikernelmanager.py)', '657': '_run_lifecycle(test_multikernelmanager.py)', '662': 'test_start_parallel_process_kernels(test_multikernelmanager.py)', '704': 'execute(utils.py)', '155': 'execute(client.py)', '148': 'validate_string_dict(client.py)', '689': 'test_datetimes_msgpack(test_session.py)', '679': '_datetime_test(test_session.py)', '688': 'test_datetimes(test_session.py)', '690': 'test_datetimes_pickle(test_session.py)', '734': 'send(threaded.py)', '738': 'thread_send(threaded.py)', '664': 'test_start_sequence_ipc_kernels(test_multikernelmanager.py)', '654': '_get_ipc_km(test_multikernelmanager.py)', '392': '__init__(multikernelmanager.py)', '660': 'test_ipc_lifecycle(test_multikernelmanager.py)', '659': 'test_ipc_cinfo(test_multikernelmanager.py)', '423': 'start_kernel(multikernelmanager.py)', '415': 'pre_start_kernel(multikernelmanager.py)', '380': 'DuplicateKernelError(multikernelmanager.py)', '414': 'new_kernel_id(multikernelmanager.py)', '389': 'start_kernel(multikernelmanager.py)', '238': 'start(restarter.py)', '430': 'poll(restarter.py)', '433': 'stop(restarter.py)', '428': '_fire_callbacks(restarter.py)', '510': 'do_execute(signalkernel.py)', '190': 'tunnel_to_kernel(connect.py)', '501': 'openssh_tunnel(tunnel.py)', '494': 'SSHException(tunnel.py)', '497': '_stop_tunnel(tunnel.py)', '475': 'feed_identities(session.py)', '330': 'restart_kernel(manager.py)', '202': 'cleanup_random_ports(connect.py)', '200': 'cleanup_connection_file(connect.py)', '567': 'test_mixin_cleanup_random_ports(test_connect.py)', '106': 'ZMQSocketChannel(channels.py)', '226': 'as_zmqstream(manager.py)', '233': 'wrapped(manager.py)', '568': 'test_mixin_record_random_ports(test_connect.py)', '557': 'DummyConfigurable(test_connect.py)', '235': 'IOLoopKernelRestarter(restarter.py)', '426': 'KernelRestarter(restarter.py)', '234': 'AsyncIOLoopKernelRestarter(restarter.py)', '291': 'start(kernelspecapp.py)', '251': 'start(kernelapp.py)', '249': 'setup_signals(kernelapp.py)', '252': 'shutdown_handler(kernelapp.py)', '250': 'shutdown(kernelapp.py)', '248': 'log_connection_info(kernelapp.py)', '199': 'blocking_client(connect.py)', '208': 'get_connection_info(connect.py)', '725': 'stop_channels(threaded.py)', '684': 'test_bad_unpack(test_session.py)', '676': '_bad_unpacker(test_session.py)', '536': 'test_complete_request(test_adapter.py)', '517': 'adapt(test_adapter.py)', '562': 'test_find_connection_file_local(test_connect.py)', '189': 'find_connection_file(connect.py)', '493': 'SubHander(forward.py)', '490': 'Handler(forward.py)', '253': 'KernelSpec(kernelspec.py)', '114': 'send(channels.py)', '88': 'send(channels.py)', '575': 'test_date_default(test_jsonutil.py)', '241': 'date_default(jsonutil.py)', '240': '_ensure_tzinfo(jsonutil.py)', '597': 'test_subclasses(test_kernelmanager.py)', '703': 'AsyncKernelManagerWithCleanup(utils.py)', '595': 'test_signal_kernel_subprocesses(test_kernelmanager.py)', '598': 'execute(test_kernelmanager.py)', '702': 'AsyncKernelManagerSubclass(utils.py)', '591': 'transport(test_kernelmanager.py)', '606': 'test_templated_kspec_env(test_kernelmanager.py)', '599': '_env_test_body(test_kernelmanager.py)', '607': 'execute(test_kernelmanager.py)', '604': 'test_signal_kernel_subprocesses(test_kernelmanager.py)', '608': 'execute(test_kernelmanager.py)', '586': 'env(test_kernelmanager.py)', '712': 'stop(utils.py)', '711': 'start(utils.py)', '705': 'test_env(utils.py)', '630': 'test_validate_kernel_name(test_kernelspec.py)', '506': 'SignalTestApp(signalkernel.py)', '507': 'SignalTestKernel(signalkernel.py)', '627': 'test_remove_kernel_spec(test_kernelspec.py)', '617': '_install_sample_kernel(test_kernelspec.py)', '626': 'test_kernel_spec_priority(test_kernelspec.py)', '651': 'test_tcp_cinfo(test_multikernelmanager.py)', '640': '_run_cinfo(test_multikernelmanager.py)', '621': 'test_find_all_specs(test_kernelspec.py)', '622': 'test_find_kernel_specs(test_kernelspec.py)', '623': 'test_get_kernel_spec(test_kernelspec.py)', '619': 'tearDown(test_kernelspec.py)', '618': 'setUp(test_kernelspec.py)', '649': 'test_start_sequence_ipc_kernels(test_multikernelmanager.py)', '650': 'test_start_sequence_tcp_kernels(test_multikernelmanager.py)', '644': 'test_ipc_cinfo(test_multikernelmanager.py)', '315': 'localhost(localinterfaces.py)', '645': 'test_ipc_lifecycle(test_multikernelmanager.py)', '665': 'test_start_sequence_tcp_kernels(test_multikernelmanager.py)', '656': '_run_cinfo(test_multikernelmanager.py)', '666': 'test_tcp_cinfo(test_multikernelmanager.py)', '668': 'test_tcp_lifecycle_with_kernel_id(test_multikernelmanager.py)', '569': 'test_secure_write(test_connect.py)', '573': 'check_user_only_permissions(test_connect.py)', '574': 'fetch_win32_permissions(test_connect.py)', '563': 'test_find_connection_file_relative(test_connect.py)', '561': 'test_find_connection_file_abspath(test_connect.py)', '560': 'test_find_connection_file(test_connect.py)', '565': 'test_load_connection_file_session_with_kn(test_connect.py)', '539': 'test_input_request(test_adapter.py)', '564': 'test_load_connection_file_session(test_connect.py)', '537': 'test_display_data(test_adapter.py)', '540': 'test_inspect_reply(test_adapter.py)', '543': 'test_kernel_info_reply(test_adapter.py)', '542': 'test_inspect_request_token(test_adapter.py)', '535': 'test_complete_reply(test_adapter.py)', '541': 'test_inspect_request(test_adapter.py)', '538': 'test_execute_request(test_adapter.py)', '545': 'test_rename_type(test_adapter.py)', '544': 'test_no_adapt(test_adapter.py)', '546': 'test_same_version(test_adapter.py)', '514': 'V5toV4TestCase(test_adapter.py)', '512': 'AdapterTest(test_adapter.py)', '526': 'test_input_request(test_adapter.py)', '523': 'test_display_data(test_adapter.py)', '527': 'test_kernel_info_reply(test_adapter.py)', '530': 'test_object_info_reply_not_found(test_adapter.py)', '529': 'test_object_info_reply(test_adapter.py)', '531': 'test_object_info_request(test_adapter.py)', '521': 'test_complete_reply(test_adapter.py)', '522': 'test_complete_request(test_adapter.py)', '524': 'test_execute_reply(test_adapter.py)', '532': 'test_rename_type(test_adapter.py)', '525': 'test_execute_request(test_adapter.py)', '528': 'test_no_adapt(test_adapter.py)', '533': 'test_same_version(test_adapter.py)', '513': 'V4toV5TestCase(test_adapter.py)', '519': 'setUp(test_adapter.py)', '516': 'test_default_version(test_adapter.py)', '515': 'test_code_to_line_no_code(test_adapter.py)', '51': 'code_to_line(adapter.py)', '158': 'get_shell_msg(client.py)', '157': 'get_iopub_msg(client.py)', '710': '__exit__(utils.py)', '709': '__enter__(utils.py)', '580': 'test_kernelapp_lifecycle(test_kernelapp.py)', '579': '_launch(test_kernelapp.py)', '686': 'test_clone(test_session.py)', '473': 'clone(session.py)', '481': 'send_raw(session.py)', '683': 'test_bad_roundtrip(test_session.py)', '685': 'test_bad_unpacker(test_session.py)', '682': 'test_bad_packer(test_session.py)', '681': 'test_bad_pack(test_session.py)', '675': '_bad_packer(test_session.py)', '687': 'test_cull_digest_history(test_session.py)', '700': 'test_zero_digest_history(test_session.py)', '697': 'test_session_id(test_session.py)', '699': 'test_unique_msg_ids(test_session.py)', '445': 'msg_header(session.py)', '680': 'test_args(test_session.py)', '478': 'msg_id(session.py)', '674': 'TestSession(test_session.py)', '673': 'SessionTestCase(test_session.py)', '678': 'setUp(test_session.py)', '556': 'test_shutdown(test_client.py)', '548': '_check_reply(test_client.py)', '550': 'test_comm_info(test_client.py)', '555': 'test_kernel_info(test_client.py)', '551': 'test_complete(test_client.py)', '554': 'test_inspect(test_client.py)', '553': 'test_history(test_client.py)', '549': 'setUp(test_client.py)', '255': 'NoSuchKernel(kernelspec.py)', '117': 'reqrep(client.py)', '124': 'wrapped(client.py)', '150': '_handle_kernel_info_reply(client.py)', '125': 'HBChannel(channels.py)', '102': 'hb_channel(client.py)', '196': '_make_url(connect.py)', '91': 'reqrep(client.py)', '105': 'wrapped(client.py)', '80': 'ZMQSocketChannel(channels.py)', '154': 'control_channel(client.py)', '723': 'ioloop(threaded.py)', '160': 'hb_channel(client.py)', '171': 'stdin_channel(client.py)', '164': 'iopub_channel(client.py)', '168': 'shell_channel(client.py)', '740': 'send_interrupt(win_interrupt.py)', '334': '__del__(manager.py)', '293': 'start(kernelspecapp.py)', '294': 'path_key(kernelspecapp.py)', '735': 'start(threaded.py)', '720': 'start(threaded.py)', '141': 'start(channelsabc.py)', '432': 'start(restarter.py)', '288': 'start(kernelspecapp.py)', '89': 'start(channels.py)', '115': 'start(channels.py)', '290': 'start(kernelspecapp.py)', '438': 'parse_command_line(runapp.py)', '218': 'build_kernel_argv(consoleapp.py)', '308': '_only_once(localinterfaces.py)', '317': 'wrapped(localinterfaces.py)', '47': 'V4toV5(adapter.py)', '46': 'Adapter(adapter.py)', '77': 'object_info_request(adapter.py)', '52': 'extract_oname_v4(adapter.py)', '70': 'complete_request(adapter.py)', '75': 'kernel_info_reply(adapter.py)', '49': '_version_str_to_list(adapter.py)', '48': 'V5toV4(adapter.py)', '53': '__call__(adapter.py)', '54': 'handle_reply_status_error(adapter.py)', '57': 'update_msg_type(adapter.py)', '56': 'update_metadata(adapter.py)', '55': 'update_header(adapter.py)', '247': 'initialize(kernelapp.py)', '246': '_record_started(kernelapp.py)', '585': 'config(test_kernelmanager.py)', '262': 'install_native_kernel_spec(kernelspec.py)', '276': 'install_native_kernel_spec(kernelspec.py)', '265': 'to_json(kernelspec.py)', '264': 'to_dict(kernelspec.py)', '449': 'test_msg2obj(session.py)', '453': '__init__(session.py)', '470': '_signature_scheme_changed(session.py)', '463': '_key_default(session.py)', '447': 'new_id_bytes(session.py)', '462': '_key_changed(session.py)', '443': 'default_secure(session.py)', '469': '_session_default(session.py)', '446': 'new_id(session.py)', '413': 'list_kernel_ids(multikernelmanager.py)', '721': 'stop(threaded.py)', '724': 'start_channels(threaded.py)', '722': '_check_kernel_info_reply(threaded.py)', '716': '__init__(threaded.py)', '416': 'remove_kernel(multikernelmanager.py)', '713': 'IOLoopThread(threaded.py)', '714': 'ThreadedKernelClient(threaded.py)', '715': 'ThreadedZMQSocketChannel(threaded.py)', '731': 'flush(threaded.py)', '727': '_flush(threaded.py)', '418': 'request_shutdown(multikernelmanager.py)', '402': 'cleanup_resources(multikernelmanager.py)', '408': 'finish_shutdown(multikernelmanager.py)', '393': '__len__(multikernelmanager.py)', '198': '_session_default(connect.py)', '298': 'launch_kernel(launcher.py)', '739': 'create_interrupt_event(win_interrupt.py)', '741': 'SECURITY_ATTRIBUTES(win_interrupt.py)', '509': '__init__(signalkernel.py)', '278': '__init__(kernelspec.py)', '127': '__init__(channels.py)', '126': 'InvalidPortNumber(channels.py)', '107': '__init__(channels.py)', '81': '__init__(channels.py)', '726': '__init__(threaded.py)', '737': 'setup_stream(threaded.py)', '728': '_handle_recv(threaded.py)', '729': 'call_handlers(threaded.py)', '136': 'stop(channels.py)', '133': 'is_beating(channels.py)', '145': 'time_to_dead(channelsabc.py)', '131': 'call_handlers(channels.py)', '130': '_poll(channels.py)'}}, {'key': 924, 'parent': 1534, 'tfidf_word': 'EP: 924, Name: test_no_adapt &rarr; msg &rarr; msg &rarr; msg &rarr; msg_header &rarr; msg_id', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1533, 'parent': 1534, 'tfidf_word': 'send complete feed identity interrupt kernel raw serialize version msg ', 'tfidf_method': 'msg msg is_complete interrupt_kernel test_same_version test_feed_identities test_msg test_send test_send_raw test_serialize ', 'lda_word': ' msg,test,header,send,complete,', 'lda_method': ' msg,msg_header,msg_id,test_msg,test_send_raw,', 'lsi_word': ' msg,header,test,send,raw,', 'lsi_method': ' msg,msg_header,msg_id,test_feed_identities,test_send_raw,', 'spm_method': ' ', 'text_summary': 'Interrupts the kernel by sending it a signal.', 'files_count': 5, 'files': ['test_adapter.py', 'session.py', 'test_session.py', 'manager.py', 'client.py'], 'execution_path_count': 8, 'function_id_to_name_file': {'533': 'test_same_version(test_adapter.py)', '520': 'msg(test_adapter.py)', '534': 'msg(test_adapter.py)', '476': 'msg(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '695': 'test_send_raw(test_session.py)', '692': 'test_feed_identities(test_session.py)', '694': 'test_send(test_session.py)', '696': 'test_serialize(test_session.py)', '693': 'test_msg(test_session.py)', '328': 'interrupt_kernel(manager.py)', '166': 'is_complete(client.py)'}}, {'key': 992, 'parent': 1614, 'tfidf_word': 'EP: 992, Name: test_rename_type &rarr; msg &rarr; msg &rarr; msg_header &rarr; msg_id', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1613, 'parent': 1614, 'tfidf_word': 'header id test adapt version msg ', 'tfidf_method': 'msg msg_header msg_id msg test_no_adapt test_same_version ', 'lda_word': ' msg,header,test,adapt,version,', 'lda_method': ' msg,msg_id,msg_header,test_no_adapt,test_same_version,', 'lsi_word': ' msg,header,test,adapt,version,', 'lsi_method': ' msg,msg_header,msg_id,test_no_adapt,test_same_version,', 'spm_method': ' ', 'text_summary': '', 'files_count': 2, 'files': ['test_adapter.py', 'session.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'546': 'test_same_version(test_adapter.py)', '534': 'msg(test_adapter.py)', '476': 'msg(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '544': 'test_no_adapt(test_adapter.py)'}}, {'key': 869, 'parent': 1643, 'tfidf_word': 'EP: 869, Name: test_send_raw &rarr; msg &rarr; msg &rarr; msg_header &rarr; msg_id', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1641, 'parent': 1643, 'tfidf_word': 'header id test feed identity send msg ', 'tfidf_method': 'msg msg_header msg_id msg test_feed_identities test_send ', 'lda_word': ' msg,test,send,header,feed,', 'lda_method': ' msg,msg_header,msg_id,test_send,test_feed_identities,', 'lsi_word': ' msg,test,header,identity,feed,', 'lsi_method': ' msg,msg_header,msg_id,test_feed_identities,test_send,', 'spm_method': ' ', 'text_summary': 'Empty', 'files_count': 3, 'files': ['test_session.py', 'test_adapter.py', 'session.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'694': 'test_send(test_session.py)', '534': 'msg(test_adapter.py)', '476': 'msg(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '692': 'test_feed_identities(test_session.py)'}}, {'key': 990, 'parent': 1547, 'tfidf_word': 'EP: 990, Name: test_no_adapt &rarr; msg &rarr; msg &rarr; msg &rarr; msg_header &rarr; msg_id', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1546, 'parent': 1547, 'tfidf_word': 'send complete feed identity interrupt kernel raw serialize version msg ', 'tfidf_method': 'msg msg is_complete interrupt_kernel test_same_version test_feed_identities test_msg test_send test_send_raw test_serialize ', 'lda_word': ' msg,header,test,complete,send,', 'lda_method': ' msg,msg_id,msg_header,test_send,test_feed_identities,', 'lsi_word': ' msg,header,test,send,raw,', 'lsi_method': ' msg,msg_id,msg_header,is_complete,test_send,', 'spm_method': ' ', 'text_summary': 'scrub the front for zmq IDENTITIES.', 'files_count': 5, 'files': ['test_adapter.py', 'session.py', 'test_session.py', 'manager.py', 'client.py'], 'execution_path_count': 8, 'function_id_to_name_file': {'546': 'test_same_version(test_adapter.py)', '534': 'msg(test_adapter.py)', '520': 'msg(test_adapter.py)', '476': 'msg(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '695': 'test_send_raw(test_session.py)', '692': 'test_feed_identities(test_session.py)', '694': 'test_send(test_session.py)', '696': 'test_serialize(test_session.py)', '693': 'test_msg(test_session.py)', '328': 'interrupt_kernel(manager.py)', '166': 'is_complete(client.py)'}}, {'key': 931, 'parent': 1645, 'tfidf_word': 'EP: 931, Name: test_execute_request &rarr; msg &rarr; msg &rarr; msg_header &rarr; msg_id', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1644, 'parent': 1645, 'tfidf_word': 'test send adapt feed identity raw rename type version msg ', 'tfidf_method': 'msg msg_header msg_id msg test_no_adapt test_rename_type test_same_version test_feed_identities test_send test_send_raw ', 'lda_word': ' msg,send,test,header,raw,', 'lda_method': ' msg,msg_header,msg_id,test_same_version,test_rename_type,', 'lsi_word': ' msg,header,test,send,raw,', 'lsi_method': ' msg,msg_id,msg_header,test_same_version,test_rename_type,', 'spm_method': ' ', 'text_summary': 'Empty', 'files_count': 3, 'files': ['test_adapter.py', 'session.py', 'test_session.py'], 'execution_path_count': 6, 'function_id_to_name_file': {'532': 'test_rename_type(test_adapter.py)', '520': 'msg(test_adapter.py)', '476': 'msg(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '533': 'test_same_version(test_adapter.py)', '528': 'test_no_adapt(test_adapter.py)', '695': 'test_send_raw(test_session.py)', '694': 'test_send(test_session.py)', '692': 'test_feed_identities(test_session.py)'}}, {'key': 932, 'parent': 1630, 'tfidf_word': 'EP: 932, Name: test_execute_request &rarr; msg &rarr; msg &rarr; msg &rarr; extract_header', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1629, 'parent': 1630, 'tfidf_word': 'test send adapt feed identity raw rename type version msg ', 'tfidf_method': 'extract_header msg msg msg test_no_adapt test_rename_type test_same_version test_feed_identities test_send test_send_raw ', 'lda_word': ' msg,test,header,extract,send,', 'lda_method': ' msg,extract_header,test_feed_identities,test_send,test_rename_type,', 'lsi_word': ' msg,header,test,extract,send,', 'lsi_method': ' msg,extract_header,test_feed_identities,test_same_version,test_rename_type,', 'spm_method': ' ', 'text_summary': '', 'files_count': 3, 'files': ['test_adapter.py', 'session.py', 'test_session.py'], 'execution_path_count': 6, 'function_id_to_name_file': {'532': 'test_rename_type(test_adapter.py)', '520': 'msg(test_adapter.py)', '534': 'msg(test_adapter.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '533': 'test_same_version(test_adapter.py)', '528': 'test_no_adapt(test_adapter.py)', '695': 'test_send_raw(test_session.py)', '694': 'test_send(test_session.py)', '692': 'test_feed_identities(test_session.py)'}}, {'key': 735, 'parent': 1798, 'tfidf_word': 'EP: 735, Name: test_msg &rarr; msg &rarr; msg &rarr; extract_header', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 751, 'parent': 1798, 'tfidf_word': 'EP: 751, Name: test_serialize &rarr; msg &rarr; msg &rarr; extract_header', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 998, 'parent': 1618, 'tfidf_word': 'EP: 998, Name: test_execute_request &rarr; msg &rarr; msg &rarr; msg &rarr; extract_header', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1617, 'parent': 1618, 'tfidf_word': 'test send adapt feed identity raw rename type version msg ', 'tfidf_method': 'extract_header msg msg msg test_no_adapt test_rename_type test_same_version test_feed_identities test_send test_send_raw ', 'lda_word': ' msg,test,header,extract,send,', 'lda_method': ' msg,extract_header,test_send,test_rename_type,test_same_version,', 'lsi_word': ' msg,test,header,extract,send,', 'lsi_method': ' msg,extract_header,test_feed_identities,test_send,test_same_version,', 'spm_method': ' ', 'text_summary': '', 'files_count': 3, 'files': ['test_adapter.py', 'session.py', 'test_session.py'], 'execution_path_count': 6, 'function_id_to_name_file': {'545': 'test_rename_type(test_adapter.py)', '534': 'msg(test_adapter.py)', '520': 'msg(test_adapter.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '546': 'test_same_version(test_adapter.py)', '544': 'test_no_adapt(test_adapter.py)', '695': 'test_send_raw(test_session.py)', '694': 'test_send(test_session.py)', '692': 'test_feed_identities(test_session.py)'}}, {'key': 760, 'parent': 1799, 'tfidf_word': 'EP: 760, Name: test_send &rarr; msg &rarr; msg &rarr; extract_header', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1797, 'parent': 1799, 'tfidf_word': 'extract header test serialize msg ', 'tfidf_method': 'extract_header msg msg test_msg test_serialize ', 'lda_word': ' msg,header,test,extract,serialize,', 'lda_method': ' msg,extract_header,test_serialize,test_msg,', 'lsi_word': ' msg,test,header,extract,serialize,', 'lsi_method': ' msg,extract_header,test_serialize,test_msg,', 'spm_method': ' ', 'text_summary': '', 'files_count': 3, 'files': ['test_session.py', 'test_adapter.py', 'session.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'693': 'test_msg(test_session.py)', '520': 'msg(test_adapter.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '696': 'test_serialize(test_session.py)'}}, {'key': 822, 'parent': 2053, 'tfidf_word': 'EP: 822, Name: test_bad_pack &rarr; __init__ &rarr; _new_auth', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 827, 'parent': 2053, 'tfidf_word': 'EP: 827, Name: test_bad_unpack &rarr; __init__ &rarr; _new_auth', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 808, 'parent': 2065, 'tfidf_word': 'EP: 808, Name: test_session_id &rarr; __init__ &rarr; _new_auth', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 812, 'parent': 2065, 'tfidf_word': 'EP: 812, Name: test_zero_digest_history &rarr; __init__ &rarr; _new_auth', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1270, 'parent': 2209, 'tfidf_word': 'EP: 1270, Name: get_kernel_spec &rarr; get_kernel_spec &rarr; _get_kernel_spec_by_name', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1271, 'parent': 2209, 'tfidf_word': 'EP: 1271, Name: get_kernel_spec &rarr; get_kernel_spec &rarr; _is_valid_kernel_name', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1266, 'parent': 2207, 'tfidf_word': 'EP: 1266, Name: test_subclass &rarr; get_kernel_spec &rarr; NoSuchKernel', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2206, 'parent': 2207, 'tfidf_word': 'name subclass test valid get kernel spec ', 'tfidf_method': 'get_kernel_spec test_subclass _is_valid_kernel_name _get_kernel_spec_by_name ', 'lda_word': ' kernel,spec,name,get,subclass,', 'lda_method': ' test_subclass,get_kernel_spec,get_kernel_spec_by_name,is_valid_kernel_name,', 'lsi_word': ' kernel,get,spec,subclass,name,', 'lsi_method': ' get_kernel_spec,test_subclass,get_kernel_spec_by_name,is_valid_kernel_name,', 'spm_method': ' ', 'text_summary': 'Check that a kernel name is valid.', 'files_count': 2, 'files': ['test_kernelspec.py', 'kernelspec.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'629': 'test_subclass(test_kernelspec.py)', '274': 'get_kernel_spec(kernelspec.py)', '269': '_get_kernel_spec_by_name(kernelspec.py)', '257': '_is_valid_kernel_name(kernelspec.py)'}}, {'key': 717, 'parent': 2150, 'tfidf_word': 'EP: 717, Name: setUp &rarr; get_kernel_spec &rarr; __init__', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2149, 'parent': 2150, 'tfidf_word': 'set up name get kernel spec no such valid ', 'tfidf_method': 'get_kernel_spec setUp NoSuchKernel _is_valid_kernel_name _get_kernel_spec_by_name ', 'lda_word': ' kernel,set,spec,get,name,', 'lda_method': ' get_kernel_spec,setup,get_kernel_spec_by_name,nosuchkernel,is_valid_kernel_name,', 'lsi_word': ' kernel,spec,get,set,name,', 'lsi_method': ' get_kernel_spec,setup,nosuchkernel,get_kernel_spec_by_name,is_valid_kernel_name,', 'spm_method': ' ', 'text_summary': '', 'files_count': 2, 'files': ['test_client.py', 'kernelspec.py'], 'execution_path_count': 3, 'function_id_to_name_file': {'549': 'setUp(test_client.py)', '274': 'get_kernel_spec(kernelspec.py)', '255': 'NoSuchKernel(kernelspec.py)', '269': '_get_kernel_spec_by_name(kernelspec.py)', '257': '_is_valid_kernel_name(kernelspec.py)'}}, {'key': 1228, 'parent': 2201, 'tfidf_word': 'EP: 1228, Name: test_get_kernel_spec &rarr; get_kernel_spec &rarr; __init__', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2200, 'parent': 2201, 'tfidf_word': 'test name no such valid get kernel spec ', 'tfidf_method': 'get_kernel_spec test_get_kernel_spec NoSuchKernel _is_valid_kernel_name _get_kernel_spec_by_name ', 'lda_word': ' spec,kernel,get,test,name,', 'lda_method': ' test_get_kernel_spec,get_kernel_spec,is_valid_kernel_name,get_kernel_spec_by_name,nosuchkernel,', 'lsi_word': ' kernel,get,spec,test,name,', 'lsi_method': ' get_kernel_spec,test_get_kernel_spec,nosuchkernel,get_kernel_spec_by_name,is_valid_kernel_name,', 'spm_method': ' ', 'text_summary': '', 'files_count': 2, 'files': ['test_kernelspec.py', 'kernelspec.py'], 'execution_path_count': 3, 'function_id_to_name_file': {'623': 'test_get_kernel_spec(test_kernelspec.py)', '274': 'get_kernel_spec(kernelspec.py)', '255': 'NoSuchKernel(kernelspec.py)', '269': '_get_kernel_spec_by_name(kernelspec.py)', '257': '_is_valid_kernel_name(kernelspec.py)'}}, {'key': 1088, 'parent': 2182, 'tfidf_word': 'EP: 1088, Name: test_app_load_connection_file &rarr; write_connection_file &rarr; ports', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1089, 'parent': 2182, 'tfidf_word': 'EP: 1089, Name: test_app_load_connection_file &rarr; write_connection_file &rarr; close', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1073, 'parent': 2082, 'tfidf_word': 'EP: 1073, Name: test_load_connection_file_session_with_kn &rarr; write_connection_file &rarr; close', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1074, 'parent': 2082, 'tfidf_word': 'EP: 1074, Name: test_load_connection_file_session_with_kn &rarr; write_connection_file &rarr; localhost', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1071, 'parent': 2179, 'tfidf_word': 'EP: 1071, Name: test_load_connection_file_session_with_kn &rarr; write_connection_file &rarr; close', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2178, 'parent': 2179, 'tfidf_word': 'kn load session test write close port connection file ', 'tfidf_method': 'write_connection_file test_load_connection_file_session_with_kn ports close ', 'lda_word': ' file,connection,kn,load,session,', 'lda_method': ' close,write_connection_file,test_load_connection_file_session_with_kn,port,', 'lsi_word': ' connection,file,load,session,write,', 'lsi_method': ' test_load_connection_file_session_with_kn,write_connection_file,close,port,', 'spm_method': ' ', 'text_summary': '', 'files_count': 3, 'files': ['test_connect.py', 'connect.py', 'threaded.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'565': 'test_load_connection_file_session_with_kn(test_connect.py)', '191': 'write_connection_file(connect.py)', '211': 'ports(connect.py)', '718': 'close(threaded.py)'}}, {'key': 1047, 'parent': 2078, 'tfidf_word': 'EP: 1047, Name: test_write_connection_file &rarr; write_connection_file &rarr; close', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2077, 'parent': 2078, 'tfidf_word': 'test close localhost connection file write ', 'tfidf_method': 'write_connection_file test_write_connection_file localhost close ', 'lda_word': ' write,file,connection,test,localhost,', 'lda_method': ' test_write_connection_file,write_connection_file,localhost,close,', 'lsi_word': ' connection,file,write,test,localhost,', 'lsi_method': ' test_write_connection_file,write_connection_file,close,localhost,', 'spm_method': ' ', 'text_summary': '', 'files_count': 4, 'files': ['test_connect.py', 'connect.py', 'channels.py', 'localinterfaces.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'570': 'test_write_connection_file(test_connect.py)', '191': 'write_connection_file(connect.py)', '83': 'close(channels.py)', '315': 'localhost(localinterfaces.py)'}}, {'key': 1044, 'parent': 2172, 'tfidf_word': 'EP: 1044, Name: test_write_connection_file &rarr; write_connection_file &rarr; close', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2171, 'parent': 2172, 'tfidf_word': 'test close connection file write port ', 'tfidf_method': 'write_connection_file test_write_connection_file close ports close ', 'lda_word': ' connection,file,write,test,port,', 'lda_method': ' test_write_connection_file,write_connection_file,port,close,', 'lsi_word': ' connection,file,write,test,close,', 'lsi_method': ' test_write_connection_file,write_connection_file,close,port,', 'spm_method': ' ', 'text_summary': '', 'files_count': 4, 'files': ['test_connect.py', 'connect.py', 'channels.py', 'threaded.py'], 'execution_path_count': 3, 'function_id_to_name_file': {'570': 'test_write_connection_file(test_connect.py)', '191': 'write_connection_file(connect.py)', '132': 'close(channels.py)', '211': 'ports(connect.py)', '718': 'close(threaded.py)'}}, {'key': 1056, 'parent': 2080, 'tfidf_word': 'EP: 1056, Name: test_load_connection_file_session &rarr; write_connection_file &rarr; close', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2079, 'parent': 2080, 'tfidf_word': 'load session test write close localhost connection file ', 'tfidf_method': 'write_connection_file test_load_connection_file_session localhost close ', 'lda_word': ' file,connection,test,write,session,', 'lda_method': ' write_connection_file,test_load_connection_file_session,close,localhost,', 'lsi_word': ' file,connection,session,write,load,', 'lsi_method': ' test_load_connection_file_session,write_connection_file,close,localhost,', 'spm_method': ' ', 'text_summary': '', 'files_count': 4, 'files': ['test_connect.py', 'connect.py', 'channels.py', 'localinterfaces.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'564': 'test_load_connection_file_session(test_connect.py)', '191': 'write_connection_file(connect.py)', '83': 'close(channels.py)', '315': 'localhost(localinterfaces.py)'}}, {'key': 1053, 'parent': 2176, 'tfidf_word': 'EP: 1053, Name: test_load_connection_file_session &rarr; write_connection_file &rarr; close', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2175, 'parent': 2176, 'tfidf_word': 'load session test write close connection file port ', 'tfidf_method': 'write_connection_file test_load_connection_file_session close ports close ', 'lda_word': ' connection,test,file,write,close,', 'lda_method': ' write_connection_file,test_load_connection_file_session,close,port,', 'lsi_word': ' connection,file,session,write,load,', 'lsi_method': ' write_connection_file,test_load_connection_file_session,close,port,', 'spm_method': ' ', 'text_summary': '', 'files_count': 4, 'files': ['test_connect.py', 'connect.py', 'channels.py', 'threaded.py'], 'execution_path_count': 3, 'function_id_to_name_file': {'564': 'test_load_connection_file_session(test_connect.py)', '191': 'write_connection_file(connect.py)', '132': 'close(channels.py)', '211': 'ports(connect.py)', '718': 'close(threaded.py)'}}, {'key': 759, 'parent': 1837, 'tfidf_word': 'EP: 759, Name: test_send &rarr; deserialize &rarr; _add_digest &rarr; _cull_digest_history', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 863, 'parent': 1837, 'tfidf_word': 'EP: 863, Name: test_send_raw &rarr; deserialize &rarr; _add_digest &rarr; _cull_digest_history', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 115, 'parent': 1863, 'tfidf_word': 'EP: 115, Name: unserialize &rarr; deserialize &rarr; _add_digest &rarr; _cull_digest_history', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 746, 'parent': 1863, 'tfidf_word': 'EP: 746, Name: test_serialize &rarr; deserialize &rarr; _add_digest &rarr; _cull_digest_history', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1948, 'parent': 2332, 'tfidf_word': 'dummy jupyter load test mixin session connection console file app ', 'tfidf_method': 'JupyterConsoleApp DummyConsoleApp test_app_load_connection_file ConnectionFileMixin Session ', 'lda_word': ' app,console,connection,file,dummy,', 'lda_method': ' jupyterconsoleapp,dummyconsoleapp,session,test_app_load_connection_file,connectionfilemixin,', 'lsi_word': ' app,console,connection,file,load,', 'lsi_method': ' dummyconsoleapp,test_app_load_connection_file,jupyterconsoleapp,connectionfilemixin,session,', 'spm_method': ' ', 'text_summary': '', 'files_count': 4, 'files': ['test_connect.py', 'consoleapp.py', 'session.py', 'connect.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'559': 'test_app_load_connection_file(test_connect.py)', '558': 'DummyConsoleApp(test_connect.py)', '214': 'JupyterConsoleApp(consoleapp.py)', '441': 'Session(session.py)', '188': 'ConnectionFileMixin(connect.py)'}}, {'key': 1949, 'parent': 2332, 'tfidf_word': 'dummy find jupyter test mixin session app connection console file ', 'tfidf_method': 'JupyterConsoleApp DummyConsoleApp test_find_connection_file ConnectionFileMixin Session ', 'lda_word': ' console,connection,app,find,test,', 'lda_method': ' dummyconsoleapp,test_find_connection_file,jupyterconsoleapp,connectionfilemixin,session,', 'lsi_word': ' app,console,connection,file,dummy,', 'lsi_method': ' dummyconsoleapp,jupyterconsoleapp,test_find_connection_file,session,connectionfilemixin,', 'spm_method': ' ', 'text_summary': '', 'files_count': 4, 'files': ['test_connect.py', 'consoleapp.py', 'session.py', 'connect.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'560': 'test_find_connection_file(test_connect.py)', '558': 'DummyConsoleApp(test_connect.py)', '214': 'JupyterConsoleApp(consoleapp.py)', '441': 'Session(session.py)', '188': 'ConnectionFileMixin(connect.py)'}}, {'key': 1942, 'parent': 2347, 'tfidf_word': 'dummy jupyter load test mixin app connection console file session ', 'tfidf_method': 'JupyterConsoleApp DummyConsoleApp test_load_connection_file_session ConnectionFileMixin Session ', 'lda_word': ' file,app,session,connection,console,', 'lda_method': ' test_load_connection_file_session,dummyconsoleapp,jupyterconsoleapp,connectionfilemixin,session,', 'lsi_word': ' console,app,connection,file,session,', 'lsi_method': ' jupyterconsoleapp,test_load_connection_file_session,dummyconsoleapp,connectionfilemixin,session,', 'spm_method': ' ', 'text_summary': '', 'files_count': 4, 'files': ['test_connect.py', 'consoleapp.py', 'session.py', 'connect.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'564': 'test_load_connection_file_session(test_connect.py)', '558': 'DummyConsoleApp(test_connect.py)', '214': 'JupyterConsoleApp(consoleapp.py)', '441': 'Session(session.py)', '188': 'ConnectionFileMixin(connect.py)'}}, {'key': 1946, 'parent': 2347, 'tfidf_word': 'jupyter kn load test mixin app connection console file session ', 'tfidf_method': 'JupyterConsoleApp DummyConsoleApp test_load_connection_file_session_with_kn ConnectionFileMixin Session ', 'lda_word': ' console,app,session,file,connection,', 'lda_method': ' test_load_connection_file_session_with_kn,dummyconsoleapp,jupyterconsoleapp,connectionfilemixin,session,', 'lsi_word': ' app,console,connection,file,session,', 'lsi_method': ' dummyconsoleapp,jupyterconsoleapp,test_load_connection_file_session_with_kn,connectionfilemixin,session,', 'spm_method': ' ', 'text_summary': '', 'files_count': 4, 'files': ['test_connect.py', 'consoleapp.py', 'session.py', 'connect.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'565': 'test_load_connection_file_session_with_kn(test_connect.py)', '558': 'DummyConsoleApp(test_connect.py)', '214': 'JupyterConsoleApp(consoleapp.py)', '441': 'Session(session.py)', '188': 'ConnectionFileMixin(connect.py)'}}, {'key': 16, 'parent': 2094, 'tfidf_word': 'EP: 16, Name: IPythonConsoleApp &rarr; JupyterConsoleApp &rarr; Session', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 17, 'parent': 2094, 'tfidf_word': 'EP: 17, Name: IPythonConsoleApp &rarr; JupyterConsoleApp &rarr; ConnectionFileMixin', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 159, 'parent': 2110, 'tfidf_word': 'EP: 159, Name: RunApp &rarr; JupyterConsoleApp &rarr; Session', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 160, 'parent': 2110, 'tfidf_word': 'EP: 160, Name: RunApp &rarr; JupyterConsoleApp &rarr; ConnectionFileMixin', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1155, 'parent': 2192, 'tfidf_word': 'EP: 1155, Name: test_start_sequence_tcp_kernels &rarr; _get_tcp_km &rarr; __init__', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2190, 'parent': 2192, 'tfidf_word': 'get init km test tcp cinfo id kernel lifecycle shutdown ', 'tfidf_method': '__init__ _get_tcp_km test_shutdown_all test_tcp_cinfo test_tcp_lifecycle_with_kernel_id ', 'lda_word': ' tcp,lifecycle,get,test,init,', 'lda_method': ' get_tcp_km,init,test_tcp_cinfo,test_tcp_lifecycle_with_kernel_id,test_shutdown_all,', 'lsi_word': ' tcp,test,km,init,get,', 'lsi_method': ' init,get_tcp_km,test_tcp_lifecycle_with_kernel_id,test_shutdown_all,test_tcp_cinfo,', 'spm_method': ' ', 'text_summary': '', 'files_count': 2, 'files': ['test_multikernelmanager.py', 'multikernelmanager.py'], 'execution_path_count': 3, 'function_id_to_name_file': {'666': 'test_tcp_cinfo(test_multikernelmanager.py)', '655': '_get_tcp_km(test_multikernelmanager.py)', '392': '__init__(multikernelmanager.py)', '668': 'test_tcp_lifecycle_with_kernel_id(test_multikernelmanager.py)', '661': 'test_shutdown_all(test_multikernelmanager.py)'}}, {'key': 1758, 'parent': 2260, 'tfidf_word': 'kernel km loop parallel start process thread lifecycle test tcp ', 'tfidf_method': '__init__ _get_tcp_km tcp_lifecycle_with_loop test_tcp_lifecycle test_start_parallel_process_kernels test_start_parallel_thread_kernels ', 'lda_word': ' tcp,test,lifecycle,km,get,', 'lda_method': ' get_tcp_km,tcp_lifecycle_with_loop,init,test_tcp_lifecycle,test_start_parallel_process_kernels,', 'lsi_word': ' tcp,lifecycle,test,get,kernel,', 'lsi_method': ' get_tcp_km,init,tcp_lifecycle_with_loop,test_tcp_lifecycle,test_start_parallel_process_kernels,', 'spm_method': ' ', 'text_summary': '', 'files_count': 2, 'files': ['test_multikernelmanager.py', 'multikernelmanager.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'663': 'test_start_parallel_thread_kernels(test_multikernelmanager.py)', '658': 'tcp_lifecycle_with_loop(test_multikernelmanager.py)', '667': 'test_tcp_lifecycle(test_multikernelmanager.py)', '655': '_get_tcp_km(test_multikernelmanager.py)', '392': '__init__(multikernelmanager.py)', '662': 'test_start_parallel_process_kernels(test_multikernelmanager.py)'}}, {'key': 1952, 'parent': 2260, 'tfidf_word': 'init kernel km lifecycle parallel start process thread tcp test ', 'tfidf_method': '__init__ _get_tcp_km test_tcp_lifecycle test_start_parallel_process_kernels test_start_parallel_thread_kernels ', 'lda_word': ' test,thread,tcp,get,kernel,', 'lda_method': ' get_tcp_km,init,test_start_parallel_process_kernels,test_tcp_lifecycle,test_start_parallel_thread_kernels,', 'lsi_word': ' test,tcp,get,start,parallel,', 'lsi_method': ' test_tcp_lifecycle,get_tcp_km,init,test_start_parallel_process_kernels,test_start_parallel_thread_kernels,', 'spm_method': ' ', 'text_summary': '', 'files_count': 2, 'files': ['test_multikernelmanager.py', 'multikernelmanager.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'663': 'test_start_parallel_thread_kernels(test_multikernelmanager.py)', '667': 'test_tcp_lifecycle(test_multikernelmanager.py)', '655': '_get_tcp_km(test_multikernelmanager.py)', '392': '__init__(multikernelmanager.py)', '662': 'test_start_parallel_process_kernels(test_multikernelmanager.py)'}}, {'key': 2100, 'parent': 2754, 'tfidf_word': 'kernel random select tunnel close port ', 'tfidf_method': 'tunnel_to_kernel select_random_ports close close ports close close close ', 'lda_word': ' kernel,random,tunnel,port,select,', 'lda_method': ' close,select_random_ports,tunnel_to_kernel,port,', 'lsi_word': ' port,kernel,random,select,tunnel,', 'lsi_method': ' select_random_ports,tunnel_to_kernel,close,port,', 'spm_method': ' ', 'text_summary': '', 'files_count': 4, 'files': ['connect.py', 'tunnel.py', 'threaded.py', 'channels.py'], 'execution_path_count': 6, 'function_id_to_name_file': {'190': 'tunnel_to_kernel(connect.py)', '503': 'select_random_ports(tunnel.py)', '718': 'close(threaded.py)', '730': 'close(threaded.py)', '132': 'close(channels.py)', '109': 'close(channels.py)', '83': 'close(channels.py)', '211': 'ports(connect.py)'}}, {'key': 2168, 'parent': 2754, 'tfidf_word': 'select test close random port ', 'tfidf_method': 'select_random_ports test_random_ports close close ports close close close ', 'lda_word': ' port,random,test,select,close,', 'lda_method': ' select_random_ports,test_random_ports,close,port,', 'lsi_word': ' port,random,test,select,close,', 'lsi_method': ' select_random_ports,test_random_ports,close,port,', 'spm_method': ' ', 'text_summary': '', 'files_count': 5, 'files': ['test_ssh.py', 'tunnel.py', 'threaded.py', 'channels.py', 'connect.py'], 'execution_path_count': 6, 'function_id_to_name_file': {'701': 'test_random_ports(test_ssh.py)', '503': 'select_random_ports(tunnel.py)', '718': 'close(threaded.py)', '730': 'close(threaded.py)', '132': 'close(channels.py)', '109': 'close(channels.py)', '83': 'close(channels.py)', '211': 'ports(connect.py)'}}, {'key': 2317, 'parent': 2767, 'tfidf_word': 'check get id finish interrupt restart signal kernel shutdown ', 'tfidf_method': '_check_kernel_id get_kernel finish_shutdown interrupt_kernel restart_kernel shutdown_all shutdown_kernel signal_kernel shutdown_all shutdown_kernel ', 'lda_word': ' kernel,get,check,shutdown,restart,', 'lda_method': ' get_kernel,check_kernel_id,shutdown_kernel,shutdown_all,signal_kernel,', 'lsi_word': ' kernel,check,get,shutdown,restart,', 'lsi_method': ' get_kernel,check_kernel_id,shutdown_all,shutdown_kernel,finish_shutdown,', 'spm_method': ' ', 'text_summary': "Attempts to stop the kernel process cleanly. Sends a signal to the process group of the kernel (this. Wait for kernel shutdown, then kill process if it doesn't shutdown. check that a kernel id is valid. Interrupts the kernel by sending it a signal.", 'files_count': 1, 'files': ['multikernelmanager.py'], 'execution_path_count': 7, 'function_id_to_name_file': {'386': 'shutdown_all(multikernelmanager.py)', '383': 'finish_shutdown(multikernelmanager.py)', '410': 'get_kernel(multikernelmanager.py)', '394': '_check_kernel_id(multikernelmanager.py)', '388': 'signal_kernel(multikernelmanager.py)', '385': 'restart_kernel(multikernelmanager.py)', '384': 'interrupt_kernel(multikernelmanager.py)', '387': 'shutdown_kernel(multikernelmanager.py)', '421': 'shutdown_kernel(multikernelmanager.py)', '420': 'shutdown_all(multikernelmanager.py)'}}, {'key': 2759, 'parent': 2767, 'tfidf_word': 'manager loop flush permission native io cleanup code restarter tunnel ', 'tfidf_method': 'test_find_connection_file_abspath test_find_connection_file_local test_find_connection_file_relative test_load_connection_file_session test_load_connection_file_session_with_kn finish_shutdown test_mixin_record_random_ports test_secure_write check_user_only_permissions test_complete_request ', 'lda_word': ' kernel,alive,install,spec,test,', 'lda_method': ' session,run,close,create_socket,wrap,', 'lsi_word': ' kernel,test,lifecycle,start,manager,', 'lsi_method': ' init,check_packers,utcnow,get_ipc_km,new_auth,', 'spm_method': ' ', 'text_summary': "Subclasses may override  Prepares a kernel for startup in a separate process. Prepares a kernel for startup in a separate process. return ip for localhost (almost always 127.0.0.1)   Ensure that a sequence of kernel startups doesn't break anything. This method is called in the ioloop thread when a message arrives. Pass a message to the ZMQ socket to send. Return the connection info as a dict. Subclasses may override Start the polling of the kernel. Ensure that a sequence of kernel startups doesn't break anything. find a connection file, and return its absolute path. return ip for localhost (almost always 127.0.0.1)      find a connection file, and return its absolute path. tunnel connections to a kernel via ssh. test load_connection_file() after. handle kernel info reply. Get the hb channel object for this kernel. Returns the id to associate with the kernel for this request. Send a raw message via ident path. Make a blocking client connected to my kernel. Get a message from the stdin channel. Immediately processes all pending messages on this channel. Return the number of running kernels. Unserialize a msg_list to a nested message dict. Interrupts the kernel by sending it a signal. Get a message from the shell channel. Create an ssh tunnel using command-line ssh that connects port lport. This is run in the ioloop thread when the kernel info reply is received. default function for packing datetime objects in JSON. Start the polling of the kernel. Send a shutdown request via control channel. Get a message from the iopub channel. Sends an interrupt event using the specified handle. test that messages receive unique ids. Forgets randomly assigned port numbers and cleans up the connection file.", 'files_count': 34, 'files': ['client.py', 'multikernelmanager.py', 'managerabc.py', 'channelsabc.py', 'threaded.py', 'channels.py', 'test_multikernelmanager.py', 'test_session.py', 'session.py', 'forward.py', 'manager.py', 'test_kernelspec.py', 'kernelspec.py', 'test_kernelmanager.py', 'consoleapp.py', 'jsonutil.py', 'connect.py', 'test_manager.py', 'utils.py', 'restarter.py', 'signalkernel.py', 'tunnel.py', 'test_connect.py', 'kernelspecapp.py', 'kernelapp.py', 'test_adapter.py', 'test_jsonutil.py', 'localinterfaces.py', 'adapter.py', 'test_kernelapp.py', 'test_client.py', 'win_interrupt.py', 'runapp.py', 'launcher.py'], 'execution_path_count': 357, 'function_id_to_name_file': {'104': 'wait_for_ready(client.py)', '103': 'is_alive(client.py)', '412': 'is_alive(multikernelmanager.py)', '373': 'is_alive(managerabc.py)', '140': 'is_alive(channelsabc.py)', '732': 'is_alive(threaded.py)', '86': 'is_alive(channels.py)', '112': 'is_alive(channels.py)', '123': 'wait_for_ready(client.py)', '165': 'is_alive(client.py)', '648': 'test_start_parallel_thread_kernels(test_multikernelmanager.py)', '643': 'tcp_lifecycle_with_loop(test_multikernelmanager.py)', '642': 'raw_tcp_lifecycle(test_multikernelmanager.py)', '641': '_run_lifecycle(test_multikernelmanager.py)', '647': 'test_start_parallel_process_kernels(test_multikernelmanager.py)', '652': 'test_tcp_lifecycle(test_multikernelmanager.py)', '653': 'test_tcp_lifecycle_with_kernel_id(test_multikernelmanager.py)', '694': 'test_send(test_session.py)', '479': 'recv(session.py)', '474': 'deserialize(session.py)', '483': 'sign(session.py)', '492': 'handle(forward.py)', '695': 'test_send_raw(test_session.py)', '484': 'unserialize(session.py)', '696': 'test_serialize(test_session.py)', '480': 'send(session.py)', '440': 'Message(session.py)', '698': 'test_tracking(test_session.py)', '328': 'interrupt_kernel(manager.py)', '482': 'serialize(session.py)', '135': 'run(channels.py)', '128': '_create_socket(channels.py)', '718': 'close(threaded.py)', '730': 'close(threaded.py)', '132': 'close(channels.py)', '83': 'close(channels.py)', '109': 'close(channels.py)', '84': 'get_msg(channels.py)', '82': '_recv(channels.py)', '101': 'get_stdin_msg(client.py)', '85': 'get_msgs(channels.py)', '99': 'get_iopub_msg(client.py)', '110': 'get_msg(channels.py)', '108': '_recv(channels.py)', '111': 'get_msgs(channels.py)', '620': 'test_cant_install_kernel_spec(test_kernelspec.py)', '275': 'install_kernel_spec(kernelspec.py)', '268': '_get_destination_dir(kernelspec.py)', '257': '_is_valid_kernel_name(kernelspec.py)', '625': 'test_install_kernel_spec_prefix(test_kernelspec.py)', '261': 'install_kernel_spec(kernelspec.py)', '624': 'test_install_kernel_spec(test_kernelspec.py)', '614': 'test_start_sequence_process_kernels(test_kernelmanager.py)', '610': '_run_signaltest_lifecycle(test_kernelmanager.py)', '615': 'execute(test_kernelmanager.py)', '609': '_prepare_kernel(test_kernelmanager.py)', '611': 'test_start_parallel_process_kernels(test_kernelmanager.py)', '613': 'test_start_sequence_kernels(test_kernelmanager.py)', '612': 'test_start_parallel_thread_kernels(test_kernelmanager.py)', '398': '_kernel_manager_class_changed(multikernelmanager.py)', '396': '_create_kernel_manager_factory(multikernelmanager.py)', '424': 'create_kernel_manager(multikernelmanager.py)', '397': '_find_available_port(multikernelmanager.py)', '395': '_context_default(multikernelmanager.py)', '399': '_kernel_manager_factory_default(multikernelmanager.py)', '215': '__init__(consoleapp.py)', '485': '__init__(session.py)', '441': 'Session(session.py)', '457': '__init__(session.py)', '465': '_new_auth(session.py)', '459': '_check_packers(session.py)', '450': 'utcnow(session.py)', '244': 'squash_dates(jsonutil.py)', '90': 'AsyncKernelClient(client.py)', '147': 'KernelClient(client.py)', '139': 'HBChannelABC(channelsabc.py)', '138': 'ChannelABC(channelsabc.py)', '116': 'BlockingKernelClient(client.py)', '188': 'ConnectionFileMixin(connect.py)', '322': 'start_new_async_kernel(manager.py)', '319': 'AsyncKernelManager(manager.py)', '320': 'KernelManager(manager.py)', '224': 'AsyncIOLoopKernelManager(manager.py)', '225': 'IOLoopKernelManager(manager.py)', '635': 'test_connection_file_real_path(test_manager.py)', '663': 'test_start_parallel_thread_kernels(test_multikernelmanager.py)', '658': 'tcp_lifecycle_with_loop(test_multikernelmanager.py)', '667': 'test_tcp_lifecycle(test_multikernelmanager.py)', '657': '_run_lifecycle(test_multikernelmanager.py)', '662': 'test_start_parallel_process_kernels(test_multikernelmanager.py)', '704': 'execute(utils.py)', '155': 'execute(client.py)', '148': 'validate_string_dict(client.py)', '689': 'test_datetimes_msgpack(test_session.py)', '679': '_datetime_test(test_session.py)', '688': 'test_datetimes(test_session.py)', '690': 'test_datetimes_pickle(test_session.py)', '734': 'send(threaded.py)', '738': 'thread_send(threaded.py)', '664': 'test_start_sequence_ipc_kernels(test_multikernelmanager.py)', '654': '_get_ipc_km(test_multikernelmanager.py)', '392': '__init__(multikernelmanager.py)', '660': 'test_ipc_lifecycle(test_multikernelmanager.py)', '659': 'test_ipc_cinfo(test_multikernelmanager.py)', '423': 'start_kernel(multikernelmanager.py)', '415': 'pre_start_kernel(multikernelmanager.py)', '380': 'DuplicateKernelError(multikernelmanager.py)', '414': 'new_kernel_id(multikernelmanager.py)', '389': 'start_kernel(multikernelmanager.py)', '238': 'start(restarter.py)', '430': 'poll(restarter.py)', '433': 'stop(restarter.py)', '428': '_fire_callbacks(restarter.py)', '510': 'do_execute(signalkernel.py)', '190': 'tunnel_to_kernel(connect.py)', '501': 'openssh_tunnel(tunnel.py)', '494': 'SSHException(tunnel.py)', '497': '_stop_tunnel(tunnel.py)', '475': 'feed_identities(session.py)', '330': 'restart_kernel(manager.py)', '202': 'cleanup_random_ports(connect.py)', '200': 'cleanup_connection_file(connect.py)', '567': 'test_mixin_cleanup_random_ports(test_connect.py)', '106': 'ZMQSocketChannel(channels.py)', '226': 'as_zmqstream(manager.py)', '233': 'wrapped(manager.py)', '568': 'test_mixin_record_random_ports(test_connect.py)', '557': 'DummyConfigurable(test_connect.py)', '235': 'IOLoopKernelRestarter(restarter.py)', '426': 'KernelRestarter(restarter.py)', '234': 'AsyncIOLoopKernelRestarter(restarter.py)', '291': 'start(kernelspecapp.py)', '251': 'start(kernelapp.py)', '249': 'setup_signals(kernelapp.py)', '252': 'shutdown_handler(kernelapp.py)', '250': 'shutdown(kernelapp.py)', '248': 'log_connection_info(kernelapp.py)', '199': 'blocking_client(connect.py)', '208': 'get_connection_info(connect.py)', '725': 'stop_channels(threaded.py)', '684': 'test_bad_unpack(test_session.py)', '676': '_bad_unpacker(test_session.py)', '536': 'test_complete_request(test_adapter.py)', '517': 'adapt(test_adapter.py)', '562': 'test_find_connection_file_local(test_connect.py)', '189': 'find_connection_file(connect.py)', '493': 'SubHander(forward.py)', '490': 'Handler(forward.py)', '253': 'KernelSpec(kernelspec.py)', '114': 'send(channels.py)', '88': 'send(channels.py)', '575': 'test_date_default(test_jsonutil.py)', '241': 'date_default(jsonutil.py)', '240': '_ensure_tzinfo(jsonutil.py)', '597': 'test_subclasses(test_kernelmanager.py)', '703': 'AsyncKernelManagerWithCleanup(utils.py)', '595': 'test_signal_kernel_subprocesses(test_kernelmanager.py)', '598': 'execute(test_kernelmanager.py)', '702': 'AsyncKernelManagerSubclass(utils.py)', '591': 'transport(test_kernelmanager.py)', '606': 'test_templated_kspec_env(test_kernelmanager.py)', '599': '_env_test_body(test_kernelmanager.py)', '607': 'execute(test_kernelmanager.py)', '604': 'test_signal_kernel_subprocesses(test_kernelmanager.py)', '608': 'execute(test_kernelmanager.py)', '586': 'env(test_kernelmanager.py)', '712': 'stop(utils.py)', '711': 'start(utils.py)', '705': 'test_env(utils.py)', '630': 'test_validate_kernel_name(test_kernelspec.py)', '506': 'SignalTestApp(signalkernel.py)', '507': 'SignalTestKernel(signalkernel.py)', '627': 'test_remove_kernel_spec(test_kernelspec.py)', '617': '_install_sample_kernel(test_kernelspec.py)', '626': 'test_kernel_spec_priority(test_kernelspec.py)', '651': 'test_tcp_cinfo(test_multikernelmanager.py)', '640': '_run_cinfo(test_multikernelmanager.py)', '621': 'test_find_all_specs(test_kernelspec.py)', '622': 'test_find_kernel_specs(test_kernelspec.py)', '623': 'test_get_kernel_spec(test_kernelspec.py)', '619': 'tearDown(test_kernelspec.py)', '618': 'setUp(test_kernelspec.py)', '649': 'test_start_sequence_ipc_kernels(test_multikernelmanager.py)', '650': 'test_start_sequence_tcp_kernels(test_multikernelmanager.py)', '644': 'test_ipc_cinfo(test_multikernelmanager.py)', '315': 'localhost(localinterfaces.py)', '645': 'test_ipc_lifecycle(test_multikernelmanager.py)', '665': 'test_start_sequence_tcp_kernels(test_multikernelmanager.py)', '656': '_run_cinfo(test_multikernelmanager.py)', '666': 'test_tcp_cinfo(test_multikernelmanager.py)', '668': 'test_tcp_lifecycle_with_kernel_id(test_multikernelmanager.py)', '569': 'test_secure_write(test_connect.py)', '573': 'check_user_only_permissions(test_connect.py)', '574': 'fetch_win32_permissions(test_connect.py)', '563': 'test_find_connection_file_relative(test_connect.py)', '561': 'test_find_connection_file_abspath(test_connect.py)', '560': 'test_find_connection_file(test_connect.py)', '565': 'test_load_connection_file_session_with_kn(test_connect.py)', '539': 'test_input_request(test_adapter.py)', '564': 'test_load_connection_file_session(test_connect.py)', '537': 'test_display_data(test_adapter.py)', '540': 'test_inspect_reply(test_adapter.py)', '543': 'test_kernel_info_reply(test_adapter.py)', '542': 'test_inspect_request_token(test_adapter.py)', '535': 'test_complete_reply(test_adapter.py)', '541': 'test_inspect_request(test_adapter.py)', '538': 'test_execute_request(test_adapter.py)', '545': 'test_rename_type(test_adapter.py)', '544': 'test_no_adapt(test_adapter.py)', '546': 'test_same_version(test_adapter.py)', '514': 'V5toV4TestCase(test_adapter.py)', '512': 'AdapterTest(test_adapter.py)', '526': 'test_input_request(test_adapter.py)', '523': 'test_display_data(test_adapter.py)', '527': 'test_kernel_info_reply(test_adapter.py)', '530': 'test_object_info_reply_not_found(test_adapter.py)', '529': 'test_object_info_reply(test_adapter.py)', '531': 'test_object_info_request(test_adapter.py)', '521': 'test_complete_reply(test_adapter.py)', '522': 'test_complete_request(test_adapter.py)', '524': 'test_execute_reply(test_adapter.py)', '532': 'test_rename_type(test_adapter.py)', '525': 'test_execute_request(test_adapter.py)', '528': 'test_no_adapt(test_adapter.py)', '533': 'test_same_version(test_adapter.py)', '513': 'V4toV5TestCase(test_adapter.py)', '519': 'setUp(test_adapter.py)', '516': 'test_default_version(test_adapter.py)', '515': 'test_code_to_line_no_code(test_adapter.py)', '51': 'code_to_line(adapter.py)', '158': 'get_shell_msg(client.py)', '157': 'get_iopub_msg(client.py)', '710': '__exit__(utils.py)', '709': '__enter__(utils.py)', '580': 'test_kernelapp_lifecycle(test_kernelapp.py)', '579': '_launch(test_kernelapp.py)', '686': 'test_clone(test_session.py)', '473': 'clone(session.py)', '481': 'send_raw(session.py)', '683': 'test_bad_roundtrip(test_session.py)', '685': 'test_bad_unpacker(test_session.py)', '682': 'test_bad_packer(test_session.py)', '681': 'test_bad_pack(test_session.py)', '675': '_bad_packer(test_session.py)', '687': 'test_cull_digest_history(test_session.py)', '700': 'test_zero_digest_history(test_session.py)', '697': 'test_session_id(test_session.py)', '699': 'test_unique_msg_ids(test_session.py)', '445': 'msg_header(session.py)', '680': 'test_args(test_session.py)', '478': 'msg_id(session.py)', '674': 'TestSession(test_session.py)', '673': 'SessionTestCase(test_session.py)', '678': 'setUp(test_session.py)', '556': 'test_shutdown(test_client.py)', '548': '_check_reply(test_client.py)', '550': 'test_comm_info(test_client.py)', '555': 'test_kernel_info(test_client.py)', '551': 'test_complete(test_client.py)', '554': 'test_inspect(test_client.py)', '553': 'test_history(test_client.py)', '549': 'setUp(test_client.py)', '255': 'NoSuchKernel(kernelspec.py)', '117': 'reqrep(client.py)', '124': 'wrapped(client.py)', '150': '_handle_kernel_info_reply(client.py)', '125': 'HBChannel(channels.py)', '102': 'hb_channel(client.py)', '196': '_make_url(connect.py)', '91': 'reqrep(client.py)', '105': 'wrapped(client.py)', '80': 'ZMQSocketChannel(channels.py)', '154': 'control_channel(client.py)', '723': 'ioloop(threaded.py)', '160': 'hb_channel(client.py)', '171': 'stdin_channel(client.py)', '164': 'iopub_channel(client.py)', '168': 'shell_channel(client.py)', '740': 'send_interrupt(win_interrupt.py)', '334': '__del__(manager.py)', '293': 'start(kernelspecapp.py)', '294': 'path_key(kernelspecapp.py)', '735': 'start(threaded.py)', '720': 'start(threaded.py)', '141': 'start(channelsabc.py)', '432': 'start(restarter.py)', '288': 'start(kernelspecapp.py)', '89': 'start(channels.py)', '115': 'start(channels.py)', '290': 'start(kernelspecapp.py)', '438': 'parse_command_line(runapp.py)', '218': 'build_kernel_argv(consoleapp.py)', '308': '_only_once(localinterfaces.py)', '317': 'wrapped(localinterfaces.py)', '47': 'V4toV5(adapter.py)', '46': 'Adapter(adapter.py)', '77': 'object_info_request(adapter.py)', '52': 'extract_oname_v4(adapter.py)', '70': 'complete_request(adapter.py)', '75': 'kernel_info_reply(adapter.py)', '49': '_version_str_to_list(adapter.py)', '48': 'V5toV4(adapter.py)', '53': '__call__(adapter.py)', '54': 'handle_reply_status_error(adapter.py)', '57': 'update_msg_type(adapter.py)', '56': 'update_metadata(adapter.py)', '55': 'update_header(adapter.py)', '247': 'initialize(kernelapp.py)', '246': '_record_started(kernelapp.py)', '585': 'config(test_kernelmanager.py)', '262': 'install_native_kernel_spec(kernelspec.py)', '276': 'install_native_kernel_spec(kernelspec.py)', '265': 'to_json(kernelspec.py)', '264': 'to_dict(kernelspec.py)', '449': 'test_msg2obj(session.py)', '453': '__init__(session.py)', '470': '_signature_scheme_changed(session.py)', '463': '_key_default(session.py)', '447': 'new_id_bytes(session.py)', '462': '_key_changed(session.py)', '443': 'default_secure(session.py)', '469': '_session_default(session.py)', '446': 'new_id(session.py)', '420': 'shutdown_all(multikernelmanager.py)', '413': 'list_kernel_ids(multikernelmanager.py)', '721': 'stop(threaded.py)', '724': 'start_channels(threaded.py)', '722': '_check_kernel_info_reply(threaded.py)', '716': '__init__(threaded.py)', '387': 'shutdown_kernel(multikernelmanager.py)', '416': 'remove_kernel(multikernelmanager.py)', '713': 'IOLoopThread(threaded.py)', '714': 'ThreadedKernelClient(threaded.py)', '715': 'ThreadedZMQSocketChannel(threaded.py)', '731': 'flush(threaded.py)', '727': '_flush(threaded.py)', '386': 'shutdown_all(multikernelmanager.py)', '418': 'request_shutdown(multikernelmanager.py)', '402': 'cleanup_resources(multikernelmanager.py)', '408': 'finish_shutdown(multikernelmanager.py)', '393': '__len__(multikernelmanager.py)', '421': 'shutdown_kernel(multikernelmanager.py)', '198': '_session_default(connect.py)', '298': 'launch_kernel(launcher.py)', '739': 'create_interrupt_event(win_interrupt.py)', '741': 'SECURITY_ATTRIBUTES(win_interrupt.py)', '509': '__init__(signalkernel.py)', '278': '__init__(kernelspec.py)', '127': '__init__(channels.py)', '126': 'InvalidPortNumber(channels.py)', '107': '__init__(channels.py)', '81': '__init__(channels.py)', '726': '__init__(threaded.py)', '737': 'setup_stream(threaded.py)', '728': '_handle_recv(threaded.py)', '729': 'call_handlers(threaded.py)', '136': 'stop(channels.py)', '133': 'is_beating(channels.py)', '145': 'time_to_dead(channelsabc.py)', '131': 'call_handlers(channels.py)', '130': '_poll(channels.py)'}}, {'key': 918, 'parent': 1533, 'tfidf_word': 'EP: 918, Name: test_same_version &rarr; msg &rarr; msg &rarr; msg &rarr; msg_header &rarr; msg_id', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1529, 'parent': 1533, 'tfidf_word': 'test send complete feed identity interrupt kernel raw serialize msg ', 'tfidf_method': 'msg_id msg msg is_complete interrupt_kernel test_feed_identities test_msg test_send test_send_raw test_serialize ', 'lda_word': ' msg,raw,send,test,header,', 'lda_method': ' msg,msg_header,msg_id,test_send,test_send_raw,', 'lsi_word': ' msg,header,test,send,raw,', 'lsi_method': ' msg,msg_header,msg_id,test_feed_identities,test_msg,', 'spm_method': ' ', 'text_summary': 'scrub the front for zmq IDENTITIES.', 'files_count': 5, 'files': ['test_session.py', 'test_adapter.py', 'session.py', 'manager.py', 'client.py'], 'execution_path_count': 7, 'function_id_to_name_file': {'695': 'test_send_raw(test_session.py)', '520': 'msg(test_adapter.py)', '534': 'msg(test_adapter.py)', '476': 'msg(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '692': 'test_feed_identities(test_session.py)', '694': 'test_send(test_session.py)', '696': 'test_serialize(test_session.py)', '693': 'test_msg(test_session.py)', '328': 'interrupt_kernel(manager.py)', '166': 'is_complete(client.py)'}}, {'key': 982, 'parent': 1613, 'tfidf_word': 'EP: 982, Name: test_same_version &rarr; msg &rarr; msg &rarr; msg_header &rarr; msg_id', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 988, 'parent': 1613, 'tfidf_word': 'EP: 988, Name: test_no_adapt &rarr; msg &rarr; msg &rarr; msg_header &rarr; msg_id', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 767, 'parent': 1641, 'tfidf_word': 'EP: 767, Name: test_send &rarr; msg &rarr; msg &rarr; msg_header &rarr; msg_id', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 803, 'parent': 1641, 'tfidf_word': 'EP: 803, Name: test_feed_identities &rarr; msg &rarr; msg &rarr; msg_header &rarr; msg_id', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 984, 'parent': 1546, 'tfidf_word': 'EP: 984, Name: test_same_version &rarr; msg &rarr; msg &rarr; msg &rarr; msg_header &rarr; msg_id', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1530, 'parent': 1546, 'tfidf_word': 'test send complete feed identity interrupt kernel raw serialize msg ', 'tfidf_method': 'msg_id msg msg is_complete interrupt_kernel test_feed_identities test_msg test_send test_send_raw test_serialize ', 'lda_word': ' msg,header,test,send,identity,', 'lda_method': ' msg,msg_header,msg_id,test_msg,test_serialize,', 'lsi_word': ' msg,header,test,send,raw,', 'lsi_method': ' msg,msg_header,msg_id,interrupt_kernel,is_complete,', 'spm_method': ' ', 'text_summary': 'scrub the front for zmq IDENTITIES.', 'files_count': 5, 'files': ['test_session.py', 'test_adapter.py', 'session.py', 'manager.py', 'client.py'], 'execution_path_count': 7, 'function_id_to_name_file': {'695': 'test_send_raw(test_session.py)', '534': 'msg(test_adapter.py)', '520': 'msg(test_adapter.py)', '476': 'msg(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '692': 'test_feed_identities(test_session.py)', '694': 'test_send(test_session.py)', '696': 'test_serialize(test_session.py)', '693': 'test_msg(test_session.py)', '328': 'interrupt_kernel(manager.py)', '166': 'is_complete(client.py)'}}, {'key': 1612, 'parent': 1644, 'tfidf_word': 'header id test adapt rename type version msg ', 'tfidf_method': 'msg msg_header msg_id msg test_no_adapt test_rename_type test_same_version ', 'lda_word': ' msg,test,header,type,adapt,', 'lda_method': ' msg,msg_header,msg_id,test_no_adapt,test_same_version,', 'lsi_word': ' msg,test,header,type,rename,', 'lsi_method': ' msg,msg_header,msg_id,test_rename_type,test_same_version,', 'spm_method': ' ', 'text_summary': '', 'files_count': 2, 'files': ['test_adapter.py', 'session.py'], 'execution_path_count': 3, 'function_id_to_name_file': {'532': 'test_rename_type(test_adapter.py)', '520': 'msg(test_adapter.py)', '476': 'msg(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '533': 'test_same_version(test_adapter.py)', '528': 'test_no_adapt(test_adapter.py)'}}, {'key': 1642, 'parent': 1644, 'tfidf_word': 'header id test send feed identity raw msg ', 'tfidf_method': 'msg msg_header msg_id msg test_feed_identities test_send test_send_raw ', 'lda_word': ' msg,header,send,test,identity,', 'lda_method': ' msg,msg_header,msg_id,test_send,test_send_raw,', 'lsi_word': ' msg,test,header,send,raw,', 'lsi_method': ' msg,msg_header,msg_id,test_feed_identities,test_send,', 'spm_method': ' ', 'text_summary': 'Empty', 'files_count': 3, 'files': ['test_session.py', 'test_adapter.py', 'session.py'], 'execution_path_count': 3, 'function_id_to_name_file': {'695': 'test_send_raw(test_session.py)', '520': 'msg(test_adapter.py)', '476': 'msg(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '694': 'test_send(test_session.py)', '692': 'test_feed_identities(test_session.py)'}}, {'key': 1610, 'parent': 1629, 'tfidf_word': 'extract header test adapt rename type version msg ', 'tfidf_method': 'extract_header msg msg msg test_no_adapt test_rename_type test_same_version ', 'lda_word': ' msg,extract,test,header,version,', 'lda_method': ' msg,extract_header,test_rename_type,test_same_version,test_no_adapt,', 'lsi_word': ' msg,header,test,extract,rename,', 'lsi_method': ' msg,extract_header,test_rename_type,test_same_version,test_no_adapt,', 'spm_method': ' ', 'text_summary': '', 'files_count': 2, 'files': ['test_adapter.py', 'session.py'], 'execution_path_count': 3, 'function_id_to_name_file': {'532': 'test_rename_type(test_adapter.py)', '520': 'msg(test_adapter.py)', '534': 'msg(test_adapter.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '533': 'test_same_version(test_adapter.py)', '528': 'test_no_adapt(test_adapter.py)'}}, {'key': 1628, 'parent': 1629, 'tfidf_word': 'extract header test send feed identity raw msg ', 'tfidf_method': 'extract_header msg msg msg test_feed_identities test_send test_send_raw ', 'lda_word': ' msg,header,test,extract,send,', 'lda_method': ' msg,extract_header,test_send_raw,test_send,test_feed_identities,', 'lsi_word': ' msg,test,header,extract,send,', 'lsi_method': ' msg,extract_header,test_send_raw,test_send,test_feed_identities,', 'spm_method': ' ', 'text_summary': '', 'files_count': 3, 'files': ['test_session.py', 'test_adapter.py', 'session.py'], 'execution_path_count': 3, 'function_id_to_name_file': {'695': 'test_send_raw(test_session.py)', '520': 'msg(test_adapter.py)', '534': 'msg(test_adapter.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '694': 'test_send(test_session.py)', '692': 'test_feed_identities(test_session.py)'}}, {'key': 1608, 'parent': 1617, 'tfidf_word': 'extract header test adapt rename type version msg ', 'tfidf_method': 'extract_header msg msg msg test_no_adapt test_rename_type test_same_version ', 'lda_word': ' msg,header,extract,test,rename,', 'lda_method': ' msg,extract_header,test_same_version,test_no_adapt,test_rename_type,', 'lsi_word': ' msg,header,test,extract,rename,', 'lsi_method': ' msg,extract_header,test_rename_type,test_no_adapt,test_same_version,', 'spm_method': ' ', 'text_summary': '', 'files_count': 2, 'files': ['test_adapter.py', 'session.py'], 'execution_path_count': 3, 'function_id_to_name_file': {'545': 'test_rename_type(test_adapter.py)', '534': 'msg(test_adapter.py)', '520': 'msg(test_adapter.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '546': 'test_same_version(test_adapter.py)', '544': 'test_no_adapt(test_adapter.py)'}}, {'key': 1616, 'parent': 1617, 'tfidf_word': 'extract header test send feed identity raw msg ', 'tfidf_method': 'extract_header msg msg msg test_feed_identities test_send test_send_raw ', 'lda_word': ' msg,header,extract,test,send,', 'lda_method': ' msg,extract_header,test_send_raw,test_feed_identities,test_send,', 'lsi_word': ' msg,extract,test,header,send,', 'lsi_method': ' msg,extract_header,test_send,test_feed_identities,test_send_raw,', 'spm_method': ' ', 'text_summary': '', 'files_count': 3, 'files': ['test_session.py', 'test_adapter.py', 'session.py'], 'execution_path_count': 3, 'function_id_to_name_file': {'695': 'test_send_raw(test_session.py)', '534': 'msg(test_adapter.py)', '520': 'msg(test_adapter.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '694': 'test_send(test_session.py)', '692': 'test_feed_identities(test_session.py)'}}, {'key': 731, 'parent': 1797, 'tfidf_word': 'EP: 731, Name: test_msg &rarr; msg &rarr; msg &rarr; extract_header', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 747, 'parent': 1797, 'tfidf_word': 'EP: 747, Name: test_serialize &rarr; msg &rarr; msg &rarr; extract_header', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1264, 'parent': 2206, 'tfidf_word': 'EP: 1264, Name: test_subclass &rarr; get_kernel_spec &rarr; _get_kernel_spec_by_name', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1265, 'parent': 2206, 'tfidf_word': 'EP: 1265, Name: test_subclass &rarr; get_kernel_spec &rarr; _is_valid_kernel_name', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 715, 'parent': 2149, 'tfidf_word': 'EP: 715, Name: setUp &rarr; get_kernel_spec &rarr; NoSuchKernel', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2148, 'parent': 2149, 'tfidf_word': 'name set up valid get kernel spec ', 'tfidf_method': 'get_kernel_spec setUp _is_valid_kernel_name _get_kernel_spec_by_name ', 'lda_word': ' kernel,get,spec,set,name,', 'lda_method': ' get_kernel_spec,setup,get_kernel_spec_by_name,is_valid_kernel_name,', 'lsi_word': ' kernel,get,spec,name,set,', 'lsi_method': ' get_kernel_spec,setup,get_kernel_spec_by_name,is_valid_kernel_name,', 'spm_method': ' ', 'text_summary': '', 'files_count': 2, 'files': ['test_client.py', 'kernelspec.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'549': 'setUp(test_client.py)', '274': 'get_kernel_spec(kernelspec.py)', '269': '_get_kernel_spec_by_name(kernelspec.py)', '257': '_is_valid_kernel_name(kernelspec.py)'}}, {'key': 1226, 'parent': 2200, 'tfidf_word': 'EP: 1226, Name: test_get_kernel_spec &rarr; get_kernel_spec &rarr; NoSuchKernel', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2199, 'parent': 2200, 'tfidf_word': 'name test valid get kernel spec ', 'tfidf_method': 'get_kernel_spec test_get_kernel_spec _is_valid_kernel_name _get_kernel_spec_by_name ', 'lda_word': ' spec,get,kernel,test,name,', 'lda_method': ' get_kernel_spec,test_get_kernel_spec,is_valid_kernel_name,get_kernel_spec_by_name,', 'lsi_word': ' kernel,get,spec,name,test,', 'lsi_method': ' get_kernel_spec,test_get_kernel_spec,get_kernel_spec_by_name,is_valid_kernel_name,', 'spm_method': ' ', 'text_summary': '', 'files_count': 2, 'files': ['test_kernelspec.py', 'kernelspec.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'623': 'test_get_kernel_spec(test_kernelspec.py)', '274': 'get_kernel_spec(kernelspec.py)', '269': '_get_kernel_spec_by_name(kernelspec.py)', '257': '_is_valid_kernel_name(kernelspec.py)'}}, {'key': 1069, 'parent': 2178, 'tfidf_word': 'EP: 1069, Name: test_load_connection_file_session_with_kn &rarr; write_connection_file &rarr; ports', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1070, 'parent': 2178, 'tfidf_word': 'EP: 1070, Name: test_load_connection_file_session_with_kn &rarr; write_connection_file &rarr; close', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1045, 'parent': 2077, 'tfidf_word': 'EP: 1045, Name: test_write_connection_file &rarr; write_connection_file &rarr; close', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1046, 'parent': 2077, 'tfidf_word': 'EP: 1046, Name: test_write_connection_file &rarr; write_connection_file &rarr; localhost', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1043, 'parent': 2171, 'tfidf_word': 'EP: 1043, Name: test_write_connection_file &rarr; write_connection_file &rarr; close', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2170, 'parent': 2171, 'tfidf_word': 'test close port connection file write ', 'tfidf_method': 'write_connection_file test_write_connection_file ports close ', 'lda_word': ' write,file,connection,test,close,', 'lda_method': ' write_connection_file,test_write_connection_file,port,close,', 'lsi_word': ' connection,write,file,test,port,', 'lsi_method': ' test_write_connection_file,write_connection_file,close,port,', 'spm_method': ' ', 'text_summary': '', 'files_count': 3, 'files': ['test_connect.py', 'connect.py', 'threaded.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'570': 'test_write_connection_file(test_connect.py)', '191': 'write_connection_file(connect.py)', '211': 'ports(connect.py)', '718': 'close(threaded.py)'}}, {'key': 1054, 'parent': 2079, 'tfidf_word': 'EP: 1054, Name: test_load_connection_file_session &rarr; write_connection_file &rarr; close', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1055, 'parent': 2079, 'tfidf_word': 'EP: 1055, Name: test_load_connection_file_session &rarr; write_connection_file &rarr; localhost', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1052, 'parent': 2175, 'tfidf_word': 'EP: 1052, Name: test_load_connection_file_session &rarr; write_connection_file &rarr; close', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2174, 'parent': 2175, 'tfidf_word': 'load session test write close port connection file ', 'tfidf_method': 'write_connection_file test_load_connection_file_session ports close ', 'lda_word': ' connection,file,write,test,load,', 'lda_method': ' test_load_connection_file_session,write_connection_file,port,close,', 'lsi_word': ' connection,file,session,load,write,', 'lsi_method': ' test_load_connection_file_session,write_connection_file,close,port,', 'spm_method': ' ', 'text_summary': '', 'files_count': 3, 'files': ['test_connect.py', 'connect.py', 'threaded.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'564': 'test_load_connection_file_session(test_connect.py)', '191': 'write_connection_file(connect.py)', '211': 'ports(connect.py)', '718': 'close(threaded.py)'}}, {'key': 1086, 'parent': 1948, 'tfidf_word': 'EP: 1086, Name: test_app_load_connection_file &rarr; DummyConsoleApp &rarr; JupyterConsoleApp &rarr; Session', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1087, 'parent': 1948, 'tfidf_word': 'EP: 1087, Name: test_app_load_connection_file &rarr; DummyConsoleApp &rarr; JupyterConsoleApp &rarr; ConnectionFileMixin', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1098, 'parent': 1949, 'tfidf_word': 'EP: 1098, Name: test_find_connection_file &rarr; DummyConsoleApp &rarr; JupyterConsoleApp &rarr; Session', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1099, 'parent': 1949, 'tfidf_word': 'EP: 1099, Name: test_find_connection_file &rarr; DummyConsoleApp &rarr; JupyterConsoleApp &rarr; ConnectionFileMixin', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1048, 'parent': 1942, 'tfidf_word': 'EP: 1048, Name: test_load_connection_file_session &rarr; DummyConsoleApp &rarr; JupyterConsoleApp &rarr; Session', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1049, 'parent': 1942, 'tfidf_word': 'EP: 1049, Name: test_load_connection_file_session &rarr; DummyConsoleApp &rarr; JupyterConsoleApp &rarr; ConnectionFileMixin', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1067, 'parent': 1946, 'tfidf_word': 'EP: 1067, Name: test_load_connection_file_session_with_kn &rarr; DummyConsoleApp &rarr; JupyterConsoleApp &rarr; Session', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1068, 'parent': 1946, 'tfidf_word': 'EP: 1068, Name: test_load_connection_file_session_with_kn &rarr; DummyConsoleApp &rarr; JupyterConsoleApp &rarr; ConnectionFileMixin', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1142, 'parent': 2190, 'tfidf_word': 'EP: 1142, Name: test_tcp_cinfo &rarr; _get_tcp_km &rarr; __init__', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2189, 'parent': 2190, 'tfidf_word': 'get init km test id kernel lifecycle shutdown tcp ', 'tfidf_method': '__init__ _get_tcp_km test_shutdown_all test_tcp_lifecycle_with_kernel_id ', 'lda_word': ' tcp,km,test,get,init,', 'lda_method': ' get_tcp_km,init,test_shutdown_all,test_tcp_lifecycle_with_kernel_id,', 'lsi_word': ' tcp,test,init,get,km,', 'lsi_method': ' get_tcp_km,init,test_tcp_lifecycle_with_kernel_id,test_shutdown_all,', 'spm_method': ' ', 'text_summary': '', 'files_count': 2, 'files': ['test_multikernelmanager.py', 'multikernelmanager.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'668': 'test_tcp_lifecycle_with_kernel_id(test_multikernelmanager.py)', '655': '_get_tcp_km(test_multikernelmanager.py)', '392': '__init__(multikernelmanager.py)', '661': 'test_shutdown_all(test_multikernelmanager.py)'}}, {'key': 1167, 'parent': 1758, 'tfidf_word': 'EP: 1167, Name: test_start_parallel_thread_kernels &rarr; tcp_lifecycle_with_loop &rarr; test_tcp_lifecycle &rarr; _get_tcp_km &rarr; __init__', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1175, 'parent': 1758, 'tfidf_word': 'EP: 1175, Name: test_start_parallel_process_kernels &rarr; tcp_lifecycle_with_loop &rarr; test_tcp_lifecycle &rarr; _get_tcp_km &rarr; __init__', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1163, 'parent': 1952, 'tfidf_word': 'EP: 1163, Name: test_start_parallel_thread_kernels &rarr; test_tcp_lifecycle &rarr; _get_tcp_km &rarr; __init__', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1171, 'parent': 1952, 'tfidf_word': 'EP: 1171, Name: test_start_parallel_process_kernels &rarr; test_tcp_lifecycle &rarr; _get_tcp_km &rarr; __init__', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2057, 'parent': 2100, 'tfidf_word': 'close kernel port random select tunnel ', 'tfidf_method': 'tunnel_to_kernel select_random_ports close close ', 'lda_word': ' kernel,port,select,close,random,', 'lda_method': ' close,select_random_ports,tunnel_to_kernel,', 'lsi_word': ' select,close,tunnel,port,random,', 'lsi_method': ' select_random_ports,tunnel_to_kernel,close,', 'spm_method': ' ', 'text_summary': '', 'files_count': 3, 'files': ['connect.py', 'tunnel.py', 'threaded.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'190': 'tunnel_to_kernel(connect.py)', '503': 'select_random_ports(tunnel.py)', '718': 'close(threaded.py)', '730': 'close(threaded.py)'}}, {'key': 2099, 'parent': 2100, 'tfidf_word': 'kernel random select tunnel close port ', 'tfidf_method': 'tunnel_to_kernel select_random_ports close close ports close ', 'lda_word': ' port,kernel,tunnel,random,select,', 'lda_method': ' select_random_ports,tunnel_to_kernel,close,port,', 'lsi_word': ' port,tunnel,kernel,random,select,', 'lsi_method': ' select_random_ports,tunnel_to_kernel,close,port,', 'spm_method': ' ', 'text_summary': '', 'files_count': 3, 'files': ['connect.py', 'tunnel.py', 'channels.py'], 'execution_path_count': 4, 'function_id_to_name_file': {'190': 'tunnel_to_kernel(connect.py)', '503': 'select_random_ports(tunnel.py)', '132': 'close(channels.py)', '109': 'close(channels.py)', '83': 'close(channels.py)', '211': 'ports(connect.py)'}}, {'key': 2073, 'parent': 2168, 'tfidf_word': 'close select test port random ', 'tfidf_method': 'select_random_ports test_random_ports close close ', 'lda_word': ' random,port,select,test,close,', 'lda_method': ' close,test_random_ports,select_random_ports,', 'lsi_word': ' random,port,close,select,test,', 'lsi_method': ' select_random_ports,test_random_ports,close,', 'spm_method': ' ', 'text_summary': '', 'files_count': 3, 'files': ['test_ssh.py', 'tunnel.py', 'threaded.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'701': 'test_random_ports(test_ssh.py)', '503': 'select_random_ports(tunnel.py)', '718': 'close(threaded.py)', '730': 'close(threaded.py)'}}, {'key': 2167, 'parent': 2168, 'tfidf_word': 'select test close random port ', 'tfidf_method': 'select_random_ports test_random_ports close close ports close ', 'lda_word': ' port,random,test,select,close,', 'lda_method': ' test_random_ports,select_random_ports,port,close,', 'lsi_word': ' port,random,select,test,close,', 'lsi_method': ' select_random_ports,test_random_ports,close,port,', 'spm_method': ' ', 'text_summary': '', 'files_count': 4, 'files': ['test_ssh.py', 'tunnel.py', 'channels.py', 'connect.py'], 'execution_path_count': 4, 'function_id_to_name_file': {'701': 'test_random_ports(test_ssh.py)', '503': 'select_random_ports(tunnel.py)', '132': 'close(channels.py)', '109': 'close(channels.py)', '83': 'close(channels.py)', '211': 'ports(connect.py)'}}, {'key': 88, 'parent': 2317, 'tfidf_word': 'EP: 88, Name: shutdown_all &rarr; finish_shutdown &rarr; get_kernel &rarr; _check_kernel_id', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2106, 'parent': 2317, 'tfidf_word': 'check get id shutdown interrupt restart signal kernel ', 'tfidf_method': '_check_kernel_id get_kernel interrupt_kernel restart_kernel shutdown_kernel signal_kernel shutdown_all shutdown_kernel ', 'lda_word': ' kernel,get,check,shutdown,signal,', 'lda_method': ' shutdown_kernel,get_kernel,check_kernel_id,interrupt_kernel,signal_kernel,', 'lsi_word': ' kernel,get,check,shutdown,restart,', 'lsi_method': ' check_kernel_id,get_kernel,shutdown_kernel,signal_kernel,restart_kernel,', 'spm_method': ' ', 'text_summary': 'Attempts to stop the kernel process cleanly. Shutdown all kernels. Sends a signal to the process group of the kernel (this. check that a kernel id is valid. Interrupts the kernel by sending it a signal.', 'files_count': 1, 'files': ['multikernelmanager.py'], 'execution_path_count': 6, 'function_id_to_name_file': {'388': 'signal_kernel(multikernelmanager.py)', '410': 'get_kernel(multikernelmanager.py)', '394': '_check_kernel_id(multikernelmanager.py)', '385': 'restart_kernel(multikernelmanager.py)', '384': 'interrupt_kernel(multikernelmanager.py)', '387': 'shutdown_kernel(multikernelmanager.py)', '421': 'shutdown_kernel(multikernelmanager.py)', '420': 'shutdown_all(multikernelmanager.py)'}}, {'key': 2134, 'parent': 2759, 'tfidf_word': 'ready wait alive ', 'tfidf_method': 'is_alive wait_for_ready is_alive is_alive is_alive is_alive is_alive is_alive ', 'lda_word': ' alive,ready,wait,', 'lda_method': ' is_alive,wait_for_ready,', 'lsi_word': ' alive,ready,wait,', 'lsi_method': ' is_alive,wait_for_ready,', 'spm_method': ' ', 'text_summary': '', 'files_count': 6, 'files': ['client.py', 'multikernelmanager.py', 'managerabc.py', 'channelsabc.py', 'threaded.py', 'channels.py'], 'execution_path_count': 6, 'function_id_to_name_file': {'104': 'wait_for_ready(client.py)', '103': 'is_alive(client.py)', '412': 'is_alive(multikernelmanager.py)', '373': 'is_alive(managerabc.py)', '140': 'is_alive(channelsabc.py)', '732': 'is_alive(threaded.py)', '86': 'is_alive(channels.py)', '112': 'is_alive(channels.py)'}}, {'key': 2758, 'parent': 2759, 'tfidf_word': 'manager loop flush permission native io cleanup code restarter tunnel ', 'tfidf_method': 'test_find_connection_file_abspath test_find_connection_file_local test_find_connection_file_relative test_load_connection_file_session test_load_connection_file_session_with_kn finish_shutdown test_mixin_record_random_ports test_secure_write check_user_only_permissions test_complete_request ', 'lda_word': ' test,execute,file,connection,find,', 'lda_method': ' start,adapt,stop,run_signaltest_lifecycle,setup,', 'lsi_word': ' kernel,test,lifecycle,start,manager,', 'lsi_method': ' init,check_packers,utcnow,get_ipc_km,new_auth,', 'spm_method': ' ', 'text_summary': "Subclasses may override  Prepares a kernel for startup in a separate process. Prepares a kernel for startup in a separate process. return ip for localhost (almost always 127.0.0.1)   Ensure that a sequence of kernel startups doesn't break anything. This method is called in the ioloop thread when a message arrives. Pass a message to the ZMQ socket to send. Return the connection info as a dict. Subclasses may override Start the polling of the kernel. Ensure that a sequence of kernel startups doesn't break anything. find a connection file, and return its absolute path. return ip for localhost (almost always 127.0.0.1)      find a connection file, and return its absolute path. tunnel connections to a kernel via ssh. test load_connection_file() after. handle kernel info reply. Get the hb channel object for this kernel. Send a raw message via ident path. Returns the id to associate with the kernel for this request. Make a blocking client connected to my kernel. Get a message from the stdin channel. Immediately processes all pending messages on this channel. Return the number of running kernels. Unserialize a msg_list to a nested message dict. Interrupts the kernel by sending it a signal. Get a message from the shell channel. Create an ssh tunnel using command-line ssh that connects port lport. This is run in the ioloop thread when the kernel info reply is received. default function for packing datetime objects in JSON. Start the polling of the kernel. Send a shutdown request via control channel. Get a message from the iopub channel. Sends an interrupt event using the specified handle. test that messages receive unique ids.", 'files_count': 34, 'files': ['client.py', 'multikernelmanager.py', 'managerabc.py', 'channelsabc.py', 'threaded.py', 'channels.py', 'test_multikernelmanager.py', 'test_session.py', 'session.py', 'forward.py', 'manager.py', 'test_kernelspec.py', 'kernelspec.py', 'test_kernelmanager.py', 'consoleapp.py', 'jsonutil.py', 'connect.py', 'test_manager.py', 'utils.py', 'restarter.py', 'signalkernel.py', 'tunnel.py', 'test_connect.py', 'kernelspecapp.py', 'kernelapp.py', 'test_adapter.py', 'test_jsonutil.py', 'localinterfaces.py', 'adapter.py', 'test_kernelapp.py', 'test_client.py', 'win_interrupt.py', 'runapp.py', 'launcher.py'], 'execution_path_count': 351, 'function_id_to_name_file': {'123': 'wait_for_ready(client.py)', '165': 'is_alive(client.py)', '412': 'is_alive(multikernelmanager.py)', '373': 'is_alive(managerabc.py)', '140': 'is_alive(channelsabc.py)', '732': 'is_alive(threaded.py)', '86': 'is_alive(channels.py)', '112': 'is_alive(channels.py)', '648': 'test_start_parallel_thread_kernels(test_multikernelmanager.py)', '643': 'tcp_lifecycle_with_loop(test_multikernelmanager.py)', '642': 'raw_tcp_lifecycle(test_multikernelmanager.py)', '641': '_run_lifecycle(test_multikernelmanager.py)', '647': 'test_start_parallel_process_kernels(test_multikernelmanager.py)', '652': 'test_tcp_lifecycle(test_multikernelmanager.py)', '653': 'test_tcp_lifecycle_with_kernel_id(test_multikernelmanager.py)', '694': 'test_send(test_session.py)', '479': 'recv(session.py)', '474': 'deserialize(session.py)', '483': 'sign(session.py)', '492': 'handle(forward.py)', '695': 'test_send_raw(test_session.py)', '484': 'unserialize(session.py)', '696': 'test_serialize(test_session.py)', '480': 'send(session.py)', '440': 'Message(session.py)', '698': 'test_tracking(test_session.py)', '328': 'interrupt_kernel(manager.py)', '482': 'serialize(session.py)', '135': 'run(channels.py)', '128': '_create_socket(channels.py)', '718': 'close(threaded.py)', '730': 'close(threaded.py)', '132': 'close(channels.py)', '83': 'close(channels.py)', '109': 'close(channels.py)', '84': 'get_msg(channels.py)', '82': '_recv(channels.py)', '104': 'wait_for_ready(client.py)', '101': 'get_stdin_msg(client.py)', '85': 'get_msgs(channels.py)', '99': 'get_iopub_msg(client.py)', '110': 'get_msg(channels.py)', '108': '_recv(channels.py)', '111': 'get_msgs(channels.py)', '620': 'test_cant_install_kernel_spec(test_kernelspec.py)', '275': 'install_kernel_spec(kernelspec.py)', '268': '_get_destination_dir(kernelspec.py)', '257': '_is_valid_kernel_name(kernelspec.py)', '625': 'test_install_kernel_spec_prefix(test_kernelspec.py)', '261': 'install_kernel_spec(kernelspec.py)', '624': 'test_install_kernel_spec(test_kernelspec.py)', '614': 'test_start_sequence_process_kernels(test_kernelmanager.py)', '610': '_run_signaltest_lifecycle(test_kernelmanager.py)', '615': 'execute(test_kernelmanager.py)', '609': '_prepare_kernel(test_kernelmanager.py)', '611': 'test_start_parallel_process_kernels(test_kernelmanager.py)', '613': 'test_start_sequence_kernels(test_kernelmanager.py)', '612': 'test_start_parallel_thread_kernels(test_kernelmanager.py)', '398': '_kernel_manager_class_changed(multikernelmanager.py)', '396': '_create_kernel_manager_factory(multikernelmanager.py)', '424': 'create_kernel_manager(multikernelmanager.py)', '397': '_find_available_port(multikernelmanager.py)', '395': '_context_default(multikernelmanager.py)', '399': '_kernel_manager_factory_default(multikernelmanager.py)', '215': '__init__(consoleapp.py)', '485': '__init__(session.py)', '441': 'Session(session.py)', '457': '__init__(session.py)', '465': '_new_auth(session.py)', '459': '_check_packers(session.py)', '450': 'utcnow(session.py)', '244': 'squash_dates(jsonutil.py)', '90': 'AsyncKernelClient(client.py)', '147': 'KernelClient(client.py)', '139': 'HBChannelABC(channelsabc.py)', '138': 'ChannelABC(channelsabc.py)', '116': 'BlockingKernelClient(client.py)', '188': 'ConnectionFileMixin(connect.py)', '322': 'start_new_async_kernel(manager.py)', '319': 'AsyncKernelManager(manager.py)', '320': 'KernelManager(manager.py)', '224': 'AsyncIOLoopKernelManager(manager.py)', '225': 'IOLoopKernelManager(manager.py)', '635': 'test_connection_file_real_path(test_manager.py)', '663': 'test_start_parallel_thread_kernels(test_multikernelmanager.py)', '658': 'tcp_lifecycle_with_loop(test_multikernelmanager.py)', '667': 'test_tcp_lifecycle(test_multikernelmanager.py)', '657': '_run_lifecycle(test_multikernelmanager.py)', '662': 'test_start_parallel_process_kernels(test_multikernelmanager.py)', '704': 'execute(utils.py)', '155': 'execute(client.py)', '148': 'validate_string_dict(client.py)', '689': 'test_datetimes_msgpack(test_session.py)', '679': '_datetime_test(test_session.py)', '688': 'test_datetimes(test_session.py)', '690': 'test_datetimes_pickle(test_session.py)', '734': 'send(threaded.py)', '738': 'thread_send(threaded.py)', '664': 'test_start_sequence_ipc_kernels(test_multikernelmanager.py)', '654': '_get_ipc_km(test_multikernelmanager.py)', '392': '__init__(multikernelmanager.py)', '660': 'test_ipc_lifecycle(test_multikernelmanager.py)', '659': 'test_ipc_cinfo(test_multikernelmanager.py)', '423': 'start_kernel(multikernelmanager.py)', '415': 'pre_start_kernel(multikernelmanager.py)', '380': 'DuplicateKernelError(multikernelmanager.py)', '414': 'new_kernel_id(multikernelmanager.py)', '389': 'start_kernel(multikernelmanager.py)', '238': 'start(restarter.py)', '430': 'poll(restarter.py)', '433': 'stop(restarter.py)', '428': '_fire_callbacks(restarter.py)', '510': 'do_execute(signalkernel.py)', '190': 'tunnel_to_kernel(connect.py)', '501': 'openssh_tunnel(tunnel.py)', '494': 'SSHException(tunnel.py)', '497': '_stop_tunnel(tunnel.py)', '475': 'feed_identities(session.py)', '330': 'restart_kernel(manager.py)', '202': 'cleanup_random_ports(connect.py)', '200': 'cleanup_connection_file(connect.py)', '567': 'test_mixin_cleanup_random_ports(test_connect.py)', '106': 'ZMQSocketChannel(channels.py)', '226': 'as_zmqstream(manager.py)', '233': 'wrapped(manager.py)', '568': 'test_mixin_record_random_ports(test_connect.py)', '557': 'DummyConfigurable(test_connect.py)', '235': 'IOLoopKernelRestarter(restarter.py)', '426': 'KernelRestarter(restarter.py)', '234': 'AsyncIOLoopKernelRestarter(restarter.py)', '291': 'start(kernelspecapp.py)', '251': 'start(kernelapp.py)', '249': 'setup_signals(kernelapp.py)', '252': 'shutdown_handler(kernelapp.py)', '250': 'shutdown(kernelapp.py)', '248': 'log_connection_info(kernelapp.py)', '199': 'blocking_client(connect.py)', '208': 'get_connection_info(connect.py)', '725': 'stop_channels(threaded.py)', '684': 'test_bad_unpack(test_session.py)', '676': '_bad_unpacker(test_session.py)', '536': 'test_complete_request(test_adapter.py)', '517': 'adapt(test_adapter.py)', '562': 'test_find_connection_file_local(test_connect.py)', '189': 'find_connection_file(connect.py)', '493': 'SubHander(forward.py)', '490': 'Handler(forward.py)', '253': 'KernelSpec(kernelspec.py)', '114': 'send(channels.py)', '88': 'send(channels.py)', '575': 'test_date_default(test_jsonutil.py)', '241': 'date_default(jsonutil.py)', '240': '_ensure_tzinfo(jsonutil.py)', '597': 'test_subclasses(test_kernelmanager.py)', '703': 'AsyncKernelManagerWithCleanup(utils.py)', '595': 'test_signal_kernel_subprocesses(test_kernelmanager.py)', '598': 'execute(test_kernelmanager.py)', '702': 'AsyncKernelManagerSubclass(utils.py)', '591': 'transport(test_kernelmanager.py)', '606': 'test_templated_kspec_env(test_kernelmanager.py)', '599': '_env_test_body(test_kernelmanager.py)', '607': 'execute(test_kernelmanager.py)', '604': 'test_signal_kernel_subprocesses(test_kernelmanager.py)', '608': 'execute(test_kernelmanager.py)', '586': 'env(test_kernelmanager.py)', '712': 'stop(utils.py)', '711': 'start(utils.py)', '705': 'test_env(utils.py)', '630': 'test_validate_kernel_name(test_kernelspec.py)', '506': 'SignalTestApp(signalkernel.py)', '507': 'SignalTestKernel(signalkernel.py)', '627': 'test_remove_kernel_spec(test_kernelspec.py)', '617': '_install_sample_kernel(test_kernelspec.py)', '626': 'test_kernel_spec_priority(test_kernelspec.py)', '651': 'test_tcp_cinfo(test_multikernelmanager.py)', '640': '_run_cinfo(test_multikernelmanager.py)', '621': 'test_find_all_specs(test_kernelspec.py)', '622': 'test_find_kernel_specs(test_kernelspec.py)', '623': 'test_get_kernel_spec(test_kernelspec.py)', '619': 'tearDown(test_kernelspec.py)', '618': 'setUp(test_kernelspec.py)', '649': 'test_start_sequence_ipc_kernels(test_multikernelmanager.py)', '650': 'test_start_sequence_tcp_kernels(test_multikernelmanager.py)', '644': 'test_ipc_cinfo(test_multikernelmanager.py)', '315': 'localhost(localinterfaces.py)', '645': 'test_ipc_lifecycle(test_multikernelmanager.py)', '665': 'test_start_sequence_tcp_kernels(test_multikernelmanager.py)', '656': '_run_cinfo(test_multikernelmanager.py)', '666': 'test_tcp_cinfo(test_multikernelmanager.py)', '668': 'test_tcp_lifecycle_with_kernel_id(test_multikernelmanager.py)', '569': 'test_secure_write(test_connect.py)', '573': 'check_user_only_permissions(test_connect.py)', '574': 'fetch_win32_permissions(test_connect.py)', '563': 'test_find_connection_file_relative(test_connect.py)', '561': 'test_find_connection_file_abspath(test_connect.py)', '560': 'test_find_connection_file(test_connect.py)', '565': 'test_load_connection_file_session_with_kn(test_connect.py)', '539': 'test_input_request(test_adapter.py)', '564': 'test_load_connection_file_session(test_connect.py)', '537': 'test_display_data(test_adapter.py)', '540': 'test_inspect_reply(test_adapter.py)', '543': 'test_kernel_info_reply(test_adapter.py)', '542': 'test_inspect_request_token(test_adapter.py)', '535': 'test_complete_reply(test_adapter.py)', '541': 'test_inspect_request(test_adapter.py)', '538': 'test_execute_request(test_adapter.py)', '545': 'test_rename_type(test_adapter.py)', '544': 'test_no_adapt(test_adapter.py)', '546': 'test_same_version(test_adapter.py)', '514': 'V5toV4TestCase(test_adapter.py)', '512': 'AdapterTest(test_adapter.py)', '526': 'test_input_request(test_adapter.py)', '523': 'test_display_data(test_adapter.py)', '527': 'test_kernel_info_reply(test_adapter.py)', '530': 'test_object_info_reply_not_found(test_adapter.py)', '529': 'test_object_info_reply(test_adapter.py)', '531': 'test_object_info_request(test_adapter.py)', '521': 'test_complete_reply(test_adapter.py)', '522': 'test_complete_request(test_adapter.py)', '524': 'test_execute_reply(test_adapter.py)', '532': 'test_rename_type(test_adapter.py)', '525': 'test_execute_request(test_adapter.py)', '528': 'test_no_adapt(test_adapter.py)', '533': 'test_same_version(test_adapter.py)', '513': 'V4toV5TestCase(test_adapter.py)', '519': 'setUp(test_adapter.py)', '516': 'test_default_version(test_adapter.py)', '515': 'test_code_to_line_no_code(test_adapter.py)', '51': 'code_to_line(adapter.py)', '158': 'get_shell_msg(client.py)', '157': 'get_iopub_msg(client.py)', '710': '__exit__(utils.py)', '709': '__enter__(utils.py)', '580': 'test_kernelapp_lifecycle(test_kernelapp.py)', '579': '_launch(test_kernelapp.py)', '686': 'test_clone(test_session.py)', '473': 'clone(session.py)', '481': 'send_raw(session.py)', '683': 'test_bad_roundtrip(test_session.py)', '685': 'test_bad_unpacker(test_session.py)', '682': 'test_bad_packer(test_session.py)', '681': 'test_bad_pack(test_session.py)', '675': '_bad_packer(test_session.py)', '687': 'test_cull_digest_history(test_session.py)', '700': 'test_zero_digest_history(test_session.py)', '697': 'test_session_id(test_session.py)', '699': 'test_unique_msg_ids(test_session.py)', '445': 'msg_header(session.py)', '680': 'test_args(test_session.py)', '478': 'msg_id(session.py)', '674': 'TestSession(test_session.py)', '673': 'SessionTestCase(test_session.py)', '678': 'setUp(test_session.py)', '556': 'test_shutdown(test_client.py)', '548': '_check_reply(test_client.py)', '550': 'test_comm_info(test_client.py)', '555': 'test_kernel_info(test_client.py)', '551': 'test_complete(test_client.py)', '554': 'test_inspect(test_client.py)', '553': 'test_history(test_client.py)', '549': 'setUp(test_client.py)', '255': 'NoSuchKernel(kernelspec.py)', '117': 'reqrep(client.py)', '124': 'wrapped(client.py)', '150': '_handle_kernel_info_reply(client.py)', '125': 'HBChannel(channels.py)', '102': 'hb_channel(client.py)', '196': '_make_url(connect.py)', '91': 'reqrep(client.py)', '105': 'wrapped(client.py)', '80': 'ZMQSocketChannel(channels.py)', '154': 'control_channel(client.py)', '723': 'ioloop(threaded.py)', '160': 'hb_channel(client.py)', '171': 'stdin_channel(client.py)', '164': 'iopub_channel(client.py)', '168': 'shell_channel(client.py)', '740': 'send_interrupt(win_interrupt.py)', '334': '__del__(manager.py)', '293': 'start(kernelspecapp.py)', '294': 'path_key(kernelspecapp.py)', '735': 'start(threaded.py)', '720': 'start(threaded.py)', '141': 'start(channelsabc.py)', '432': 'start(restarter.py)', '288': 'start(kernelspecapp.py)', '89': 'start(channels.py)', '115': 'start(channels.py)', '290': 'start(kernelspecapp.py)', '438': 'parse_command_line(runapp.py)', '218': 'build_kernel_argv(consoleapp.py)', '308': '_only_once(localinterfaces.py)', '317': 'wrapped(localinterfaces.py)', '47': 'V4toV5(adapter.py)', '46': 'Adapter(adapter.py)', '77': 'object_info_request(adapter.py)', '52': 'extract_oname_v4(adapter.py)', '70': 'complete_request(adapter.py)', '75': 'kernel_info_reply(adapter.py)', '49': '_version_str_to_list(adapter.py)', '48': 'V5toV4(adapter.py)', '53': '__call__(adapter.py)', '54': 'handle_reply_status_error(adapter.py)', '57': 'update_msg_type(adapter.py)', '56': 'update_metadata(adapter.py)', '55': 'update_header(adapter.py)', '247': 'initialize(kernelapp.py)', '246': '_record_started(kernelapp.py)', '585': 'config(test_kernelmanager.py)', '262': 'install_native_kernel_spec(kernelspec.py)', '276': 'install_native_kernel_spec(kernelspec.py)', '265': 'to_json(kernelspec.py)', '264': 'to_dict(kernelspec.py)', '449': 'test_msg2obj(session.py)', '453': '__init__(session.py)', '470': '_signature_scheme_changed(session.py)', '463': '_key_default(session.py)', '447': 'new_id_bytes(session.py)', '462': '_key_changed(session.py)', '443': 'default_secure(session.py)', '469': '_session_default(session.py)', '446': 'new_id(session.py)', '420': 'shutdown_all(multikernelmanager.py)', '413': 'list_kernel_ids(multikernelmanager.py)', '721': 'stop(threaded.py)', '724': 'start_channels(threaded.py)', '722': '_check_kernel_info_reply(threaded.py)', '716': '__init__(threaded.py)', '387': 'shutdown_kernel(multikernelmanager.py)', '416': 'remove_kernel(multikernelmanager.py)', '713': 'IOLoopThread(threaded.py)', '714': 'ThreadedKernelClient(threaded.py)', '715': 'ThreadedZMQSocketChannel(threaded.py)', '731': 'flush(threaded.py)', '727': '_flush(threaded.py)', '386': 'shutdown_all(multikernelmanager.py)', '418': 'request_shutdown(multikernelmanager.py)', '402': 'cleanup_resources(multikernelmanager.py)', '408': 'finish_shutdown(multikernelmanager.py)', '393': '__len__(multikernelmanager.py)', '421': 'shutdown_kernel(multikernelmanager.py)', '198': '_session_default(connect.py)', '298': 'launch_kernel(launcher.py)', '739': 'create_interrupt_event(win_interrupt.py)', '741': 'SECURITY_ATTRIBUTES(win_interrupt.py)', '509': '__init__(signalkernel.py)', '278': '__init__(kernelspec.py)', '127': '__init__(channels.py)', '126': 'InvalidPortNumber(channels.py)', '107': '__init__(channels.py)', '81': '__init__(channels.py)', '726': '__init__(threaded.py)', '737': 'setup_stream(threaded.py)', '728': '_handle_recv(threaded.py)', '729': 'call_handlers(threaded.py)', '136': 'stop(channels.py)', '133': 'is_beating(channels.py)', '145': 'time_to_dead(channelsabc.py)', '131': 'call_handlers(channels.py)', '130': '_poll(channels.py)'}}, {'key': 867, 'parent': 1529, 'tfidf_word': 'EP: 867, Name: test_send_raw &rarr; msg &rarr; msg &rarr; msg &rarr; msg_header &rarr; msg_id', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1527, 'parent': 1529, 'tfidf_word': 'id test complete feed identity interrupt kernel send serialize msg ', 'tfidf_method': 'msg_header msg_id msg msg is_complete interrupt_kernel test_feed_identities test_msg test_send test_serialize ', 'lda_word': ' msg,header,test,send,interrupt,', 'lda_method': ' msg,msg_header,msg_id,test_serialize,test_feed_identities,', 'lsi_word': ' msg,header,test,feed,identity,', 'lsi_method': ' msg,msg_id,msg_header,is_complete,interrupt_kernel,', 'spm_method': ' ', 'text_summary': 'message format.', 'files_count': 5, 'files': ['test_session.py', 'test_adapter.py', 'session.py', 'manager.py', 'client.py'], 'execution_path_count': 6, 'function_id_to_name_file': {'692': 'test_feed_identities(test_session.py)', '520': 'msg(test_adapter.py)', '534': 'msg(test_adapter.py)', '476': 'msg(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '694': 'test_send(test_session.py)', '696': 'test_serialize(test_session.py)', '693': 'test_msg(test_session.py)', '328': 'interrupt_kernel(manager.py)', '166': 'is_complete(client.py)'}}, {'key': 871, 'parent': 1530, 'tfidf_word': 'EP: 871, Name: test_send_raw &rarr; msg &rarr; msg &rarr; msg &rarr; msg_header &rarr; msg_id', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1528, 'parent': 1530, 'tfidf_word': 'id test complete feed identity interrupt kernel send serialize msg ', 'tfidf_method': 'msg_header msg_id msg msg is_complete interrupt_kernel test_feed_identities test_msg test_send test_serialize ', 'lda_word': ' msg,header,test,complete,feed,', 'lda_method': ' msg,msg_id,msg_header,test_serialize,test_msg,', 'lsi_word': ' msg,header,test,identity,feed,', 'lsi_method': ' msg,msg_header,msg_id,test_msg,test_serialize,', 'spm_method': ' ', 'text_summary': 'Interrupts the kernel by sending it a signal.', 'files_count': 5, 'files': ['test_session.py', 'test_adapter.py', 'session.py', 'manager.py', 'client.py'], 'execution_path_count': 6, 'function_id_to_name_file': {'692': 'test_feed_identities(test_session.py)', '534': 'msg(test_adapter.py)', '520': 'msg(test_adapter.py)', '476': 'msg(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '694': 'test_send(test_session.py)', '696': 'test_serialize(test_session.py)', '693': 'test_msg(test_session.py)', '328': 'interrupt_kernel(manager.py)', '166': 'is_complete(client.py)'}}, {'key': 926, 'parent': 1612, 'tfidf_word': 'EP: 926, Name: test_rename_type &rarr; msg &rarr; msg &rarr; msg_header &rarr; msg_id', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1611, 'parent': 1612, 'tfidf_word': 'header id test adapt version msg ', 'tfidf_method': 'msg msg_header msg_id msg test_no_adapt test_same_version ', 'lda_word': ' msg,test,header,adapt,version,', 'lda_method': ' msg,msg_header,msg_id,test_same_version,test_no_adapt,', 'lsi_word': ' msg,header,test,adapt,version,', 'lsi_method': ' msg,msg_id,msg_header,test_same_version,test_no_adapt,', 'spm_method': ' ', 'text_summary': '', 'files_count': 2, 'files': ['test_adapter.py', 'session.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'533': 'test_same_version(test_adapter.py)', '520': 'msg(test_adapter.py)', '476': 'msg(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '528': 'test_no_adapt(test_adapter.py)'}}, {'key': 865, 'parent': 1642, 'tfidf_word': 'EP: 865, Name: test_send_raw &rarr; msg &rarr; msg &rarr; msg_header &rarr; msg_id', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1640, 'parent': 1642, 'tfidf_word': 'header id test feed identity send msg ', 'tfidf_method': 'msg msg_header msg_id msg test_feed_identities test_send ', 'lda_word': ' msg,header,test,send,feed,', 'lda_method': ' msg,msg_id,msg_header,test_feed_identities,test_send,', 'lsi_word': ' msg,test,header,identity,feed,', 'lsi_method': ' msg,msg_header,msg_id,test_send,test_feed_identities,', 'spm_method': ' ', 'text_summary': 'Empty', 'files_count': 3, 'files': ['test_session.py', 'test_adapter.py', 'session.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'694': 'test_send(test_session.py)', '520': 'msg(test_adapter.py)', '476': 'msg(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '692': 'test_feed_identities(test_session.py)'}}, {'key': 927, 'parent': 1610, 'tfidf_word': 'EP: 927, Name: test_rename_type &rarr; msg &rarr; msg &rarr; msg &rarr; extract_header', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1609, 'parent': 1610, 'tfidf_word': 'extract header test adapt version msg ', 'tfidf_method': 'extract_header msg msg msg test_no_adapt test_same_version ', 'lda_word': ' msg,test,header,extract,adapt,', 'lda_method': ' msg,extract_header,test_same_version,test_no_adapt,', 'lsi_word': ' msg,header,test,extract,adapt,', 'lsi_method': ' msg,extract_header,test_no_adapt,test_same_version,', 'spm_method': ' ', 'text_summary': '', 'files_count': 2, 'files': ['test_adapter.py', 'session.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'533': 'test_same_version(test_adapter.py)', '520': 'msg(test_adapter.py)', '534': 'msg(test_adapter.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '528': 'test_no_adapt(test_adapter.py)'}}, {'key': 866, 'parent': 1628, 'tfidf_word': 'EP: 866, Name: test_send_raw &rarr; msg &rarr; msg &rarr; msg &rarr; extract_header', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1627, 'parent': 1628, 'tfidf_word': 'extract header test feed identity send msg ', 'tfidf_method': 'extract_header msg msg msg test_feed_identities test_send ', 'lda_word': ' msg,header,test,extract,send,', 'lda_method': ' msg,extract_header,test_send,test_feed_identities,', 'lsi_word': ' msg,test,header,extract,identity,', 'lsi_method': ' msg,extract_header,test_send,test_feed_identities,', 'spm_method': ' ', 'text_summary': '', 'files_count': 3, 'files': ['test_session.py', 'test_adapter.py', 'session.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'694': 'test_send(test_session.py)', '520': 'msg(test_adapter.py)', '534': 'msg(test_adapter.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '692': 'test_feed_identities(test_session.py)'}}, {'key': 993, 'parent': 1608, 'tfidf_word': 'EP: 993, Name: test_rename_type &rarr; msg &rarr; msg &rarr; msg &rarr; extract_header', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1607, 'parent': 1608, 'tfidf_word': 'extract header test adapt version msg ', 'tfidf_method': 'extract_header msg msg msg test_no_adapt test_same_version ', 'lda_word': ' msg,test,extract,header,adapt,', 'lda_method': ' msg,extract_header,test_same_version,test_no_adapt,', 'lsi_word': ' msg,extract,test,header,version,', 'lsi_method': ' msg,extract_header,test_same_version,test_no_adapt,', 'spm_method': ' ', 'text_summary': '', 'files_count': 2, 'files': ['test_adapter.py', 'session.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'546': 'test_same_version(test_adapter.py)', '534': 'msg(test_adapter.py)', '520': 'msg(test_adapter.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '544': 'test_no_adapt(test_adapter.py)'}}, {'key': 870, 'parent': 1616, 'tfidf_word': 'EP: 870, Name: test_send_raw &rarr; msg &rarr; msg &rarr; msg &rarr; extract_header', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1615, 'parent': 1616, 'tfidf_word': 'extract header test feed identity send msg ', 'tfidf_method': 'extract_header msg msg msg test_feed_identities test_send ', 'lda_word': ' msg,header,test,extract,identity,', 'lda_method': ' msg,extract_header,test_send,test_feed_identities,', 'lsi_word': ' msg,header,test,extract,identity,', 'lsi_method': ' msg,extract_header,test_feed_identities,test_send,', 'spm_method': ' ', 'text_summary': '', 'files_count': 3, 'files': ['test_session.py', 'test_adapter.py', 'session.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'694': 'test_send(test_session.py)', '534': 'msg(test_adapter.py)', '520': 'msg(test_adapter.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '692': 'test_feed_identities(test_session.py)'}}, {'key': 713, 'parent': 2148, 'tfidf_word': 'EP: 713, Name: setUp &rarr; get_kernel_spec &rarr; _get_kernel_spec_by_name', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 714, 'parent': 2148, 'tfidf_word': 'EP: 714, Name: setUp &rarr; get_kernel_spec &rarr; _is_valid_kernel_name', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1224, 'parent': 2199, 'tfidf_word': 'EP: 1224, Name: test_get_kernel_spec &rarr; get_kernel_spec &rarr; _get_kernel_spec_by_name', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1225, 'parent': 2199, 'tfidf_word': 'EP: 1225, Name: test_get_kernel_spec &rarr; get_kernel_spec &rarr; _is_valid_kernel_name', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1041, 'parent': 2170, 'tfidf_word': 'EP: 1041, Name: test_write_connection_file &rarr; write_connection_file &rarr; ports', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1042, 'parent': 2170, 'tfidf_word': 'EP: 1042, Name: test_write_connection_file &rarr; write_connection_file &rarr; close', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1050, 'parent': 2174, 'tfidf_word': 'EP: 1050, Name: test_load_connection_file_session &rarr; write_connection_file &rarr; ports', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1051, 'parent': 2174, 'tfidf_word': 'EP: 1051, Name: test_load_connection_file_session &rarr; write_connection_file &rarr; close', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1134, 'parent': 2189, 'tfidf_word': 'EP: 1134, Name: test_tcp_lifecycle_with_kernel_id &rarr; _get_tcp_km &rarr; __init__', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1138, 'parent': 2189, 'tfidf_word': 'EP: 1138, Name: test_shutdown_all &rarr; _get_tcp_km &rarr; __init__', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 58, 'parent': 2057, 'tfidf_word': 'EP: 58, Name: tunnel_to_kernel &rarr; select_random_ports &rarr; close', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 59, 'parent': 2057, 'tfidf_word': 'EP: 59, Name: tunnel_to_kernel &rarr; select_random_ports &rarr; close', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 57, 'parent': 2099, 'tfidf_word': 'EP: 57, Name: tunnel_to_kernel &rarr; select_random_ports &rarr; close', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2098, 'parent': 2099, 'tfidf_word': 'kernel random select tunnel close port ', 'tfidf_method': 'tunnel_to_kernel select_random_ports close ports close ', 'lda_word': ' port,random,kernel,select,tunnel,', 'lda_method': ' close,tunnel_to_kernel,select_random_ports,port,', 'lsi_word': ' port,random,kernel,tunnel,select,', 'lsi_method': ' select_random_ports,tunnel_to_kernel,close,port,', 'spm_method': ' ', 'text_summary': '', 'files_count': 3, 'files': ['connect.py', 'tunnel.py', 'channels.py'], 'execution_path_count': 3, 'function_id_to_name_file': {'190': 'tunnel_to_kernel(connect.py)', '503': 'select_random_ports(tunnel.py)', '109': 'close(channels.py)', '83': 'close(channels.py)', '211': 'ports(connect.py)'}}, {'key': 880, 'parent': 2073, 'tfidf_word': 'EP: 880, Name: test_random_ports &rarr; select_random_ports &rarr; close', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 881, 'parent': 2073, 'tfidf_word': 'EP: 881, Name: test_random_ports &rarr; select_random_ports &rarr; close', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 879, 'parent': 2167, 'tfidf_word': 'EP: 879, Name: test_random_ports &rarr; select_random_ports &rarr; close', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2166, 'parent': 2167, 'tfidf_word': 'select test close random port ', 'tfidf_method': 'select_random_ports test_random_ports close ports close ', 'lda_word': ' port,random,close,select,test,', 'lda_method': ' close,test_random_ports,select_random_ports,port,', 'lsi_word': ' port,random,select,test,close,', 'lsi_method': ' test_random_ports,select_random_ports,close,port,', 'spm_method': ' ', 'text_summary': '', 'files_count': 4, 'files': ['test_ssh.py', 'tunnel.py', 'channels.py', 'connect.py'], 'execution_path_count': 3, 'function_id_to_name_file': {'701': 'test_random_ports(test_ssh.py)', '503': 'select_random_ports(tunnel.py)', '109': 'close(channels.py)', '83': 'close(channels.py)', '211': 'ports(connect.py)'}}, {'key': 2058, 'parent': 2106, 'tfidf_word': 'check get id restart signal kernel ', 'tfidf_method': '_check_kernel_id get_kernel restart_kernel signal_kernel ', 'lda_word': ' kernel,signal,check,get,restart,', 'lda_method': ' check_kernel_id,restart_kernel,get_kernel,signal_kernel,', 'lsi_word': ' kernel,check,get,restart,signal,', 'lsi_method': ' check_kernel_id,get_kernel,signal_kernel,restart_kernel,', 'spm_method': ' ', 'text_summary': 'check that a kernel id is valid.', 'files_count': 1, 'files': ['multikernelmanager.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'388': 'signal_kernel(multikernelmanager.py)', '410': 'get_kernel(multikernelmanager.py)', '394': '_check_kernel_id(multikernelmanager.py)', '385': 'restart_kernel(multikernelmanager.py)'}}, {'key': 2105, 'parent': 2106, 'tfidf_word': 'check get id shutdown interrupt kernel ', 'tfidf_method': '_check_kernel_id get_kernel interrupt_kernel shutdown_kernel shutdown_all shutdown_kernel ', 'lda_word': ' kernel,get,check,shutdown,interrupt,', 'lda_method': ' check_kernel_id,get_kernel,shutdown_kernel,interrupt_kernel,shutdown_all,', 'lsi_word': ' kernel,get,check,shutdown,interrupt,', 'lsi_method': ' check_kernel_id,get_kernel,shutdown_kernel,shutdown_all,interrupt_kernel,', 'spm_method': ' ', 'text_summary': 'Shutdown all kernels. check that a kernel id is valid.', 'files_count': 1, 'files': ['multikernelmanager.py'], 'execution_path_count': 4, 'function_id_to_name_file': {'384': 'interrupt_kernel(multikernelmanager.py)', '410': 'get_kernel(multikernelmanager.py)', '394': '_check_kernel_id(multikernelmanager.py)', '387': 'shutdown_kernel(multikernelmanager.py)', '421': 'shutdown_kernel(multikernelmanager.py)', '420': 'shutdown_all(multikernelmanager.py)'}}, {'key': 2062, 'parent': 2134, 'tfidf_word': 'ready wait alive ', 'tfidf_method': 'is_alive wait_for_ready is_alive is_alive ', 'lda_word': ' alive,wait,ready,', 'lda_method': ' is_alive,wait_for_ready,', 'lsi_word': ' alive,ready,wait,', 'lsi_method': ' is_alive,wait_for_ready,', 'spm_method': ' ', 'text_summary': '', 'files_count': 3, 'files': ['client.py', 'multikernelmanager.py', 'managerabc.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'104': 'wait_for_ready(client.py)', '103': 'is_alive(client.py)', '412': 'is_alive(multikernelmanager.py)', '373': 'is_alive(managerabc.py)'}}, {'key': 2133, 'parent': 2134, 'tfidf_word': 'ready wait alive ', 'tfidf_method': 'is_alive wait_for_ready is_alive is_alive is_alive is_alive ', 'lda_word': ' alive,ready,wait,', 'lda_method': ' is_alive,wait_for_ready,', 'lsi_word': ' alive,ready,wait,', 'lsi_method': ' is_alive,wait_for_ready,', 'spm_method': ' ', 'text_summary': '', 'files_count': 4, 'files': ['client.py', 'channelsabc.py', 'threaded.py', 'channels.py'], 'execution_path_count': 4, 'function_id_to_name_file': {'104': 'wait_for_ready(client.py)', '103': 'is_alive(client.py)', '140': 'is_alive(channelsabc.py)', '732': 'is_alive(threaded.py)', '86': 'is_alive(channels.py)', '112': 'is_alive(channels.py)'}}, {'key': 2147, 'parent': 2758, 'tfidf_word': 'ready wait alive ', 'tfidf_method': 'wait_for_ready is_alive is_alive is_alive is_alive is_alive is_alive is_alive ', 'lda_word': ' alive,wait,ready,', 'lda_method': ' is_alive,wait_for_ready,', 'lsi_word': ' alive,ready,wait,', 'lsi_method': ' is_alive,wait_for_ready,', 'spm_method': ' ', 'text_summary': '', 'files_count': 6, 'files': ['client.py', 'multikernelmanager.py', 'managerabc.py', 'channelsabc.py', 'threaded.py', 'channels.py'], 'execution_path_count': 6, 'function_id_to_name_file': {'123': 'wait_for_ready(client.py)', '165': 'is_alive(client.py)', '412': 'is_alive(multikernelmanager.py)', '373': 'is_alive(managerabc.py)', '140': 'is_alive(channelsabc.py)', '732': 'is_alive(threaded.py)', '86': 'is_alive(channels.py)', '112': 'is_alive(channels.py)'}}, {'key': 2757, 'parent': 2758, 'tfidf_word': 'manager loop native flush permission io cleanup code tunnel restarter ', 'tfidf_method': 'update_metadata test_find_connection_file test_find_connection_file_abspath test_find_connection_file_local test_find_connection_file_relative test_load_connection_file_session test_load_connection_file_session_with_kn test_mixin_record_random_ports test_inspect test_display_data ', 'lda_word': ' msg,get,test,recv,default,', 'lda_method': ' start,adapt,recv,get_msg,wait_for_ready,', 'lsi_word': ' kernel,test,lifecycle,start,manager,', 'lsi_method': ' init,check_packers,utcnow,get_ipc_km,new_auth,', 'spm_method': ' ', 'text_summary': "Subclasses may override  Prepares a kernel for startup in a separate process. Prepares a kernel for startup in a separate process. return ip for localhost (almost always 127.0.0.1)   Ensure that a sequence of kernel startups doesn't break anything. This method is called in the ioloop thread when a message arrives. Pass a message to the ZMQ socket to send. Return the connection info as a dict. Subclasses may override Start the polling of the kernel. Ensure that a sequence of kernel startups doesn't break anything. find a connection file, and return its absolute path. return ip for localhost (almost always 127.0.0.1)      find a connection file, and return its absolute path. tunnel connections to a kernel via ssh. test load_connection_file() after. handle kernel info reply. Get the hb channel object for this kernel. Send a raw message via ident path. Returns the id to associate with the kernel for this request. Make a blocking client connected to my kernel. Get a message from the stdin channel. Immediately processes all pending messages on this channel. Return the number of running kernels. Unserialize a msg_list to a nested message dict. Interrupts the kernel by sending it a signal. Get a message from the shell channel. Create an ssh tunnel using command-line ssh that connects port lport. This is run in the ioloop thread when the kernel info reply is received. default function for packing datetime objects in JSON. Start the polling of the kernel. Send a shutdown request via control channel. Get a message from the iopub channel. Sends an interrupt event using the specified handle. test that messages receive unique ids.", 'files_count': 34, 'files': ['test_multikernelmanager.py', 'test_session.py', 'session.py', 'forward.py', 'manager.py', 'channels.py', 'threaded.py', 'client.py', 'test_kernelspec.py', 'kernelspec.py', 'test_kernelmanager.py', 'multikernelmanager.py', 'consoleapp.py', 'jsonutil.py', 'channelsabc.py', 'connect.py', 'test_manager.py', 'utils.py', 'restarter.py', 'signalkernel.py', 'tunnel.py', 'test_connect.py', 'kernelspecapp.py', 'kernelapp.py', 'managerabc.py', 'test_adapter.py', 'test_jsonutil.py', 'localinterfaces.py', 'adapter.py', 'test_kernelapp.py', 'test_client.py', 'win_interrupt.py', 'runapp.py', 'launcher.py'], 'execution_path_count': 345, 'function_id_to_name_file': {'648': 'test_start_parallel_thread_kernels(test_multikernelmanager.py)', '643': 'tcp_lifecycle_with_loop(test_multikernelmanager.py)', '642': 'raw_tcp_lifecycle(test_multikernelmanager.py)', '641': '_run_lifecycle(test_multikernelmanager.py)', '647': 'test_start_parallel_process_kernels(test_multikernelmanager.py)', '652': 'test_tcp_lifecycle(test_multikernelmanager.py)', '653': 'test_tcp_lifecycle_with_kernel_id(test_multikernelmanager.py)', '694': 'test_send(test_session.py)', '479': 'recv(session.py)', '474': 'deserialize(session.py)', '483': 'sign(session.py)', '492': 'handle(forward.py)', '695': 'test_send_raw(test_session.py)', '484': 'unserialize(session.py)', '696': 'test_serialize(test_session.py)', '480': 'send(session.py)', '440': 'Message(session.py)', '698': 'test_tracking(test_session.py)', '328': 'interrupt_kernel(manager.py)', '482': 'serialize(session.py)', '135': 'run(channels.py)', '128': '_create_socket(channels.py)', '718': 'close(threaded.py)', '730': 'close(threaded.py)', '132': 'close(channels.py)', '83': 'close(channels.py)', '109': 'close(channels.py)', '123': 'wait_for_ready(client.py)', '84': 'get_msg(channels.py)', '82': '_recv(channels.py)', '104': 'wait_for_ready(client.py)', '101': 'get_stdin_msg(client.py)', '85': 'get_msgs(channels.py)', '99': 'get_iopub_msg(client.py)', '110': 'get_msg(channels.py)', '108': '_recv(channels.py)', '111': 'get_msgs(channels.py)', '620': 'test_cant_install_kernel_spec(test_kernelspec.py)', '275': 'install_kernel_spec(kernelspec.py)', '268': '_get_destination_dir(kernelspec.py)', '257': '_is_valid_kernel_name(kernelspec.py)', '625': 'test_install_kernel_spec_prefix(test_kernelspec.py)', '261': 'install_kernel_spec(kernelspec.py)', '624': 'test_install_kernel_spec(test_kernelspec.py)', '614': 'test_start_sequence_process_kernels(test_kernelmanager.py)', '610': '_run_signaltest_lifecycle(test_kernelmanager.py)', '615': 'execute(test_kernelmanager.py)', '609': '_prepare_kernel(test_kernelmanager.py)', '611': 'test_start_parallel_process_kernels(test_kernelmanager.py)', '613': 'test_start_sequence_kernels(test_kernelmanager.py)', '612': 'test_start_parallel_thread_kernels(test_kernelmanager.py)', '398': '_kernel_manager_class_changed(multikernelmanager.py)', '396': '_create_kernel_manager_factory(multikernelmanager.py)', '424': 'create_kernel_manager(multikernelmanager.py)', '397': '_find_available_port(multikernelmanager.py)', '395': '_context_default(multikernelmanager.py)', '399': '_kernel_manager_factory_default(multikernelmanager.py)', '215': '__init__(consoleapp.py)', '485': '__init__(session.py)', '441': 'Session(session.py)', '457': '__init__(session.py)', '465': '_new_auth(session.py)', '459': '_check_packers(session.py)', '450': 'utcnow(session.py)', '244': 'squash_dates(jsonutil.py)', '90': 'AsyncKernelClient(client.py)', '147': 'KernelClient(client.py)', '139': 'HBChannelABC(channelsabc.py)', '138': 'ChannelABC(channelsabc.py)', '116': 'BlockingKernelClient(client.py)', '188': 'ConnectionFileMixin(connect.py)', '322': 'start_new_async_kernel(manager.py)', '319': 'AsyncKernelManager(manager.py)', '320': 'KernelManager(manager.py)', '224': 'AsyncIOLoopKernelManager(manager.py)', '225': 'IOLoopKernelManager(manager.py)', '635': 'test_connection_file_real_path(test_manager.py)', '663': 'test_start_parallel_thread_kernels(test_multikernelmanager.py)', '658': 'tcp_lifecycle_with_loop(test_multikernelmanager.py)', '667': 'test_tcp_lifecycle(test_multikernelmanager.py)', '657': '_run_lifecycle(test_multikernelmanager.py)', '662': 'test_start_parallel_process_kernels(test_multikernelmanager.py)', '704': 'execute(utils.py)', '155': 'execute(client.py)', '148': 'validate_string_dict(client.py)', '689': 'test_datetimes_msgpack(test_session.py)', '679': '_datetime_test(test_session.py)', '688': 'test_datetimes(test_session.py)', '690': 'test_datetimes_pickle(test_session.py)', '734': 'send(threaded.py)', '738': 'thread_send(threaded.py)', '664': 'test_start_sequence_ipc_kernels(test_multikernelmanager.py)', '654': '_get_ipc_km(test_multikernelmanager.py)', '392': '__init__(multikernelmanager.py)', '660': 'test_ipc_lifecycle(test_multikernelmanager.py)', '659': 'test_ipc_cinfo(test_multikernelmanager.py)', '423': 'start_kernel(multikernelmanager.py)', '415': 'pre_start_kernel(multikernelmanager.py)', '380': 'DuplicateKernelError(multikernelmanager.py)', '414': 'new_kernel_id(multikernelmanager.py)', '389': 'start_kernel(multikernelmanager.py)', '238': 'start(restarter.py)', '430': 'poll(restarter.py)', '433': 'stop(restarter.py)', '428': '_fire_callbacks(restarter.py)', '510': 'do_execute(signalkernel.py)', '190': 'tunnel_to_kernel(connect.py)', '501': 'openssh_tunnel(tunnel.py)', '494': 'SSHException(tunnel.py)', '497': '_stop_tunnel(tunnel.py)', '475': 'feed_identities(session.py)', '330': 'restart_kernel(manager.py)', '202': 'cleanup_random_ports(connect.py)', '200': 'cleanup_connection_file(connect.py)', '567': 'test_mixin_cleanup_random_ports(test_connect.py)', '106': 'ZMQSocketChannel(channels.py)', '226': 'as_zmqstream(manager.py)', '233': 'wrapped(manager.py)', '568': 'test_mixin_record_random_ports(test_connect.py)', '557': 'DummyConfigurable(test_connect.py)', '235': 'IOLoopKernelRestarter(restarter.py)', '426': 'KernelRestarter(restarter.py)', '234': 'AsyncIOLoopKernelRestarter(restarter.py)', '291': 'start(kernelspecapp.py)', '251': 'start(kernelapp.py)', '249': 'setup_signals(kernelapp.py)', '252': 'shutdown_handler(kernelapp.py)', '250': 'shutdown(kernelapp.py)', '248': 'log_connection_info(kernelapp.py)', '199': 'blocking_client(connect.py)', '208': 'get_connection_info(connect.py)', '725': 'stop_channels(threaded.py)', '373': 'is_alive(managerabc.py)', '684': 'test_bad_unpack(test_session.py)', '676': '_bad_unpacker(test_session.py)', '536': 'test_complete_request(test_adapter.py)', '517': 'adapt(test_adapter.py)', '562': 'test_find_connection_file_local(test_connect.py)', '189': 'find_connection_file(connect.py)', '493': 'SubHander(forward.py)', '490': 'Handler(forward.py)', '253': 'KernelSpec(kernelspec.py)', '114': 'send(channels.py)', '88': 'send(channels.py)', '575': 'test_date_default(test_jsonutil.py)', '241': 'date_default(jsonutil.py)', '240': '_ensure_tzinfo(jsonutil.py)', '597': 'test_subclasses(test_kernelmanager.py)', '703': 'AsyncKernelManagerWithCleanup(utils.py)', '595': 'test_signal_kernel_subprocesses(test_kernelmanager.py)', '598': 'execute(test_kernelmanager.py)', '702': 'AsyncKernelManagerSubclass(utils.py)', '591': 'transport(test_kernelmanager.py)', '606': 'test_templated_kspec_env(test_kernelmanager.py)', '599': '_env_test_body(test_kernelmanager.py)', '607': 'execute(test_kernelmanager.py)', '604': 'test_signal_kernel_subprocesses(test_kernelmanager.py)', '608': 'execute(test_kernelmanager.py)', '586': 'env(test_kernelmanager.py)', '712': 'stop(utils.py)', '711': 'start(utils.py)', '705': 'test_env(utils.py)', '630': 'test_validate_kernel_name(test_kernelspec.py)', '506': 'SignalTestApp(signalkernel.py)', '507': 'SignalTestKernel(signalkernel.py)', '627': 'test_remove_kernel_spec(test_kernelspec.py)', '617': '_install_sample_kernel(test_kernelspec.py)', '626': 'test_kernel_spec_priority(test_kernelspec.py)', '651': 'test_tcp_cinfo(test_multikernelmanager.py)', '640': '_run_cinfo(test_multikernelmanager.py)', '621': 'test_find_all_specs(test_kernelspec.py)', '622': 'test_find_kernel_specs(test_kernelspec.py)', '623': 'test_get_kernel_spec(test_kernelspec.py)', '619': 'tearDown(test_kernelspec.py)', '618': 'setUp(test_kernelspec.py)', '649': 'test_start_sequence_ipc_kernels(test_multikernelmanager.py)', '650': 'test_start_sequence_tcp_kernels(test_multikernelmanager.py)', '644': 'test_ipc_cinfo(test_multikernelmanager.py)', '315': 'localhost(localinterfaces.py)', '645': 'test_ipc_lifecycle(test_multikernelmanager.py)', '665': 'test_start_sequence_tcp_kernels(test_multikernelmanager.py)', '656': '_run_cinfo(test_multikernelmanager.py)', '666': 'test_tcp_cinfo(test_multikernelmanager.py)', '668': 'test_tcp_lifecycle_with_kernel_id(test_multikernelmanager.py)', '569': 'test_secure_write(test_connect.py)', '573': 'check_user_only_permissions(test_connect.py)', '574': 'fetch_win32_permissions(test_connect.py)', '563': 'test_find_connection_file_relative(test_connect.py)', '561': 'test_find_connection_file_abspath(test_connect.py)', '560': 'test_find_connection_file(test_connect.py)', '565': 'test_load_connection_file_session_with_kn(test_connect.py)', '539': 'test_input_request(test_adapter.py)', '564': 'test_load_connection_file_session(test_connect.py)', '537': 'test_display_data(test_adapter.py)', '540': 'test_inspect_reply(test_adapter.py)', '543': 'test_kernel_info_reply(test_adapter.py)', '542': 'test_inspect_request_token(test_adapter.py)', '535': 'test_complete_reply(test_adapter.py)', '541': 'test_inspect_request(test_adapter.py)', '538': 'test_execute_request(test_adapter.py)', '545': 'test_rename_type(test_adapter.py)', '544': 'test_no_adapt(test_adapter.py)', '546': 'test_same_version(test_adapter.py)', '514': 'V5toV4TestCase(test_adapter.py)', '512': 'AdapterTest(test_adapter.py)', '526': 'test_input_request(test_adapter.py)', '523': 'test_display_data(test_adapter.py)', '527': 'test_kernel_info_reply(test_adapter.py)', '530': 'test_object_info_reply_not_found(test_adapter.py)', '529': 'test_object_info_reply(test_adapter.py)', '531': 'test_object_info_request(test_adapter.py)', '521': 'test_complete_reply(test_adapter.py)', '522': 'test_complete_request(test_adapter.py)', '524': 'test_execute_reply(test_adapter.py)', '532': 'test_rename_type(test_adapter.py)', '525': 'test_execute_request(test_adapter.py)', '528': 'test_no_adapt(test_adapter.py)', '533': 'test_same_version(test_adapter.py)', '513': 'V4toV5TestCase(test_adapter.py)', '519': 'setUp(test_adapter.py)', '516': 'test_default_version(test_adapter.py)', '515': 'test_code_to_line_no_code(test_adapter.py)', '51': 'code_to_line(adapter.py)', '158': 'get_shell_msg(client.py)', '157': 'get_iopub_msg(client.py)', '710': '__exit__(utils.py)', '709': '__enter__(utils.py)', '580': 'test_kernelapp_lifecycle(test_kernelapp.py)', '579': '_launch(test_kernelapp.py)', '686': 'test_clone(test_session.py)', '473': 'clone(session.py)', '481': 'send_raw(session.py)', '683': 'test_bad_roundtrip(test_session.py)', '685': 'test_bad_unpacker(test_session.py)', '682': 'test_bad_packer(test_session.py)', '681': 'test_bad_pack(test_session.py)', '675': '_bad_packer(test_session.py)', '687': 'test_cull_digest_history(test_session.py)', '700': 'test_zero_digest_history(test_session.py)', '697': 'test_session_id(test_session.py)', '699': 'test_unique_msg_ids(test_session.py)', '445': 'msg_header(session.py)', '680': 'test_args(test_session.py)', '478': 'msg_id(session.py)', '674': 'TestSession(test_session.py)', '673': 'SessionTestCase(test_session.py)', '678': 'setUp(test_session.py)', '556': 'test_shutdown(test_client.py)', '548': '_check_reply(test_client.py)', '550': 'test_comm_info(test_client.py)', '555': 'test_kernel_info(test_client.py)', '551': 'test_complete(test_client.py)', '554': 'test_inspect(test_client.py)', '553': 'test_history(test_client.py)', '549': 'setUp(test_client.py)', '255': 'NoSuchKernel(kernelspec.py)', '117': 'reqrep(client.py)', '124': 'wrapped(client.py)', '150': '_handle_kernel_info_reply(client.py)', '125': 'HBChannel(channels.py)', '102': 'hb_channel(client.py)', '196': '_make_url(connect.py)', '91': 'reqrep(client.py)', '105': 'wrapped(client.py)', '80': 'ZMQSocketChannel(channels.py)', '154': 'control_channel(client.py)', '723': 'ioloop(threaded.py)', '160': 'hb_channel(client.py)', '171': 'stdin_channel(client.py)', '164': 'iopub_channel(client.py)', '168': 'shell_channel(client.py)', '740': 'send_interrupt(win_interrupt.py)', '334': '__del__(manager.py)', '293': 'start(kernelspecapp.py)', '294': 'path_key(kernelspecapp.py)', '735': 'start(threaded.py)', '720': 'start(threaded.py)', '141': 'start(channelsabc.py)', '432': 'start(restarter.py)', '288': 'start(kernelspecapp.py)', '89': 'start(channels.py)', '115': 'start(channels.py)', '290': 'start(kernelspecapp.py)', '438': 'parse_command_line(runapp.py)', '218': 'build_kernel_argv(consoleapp.py)', '308': '_only_once(localinterfaces.py)', '317': 'wrapped(localinterfaces.py)', '47': 'V4toV5(adapter.py)', '46': 'Adapter(adapter.py)', '77': 'object_info_request(adapter.py)', '52': 'extract_oname_v4(adapter.py)', '70': 'complete_request(adapter.py)', '75': 'kernel_info_reply(adapter.py)', '49': '_version_str_to_list(adapter.py)', '48': 'V5toV4(adapter.py)', '53': '__call__(adapter.py)', '54': 'handle_reply_status_error(adapter.py)', '57': 'update_msg_type(adapter.py)', '56': 'update_metadata(adapter.py)', '55': 'update_header(adapter.py)', '247': 'initialize(kernelapp.py)', '246': '_record_started(kernelapp.py)', '585': 'config(test_kernelmanager.py)', '262': 'install_native_kernel_spec(kernelspec.py)', '276': 'install_native_kernel_spec(kernelspec.py)', '265': 'to_json(kernelspec.py)', '264': 'to_dict(kernelspec.py)', '449': 'test_msg2obj(session.py)', '453': '__init__(session.py)', '470': '_signature_scheme_changed(session.py)', '463': '_key_default(session.py)', '447': 'new_id_bytes(session.py)', '462': '_key_changed(session.py)', '443': 'default_secure(session.py)', '469': '_session_default(session.py)', '446': 'new_id(session.py)', '412': 'is_alive(multikernelmanager.py)', '420': 'shutdown_all(multikernelmanager.py)', '413': 'list_kernel_ids(multikernelmanager.py)', '721': 'stop(threaded.py)', '140': 'is_alive(channelsabc.py)', '732': 'is_alive(threaded.py)', '112': 'is_alive(channels.py)', '86': 'is_alive(channels.py)', '724': 'start_channels(threaded.py)', '722': '_check_kernel_info_reply(threaded.py)', '716': '__init__(threaded.py)', '387': 'shutdown_kernel(multikernelmanager.py)', '416': 'remove_kernel(multikernelmanager.py)', '713': 'IOLoopThread(threaded.py)', '714': 'ThreadedKernelClient(threaded.py)', '715': 'ThreadedZMQSocketChannel(threaded.py)', '731': 'flush(threaded.py)', '727': '_flush(threaded.py)', '386': 'shutdown_all(multikernelmanager.py)', '418': 'request_shutdown(multikernelmanager.py)', '402': 'cleanup_resources(multikernelmanager.py)', '408': 'finish_shutdown(multikernelmanager.py)', '393': '__len__(multikernelmanager.py)', '421': 'shutdown_kernel(multikernelmanager.py)', '198': '_session_default(connect.py)', '298': 'launch_kernel(launcher.py)', '739': 'create_interrupt_event(win_interrupt.py)', '741': 'SECURITY_ATTRIBUTES(win_interrupt.py)', '509': '__init__(signalkernel.py)', '278': '__init__(kernelspec.py)', '127': '__init__(channels.py)', '126': 'InvalidPortNumber(channels.py)', '107': '__init__(channels.py)', '81': '__init__(channels.py)', '726': '__init__(threaded.py)', '737': 'setup_stream(threaded.py)', '728': '_handle_recv(threaded.py)', '729': 'call_handlers(threaded.py)', '136': 'stop(channels.py)', '133': 'is_beating(channels.py)', '145': 'time_to_dead(channelsabc.py)', '131': 'call_handlers(channels.py)', '130': '_poll(channels.py)'}}, {'key': 801, 'parent': 1527, 'tfidf_word': 'EP: 801, Name: test_feed_identities &rarr; msg &rarr; msg &rarr; msg &rarr; msg_header &rarr; msg_id', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1524, 'parent': 1527, 'tfidf_word': 'header id test complete interrupt kernel send serialize msg ', 'tfidf_method': 'msg msg_header msg_id msg msg is_complete interrupt_kernel test_msg test_send test_serialize ', 'lda_word': ' msg,header,test,complete,interrupt,', 'lda_method': ' msg,msg_id,msg_header,is_complete,interrupt_kernel,', 'lsi_word': ' msg,header,test,send,serialize,', 'lsi_method': ' msg,msg_header,msg_id,test_send,interrupt_kernel,', 'spm_method': ' ', 'text_summary': '', 'files_count': 5, 'files': ['test_session.py', 'test_adapter.py', 'session.py', 'manager.py', 'client.py'], 'execution_path_count': 5, 'function_id_to_name_file': {'694': 'test_send(test_session.py)', '520': 'msg(test_adapter.py)', '534': 'msg(test_adapter.py)', '476': 'msg(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '696': 'test_serialize(test_session.py)', '693': 'test_msg(test_session.py)', '328': 'interrupt_kernel(manager.py)', '166': 'is_complete(client.py)'}}, {'key': 805, 'parent': 1528, 'tfidf_word': 'EP: 805, Name: test_feed_identities &rarr; msg &rarr; msg &rarr; msg &rarr; msg_header &rarr; msg_id', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1525, 'parent': 1528, 'tfidf_word': 'header id test complete interrupt kernel send serialize msg ', 'tfidf_method': 'msg msg_header msg_id msg msg is_complete interrupt_kernel test_msg test_send test_serialize ', 'lda_word': ' msg,header,complete,test,serialize,', 'lda_method': ' msg,msg_header,msg_id,interrupt_kernel,test_serialize,', 'lsi_word': ' msg,header,test,send,serialize,', 'lsi_method': ' msg,msg_header,msg_id,test_send,test_serialize,', 'spm_method': ' ', 'text_summary': '', 'files_count': 5, 'files': ['test_session.py', 'test_adapter.py', 'session.py', 'manager.py', 'client.py'], 'execution_path_count': 5, 'function_id_to_name_file': {'694': 'test_send(test_session.py)', '534': 'msg(test_adapter.py)', '520': 'msg(test_adapter.py)', '476': 'msg(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '696': 'test_serialize(test_session.py)', '693': 'test_msg(test_session.py)', '328': 'interrupt_kernel(manager.py)', '166': 'is_complete(client.py)'}}, {'key': 916, 'parent': 1611, 'tfidf_word': 'EP: 916, Name: test_same_version &rarr; msg &rarr; msg &rarr; msg_header &rarr; msg_id', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 922, 'parent': 1611, 'tfidf_word': 'EP: 922, Name: test_no_adapt &rarr; msg &rarr; msg &rarr; msg_header &rarr; msg_id', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 761, 'parent': 1640, 'tfidf_word': 'EP: 761, Name: test_send &rarr; msg &rarr; msg &rarr; msg_header &rarr; msg_id', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 799, 'parent': 1640, 'tfidf_word': 'EP: 799, Name: test_feed_identities &rarr; msg &rarr; msg &rarr; msg_header &rarr; msg_id', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 917, 'parent': 1609, 'tfidf_word': 'EP: 917, Name: test_same_version &rarr; msg &rarr; msg &rarr; msg &rarr; extract_header', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 923, 'parent': 1609, 'tfidf_word': 'EP: 923, Name: test_no_adapt &rarr; msg &rarr; msg &rarr; msg &rarr; extract_header', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 762, 'parent': 1627, 'tfidf_word': 'EP: 762, Name: test_send &rarr; msg &rarr; msg &rarr; msg &rarr; extract_header', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 800, 'parent': 1627, 'tfidf_word': 'EP: 800, Name: test_feed_identities &rarr; msg &rarr; msg &rarr; msg &rarr; extract_header', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 983, 'parent': 1607, 'tfidf_word': 'EP: 983, Name: test_same_version &rarr; msg &rarr; msg &rarr; msg &rarr; extract_header', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 989, 'parent': 1607, 'tfidf_word': 'EP: 989, Name: test_no_adapt &rarr; msg &rarr; msg &rarr; msg &rarr; extract_header', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 768, 'parent': 1615, 'tfidf_word': 'EP: 768, Name: test_send &rarr; msg &rarr; msg &rarr; msg &rarr; extract_header', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 804, 'parent': 1615, 'tfidf_word': 'EP: 804, Name: test_feed_identities &rarr; msg &rarr; msg &rarr; msg &rarr; extract_header', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 56, 'parent': 2098, 'tfidf_word': 'EP: 56, Name: tunnel_to_kernel &rarr; select_random_ports &rarr; close', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2097, 'parent': 2098, 'tfidf_word': 'kernel random select tunnel close port ', 'tfidf_method': 'tunnel_to_kernel select_random_ports ports close ', 'lda_word': ' random,tunnel,kernel,close,select,', 'lda_method': ' tunnel_to_kernel,close,select_random_ports,port,', 'lsi_word': ' port,tunnel,kernel,random,select,', 'lsi_method': ' select_random_ports,tunnel_to_kernel,close,port,', 'spm_method': ' ', 'text_summary': '', 'files_count': 3, 'files': ['connect.py', 'tunnel.py', 'channels.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'190': 'tunnel_to_kernel(connect.py)', '503': 'select_random_ports(tunnel.py)', '83': 'close(channels.py)', '211': 'ports(connect.py)'}}, {'key': 878, 'parent': 2166, 'tfidf_word': 'EP: 878, Name: test_random_ports &rarr; select_random_ports &rarr; close', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2165, 'parent': 2166, 'tfidf_word': 'select test close random port ', 'tfidf_method': 'select_random_ports test_random_ports ports close ', 'lda_word': ' port,test,random,select,close,', 'lda_method': ' select_random_ports,test_random_ports,port,close,', 'lsi_word': ' port,random,select,test,close,', 'lsi_method': ' select_random_ports,test_random_ports,close,port,', 'spm_method': ' ', 'text_summary': '', 'files_count': 4, 'files': ['test_ssh.py', 'tunnel.py', 'channels.py', 'connect.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'701': 'test_random_ports(test_ssh.py)', '503': 'select_random_ports(tunnel.py)', '83': 'close(channels.py)', '211': 'ports(connect.py)'}}, {'key': 84, 'parent': 2058, 'tfidf_word': 'EP: 84, Name: signal_kernel &rarr; get_kernel &rarr; _check_kernel_id', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 85, 'parent': 2058, 'tfidf_word': 'EP: 85, Name: restart_kernel &rarr; get_kernel &rarr; _check_kernel_id', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 83, 'parent': 2105, 'tfidf_word': 'EP: 83, Name: interrupt_kernel &rarr; get_kernel &rarr; _check_kernel_id', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2104, 'parent': 2105, 'tfidf_word': 'check get id shutdown kernel ', 'tfidf_method': '_check_kernel_id get_kernel shutdown_kernel shutdown_all shutdown_kernel ', 'lda_word': ' kernel,check,shutdown,get,', 'lda_method': ' shutdown_kernel,check_kernel_id,get_kernel,shutdown_all,', 'lsi_word': ' kernel,check,get,shutdown,', 'lsi_method': ' check_kernel_id,get_kernel,shutdown_kernel,shutdown_all,', 'spm_method': ' ', 'text_summary': 'Shutdown all kernels. check that a kernel id is valid.', 'files_count': 1, 'files': ['multikernelmanager.py'], 'execution_path_count': 3, 'function_id_to_name_file': {'387': 'shutdown_kernel(multikernelmanager.py)', '410': 'get_kernel(multikernelmanager.py)', '394': '_check_kernel_id(multikernelmanager.py)', '421': 'shutdown_kernel(multikernelmanager.py)', '420': 'shutdown_all(multikernelmanager.py)'}}, {'key': 590, 'parent': 2062, 'tfidf_word': 'EP: 590, Name: wait_for_ready &rarr; is_alive &rarr; is_alive', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 591, 'parent': 2062, 'tfidf_word': 'EP: 591, Name: wait_for_ready &rarr; is_alive &rarr; is_alive', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 589, 'parent': 2133, 'tfidf_word': 'EP: 589, Name: wait_for_ready &rarr; is_alive &rarr; is_alive', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2132, 'parent': 2133, 'tfidf_word': 'ready wait alive ', 'tfidf_method': 'is_alive wait_for_ready is_alive is_alive is_alive ', 'lda_word': ' alive,wait,ready,', 'lda_method': ' is_alive,wait_for_ready,', 'lsi_word': ' alive,ready,wait,', 'lsi_method': ' is_alive,wait_for_ready,', 'spm_method': ' ', 'text_summary': '', 'files_count': 3, 'files': ['client.py', 'threaded.py', 'channels.py'], 'execution_path_count': 3, 'function_id_to_name_file': {'104': 'wait_for_ready(client.py)', '103': 'is_alive(client.py)', '732': 'is_alive(threaded.py)', '86': 'is_alive(channels.py)', '112': 'is_alive(channels.py)'}}, {'key': 2063, 'parent': 2147, 'tfidf_word': 'ready wait alive ', 'tfidf_method': 'wait_for_ready is_alive is_alive is_alive ', 'lda_word': ' alive,ready,wait,', 'lda_method': ' is_alive,wait_for_ready,', 'lsi_word': ' alive,ready,wait,', 'lsi_method': ' is_alive,wait_for_ready,', 'spm_method': ' ', 'text_summary': '', 'files_count': 3, 'files': ['client.py', 'multikernelmanager.py', 'managerabc.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'123': 'wait_for_ready(client.py)', '165': 'is_alive(client.py)', '412': 'is_alive(multikernelmanager.py)', '373': 'is_alive(managerabc.py)'}}, {'key': 2146, 'parent': 2147, 'tfidf_word': 'ready wait alive ', 'tfidf_method': 'wait_for_ready is_alive is_alive is_alive is_alive is_alive ', 'lda_word': ' alive,wait,ready,', 'lda_method': ' is_alive,wait_for_ready,', 'lsi_word': ' alive,ready,wait,', 'lsi_method': ' is_alive,wait_for_ready,', 'spm_method': ' ', 'text_summary': '', 'files_count': 4, 'files': ['client.py', 'channelsabc.py', 'threaded.py', 'channels.py'], 'execution_path_count': 4, 'function_id_to_name_file': {'123': 'wait_for_ready(client.py)', '165': 'is_alive(client.py)', '140': 'is_alive(channelsabc.py)', '732': 'is_alive(threaded.py)', '86': 'is_alive(channels.py)', '112': 'is_alive(channels.py)'}}, {'key': 2385, 'parent': 2757, 'tfidf_word': 'test kernel parallel start tcp loop process thread id lifecycle ', 'tfidf_method': '_run_lifecycle raw_tcp_lifecycle tcp_lifecycle_with_loop test_start_parallel_process_kernels test_start_parallel_thread_kernels test_tcp_lifecycle test_tcp_lifecycle_with_kernel_id ', 'lda_word': ' lifecycle,tcp,test,raw,parallel,', 'lda_method': ' run_lifecycle,raw_tcp_lifecycle,test_tcp_lifecycle,test_tcp_lifecycle_with_kernel_id,test_start_parallel_thread_kernels,', 'lsi_word': ' lifecycle,tcp,run,test,raw,', 'lsi_method': ' run_lifecycle,raw_tcp_lifecycle,tcp_lifecycle_with_loop,test_start_parallel_process_kernels,test_start_parallel_thread_kernels,', 'spm_method': ' ', 'text_summary': '', 'files_count': 1, 'files': ['test_multikernelmanager.py'], 'execution_path_count': 6, 'function_id_to_name_file': {'648': 'test_start_parallel_thread_kernels(test_multikernelmanager.py)', '643': 'tcp_lifecycle_with_loop(test_multikernelmanager.py)', '642': 'raw_tcp_lifecycle(test_multikernelmanager.py)', '641': '_run_lifecycle(test_multikernelmanager.py)', '647': 'test_start_parallel_process_kernels(test_multikernelmanager.py)', '652': 'test_tcp_lifecycle(test_multikernelmanager.py)', '653': 'test_tcp_lifecycle_with_kernel_id(test_multikernelmanager.py)'}}, {'key': 2756, 'parent': 2757, 'tfidf_word': 'manager loop native flush permission io cleanup code tunnel restarter ', 'tfidf_method': 'test_shutdown __len__ update_metadata test_find_connection_file test_find_connection_file_abspath test_find_connection_file_local test_find_connection_file_relative test_load_connection_file_session test_history extract_oname_v4 ', 'lda_word': ' kernel,manager,client,async,channel,', 'lda_method': ' close,execute,handle,stop_channels,is_alive,', 'lsi_word': ' kernel,test,start,manager,install,', 'lsi_method': ' init,check_packers,utcnow,get_ipc_km,new_auth,', 'spm_method': ' ', 'text_summary': "Subclasses may override  Prepares a kernel for startup in a separate process. Prepares a kernel for startup in a separate process. return ip for localhost (almost always 127.0.0.1)   Ensure that a sequence of kernel startups doesn't break anything. This method is called in the ioloop thread when a message arrives. Pass a message to the ZMQ socket to send. Return the connection info as a dict. Subclasses may override Start the polling of the kernel. Ensure that a sequence of kernel startups doesn't break anything. find a connection file, and return its absolute path. return ip for localhost (almost always 127.0.0.1)      find a connection file, and return its absolute path. tunnel connections to a kernel via ssh. test load_connection_file() after. handle kernel info reply. Get the hb channel object for this kernel. Send a raw message via ident path. Returns the id to associate with the kernel for this request. Make a blocking client connected to my kernel. Get a message from the stdin channel. Immediately processes all pending messages on this channel. Return the number of running kernels. Unserialize a msg_list to a nested message dict. Interrupts the kernel by sending it a signal. Get a message from the shell channel. Create an ssh tunnel using command-line ssh that connects port lport. This is run in the ioloop thread when the kernel info reply is received. default function for packing datetime objects in JSON. Start the polling of the kernel. Send a shutdown request via control channel. Get a message from the iopub channel. Sends an interrupt event using the specified handle. test that messages receive unique ids.", 'files_count': 34, 'files': ['test_session.py', 'session.py', 'forward.py', 'manager.py', 'channels.py', 'threaded.py', 'client.py', 'test_kernelspec.py', 'kernelspec.py', 'test_kernelmanager.py', 'multikernelmanager.py', 'consoleapp.py', 'jsonutil.py', 'channelsabc.py', 'connect.py', 'test_manager.py', 'test_multikernelmanager.py', 'utils.py', 'restarter.py', 'signalkernel.py', 'tunnel.py', 'test_connect.py', 'kernelspecapp.py', 'kernelapp.py', 'managerabc.py', 'test_adapter.py', 'test_jsonutil.py', 'localinterfaces.py', 'adapter.py', 'test_kernelapp.py', 'test_client.py', 'win_interrupt.py', 'runapp.py', 'launcher.py'], 'execution_path_count': 339, 'function_id_to_name_file': {'694': 'test_send(test_session.py)', '479': 'recv(session.py)', '474': 'deserialize(session.py)', '483': 'sign(session.py)', '492': 'handle(forward.py)', '695': 'test_send_raw(test_session.py)', '484': 'unserialize(session.py)', '696': 'test_serialize(test_session.py)', '480': 'send(session.py)', '440': 'Message(session.py)', '698': 'test_tracking(test_session.py)', '328': 'interrupt_kernel(manager.py)', '482': 'serialize(session.py)', '135': 'run(channels.py)', '128': '_create_socket(channels.py)', '718': 'close(threaded.py)', '730': 'close(threaded.py)', '132': 'close(channels.py)', '83': 'close(channels.py)', '109': 'close(channels.py)', '123': 'wait_for_ready(client.py)', '84': 'get_msg(channels.py)', '82': '_recv(channels.py)', '104': 'wait_for_ready(client.py)', '101': 'get_stdin_msg(client.py)', '85': 'get_msgs(channels.py)', '99': 'get_iopub_msg(client.py)', '110': 'get_msg(channels.py)', '108': '_recv(channels.py)', '111': 'get_msgs(channels.py)', '620': 'test_cant_install_kernel_spec(test_kernelspec.py)', '275': 'install_kernel_spec(kernelspec.py)', '268': '_get_destination_dir(kernelspec.py)', '257': '_is_valid_kernel_name(kernelspec.py)', '625': 'test_install_kernel_spec_prefix(test_kernelspec.py)', '261': 'install_kernel_spec(kernelspec.py)', '624': 'test_install_kernel_spec(test_kernelspec.py)', '614': 'test_start_sequence_process_kernels(test_kernelmanager.py)', '610': '_run_signaltest_lifecycle(test_kernelmanager.py)', '615': 'execute(test_kernelmanager.py)', '609': '_prepare_kernel(test_kernelmanager.py)', '611': 'test_start_parallel_process_kernels(test_kernelmanager.py)', '613': 'test_start_sequence_kernels(test_kernelmanager.py)', '612': 'test_start_parallel_thread_kernels(test_kernelmanager.py)', '398': '_kernel_manager_class_changed(multikernelmanager.py)', '396': '_create_kernel_manager_factory(multikernelmanager.py)', '424': 'create_kernel_manager(multikernelmanager.py)', '397': '_find_available_port(multikernelmanager.py)', '395': '_context_default(multikernelmanager.py)', '399': '_kernel_manager_factory_default(multikernelmanager.py)', '215': '__init__(consoleapp.py)', '485': '__init__(session.py)', '441': 'Session(session.py)', '457': '__init__(session.py)', '465': '_new_auth(session.py)', '459': '_check_packers(session.py)', '450': 'utcnow(session.py)', '244': 'squash_dates(jsonutil.py)', '90': 'AsyncKernelClient(client.py)', '147': 'KernelClient(client.py)', '139': 'HBChannelABC(channelsabc.py)', '138': 'ChannelABC(channelsabc.py)', '116': 'BlockingKernelClient(client.py)', '188': 'ConnectionFileMixin(connect.py)', '322': 'start_new_async_kernel(manager.py)', '319': 'AsyncKernelManager(manager.py)', '320': 'KernelManager(manager.py)', '224': 'AsyncIOLoopKernelManager(manager.py)', '225': 'IOLoopKernelManager(manager.py)', '635': 'test_connection_file_real_path(test_manager.py)', '663': 'test_start_parallel_thread_kernels(test_multikernelmanager.py)', '658': 'tcp_lifecycle_with_loop(test_multikernelmanager.py)', '667': 'test_tcp_lifecycle(test_multikernelmanager.py)', '657': '_run_lifecycle(test_multikernelmanager.py)', '662': 'test_start_parallel_process_kernels(test_multikernelmanager.py)', '704': 'execute(utils.py)', '155': 'execute(client.py)', '148': 'validate_string_dict(client.py)', '689': 'test_datetimes_msgpack(test_session.py)', '679': '_datetime_test(test_session.py)', '688': 'test_datetimes(test_session.py)', '690': 'test_datetimes_pickle(test_session.py)', '734': 'send(threaded.py)', '738': 'thread_send(threaded.py)', '664': 'test_start_sequence_ipc_kernels(test_multikernelmanager.py)', '654': '_get_ipc_km(test_multikernelmanager.py)', '392': '__init__(multikernelmanager.py)', '660': 'test_ipc_lifecycle(test_multikernelmanager.py)', '659': 'test_ipc_cinfo(test_multikernelmanager.py)', '423': 'start_kernel(multikernelmanager.py)', '415': 'pre_start_kernel(multikernelmanager.py)', '380': 'DuplicateKernelError(multikernelmanager.py)', '414': 'new_kernel_id(multikernelmanager.py)', '389': 'start_kernel(multikernelmanager.py)', '238': 'start(restarter.py)', '430': 'poll(restarter.py)', '433': 'stop(restarter.py)', '428': '_fire_callbacks(restarter.py)', '510': 'do_execute(signalkernel.py)', '190': 'tunnel_to_kernel(connect.py)', '501': 'openssh_tunnel(tunnel.py)', '494': 'SSHException(tunnel.py)', '497': '_stop_tunnel(tunnel.py)', '475': 'feed_identities(session.py)', '330': 'restart_kernel(manager.py)', '202': 'cleanup_random_ports(connect.py)', '200': 'cleanup_connection_file(connect.py)', '567': 'test_mixin_cleanup_random_ports(test_connect.py)', '106': 'ZMQSocketChannel(channels.py)', '226': 'as_zmqstream(manager.py)', '233': 'wrapped(manager.py)', '568': 'test_mixin_record_random_ports(test_connect.py)', '557': 'DummyConfigurable(test_connect.py)', '235': 'IOLoopKernelRestarter(restarter.py)', '426': 'KernelRestarter(restarter.py)', '234': 'AsyncIOLoopKernelRestarter(restarter.py)', '291': 'start(kernelspecapp.py)', '251': 'start(kernelapp.py)', '249': 'setup_signals(kernelapp.py)', '252': 'shutdown_handler(kernelapp.py)', '250': 'shutdown(kernelapp.py)', '248': 'log_connection_info(kernelapp.py)', '199': 'blocking_client(connect.py)', '208': 'get_connection_info(connect.py)', '725': 'stop_channels(threaded.py)', '373': 'is_alive(managerabc.py)', '684': 'test_bad_unpack(test_session.py)', '676': '_bad_unpacker(test_session.py)', '536': 'test_complete_request(test_adapter.py)', '517': 'adapt(test_adapter.py)', '562': 'test_find_connection_file_local(test_connect.py)', '189': 'find_connection_file(connect.py)', '493': 'SubHander(forward.py)', '490': 'Handler(forward.py)', '253': 'KernelSpec(kernelspec.py)', '114': 'send(channels.py)', '88': 'send(channels.py)', '575': 'test_date_default(test_jsonutil.py)', '241': 'date_default(jsonutil.py)', '240': '_ensure_tzinfo(jsonutil.py)', '597': 'test_subclasses(test_kernelmanager.py)', '703': 'AsyncKernelManagerWithCleanup(utils.py)', '595': 'test_signal_kernel_subprocesses(test_kernelmanager.py)', '598': 'execute(test_kernelmanager.py)', '702': 'AsyncKernelManagerSubclass(utils.py)', '591': 'transport(test_kernelmanager.py)', '606': 'test_templated_kspec_env(test_kernelmanager.py)', '599': '_env_test_body(test_kernelmanager.py)', '607': 'execute(test_kernelmanager.py)', '604': 'test_signal_kernel_subprocesses(test_kernelmanager.py)', '608': 'execute(test_kernelmanager.py)', '586': 'env(test_kernelmanager.py)', '712': 'stop(utils.py)', '711': 'start(utils.py)', '705': 'test_env(utils.py)', '630': 'test_validate_kernel_name(test_kernelspec.py)', '506': 'SignalTestApp(signalkernel.py)', '507': 'SignalTestKernel(signalkernel.py)', '627': 'test_remove_kernel_spec(test_kernelspec.py)', '617': '_install_sample_kernel(test_kernelspec.py)', '626': 'test_kernel_spec_priority(test_kernelspec.py)', '651': 'test_tcp_cinfo(test_multikernelmanager.py)', '640': '_run_cinfo(test_multikernelmanager.py)', '621': 'test_find_all_specs(test_kernelspec.py)', '622': 'test_find_kernel_specs(test_kernelspec.py)', '623': 'test_get_kernel_spec(test_kernelspec.py)', '619': 'tearDown(test_kernelspec.py)', '618': 'setUp(test_kernelspec.py)', '649': 'test_start_sequence_ipc_kernels(test_multikernelmanager.py)', '641': '_run_lifecycle(test_multikernelmanager.py)', '650': 'test_start_sequence_tcp_kernels(test_multikernelmanager.py)', '644': 'test_ipc_cinfo(test_multikernelmanager.py)', '315': 'localhost(localinterfaces.py)', '645': 'test_ipc_lifecycle(test_multikernelmanager.py)', '665': 'test_start_sequence_tcp_kernels(test_multikernelmanager.py)', '656': '_run_cinfo(test_multikernelmanager.py)', '666': 'test_tcp_cinfo(test_multikernelmanager.py)', '668': 'test_tcp_lifecycle_with_kernel_id(test_multikernelmanager.py)', '569': 'test_secure_write(test_connect.py)', '573': 'check_user_only_permissions(test_connect.py)', '574': 'fetch_win32_permissions(test_connect.py)', '563': 'test_find_connection_file_relative(test_connect.py)', '561': 'test_find_connection_file_abspath(test_connect.py)', '560': 'test_find_connection_file(test_connect.py)', '565': 'test_load_connection_file_session_with_kn(test_connect.py)', '539': 'test_input_request(test_adapter.py)', '564': 'test_load_connection_file_session(test_connect.py)', '537': 'test_display_data(test_adapter.py)', '540': 'test_inspect_reply(test_adapter.py)', '543': 'test_kernel_info_reply(test_adapter.py)', '542': 'test_inspect_request_token(test_adapter.py)', '535': 'test_complete_reply(test_adapter.py)', '541': 'test_inspect_request(test_adapter.py)', '538': 'test_execute_request(test_adapter.py)', '545': 'test_rename_type(test_adapter.py)', '544': 'test_no_adapt(test_adapter.py)', '546': 'test_same_version(test_adapter.py)', '514': 'V5toV4TestCase(test_adapter.py)', '512': 'AdapterTest(test_adapter.py)', '526': 'test_input_request(test_adapter.py)', '523': 'test_display_data(test_adapter.py)', '527': 'test_kernel_info_reply(test_adapter.py)', '530': 'test_object_info_reply_not_found(test_adapter.py)', '529': 'test_object_info_reply(test_adapter.py)', '531': 'test_object_info_request(test_adapter.py)', '521': 'test_complete_reply(test_adapter.py)', '522': 'test_complete_request(test_adapter.py)', '524': 'test_execute_reply(test_adapter.py)', '532': 'test_rename_type(test_adapter.py)', '525': 'test_execute_request(test_adapter.py)', '528': 'test_no_adapt(test_adapter.py)', '533': 'test_same_version(test_adapter.py)', '513': 'V4toV5TestCase(test_adapter.py)', '519': 'setUp(test_adapter.py)', '516': 'test_default_version(test_adapter.py)', '515': 'test_code_to_line_no_code(test_adapter.py)', '51': 'code_to_line(adapter.py)', '158': 'get_shell_msg(client.py)', '157': 'get_iopub_msg(client.py)', '710': '__exit__(utils.py)', '709': '__enter__(utils.py)', '580': 'test_kernelapp_lifecycle(test_kernelapp.py)', '579': '_launch(test_kernelapp.py)', '686': 'test_clone(test_session.py)', '473': 'clone(session.py)', '481': 'send_raw(session.py)', '683': 'test_bad_roundtrip(test_session.py)', '685': 'test_bad_unpacker(test_session.py)', '682': 'test_bad_packer(test_session.py)', '681': 'test_bad_pack(test_session.py)', '675': '_bad_packer(test_session.py)', '687': 'test_cull_digest_history(test_session.py)', '700': 'test_zero_digest_history(test_session.py)', '697': 'test_session_id(test_session.py)', '699': 'test_unique_msg_ids(test_session.py)', '445': 'msg_header(session.py)', '680': 'test_args(test_session.py)', '478': 'msg_id(session.py)', '674': 'TestSession(test_session.py)', '673': 'SessionTestCase(test_session.py)', '678': 'setUp(test_session.py)', '556': 'test_shutdown(test_client.py)', '548': '_check_reply(test_client.py)', '550': 'test_comm_info(test_client.py)', '555': 'test_kernel_info(test_client.py)', '551': 'test_complete(test_client.py)', '554': 'test_inspect(test_client.py)', '553': 'test_history(test_client.py)', '549': 'setUp(test_client.py)', '255': 'NoSuchKernel(kernelspec.py)', '117': 'reqrep(client.py)', '124': 'wrapped(client.py)', '150': '_handle_kernel_info_reply(client.py)', '125': 'HBChannel(channels.py)', '102': 'hb_channel(client.py)', '196': '_make_url(connect.py)', '91': 'reqrep(client.py)', '105': 'wrapped(client.py)', '80': 'ZMQSocketChannel(channels.py)', '154': 'control_channel(client.py)', '723': 'ioloop(threaded.py)', '160': 'hb_channel(client.py)', '171': 'stdin_channel(client.py)', '164': 'iopub_channel(client.py)', '168': 'shell_channel(client.py)', '740': 'send_interrupt(win_interrupt.py)', '334': '__del__(manager.py)', '293': 'start(kernelspecapp.py)', '294': 'path_key(kernelspecapp.py)', '735': 'start(threaded.py)', '720': 'start(threaded.py)', '141': 'start(channelsabc.py)', '432': 'start(restarter.py)', '288': 'start(kernelspecapp.py)', '89': 'start(channels.py)', '115': 'start(channels.py)', '290': 'start(kernelspecapp.py)', '438': 'parse_command_line(runapp.py)', '218': 'build_kernel_argv(consoleapp.py)', '308': '_only_once(localinterfaces.py)', '317': 'wrapped(localinterfaces.py)', '47': 'V4toV5(adapter.py)', '46': 'Adapter(adapter.py)', '77': 'object_info_request(adapter.py)', '52': 'extract_oname_v4(adapter.py)', '70': 'complete_request(adapter.py)', '75': 'kernel_info_reply(adapter.py)', '49': '_version_str_to_list(adapter.py)', '48': 'V5toV4(adapter.py)', '53': '__call__(adapter.py)', '54': 'handle_reply_status_error(adapter.py)', '57': 'update_msg_type(adapter.py)', '56': 'update_metadata(adapter.py)', '55': 'update_header(adapter.py)', '247': 'initialize(kernelapp.py)', '246': '_record_started(kernelapp.py)', '585': 'config(test_kernelmanager.py)', '262': 'install_native_kernel_spec(kernelspec.py)', '276': 'install_native_kernel_spec(kernelspec.py)', '265': 'to_json(kernelspec.py)', '264': 'to_dict(kernelspec.py)', '449': 'test_msg2obj(session.py)', '453': '__init__(session.py)', '470': '_signature_scheme_changed(session.py)', '463': '_key_default(session.py)', '447': 'new_id_bytes(session.py)', '462': '_key_changed(session.py)', '443': 'default_secure(session.py)', '469': '_session_default(session.py)', '446': 'new_id(session.py)', '412': 'is_alive(multikernelmanager.py)', '420': 'shutdown_all(multikernelmanager.py)', '413': 'list_kernel_ids(multikernelmanager.py)', '721': 'stop(threaded.py)', '140': 'is_alive(channelsabc.py)', '732': 'is_alive(threaded.py)', '112': 'is_alive(channels.py)', '86': 'is_alive(channels.py)', '724': 'start_channels(threaded.py)', '722': '_check_kernel_info_reply(threaded.py)', '716': '__init__(threaded.py)', '387': 'shutdown_kernel(multikernelmanager.py)', '416': 'remove_kernel(multikernelmanager.py)', '713': 'IOLoopThread(threaded.py)', '714': 'ThreadedKernelClient(threaded.py)', '715': 'ThreadedZMQSocketChannel(threaded.py)', '731': 'flush(threaded.py)', '727': '_flush(threaded.py)', '386': 'shutdown_all(multikernelmanager.py)', '418': 'request_shutdown(multikernelmanager.py)', '402': 'cleanup_resources(multikernelmanager.py)', '408': 'finish_shutdown(multikernelmanager.py)', '393': '__len__(multikernelmanager.py)', '421': 'shutdown_kernel(multikernelmanager.py)', '198': '_session_default(connect.py)', '298': 'launch_kernel(launcher.py)', '739': 'create_interrupt_event(win_interrupt.py)', '741': 'SECURITY_ATTRIBUTES(win_interrupt.py)', '509': '__init__(signalkernel.py)', '278': '__init__(kernelspec.py)', '127': '__init__(channels.py)', '126': 'InvalidPortNumber(channels.py)', '107': '__init__(channels.py)', '81': '__init__(channels.py)', '726': '__init__(threaded.py)', '737': 'setup_stream(threaded.py)', '728': '_handle_recv(threaded.py)', '729': 'call_handlers(threaded.py)', '136': 'stop(channels.py)', '133': 'is_beating(channels.py)', '145': 'time_to_dead(channelsabc.py)', '131': 'call_handlers(channels.py)', '130': '_poll(channels.py)'}}, {'key': 763, 'parent': 1524, 'tfidf_word': 'EP: 763, Name: test_send &rarr; msg &rarr; msg &rarr; msg &rarr; msg_header &rarr; msg_id', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1522, 'parent': 1524, 'tfidf_word': 'header id test complete interrupt kernel serialize msg ', 'tfidf_method': 'msg msg_header msg_id msg msg is_complete interrupt_kernel test_msg test_serialize ', 'lda_word': ' msg,header,test,serialize,complete,', 'lda_method': ' msg,msg_id,msg_header,test_serialize,test_msg,', 'lsi_word': ' msg,header,test,serialize,interrupt,', 'lsi_method': ' msg,msg_id,msg_header,interrupt_kernel,is_complete,', 'spm_method': ' ', 'text_summary': '', 'files_count': 5, 'files': ['test_session.py', 'test_adapter.py', 'session.py', 'manager.py', 'client.py'], 'execution_path_count': 4, 'function_id_to_name_file': {'696': 'test_serialize(test_session.py)', '520': 'msg(test_adapter.py)', '534': 'msg(test_adapter.py)', '476': 'msg(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '693': 'test_msg(test_session.py)', '328': 'interrupt_kernel(manager.py)', '166': 'is_complete(client.py)'}}, {'key': 769, 'parent': 1525, 'tfidf_word': 'EP: 769, Name: test_send &rarr; msg &rarr; msg &rarr; msg &rarr; msg_header &rarr; msg_id', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1523, 'parent': 1525, 'tfidf_word': 'header id test complete interrupt kernel serialize msg ', 'tfidf_method': 'msg msg_header msg_id msg msg is_complete interrupt_kernel test_msg test_serialize ', 'lda_word': ' msg,header,test,serialize,complete,', 'lda_method': ' msg,msg_header,msg_id,is_complete,test_msg,', 'lsi_word': ' msg,header,test,serialize,kernel,', 'lsi_method': ' msg,msg_header,msg_id,is_complete,interrupt_kernel,', 'spm_method': ' ', 'text_summary': '', 'files_count': 5, 'files': ['test_session.py', 'test_adapter.py', 'session.py', 'manager.py', 'client.py'], 'execution_path_count': 4, 'function_id_to_name_file': {'696': 'test_serialize(test_session.py)', '534': 'msg(test_adapter.py)', '520': 'msg(test_adapter.py)', '476': 'msg(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '693': 'test_msg(test_session.py)', '328': 'interrupt_kernel(manager.py)', '166': 'is_complete(client.py)'}}, {'key': 54, 'parent': 2097, 'tfidf_word': 'EP: 54, Name: tunnel_to_kernel &rarr; select_random_ports &rarr; close', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 55, 'parent': 2097, 'tfidf_word': 'EP: 55, Name: tunnel_to_kernel &rarr; select_random_ports &rarr; ports', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 876, 'parent': 2165, 'tfidf_word': 'EP: 876, Name: test_random_ports &rarr; select_random_ports &rarr; close', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 877, 'parent': 2165, 'tfidf_word': 'EP: 877, Name: test_random_ports &rarr; select_random_ports &rarr; ports', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 82, 'parent': 2104, 'tfidf_word': 'EP: 82, Name: shutdown_kernel &rarr; get_kernel &rarr; _check_kernel_id', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2102, 'parent': 2104, 'tfidf_word': 'check get id shutdown kernel ', 'tfidf_method': '_check_kernel_id get_kernel shutdown_all shutdown_kernel ', 'lda_word': ' kernel,check,get,shutdown,', 'lda_method': ' check_kernel_id,get_kernel,shutdown_all,shutdown_kernel,', 'lsi_word': ' kernel,check,get,shutdown,', 'lsi_method': ' check_kernel_id,get_kernel,shutdown_kernel,shutdown_all,', 'spm_method': ' ', 'text_summary': 'Shutdown all kernels. check that a kernel id is valid.', 'files_count': 1, 'files': ['multikernelmanager.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'421': 'shutdown_kernel(multikernelmanager.py)', '410': 'get_kernel(multikernelmanager.py)', '394': '_check_kernel_id(multikernelmanager.py)', '420': 'shutdown_all(multikernelmanager.py)'}}, {'key': 588, 'parent': 2132, 'tfidf_word': 'EP: 588, Name: wait_for_ready &rarr; is_alive &rarr; is_alive', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2131, 'parent': 2132, 'tfidf_word': 'ready wait alive ', 'tfidf_method': 'is_alive wait_for_ready is_alive is_alive ', 'lda_word': ' alive,ready,wait,', 'lda_method': ' is_alive,wait_for_ready,', 'lsi_word': ' alive,ready,wait,', 'lsi_method': ' is_alive,wait_for_ready,', 'spm_method': ' ', 'text_summary': '', 'files_count': 2, 'files': ['client.py', 'channels.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'104': 'wait_for_ready(client.py)', '103': 'is_alive(client.py)', '86': 'is_alive(channels.py)', '112': 'is_alive(channels.py)'}}, {'key': 702, 'parent': 2063, 'tfidf_word': 'EP: 702, Name: wait_for_ready &rarr; is_alive &rarr; is_alive', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 703, 'parent': 2063, 'tfidf_word': 'EP: 703, Name: wait_for_ready &rarr; is_alive &rarr; is_alive', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 701, 'parent': 2146, 'tfidf_word': 'EP: 701, Name: wait_for_ready &rarr; is_alive &rarr; is_alive', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2145, 'parent': 2146, 'tfidf_word': 'ready wait alive ', 'tfidf_method': 'wait_for_ready is_alive is_alive is_alive is_alive ', 'lda_word': ' alive,wait,ready,', 'lda_method': ' is_alive,wait_for_ready,', 'lsi_word': ' alive,ready,wait,', 'lsi_method': ' is_alive,wait_for_ready,', 'spm_method': ' ', 'text_summary': '', 'files_count': 3, 'files': ['client.py', 'threaded.py', 'channels.py'], 'execution_path_count': 3, 'function_id_to_name_file': {'123': 'wait_for_ready(client.py)', '165': 'is_alive(client.py)', '732': 'is_alive(threaded.py)', '86': 'is_alive(channels.py)', '112': 'is_alive(channels.py)'}}, {'key': 1954, 'parent': 2385, 'tfidf_word': 'loop parallel raw run start test process thread tcp lifecycle ', 'tfidf_method': '_run_lifecycle raw_tcp_lifecycle tcp_lifecycle_with_loop test_start_parallel_process_kernels test_start_parallel_thread_kernels ', 'lda_word': ' lifecycle,tcp,test,parallel,raw,', 'lda_method': ' tcp_lifecycle_with_loop,raw_tcp_lifecycle,test_start_parallel_process_kernels,run_lifecycle,test_start_parallel_thread_kernels,', 'lsi_word': ' lifecycle,tcp,kernel,start,test,', 'lsi_method': ' run_lifecycle,tcp_lifecycle_with_loop,raw_tcp_lifecycle,test_start_parallel_thread_kernels,test_start_parallel_process_kernels,', 'spm_method': ' ', 'text_summary': '', 'files_count': 1, 'files': ['test_multikernelmanager.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'648': 'test_start_parallel_thread_kernels(test_multikernelmanager.py)', '643': 'tcp_lifecycle_with_loop(test_multikernelmanager.py)', '642': 'raw_tcp_lifecycle(test_multikernelmanager.py)', '641': '_run_lifecycle(test_multikernelmanager.py)', '647': 'test_start_parallel_process_kernels(test_multikernelmanager.py)'}}, {'key': 2197, 'parent': 2385, 'tfidf_word': 'run test kernel parallel start tcp id process thread lifecycle ', 'tfidf_method': '_run_lifecycle raw_tcp_lifecycle test_start_parallel_process_kernels test_start_parallel_thread_kernels test_tcp_lifecycle test_tcp_lifecycle_with_kernel_id ', 'lda_word': ' lifecycle,test,tcp,run,raw,', 'lda_method': ' raw_tcp_lifecycle,run_lifecycle,test_start_parallel_thread_kernels,test_tcp_lifecycle_with_kernel_id,test_start_parallel_process_kernels,', 'lsi_word': ' lifecycle,tcp,run,raw,test,', 'lsi_method': ' raw_tcp_lifecycle,run_lifecycle,test_tcp_lifecycle_with_kernel_id,test_tcp_lifecycle,test_start_parallel_process_kernels,', 'spm_method': ' ', 'text_summary': '', 'files_count': 1, 'files': ['test_multikernelmanager.py'], 'execution_path_count': 4, 'function_id_to_name_file': {'647': 'test_start_parallel_process_kernels(test_multikernelmanager.py)', '642': 'raw_tcp_lifecycle(test_multikernelmanager.py)', '641': '_run_lifecycle(test_multikernelmanager.py)', '648': 'test_start_parallel_thread_kernels(test_multikernelmanager.py)', '652': 'test_tcp_lifecycle(test_multikernelmanager.py)', '653': 'test_tcp_lifecycle_with_kernel_id(test_multikernelmanager.py)'}}, {'key': 2386, 'parent': 2756, 'tfidf_word': 'deserialize sign test send recv handle raw serialize unserialize ', 'tfidf_method': 'deserialize sign recv test_send unserialize handle test_send_raw test_serialize ', 'lda_word': ' deserialize,send,sign,recv,test,', 'lda_method': ' sign,deserialize,test_send,test_send_raw,recv,', 'lsi_word': ' deserialize,sign,test,send,recv,', 'lsi_method': ' sign,deserialize,recv,test_send,handle,', 'spm_method': ' ', 'text_summary': 'Receive and unpack a message. Sign a message with HMAC digest.', 'files_count': 3, 'files': ['test_session.py', 'session.py', 'forward.py'], 'execution_path_count': 6, 'function_id_to_name_file': {'694': 'test_send(test_session.py)', '479': 'recv(session.py)', '474': 'deserialize(session.py)', '483': 'sign(session.py)', '492': 'handle(forward.py)', '695': 'test_send_raw(test_session.py)', '484': 'unserialize(session.py)', '696': 'test_serialize(test_session.py)'}}, {'key': 2755, 'parent': 2756, 'tfidf_word': 'manager loop flush native permission io cleanup code restarter tunnel ', 'tfidf_method': 'test_shutdown __len__ update_metadata test_find_connection_file test_find_connection_file_abspath test_find_connection_file_local test_find_connection_file_relative test_load_connection_file_session test_mixin_record_random_ports test_complete_reply ', 'lda_word': ' start,kernel,test,run,reply,', 'lda_method': ' start,session,recv,get_msg,install_kernel_spec,', 'lsi_word': ' kernel,test,start,manager,install,', 'lsi_method': ' init,check_packers,utcnow,get_ipc_km,new_auth,', 'spm_method': ' ', 'text_summary': "Subclasses may override  Prepares a kernel for startup in a separate process. Prepares a kernel for startup in a separate process. return ip for localhost (almost always 127.0.0.1)   Ensure that a sequence of kernel startups doesn't break anything. Pass a message to the ZMQ socket to send. Return the connection info as a dict. Subclasses may override Start the polling of the kernel. Ensure that a sequence of kernel startups doesn't break anything. find a connection file, and return its absolute path. return ip for localhost (almost always 127.0.0.1)      find a connection file, and return its absolute path. tunnel connections to a kernel via ssh. test load_connection_file() after. handle kernel info reply. Get the hb channel object for this kernel. Send a raw message via ident path. Returns the id to associate with the kernel for this request. Make a blocking client connected to my kernel. Get a message from the stdin channel. Immediately processes all pending messages on this channel. Return the number of running kernels. Interrupts the kernel by sending it a signal. Get a message from the shell channel. Create an ssh tunnel using command-line ssh that connects port lport. This is run in the ioloop thread when the kernel info reply is received. default function for packing datetime objects in JSON. Start the polling of the kernel. Send a shutdown request via control channel. Get a message from the iopub channel. test that messages receive unique ids.", 'files_count': 34, 'files': ['forward.py', 'session.py', 'test_session.py', 'manager.py', 'channels.py', 'threaded.py', 'client.py', 'test_kernelspec.py', 'kernelspec.py', 'test_kernelmanager.py', 'multikernelmanager.py', 'consoleapp.py', 'jsonutil.py', 'channelsabc.py', 'connect.py', 'test_manager.py', 'test_multikernelmanager.py', 'utils.py', 'restarter.py', 'signalkernel.py', 'tunnel.py', 'test_connect.py', 'kernelspecapp.py', 'kernelapp.py', 'managerabc.py', 'test_adapter.py', 'test_jsonutil.py', 'localinterfaces.py', 'adapter.py', 'test_kernelapp.py', 'test_client.py', 'win_interrupt.py', 'runapp.py', 'launcher.py'], 'execution_path_count': 333, 'function_id_to_name_file': {'492': 'handle(forward.py)', '480': 'send(session.py)', '440': 'Message(session.py)', '698': 'test_tracking(test_session.py)', '328': 'interrupt_kernel(manager.py)', '694': 'test_send(test_session.py)', '696': 'test_serialize(test_session.py)', '482': 'serialize(session.py)', '483': 'sign(session.py)', '135': 'run(channels.py)', '128': '_create_socket(channels.py)', '718': 'close(threaded.py)', '730': 'close(threaded.py)', '132': 'close(channels.py)', '83': 'close(channels.py)', '109': 'close(channels.py)', '123': 'wait_for_ready(client.py)', '84': 'get_msg(channels.py)', '82': '_recv(channels.py)', '104': 'wait_for_ready(client.py)', '101': 'get_stdin_msg(client.py)', '85': 'get_msgs(channels.py)', '99': 'get_iopub_msg(client.py)', '110': 'get_msg(channels.py)', '108': '_recv(channels.py)', '111': 'get_msgs(channels.py)', '620': 'test_cant_install_kernel_spec(test_kernelspec.py)', '275': 'install_kernel_spec(kernelspec.py)', '268': '_get_destination_dir(kernelspec.py)', '257': '_is_valid_kernel_name(kernelspec.py)', '625': 'test_install_kernel_spec_prefix(test_kernelspec.py)', '261': 'install_kernel_spec(kernelspec.py)', '624': 'test_install_kernel_spec(test_kernelspec.py)', '614': 'test_start_sequence_process_kernels(test_kernelmanager.py)', '610': '_run_signaltest_lifecycle(test_kernelmanager.py)', '615': 'execute(test_kernelmanager.py)', '609': '_prepare_kernel(test_kernelmanager.py)', '611': 'test_start_parallel_process_kernels(test_kernelmanager.py)', '613': 'test_start_sequence_kernels(test_kernelmanager.py)', '612': 'test_start_parallel_thread_kernels(test_kernelmanager.py)', '398': '_kernel_manager_class_changed(multikernelmanager.py)', '396': '_create_kernel_manager_factory(multikernelmanager.py)', '424': 'create_kernel_manager(multikernelmanager.py)', '397': '_find_available_port(multikernelmanager.py)', '395': '_context_default(multikernelmanager.py)', '399': '_kernel_manager_factory_default(multikernelmanager.py)', '215': '__init__(consoleapp.py)', '485': '__init__(session.py)', '441': 'Session(session.py)', '457': '__init__(session.py)', '465': '_new_auth(session.py)', '459': '_check_packers(session.py)', '450': 'utcnow(session.py)', '244': 'squash_dates(jsonutil.py)', '90': 'AsyncKernelClient(client.py)', '147': 'KernelClient(client.py)', '139': 'HBChannelABC(channelsabc.py)', '138': 'ChannelABC(channelsabc.py)', '116': 'BlockingKernelClient(client.py)', '188': 'ConnectionFileMixin(connect.py)', '322': 'start_new_async_kernel(manager.py)', '319': 'AsyncKernelManager(manager.py)', '320': 'KernelManager(manager.py)', '224': 'AsyncIOLoopKernelManager(manager.py)', '225': 'IOLoopKernelManager(manager.py)', '635': 'test_connection_file_real_path(test_manager.py)', '663': 'test_start_parallel_thread_kernels(test_multikernelmanager.py)', '658': 'tcp_lifecycle_with_loop(test_multikernelmanager.py)', '667': 'test_tcp_lifecycle(test_multikernelmanager.py)', '657': '_run_lifecycle(test_multikernelmanager.py)', '662': 'test_start_parallel_process_kernels(test_multikernelmanager.py)', '704': 'execute(utils.py)', '155': 'execute(client.py)', '148': 'validate_string_dict(client.py)', '689': 'test_datetimes_msgpack(test_session.py)', '679': '_datetime_test(test_session.py)', '688': 'test_datetimes(test_session.py)', '690': 'test_datetimes_pickle(test_session.py)', '734': 'send(threaded.py)', '738': 'thread_send(threaded.py)', '664': 'test_start_sequence_ipc_kernels(test_multikernelmanager.py)', '654': '_get_ipc_km(test_multikernelmanager.py)', '392': '__init__(multikernelmanager.py)', '660': 'test_ipc_lifecycle(test_multikernelmanager.py)', '659': 'test_ipc_cinfo(test_multikernelmanager.py)', '423': 'start_kernel(multikernelmanager.py)', '415': 'pre_start_kernel(multikernelmanager.py)', '380': 'DuplicateKernelError(multikernelmanager.py)', '414': 'new_kernel_id(multikernelmanager.py)', '389': 'start_kernel(multikernelmanager.py)', '238': 'start(restarter.py)', '430': 'poll(restarter.py)', '433': 'stop(restarter.py)', '428': '_fire_callbacks(restarter.py)', '510': 'do_execute(signalkernel.py)', '190': 'tunnel_to_kernel(connect.py)', '501': 'openssh_tunnel(tunnel.py)', '494': 'SSHException(tunnel.py)', '497': '_stop_tunnel(tunnel.py)', '479': 'recv(session.py)', '475': 'feed_identities(session.py)', '330': 'restart_kernel(manager.py)', '202': 'cleanup_random_ports(connect.py)', '200': 'cleanup_connection_file(connect.py)', '567': 'test_mixin_cleanup_random_ports(test_connect.py)', '106': 'ZMQSocketChannel(channels.py)', '226': 'as_zmqstream(manager.py)', '233': 'wrapped(manager.py)', '568': 'test_mixin_record_random_ports(test_connect.py)', '557': 'DummyConfigurable(test_connect.py)', '235': 'IOLoopKernelRestarter(restarter.py)', '426': 'KernelRestarter(restarter.py)', '234': 'AsyncIOLoopKernelRestarter(restarter.py)', '291': 'start(kernelspecapp.py)', '251': 'start(kernelapp.py)', '249': 'setup_signals(kernelapp.py)', '252': 'shutdown_handler(kernelapp.py)', '250': 'shutdown(kernelapp.py)', '248': 'log_connection_info(kernelapp.py)', '199': 'blocking_client(connect.py)', '208': 'get_connection_info(connect.py)', '725': 'stop_channels(threaded.py)', '373': 'is_alive(managerabc.py)', '684': 'test_bad_unpack(test_session.py)', '676': '_bad_unpacker(test_session.py)', '536': 'test_complete_request(test_adapter.py)', '517': 'adapt(test_adapter.py)', '562': 'test_find_connection_file_local(test_connect.py)', '189': 'find_connection_file(connect.py)', '493': 'SubHander(forward.py)', '490': 'Handler(forward.py)', '253': 'KernelSpec(kernelspec.py)', '114': 'send(channels.py)', '88': 'send(channels.py)', '575': 'test_date_default(test_jsonutil.py)', '241': 'date_default(jsonutil.py)', '240': '_ensure_tzinfo(jsonutil.py)', '597': 'test_subclasses(test_kernelmanager.py)', '703': 'AsyncKernelManagerWithCleanup(utils.py)', '595': 'test_signal_kernel_subprocesses(test_kernelmanager.py)', '598': 'execute(test_kernelmanager.py)', '702': 'AsyncKernelManagerSubclass(utils.py)', '591': 'transport(test_kernelmanager.py)', '606': 'test_templated_kspec_env(test_kernelmanager.py)', '599': '_env_test_body(test_kernelmanager.py)', '607': 'execute(test_kernelmanager.py)', '604': 'test_signal_kernel_subprocesses(test_kernelmanager.py)', '608': 'execute(test_kernelmanager.py)', '586': 'env(test_kernelmanager.py)', '712': 'stop(utils.py)', '711': 'start(utils.py)', '705': 'test_env(utils.py)', '630': 'test_validate_kernel_name(test_kernelspec.py)', '506': 'SignalTestApp(signalkernel.py)', '507': 'SignalTestKernel(signalkernel.py)', '627': 'test_remove_kernel_spec(test_kernelspec.py)', '617': '_install_sample_kernel(test_kernelspec.py)', '626': 'test_kernel_spec_priority(test_kernelspec.py)', '651': 'test_tcp_cinfo(test_multikernelmanager.py)', '640': '_run_cinfo(test_multikernelmanager.py)', '621': 'test_find_all_specs(test_kernelspec.py)', '622': 'test_find_kernel_specs(test_kernelspec.py)', '623': 'test_get_kernel_spec(test_kernelspec.py)', '619': 'tearDown(test_kernelspec.py)', '618': 'setUp(test_kernelspec.py)', '649': 'test_start_sequence_ipc_kernels(test_multikernelmanager.py)', '641': '_run_lifecycle(test_multikernelmanager.py)', '650': 'test_start_sequence_tcp_kernels(test_multikernelmanager.py)', '644': 'test_ipc_cinfo(test_multikernelmanager.py)', '315': 'localhost(localinterfaces.py)', '645': 'test_ipc_lifecycle(test_multikernelmanager.py)', '665': 'test_start_sequence_tcp_kernels(test_multikernelmanager.py)', '656': '_run_cinfo(test_multikernelmanager.py)', '666': 'test_tcp_cinfo(test_multikernelmanager.py)', '668': 'test_tcp_lifecycle_with_kernel_id(test_multikernelmanager.py)', '569': 'test_secure_write(test_connect.py)', '573': 'check_user_only_permissions(test_connect.py)', '574': 'fetch_win32_permissions(test_connect.py)', '563': 'test_find_connection_file_relative(test_connect.py)', '561': 'test_find_connection_file_abspath(test_connect.py)', '560': 'test_find_connection_file(test_connect.py)', '565': 'test_load_connection_file_session_with_kn(test_connect.py)', '539': 'test_input_request(test_adapter.py)', '564': 'test_load_connection_file_session(test_connect.py)', '537': 'test_display_data(test_adapter.py)', '540': 'test_inspect_reply(test_adapter.py)', '543': 'test_kernel_info_reply(test_adapter.py)', '542': 'test_inspect_request_token(test_adapter.py)', '535': 'test_complete_reply(test_adapter.py)', '541': 'test_inspect_request(test_adapter.py)', '538': 'test_execute_request(test_adapter.py)', '545': 'test_rename_type(test_adapter.py)', '544': 'test_no_adapt(test_adapter.py)', '546': 'test_same_version(test_adapter.py)', '514': 'V5toV4TestCase(test_adapter.py)', '512': 'AdapterTest(test_adapter.py)', '526': 'test_input_request(test_adapter.py)', '523': 'test_display_data(test_adapter.py)', '527': 'test_kernel_info_reply(test_adapter.py)', '530': 'test_object_info_reply_not_found(test_adapter.py)', '529': 'test_object_info_reply(test_adapter.py)', '531': 'test_object_info_request(test_adapter.py)', '521': 'test_complete_reply(test_adapter.py)', '522': 'test_complete_request(test_adapter.py)', '524': 'test_execute_reply(test_adapter.py)', '532': 'test_rename_type(test_adapter.py)', '525': 'test_execute_request(test_adapter.py)', '528': 'test_no_adapt(test_adapter.py)', '533': 'test_same_version(test_adapter.py)', '513': 'V4toV5TestCase(test_adapter.py)', '519': 'setUp(test_adapter.py)', '516': 'test_default_version(test_adapter.py)', '515': 'test_code_to_line_no_code(test_adapter.py)', '51': 'code_to_line(adapter.py)', '158': 'get_shell_msg(client.py)', '157': 'get_iopub_msg(client.py)', '710': '__exit__(utils.py)', '709': '__enter__(utils.py)', '580': 'test_kernelapp_lifecycle(test_kernelapp.py)', '579': '_launch(test_kernelapp.py)', '686': 'test_clone(test_session.py)', '473': 'clone(session.py)', '695': 'test_send_raw(test_session.py)', '481': 'send_raw(session.py)', '683': 'test_bad_roundtrip(test_session.py)', '685': 'test_bad_unpacker(test_session.py)', '682': 'test_bad_packer(test_session.py)', '681': 'test_bad_pack(test_session.py)', '675': '_bad_packer(test_session.py)', '687': 'test_cull_digest_history(test_session.py)', '700': 'test_zero_digest_history(test_session.py)', '697': 'test_session_id(test_session.py)', '699': 'test_unique_msg_ids(test_session.py)', '445': 'msg_header(session.py)', '680': 'test_args(test_session.py)', '478': 'msg_id(session.py)', '674': 'TestSession(test_session.py)', '673': 'SessionTestCase(test_session.py)', '678': 'setUp(test_session.py)', '556': 'test_shutdown(test_client.py)', '548': '_check_reply(test_client.py)', '550': 'test_comm_info(test_client.py)', '555': 'test_kernel_info(test_client.py)', '551': 'test_complete(test_client.py)', '554': 'test_inspect(test_client.py)', '553': 'test_history(test_client.py)', '549': 'setUp(test_client.py)', '255': 'NoSuchKernel(kernelspec.py)', '117': 'reqrep(client.py)', '124': 'wrapped(client.py)', '150': '_handle_kernel_info_reply(client.py)', '125': 'HBChannel(channels.py)', '102': 'hb_channel(client.py)', '196': '_make_url(connect.py)', '91': 'reqrep(client.py)', '105': 'wrapped(client.py)', '80': 'ZMQSocketChannel(channels.py)', '154': 'control_channel(client.py)', '723': 'ioloop(threaded.py)', '160': 'hb_channel(client.py)', '171': 'stdin_channel(client.py)', '164': 'iopub_channel(client.py)', '168': 'shell_channel(client.py)', '740': 'send_interrupt(win_interrupt.py)', '334': '__del__(manager.py)', '293': 'start(kernelspecapp.py)', '294': 'path_key(kernelspecapp.py)', '735': 'start(threaded.py)', '720': 'start(threaded.py)', '141': 'start(channelsabc.py)', '432': 'start(restarter.py)', '288': 'start(kernelspecapp.py)', '89': 'start(channels.py)', '115': 'start(channels.py)', '290': 'start(kernelspecapp.py)', '438': 'parse_command_line(runapp.py)', '218': 'build_kernel_argv(consoleapp.py)', '308': '_only_once(localinterfaces.py)', '317': 'wrapped(localinterfaces.py)', '47': 'V4toV5(adapter.py)', '46': 'Adapter(adapter.py)', '77': 'object_info_request(adapter.py)', '52': 'extract_oname_v4(adapter.py)', '70': 'complete_request(adapter.py)', '75': 'kernel_info_reply(adapter.py)', '49': '_version_str_to_list(adapter.py)', '48': 'V5toV4(adapter.py)', '53': '__call__(adapter.py)', '54': 'handle_reply_status_error(adapter.py)', '57': 'update_msg_type(adapter.py)', '56': 'update_metadata(adapter.py)', '55': 'update_header(adapter.py)', '247': 'initialize(kernelapp.py)', '246': '_record_started(kernelapp.py)', '585': 'config(test_kernelmanager.py)', '262': 'install_native_kernel_spec(kernelspec.py)', '276': 'install_native_kernel_spec(kernelspec.py)', '265': 'to_json(kernelspec.py)', '264': 'to_dict(kernelspec.py)', '449': 'test_msg2obj(session.py)', '453': '__init__(session.py)', '470': '_signature_scheme_changed(session.py)', '463': '_key_default(session.py)', '447': 'new_id_bytes(session.py)', '462': '_key_changed(session.py)', '443': 'default_secure(session.py)', '469': '_session_default(session.py)', '446': 'new_id(session.py)', '412': 'is_alive(multikernelmanager.py)', '420': 'shutdown_all(multikernelmanager.py)', '413': 'list_kernel_ids(multikernelmanager.py)', '721': 'stop(threaded.py)', '140': 'is_alive(channelsabc.py)', '732': 'is_alive(threaded.py)', '112': 'is_alive(channels.py)', '86': 'is_alive(channels.py)', '724': 'start_channels(threaded.py)', '722': '_check_kernel_info_reply(threaded.py)', '716': '__init__(threaded.py)', '387': 'shutdown_kernel(multikernelmanager.py)', '416': 'remove_kernel(multikernelmanager.py)', '713': 'IOLoopThread(threaded.py)', '714': 'ThreadedKernelClient(threaded.py)', '715': 'ThreadedZMQSocketChannel(threaded.py)', '731': 'flush(threaded.py)', '727': '_flush(threaded.py)', '386': 'shutdown_all(multikernelmanager.py)', '418': 'request_shutdown(multikernelmanager.py)', '402': 'cleanup_resources(multikernelmanager.py)', '408': 'finish_shutdown(multikernelmanager.py)', '393': '__len__(multikernelmanager.py)', '421': 'shutdown_kernel(multikernelmanager.py)', '198': '_session_default(connect.py)', '298': 'launch_kernel(launcher.py)', '739': 'create_interrupt_event(win_interrupt.py)', '741': 'SECURITY_ATTRIBUTES(win_interrupt.py)', '509': '__init__(signalkernel.py)', '278': '__init__(kernelspec.py)', '127': '__init__(channels.py)', '126': 'InvalidPortNumber(channels.py)', '107': '__init__(channels.py)', '81': '__init__(channels.py)', '726': '__init__(threaded.py)', '737': 'setup_stream(threaded.py)', '728': '_handle_recv(threaded.py)', '729': 'call_handlers(threaded.py)', '136': 'stop(channels.py)', '133': 'is_beating(channels.py)', '145': 'time_to_dead(channelsabc.py)', '131': 'call_handlers(channels.py)', '130': '_poll(channels.py)'}}, {'key': 750, 'parent': 1522, 'tfidf_word': 'EP: 750, Name: test_serialize &rarr; msg &rarr; msg &rarr; msg &rarr; msg_header &rarr; msg_id', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1520, 'parent': 1522, 'tfidf_word': 'header id complete interrupt kernel test msg ', 'tfidf_method': 'msg msg_header msg_id msg msg is_complete interrupt_kernel test_msg ', 'lda_word': ' msg,header,complete,test,interrupt,', 'lda_method': ' msg,msg_header,msg_id,test_msg,is_complete,', 'lsi_word': ' msg,header,test,interrupt,kernel,', 'lsi_method': ' msg,msg_header,msg_id,interrupt_kernel,test_msg,', 'spm_method': ' ', 'text_summary': '', 'files_count': 5, 'files': ['test_session.py', 'test_adapter.py', 'session.py', 'manager.py', 'client.py'], 'execution_path_count': 3, 'function_id_to_name_file': {'693': 'test_msg(test_session.py)', '520': 'msg(test_adapter.py)', '534': 'msg(test_adapter.py)', '476': 'msg(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '328': 'interrupt_kernel(manager.py)', '166': 'is_complete(client.py)'}}, {'key': 754, 'parent': 1523, 'tfidf_word': 'EP: 754, Name: test_serialize &rarr; msg &rarr; msg &rarr; msg &rarr; msg_header &rarr; msg_id', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1521, 'parent': 1523, 'tfidf_word': 'header id complete interrupt kernel test msg ', 'tfidf_method': 'msg msg_header msg_id msg msg is_complete interrupt_kernel test_msg ', 'lda_word': ' msg,header,interrupt,kernel,test,', 'lda_method': ' msg,msg_id,msg_header,test_msg,interrupt_kernel,', 'lsi_word': ' msg,header,test,interrupt,kernel,', 'lsi_method': ' msg,msg_header,msg_id,test_msg,is_complete,', 'spm_method': ' ', 'text_summary': '', 'files_count': 5, 'files': ['test_session.py', 'test_adapter.py', 'session.py', 'manager.py', 'client.py'], 'execution_path_count': 3, 'function_id_to_name_file': {'693': 'test_msg(test_session.py)', '534': 'msg(test_adapter.py)', '520': 'msg(test_adapter.py)', '476': 'msg(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '328': 'interrupt_kernel(manager.py)', '166': 'is_complete(client.py)'}}, {'key': 73, 'parent': 2102, 'tfidf_word': 'EP: 73, Name: shutdown_kernel &rarr; get_kernel &rarr; _check_kernel_id', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 77, 'parent': 2102, 'tfidf_word': 'EP: 77, Name: shutdown_all &rarr; get_kernel &rarr; _check_kernel_id', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 585, 'parent': 2131, 'tfidf_word': 'EP: 585, Name: wait_for_ready &rarr; is_alive &rarr; is_alive', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 587, 'parent': 2131, 'tfidf_word': 'EP: 587, Name: wait_for_ready &rarr; is_alive &rarr; is_alive', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 700, 'parent': 2145, 'tfidf_word': 'EP: 700, Name: wait_for_ready &rarr; is_alive &rarr; is_alive', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2144, 'parent': 2145, 'tfidf_word': 'ready wait alive ', 'tfidf_method': 'wait_for_ready is_alive is_alive is_alive ', 'lda_word': ' alive,wait,ready,', 'lda_method': ' wait_for_ready,is_alive,', 'lsi_word': ' alive,ready,wait,', 'lsi_method': ' is_alive,wait_for_ready,', 'spm_method': ' ', 'text_summary': '', 'files_count': 2, 'files': ['client.py', 'channels.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'123': 'wait_for_ready(client.py)', '165': 'is_alive(client.py)', '86': 'is_alive(channels.py)', '112': 'is_alive(channels.py)'}}, {'key': 1204, 'parent': 1954, 'tfidf_word': 'EP: 1204, Name: test_start_parallel_thread_kernels &rarr; tcp_lifecycle_with_loop &rarr; raw_tcp_lifecycle &rarr; _run_lifecycle', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1210, 'parent': 1954, 'tfidf_word': 'EP: 1210, Name: test_start_parallel_process_kernels &rarr; tcp_lifecycle_with_loop &rarr; raw_tcp_lifecycle &rarr; _run_lifecycle', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1213, 'parent': 2197, 'tfidf_word': 'EP: 1213, Name: test_start_parallel_process_kernels &rarr; raw_tcp_lifecycle &rarr; _run_lifecycle', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2196, 'parent': 2197, 'tfidf_word': 'raw run test kernel tcp id parallel start thread lifecycle ', 'tfidf_method': '_run_lifecycle raw_tcp_lifecycle test_start_parallel_thread_kernels test_tcp_lifecycle test_tcp_lifecycle_with_kernel_id ', 'lda_word': ' lifecycle,tcp,test,run,raw,', 'lda_method': ' run_lifecycle,raw_tcp_lifecycle,test_start_parallel_thread_kernels,test_tcp_lifecycle,test_tcp_lifecycle_with_kernel_id,', 'lsi_word': ' lifecycle,tcp,run,test,raw,', 'lsi_method': ' run_lifecycle,raw_tcp_lifecycle,test_tcp_lifecycle_with_kernel_id,test_tcp_lifecycle,test_start_parallel_thread_kernels,', 'spm_method': ' ', 'text_summary': '', 'files_count': 1, 'files': ['test_multikernelmanager.py'], 'execution_path_count': 3, 'function_id_to_name_file': {'648': 'test_start_parallel_thread_kernels(test_multikernelmanager.py)', '642': 'raw_tcp_lifecycle(test_multikernelmanager.py)', '641': '_run_lifecycle(test_multikernelmanager.py)', '652': 'test_tcp_lifecycle(test_multikernelmanager.py)', '653': 'test_tcp_lifecycle_with_kernel_id(test_multikernelmanager.py)'}}, {'key': 1925, 'parent': 2386, 'tfidf_word': 'deserialize recv sign handle send test ', 'tfidf_method': 'deserialize recv sign handle test_send ', 'lda_word': ' recv,sign,deserialize,send,test,', 'lda_method': ' deserialize,sign,recv,handle,test_send,', 'lsi_word': ' deserialize,recv,sign,send,test,', 'lsi_method': ' recv,sign,deserialize,test_send,handle,', 'spm_method': ' ', 'text_summary': 'Sign a message with HMAC digest.', 'files_count': 3, 'files': ['test_session.py', 'session.py', 'forward.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'694': 'test_send(test_session.py)', '479': 'recv(session.py)', '474': 'deserialize(session.py)', '483': 'sign(session.py)', '492': 'handle(forward.py)'}}, {'key': 2163, 'parent': 2386, 'tfidf_word': 'deserialize sign test send raw serialize unserialize ', 'tfidf_method': 'deserialize sign unserialize test_send test_send_raw test_serialize ', 'lda_word': ' deserialize,sign,test,send,unserialize,', 'lda_method': ' deserialize,sign,unserialize,test_send,test_serialize,', 'lsi_word': ' deserialize,sign,test,send,raw,', 'lsi_method': ' sign,deserialize,test_send,test_serialize,unserialize,', 'spm_method': ' ', 'text_summary': '', 'files_count': 2, 'files': ['test_session.py', 'session.py'], 'execution_path_count': 4, 'function_id_to_name_file': {'695': 'test_send_raw(test_session.py)', '474': 'deserialize(session.py)', '483': 'sign(session.py)', '694': 'test_send(test_session.py)', '484': 'unserialize(session.py)', '696': 'test_serialize(test_session.py)'}}, {'key': 2735, 'parent': 2755, 'tfidf_word': 'sign test message send handle interrupt kernel tracking serialize ', 'tfidf_method': 'send serialize sign Message interrupt_kernel handle test_send test_tracking test_serialize ', 'lda_word': ' send,message,serialize,test,sign,', 'lda_method': ' send,message,interrupt_kernel,handle,test_send,', 'lsi_word': ' send,serialize,test,sign,message,', 'lsi_method': ' send,serialize,sign,message,handle,', 'spm_method': ' ', 'text_summary': 'test tracking messages. Pass a message to the ZMQ socket to send.', 'files_count': 4, 'files': ['forward.py', 'session.py', 'test_session.py', 'manager.py'], 'execution_path_count': 9, 'function_id_to_name_file': {'492': 'handle(forward.py)', '480': 'send(session.py)', '440': 'Message(session.py)', '698': 'test_tracking(test_session.py)', '328': 'interrupt_kernel(manager.py)', '694': 'test_send(test_session.py)', '696': 'test_serialize(test_session.py)', '482': 'serialize(session.py)', '483': 'sign(session.py)'}}, {'key': 2753, 'parent': 2755, 'tfidf_word': 'manager loop flush permission native io cleanup code restarter tunnel ', 'tfidf_method': 'shutdown_kernel update_metadata test_find_connection_file test_find_connection_file_abspath test_find_connection_file_local test_find_connection_file_relative test_load_connection_file_session test_load_connection_file_session_with_kn test_inspect test_complete_request ', 'lda_word': ' start,execute,test,port,cleanup,', 'lda_method': ' blockingkernelclient,install_kernel_spec,is_valid_kernel_name,connectionfilemixin,adapt,', 'lsi_word': ' kernel,test,start,manager,install,', 'lsi_method': ' init,check_packers,utcnow,get_ipc_km,new_auth,', 'spm_method': ' ', 'text_summary': "Subclasses may override  Prepares a kernel for startup in a separate process. Prepares a kernel for startup in a separate process. return ip for localhost (almost always 127.0.0.1)   Ensure that a sequence of kernel startups doesn't break anything. This method is called in the ioloop thread when a message arrives. Pass a message to the ZMQ socket to send. Return the connection info as a dict. Subclasses may override Start the polling of the kernel. Ensure that a sequence of kernel startups doesn't break anything. find a connection file, and return its absolute path. return ip for localhost (almost always 127.0.0.1)      find a connection file, and return its absolute path. tunnel connections to a kernel via ssh. For tests, create a file to indicate that we've started. test load_connection_file() after. handle kernel info reply. Get the hb channel object for this kernel. Send a raw message via ident path. Returns the id to associate with the kernel for this request. Make a blocking client connected to my kernel. Get a message from the stdin channel. Immediately processes all pending messages on this channel. Return the number of running kernels. Interrupts the kernel by sending it a signal. Get a message from the shell channel. Create an ssh tunnel using command-line ssh that connects port lport. This is run in the ioloop thread when the kernel info reply is received. default function for packing datetime objects in JSON. Start the polling of the kernel. Send a shutdown request via control channel. Get a message from the iopub channel. Sends an interrupt event using the specified handle. test that messages receive unique ids. Forgets randomly assigned port numbers and cleans up the connection file.", 'files_count': 34, 'files': ['channels.py', 'threaded.py', 'client.py', 'test_kernelspec.py', 'kernelspec.py', 'test_kernelmanager.py', 'multikernelmanager.py', 'consoleapp.py', 'session.py', 'jsonutil.py', 'channelsabc.py', 'connect.py', 'manager.py', 'test_manager.py', 'test_multikernelmanager.py', 'utils.py', 'test_session.py', 'forward.py', 'restarter.py', 'signalkernel.py', 'tunnel.py', 'test_connect.py', 'kernelspecapp.py', 'kernelapp.py', 'managerabc.py', 'test_adapter.py', 'test_jsonutil.py', 'localinterfaces.py', 'adapter.py', 'test_kernelapp.py', 'test_client.py', 'win_interrupt.py', 'runapp.py', 'launcher.py'], 'execution_path_count': 324, 'function_id_to_name_file': {'135': 'run(channels.py)', '128': '_create_socket(channels.py)', '718': 'close(threaded.py)', '730': 'close(threaded.py)', '132': 'close(channels.py)', '83': 'close(channels.py)', '109': 'close(channels.py)', '123': 'wait_for_ready(client.py)', '84': 'get_msg(channels.py)', '82': '_recv(channels.py)', '104': 'wait_for_ready(client.py)', '101': 'get_stdin_msg(client.py)', '85': 'get_msgs(channels.py)', '99': 'get_iopub_msg(client.py)', '110': 'get_msg(channels.py)', '108': '_recv(channels.py)', '111': 'get_msgs(channels.py)', '620': 'test_cant_install_kernel_spec(test_kernelspec.py)', '275': 'install_kernel_spec(kernelspec.py)', '268': '_get_destination_dir(kernelspec.py)', '257': '_is_valid_kernel_name(kernelspec.py)', '625': 'test_install_kernel_spec_prefix(test_kernelspec.py)', '261': 'install_kernel_spec(kernelspec.py)', '624': 'test_install_kernel_spec(test_kernelspec.py)', '614': 'test_start_sequence_process_kernels(test_kernelmanager.py)', '610': '_run_signaltest_lifecycle(test_kernelmanager.py)', '615': 'execute(test_kernelmanager.py)', '609': '_prepare_kernel(test_kernelmanager.py)', '611': 'test_start_parallel_process_kernels(test_kernelmanager.py)', '613': 'test_start_sequence_kernels(test_kernelmanager.py)', '612': 'test_start_parallel_thread_kernels(test_kernelmanager.py)', '398': '_kernel_manager_class_changed(multikernelmanager.py)', '396': '_create_kernel_manager_factory(multikernelmanager.py)', '424': 'create_kernel_manager(multikernelmanager.py)', '397': '_find_available_port(multikernelmanager.py)', '395': '_context_default(multikernelmanager.py)', '399': '_kernel_manager_factory_default(multikernelmanager.py)', '215': '__init__(consoleapp.py)', '485': '__init__(session.py)', '441': 'Session(session.py)', '457': '__init__(session.py)', '465': '_new_auth(session.py)', '459': '_check_packers(session.py)', '450': 'utcnow(session.py)', '244': 'squash_dates(jsonutil.py)', '90': 'AsyncKernelClient(client.py)', '147': 'KernelClient(client.py)', '139': 'HBChannelABC(channelsabc.py)', '138': 'ChannelABC(channelsabc.py)', '116': 'BlockingKernelClient(client.py)', '188': 'ConnectionFileMixin(connect.py)', '322': 'start_new_async_kernel(manager.py)', '319': 'AsyncKernelManager(manager.py)', '320': 'KernelManager(manager.py)', '224': 'AsyncIOLoopKernelManager(manager.py)', '225': 'IOLoopKernelManager(manager.py)', '635': 'test_connection_file_real_path(test_manager.py)', '663': 'test_start_parallel_thread_kernels(test_multikernelmanager.py)', '658': 'tcp_lifecycle_with_loop(test_multikernelmanager.py)', '667': 'test_tcp_lifecycle(test_multikernelmanager.py)', '657': '_run_lifecycle(test_multikernelmanager.py)', '662': 'test_start_parallel_process_kernels(test_multikernelmanager.py)', '704': 'execute(utils.py)', '155': 'execute(client.py)', '148': 'validate_string_dict(client.py)', '689': 'test_datetimes_msgpack(test_session.py)', '679': '_datetime_test(test_session.py)', '688': 'test_datetimes(test_session.py)', '690': 'test_datetimes_pickle(test_session.py)', '492': 'handle(forward.py)', '734': 'send(threaded.py)', '738': 'thread_send(threaded.py)', '328': 'interrupt_kernel(manager.py)', '694': 'test_send(test_session.py)', '664': 'test_start_sequence_ipc_kernels(test_multikernelmanager.py)', '654': '_get_ipc_km(test_multikernelmanager.py)', '392': '__init__(multikernelmanager.py)', '660': 'test_ipc_lifecycle(test_multikernelmanager.py)', '659': 'test_ipc_cinfo(test_multikernelmanager.py)', '423': 'start_kernel(multikernelmanager.py)', '415': 'pre_start_kernel(multikernelmanager.py)', '380': 'DuplicateKernelError(multikernelmanager.py)', '414': 'new_kernel_id(multikernelmanager.py)', '389': 'start_kernel(multikernelmanager.py)', '238': 'start(restarter.py)', '430': 'poll(restarter.py)', '433': 'stop(restarter.py)', '428': '_fire_callbacks(restarter.py)', '510': 'do_execute(signalkernel.py)', '190': 'tunnel_to_kernel(connect.py)', '501': 'openssh_tunnel(tunnel.py)', '494': 'SSHException(tunnel.py)', '497': '_stop_tunnel(tunnel.py)', '479': 'recv(session.py)', '475': 'feed_identities(session.py)', '330': 'restart_kernel(manager.py)', '202': 'cleanup_random_ports(connect.py)', '200': 'cleanup_connection_file(connect.py)', '567': 'test_mixin_cleanup_random_ports(test_connect.py)', '106': 'ZMQSocketChannel(channels.py)', '226': 'as_zmqstream(manager.py)', '233': 'wrapped(manager.py)', '568': 'test_mixin_record_random_ports(test_connect.py)', '557': 'DummyConfigurable(test_connect.py)', '235': 'IOLoopKernelRestarter(restarter.py)', '426': 'KernelRestarter(restarter.py)', '234': 'AsyncIOLoopKernelRestarter(restarter.py)', '291': 'start(kernelspecapp.py)', '251': 'start(kernelapp.py)', '249': 'setup_signals(kernelapp.py)', '252': 'shutdown_handler(kernelapp.py)', '250': 'shutdown(kernelapp.py)', '248': 'log_connection_info(kernelapp.py)', '199': 'blocking_client(connect.py)', '208': 'get_connection_info(connect.py)', '725': 'stop_channels(threaded.py)', '373': 'is_alive(managerabc.py)', '684': 'test_bad_unpack(test_session.py)', '676': '_bad_unpacker(test_session.py)', '536': 'test_complete_request(test_adapter.py)', '517': 'adapt(test_adapter.py)', '562': 'test_find_connection_file_local(test_connect.py)', '189': 'find_connection_file(connect.py)', '493': 'SubHander(forward.py)', '490': 'Handler(forward.py)', '253': 'KernelSpec(kernelspec.py)', '114': 'send(channels.py)', '88': 'send(channels.py)', '575': 'test_date_default(test_jsonutil.py)', '241': 'date_default(jsonutil.py)', '240': '_ensure_tzinfo(jsonutil.py)', '597': 'test_subclasses(test_kernelmanager.py)', '703': 'AsyncKernelManagerWithCleanup(utils.py)', '595': 'test_signal_kernel_subprocesses(test_kernelmanager.py)', '598': 'execute(test_kernelmanager.py)', '702': 'AsyncKernelManagerSubclass(utils.py)', '591': 'transport(test_kernelmanager.py)', '606': 'test_templated_kspec_env(test_kernelmanager.py)', '599': '_env_test_body(test_kernelmanager.py)', '607': 'execute(test_kernelmanager.py)', '604': 'test_signal_kernel_subprocesses(test_kernelmanager.py)', '608': 'execute(test_kernelmanager.py)', '586': 'env(test_kernelmanager.py)', '712': 'stop(utils.py)', '711': 'start(utils.py)', '705': 'test_env(utils.py)', '630': 'test_validate_kernel_name(test_kernelspec.py)', '506': 'SignalTestApp(signalkernel.py)', '507': 'SignalTestKernel(signalkernel.py)', '627': 'test_remove_kernel_spec(test_kernelspec.py)', '617': '_install_sample_kernel(test_kernelspec.py)', '626': 'test_kernel_spec_priority(test_kernelspec.py)', '651': 'test_tcp_cinfo(test_multikernelmanager.py)', '640': '_run_cinfo(test_multikernelmanager.py)', '621': 'test_find_all_specs(test_kernelspec.py)', '622': 'test_find_kernel_specs(test_kernelspec.py)', '623': 'test_get_kernel_spec(test_kernelspec.py)', '619': 'tearDown(test_kernelspec.py)', '618': 'setUp(test_kernelspec.py)', '649': 'test_start_sequence_ipc_kernels(test_multikernelmanager.py)', '641': '_run_lifecycle(test_multikernelmanager.py)', '650': 'test_start_sequence_tcp_kernels(test_multikernelmanager.py)', '644': 'test_ipc_cinfo(test_multikernelmanager.py)', '315': 'localhost(localinterfaces.py)', '645': 'test_ipc_lifecycle(test_multikernelmanager.py)', '665': 'test_start_sequence_tcp_kernels(test_multikernelmanager.py)', '656': '_run_cinfo(test_multikernelmanager.py)', '666': 'test_tcp_cinfo(test_multikernelmanager.py)', '668': 'test_tcp_lifecycle_with_kernel_id(test_multikernelmanager.py)', '569': 'test_secure_write(test_connect.py)', '573': 'check_user_only_permissions(test_connect.py)', '574': 'fetch_win32_permissions(test_connect.py)', '563': 'test_find_connection_file_relative(test_connect.py)', '561': 'test_find_connection_file_abspath(test_connect.py)', '560': 'test_find_connection_file(test_connect.py)', '565': 'test_load_connection_file_session_with_kn(test_connect.py)', '539': 'test_input_request(test_adapter.py)', '564': 'test_load_connection_file_session(test_connect.py)', '537': 'test_display_data(test_adapter.py)', '540': 'test_inspect_reply(test_adapter.py)', '543': 'test_kernel_info_reply(test_adapter.py)', '542': 'test_inspect_request_token(test_adapter.py)', '535': 'test_complete_reply(test_adapter.py)', '541': 'test_inspect_request(test_adapter.py)', '538': 'test_execute_request(test_adapter.py)', '545': 'test_rename_type(test_adapter.py)', '544': 'test_no_adapt(test_adapter.py)', '546': 'test_same_version(test_adapter.py)', '514': 'V5toV4TestCase(test_adapter.py)', '512': 'AdapterTest(test_adapter.py)', '526': 'test_input_request(test_adapter.py)', '523': 'test_display_data(test_adapter.py)', '527': 'test_kernel_info_reply(test_adapter.py)', '530': 'test_object_info_reply_not_found(test_adapter.py)', '529': 'test_object_info_reply(test_adapter.py)', '531': 'test_object_info_request(test_adapter.py)', '521': 'test_complete_reply(test_adapter.py)', '522': 'test_complete_request(test_adapter.py)', '524': 'test_execute_reply(test_adapter.py)', '532': 'test_rename_type(test_adapter.py)', '525': 'test_execute_request(test_adapter.py)', '528': 'test_no_adapt(test_adapter.py)', '533': 'test_same_version(test_adapter.py)', '513': 'V4toV5TestCase(test_adapter.py)', '519': 'setUp(test_adapter.py)', '516': 'test_default_version(test_adapter.py)', '515': 'test_code_to_line_no_code(test_adapter.py)', '51': 'code_to_line(adapter.py)', '158': 'get_shell_msg(client.py)', '157': 'get_iopub_msg(client.py)', '710': '__exit__(utils.py)', '709': '__enter__(utils.py)', '580': 'test_kernelapp_lifecycle(test_kernelapp.py)', '579': '_launch(test_kernelapp.py)', '686': 'test_clone(test_session.py)', '473': 'clone(session.py)', '695': 'test_send_raw(test_session.py)', '481': 'send_raw(session.py)', '483': 'sign(session.py)', '683': 'test_bad_roundtrip(test_session.py)', '685': 'test_bad_unpacker(test_session.py)', '682': 'test_bad_packer(test_session.py)', '681': 'test_bad_pack(test_session.py)', '675': '_bad_packer(test_session.py)', '687': 'test_cull_digest_history(test_session.py)', '700': 'test_zero_digest_history(test_session.py)', '697': 'test_session_id(test_session.py)', '699': 'test_unique_msg_ids(test_session.py)', '445': 'msg_header(session.py)', '698': 'test_tracking(test_session.py)', '680': 'test_args(test_session.py)', '478': 'msg_id(session.py)', '696': 'test_serialize(test_session.py)', '674': 'TestSession(test_session.py)', '673': 'SessionTestCase(test_session.py)', '678': 'setUp(test_session.py)', '556': 'test_shutdown(test_client.py)', '548': '_check_reply(test_client.py)', '550': 'test_comm_info(test_client.py)', '555': 'test_kernel_info(test_client.py)', '551': 'test_complete(test_client.py)', '554': 'test_inspect(test_client.py)', '553': 'test_history(test_client.py)', '549': 'setUp(test_client.py)', '255': 'NoSuchKernel(kernelspec.py)', '117': 'reqrep(client.py)', '124': 'wrapped(client.py)', '150': '_handle_kernel_info_reply(client.py)', '125': 'HBChannel(channels.py)', '102': 'hb_channel(client.py)', '196': '_make_url(connect.py)', '91': 'reqrep(client.py)', '105': 'wrapped(client.py)', '80': 'ZMQSocketChannel(channels.py)', '154': 'control_channel(client.py)', '723': 'ioloop(threaded.py)', '160': 'hb_channel(client.py)', '171': 'stdin_channel(client.py)', '164': 'iopub_channel(client.py)', '168': 'shell_channel(client.py)', '740': 'send_interrupt(win_interrupt.py)', '334': '__del__(manager.py)', '293': 'start(kernelspecapp.py)', '294': 'path_key(kernelspecapp.py)', '735': 'start(threaded.py)', '720': 'start(threaded.py)', '141': 'start(channelsabc.py)', '432': 'start(restarter.py)', '288': 'start(kernelspecapp.py)', '89': 'start(channels.py)', '115': 'start(channels.py)', '290': 'start(kernelspecapp.py)', '438': 'parse_command_line(runapp.py)', '218': 'build_kernel_argv(consoleapp.py)', '308': '_only_once(localinterfaces.py)', '317': 'wrapped(localinterfaces.py)', '47': 'V4toV5(adapter.py)', '46': 'Adapter(adapter.py)', '77': 'object_info_request(adapter.py)', '52': 'extract_oname_v4(adapter.py)', '70': 'complete_request(adapter.py)', '75': 'kernel_info_reply(adapter.py)', '49': '_version_str_to_list(adapter.py)', '48': 'V5toV4(adapter.py)', '53': '__call__(adapter.py)', '54': 'handle_reply_status_error(adapter.py)', '57': 'update_msg_type(adapter.py)', '56': 'update_metadata(adapter.py)', '55': 'update_header(adapter.py)', '247': 'initialize(kernelapp.py)', '246': '_record_started(kernelapp.py)', '585': 'config(test_kernelmanager.py)', '262': 'install_native_kernel_spec(kernelspec.py)', '276': 'install_native_kernel_spec(kernelspec.py)', '265': 'to_json(kernelspec.py)', '264': 'to_dict(kernelspec.py)', '449': 'test_msg2obj(session.py)', '440': 'Message(session.py)', '453': '__init__(session.py)', '470': '_signature_scheme_changed(session.py)', '463': '_key_default(session.py)', '447': 'new_id_bytes(session.py)', '462': '_key_changed(session.py)', '443': 'default_secure(session.py)', '469': '_session_default(session.py)', '446': 'new_id(session.py)', '412': 'is_alive(multikernelmanager.py)', '420': 'shutdown_all(multikernelmanager.py)', '413': 'list_kernel_ids(multikernelmanager.py)', '721': 'stop(threaded.py)', '140': 'is_alive(channelsabc.py)', '732': 'is_alive(threaded.py)', '112': 'is_alive(channels.py)', '86': 'is_alive(channels.py)', '724': 'start_channels(threaded.py)', '722': '_check_kernel_info_reply(threaded.py)', '716': '__init__(threaded.py)', '387': 'shutdown_kernel(multikernelmanager.py)', '416': 'remove_kernel(multikernelmanager.py)', '713': 'IOLoopThread(threaded.py)', '714': 'ThreadedKernelClient(threaded.py)', '715': 'ThreadedZMQSocketChannel(threaded.py)', '731': 'flush(threaded.py)', '727': '_flush(threaded.py)', '386': 'shutdown_all(multikernelmanager.py)', '418': 'request_shutdown(multikernelmanager.py)', '402': 'cleanup_resources(multikernelmanager.py)', '408': 'finish_shutdown(multikernelmanager.py)', '393': '__len__(multikernelmanager.py)', '421': 'shutdown_kernel(multikernelmanager.py)', '198': '_session_default(connect.py)', '298': 'launch_kernel(launcher.py)', '739': 'create_interrupt_event(win_interrupt.py)', '741': 'SECURITY_ATTRIBUTES(win_interrupt.py)', '509': '__init__(signalkernel.py)', '278': '__init__(kernelspec.py)', '127': '__init__(channels.py)', '126': 'InvalidPortNumber(channels.py)', '107': '__init__(channels.py)', '81': '__init__(channels.py)', '726': '__init__(threaded.py)', '737': 'setup_stream(threaded.py)', '728': '_handle_recv(threaded.py)', '729': 'call_handlers(threaded.py)', '136': 'stop(channels.py)', '133': 'is_beating(channels.py)', '145': 'time_to_dead(channelsabc.py)', '131': 'call_handlers(channels.py)', '130': '_poll(channels.py)'}}, {'key': 734, 'parent': 1520, 'tfidf_word': 'EP: 734, Name: test_msg &rarr; msg &rarr; msg &rarr; msg &rarr; msg_header &rarr; msg_id', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1484, 'parent': 1520, 'tfidf_word': 'header id complete interrupt kernel msg ', 'tfidf_method': 'msg msg_header msg_id msg msg is_complete interrupt_kernel ', 'lda_word': ' msg,header,interrupt,complete,kernel,', 'lda_method': ' msg,msg_id,msg_header,interrupt_kernel,is_complete,', 'lsi_word': ' msg,header,interrupt,kernel,complete,', 'lsi_method': ' msg,msg_header,msg_id,interrupt_kernel,is_complete,', 'spm_method': ' ', 'text_summary': '', 'files_count': 4, 'files': ['manager.py', 'test_adapter.py', 'session.py', 'client.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'328': 'interrupt_kernel(manager.py)', '520': 'msg(test_adapter.py)', '534': 'msg(test_adapter.py)', '476': 'msg(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '166': 'is_complete(client.py)'}}, {'key': 738, 'parent': 1521, 'tfidf_word': 'EP: 738, Name: test_msg &rarr; msg &rarr; msg &rarr; msg &rarr; msg_header &rarr; msg_id', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1485, 'parent': 1521, 'tfidf_word': 'header id complete interrupt kernel msg ', 'tfidf_method': 'msg msg_header msg_id msg msg is_complete interrupt_kernel ', 'lda_word': ' msg,header,kernel,complete,interrupt,', 'lda_method': ' msg,msg_id,msg_header,interrupt_kernel,is_complete,', 'lsi_word': ' msg,header,kernel,interrupt,complete,', 'lsi_method': ' msg,msg_header,msg_id,is_complete,interrupt_kernel,', 'spm_method': ' ', 'text_summary': '', 'files_count': 4, 'files': ['manager.py', 'test_adapter.py', 'session.py', 'client.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'328': 'interrupt_kernel(manager.py)', '534': 'msg(test_adapter.py)', '520': 'msg(test_adapter.py)', '476': 'msg(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '166': 'is_complete(client.py)'}}, {'key': 697, 'parent': 2144, 'tfidf_word': 'EP: 697, Name: wait_for_ready &rarr; is_alive &rarr; is_alive', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 699, 'parent': 2144, 'tfidf_word': 'EP: 699, Name: wait_for_ready &rarr; is_alive &rarr; is_alive', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1207, 'parent': 2196, 'tfidf_word': 'EP: 1207, Name: test_start_parallel_thread_kernels &rarr; raw_tcp_lifecycle &rarr; _run_lifecycle', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2195, 'parent': 2196, 'tfidf_word': 'raw run test id kernel tcp lifecycle ', 'tfidf_method': '_run_lifecycle raw_tcp_lifecycle test_tcp_lifecycle test_tcp_lifecycle_with_kernel_id ', 'lda_word': ' lifecycle,tcp,test,run,raw,', 'lda_method': ' run_lifecycle,test_tcp_lifecycle,raw_tcp_lifecycle,test_tcp_lifecycle_with_kernel_id,', 'lsi_word': ' lifecycle,tcp,raw,test,run,', 'lsi_method': ' run_lifecycle,raw_tcp_lifecycle,test_tcp_lifecycle_with_kernel_id,test_tcp_lifecycle,', 'spm_method': ' ', 'text_summary': '', 'files_count': 1, 'files': ['test_multikernelmanager.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'652': 'test_tcp_lifecycle(test_multikernelmanager.py)', '642': 'raw_tcp_lifecycle(test_multikernelmanager.py)', '641': '_run_lifecycle(test_multikernelmanager.py)', '653': 'test_tcp_lifecycle_with_kernel_id(test_multikernelmanager.py)'}}, {'key': 780, 'parent': 1925, 'tfidf_word': 'EP: 780, Name: test_send &rarr; recv &rarr; deserialize &rarr; sign', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1397, 'parent': 1925, 'tfidf_word': 'EP: 1397, Name: handle &rarr; recv &rarr; deserialize &rarr; sign', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 860, 'parent': 2163, 'tfidf_word': 'EP: 860, Name: test_send_raw &rarr; deserialize &rarr; sign', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2154, 'parent': 2163, 'tfidf_word': 'deserialize sign test send serialize unserialize ', 'tfidf_method': 'deserialize sign unserialize test_send test_serialize ', 'lda_word': ' sign,test,serialize,deserialize,unserialize,', 'lda_method': ' deserialize,sign,unserialize,test_send,test_serialize,', 'lsi_word': ' deserialize,sign,test,send,serialize,', 'lsi_method': ' deserialize,sign,unserialize,test_serialize,test_send,', 'spm_method': ' ', 'text_summary': '', 'files_count': 2, 'files': ['test_session.py', 'session.py'], 'execution_path_count': 3, 'function_id_to_name_file': {'694': 'test_send(test_session.py)', '474': 'deserialize(session.py)', '483': 'sign(session.py)', '484': 'unserialize(session.py)', '696': 'test_serialize(test_session.py)'}}, {'key': 2221, 'parent': 2735, 'tfidf_word': 'message test send handle interrupt kernel tracking ', 'tfidf_method': 'Message send interrupt_kernel handle test_send test_tracking ', 'lda_word': ' send,message,test,handle,interrupt,', 'lda_method': ' message,send,handle,interrupt_kernel,test_send,', 'lsi_word': ' send,message,test,tracking,kernel,', 'lsi_method': ' message,send,interrupt_kernel,test_send,test_tracking,', 'spm_method': ' ', 'text_summary': 'Pass a message to the ZMQ socket to send.', 'files_count': 4, 'files': ['forward.py', 'session.py', 'test_session.py', 'manager.py'], 'execution_path_count': 4, 'function_id_to_name_file': {'492': 'handle(forward.py)', '480': 'send(session.py)', '440': 'Message(session.py)', '698': 'test_tracking(test_session.py)', '328': 'interrupt_kernel(manager.py)', '694': 'test_send(test_session.py)'}}, {'key': 2356, 'parent': 2735, 'tfidf_word': 'sign test serialize send handle interrupt kernel tracking ', 'tfidf_method': 'serialize sign send interrupt_kernel handle test_send test_serialize test_tracking ', 'lda_word': ' serialize,test,sign,send,handle,', 'lda_method': ' serialize,send,sign,test_tracking,test_serialize,', 'lsi_word': ' serialize,send,sign,test,tracking,', 'lsi_method': ' sign,serialize,send,test_tracking,test_send,', 'spm_method': ' ', 'text_summary': 'test tracking messages. Pass a message to the ZMQ socket to send. Sign a message with HMAC digest.', 'files_count': 4, 'files': ['test_session.py', 'session.py', 'forward.py', 'manager.py'], 'execution_path_count': 5, 'function_id_to_name_file': {'696': 'test_serialize(test_session.py)', '482': 'serialize(session.py)', '483': 'sign(session.py)', '698': 'test_tracking(test_session.py)', '480': 'send(session.py)', '492': 'handle(forward.py)', '328': 'interrupt_kernel(manager.py)', '694': 'test_send(test_session.py)'}}, {'key': 2093, 'parent': 2753, 'tfidf_word': 'close create run socket ', 'tfidf_method': '_create_socket run close close close close close ', 'lda_word': ' socket,create,run,close,', 'lda_method': ' run,close,create_socket,', 'lsi_word': ' close,create,run,socket,', 'lsi_method': ' close,create_socket,run,', 'spm_method': ' ', 'text_summary': '', 'files_count': 2, 'files': ['channels.py', 'threaded.py'], 'execution_path_count': 5, 'function_id_to_name_file': {'135': 'run(channels.py)', '128': '_create_socket(channels.py)', '718': 'close(threaded.py)', '730': 'close(threaded.py)', '132': 'close(channels.py)', '83': 'close(channels.py)', '109': 'close(channels.py)'}}, {'key': 2752, 'parent': 2753, 'tfidf_word': 'manager loop flush permission native io cleanup code restarter tunnel ', 'tfidf_method': 'shutdown_kernel update_metadata test_find_connection_file test_find_connection_file_abspath test_find_connection_file_local test_find_connection_file_relative test_load_connection_file_session test_load_connection_file_session_with_kn test_inspect test_complete_request ', 'lda_word': ' kernel,client,connection,file,test,', 'lda_method': ' session,adapt,setup,is_beating,is_alive,', 'lsi_word': ' kernel,test,start,manager,install,', 'lsi_method': ' init,check_packers,utcnow,get_ipc_km,new_auth,', 'spm_method': ' ', 'text_summary': "Subclasses may override  Prepares a kernel for startup in a separate process. Prepares a kernel for startup in a separate process. return ip for localhost (almost always 127.0.0.1)   Ensure that a sequence of kernel startups doesn't break anything. This method is called in the ioloop thread when a message arrives. Pass a message to the ZMQ socket to send. Return the connection info as a dict. Subclasses may override Start the polling of the kernel. Ensure that a sequence of kernel startups doesn't break anything. find a connection file, and return its absolute path. return ip for localhost (almost always 127.0.0.1)      find a connection file, and return its absolute path. tunnel connections to a kernel via ssh. For tests, create a file to indicate that we've started. test load_connection_file() after. handle kernel info reply. Get the hb channel object for this kernel. Send a raw message via ident path. Returns the id to associate with the kernel for this request. Make a blocking client connected to my kernel. Get a message from the stdin channel. Immediately processes all pending messages on this channel. Return the number of running kernels. Interrupts the kernel by sending it a signal. Get a message from the shell channel. Create an ssh tunnel using command-line ssh that connects port lport. This is run in the ioloop thread when the kernel info reply is received. default function for packing datetime objects in JSON. Start the polling of the kernel. Send a shutdown request via control channel. Get a message from the iopub channel. Sends an interrupt event using the specified handle. test that messages receive unique ids. Forgets randomly assigned port numbers and cleans up the connection file.", 'files_count': 34, 'files': ['client.py', 'channels.py', 'test_kernelspec.py', 'kernelspec.py', 'test_kernelmanager.py', 'multikernelmanager.py', 'consoleapp.py', 'session.py', 'jsonutil.py', 'channelsabc.py', 'connect.py', 'manager.py', 'test_manager.py', 'test_multikernelmanager.py', 'utils.py', 'test_session.py', 'forward.py', 'threaded.py', 'restarter.py', 'signalkernel.py', 'tunnel.py', 'test_connect.py', 'kernelspecapp.py', 'kernelapp.py', 'managerabc.py', 'test_adapter.py', 'test_jsonutil.py', 'localinterfaces.py', 'adapter.py', 'test_kernelapp.py', 'test_client.py', 'win_interrupt.py', 'runapp.py', 'launcher.py'], 'execution_path_count': 319, 'function_id_to_name_file': {'123': 'wait_for_ready(client.py)', '84': 'get_msg(channels.py)', '82': '_recv(channels.py)', '104': 'wait_for_ready(client.py)', '101': 'get_stdin_msg(client.py)', '85': 'get_msgs(channels.py)', '99': 'get_iopub_msg(client.py)', '110': 'get_msg(channels.py)', '108': '_recv(channels.py)', '111': 'get_msgs(channels.py)', '620': 'test_cant_install_kernel_spec(test_kernelspec.py)', '275': 'install_kernel_spec(kernelspec.py)', '268': '_get_destination_dir(kernelspec.py)', '257': '_is_valid_kernel_name(kernelspec.py)', '625': 'test_install_kernel_spec_prefix(test_kernelspec.py)', '261': 'install_kernel_spec(kernelspec.py)', '624': 'test_install_kernel_spec(test_kernelspec.py)', '614': 'test_start_sequence_process_kernels(test_kernelmanager.py)', '610': '_run_signaltest_lifecycle(test_kernelmanager.py)', '615': 'execute(test_kernelmanager.py)', '609': '_prepare_kernel(test_kernelmanager.py)', '611': 'test_start_parallel_process_kernels(test_kernelmanager.py)', '613': 'test_start_sequence_kernels(test_kernelmanager.py)', '612': 'test_start_parallel_thread_kernels(test_kernelmanager.py)', '398': '_kernel_manager_class_changed(multikernelmanager.py)', '396': '_create_kernel_manager_factory(multikernelmanager.py)', '424': 'create_kernel_manager(multikernelmanager.py)', '397': '_find_available_port(multikernelmanager.py)', '395': '_context_default(multikernelmanager.py)', '399': '_kernel_manager_factory_default(multikernelmanager.py)', '215': '__init__(consoleapp.py)', '485': '__init__(session.py)', '441': 'Session(session.py)', '457': '__init__(session.py)', '465': '_new_auth(session.py)', '459': '_check_packers(session.py)', '450': 'utcnow(session.py)', '244': 'squash_dates(jsonutil.py)', '90': 'AsyncKernelClient(client.py)', '147': 'KernelClient(client.py)', '139': 'HBChannelABC(channelsabc.py)', '138': 'ChannelABC(channelsabc.py)', '116': 'BlockingKernelClient(client.py)', '188': 'ConnectionFileMixin(connect.py)', '322': 'start_new_async_kernel(manager.py)', '319': 'AsyncKernelManager(manager.py)', '320': 'KernelManager(manager.py)', '224': 'AsyncIOLoopKernelManager(manager.py)', '225': 'IOLoopKernelManager(manager.py)', '635': 'test_connection_file_real_path(test_manager.py)', '663': 'test_start_parallel_thread_kernels(test_multikernelmanager.py)', '658': 'tcp_lifecycle_with_loop(test_multikernelmanager.py)', '667': 'test_tcp_lifecycle(test_multikernelmanager.py)', '657': '_run_lifecycle(test_multikernelmanager.py)', '662': 'test_start_parallel_process_kernels(test_multikernelmanager.py)', '704': 'execute(utils.py)', '155': 'execute(client.py)', '148': 'validate_string_dict(client.py)', '689': 'test_datetimes_msgpack(test_session.py)', '679': '_datetime_test(test_session.py)', '688': 'test_datetimes(test_session.py)', '690': 'test_datetimes_pickle(test_session.py)', '492': 'handle(forward.py)', '734': 'send(threaded.py)', '738': 'thread_send(threaded.py)', '328': 'interrupt_kernel(manager.py)', '694': 'test_send(test_session.py)', '664': 'test_start_sequence_ipc_kernels(test_multikernelmanager.py)', '654': '_get_ipc_km(test_multikernelmanager.py)', '392': '__init__(multikernelmanager.py)', '660': 'test_ipc_lifecycle(test_multikernelmanager.py)', '659': 'test_ipc_cinfo(test_multikernelmanager.py)', '423': 'start_kernel(multikernelmanager.py)', '415': 'pre_start_kernel(multikernelmanager.py)', '380': 'DuplicateKernelError(multikernelmanager.py)', '414': 'new_kernel_id(multikernelmanager.py)', '389': 'start_kernel(multikernelmanager.py)', '238': 'start(restarter.py)', '430': 'poll(restarter.py)', '433': 'stop(restarter.py)', '428': '_fire_callbacks(restarter.py)', '510': 'do_execute(signalkernel.py)', '190': 'tunnel_to_kernel(connect.py)', '501': 'openssh_tunnel(tunnel.py)', '494': 'SSHException(tunnel.py)', '497': '_stop_tunnel(tunnel.py)', '479': 'recv(session.py)', '475': 'feed_identities(session.py)', '330': 'restart_kernel(manager.py)', '202': 'cleanup_random_ports(connect.py)', '200': 'cleanup_connection_file(connect.py)', '567': 'test_mixin_cleanup_random_ports(test_connect.py)', '106': 'ZMQSocketChannel(channels.py)', '109': 'close(channels.py)', '226': 'as_zmqstream(manager.py)', '233': 'wrapped(manager.py)', '568': 'test_mixin_record_random_ports(test_connect.py)', '557': 'DummyConfigurable(test_connect.py)', '235': 'IOLoopKernelRestarter(restarter.py)', '426': 'KernelRestarter(restarter.py)', '234': 'AsyncIOLoopKernelRestarter(restarter.py)', '291': 'start(kernelspecapp.py)', '251': 'start(kernelapp.py)', '249': 'setup_signals(kernelapp.py)', '252': 'shutdown_handler(kernelapp.py)', '250': 'shutdown(kernelapp.py)', '248': 'log_connection_info(kernelapp.py)', '199': 'blocking_client(connect.py)', '208': 'get_connection_info(connect.py)', '725': 'stop_channels(threaded.py)', '373': 'is_alive(managerabc.py)', '684': 'test_bad_unpack(test_session.py)', '676': '_bad_unpacker(test_session.py)', '536': 'test_complete_request(test_adapter.py)', '517': 'adapt(test_adapter.py)', '562': 'test_find_connection_file_local(test_connect.py)', '189': 'find_connection_file(connect.py)', '730': 'close(threaded.py)', '493': 'SubHander(forward.py)', '490': 'Handler(forward.py)', '253': 'KernelSpec(kernelspec.py)', '718': 'close(threaded.py)', '132': 'close(channels.py)', '114': 'send(channels.py)', '88': 'send(channels.py)', '83': 'close(channels.py)', '575': 'test_date_default(test_jsonutil.py)', '241': 'date_default(jsonutil.py)', '240': '_ensure_tzinfo(jsonutil.py)', '597': 'test_subclasses(test_kernelmanager.py)', '703': 'AsyncKernelManagerWithCleanup(utils.py)', '595': 'test_signal_kernel_subprocesses(test_kernelmanager.py)', '598': 'execute(test_kernelmanager.py)', '702': 'AsyncKernelManagerSubclass(utils.py)', '591': 'transport(test_kernelmanager.py)', '606': 'test_templated_kspec_env(test_kernelmanager.py)', '599': '_env_test_body(test_kernelmanager.py)', '607': 'execute(test_kernelmanager.py)', '604': 'test_signal_kernel_subprocesses(test_kernelmanager.py)', '608': 'execute(test_kernelmanager.py)', '586': 'env(test_kernelmanager.py)', '712': 'stop(utils.py)', '711': 'start(utils.py)', '705': 'test_env(utils.py)', '630': 'test_validate_kernel_name(test_kernelspec.py)', '506': 'SignalTestApp(signalkernel.py)', '507': 'SignalTestKernel(signalkernel.py)', '627': 'test_remove_kernel_spec(test_kernelspec.py)', '617': '_install_sample_kernel(test_kernelspec.py)', '626': 'test_kernel_spec_priority(test_kernelspec.py)', '651': 'test_tcp_cinfo(test_multikernelmanager.py)', '640': '_run_cinfo(test_multikernelmanager.py)', '621': 'test_find_all_specs(test_kernelspec.py)', '622': 'test_find_kernel_specs(test_kernelspec.py)', '623': 'test_get_kernel_spec(test_kernelspec.py)', '619': 'tearDown(test_kernelspec.py)', '618': 'setUp(test_kernelspec.py)', '649': 'test_start_sequence_ipc_kernels(test_multikernelmanager.py)', '641': '_run_lifecycle(test_multikernelmanager.py)', '650': 'test_start_sequence_tcp_kernels(test_multikernelmanager.py)', '644': 'test_ipc_cinfo(test_multikernelmanager.py)', '315': 'localhost(localinterfaces.py)', '645': 'test_ipc_lifecycle(test_multikernelmanager.py)', '665': 'test_start_sequence_tcp_kernels(test_multikernelmanager.py)', '656': '_run_cinfo(test_multikernelmanager.py)', '666': 'test_tcp_cinfo(test_multikernelmanager.py)', '668': 'test_tcp_lifecycle_with_kernel_id(test_multikernelmanager.py)', '569': 'test_secure_write(test_connect.py)', '573': 'check_user_only_permissions(test_connect.py)', '574': 'fetch_win32_permissions(test_connect.py)', '563': 'test_find_connection_file_relative(test_connect.py)', '561': 'test_find_connection_file_abspath(test_connect.py)', '560': 'test_find_connection_file(test_connect.py)', '565': 'test_load_connection_file_session_with_kn(test_connect.py)', '539': 'test_input_request(test_adapter.py)', '564': 'test_load_connection_file_session(test_connect.py)', '537': 'test_display_data(test_adapter.py)', '540': 'test_inspect_reply(test_adapter.py)', '543': 'test_kernel_info_reply(test_adapter.py)', '542': 'test_inspect_request_token(test_adapter.py)', '535': 'test_complete_reply(test_adapter.py)', '541': 'test_inspect_request(test_adapter.py)', '538': 'test_execute_request(test_adapter.py)', '545': 'test_rename_type(test_adapter.py)', '544': 'test_no_adapt(test_adapter.py)', '546': 'test_same_version(test_adapter.py)', '514': 'V5toV4TestCase(test_adapter.py)', '512': 'AdapterTest(test_adapter.py)', '526': 'test_input_request(test_adapter.py)', '523': 'test_display_data(test_adapter.py)', '527': 'test_kernel_info_reply(test_adapter.py)', '530': 'test_object_info_reply_not_found(test_adapter.py)', '529': 'test_object_info_reply(test_adapter.py)', '531': 'test_object_info_request(test_adapter.py)', '521': 'test_complete_reply(test_adapter.py)', '522': 'test_complete_request(test_adapter.py)', '524': 'test_execute_reply(test_adapter.py)', '532': 'test_rename_type(test_adapter.py)', '525': 'test_execute_request(test_adapter.py)', '528': 'test_no_adapt(test_adapter.py)', '533': 'test_same_version(test_adapter.py)', '513': 'V4toV5TestCase(test_adapter.py)', '519': 'setUp(test_adapter.py)', '516': 'test_default_version(test_adapter.py)', '515': 'test_code_to_line_no_code(test_adapter.py)', '51': 'code_to_line(adapter.py)', '158': 'get_shell_msg(client.py)', '157': 'get_iopub_msg(client.py)', '710': '__exit__(utils.py)', '709': '__enter__(utils.py)', '580': 'test_kernelapp_lifecycle(test_kernelapp.py)', '579': '_launch(test_kernelapp.py)', '686': 'test_clone(test_session.py)', '473': 'clone(session.py)', '695': 'test_send_raw(test_session.py)', '481': 'send_raw(session.py)', '483': 'sign(session.py)', '683': 'test_bad_roundtrip(test_session.py)', '685': 'test_bad_unpacker(test_session.py)', '682': 'test_bad_packer(test_session.py)', '681': 'test_bad_pack(test_session.py)', '675': '_bad_packer(test_session.py)', '687': 'test_cull_digest_history(test_session.py)', '700': 'test_zero_digest_history(test_session.py)', '697': 'test_session_id(test_session.py)', '699': 'test_unique_msg_ids(test_session.py)', '445': 'msg_header(session.py)', '698': 'test_tracking(test_session.py)', '680': 'test_args(test_session.py)', '478': 'msg_id(session.py)', '696': 'test_serialize(test_session.py)', '674': 'TestSession(test_session.py)', '673': 'SessionTestCase(test_session.py)', '678': 'setUp(test_session.py)', '556': 'test_shutdown(test_client.py)', '548': '_check_reply(test_client.py)', '550': 'test_comm_info(test_client.py)', '555': 'test_kernel_info(test_client.py)', '551': 'test_complete(test_client.py)', '554': 'test_inspect(test_client.py)', '553': 'test_history(test_client.py)', '549': 'setUp(test_client.py)', '255': 'NoSuchKernel(kernelspec.py)', '117': 'reqrep(client.py)', '124': 'wrapped(client.py)', '150': '_handle_kernel_info_reply(client.py)', '125': 'HBChannel(channels.py)', '102': 'hb_channel(client.py)', '196': '_make_url(connect.py)', '91': 'reqrep(client.py)', '105': 'wrapped(client.py)', '80': 'ZMQSocketChannel(channels.py)', '154': 'control_channel(client.py)', '723': 'ioloop(threaded.py)', '160': 'hb_channel(client.py)', '171': 'stdin_channel(client.py)', '164': 'iopub_channel(client.py)', '168': 'shell_channel(client.py)', '740': 'send_interrupt(win_interrupt.py)', '334': '__del__(manager.py)', '293': 'start(kernelspecapp.py)', '294': 'path_key(kernelspecapp.py)', '735': 'start(threaded.py)', '720': 'start(threaded.py)', '141': 'start(channelsabc.py)', '432': 'start(restarter.py)', '288': 'start(kernelspecapp.py)', '89': 'start(channels.py)', '115': 'start(channels.py)', '290': 'start(kernelspecapp.py)', '438': 'parse_command_line(runapp.py)', '218': 'build_kernel_argv(consoleapp.py)', '308': '_only_once(localinterfaces.py)', '317': 'wrapped(localinterfaces.py)', '47': 'V4toV5(adapter.py)', '46': 'Adapter(adapter.py)', '77': 'object_info_request(adapter.py)', '52': 'extract_oname_v4(adapter.py)', '70': 'complete_request(adapter.py)', '75': 'kernel_info_reply(adapter.py)', '49': '_version_str_to_list(adapter.py)', '48': 'V5toV4(adapter.py)', '53': '__call__(adapter.py)', '54': 'handle_reply_status_error(adapter.py)', '57': 'update_msg_type(adapter.py)', '56': 'update_metadata(adapter.py)', '55': 'update_header(adapter.py)', '247': 'initialize(kernelapp.py)', '246': '_record_started(kernelapp.py)', '585': 'config(test_kernelmanager.py)', '262': 'install_native_kernel_spec(kernelspec.py)', '276': 'install_native_kernel_spec(kernelspec.py)', '265': 'to_json(kernelspec.py)', '264': 'to_dict(kernelspec.py)', '449': 'test_msg2obj(session.py)', '440': 'Message(session.py)', '453': '__init__(session.py)', '470': '_signature_scheme_changed(session.py)', '463': '_key_default(session.py)', '447': 'new_id_bytes(session.py)', '462': '_key_changed(session.py)', '443': 'default_secure(session.py)', '469': '_session_default(session.py)', '446': 'new_id(session.py)', '412': 'is_alive(multikernelmanager.py)', '420': 'shutdown_all(multikernelmanager.py)', '413': 'list_kernel_ids(multikernelmanager.py)', '721': 'stop(threaded.py)', '140': 'is_alive(channelsabc.py)', '732': 'is_alive(threaded.py)', '112': 'is_alive(channels.py)', '86': 'is_alive(channels.py)', '724': 'start_channels(threaded.py)', '722': '_check_kernel_info_reply(threaded.py)', '716': '__init__(threaded.py)', '387': 'shutdown_kernel(multikernelmanager.py)', '416': 'remove_kernel(multikernelmanager.py)', '713': 'IOLoopThread(threaded.py)', '714': 'ThreadedKernelClient(threaded.py)', '715': 'ThreadedZMQSocketChannel(threaded.py)', '731': 'flush(threaded.py)', '727': '_flush(threaded.py)', '386': 'shutdown_all(multikernelmanager.py)', '418': 'request_shutdown(multikernelmanager.py)', '402': 'cleanup_resources(multikernelmanager.py)', '408': 'finish_shutdown(multikernelmanager.py)', '393': '__len__(multikernelmanager.py)', '421': 'shutdown_kernel(multikernelmanager.py)', '198': '_session_default(connect.py)', '298': 'launch_kernel(launcher.py)', '739': 'create_interrupt_event(win_interrupt.py)', '741': 'SECURITY_ATTRIBUTES(win_interrupt.py)', '509': '__init__(signalkernel.py)', '278': '__init__(kernelspec.py)', '127': '__init__(channels.py)', '126': 'InvalidPortNumber(channels.py)', '107': '__init__(channels.py)', '81': '__init__(channels.py)', '726': '__init__(threaded.py)', '737': 'setup_stream(threaded.py)', '728': '_handle_recv(threaded.py)', '729': 'call_handlers(threaded.py)', '136': 'stop(channels.py)', '133': 'is_beating(channels.py)', '135': 'run(channels.py)', '145': 'time_to_dead(channelsabc.py)', '131': 'call_handlers(channels.py)', '130': '_poll(channels.py)'}}, {'key': 363, 'parent': 1484, 'tfidf_word': 'EP: 363, Name: interrupt_kernel &rarr; msg &rarr; msg &rarr; msg &rarr; msg_header &rarr; msg_id', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 495, 'parent': 1484, 'tfidf_word': 'EP: 495, Name: is_complete &rarr; msg &rarr; msg &rarr; msg &rarr; msg_header &rarr; msg_id', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 367, 'parent': 1485, 'tfidf_word': 'EP: 367, Name: interrupt_kernel &rarr; msg &rarr; msg &rarr; msg &rarr; msg_header &rarr; msg_id', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 499, 'parent': 1485, 'tfidf_word': 'EP: 499, Name: is_complete &rarr; msg &rarr; msg &rarr; msg &rarr; msg_header &rarr; msg_id', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1180, 'parent': 2195, 'tfidf_word': 'EP: 1180, Name: test_tcp_lifecycle &rarr; raw_tcp_lifecycle &rarr; _run_lifecycle', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1183, 'parent': 2195, 'tfidf_word': 'EP: 1183, Name: test_tcp_lifecycle_with_kernel_id &rarr; raw_tcp_lifecycle &rarr; _run_lifecycle', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 756, 'parent': 2154, 'tfidf_word': 'EP: 756, Name: test_send &rarr; deserialize &rarr; sign', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2107, 'parent': 2154, 'tfidf_word': 'deserialize sign serialize test unserialize ', 'tfidf_method': 'deserialize sign unserialize test_serialize ', 'lda_word': ' deserialize,sign,unserialize,serialize,test,', 'lda_method': ' deserialize,sign,unserialize,test_serialize,', 'lsi_word': ' sign,deserialize,serialize,test,unserialize,', 'lsi_method': ' deserialize,sign,unserialize,test_serialize,', 'spm_method': ' ', 'text_summary': '', 'files_count': 2, 'files': ['session.py', 'test_session.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'484': 'unserialize(session.py)', '474': 'deserialize(session.py)', '483': 'sign(session.py)', '696': 'test_serialize(test_session.py)'}}, {'key': 1392, 'parent': 2221, 'tfidf_word': 'EP: 1392, Name: handle &rarr; send &rarr; Message', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2158, 'parent': 2221, 'tfidf_word': 'message test send interrupt kernel tracking ', 'tfidf_method': 'Message send interrupt_kernel test_send test_tracking ', 'lda_word': ' send,message,test,tracking,kernel,', 'lda_method': ' send,message,interrupt_kernel,test_send,test_tracking,', 'lsi_word': ' send,message,test,tracking,interrupt,', 'lsi_method': ' message,send,test_tracking,test_send,interrupt_kernel,', 'spm_method': ' ', 'text_summary': 'Pass a message to the ZMQ socket to send.', 'files_count': 3, 'files': ['test_session.py', 'session.py', 'manager.py'], 'execution_path_count': 3, 'function_id_to_name_file': {'698': 'test_tracking(test_session.py)', '480': 'send(session.py)', '440': 'Message(session.py)', '328': 'interrupt_kernel(manager.py)', '694': 'test_send(test_session.py)'}}, {'key': 742, 'parent': 2356, 'tfidf_word': 'EP: 742, Name: test_serialize &rarr; serialize &rarr; sign', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1922, 'parent': 2356, 'tfidf_word': 'serialize sign test send handle interrupt kernel tracking ', 'tfidf_method': 'send serialize sign interrupt_kernel handle test_send test_tracking ', 'lda_word': ' send,sign,serialize,test,tracking,', 'lda_method': ' sign,send,serialize,interrupt_kernel,test_tracking,', 'lsi_word': ' send,serialize,sign,test,tracking,', 'lsi_method': ' serialize,send,sign,test_tracking,handle,', 'spm_method': ' ', 'text_summary': 'Serialize the message components to bytes. Pass a message to the ZMQ socket to send.', 'files_count': 4, 'files': ['test_session.py', 'session.py', 'forward.py', 'manager.py'], 'execution_path_count': 4, 'function_id_to_name_file': {'698': 'test_tracking(test_session.py)', '480': 'send(session.py)', '482': 'serialize(session.py)', '483': 'sign(session.py)', '492': 'handle(forward.py)', '328': 'interrupt_kernel(manager.py)', '694': 'test_send(test_session.py)'}}, {'key': 5, 'parent': 2093, 'tfidf_word': 'EP: 5, Name: run &rarr; _create_socket &rarr; close', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2092, 'parent': 2093, 'tfidf_word': 'close create run socket ', 'tfidf_method': '_create_socket run close close close close ', 'lda_word': ' run,create,socket,close,', 'lda_method': ' run,create_socket,close,', 'lsi_word': ' close,create,run,socket,', 'lsi_method': ' create_socket,run,close,', 'spm_method': ' ', 'text_summary': '', 'files_count': 2, 'files': ['channels.py', 'threaded.py'], 'execution_path_count': 4, 'function_id_to_name_file': {'135': 'run(channels.py)', '128': '_create_socket(channels.py)', '730': 'close(threaded.py)', '132': 'close(channels.py)', '83': 'close(channels.py)', '109': 'close(channels.py)'}}, {'key': 2143, 'parent': 2752, 'tfidf_word': 'recv ready wait get msg iopub stdin ', 'tfidf_method': '_recv get_msg get_stdin_msg wait_for_ready wait_for_ready get_msgs get_iopub_msg ', 'lda_word': ' get,msg,recv,wait,ready,', 'lda_method': ' recv,get_msg,wait_for_ready,get_iopub_msg,get_stdin_msg,', 'lsi_word': ' msg,get,recv,ready,wait,', 'lsi_method': ' recv,get_msg,wait_for_ready,get_iopub_msg,get_msgs,', 'spm_method': ' ', 'text_summary': 'Gets a message if there is one that is ready. Get a message from the iopub channel.', 'files_count': 2, 'files': ['client.py', 'channels.py'], 'execution_path_count': 5, 'function_id_to_name_file': {'123': 'wait_for_ready(client.py)', '84': 'get_msg(channels.py)', '82': '_recv(channels.py)', '104': 'wait_for_ready(client.py)', '101': 'get_stdin_msg(client.py)', '85': 'get_msgs(channels.py)', '99': 'get_iopub_msg(client.py)'}}, {'key': 2751, 'parent': 2752, 'tfidf_word': 'manager loop flush permission native io cleanup code restarter tunnel ', 'tfidf_method': 'test_display_data test_execute_reply test_execute_request test_input_request test_kernel_info_reply test_no_adapt test_object_info_reply test_object_info_reply_not_found test_code_to_line_no_code get_iopub_msg ', 'lda_word': ' kernel,test,start,lifecycle,manager,', 'lda_method': ' init,adapt,execute,session,start_kernel,', 'lsi_word': ' kernel,test,start,manager,install,', 'lsi_method': ' init,check_packers,utcnow,get_ipc_km,new_auth,', 'spm_method': ' ', 'text_summary': "Subclasses may override  Prepares a kernel for startup in a separate process. Prepares a kernel for startup in a separate process. return ip for localhost (almost always 127.0.0.1)   Ensure that a sequence of kernel startups doesn't break anything. This method is called in the ioloop thread when a message arrives. Return the connection info as a dict. Subclasses may override Start the polling of the kernel. Ensure that a sequence of kernel startups doesn't break anything. find a connection file, and return its absolute path. return ip for localhost (almost always 127.0.0.1)      find a connection file, and return its absolute path. tunnel connections to a kernel via ssh. test load_connection_file() after. handle kernel info reply. Get the hb channel object for this kernel. Send a raw message via ident path. Returns the id to associate with the kernel for this request. Make a blocking client connected to my kernel. Get a message from the stdin channel. Immediately processes all pending messages on this channel. Return the number of running kernels. Interrupts the kernel by sending it a signal. Get a message from the shell channel. Create an ssh tunnel using command-line ssh that connects port lport. This is run in the ioloop thread when the kernel info reply is received. default function for packing datetime objects in JSON. Start the polling of the kernel. Send a shutdown request via control channel. Get a message from the iopub channel. Sends an interrupt event using the specified handle. test that messages receive unique ids. Forgets randomly assigned port numbers and cleans up the connection file.", 'files_count': 34, 'files': ['client.py', 'channels.py', 'test_kernelspec.py', 'kernelspec.py', 'test_kernelmanager.py', 'multikernelmanager.py', 'consoleapp.py', 'session.py', 'jsonutil.py', 'channelsabc.py', 'connect.py', 'manager.py', 'test_manager.py', 'test_multikernelmanager.py', 'utils.py', 'test_session.py', 'forward.py', 'threaded.py', 'restarter.py', 'signalkernel.py', 'tunnel.py', 'test_connect.py', 'kernelspecapp.py', 'kernelapp.py', 'managerabc.py', 'test_adapter.py', 'test_jsonutil.py', 'localinterfaces.py', 'adapter.py', 'test_kernelapp.py', 'test_client.py', 'win_interrupt.py', 'runapp.py', 'launcher.py'], 'execution_path_count': 314, 'function_id_to_name_file': {'123': 'wait_for_ready(client.py)', '110': 'get_msg(channels.py)', '108': '_recv(channels.py)', '111': 'get_msgs(channels.py)', '104': 'wait_for_ready(client.py)', '99': 'get_iopub_msg(client.py)', '101': 'get_stdin_msg(client.py)', '620': 'test_cant_install_kernel_spec(test_kernelspec.py)', '275': 'install_kernel_spec(kernelspec.py)', '268': '_get_destination_dir(kernelspec.py)', '257': '_is_valid_kernel_name(kernelspec.py)', '625': 'test_install_kernel_spec_prefix(test_kernelspec.py)', '261': 'install_kernel_spec(kernelspec.py)', '624': 'test_install_kernel_spec(test_kernelspec.py)', '614': 'test_start_sequence_process_kernels(test_kernelmanager.py)', '610': '_run_signaltest_lifecycle(test_kernelmanager.py)', '615': 'execute(test_kernelmanager.py)', '609': '_prepare_kernel(test_kernelmanager.py)', '611': 'test_start_parallel_process_kernels(test_kernelmanager.py)', '613': 'test_start_sequence_kernels(test_kernelmanager.py)', '612': 'test_start_parallel_thread_kernels(test_kernelmanager.py)', '398': '_kernel_manager_class_changed(multikernelmanager.py)', '396': '_create_kernel_manager_factory(multikernelmanager.py)', '424': 'create_kernel_manager(multikernelmanager.py)', '397': '_find_available_port(multikernelmanager.py)', '395': '_context_default(multikernelmanager.py)', '399': '_kernel_manager_factory_default(multikernelmanager.py)', '215': '__init__(consoleapp.py)', '485': '__init__(session.py)', '441': 'Session(session.py)', '457': '__init__(session.py)', '465': '_new_auth(session.py)', '459': '_check_packers(session.py)', '450': 'utcnow(session.py)', '244': 'squash_dates(jsonutil.py)', '90': 'AsyncKernelClient(client.py)', '147': 'KernelClient(client.py)', '139': 'HBChannelABC(channelsabc.py)', '138': 'ChannelABC(channelsabc.py)', '116': 'BlockingKernelClient(client.py)', '188': 'ConnectionFileMixin(connect.py)', '322': 'start_new_async_kernel(manager.py)', '319': 'AsyncKernelManager(manager.py)', '320': 'KernelManager(manager.py)', '224': 'AsyncIOLoopKernelManager(manager.py)', '225': 'IOLoopKernelManager(manager.py)', '635': 'test_connection_file_real_path(test_manager.py)', '663': 'test_start_parallel_thread_kernels(test_multikernelmanager.py)', '658': 'tcp_lifecycle_with_loop(test_multikernelmanager.py)', '667': 'test_tcp_lifecycle(test_multikernelmanager.py)', '657': '_run_lifecycle(test_multikernelmanager.py)', '662': 'test_start_parallel_process_kernels(test_multikernelmanager.py)', '704': 'execute(utils.py)', '155': 'execute(client.py)', '148': 'validate_string_dict(client.py)', '689': 'test_datetimes_msgpack(test_session.py)', '679': '_datetime_test(test_session.py)', '688': 'test_datetimes(test_session.py)', '690': 'test_datetimes_pickle(test_session.py)', '492': 'handle(forward.py)', '734': 'send(threaded.py)', '738': 'thread_send(threaded.py)', '328': 'interrupt_kernel(manager.py)', '694': 'test_send(test_session.py)', '664': 'test_start_sequence_ipc_kernels(test_multikernelmanager.py)', '654': '_get_ipc_km(test_multikernelmanager.py)', '392': '__init__(multikernelmanager.py)', '660': 'test_ipc_lifecycle(test_multikernelmanager.py)', '659': 'test_ipc_cinfo(test_multikernelmanager.py)', '423': 'start_kernel(multikernelmanager.py)', '415': 'pre_start_kernel(multikernelmanager.py)', '380': 'DuplicateKernelError(multikernelmanager.py)', '414': 'new_kernel_id(multikernelmanager.py)', '389': 'start_kernel(multikernelmanager.py)', '238': 'start(restarter.py)', '430': 'poll(restarter.py)', '433': 'stop(restarter.py)', '428': '_fire_callbacks(restarter.py)', '510': 'do_execute(signalkernel.py)', '190': 'tunnel_to_kernel(connect.py)', '501': 'openssh_tunnel(tunnel.py)', '494': 'SSHException(tunnel.py)', '497': '_stop_tunnel(tunnel.py)', '479': 'recv(session.py)', '475': 'feed_identities(session.py)', '330': 'restart_kernel(manager.py)', '202': 'cleanup_random_ports(connect.py)', '200': 'cleanup_connection_file(connect.py)', '567': 'test_mixin_cleanup_random_ports(test_connect.py)', '106': 'ZMQSocketChannel(channels.py)', '109': 'close(channels.py)', '226': 'as_zmqstream(manager.py)', '233': 'wrapped(manager.py)', '568': 'test_mixin_record_random_ports(test_connect.py)', '557': 'DummyConfigurable(test_connect.py)', '235': 'IOLoopKernelRestarter(restarter.py)', '426': 'KernelRestarter(restarter.py)', '234': 'AsyncIOLoopKernelRestarter(restarter.py)', '291': 'start(kernelspecapp.py)', '251': 'start(kernelapp.py)', '249': 'setup_signals(kernelapp.py)', '252': 'shutdown_handler(kernelapp.py)', '250': 'shutdown(kernelapp.py)', '248': 'log_connection_info(kernelapp.py)', '199': 'blocking_client(connect.py)', '208': 'get_connection_info(connect.py)', '725': 'stop_channels(threaded.py)', '373': 'is_alive(managerabc.py)', '684': 'test_bad_unpack(test_session.py)', '676': '_bad_unpacker(test_session.py)', '536': 'test_complete_request(test_adapter.py)', '517': 'adapt(test_adapter.py)', '562': 'test_find_connection_file_local(test_connect.py)', '189': 'find_connection_file(connect.py)', '730': 'close(threaded.py)', '493': 'SubHander(forward.py)', '490': 'Handler(forward.py)', '253': 'KernelSpec(kernelspec.py)', '718': 'close(threaded.py)', '132': 'close(channels.py)', '114': 'send(channels.py)', '88': 'send(channels.py)', '83': 'close(channels.py)', '575': 'test_date_default(test_jsonutil.py)', '241': 'date_default(jsonutil.py)', '240': '_ensure_tzinfo(jsonutil.py)', '597': 'test_subclasses(test_kernelmanager.py)', '703': 'AsyncKernelManagerWithCleanup(utils.py)', '595': 'test_signal_kernel_subprocesses(test_kernelmanager.py)', '598': 'execute(test_kernelmanager.py)', '702': 'AsyncKernelManagerSubclass(utils.py)', '591': 'transport(test_kernelmanager.py)', '606': 'test_templated_kspec_env(test_kernelmanager.py)', '599': '_env_test_body(test_kernelmanager.py)', '607': 'execute(test_kernelmanager.py)', '604': 'test_signal_kernel_subprocesses(test_kernelmanager.py)', '608': 'execute(test_kernelmanager.py)', '586': 'env(test_kernelmanager.py)', '712': 'stop(utils.py)', '711': 'start(utils.py)', '705': 'test_env(utils.py)', '630': 'test_validate_kernel_name(test_kernelspec.py)', '506': 'SignalTestApp(signalkernel.py)', '507': 'SignalTestKernel(signalkernel.py)', '627': 'test_remove_kernel_spec(test_kernelspec.py)', '617': '_install_sample_kernel(test_kernelspec.py)', '626': 'test_kernel_spec_priority(test_kernelspec.py)', '651': 'test_tcp_cinfo(test_multikernelmanager.py)', '640': '_run_cinfo(test_multikernelmanager.py)', '621': 'test_find_all_specs(test_kernelspec.py)', '622': 'test_find_kernel_specs(test_kernelspec.py)', '623': 'test_get_kernel_spec(test_kernelspec.py)', '619': 'tearDown(test_kernelspec.py)', '618': 'setUp(test_kernelspec.py)', '649': 'test_start_sequence_ipc_kernels(test_multikernelmanager.py)', '641': '_run_lifecycle(test_multikernelmanager.py)', '650': 'test_start_sequence_tcp_kernels(test_multikernelmanager.py)', '644': 'test_ipc_cinfo(test_multikernelmanager.py)', '315': 'localhost(localinterfaces.py)', '645': 'test_ipc_lifecycle(test_multikernelmanager.py)', '665': 'test_start_sequence_tcp_kernels(test_multikernelmanager.py)', '656': '_run_cinfo(test_multikernelmanager.py)', '666': 'test_tcp_cinfo(test_multikernelmanager.py)', '668': 'test_tcp_lifecycle_with_kernel_id(test_multikernelmanager.py)', '569': 'test_secure_write(test_connect.py)', '573': 'check_user_only_permissions(test_connect.py)', '574': 'fetch_win32_permissions(test_connect.py)', '563': 'test_find_connection_file_relative(test_connect.py)', '561': 'test_find_connection_file_abspath(test_connect.py)', '560': 'test_find_connection_file(test_connect.py)', '565': 'test_load_connection_file_session_with_kn(test_connect.py)', '539': 'test_input_request(test_adapter.py)', '564': 'test_load_connection_file_session(test_connect.py)', '537': 'test_display_data(test_adapter.py)', '540': 'test_inspect_reply(test_adapter.py)', '543': 'test_kernel_info_reply(test_adapter.py)', '542': 'test_inspect_request_token(test_adapter.py)', '535': 'test_complete_reply(test_adapter.py)', '541': 'test_inspect_request(test_adapter.py)', '538': 'test_execute_request(test_adapter.py)', '545': 'test_rename_type(test_adapter.py)', '544': 'test_no_adapt(test_adapter.py)', '546': 'test_same_version(test_adapter.py)', '514': 'V5toV4TestCase(test_adapter.py)', '512': 'AdapterTest(test_adapter.py)', '526': 'test_input_request(test_adapter.py)', '523': 'test_display_data(test_adapter.py)', '527': 'test_kernel_info_reply(test_adapter.py)', '530': 'test_object_info_reply_not_found(test_adapter.py)', '529': 'test_object_info_reply(test_adapter.py)', '531': 'test_object_info_request(test_adapter.py)', '521': 'test_complete_reply(test_adapter.py)', '522': 'test_complete_request(test_adapter.py)', '524': 'test_execute_reply(test_adapter.py)', '532': 'test_rename_type(test_adapter.py)', '525': 'test_execute_request(test_adapter.py)', '528': 'test_no_adapt(test_adapter.py)', '533': 'test_same_version(test_adapter.py)', '513': 'V4toV5TestCase(test_adapter.py)', '519': 'setUp(test_adapter.py)', '516': 'test_default_version(test_adapter.py)', '515': 'test_code_to_line_no_code(test_adapter.py)', '51': 'code_to_line(adapter.py)', '158': 'get_shell_msg(client.py)', '157': 'get_iopub_msg(client.py)', '710': '__exit__(utils.py)', '709': '__enter__(utils.py)', '580': 'test_kernelapp_lifecycle(test_kernelapp.py)', '579': '_launch(test_kernelapp.py)', '686': 'test_clone(test_session.py)', '473': 'clone(session.py)', '695': 'test_send_raw(test_session.py)', '481': 'send_raw(session.py)', '483': 'sign(session.py)', '683': 'test_bad_roundtrip(test_session.py)', '685': 'test_bad_unpacker(test_session.py)', '682': 'test_bad_packer(test_session.py)', '681': 'test_bad_pack(test_session.py)', '675': '_bad_packer(test_session.py)', '687': 'test_cull_digest_history(test_session.py)', '700': 'test_zero_digest_history(test_session.py)', '697': 'test_session_id(test_session.py)', '699': 'test_unique_msg_ids(test_session.py)', '445': 'msg_header(session.py)', '698': 'test_tracking(test_session.py)', '680': 'test_args(test_session.py)', '478': 'msg_id(session.py)', '696': 'test_serialize(test_session.py)', '674': 'TestSession(test_session.py)', '673': 'SessionTestCase(test_session.py)', '678': 'setUp(test_session.py)', '556': 'test_shutdown(test_client.py)', '548': '_check_reply(test_client.py)', '550': 'test_comm_info(test_client.py)', '555': 'test_kernel_info(test_client.py)', '551': 'test_complete(test_client.py)', '554': 'test_inspect(test_client.py)', '553': 'test_history(test_client.py)', '549': 'setUp(test_client.py)', '255': 'NoSuchKernel(kernelspec.py)', '117': 'reqrep(client.py)', '124': 'wrapped(client.py)', '150': '_handle_kernel_info_reply(client.py)', '125': 'HBChannel(channels.py)', '102': 'hb_channel(client.py)', '196': '_make_url(connect.py)', '91': 'reqrep(client.py)', '105': 'wrapped(client.py)', '80': 'ZMQSocketChannel(channels.py)', '154': 'control_channel(client.py)', '723': 'ioloop(threaded.py)', '160': 'hb_channel(client.py)', '171': 'stdin_channel(client.py)', '164': 'iopub_channel(client.py)', '168': 'shell_channel(client.py)', '740': 'send_interrupt(win_interrupt.py)', '334': '__del__(manager.py)', '293': 'start(kernelspecapp.py)', '294': 'path_key(kernelspecapp.py)', '735': 'start(threaded.py)', '720': 'start(threaded.py)', '141': 'start(channelsabc.py)', '432': 'start(restarter.py)', '288': 'start(kernelspecapp.py)', '89': 'start(channels.py)', '115': 'start(channels.py)', '290': 'start(kernelspecapp.py)', '438': 'parse_command_line(runapp.py)', '218': 'build_kernel_argv(consoleapp.py)', '308': '_only_once(localinterfaces.py)', '317': 'wrapped(localinterfaces.py)', '47': 'V4toV5(adapter.py)', '46': 'Adapter(adapter.py)', '77': 'object_info_request(adapter.py)', '52': 'extract_oname_v4(adapter.py)', '70': 'complete_request(adapter.py)', '75': 'kernel_info_reply(adapter.py)', '49': '_version_str_to_list(adapter.py)', '48': 'V5toV4(adapter.py)', '53': '__call__(adapter.py)', '54': 'handle_reply_status_error(adapter.py)', '57': 'update_msg_type(adapter.py)', '56': 'update_metadata(adapter.py)', '55': 'update_header(adapter.py)', '247': 'initialize(kernelapp.py)', '246': '_record_started(kernelapp.py)', '585': 'config(test_kernelmanager.py)', '262': 'install_native_kernel_spec(kernelspec.py)', '276': 'install_native_kernel_spec(kernelspec.py)', '265': 'to_json(kernelspec.py)', '264': 'to_dict(kernelspec.py)', '449': 'test_msg2obj(session.py)', '440': 'Message(session.py)', '453': '__init__(session.py)', '470': '_signature_scheme_changed(session.py)', '463': '_key_default(session.py)', '447': 'new_id_bytes(session.py)', '462': '_key_changed(session.py)', '443': 'default_secure(session.py)', '469': '_session_default(session.py)', '446': 'new_id(session.py)', '412': 'is_alive(multikernelmanager.py)', '420': 'shutdown_all(multikernelmanager.py)', '413': 'list_kernel_ids(multikernelmanager.py)', '721': 'stop(threaded.py)', '140': 'is_alive(channelsabc.py)', '732': 'is_alive(threaded.py)', '112': 'is_alive(channels.py)', '86': 'is_alive(channels.py)', '724': 'start_channels(threaded.py)', '722': '_check_kernel_info_reply(threaded.py)', '716': '__init__(threaded.py)', '387': 'shutdown_kernel(multikernelmanager.py)', '416': 'remove_kernel(multikernelmanager.py)', '713': 'IOLoopThread(threaded.py)', '714': 'ThreadedKernelClient(threaded.py)', '715': 'ThreadedZMQSocketChannel(threaded.py)', '731': 'flush(threaded.py)', '727': '_flush(threaded.py)', '386': 'shutdown_all(multikernelmanager.py)', '418': 'request_shutdown(multikernelmanager.py)', '402': 'cleanup_resources(multikernelmanager.py)', '408': 'finish_shutdown(multikernelmanager.py)', '393': '__len__(multikernelmanager.py)', '421': 'shutdown_kernel(multikernelmanager.py)', '198': '_session_default(connect.py)', '298': 'launch_kernel(launcher.py)', '739': 'create_interrupt_event(win_interrupt.py)', '741': 'SECURITY_ATTRIBUTES(win_interrupt.py)', '509': '__init__(signalkernel.py)', '278': '__init__(kernelspec.py)', '127': '__init__(channels.py)', '126': 'InvalidPortNumber(channels.py)', '107': '__init__(channels.py)', '81': '__init__(channels.py)', '726': '__init__(threaded.py)', '737': 'setup_stream(threaded.py)', '728': '_handle_recv(threaded.py)', '729': 'call_handlers(threaded.py)', '136': 'stop(channels.py)', '133': 'is_beating(channels.py)', '135': 'run(channels.py)', '145': 'time_to_dead(channelsabc.py)', '131': 'call_handlers(channels.py)', '130': '_poll(channels.py)'}}, {'key': 112, 'parent': 2107, 'tfidf_word': 'EP: 112, Name: unserialize &rarr; deserialize &rarr; sign', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 743, 'parent': 2107, 'tfidf_word': 'EP: 743, Name: test_serialize &rarr; deserialize &rarr; sign', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 791, 'parent': 2158, 'tfidf_word': 'EP: 791, Name: test_tracking &rarr; send &rarr; Message', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2123, 'parent': 2158, 'tfidf_word': 'message interrupt kernel test send ', 'tfidf_method': 'Message send interrupt_kernel test_send ', 'lda_word': ' send,message,kernel,interrupt,test,', 'lda_method': ' message,send,interrupt_kernel,test_send,', 'lsi_word': ' send,message,test,interrupt,kernel,', 'lsi_method': ' message,send,interrupt_kernel,test_send,', 'spm_method': ' ', 'text_summary': '', 'files_count': 3, 'files': ['manager.py', 'session.py', 'test_session.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'328': 'interrupt_kernel(manager.py)', '480': 'send(session.py)', '440': 'Message(session.py)', '694': 'test_send(test_session.py)'}}, {'key': 1831, 'parent': 1922, 'tfidf_word': 'send serialize sign handle test tracking ', 'tfidf_method': 'send serialize sign handle test_tracking ', 'lda_word': ' serialize,send,sign,tracking,handle,', 'lda_method': ' serialize,sign,send,handle,test_tracking,', 'lsi_word': ' send,serialize,sign,test,tracking,', 'lsi_method': ' send,serialize,sign,handle,test_tracking,', 'spm_method': ' ', 'text_summary': 'Serialize the message components to bytes. Sign a message with HMAC digest.', 'files_count': 3, 'files': ['test_session.py', 'session.py', 'forward.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'698': 'test_tracking(test_session.py)', '480': 'send(session.py)', '482': 'serialize(session.py)', '483': 'sign(session.py)', '492': 'handle(forward.py)'}}, {'key': 1890, 'parent': 1922, 'tfidf_word': 'serialize sign interrupt kernel test send ', 'tfidf_method': 'send serialize sign interrupt_kernel test_send ', 'lda_word': ' send,serialize,sign,kernel,test,', 'lda_method': ' serialize,send,test_send,sign,interrupt_kernel,', 'lsi_word': ' send,serialize,sign,test,kernel,', 'lsi_method': ' send,serialize,sign,interrupt_kernel,test_send,', 'spm_method': ' ', 'text_summary': 'Pass a message to the ZMQ socket to send. Sign a message with HMAC digest.', 'files_count': 3, 'files': ['manager.py', 'session.py', 'test_session.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'328': 'interrupt_kernel(manager.py)', '480': 'send(session.py)', '482': 'serialize(session.py)', '483': 'sign(session.py)', '694': 'test_send(test_session.py)'}}, {'key': 4, 'parent': 2092, 'tfidf_word': 'EP: 4, Name: run &rarr; _create_socket &rarr; close', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2091, 'parent': 2092, 'tfidf_word': 'close create run socket ', 'tfidf_method': '_create_socket run close close close ', 'lda_word': ' create,socket,run,close,', 'lda_method': ' close,create_socket,run,', 'lsi_word': ' close,create,run,socket,', 'lsi_method': ' close,create_socket,run,', 'spm_method': ' ', 'text_summary': '', 'files_count': 1, 'files': ['channels.py'], 'execution_path_count': 3, 'function_id_to_name_file': {'135': 'run(channels.py)', '128': '_create_socket(channels.py)', '132': 'close(channels.py)', '83': 'close(channels.py)', '109': 'close(channels.py)'}}, {'key': 696, 'parent': 2143, 'tfidf_word': 'EP: 696, Name: wait_for_ready &rarr; get_msg &rarr; _recv', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2135, 'parent': 2143, 'tfidf_word': 'recv get msg iopub ready stdin wait ', 'tfidf_method': '_recv get_msg get_stdin_msg wait_for_ready get_msgs get_iopub_msg ', 'lda_word': ' get,msg,recv,stdin,wait,', 'lda_method': ' recv,get_msg,get_msgs,get_iopub_msg,wait_for_ready,', 'lsi_word': ' get,msg,recv,iopub,stdin,', 'lsi_method': ' get_msg,recv,get_stdin_msg,get_iopub_msg,get_msgs,', 'spm_method': ' ', 'text_summary': 'Get all messages that are currently ready. Get a message from the stdin channel.', 'files_count': 2, 'files': ['client.py', 'channels.py'], 'execution_path_count': 4, 'function_id_to_name_file': {'104': 'wait_for_ready(client.py)', '84': 'get_msg(channels.py)', '82': '_recv(channels.py)', '101': 'get_stdin_msg(client.py)', '85': 'get_msgs(channels.py)', '99': 'get_iopub_msg(client.py)'}}, {'key': 2142, 'parent': 2751, 'tfidf_word': 'recv ready wait get msg iopub stdin ', 'tfidf_method': '_recv get_msg get_stdin_msg wait_for_ready get_msgs wait_for_ready get_iopub_msg ', 'lda_word': ' msg,get,recv,wait,ready,', 'lda_method': ' recv,get_msg,get_stdin_msg,wait_for_ready,get_iopub_msg,', 'lsi_word': ' get,msg,recv,ready,wait,', 'lsi_method': ' get_msg,recv,wait_for_ready,get_stdin_msg,get_iopub_msg,', 'spm_method': ' ', 'text_summary': 'Get all messages that are currently ready. Gets a message if there is one that is ready.', 'files_count': 2, 'files': ['client.py', 'channels.py'], 'execution_path_count': 5, 'function_id_to_name_file': {'123': 'wait_for_ready(client.py)', '110': 'get_msg(channels.py)', '108': '_recv(channels.py)', '111': 'get_msgs(channels.py)', '104': 'wait_for_ready(client.py)', '99': 'get_iopub_msg(client.py)', '101': 'get_stdin_msg(client.py)'}}, {'key': 2750, 'parent': 2751, 'tfidf_word': 'manager loop permission native flush io cleanup code restarter tunnel ', 'tfidf_method': 'test_display_data test_execute_reply test_execute_request test_input_request test_kernel_info_reply test_no_adapt test_object_info_reply test_object_info_reply_not_found test_rename_type reqrep ', 'lda_word': ' test,adapt,session,execute,kernel,', 'lda_method': ' adapt,stop_channels,is_alive,handle_kernel_info_reply,find_connection_file,', 'lsi_word': ' kernel,test,start,manager,install,', 'lsi_method': ' init,check_packers,utcnow,get_ipc_km,new_auth,', 'spm_method': ' ', 'text_summary': "Subclasses may override  Prepares a kernel for startup in a separate process. Prepares a kernel for startup in a separate process. return ip for localhost (almost always 127.0.0.1)   Ensure that a sequence of kernel startups doesn't break anything. This method is called in the ioloop thread when a message arrives. Return the connection info as a dict. Subclasses may override Start the polling of the kernel. Ensure that a sequence of kernel startups doesn't break anything. find a connection file, and return its absolute path. return ip for localhost (almost always 127.0.0.1)      find a connection file, and return its absolute path. tunnel connections to a kernel via ssh. For tests, create a file to indicate that we've started. handle kernel info reply. Get the hb channel object for this kernel. Send a raw message via ident path. Returns the id to associate with the kernel for this request. Make a blocking client connected to my kernel. Immediately processes all pending messages on this channel. Return the number of running kernels. Interrupts the kernel by sending it a signal. Create an ssh tunnel using command-line ssh that connects port lport. This is run in the ioloop thread when the kernel info reply is received. default function for packing datetime objects in JSON. Start the polling of the kernel. Send a shutdown request via control channel. test load_connection_file() after. Sends an interrupt event using the specified handle. test that messages receive unique ids. Forgets randomly assigned port numbers and cleans up the connection file.", 'files_count': 34, 'files': ['test_kernelspec.py', 'kernelspec.py', 'test_kernelmanager.py', 'multikernelmanager.py', 'consoleapp.py', 'session.py', 'jsonutil.py', 'client.py', 'channelsabc.py', 'connect.py', 'manager.py', 'test_manager.py', 'test_multikernelmanager.py', 'utils.py', 'test_session.py', 'forward.py', 'threaded.py', 'restarter.py', 'signalkernel.py', 'tunnel.py', 'test_connect.py', 'channels.py', 'kernelspecapp.py', 'kernelapp.py', 'managerabc.py', 'test_adapter.py', 'test_jsonutil.py', 'localinterfaces.py', 'adapter.py', 'test_kernelapp.py', 'test_client.py', 'win_interrupt.py', 'runapp.py', 'launcher.py'], 'execution_path_count': 309, 'function_id_to_name_file': {'620': 'test_cant_install_kernel_spec(test_kernelspec.py)', '275': 'install_kernel_spec(kernelspec.py)', '268': '_get_destination_dir(kernelspec.py)', '257': '_is_valid_kernel_name(kernelspec.py)', '625': 'test_install_kernel_spec_prefix(test_kernelspec.py)', '261': 'install_kernel_spec(kernelspec.py)', '624': 'test_install_kernel_spec(test_kernelspec.py)', '614': 'test_start_sequence_process_kernels(test_kernelmanager.py)', '610': '_run_signaltest_lifecycle(test_kernelmanager.py)', '615': 'execute(test_kernelmanager.py)', '609': '_prepare_kernel(test_kernelmanager.py)', '611': 'test_start_parallel_process_kernels(test_kernelmanager.py)', '613': 'test_start_sequence_kernels(test_kernelmanager.py)', '612': 'test_start_parallel_thread_kernels(test_kernelmanager.py)', '398': '_kernel_manager_class_changed(multikernelmanager.py)', '396': '_create_kernel_manager_factory(multikernelmanager.py)', '424': 'create_kernel_manager(multikernelmanager.py)', '397': '_find_available_port(multikernelmanager.py)', '395': '_context_default(multikernelmanager.py)', '399': '_kernel_manager_factory_default(multikernelmanager.py)', '215': '__init__(consoleapp.py)', '485': '__init__(session.py)', '441': 'Session(session.py)', '457': '__init__(session.py)', '465': '_new_auth(session.py)', '459': '_check_packers(session.py)', '450': 'utcnow(session.py)', '244': 'squash_dates(jsonutil.py)', '90': 'AsyncKernelClient(client.py)', '147': 'KernelClient(client.py)', '139': 'HBChannelABC(channelsabc.py)', '138': 'ChannelABC(channelsabc.py)', '116': 'BlockingKernelClient(client.py)', '188': 'ConnectionFileMixin(connect.py)', '322': 'start_new_async_kernel(manager.py)', '319': 'AsyncKernelManager(manager.py)', '320': 'KernelManager(manager.py)', '224': 'AsyncIOLoopKernelManager(manager.py)', '225': 'IOLoopKernelManager(manager.py)', '635': 'test_connection_file_real_path(test_manager.py)', '663': 'test_start_parallel_thread_kernels(test_multikernelmanager.py)', '658': 'tcp_lifecycle_with_loop(test_multikernelmanager.py)', '667': 'test_tcp_lifecycle(test_multikernelmanager.py)', '657': '_run_lifecycle(test_multikernelmanager.py)', '662': 'test_start_parallel_process_kernels(test_multikernelmanager.py)', '704': 'execute(utils.py)', '155': 'execute(client.py)', '148': 'validate_string_dict(client.py)', '689': 'test_datetimes_msgpack(test_session.py)', '679': '_datetime_test(test_session.py)', '688': 'test_datetimes(test_session.py)', '690': 'test_datetimes_pickle(test_session.py)', '492': 'handle(forward.py)', '734': 'send(threaded.py)', '738': 'thread_send(threaded.py)', '328': 'interrupt_kernel(manager.py)', '694': 'test_send(test_session.py)', '664': 'test_start_sequence_ipc_kernels(test_multikernelmanager.py)', '654': '_get_ipc_km(test_multikernelmanager.py)', '392': '__init__(multikernelmanager.py)', '660': 'test_ipc_lifecycle(test_multikernelmanager.py)', '659': 'test_ipc_cinfo(test_multikernelmanager.py)', '423': 'start_kernel(multikernelmanager.py)', '415': 'pre_start_kernel(multikernelmanager.py)', '380': 'DuplicateKernelError(multikernelmanager.py)', '414': 'new_kernel_id(multikernelmanager.py)', '389': 'start_kernel(multikernelmanager.py)', '238': 'start(restarter.py)', '430': 'poll(restarter.py)', '433': 'stop(restarter.py)', '428': '_fire_callbacks(restarter.py)', '510': 'do_execute(signalkernel.py)', '190': 'tunnel_to_kernel(connect.py)', '501': 'openssh_tunnel(tunnel.py)', '494': 'SSHException(tunnel.py)', '497': '_stop_tunnel(tunnel.py)', '479': 'recv(session.py)', '475': 'feed_identities(session.py)', '330': 'restart_kernel(manager.py)', '202': 'cleanup_random_ports(connect.py)', '200': 'cleanup_connection_file(connect.py)', '567': 'test_mixin_cleanup_random_ports(test_connect.py)', '106': 'ZMQSocketChannel(channels.py)', '109': 'close(channels.py)', '226': 'as_zmqstream(manager.py)', '233': 'wrapped(manager.py)', '568': 'test_mixin_record_random_ports(test_connect.py)', '557': 'DummyConfigurable(test_connect.py)', '235': 'IOLoopKernelRestarter(restarter.py)', '426': 'KernelRestarter(restarter.py)', '234': 'AsyncIOLoopKernelRestarter(restarter.py)', '291': 'start(kernelspecapp.py)', '251': 'start(kernelapp.py)', '249': 'setup_signals(kernelapp.py)', '252': 'shutdown_handler(kernelapp.py)', '250': 'shutdown(kernelapp.py)', '248': 'log_connection_info(kernelapp.py)', '199': 'blocking_client(connect.py)', '208': 'get_connection_info(connect.py)', '725': 'stop_channels(threaded.py)', '373': 'is_alive(managerabc.py)', '684': 'test_bad_unpack(test_session.py)', '676': '_bad_unpacker(test_session.py)', '536': 'test_complete_request(test_adapter.py)', '517': 'adapt(test_adapter.py)', '562': 'test_find_connection_file_local(test_connect.py)', '189': 'find_connection_file(connect.py)', '730': 'close(threaded.py)', '493': 'SubHander(forward.py)', '490': 'Handler(forward.py)', '253': 'KernelSpec(kernelspec.py)', '718': 'close(threaded.py)', '132': 'close(channels.py)', '114': 'send(channels.py)', '88': 'send(channels.py)', '83': 'close(channels.py)', '575': 'test_date_default(test_jsonutil.py)', '241': 'date_default(jsonutil.py)', '240': '_ensure_tzinfo(jsonutil.py)', '597': 'test_subclasses(test_kernelmanager.py)', '703': 'AsyncKernelManagerWithCleanup(utils.py)', '595': 'test_signal_kernel_subprocesses(test_kernelmanager.py)', '598': 'execute(test_kernelmanager.py)', '702': 'AsyncKernelManagerSubclass(utils.py)', '591': 'transport(test_kernelmanager.py)', '606': 'test_templated_kspec_env(test_kernelmanager.py)', '599': '_env_test_body(test_kernelmanager.py)', '607': 'execute(test_kernelmanager.py)', '604': 'test_signal_kernel_subprocesses(test_kernelmanager.py)', '608': 'execute(test_kernelmanager.py)', '586': 'env(test_kernelmanager.py)', '712': 'stop(utils.py)', '711': 'start(utils.py)', '705': 'test_env(utils.py)', '630': 'test_validate_kernel_name(test_kernelspec.py)', '506': 'SignalTestApp(signalkernel.py)', '507': 'SignalTestKernel(signalkernel.py)', '627': 'test_remove_kernel_spec(test_kernelspec.py)', '617': '_install_sample_kernel(test_kernelspec.py)', '626': 'test_kernel_spec_priority(test_kernelspec.py)', '651': 'test_tcp_cinfo(test_multikernelmanager.py)', '640': '_run_cinfo(test_multikernelmanager.py)', '621': 'test_find_all_specs(test_kernelspec.py)', '622': 'test_find_kernel_specs(test_kernelspec.py)', '623': 'test_get_kernel_spec(test_kernelspec.py)', '619': 'tearDown(test_kernelspec.py)', '618': 'setUp(test_kernelspec.py)', '649': 'test_start_sequence_ipc_kernels(test_multikernelmanager.py)', '641': '_run_lifecycle(test_multikernelmanager.py)', '650': 'test_start_sequence_tcp_kernels(test_multikernelmanager.py)', '644': 'test_ipc_cinfo(test_multikernelmanager.py)', '315': 'localhost(localinterfaces.py)', '645': 'test_ipc_lifecycle(test_multikernelmanager.py)', '665': 'test_start_sequence_tcp_kernels(test_multikernelmanager.py)', '656': '_run_cinfo(test_multikernelmanager.py)', '666': 'test_tcp_cinfo(test_multikernelmanager.py)', '668': 'test_tcp_lifecycle_with_kernel_id(test_multikernelmanager.py)', '569': 'test_secure_write(test_connect.py)', '573': 'check_user_only_permissions(test_connect.py)', '574': 'fetch_win32_permissions(test_connect.py)', '563': 'test_find_connection_file_relative(test_connect.py)', '561': 'test_find_connection_file_abspath(test_connect.py)', '560': 'test_find_connection_file(test_connect.py)', '565': 'test_load_connection_file_session_with_kn(test_connect.py)', '539': 'test_input_request(test_adapter.py)', '564': 'test_load_connection_file_session(test_connect.py)', '537': 'test_display_data(test_adapter.py)', '540': 'test_inspect_reply(test_adapter.py)', '543': 'test_kernel_info_reply(test_adapter.py)', '542': 'test_inspect_request_token(test_adapter.py)', '535': 'test_complete_reply(test_adapter.py)', '541': 'test_inspect_request(test_adapter.py)', '538': 'test_execute_request(test_adapter.py)', '545': 'test_rename_type(test_adapter.py)', '544': 'test_no_adapt(test_adapter.py)', '546': 'test_same_version(test_adapter.py)', '514': 'V5toV4TestCase(test_adapter.py)', '512': 'AdapterTest(test_adapter.py)', '526': 'test_input_request(test_adapter.py)', '523': 'test_display_data(test_adapter.py)', '527': 'test_kernel_info_reply(test_adapter.py)', '530': 'test_object_info_reply_not_found(test_adapter.py)', '529': 'test_object_info_reply(test_adapter.py)', '531': 'test_object_info_request(test_adapter.py)', '521': 'test_complete_reply(test_adapter.py)', '522': 'test_complete_request(test_adapter.py)', '524': 'test_execute_reply(test_adapter.py)', '532': 'test_rename_type(test_adapter.py)', '525': 'test_execute_request(test_adapter.py)', '528': 'test_no_adapt(test_adapter.py)', '533': 'test_same_version(test_adapter.py)', '513': 'V4toV5TestCase(test_adapter.py)', '519': 'setUp(test_adapter.py)', '516': 'test_default_version(test_adapter.py)', '515': 'test_code_to_line_no_code(test_adapter.py)', '51': 'code_to_line(adapter.py)', '158': 'get_shell_msg(client.py)', '157': 'get_iopub_msg(client.py)', '710': '__exit__(utils.py)', '709': '__enter__(utils.py)', '580': 'test_kernelapp_lifecycle(test_kernelapp.py)', '579': '_launch(test_kernelapp.py)', '686': 'test_clone(test_session.py)', '473': 'clone(session.py)', '695': 'test_send_raw(test_session.py)', '481': 'send_raw(session.py)', '483': 'sign(session.py)', '683': 'test_bad_roundtrip(test_session.py)', '685': 'test_bad_unpacker(test_session.py)', '682': 'test_bad_packer(test_session.py)', '681': 'test_bad_pack(test_session.py)', '675': '_bad_packer(test_session.py)', '687': 'test_cull_digest_history(test_session.py)', '700': 'test_zero_digest_history(test_session.py)', '697': 'test_session_id(test_session.py)', '699': 'test_unique_msg_ids(test_session.py)', '445': 'msg_header(session.py)', '698': 'test_tracking(test_session.py)', '680': 'test_args(test_session.py)', '478': 'msg_id(session.py)', '696': 'test_serialize(test_session.py)', '674': 'TestSession(test_session.py)', '673': 'SessionTestCase(test_session.py)', '678': 'setUp(test_session.py)', '556': 'test_shutdown(test_client.py)', '548': '_check_reply(test_client.py)', '550': 'test_comm_info(test_client.py)', '555': 'test_kernel_info(test_client.py)', '551': 'test_complete(test_client.py)', '554': 'test_inspect(test_client.py)', '553': 'test_history(test_client.py)', '549': 'setUp(test_client.py)', '255': 'NoSuchKernel(kernelspec.py)', '117': 'reqrep(client.py)', '124': 'wrapped(client.py)', '123': 'wait_for_ready(client.py)', '150': '_handle_kernel_info_reply(client.py)', '125': 'HBChannel(channels.py)', '104': 'wait_for_ready(client.py)', '102': 'hb_channel(client.py)', '196': '_make_url(connect.py)', '91': 'reqrep(client.py)', '105': 'wrapped(client.py)', '80': 'ZMQSocketChannel(channels.py)', '154': 'control_channel(client.py)', '723': 'ioloop(threaded.py)', '160': 'hb_channel(client.py)', '171': 'stdin_channel(client.py)', '164': 'iopub_channel(client.py)', '168': 'shell_channel(client.py)', '740': 'send_interrupt(win_interrupt.py)', '334': '__del__(manager.py)', '293': 'start(kernelspecapp.py)', '294': 'path_key(kernelspecapp.py)', '735': 'start(threaded.py)', '720': 'start(threaded.py)', '141': 'start(channelsabc.py)', '432': 'start(restarter.py)', '288': 'start(kernelspecapp.py)', '89': 'start(channels.py)', '115': 'start(channels.py)', '290': 'start(kernelspecapp.py)', '438': 'parse_command_line(runapp.py)', '218': 'build_kernel_argv(consoleapp.py)', '308': '_only_once(localinterfaces.py)', '317': 'wrapped(localinterfaces.py)', '47': 'V4toV5(adapter.py)', '46': 'Adapter(adapter.py)', '77': 'object_info_request(adapter.py)', '52': 'extract_oname_v4(adapter.py)', '70': 'complete_request(adapter.py)', '75': 'kernel_info_reply(adapter.py)', '49': '_version_str_to_list(adapter.py)', '48': 'V5toV4(adapter.py)', '53': '__call__(adapter.py)', '54': 'handle_reply_status_error(adapter.py)', '57': 'update_msg_type(adapter.py)', '56': 'update_metadata(adapter.py)', '55': 'update_header(adapter.py)', '247': 'initialize(kernelapp.py)', '246': '_record_started(kernelapp.py)', '585': 'config(test_kernelmanager.py)', '262': 'install_native_kernel_spec(kernelspec.py)', '276': 'install_native_kernel_spec(kernelspec.py)', '265': 'to_json(kernelspec.py)', '264': 'to_dict(kernelspec.py)', '449': 'test_msg2obj(session.py)', '440': 'Message(session.py)', '453': '__init__(session.py)', '470': '_signature_scheme_changed(session.py)', '463': '_key_default(session.py)', '447': 'new_id_bytes(session.py)', '462': '_key_changed(session.py)', '443': 'default_secure(session.py)', '469': '_session_default(session.py)', '446': 'new_id(session.py)', '412': 'is_alive(multikernelmanager.py)', '420': 'shutdown_all(multikernelmanager.py)', '413': 'list_kernel_ids(multikernelmanager.py)', '721': 'stop(threaded.py)', '140': 'is_alive(channelsabc.py)', '732': 'is_alive(threaded.py)', '112': 'is_alive(channels.py)', '86': 'is_alive(channels.py)', '724': 'start_channels(threaded.py)', '722': '_check_kernel_info_reply(threaded.py)', '716': '__init__(threaded.py)', '387': 'shutdown_kernel(multikernelmanager.py)', '416': 'remove_kernel(multikernelmanager.py)', '713': 'IOLoopThread(threaded.py)', '714': 'ThreadedKernelClient(threaded.py)', '715': 'ThreadedZMQSocketChannel(threaded.py)', '731': 'flush(threaded.py)', '727': '_flush(threaded.py)', '386': 'shutdown_all(multikernelmanager.py)', '418': 'request_shutdown(multikernelmanager.py)', '402': 'cleanup_resources(multikernelmanager.py)', '408': 'finish_shutdown(multikernelmanager.py)', '393': '__len__(multikernelmanager.py)', '421': 'shutdown_kernel(multikernelmanager.py)', '198': '_session_default(connect.py)', '298': 'launch_kernel(launcher.py)', '739': 'create_interrupt_event(win_interrupt.py)', '741': 'SECURITY_ATTRIBUTES(win_interrupt.py)', '509': '__init__(signalkernel.py)', '278': '__init__(kernelspec.py)', '127': '__init__(channels.py)', '126': 'InvalidPortNumber(channels.py)', '107': '__init__(channels.py)', '81': '__init__(channels.py)', '726': '__init__(threaded.py)', '737': 'setup_stream(threaded.py)', '728': '_handle_recv(threaded.py)', '729': 'call_handlers(threaded.py)', '136': 'stop(channels.py)', '133': 'is_beating(channels.py)', '135': 'run(channels.py)', '145': 'time_to_dead(channelsabc.py)', '131': 'call_handlers(channels.py)', '130': '_poll(channels.py)'}}, {'key': 358, 'parent': 2123, 'tfidf_word': 'EP: 358, Name: interrupt_kernel &rarr; send &rarr; Message', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 777, 'parent': 2123, 'tfidf_word': 'EP: 777, Name: test_send &rarr; send &rarr; Message', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 790, 'parent': 1831, 'tfidf_word': 'EP: 790, Name: test_tracking &rarr; send &rarr; serialize &rarr; sign', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1391, 'parent': 1831, 'tfidf_word': 'EP: 1391, Name: handle &rarr; send &rarr; serialize &rarr; sign', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 357, 'parent': 1890, 'tfidf_word': 'EP: 357, Name: interrupt_kernel &rarr; send &rarr; serialize &rarr; sign', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 776, 'parent': 1890, 'tfidf_word': 'EP: 776, Name: test_send &rarr; send &rarr; serialize &rarr; sign', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 3, 'parent': 2091, 'tfidf_word': 'EP: 3, Name: run &rarr; _create_socket &rarr; close', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2090, 'parent': 2091, 'tfidf_word': 'close create run socket ', 'tfidf_method': '_create_socket run close close ', 'lda_word': ' socket,create,close,run,', 'lda_method': ' close,run,create_socket,', 'lsi_word': ' socket,create,run,close,', 'lsi_method': ' create_socket,run,close,', 'spm_method': ' ', 'text_summary': '', 'files_count': 1, 'files': ['channels.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'135': 'run(channels.py)', '128': '_create_socket(channels.py)', '83': 'close(channels.py)', '109': 'close(channels.py)'}}, {'key': 592, 'parent': 2135, 'tfidf_word': 'EP: 592, Name: wait_for_ready &rarr; get_msg &rarr; _recv', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2130, 'parent': 2135, 'tfidf_word': 'recv get msg iopub stdin ', 'tfidf_method': '_recv get_msg get_stdin_msg get_msgs get_iopub_msg ', 'lda_word': ' get,msg,recv,iopub,stdin,', 'lda_method': ' get_msg,recv,get_stdin_msg,get_iopub_msg,get_msgs,', 'lsi_word': ' get,msg,recv,stdin,iopub,', 'lsi_method': ' get_msg,recv,get_msgs,get_iopub_msg,get_stdin_msg,', 'spm_method': ' ', 'text_summary': 'Gets a message if there is one that is ready.', 'files_count': 2, 'files': ['client.py', 'channels.py'], 'execution_path_count': 3, 'function_id_to_name_file': {'101': 'get_stdin_msg(client.py)', '84': 'get_msg(channels.py)', '82': '_recv(channels.py)', '85': 'get_msgs(channels.py)', '99': 'get_iopub_msg(client.py)'}}, {'key': 694, 'parent': 2142, 'tfidf_word': 'EP: 694, Name: wait_for_ready &rarr; get_msg &rarr; _recv', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2140, 'parent': 2142, 'tfidf_word': 'recv get msg iopub ready stdin wait ', 'tfidf_method': '_recv get_msg get_stdin_msg wait_for_ready get_msgs get_iopub_msg ', 'lda_word': ' get,msg,recv,wait,stdin,', 'lda_method': ' get_msg,recv,get_msgs,get_stdin_msg,get_iopub_msg,', 'lsi_word': ' msg,get,recv,iopub,stdin,', 'lsi_method': ' get_msg,recv,wait_for_ready,get_iopub_msg,get_msgs,', 'spm_method': ' ', 'text_summary': 'Gets a message if there is one that is ready.', 'files_count': 2, 'files': ['channels.py', 'client.py'], 'execution_path_count': 4, 'function_id_to_name_file': {'111': 'get_msgs(channels.py)', '110': 'get_msg(channels.py)', '108': '_recv(channels.py)', '104': 'wait_for_ready(client.py)', '99': 'get_iopub_msg(client.py)', '101': 'get_stdin_msg(client.py)'}}, {'key': 2652, 'parent': 2750, 'tfidf_word': 'destination dir get name valid install spec cant prefix kernel ', 'tfidf_method': 'install_kernel_spec _is_valid_kernel_name _get_destination_dir install_kernel_spec test_cant_install_kernel_spec test_install_kernel_spec test_install_kernel_spec_prefix ', 'lda_word': ' kernel,install,spec,test,dir,', 'lda_method': ' install_kernel_spec,is_valid_kernel_name,get_destination_dir,test_cant_install_kernel_spec,test_install_kernel_spec_prefix,', 'lsi_word': ' kernel,spec,install,test,valid,', 'lsi_method': ' install_kernel_spec,is_valid_kernel_name,get_destination_dir,test_cant_install_kernel_spec,test_install_kernel_spec_prefix,', 'spm_method': ' ', 'text_summary': '', 'files_count': 2, 'files': ['test_kernelspec.py', 'kernelspec.py'], 'execution_path_count': 8, 'function_id_to_name_file': {'620': 'test_cant_install_kernel_spec(test_kernelspec.py)', '275': 'install_kernel_spec(kernelspec.py)', '268': '_get_destination_dir(kernelspec.py)', '257': '_is_valid_kernel_name(kernelspec.py)', '625': 'test_install_kernel_spec_prefix(test_kernelspec.py)', '261': 'install_kernel_spec(kernelspec.py)', '624': 'test_install_kernel_spec(test_kernelspec.py)'}}, {'key': 2749, 'parent': 2750, 'tfidf_word': 'loop name flush native permission io cleanup code restarter tunnel ', 'tfidf_method': 'extract_oname_v4 test_complete_reply test_display_data test_execute_reply test_execute_request test_input_request test_kernel_info_reply test_no_adapt test_object_info_reply_not_found reqrep ', 'lda_word': ' test,execute,send,env,session,', 'lda_method': ' session,close,launch_kernel,check_reply,send,', 'lsi_word': ' kernel,test,start,manager,lifecycle,', 'lsi_method': ' init,check_packers,utcnow,get_ipc_km,new_auth,', 'spm_method': ' ', 'text_summary': "Subclasses may override  Prepares a kernel for startup in a separate process. Prepares a kernel for startup in a separate process. return ip for localhost (almost always 127.0.0.1)   Ensure that a sequence of kernel startups doesn't break anything. Return the connection info as a dict. Subclasses may override Start the polling of the kernel. Ensure that a sequence of kernel startups doesn't break anything. find a connection file, and return its absolute path. return ip for localhost (almost always 127.0.0.1)      find a connection file, and return its absolute path. tunnel connections to a kernel via ssh. For tests, create a file to indicate that we've started. handle kernel info reply. Get the hb channel object for this kernel. Send a raw message via ident path. Returns the id to associate with the kernel for this request. Make a blocking client connected to my kernel. Immediately processes all pending messages on this channel. Return the number of running kernels. Interrupts the kernel by sending it a signal. Create an ssh tunnel using command-line ssh that connects port lport. This is run in the ioloop thread when the kernel info reply is received. default function for packing datetime objects in JSON. Start the polling of the kernel. Send a shutdown request via control channel. test load_connection_file() after. Sends an interrupt event using the specified handle. test that messages receive unique ids. Forgets randomly assigned port numbers and cleans up the connection file.", 'files_count': 34, 'files': ['test_kernelmanager.py', 'multikernelmanager.py', 'consoleapp.py', 'session.py', 'jsonutil.py', 'client.py', 'channelsabc.py', 'connect.py', 'manager.py', 'test_manager.py', 'test_multikernelmanager.py', 'utils.py', 'test_session.py', 'forward.py', 'threaded.py', 'restarter.py', 'signalkernel.py', 'tunnel.py', 'test_connect.py', 'channels.py', 'kernelspecapp.py', 'kernelapp.py', 'managerabc.py', 'test_adapter.py', 'kernelspec.py', 'test_jsonutil.py', 'test_kernelspec.py', 'localinterfaces.py', 'adapter.py', 'test_kernelapp.py', 'test_client.py', 'win_interrupt.py', 'runapp.py', 'launcher.py'], 'execution_path_count': 301, 'function_id_to_name_file': {'614': 'test_start_sequence_process_kernels(test_kernelmanager.py)', '610': '_run_signaltest_lifecycle(test_kernelmanager.py)', '615': 'execute(test_kernelmanager.py)', '609': '_prepare_kernel(test_kernelmanager.py)', '611': 'test_start_parallel_process_kernels(test_kernelmanager.py)', '613': 'test_start_sequence_kernels(test_kernelmanager.py)', '612': 'test_start_parallel_thread_kernels(test_kernelmanager.py)', '398': '_kernel_manager_class_changed(multikernelmanager.py)', '396': '_create_kernel_manager_factory(multikernelmanager.py)', '424': 'create_kernel_manager(multikernelmanager.py)', '397': '_find_available_port(multikernelmanager.py)', '395': '_context_default(multikernelmanager.py)', '399': '_kernel_manager_factory_default(multikernelmanager.py)', '215': '__init__(consoleapp.py)', '485': '__init__(session.py)', '441': 'Session(session.py)', '457': '__init__(session.py)', '465': '_new_auth(session.py)', '459': '_check_packers(session.py)', '450': 'utcnow(session.py)', '244': 'squash_dates(jsonutil.py)', '90': 'AsyncKernelClient(client.py)', '147': 'KernelClient(client.py)', '139': 'HBChannelABC(channelsabc.py)', '138': 'ChannelABC(channelsabc.py)', '116': 'BlockingKernelClient(client.py)', '188': 'ConnectionFileMixin(connect.py)', '322': 'start_new_async_kernel(manager.py)', '319': 'AsyncKernelManager(manager.py)', '320': 'KernelManager(manager.py)', '224': 'AsyncIOLoopKernelManager(manager.py)', '225': 'IOLoopKernelManager(manager.py)', '635': 'test_connection_file_real_path(test_manager.py)', '663': 'test_start_parallel_thread_kernels(test_multikernelmanager.py)', '658': 'tcp_lifecycle_with_loop(test_multikernelmanager.py)', '667': 'test_tcp_lifecycle(test_multikernelmanager.py)', '657': '_run_lifecycle(test_multikernelmanager.py)', '662': 'test_start_parallel_process_kernels(test_multikernelmanager.py)', '704': 'execute(utils.py)', '155': 'execute(client.py)', '148': 'validate_string_dict(client.py)', '689': 'test_datetimes_msgpack(test_session.py)', '679': '_datetime_test(test_session.py)', '688': 'test_datetimes(test_session.py)', '690': 'test_datetimes_pickle(test_session.py)', '492': 'handle(forward.py)', '734': 'send(threaded.py)', '738': 'thread_send(threaded.py)', '328': 'interrupt_kernel(manager.py)', '694': 'test_send(test_session.py)', '664': 'test_start_sequence_ipc_kernels(test_multikernelmanager.py)', '654': '_get_ipc_km(test_multikernelmanager.py)', '392': '__init__(multikernelmanager.py)', '660': 'test_ipc_lifecycle(test_multikernelmanager.py)', '659': 'test_ipc_cinfo(test_multikernelmanager.py)', '423': 'start_kernel(multikernelmanager.py)', '415': 'pre_start_kernel(multikernelmanager.py)', '380': 'DuplicateKernelError(multikernelmanager.py)', '414': 'new_kernel_id(multikernelmanager.py)', '389': 'start_kernel(multikernelmanager.py)', '238': 'start(restarter.py)', '430': 'poll(restarter.py)', '433': 'stop(restarter.py)', '428': '_fire_callbacks(restarter.py)', '510': 'do_execute(signalkernel.py)', '190': 'tunnel_to_kernel(connect.py)', '501': 'openssh_tunnel(tunnel.py)', '494': 'SSHException(tunnel.py)', '497': '_stop_tunnel(tunnel.py)', '479': 'recv(session.py)', '475': 'feed_identities(session.py)', '330': 'restart_kernel(manager.py)', '202': 'cleanup_random_ports(connect.py)', '200': 'cleanup_connection_file(connect.py)', '567': 'test_mixin_cleanup_random_ports(test_connect.py)', '106': 'ZMQSocketChannel(channels.py)', '109': 'close(channels.py)', '226': 'as_zmqstream(manager.py)', '233': 'wrapped(manager.py)', '568': 'test_mixin_record_random_ports(test_connect.py)', '557': 'DummyConfigurable(test_connect.py)', '235': 'IOLoopKernelRestarter(restarter.py)', '426': 'KernelRestarter(restarter.py)', '234': 'AsyncIOLoopKernelRestarter(restarter.py)', '291': 'start(kernelspecapp.py)', '251': 'start(kernelapp.py)', '249': 'setup_signals(kernelapp.py)', '252': 'shutdown_handler(kernelapp.py)', '250': 'shutdown(kernelapp.py)', '248': 'log_connection_info(kernelapp.py)', '199': 'blocking_client(connect.py)', '208': 'get_connection_info(connect.py)', '725': 'stop_channels(threaded.py)', '373': 'is_alive(managerabc.py)', '684': 'test_bad_unpack(test_session.py)', '676': '_bad_unpacker(test_session.py)', '536': 'test_complete_request(test_adapter.py)', '517': 'adapt(test_adapter.py)', '562': 'test_find_connection_file_local(test_connect.py)', '189': 'find_connection_file(connect.py)', '730': 'close(threaded.py)', '493': 'SubHander(forward.py)', '490': 'Handler(forward.py)', '253': 'KernelSpec(kernelspec.py)', '718': 'close(threaded.py)', '132': 'close(channels.py)', '114': 'send(channels.py)', '88': 'send(channels.py)', '83': 'close(channels.py)', '575': 'test_date_default(test_jsonutil.py)', '241': 'date_default(jsonutil.py)', '240': '_ensure_tzinfo(jsonutil.py)', '597': 'test_subclasses(test_kernelmanager.py)', '703': 'AsyncKernelManagerWithCleanup(utils.py)', '595': 'test_signal_kernel_subprocesses(test_kernelmanager.py)', '598': 'execute(test_kernelmanager.py)', '702': 'AsyncKernelManagerSubclass(utils.py)', '591': 'transport(test_kernelmanager.py)', '606': 'test_templated_kspec_env(test_kernelmanager.py)', '599': '_env_test_body(test_kernelmanager.py)', '607': 'execute(test_kernelmanager.py)', '604': 'test_signal_kernel_subprocesses(test_kernelmanager.py)', '608': 'execute(test_kernelmanager.py)', '586': 'env(test_kernelmanager.py)', '712': 'stop(utils.py)', '711': 'start(utils.py)', '705': 'test_env(utils.py)', '630': 'test_validate_kernel_name(test_kernelspec.py)', '257': '_is_valid_kernel_name(kernelspec.py)', '506': 'SignalTestApp(signalkernel.py)', '507': 'SignalTestKernel(signalkernel.py)', '627': 'test_remove_kernel_spec(test_kernelspec.py)', '617': '_install_sample_kernel(test_kernelspec.py)', '626': 'test_kernel_spec_priority(test_kernelspec.py)', '651': 'test_tcp_cinfo(test_multikernelmanager.py)', '640': '_run_cinfo(test_multikernelmanager.py)', '621': 'test_find_all_specs(test_kernelspec.py)', '622': 'test_find_kernel_specs(test_kernelspec.py)', '623': 'test_get_kernel_spec(test_kernelspec.py)', '619': 'tearDown(test_kernelspec.py)', '618': 'setUp(test_kernelspec.py)', '649': 'test_start_sequence_ipc_kernels(test_multikernelmanager.py)', '641': '_run_lifecycle(test_multikernelmanager.py)', '650': 'test_start_sequence_tcp_kernels(test_multikernelmanager.py)', '644': 'test_ipc_cinfo(test_multikernelmanager.py)', '315': 'localhost(localinterfaces.py)', '645': 'test_ipc_lifecycle(test_multikernelmanager.py)', '665': 'test_start_sequence_tcp_kernels(test_multikernelmanager.py)', '656': '_run_cinfo(test_multikernelmanager.py)', '666': 'test_tcp_cinfo(test_multikernelmanager.py)', '668': 'test_tcp_lifecycle_with_kernel_id(test_multikernelmanager.py)', '569': 'test_secure_write(test_connect.py)', '573': 'check_user_only_permissions(test_connect.py)', '574': 'fetch_win32_permissions(test_connect.py)', '563': 'test_find_connection_file_relative(test_connect.py)', '561': 'test_find_connection_file_abspath(test_connect.py)', '560': 'test_find_connection_file(test_connect.py)', '565': 'test_load_connection_file_session_with_kn(test_connect.py)', '539': 'test_input_request(test_adapter.py)', '564': 'test_load_connection_file_session(test_connect.py)', '537': 'test_display_data(test_adapter.py)', '540': 'test_inspect_reply(test_adapter.py)', '543': 'test_kernel_info_reply(test_adapter.py)', '542': 'test_inspect_request_token(test_adapter.py)', '535': 'test_complete_reply(test_adapter.py)', '541': 'test_inspect_request(test_adapter.py)', '538': 'test_execute_request(test_adapter.py)', '545': 'test_rename_type(test_adapter.py)', '544': 'test_no_adapt(test_adapter.py)', '546': 'test_same_version(test_adapter.py)', '514': 'V5toV4TestCase(test_adapter.py)', '512': 'AdapterTest(test_adapter.py)', '526': 'test_input_request(test_adapter.py)', '523': 'test_display_data(test_adapter.py)', '527': 'test_kernel_info_reply(test_adapter.py)', '530': 'test_object_info_reply_not_found(test_adapter.py)', '529': 'test_object_info_reply(test_adapter.py)', '531': 'test_object_info_request(test_adapter.py)', '521': 'test_complete_reply(test_adapter.py)', '522': 'test_complete_request(test_adapter.py)', '524': 'test_execute_reply(test_adapter.py)', '532': 'test_rename_type(test_adapter.py)', '525': 'test_execute_request(test_adapter.py)', '528': 'test_no_adapt(test_adapter.py)', '533': 'test_same_version(test_adapter.py)', '513': 'V4toV5TestCase(test_adapter.py)', '519': 'setUp(test_adapter.py)', '516': 'test_default_version(test_adapter.py)', '515': 'test_code_to_line_no_code(test_adapter.py)', '51': 'code_to_line(adapter.py)', '158': 'get_shell_msg(client.py)', '157': 'get_iopub_msg(client.py)', '710': '__exit__(utils.py)', '709': '__enter__(utils.py)', '580': 'test_kernelapp_lifecycle(test_kernelapp.py)', '579': '_launch(test_kernelapp.py)', '686': 'test_clone(test_session.py)', '473': 'clone(session.py)', '695': 'test_send_raw(test_session.py)', '481': 'send_raw(session.py)', '483': 'sign(session.py)', '683': 'test_bad_roundtrip(test_session.py)', '685': 'test_bad_unpacker(test_session.py)', '682': 'test_bad_packer(test_session.py)', '681': 'test_bad_pack(test_session.py)', '675': '_bad_packer(test_session.py)', '687': 'test_cull_digest_history(test_session.py)', '700': 'test_zero_digest_history(test_session.py)', '697': 'test_session_id(test_session.py)', '699': 'test_unique_msg_ids(test_session.py)', '445': 'msg_header(session.py)', '698': 'test_tracking(test_session.py)', '680': 'test_args(test_session.py)', '478': 'msg_id(session.py)', '696': 'test_serialize(test_session.py)', '674': 'TestSession(test_session.py)', '673': 'SessionTestCase(test_session.py)', '678': 'setUp(test_session.py)', '556': 'test_shutdown(test_client.py)', '548': '_check_reply(test_client.py)', '550': 'test_comm_info(test_client.py)', '555': 'test_kernel_info(test_client.py)', '551': 'test_complete(test_client.py)', '554': 'test_inspect(test_client.py)', '553': 'test_history(test_client.py)', '549': 'setUp(test_client.py)', '255': 'NoSuchKernel(kernelspec.py)', '117': 'reqrep(client.py)', '124': 'wrapped(client.py)', '123': 'wait_for_ready(client.py)', '150': '_handle_kernel_info_reply(client.py)', '125': 'HBChannel(channels.py)', '104': 'wait_for_ready(client.py)', '102': 'hb_channel(client.py)', '196': '_make_url(connect.py)', '91': 'reqrep(client.py)', '105': 'wrapped(client.py)', '80': 'ZMQSocketChannel(channels.py)', '154': 'control_channel(client.py)', '723': 'ioloop(threaded.py)', '160': 'hb_channel(client.py)', '171': 'stdin_channel(client.py)', '164': 'iopub_channel(client.py)', '168': 'shell_channel(client.py)', '740': 'send_interrupt(win_interrupt.py)', '334': '__del__(manager.py)', '293': 'start(kernelspecapp.py)', '294': 'path_key(kernelspecapp.py)', '735': 'start(threaded.py)', '720': 'start(threaded.py)', '141': 'start(channelsabc.py)', '432': 'start(restarter.py)', '288': 'start(kernelspecapp.py)', '89': 'start(channels.py)', '115': 'start(channels.py)', '290': 'start(kernelspecapp.py)', '438': 'parse_command_line(runapp.py)', '218': 'build_kernel_argv(consoleapp.py)', '308': '_only_once(localinterfaces.py)', '317': 'wrapped(localinterfaces.py)', '47': 'V4toV5(adapter.py)', '46': 'Adapter(adapter.py)', '77': 'object_info_request(adapter.py)', '52': 'extract_oname_v4(adapter.py)', '70': 'complete_request(adapter.py)', '75': 'kernel_info_reply(adapter.py)', '49': '_version_str_to_list(adapter.py)', '48': 'V5toV4(adapter.py)', '53': '__call__(adapter.py)', '54': 'handle_reply_status_error(adapter.py)', '57': 'update_msg_type(adapter.py)', '56': 'update_metadata(adapter.py)', '55': 'update_header(adapter.py)', '247': 'initialize(kernelapp.py)', '246': '_record_started(kernelapp.py)', '585': 'config(test_kernelmanager.py)', '262': 'install_native_kernel_spec(kernelspec.py)', '276': 'install_native_kernel_spec(kernelspec.py)', '265': 'to_json(kernelspec.py)', '264': 'to_dict(kernelspec.py)', '449': 'test_msg2obj(session.py)', '440': 'Message(session.py)', '453': '__init__(session.py)', '470': '_signature_scheme_changed(session.py)', '463': '_key_default(session.py)', '447': 'new_id_bytes(session.py)', '462': '_key_changed(session.py)', '443': 'default_secure(session.py)', '469': '_session_default(session.py)', '446': 'new_id(session.py)', '412': 'is_alive(multikernelmanager.py)', '420': 'shutdown_all(multikernelmanager.py)', '413': 'list_kernel_ids(multikernelmanager.py)', '721': 'stop(threaded.py)', '140': 'is_alive(channelsabc.py)', '732': 'is_alive(threaded.py)', '112': 'is_alive(channels.py)', '86': 'is_alive(channels.py)', '724': 'start_channels(threaded.py)', '722': '_check_kernel_info_reply(threaded.py)', '716': '__init__(threaded.py)', '387': 'shutdown_kernel(multikernelmanager.py)', '416': 'remove_kernel(multikernelmanager.py)', '713': 'IOLoopThread(threaded.py)', '714': 'ThreadedKernelClient(threaded.py)', '715': 'ThreadedZMQSocketChannel(threaded.py)', '731': 'flush(threaded.py)', '727': '_flush(threaded.py)', '386': 'shutdown_all(multikernelmanager.py)', '418': 'request_shutdown(multikernelmanager.py)', '402': 'cleanup_resources(multikernelmanager.py)', '408': 'finish_shutdown(multikernelmanager.py)', '393': '__len__(multikernelmanager.py)', '421': 'shutdown_kernel(multikernelmanager.py)', '198': '_session_default(connect.py)', '298': 'launch_kernel(launcher.py)', '739': 'create_interrupt_event(win_interrupt.py)', '741': 'SECURITY_ATTRIBUTES(win_interrupt.py)', '509': '__init__(signalkernel.py)', '278': '__init__(kernelspec.py)', '127': '__init__(channels.py)', '126': 'InvalidPortNumber(channels.py)', '107': '__init__(channels.py)', '81': '__init__(channels.py)', '726': '__init__(threaded.py)', '737': 'setup_stream(threaded.py)', '728': '_handle_recv(threaded.py)', '729': 'call_handlers(threaded.py)', '136': 'stop(channels.py)', '133': 'is_beating(channels.py)', '135': 'run(channels.py)', '145': 'time_to_dead(channelsabc.py)', '131': 'call_handlers(channels.py)', '130': '_poll(channels.py)'}}, {'key': 1, 'parent': 2090, 'tfidf_word': 'EP: 1, Name: run &rarr; _create_socket &rarr; close', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2, 'parent': 2090, 'tfidf_word': 'EP: 2, Name: run &rarr; _create_socket &rarr; close', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 581, 'parent': 2130, 'tfidf_word': 'EP: 581, Name: get_stdin_msg &rarr; get_msg &rarr; _recv', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2125, 'parent': 2130, 'tfidf_word': 'recv iopub get msg ', 'tfidf_method': '_recv get_msg get_msgs get_iopub_msg ', 'lda_word': ' get,msg,recv,iopub,', 'lda_method': ' recv,get_msg,get_msgs,get_iopub_msg,', 'lsi_word': ' get,msg,recv,iopub,', 'lsi_method': ' recv,get_msg,get_msgs,get_iopub_msg,', 'spm_method': ' ', 'text_summary': 'Get all messages that are currently ready.', 'files_count': 2, 'files': ['channels.py', 'client.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'85': 'get_msgs(channels.py)', '84': 'get_msg(channels.py)', '82': '_recv(channels.py)', '99': 'get_iopub_msg(client.py)'}}, {'key': 616, 'parent': 2140, 'tfidf_word': 'EP: 616, Name: get_msgs &rarr; get_msg &rarr; _recv', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2136, 'parent': 2140, 'tfidf_word': 'recv get msg iopub ready stdin wait ', 'tfidf_method': '_recv get_msg get_stdin_msg wait_for_ready get_iopub_msg ', 'lda_word': ' recv,ready,wait,get,msg,', 'lda_method': ' recv,get_msg,get_stdin_msg,wait_for_ready,get_iopub_msg,', 'lsi_word': ' msg,get,recv,iopub,stdin,', 'lsi_method': ' get_msg,recv,get_stdin_msg,wait_for_ready,get_iopub_msg,', 'spm_method': ' ', 'text_summary': 'Get a message from the stdin channel. Get a message from the iopub channel.', 'files_count': 2, 'files': ['client.py', 'channels.py'], 'execution_path_count': 3, 'function_id_to_name_file': {'104': 'wait_for_ready(client.py)', '110': 'get_msg(channels.py)', '108': '_recv(channels.py)', '99': 'get_iopub_msg(client.py)', '101': 'get_stdin_msg(client.py)'}}, {'key': 2205, 'parent': 2652, 'tfidf_word': 'cant test destination dir get name valid install spec kernel ', 'tfidf_method': 'install_kernel_spec test_cant_install_kernel_spec _is_valid_kernel_name _get_destination_dir ', 'lda_word': ' kernel,install,spec,nt,ca,', 'lda_method': ' install_kernel_spec,is_valid_kernel_name,test_cant_install_kernel_spec,get_destination_dir,', 'lsi_word': ' kernel,install,spec,ca,test,', 'lsi_method': ' install_kernel_spec,test_cant_install_kernel_spec,is_valid_kernel_name,get_destination_dir,', 'spm_method': ' ', 'text_summary': '', 'files_count': 2, 'files': ['test_kernelspec.py', 'kernelspec.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'620': 'test_cant_install_kernel_spec(test_kernelspec.py)', '275': 'install_kernel_spec(kernelspec.py)', '268': '_get_destination_dir(kernelspec.py)', '257': '_is_valid_kernel_name(kernelspec.py)'}}, {'key': 2651, 'parent': 2652, 'tfidf_word': 'test destination dir get name valid install spec prefix kernel ', 'tfidf_method': 'install_kernel_spec _is_valid_kernel_name _get_destination_dir install_kernel_spec test_install_kernel_spec test_install_kernel_spec_prefix ', 'lda_word': ' install,spec,kernel,get,destination,', 'lda_method': ' install_kernel_spec,is_valid_kernel_name,test_install_kernel_spec,get_destination_dir,test_install_kernel_spec_prefix,', 'lsi_word': ' kernel,spec,install,test,name,', 'lsi_method': ' install_kernel_spec,is_valid_kernel_name,get_destination_dir,test_install_kernel_spec_prefix,test_install_kernel_spec,', 'spm_method': ' ', 'text_summary': '', 'files_count': 2, 'files': ['test_kernelspec.py', 'kernelspec.py'], 'execution_path_count': 6, 'function_id_to_name_file': {'625': 'test_install_kernel_spec_prefix(test_kernelspec.py)', '275': 'install_kernel_spec(kernelspec.py)', '268': '_get_destination_dir(kernelspec.py)', '257': '_is_valid_kernel_name(kernelspec.py)', '261': 'install_kernel_spec(kernelspec.py)', '624': 'test_install_kernel_spec(test_kernelspec.py)'}}, {'key': 2656, 'parent': 2749, 'tfidf_word': 'signaltest start test execute parallel prepare process sequence kernel thread ', 'tfidf_method': '_run_signaltest_lifecycle _prepare_kernel execute test_start_parallel_process_kernels test_start_parallel_thread_kernels test_start_sequence_kernels test_start_sequence_process_kernels ', 'lda_word': ' kernel,test,signaltest,lifecycle,start,', 'lda_method': ' run_signaltest_lifecycle,prepare_kernel,test_start_parallel_thread_kernels,test_start_sequence_kernels,test_start_sequence_process_kernels,', 'lsi_word': ' kernel,start,signaltest,test,run,', 'lsi_method': ' run_signaltest_lifecycle,prepare_kernel,execute,test_start_sequence_process_kernels,test_start_parallel_process_kernels,', 'spm_method': ' ', 'text_summary': '', 'files_count': 1, 'files': ['test_kernelmanager.py'], 'execution_path_count': 8, 'function_id_to_name_file': {'614': 'test_start_sequence_process_kernels(test_kernelmanager.py)', '610': '_run_signaltest_lifecycle(test_kernelmanager.py)', '615': 'execute(test_kernelmanager.py)', '609': '_prepare_kernel(test_kernelmanager.py)', '611': 'test_start_parallel_process_kernels(test_kernelmanager.py)', '613': 'test_start_sequence_kernels(test_kernelmanager.py)', '612': 'test_start_parallel_thread_kernels(test_kernelmanager.py)'}}, {'key': 2741, 'parent': 2749, 'tfidf_word': 'loop flush permission native name io cleanup code tunnel restarter ', 'tfidf_method': 'test_complete_reply test_complete_request test_display_data test_execute_reply test_execute_request test_input_request test_kernel_info_reply test_no_adapt _session_default reqrep ', 'lda_word': ' test,adapt,default,channel,session,', 'lda_method': ' start,run_lifecycle,make_url,handle,test_tcp_lifecycle,', 'lsi_word': ' kernel,test,manager,start,async,', 'lsi_method': ' init,check_packers,utcnow,get_ipc_km,new_auth,', 'spm_method': ' ', 'text_summary': "Subclasses may override  Prepares a kernel for startup in a separate process. Prepares a kernel for startup in a separate process. return ip for localhost (almost always 127.0.0.1)   Ensure that a sequence of kernel startups doesn't break anything. Return the connection info as a dict. Subclasses may override Start the polling of the kernel. Ensure that a sequence of kernel startups doesn't break anything. find a connection file, and return its absolute path. return ip for localhost (almost always 127.0.0.1)      find a connection file, and return its absolute path. tunnel connections to a kernel via ssh. For tests, create a file to indicate that we've started. handle kernel info reply. Get the hb channel object for this kernel. Send a raw message via ident path. Returns the id to associate with the kernel for this request. Make a blocking client connected to my kernel. Immediately processes all pending messages on this channel. Return the number of running kernels. Interrupts the kernel by sending it a signal. Create an ssh tunnel using command-line ssh that connects port lport. This is run in the ioloop thread when the kernel info reply is received. default function for packing datetime objects in JSON. Start the polling of the kernel. Send a shutdown request via control channel. test load_connection_file() after. Sends an interrupt event using the specified handle. test that messages receive unique ids. Forgets randomly assigned port numbers and cleans up the connection file.", 'files_count': 34, 'files': ['multikernelmanager.py', 'consoleapp.py', 'session.py', 'jsonutil.py', 'client.py', 'channelsabc.py', 'connect.py', 'manager.py', 'test_manager.py', 'test_multikernelmanager.py', 'utils.py', 'test_session.py', 'forward.py', 'threaded.py', 'restarter.py', 'signalkernel.py', 'tunnel.py', 'test_connect.py', 'channels.py', 'kernelspecapp.py', 'kernelapp.py', 'managerabc.py', 'test_adapter.py', 'kernelspec.py', 'test_jsonutil.py', 'test_kernelmanager.py', 'test_kernelspec.py', 'localinterfaces.py', 'adapter.py', 'test_kernelapp.py', 'test_client.py', 'win_interrupt.py', 'runapp.py', 'launcher.py'], 'execution_path_count': 293, 'function_id_to_name_file': {'398': '_kernel_manager_class_changed(multikernelmanager.py)', '396': '_create_kernel_manager_factory(multikernelmanager.py)', '424': 'create_kernel_manager(multikernelmanager.py)', '397': '_find_available_port(multikernelmanager.py)', '395': '_context_default(multikernelmanager.py)', '399': '_kernel_manager_factory_default(multikernelmanager.py)', '215': '__init__(consoleapp.py)', '485': '__init__(session.py)', '441': 'Session(session.py)', '457': '__init__(session.py)', '465': '_new_auth(session.py)', '459': '_check_packers(session.py)', '450': 'utcnow(session.py)', '244': 'squash_dates(jsonutil.py)', '90': 'AsyncKernelClient(client.py)', '147': 'KernelClient(client.py)', '139': 'HBChannelABC(channelsabc.py)', '138': 'ChannelABC(channelsabc.py)', '116': 'BlockingKernelClient(client.py)', '188': 'ConnectionFileMixin(connect.py)', '322': 'start_new_async_kernel(manager.py)', '319': 'AsyncKernelManager(manager.py)', '320': 'KernelManager(manager.py)', '224': 'AsyncIOLoopKernelManager(manager.py)', '225': 'IOLoopKernelManager(manager.py)', '635': 'test_connection_file_real_path(test_manager.py)', '663': 'test_start_parallel_thread_kernels(test_multikernelmanager.py)', '658': 'tcp_lifecycle_with_loop(test_multikernelmanager.py)', '667': 'test_tcp_lifecycle(test_multikernelmanager.py)', '657': '_run_lifecycle(test_multikernelmanager.py)', '662': 'test_start_parallel_process_kernels(test_multikernelmanager.py)', '704': 'execute(utils.py)', '155': 'execute(client.py)', '148': 'validate_string_dict(client.py)', '689': 'test_datetimes_msgpack(test_session.py)', '679': '_datetime_test(test_session.py)', '688': 'test_datetimes(test_session.py)', '690': 'test_datetimes_pickle(test_session.py)', '492': 'handle(forward.py)', '734': 'send(threaded.py)', '738': 'thread_send(threaded.py)', '328': 'interrupt_kernel(manager.py)', '694': 'test_send(test_session.py)', '664': 'test_start_sequence_ipc_kernels(test_multikernelmanager.py)', '654': '_get_ipc_km(test_multikernelmanager.py)', '392': '__init__(multikernelmanager.py)', '660': 'test_ipc_lifecycle(test_multikernelmanager.py)', '659': 'test_ipc_cinfo(test_multikernelmanager.py)', '423': 'start_kernel(multikernelmanager.py)', '415': 'pre_start_kernel(multikernelmanager.py)', '380': 'DuplicateKernelError(multikernelmanager.py)', '414': 'new_kernel_id(multikernelmanager.py)', '389': 'start_kernel(multikernelmanager.py)', '238': 'start(restarter.py)', '430': 'poll(restarter.py)', '433': 'stop(restarter.py)', '428': '_fire_callbacks(restarter.py)', '510': 'do_execute(signalkernel.py)', '190': 'tunnel_to_kernel(connect.py)', '501': 'openssh_tunnel(tunnel.py)', '494': 'SSHException(tunnel.py)', '497': '_stop_tunnel(tunnel.py)', '479': 'recv(session.py)', '475': 'feed_identities(session.py)', '330': 'restart_kernel(manager.py)', '202': 'cleanup_random_ports(connect.py)', '200': 'cleanup_connection_file(connect.py)', '567': 'test_mixin_cleanup_random_ports(test_connect.py)', '106': 'ZMQSocketChannel(channels.py)', '109': 'close(channels.py)', '226': 'as_zmqstream(manager.py)', '233': 'wrapped(manager.py)', '568': 'test_mixin_record_random_ports(test_connect.py)', '557': 'DummyConfigurable(test_connect.py)', '235': 'IOLoopKernelRestarter(restarter.py)', '426': 'KernelRestarter(restarter.py)', '234': 'AsyncIOLoopKernelRestarter(restarter.py)', '291': 'start(kernelspecapp.py)', '251': 'start(kernelapp.py)', '249': 'setup_signals(kernelapp.py)', '252': 'shutdown_handler(kernelapp.py)', '250': 'shutdown(kernelapp.py)', '248': 'log_connection_info(kernelapp.py)', '199': 'blocking_client(connect.py)', '208': 'get_connection_info(connect.py)', '725': 'stop_channels(threaded.py)', '373': 'is_alive(managerabc.py)', '684': 'test_bad_unpack(test_session.py)', '676': '_bad_unpacker(test_session.py)', '536': 'test_complete_request(test_adapter.py)', '517': 'adapt(test_adapter.py)', '562': 'test_find_connection_file_local(test_connect.py)', '189': 'find_connection_file(connect.py)', '730': 'close(threaded.py)', '493': 'SubHander(forward.py)', '490': 'Handler(forward.py)', '253': 'KernelSpec(kernelspec.py)', '718': 'close(threaded.py)', '132': 'close(channels.py)', '114': 'send(channels.py)', '88': 'send(channels.py)', '83': 'close(channels.py)', '575': 'test_date_default(test_jsonutil.py)', '241': 'date_default(jsonutil.py)', '240': '_ensure_tzinfo(jsonutil.py)', '597': 'test_subclasses(test_kernelmanager.py)', '703': 'AsyncKernelManagerWithCleanup(utils.py)', '595': 'test_signal_kernel_subprocesses(test_kernelmanager.py)', '598': 'execute(test_kernelmanager.py)', '702': 'AsyncKernelManagerSubclass(utils.py)', '611': 'test_start_parallel_process_kernels(test_kernelmanager.py)', '591': 'transport(test_kernelmanager.py)', '606': 'test_templated_kspec_env(test_kernelmanager.py)', '599': '_env_test_body(test_kernelmanager.py)', '607': 'execute(test_kernelmanager.py)', '612': 'test_start_parallel_thread_kernels(test_kernelmanager.py)', '604': 'test_signal_kernel_subprocesses(test_kernelmanager.py)', '608': 'execute(test_kernelmanager.py)', '586': 'env(test_kernelmanager.py)', '712': 'stop(utils.py)', '711': 'start(utils.py)', '705': 'test_env(utils.py)', '630': 'test_validate_kernel_name(test_kernelspec.py)', '257': '_is_valid_kernel_name(kernelspec.py)', '506': 'SignalTestApp(signalkernel.py)', '507': 'SignalTestKernel(signalkernel.py)', '627': 'test_remove_kernel_spec(test_kernelspec.py)', '617': '_install_sample_kernel(test_kernelspec.py)', '626': 'test_kernel_spec_priority(test_kernelspec.py)', '651': 'test_tcp_cinfo(test_multikernelmanager.py)', '640': '_run_cinfo(test_multikernelmanager.py)', '621': 'test_find_all_specs(test_kernelspec.py)', '622': 'test_find_kernel_specs(test_kernelspec.py)', '623': 'test_get_kernel_spec(test_kernelspec.py)', '619': 'tearDown(test_kernelspec.py)', '618': 'setUp(test_kernelspec.py)', '649': 'test_start_sequence_ipc_kernels(test_multikernelmanager.py)', '641': '_run_lifecycle(test_multikernelmanager.py)', '650': 'test_start_sequence_tcp_kernels(test_multikernelmanager.py)', '644': 'test_ipc_cinfo(test_multikernelmanager.py)', '315': 'localhost(localinterfaces.py)', '645': 'test_ipc_lifecycle(test_multikernelmanager.py)', '665': 'test_start_sequence_tcp_kernels(test_multikernelmanager.py)', '656': '_run_cinfo(test_multikernelmanager.py)', '666': 'test_tcp_cinfo(test_multikernelmanager.py)', '668': 'test_tcp_lifecycle_with_kernel_id(test_multikernelmanager.py)', '569': 'test_secure_write(test_connect.py)', '573': 'check_user_only_permissions(test_connect.py)', '574': 'fetch_win32_permissions(test_connect.py)', '563': 'test_find_connection_file_relative(test_connect.py)', '561': 'test_find_connection_file_abspath(test_connect.py)', '560': 'test_find_connection_file(test_connect.py)', '565': 'test_load_connection_file_session_with_kn(test_connect.py)', '539': 'test_input_request(test_adapter.py)', '564': 'test_load_connection_file_session(test_connect.py)', '537': 'test_display_data(test_adapter.py)', '540': 'test_inspect_reply(test_adapter.py)', '543': 'test_kernel_info_reply(test_adapter.py)', '542': 'test_inspect_request_token(test_adapter.py)', '535': 'test_complete_reply(test_adapter.py)', '541': 'test_inspect_request(test_adapter.py)', '538': 'test_execute_request(test_adapter.py)', '545': 'test_rename_type(test_adapter.py)', '544': 'test_no_adapt(test_adapter.py)', '546': 'test_same_version(test_adapter.py)', '514': 'V5toV4TestCase(test_adapter.py)', '512': 'AdapterTest(test_adapter.py)', '526': 'test_input_request(test_adapter.py)', '523': 'test_display_data(test_adapter.py)', '527': 'test_kernel_info_reply(test_adapter.py)', '530': 'test_object_info_reply_not_found(test_adapter.py)', '529': 'test_object_info_reply(test_adapter.py)', '531': 'test_object_info_request(test_adapter.py)', '521': 'test_complete_reply(test_adapter.py)', '522': 'test_complete_request(test_adapter.py)', '524': 'test_execute_reply(test_adapter.py)', '532': 'test_rename_type(test_adapter.py)', '525': 'test_execute_request(test_adapter.py)', '528': 'test_no_adapt(test_adapter.py)', '533': 'test_same_version(test_adapter.py)', '513': 'V4toV5TestCase(test_adapter.py)', '519': 'setUp(test_adapter.py)', '516': 'test_default_version(test_adapter.py)', '515': 'test_code_to_line_no_code(test_adapter.py)', '51': 'code_to_line(adapter.py)', '158': 'get_shell_msg(client.py)', '615': 'execute(test_kernelmanager.py)', '157': 'get_iopub_msg(client.py)', '710': '__exit__(utils.py)', '709': '__enter__(utils.py)', '580': 'test_kernelapp_lifecycle(test_kernelapp.py)', '579': '_launch(test_kernelapp.py)', '686': 'test_clone(test_session.py)', '473': 'clone(session.py)', '695': 'test_send_raw(test_session.py)', '481': 'send_raw(session.py)', '483': 'sign(session.py)', '683': 'test_bad_roundtrip(test_session.py)', '685': 'test_bad_unpacker(test_session.py)', '682': 'test_bad_packer(test_session.py)', '681': 'test_bad_pack(test_session.py)', '675': '_bad_packer(test_session.py)', '687': 'test_cull_digest_history(test_session.py)', '700': 'test_zero_digest_history(test_session.py)', '697': 'test_session_id(test_session.py)', '699': 'test_unique_msg_ids(test_session.py)', '445': 'msg_header(session.py)', '698': 'test_tracking(test_session.py)', '680': 'test_args(test_session.py)', '478': 'msg_id(session.py)', '696': 'test_serialize(test_session.py)', '674': 'TestSession(test_session.py)', '673': 'SessionTestCase(test_session.py)', '678': 'setUp(test_session.py)', '556': 'test_shutdown(test_client.py)', '548': '_check_reply(test_client.py)', '550': 'test_comm_info(test_client.py)', '555': 'test_kernel_info(test_client.py)', '551': 'test_complete(test_client.py)', '554': 'test_inspect(test_client.py)', '553': 'test_history(test_client.py)', '549': 'setUp(test_client.py)', '255': 'NoSuchKernel(kernelspec.py)', '117': 'reqrep(client.py)', '124': 'wrapped(client.py)', '123': 'wait_for_ready(client.py)', '150': '_handle_kernel_info_reply(client.py)', '125': 'HBChannel(channels.py)', '104': 'wait_for_ready(client.py)', '102': 'hb_channel(client.py)', '196': '_make_url(connect.py)', '91': 'reqrep(client.py)', '105': 'wrapped(client.py)', '80': 'ZMQSocketChannel(channels.py)', '154': 'control_channel(client.py)', '723': 'ioloop(threaded.py)', '160': 'hb_channel(client.py)', '171': 'stdin_channel(client.py)', '164': 'iopub_channel(client.py)', '168': 'shell_channel(client.py)', '740': 'send_interrupt(win_interrupt.py)', '334': '__del__(manager.py)', '293': 'start(kernelspecapp.py)', '294': 'path_key(kernelspecapp.py)', '735': 'start(threaded.py)', '720': 'start(threaded.py)', '141': 'start(channelsabc.py)', '432': 'start(restarter.py)', '288': 'start(kernelspecapp.py)', '89': 'start(channels.py)', '115': 'start(channels.py)', '290': 'start(kernelspecapp.py)', '438': 'parse_command_line(runapp.py)', '218': 'build_kernel_argv(consoleapp.py)', '308': '_only_once(localinterfaces.py)', '317': 'wrapped(localinterfaces.py)', '47': 'V4toV5(adapter.py)', '46': 'Adapter(adapter.py)', '77': 'object_info_request(adapter.py)', '52': 'extract_oname_v4(adapter.py)', '70': 'complete_request(adapter.py)', '75': 'kernel_info_reply(adapter.py)', '49': '_version_str_to_list(adapter.py)', '48': 'V5toV4(adapter.py)', '53': '__call__(adapter.py)', '54': 'handle_reply_status_error(adapter.py)', '57': 'update_msg_type(adapter.py)', '56': 'update_metadata(adapter.py)', '55': 'update_header(adapter.py)', '247': 'initialize(kernelapp.py)', '246': '_record_started(kernelapp.py)', '585': 'config(test_kernelmanager.py)', '262': 'install_native_kernel_spec(kernelspec.py)', '276': 'install_native_kernel_spec(kernelspec.py)', '265': 'to_json(kernelspec.py)', '264': 'to_dict(kernelspec.py)', '449': 'test_msg2obj(session.py)', '440': 'Message(session.py)', '453': '__init__(session.py)', '470': '_signature_scheme_changed(session.py)', '463': '_key_default(session.py)', '447': 'new_id_bytes(session.py)', '462': '_key_changed(session.py)', '443': 'default_secure(session.py)', '469': '_session_default(session.py)', '446': 'new_id(session.py)', '412': 'is_alive(multikernelmanager.py)', '420': 'shutdown_all(multikernelmanager.py)', '413': 'list_kernel_ids(multikernelmanager.py)', '721': 'stop(threaded.py)', '140': 'is_alive(channelsabc.py)', '732': 'is_alive(threaded.py)', '112': 'is_alive(channels.py)', '86': 'is_alive(channels.py)', '724': 'start_channels(threaded.py)', '722': '_check_kernel_info_reply(threaded.py)', '716': '__init__(threaded.py)', '387': 'shutdown_kernel(multikernelmanager.py)', '416': 'remove_kernel(multikernelmanager.py)', '713': 'IOLoopThread(threaded.py)', '714': 'ThreadedKernelClient(threaded.py)', '715': 'ThreadedZMQSocketChannel(threaded.py)', '731': 'flush(threaded.py)', '727': '_flush(threaded.py)', '386': 'shutdown_all(multikernelmanager.py)', '418': 'request_shutdown(multikernelmanager.py)', '402': 'cleanup_resources(multikernelmanager.py)', '408': 'finish_shutdown(multikernelmanager.py)', '393': '__len__(multikernelmanager.py)', '421': 'shutdown_kernel(multikernelmanager.py)', '198': '_session_default(connect.py)', '298': 'launch_kernel(launcher.py)', '739': 'create_interrupt_event(win_interrupt.py)', '741': 'SECURITY_ATTRIBUTES(win_interrupt.py)', '509': '__init__(signalkernel.py)', '278': '__init__(kernelspec.py)', '127': '__init__(channels.py)', '126': 'InvalidPortNumber(channels.py)', '107': '__init__(channels.py)', '81': '__init__(channels.py)', '726': '__init__(threaded.py)', '737': 'setup_stream(threaded.py)', '728': '_handle_recv(threaded.py)', '729': 'call_handlers(threaded.py)', '136': 'stop(channels.py)', '133': 'is_beating(channels.py)', '135': 'run(channels.py)', '145': 'time_to_dead(channelsabc.py)', '131': 'call_handlers(channels.py)', '130': '_poll(channels.py)'}}, {'key': 501, 'parent': 2125, 'tfidf_word': 'EP: 501, Name: get_msgs &rarr; get_msg &rarr; _recv', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 579, 'parent': 2125, 'tfidf_word': 'EP: 579, Name: get_iopub_msg &rarr; get_msg &rarr; _recv', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 593, 'parent': 2136, 'tfidf_word': 'EP: 593, Name: wait_for_ready &rarr; get_msg &rarr; _recv', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2129, 'parent': 2136, 'tfidf_word': 'recv iopub stdin get msg ', 'tfidf_method': '_recv get_msg get_stdin_msg get_iopub_msg ', 'lda_word': ' msg,get,recv,stdin,iopub,', 'lda_method': ' recv,get_msg,get_iopub_msg,get_stdin_msg,', 'lsi_word': ' get,msg,recv,iopub,stdin,', 'lsi_method': ' get_msg,recv,get_iopub_msg,get_stdin_msg,', 'spm_method': ' ', 'text_summary': 'Get a message from the iopub channel.', 'files_count': 2, 'files': ['client.py', 'channels.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'99': 'get_iopub_msg(client.py)', '110': 'get_msg(channels.py)', '108': '_recv(channels.py)', '101': 'get_stdin_msg(client.py)'}}, {'key': 1249, 'parent': 2205, 'tfidf_word': 'EP: 1249, Name: test_cant_install_kernel_spec &rarr; install_kernel_spec &rarr; _get_destination_dir', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1250, 'parent': 2205, 'tfidf_word': 'EP: 1250, Name: test_cant_install_kernel_spec &rarr; install_kernel_spec &rarr; _is_valid_kernel_name', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2204, 'parent': 2651, 'tfidf_word': 'prefix test destination dir get name valid install spec kernel ', 'tfidf_method': 'install_kernel_spec test_install_kernel_spec_prefix _is_valid_kernel_name _get_destination_dir ', 'lda_word': ' kernel,install,spec,prefix,test,', 'lda_method': ' install_kernel_spec,test_install_kernel_spec_prefix,is_valid_kernel_name,get_destination_dir,', 'lsi_word': ' kernel,spec,install,test,prefix,', 'lsi_method': ' install_kernel_spec,test_install_kernel_spec_prefix,get_destination_dir,is_valid_kernel_name,', 'spm_method': ' ', 'text_summary': '', 'files_count': 2, 'files': ['test_kernelspec.py', 'kernelspec.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'625': 'test_install_kernel_spec_prefix(test_kernelspec.py)', '275': 'install_kernel_spec(kernelspec.py)', '268': '_get_destination_dir(kernelspec.py)', '257': '_is_valid_kernel_name(kernelspec.py)'}}, {'key': 2650, 'parent': 2651, 'tfidf_word': 'destination dir get name test valid install spec kernel ', 'tfidf_method': 'install_kernel_spec _is_valid_kernel_name install_kernel_spec _get_destination_dir test_install_kernel_spec ', 'lda_word': ' kernel,install,spec,destination,get,', 'lda_method': ' install_kernel_spec,is_valid_kernel_name,test_install_kernel_spec,get_destination_dir,', 'lsi_word': ' kernel,spec,install,valid,name,', 'lsi_method': ' install_kernel_spec,get_destination_dir,is_valid_kernel_name,test_install_kernel_spec,', 'spm_method': ' ', 'text_summary': '', 'files_count': 2, 'files': ['kernelspec.py', 'test_kernelspec.py'], 'execution_path_count': 4, 'function_id_to_name_file': {'261': 'install_kernel_spec(kernelspec.py)', '275': 'install_kernel_spec(kernelspec.py)', '268': '_get_destination_dir(kernelspec.py)', '257': '_is_valid_kernel_name(kernelspec.py)', '624': 'test_install_kernel_spec(test_kernelspec.py)'}}, {'key': 2220, 'parent': 2656, 'tfidf_word': 'lifecycle process run sequence signaltest start test execute prepare kernel ', 'tfidf_method': '_run_signaltest_lifecycle test_start_sequence_process_kernels _prepare_kernel execute ', 'lda_word': ' signaltest,sequence,test,lifecycle,run,', 'lda_method': ' test_start_sequence_process_kernels,run_signaltest_lifecycle,execute,prepare_kernel,', 'lsi_word': ' kernel,process,signaltest,sequence,test,', 'lsi_method': ' run_signaltest_lifecycle,test_start_sequence_process_kernels,execute,prepare_kernel,', 'spm_method': ' ', 'text_summary': 'Empty', 'files_count': 1, 'files': ['test_kernelmanager.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'614': 'test_start_sequence_process_kernels(test_kernelmanager.py)', '610': '_run_signaltest_lifecycle(test_kernelmanager.py)', '615': 'execute(test_kernelmanager.py)', '609': '_prepare_kernel(test_kernelmanager.py)'}}, {'key': 2655, 'parent': 2656, 'tfidf_word': 'signaltest start test parallel execute prepare kernel process sequence thread ', 'tfidf_method': '_run_signaltest_lifecycle _prepare_kernel execute test_start_parallel_process_kernels test_start_parallel_thread_kernels test_start_sequence_kernels ', 'lda_word': ' kernel,signaltest,lifecycle,start,test,', 'lda_method': ' test_start_sequence_kernels,run_signaltest_lifecycle,prepare_kernel,execute,test_start_parallel_process_kernels,', 'lsi_word': ' kernel,start,run,signaltest,test,', 'lsi_method': ' run_signaltest_lifecycle,execute,prepare_kernel,test_start_parallel_process_kernels,test_start_parallel_thread_kernels,', 'spm_method': ' ', 'text_summary': '', 'files_count': 1, 'files': ['test_kernelmanager.py'], 'execution_path_count': 6, 'function_id_to_name_file': {'611': 'test_start_parallel_process_kernels(test_kernelmanager.py)', '610': '_run_signaltest_lifecycle(test_kernelmanager.py)', '615': 'execute(test_kernelmanager.py)', '609': '_prepare_kernel(test_kernelmanager.py)', '613': 'test_start_sequence_kernels(test_kernelmanager.py)', '612': 'test_start_parallel_thread_kernels(test_kernelmanager.py)'}}, {'key': 2340, 'parent': 2741, 'tfidf_word': 'change class context find port create factory default kernel manager ', 'tfidf_method': '_create_kernel_manager_factory create_kernel_manager _context_default _find_available_port _kernel_manager_class_changed _kernel_manager_factory_default ', 'lda_word': ' kernel,manager,create,change,class,', 'lda_method': ' kernel_manager_class_changed,create_kernel_manager,create_kernel_manager_factory,context_default,kernel_manager_factory_default,', 'lsi_word': ' manager,kernel,create,factory,default,', 'lsi_method': ' create_kernel_manager_factory,create_kernel_manager,find_available_port,kernel_manager_class_changed,kernel_manager_factory_default,', 'spm_method': ' ', 'text_summary': '', 'files_count': 1, 'files': ['multikernelmanager.py'], 'execution_path_count': 4, 'function_id_to_name_file': {'398': '_kernel_manager_class_changed(multikernelmanager.py)', '396': '_create_kernel_manager_factory(multikernelmanager.py)', '424': 'create_kernel_manager(multikernelmanager.py)', '397': '_find_available_port(multikernelmanager.py)', '395': '_context_default(multikernelmanager.py)', '399': '_kernel_manager_factory_default(multikernelmanager.py)'}}, {'key': 2739, 'parent': 2741, 'tfidf_word': 'loop native name permission flush io cleanup code restarter tunnel ', 'tfidf_method': 'extract_oname_v4 test_complete_reply test_complete_request test_execute_reply test_execute_request test_input_request test_kernel_info_reply test_no_adapt _session_default reqrep ', 'lda_word': ' init,stop,channels,test,session,', 'lda_method': ' init,adapt,check_reply,kernelclient,blockingkernelclient,', 'lsi_word': ' kernel,test,start,lifecycle,async,', 'lsi_method': ' init,check_packers,utcnow,get_ipc_km,new_auth,', 'spm_method': ' ', 'text_summary': "Subclasses may override  Prepares a kernel for startup in a separate process. Prepares a kernel for startup in a separate process. return ip for localhost (almost always 127.0.0.1)   Ensure that a sequence of kernel startups doesn't break anything. Return the connection info as a dict. Subclasses may override Start the polling of the kernel. Ensure that a sequence of kernel startups doesn't break anything. find a connection file, and return its absolute path. return ip for localhost (almost always 127.0.0.1)      find a connection file, and return its absolute path. tunnel connections to a kernel via ssh. For tests, create a file to indicate that we've started. handle kernel info reply. Get the hb channel object for this kernel. Send a raw message via ident path. Returns the id to associate with the kernel for this request. Make a blocking client connected to my kernel. Immediately processes all pending messages on this channel. Return the number of running kernels. Interrupts the kernel by sending it a signal. Create an ssh tunnel using command-line ssh that connects port lport. This is run in the ioloop thread when the kernel info reply is received. default function for packing datetime objects in JSON. Start the polling of the kernel. Send a shutdown request via control channel. test load_connection_file() after. Sends an interrupt event using the specified handle. test that messages receive unique ids. Forgets randomly assigned port numbers and cleans up the connection file.", 'files_count': 34, 'files': ['consoleapp.py', 'session.py', 'jsonutil.py', 'client.py', 'channelsabc.py', 'connect.py', 'manager.py', 'test_manager.py', 'test_multikernelmanager.py', 'utils.py', 'test_session.py', 'forward.py', 'threaded.py', 'multikernelmanager.py', 'restarter.py', 'signalkernel.py', 'tunnel.py', 'test_connect.py', 'channels.py', 'kernelspecapp.py', 'kernelapp.py', 'managerabc.py', 'test_adapter.py', 'kernelspec.py', 'test_jsonutil.py', 'test_kernelmanager.py', 'test_kernelspec.py', 'localinterfaces.py', 'adapter.py', 'test_kernelapp.py', 'test_client.py', 'win_interrupt.py', 'runapp.py', 'launcher.py'], 'execution_path_count': 289, 'function_id_to_name_file': {'215': '__init__(consoleapp.py)', '485': '__init__(session.py)', '441': 'Session(session.py)', '457': '__init__(session.py)', '465': '_new_auth(session.py)', '459': '_check_packers(session.py)', '450': 'utcnow(session.py)', '244': 'squash_dates(jsonutil.py)', '90': 'AsyncKernelClient(client.py)', '147': 'KernelClient(client.py)', '139': 'HBChannelABC(channelsabc.py)', '138': 'ChannelABC(channelsabc.py)', '116': 'BlockingKernelClient(client.py)', '188': 'ConnectionFileMixin(connect.py)', '322': 'start_new_async_kernel(manager.py)', '319': 'AsyncKernelManager(manager.py)', '320': 'KernelManager(manager.py)', '224': 'AsyncIOLoopKernelManager(manager.py)', '225': 'IOLoopKernelManager(manager.py)', '635': 'test_connection_file_real_path(test_manager.py)', '663': 'test_start_parallel_thread_kernels(test_multikernelmanager.py)', '658': 'tcp_lifecycle_with_loop(test_multikernelmanager.py)', '667': 'test_tcp_lifecycle(test_multikernelmanager.py)', '657': '_run_lifecycle(test_multikernelmanager.py)', '662': 'test_start_parallel_process_kernels(test_multikernelmanager.py)', '704': 'execute(utils.py)', '155': 'execute(client.py)', '148': 'validate_string_dict(client.py)', '689': 'test_datetimes_msgpack(test_session.py)', '679': '_datetime_test(test_session.py)', '688': 'test_datetimes(test_session.py)', '690': 'test_datetimes_pickle(test_session.py)', '492': 'handle(forward.py)', '734': 'send(threaded.py)', '738': 'thread_send(threaded.py)', '328': 'interrupt_kernel(manager.py)', '694': 'test_send(test_session.py)', '664': 'test_start_sequence_ipc_kernels(test_multikernelmanager.py)', '654': '_get_ipc_km(test_multikernelmanager.py)', '392': '__init__(multikernelmanager.py)', '660': 'test_ipc_lifecycle(test_multikernelmanager.py)', '659': 'test_ipc_cinfo(test_multikernelmanager.py)', '423': 'start_kernel(multikernelmanager.py)', '415': 'pre_start_kernel(multikernelmanager.py)', '380': 'DuplicateKernelError(multikernelmanager.py)', '414': 'new_kernel_id(multikernelmanager.py)', '389': 'start_kernel(multikernelmanager.py)', '238': 'start(restarter.py)', '430': 'poll(restarter.py)', '433': 'stop(restarter.py)', '428': '_fire_callbacks(restarter.py)', '510': 'do_execute(signalkernel.py)', '190': 'tunnel_to_kernel(connect.py)', '501': 'openssh_tunnel(tunnel.py)', '494': 'SSHException(tunnel.py)', '497': '_stop_tunnel(tunnel.py)', '479': 'recv(session.py)', '475': 'feed_identities(session.py)', '330': 'restart_kernel(manager.py)', '202': 'cleanup_random_ports(connect.py)', '200': 'cleanup_connection_file(connect.py)', '567': 'test_mixin_cleanup_random_ports(test_connect.py)', '106': 'ZMQSocketChannel(channels.py)', '109': 'close(channels.py)', '226': 'as_zmqstream(manager.py)', '233': 'wrapped(manager.py)', '568': 'test_mixin_record_random_ports(test_connect.py)', '557': 'DummyConfigurable(test_connect.py)', '235': 'IOLoopKernelRestarter(restarter.py)', '426': 'KernelRestarter(restarter.py)', '234': 'AsyncIOLoopKernelRestarter(restarter.py)', '291': 'start(kernelspecapp.py)', '251': 'start(kernelapp.py)', '249': 'setup_signals(kernelapp.py)', '252': 'shutdown_handler(kernelapp.py)', '250': 'shutdown(kernelapp.py)', '248': 'log_connection_info(kernelapp.py)', '199': 'blocking_client(connect.py)', '208': 'get_connection_info(connect.py)', '725': 'stop_channels(threaded.py)', '373': 'is_alive(managerabc.py)', '684': 'test_bad_unpack(test_session.py)', '676': '_bad_unpacker(test_session.py)', '536': 'test_complete_request(test_adapter.py)', '517': 'adapt(test_adapter.py)', '562': 'test_find_connection_file_local(test_connect.py)', '189': 'find_connection_file(connect.py)', '730': 'close(threaded.py)', '493': 'SubHander(forward.py)', '490': 'Handler(forward.py)', '253': 'KernelSpec(kernelspec.py)', '718': 'close(threaded.py)', '132': 'close(channels.py)', '114': 'send(channels.py)', '88': 'send(channels.py)', '83': 'close(channels.py)', '575': 'test_date_default(test_jsonutil.py)', '241': 'date_default(jsonutil.py)', '240': '_ensure_tzinfo(jsonutil.py)', '597': 'test_subclasses(test_kernelmanager.py)', '703': 'AsyncKernelManagerWithCleanup(utils.py)', '595': 'test_signal_kernel_subprocesses(test_kernelmanager.py)', '598': 'execute(test_kernelmanager.py)', '702': 'AsyncKernelManagerSubclass(utils.py)', '611': 'test_start_parallel_process_kernels(test_kernelmanager.py)', '591': 'transport(test_kernelmanager.py)', '606': 'test_templated_kspec_env(test_kernelmanager.py)', '599': '_env_test_body(test_kernelmanager.py)', '607': 'execute(test_kernelmanager.py)', '612': 'test_start_parallel_thread_kernels(test_kernelmanager.py)', '604': 'test_signal_kernel_subprocesses(test_kernelmanager.py)', '608': 'execute(test_kernelmanager.py)', '586': 'env(test_kernelmanager.py)', '712': 'stop(utils.py)', '711': 'start(utils.py)', '705': 'test_env(utils.py)', '630': 'test_validate_kernel_name(test_kernelspec.py)', '257': '_is_valid_kernel_name(kernelspec.py)', '506': 'SignalTestApp(signalkernel.py)', '507': 'SignalTestKernel(signalkernel.py)', '627': 'test_remove_kernel_spec(test_kernelspec.py)', '617': '_install_sample_kernel(test_kernelspec.py)', '626': 'test_kernel_spec_priority(test_kernelspec.py)', '651': 'test_tcp_cinfo(test_multikernelmanager.py)', '640': '_run_cinfo(test_multikernelmanager.py)', '621': 'test_find_all_specs(test_kernelspec.py)', '622': 'test_find_kernel_specs(test_kernelspec.py)', '623': 'test_get_kernel_spec(test_kernelspec.py)', '619': 'tearDown(test_kernelspec.py)', '618': 'setUp(test_kernelspec.py)', '649': 'test_start_sequence_ipc_kernels(test_multikernelmanager.py)', '641': '_run_lifecycle(test_multikernelmanager.py)', '650': 'test_start_sequence_tcp_kernels(test_multikernelmanager.py)', '644': 'test_ipc_cinfo(test_multikernelmanager.py)', '315': 'localhost(localinterfaces.py)', '645': 'test_ipc_lifecycle(test_multikernelmanager.py)', '665': 'test_start_sequence_tcp_kernels(test_multikernelmanager.py)', '656': '_run_cinfo(test_multikernelmanager.py)', '666': 'test_tcp_cinfo(test_multikernelmanager.py)', '668': 'test_tcp_lifecycle_with_kernel_id(test_multikernelmanager.py)', '569': 'test_secure_write(test_connect.py)', '573': 'check_user_only_permissions(test_connect.py)', '574': 'fetch_win32_permissions(test_connect.py)', '563': 'test_find_connection_file_relative(test_connect.py)', '561': 'test_find_connection_file_abspath(test_connect.py)', '560': 'test_find_connection_file(test_connect.py)', '565': 'test_load_connection_file_session_with_kn(test_connect.py)', '539': 'test_input_request(test_adapter.py)', '564': 'test_load_connection_file_session(test_connect.py)', '537': 'test_display_data(test_adapter.py)', '540': 'test_inspect_reply(test_adapter.py)', '543': 'test_kernel_info_reply(test_adapter.py)', '542': 'test_inspect_request_token(test_adapter.py)', '535': 'test_complete_reply(test_adapter.py)', '541': 'test_inspect_request(test_adapter.py)', '538': 'test_execute_request(test_adapter.py)', '545': 'test_rename_type(test_adapter.py)', '544': 'test_no_adapt(test_adapter.py)', '546': 'test_same_version(test_adapter.py)', '514': 'V5toV4TestCase(test_adapter.py)', '512': 'AdapterTest(test_adapter.py)', '526': 'test_input_request(test_adapter.py)', '523': 'test_display_data(test_adapter.py)', '527': 'test_kernel_info_reply(test_adapter.py)', '530': 'test_object_info_reply_not_found(test_adapter.py)', '529': 'test_object_info_reply(test_adapter.py)', '531': 'test_object_info_request(test_adapter.py)', '521': 'test_complete_reply(test_adapter.py)', '522': 'test_complete_request(test_adapter.py)', '524': 'test_execute_reply(test_adapter.py)', '532': 'test_rename_type(test_adapter.py)', '525': 'test_execute_request(test_adapter.py)', '528': 'test_no_adapt(test_adapter.py)', '533': 'test_same_version(test_adapter.py)', '513': 'V4toV5TestCase(test_adapter.py)', '519': 'setUp(test_adapter.py)', '516': 'test_default_version(test_adapter.py)', '515': 'test_code_to_line_no_code(test_adapter.py)', '51': 'code_to_line(adapter.py)', '158': 'get_shell_msg(client.py)', '615': 'execute(test_kernelmanager.py)', '157': 'get_iopub_msg(client.py)', '710': '__exit__(utils.py)', '709': '__enter__(utils.py)', '580': 'test_kernelapp_lifecycle(test_kernelapp.py)', '579': '_launch(test_kernelapp.py)', '686': 'test_clone(test_session.py)', '473': 'clone(session.py)', '695': 'test_send_raw(test_session.py)', '481': 'send_raw(session.py)', '483': 'sign(session.py)', '683': 'test_bad_roundtrip(test_session.py)', '685': 'test_bad_unpacker(test_session.py)', '682': 'test_bad_packer(test_session.py)', '681': 'test_bad_pack(test_session.py)', '675': '_bad_packer(test_session.py)', '687': 'test_cull_digest_history(test_session.py)', '700': 'test_zero_digest_history(test_session.py)', '697': 'test_session_id(test_session.py)', '699': 'test_unique_msg_ids(test_session.py)', '445': 'msg_header(session.py)', '698': 'test_tracking(test_session.py)', '680': 'test_args(test_session.py)', '478': 'msg_id(session.py)', '696': 'test_serialize(test_session.py)', '674': 'TestSession(test_session.py)', '673': 'SessionTestCase(test_session.py)', '678': 'setUp(test_session.py)', '556': 'test_shutdown(test_client.py)', '548': '_check_reply(test_client.py)', '550': 'test_comm_info(test_client.py)', '555': 'test_kernel_info(test_client.py)', '551': 'test_complete(test_client.py)', '554': 'test_inspect(test_client.py)', '553': 'test_history(test_client.py)', '549': 'setUp(test_client.py)', '255': 'NoSuchKernel(kernelspec.py)', '117': 'reqrep(client.py)', '124': 'wrapped(client.py)', '123': 'wait_for_ready(client.py)', '150': '_handle_kernel_info_reply(client.py)', '125': 'HBChannel(channels.py)', '104': 'wait_for_ready(client.py)', '102': 'hb_channel(client.py)', '196': '_make_url(connect.py)', '91': 'reqrep(client.py)', '105': 'wrapped(client.py)', '80': 'ZMQSocketChannel(channels.py)', '154': 'control_channel(client.py)', '723': 'ioloop(threaded.py)', '160': 'hb_channel(client.py)', '171': 'stdin_channel(client.py)', '164': 'iopub_channel(client.py)', '168': 'shell_channel(client.py)', '740': 'send_interrupt(win_interrupt.py)', '334': '__del__(manager.py)', '293': 'start(kernelspecapp.py)', '294': 'path_key(kernelspecapp.py)', '735': 'start(threaded.py)', '720': 'start(threaded.py)', '141': 'start(channelsabc.py)', '432': 'start(restarter.py)', '288': 'start(kernelspecapp.py)', '89': 'start(channels.py)', '115': 'start(channels.py)', '290': 'start(kernelspecapp.py)', '438': 'parse_command_line(runapp.py)', '218': 'build_kernel_argv(consoleapp.py)', '308': '_only_once(localinterfaces.py)', '317': 'wrapped(localinterfaces.py)', '47': 'V4toV5(adapter.py)', '46': 'Adapter(adapter.py)', '77': 'object_info_request(adapter.py)', '52': 'extract_oname_v4(adapter.py)', '70': 'complete_request(adapter.py)', '75': 'kernel_info_reply(adapter.py)', '49': '_version_str_to_list(adapter.py)', '48': 'V5toV4(adapter.py)', '53': '__call__(adapter.py)', '54': 'handle_reply_status_error(adapter.py)', '57': 'update_msg_type(adapter.py)', '56': 'update_metadata(adapter.py)', '55': 'update_header(adapter.py)', '247': 'initialize(kernelapp.py)', '246': '_record_started(kernelapp.py)', '585': 'config(test_kernelmanager.py)', '262': 'install_native_kernel_spec(kernelspec.py)', '276': 'install_native_kernel_spec(kernelspec.py)', '265': 'to_json(kernelspec.py)', '264': 'to_dict(kernelspec.py)', '449': 'test_msg2obj(session.py)', '440': 'Message(session.py)', '453': '__init__(session.py)', '470': '_signature_scheme_changed(session.py)', '463': '_key_default(session.py)', '447': 'new_id_bytes(session.py)', '462': '_key_changed(session.py)', '443': 'default_secure(session.py)', '469': '_session_default(session.py)', '446': 'new_id(session.py)', '412': 'is_alive(multikernelmanager.py)', '420': 'shutdown_all(multikernelmanager.py)', '413': 'list_kernel_ids(multikernelmanager.py)', '721': 'stop(threaded.py)', '140': 'is_alive(channelsabc.py)', '732': 'is_alive(threaded.py)', '112': 'is_alive(channels.py)', '86': 'is_alive(channels.py)', '724': 'start_channels(threaded.py)', '722': '_check_kernel_info_reply(threaded.py)', '716': '__init__(threaded.py)', '387': 'shutdown_kernel(multikernelmanager.py)', '416': 'remove_kernel(multikernelmanager.py)', '713': 'IOLoopThread(threaded.py)', '714': 'ThreadedKernelClient(threaded.py)', '715': 'ThreadedZMQSocketChannel(threaded.py)', '731': 'flush(threaded.py)', '727': '_flush(threaded.py)', '386': 'shutdown_all(multikernelmanager.py)', '418': 'request_shutdown(multikernelmanager.py)', '402': 'cleanup_resources(multikernelmanager.py)', '408': 'finish_shutdown(multikernelmanager.py)', '393': '__len__(multikernelmanager.py)', '421': 'shutdown_kernel(multikernelmanager.py)', '198': '_session_default(connect.py)', '298': 'launch_kernel(launcher.py)', '739': 'create_interrupt_event(win_interrupt.py)', '741': 'SECURITY_ATTRIBUTES(win_interrupt.py)', '509': '__init__(signalkernel.py)', '278': '__init__(kernelspec.py)', '127': '__init__(channels.py)', '126': 'InvalidPortNumber(channels.py)', '107': '__init__(channels.py)', '81': '__init__(channels.py)', '726': '__init__(threaded.py)', '737': 'setup_stream(threaded.py)', '728': '_handle_recv(threaded.py)', '729': 'call_handlers(threaded.py)', '136': 'stop(channels.py)', '133': 'is_beating(channels.py)', '135': 'run(channels.py)', '145': 'time_to_dead(channelsabc.py)', '131': 'call_handlers(channels.py)', '130': '_poll(channels.py)'}}, {'key': 580, 'parent': 2129, 'tfidf_word': 'EP: 580, Name: get_iopub_msg &rarr; get_msg &rarr; _recv', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 582, 'parent': 2129, 'tfidf_word': 'EP: 582, Name: get_stdin_msg &rarr; get_msg &rarr; _recv', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1245, 'parent': 2204, 'tfidf_word': 'EP: 1245, Name: test_install_kernel_spec_prefix &rarr; install_kernel_spec &rarr; _get_destination_dir', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1246, 'parent': 2204, 'tfidf_word': 'EP: 1246, Name: test_install_kernel_spec_prefix &rarr; install_kernel_spec &rarr; _is_valid_kernel_name', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2108, 'parent': 2650, 'tfidf_word': 'destination dir get name valid install spec kernel ', 'tfidf_method': 'install_kernel_spec install_kernel_spec _is_valid_kernel_name _get_destination_dir ', 'lda_word': ' spec,kernel,install,valid,destination,', 'lda_method': ' install_kernel_spec,get_destination_dir,is_valid_kernel_name,', 'lsi_word': ' kernel,install,spec,name,valid,', 'lsi_method': ' install_kernel_spec,is_valid_kernel_name,get_destination_dir,', 'spm_method': ' ', 'text_summary': '', 'files_count': 1, 'files': ['kernelspec.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'261': 'install_kernel_spec(kernelspec.py)', '275': 'install_kernel_spec(kernelspec.py)', '268': '_get_destination_dir(kernelspec.py)', '257': '_is_valid_kernel_name(kernelspec.py)'}}, {'key': 2203, 'parent': 2650, 'tfidf_word': 'test destination dir get name valid install spec kernel ', 'tfidf_method': 'install_kernel_spec test_install_kernel_spec _is_valid_kernel_name _get_destination_dir ', 'lda_word': ' spec,install,kernel,test,get,', 'lda_method': ' install_kernel_spec,test_install_kernel_spec,is_valid_kernel_name,get_destination_dir,', 'lsi_word': ' kernel,spec,install,test,name,', 'lsi_method': ' install_kernel_spec,test_install_kernel_spec,get_destination_dir,is_valid_kernel_name,', 'spm_method': ' ', 'text_summary': '', 'files_count': 2, 'files': ['test_kernelspec.py', 'kernelspec.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'624': 'test_install_kernel_spec(test_kernelspec.py)', '275': 'install_kernel_spec(kernelspec.py)', '268': '_get_destination_dir(kernelspec.py)', '257': '_is_valid_kernel_name(kernelspec.py)'}}, {'key': 1347, 'parent': 2220, 'tfidf_word': 'EP: 1347, Name: test_start_sequence_process_kernels &rarr; _run_signaltest_lifecycle &rarr; execute', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1348, 'parent': 2220, 'tfidf_word': 'EP: 1348, Name: test_start_sequence_process_kernels &rarr; _run_signaltest_lifecycle &rarr; _prepare_kernel', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2219, 'parent': 2655, 'tfidf_word': 'lifecycle parallel process run signaltest start test execute prepare kernel ', 'tfidf_method': '_run_signaltest_lifecycle test_start_parallel_process_kernels _prepare_kernel execute ', 'lda_word': ' run,kernel,process,signaltest,lifecycle,', 'lda_method': ' run_signaltest_lifecycle,test_start_parallel_process_kernels,execute,prepare_kernel,', 'lsi_word': ' kernel,parallel,signaltest,run,test,', 'lsi_method': ' run_signaltest_lifecycle,test_start_parallel_process_kernels,prepare_kernel,execute,', 'spm_method': ' ', 'text_summary': 'Empty', 'files_count': 1, 'files': ['test_kernelmanager.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'611': 'test_start_parallel_process_kernels(test_kernelmanager.py)', '610': '_run_signaltest_lifecycle(test_kernelmanager.py)', '615': 'execute(test_kernelmanager.py)', '609': '_prepare_kernel(test_kernelmanager.py)'}}, {'key': 2654, 'parent': 2655, 'tfidf_word': 'run signaltest start test execute parallel prepare sequence thread kernel ', 'tfidf_method': '_run_signaltest_lifecycle _prepare_kernel test_start_parallel_thread_kernels test_start_sequence_kernels execute ', 'lda_word': ' test,run,kernel,lifecycle,signaltest,', 'lda_method': ' execute,test_start_sequence_kernels,run_signaltest_lifecycle,prepare_kernel,test_start_parallel_thread_kernels,', 'lsi_word': ' kernel,run,start,test,signaltest,', 'lsi_method': ' run_signaltest_lifecycle,test_start_sequence_kernels,execute,test_start_parallel_thread_kernels,prepare_kernel,', 'spm_method': ' ', 'text_summary': '', 'files_count': 1, 'files': ['test_kernelmanager.py'], 'execution_path_count': 4, 'function_id_to_name_file': {'613': 'test_start_sequence_kernels(test_kernelmanager.py)', '610': '_run_signaltest_lifecycle(test_kernelmanager.py)', '615': 'execute(test_kernelmanager.py)', '609': '_prepare_kernel(test_kernelmanager.py)', '612': 'test_start_parallel_thread_kernels(test_kernelmanager.py)'}}, {'key': 1860, 'parent': 2340, 'tfidf_word': 'class factory available context default find port create kernel manager ', 'tfidf_method': '_create_kernel_manager_factory _kernel_manager_class_changed create_kernel_manager _context_default _find_available_port ', 'lda_word': ' kernel,manager,create,find,available,', 'lda_method': ' create_kernel_manager_factory,kernel_manager_class_changed,create_kernel_manager,context_default,find_available_port,', 'lsi_word': ' kernel,manager,create,change,class,', 'lsi_method': ' create_kernel_manager_factory,kernel_manager_class_changed,create_kernel_manager,context_default,find_available_port,', 'spm_method': ' ', 'text_summary': '', 'files_count': 1, 'files': ['multikernelmanager.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'398': '_kernel_manager_class_changed(multikernelmanager.py)', '396': '_create_kernel_manager_factory(multikernelmanager.py)', '424': 'create_kernel_manager(multikernelmanager.py)', '397': '_find_available_port(multikernelmanager.py)', '395': '_context_default(multikernelmanager.py)'}}, {'key': 1861, 'parent': 2340, 'tfidf_word': 'available context find port create default factory kernel manager ', 'tfidf_method': '_create_kernel_manager_factory _kernel_manager_factory_default create_kernel_manager _context_default _find_available_port ', 'lda_word': ' kernel,manager,factory,create,default,', 'lda_method': ' create_kernel_manager_factory,create_kernel_manager,kernel_manager_factory_default,find_available_port,context_default,', 'lsi_word': ' kernel,manager,factory,create,default,', 'lsi_method': ' kernel_manager_factory_default,create_kernel_manager,create_kernel_manager_factory,find_available_port,context_default,', 'spm_method': ' ', 'text_summary': '', 'files_count': 1, 'files': ['multikernelmanager.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'399': '_kernel_manager_factory_default(multikernelmanager.py)', '396': '_create_kernel_manager_factory(multikernelmanager.py)', '424': 'create_kernel_manager(multikernelmanager.py)', '397': '_find_available_port(multikernelmanager.py)', '395': '_context_default(multikernelmanager.py)'}}, {'key': 2365, 'parent': 2739, 'tfidf_word': 'check packer auth date new session squash utcnow init ', 'tfidf_method': '__init__ __init__ __init__ _check_packers squash_dates Session utcnow _new_auth ', 'lda_word': ' init,check,packer,squash,date,', 'lda_method': ' init,check_packers,session,new_auth,utcnow,', 'lsi_word': ' init,packer,check,squash,date,', 'lsi_method': ' init,check_packers,utcnow,squash_dates,new_auth,', 'spm_method': ' ', 'text_summary': '', 'files_count': 3, 'files': ['consoleapp.py', 'session.py', 'jsonutil.py'], 'execution_path_count': 4, 'function_id_to_name_file': {'215': '__init__(consoleapp.py)', '485': '__init__(session.py)', '441': 'Session(session.py)', '457': '__init__(session.py)', '465': '_new_auth(session.py)', '459': '_check_packers(session.py)', '450': 'utcnow(session.py)', '244': 'squash_dates(jsonutil.py)'}}, {'key': 2738, 'parent': 2739, 'tfidf_word': 'manager native flush permission name io cleanup code restarter tunnel ', 'tfidf_method': 'extract_oname_v4 test_complete_reply test_complete_request test_display_data test_execute_reply test_input_request test_kernel_info_reply test_no_adapt test_load_connection_file_session_with_kn reqrep ', 'lda_word': ' kernel,channel,client,async,manager,', 'lda_method': ' adapt,is_alive,stop_channels,start,is_beating,', 'lsi_word': ' kernel,test,start,lifecycle,async,', 'lsi_method': ' start,setup,poll,shutdown,shutdown_handler,', 'spm_method': ' ', 'text_summary': "Subclasses may override  Prepares a kernel for startup in a separate process. Prepares a kernel for startup in a separate process. return ip for localhost (almost always 127.0.0.1)   Ensure that a sequence of kernel startups doesn't break anything. Return the connection info as a dict. Subclasses may override Start the polling of the kernel. Ensure that a sequence of kernel startups doesn't break anything. find a connection file, and return its absolute path. return ip for localhost (almost always 127.0.0.1)      find a connection file, and return its absolute path. tunnel connections to a kernel via ssh. For tests, create a file to indicate that we've started. handle kernel info reply. Get the hb channel object for this kernel. Send a raw message via ident path. Returns the id to associate with the kernel for this request. Make a blocking client connected to my kernel. Immediately processes all pending messages on this channel. Return the number of running kernels. Interrupts the kernel by sending it a signal. Create an ssh tunnel using command-line ssh that connects port lport. This is run in the ioloop thread when the kernel info reply is received. default function for packing datetime objects in JSON. Start the polling of the kernel. Send a shutdown request via control channel. test load_connection_file() after. Sends an interrupt event using the specified handle. test that messages receive unique ids. Forgets randomly assigned port numbers and cleans up the connection file.", 'files_count': 34, 'files': ['client.py', 'channelsabc.py', 'connect.py', 'manager.py', 'test_manager.py', 'test_multikernelmanager.py', 'utils.py', 'test_session.py', 'session.py', 'forward.py', 'threaded.py', 'multikernelmanager.py', 'restarter.py', 'signalkernel.py', 'tunnel.py', 'test_connect.py', 'channels.py', 'kernelspecapp.py', 'kernelapp.py', 'managerabc.py', 'test_adapter.py', 'kernelspec.py', 'test_jsonutil.py', 'jsonutil.py', 'test_kernelmanager.py', 'test_kernelspec.py', 'localinterfaces.py', 'adapter.py', 'test_kernelapp.py', 'test_client.py', 'win_interrupt.py', 'runapp.py', 'consoleapp.py', 'launcher.py'], 'execution_path_count': 285, 'function_id_to_name_file': {'90': 'AsyncKernelClient(client.py)', '147': 'KernelClient(client.py)', '139': 'HBChannelABC(channelsabc.py)', '138': 'ChannelABC(channelsabc.py)', '116': 'BlockingKernelClient(client.py)', '188': 'ConnectionFileMixin(connect.py)', '322': 'start_new_async_kernel(manager.py)', '319': 'AsyncKernelManager(manager.py)', '320': 'KernelManager(manager.py)', '224': 'AsyncIOLoopKernelManager(manager.py)', '225': 'IOLoopKernelManager(manager.py)', '635': 'test_connection_file_real_path(test_manager.py)', '663': 'test_start_parallel_thread_kernels(test_multikernelmanager.py)', '658': 'tcp_lifecycle_with_loop(test_multikernelmanager.py)', '667': 'test_tcp_lifecycle(test_multikernelmanager.py)', '657': '_run_lifecycle(test_multikernelmanager.py)', '662': 'test_start_parallel_process_kernels(test_multikernelmanager.py)', '704': 'execute(utils.py)', '155': 'execute(client.py)', '148': 'validate_string_dict(client.py)', '689': 'test_datetimes_msgpack(test_session.py)', '679': '_datetime_test(test_session.py)', '450': 'utcnow(session.py)', '688': 'test_datetimes(test_session.py)', '690': 'test_datetimes_pickle(test_session.py)', '492': 'handle(forward.py)', '734': 'send(threaded.py)', '738': 'thread_send(threaded.py)', '328': 'interrupt_kernel(manager.py)', '694': 'test_send(test_session.py)', '664': 'test_start_sequence_ipc_kernels(test_multikernelmanager.py)', '654': '_get_ipc_km(test_multikernelmanager.py)', '392': '__init__(multikernelmanager.py)', '660': 'test_ipc_lifecycle(test_multikernelmanager.py)', '659': 'test_ipc_cinfo(test_multikernelmanager.py)', '423': 'start_kernel(multikernelmanager.py)', '415': 'pre_start_kernel(multikernelmanager.py)', '380': 'DuplicateKernelError(multikernelmanager.py)', '414': 'new_kernel_id(multikernelmanager.py)', '389': 'start_kernel(multikernelmanager.py)', '238': 'start(restarter.py)', '430': 'poll(restarter.py)', '433': 'stop(restarter.py)', '428': '_fire_callbacks(restarter.py)', '510': 'do_execute(signalkernel.py)', '190': 'tunnel_to_kernel(connect.py)', '501': 'openssh_tunnel(tunnel.py)', '494': 'SSHException(tunnel.py)', '497': '_stop_tunnel(tunnel.py)', '479': 'recv(session.py)', '475': 'feed_identities(session.py)', '330': 'restart_kernel(manager.py)', '202': 'cleanup_random_ports(connect.py)', '200': 'cleanup_connection_file(connect.py)', '567': 'test_mixin_cleanup_random_ports(test_connect.py)', '106': 'ZMQSocketChannel(channels.py)', '109': 'close(channels.py)', '226': 'as_zmqstream(manager.py)', '233': 'wrapped(manager.py)', '568': 'test_mixin_record_random_ports(test_connect.py)', '557': 'DummyConfigurable(test_connect.py)', '235': 'IOLoopKernelRestarter(restarter.py)', '426': 'KernelRestarter(restarter.py)', '234': 'AsyncIOLoopKernelRestarter(restarter.py)', '291': 'start(kernelspecapp.py)', '251': 'start(kernelapp.py)', '249': 'setup_signals(kernelapp.py)', '252': 'shutdown_handler(kernelapp.py)', '250': 'shutdown(kernelapp.py)', '248': 'log_connection_info(kernelapp.py)', '199': 'blocking_client(connect.py)', '208': 'get_connection_info(connect.py)', '725': 'stop_channels(threaded.py)', '373': 'is_alive(managerabc.py)', '684': 'test_bad_unpack(test_session.py)', '676': '_bad_unpacker(test_session.py)', '536': 'test_complete_request(test_adapter.py)', '517': 'adapt(test_adapter.py)', '562': 'test_find_connection_file_local(test_connect.py)', '189': 'find_connection_file(connect.py)', '730': 'close(threaded.py)', '493': 'SubHander(forward.py)', '490': 'Handler(forward.py)', '253': 'KernelSpec(kernelspec.py)', '718': 'close(threaded.py)', '132': 'close(channels.py)', '114': 'send(channels.py)', '88': 'send(channels.py)', '83': 'close(channels.py)', '575': 'test_date_default(test_jsonutil.py)', '241': 'date_default(jsonutil.py)', '240': '_ensure_tzinfo(jsonutil.py)', '597': 'test_subclasses(test_kernelmanager.py)', '703': 'AsyncKernelManagerWithCleanup(utils.py)', '595': 'test_signal_kernel_subprocesses(test_kernelmanager.py)', '598': 'execute(test_kernelmanager.py)', '702': 'AsyncKernelManagerSubclass(utils.py)', '611': 'test_start_parallel_process_kernels(test_kernelmanager.py)', '591': 'transport(test_kernelmanager.py)', '606': 'test_templated_kspec_env(test_kernelmanager.py)', '599': '_env_test_body(test_kernelmanager.py)', '607': 'execute(test_kernelmanager.py)', '612': 'test_start_parallel_thread_kernels(test_kernelmanager.py)', '604': 'test_signal_kernel_subprocesses(test_kernelmanager.py)', '608': 'execute(test_kernelmanager.py)', '586': 'env(test_kernelmanager.py)', '712': 'stop(utils.py)', '711': 'start(utils.py)', '705': 'test_env(utils.py)', '630': 'test_validate_kernel_name(test_kernelspec.py)', '257': '_is_valid_kernel_name(kernelspec.py)', '506': 'SignalTestApp(signalkernel.py)', '507': 'SignalTestKernel(signalkernel.py)', '627': 'test_remove_kernel_spec(test_kernelspec.py)', '617': '_install_sample_kernel(test_kernelspec.py)', '626': 'test_kernel_spec_priority(test_kernelspec.py)', '651': 'test_tcp_cinfo(test_multikernelmanager.py)', '640': '_run_cinfo(test_multikernelmanager.py)', '621': 'test_find_all_specs(test_kernelspec.py)', '622': 'test_find_kernel_specs(test_kernelspec.py)', '623': 'test_get_kernel_spec(test_kernelspec.py)', '619': 'tearDown(test_kernelspec.py)', '618': 'setUp(test_kernelspec.py)', '649': 'test_start_sequence_ipc_kernels(test_multikernelmanager.py)', '641': '_run_lifecycle(test_multikernelmanager.py)', '650': 'test_start_sequence_tcp_kernels(test_multikernelmanager.py)', '644': 'test_ipc_cinfo(test_multikernelmanager.py)', '315': 'localhost(localinterfaces.py)', '645': 'test_ipc_lifecycle(test_multikernelmanager.py)', '665': 'test_start_sequence_tcp_kernels(test_multikernelmanager.py)', '656': '_run_cinfo(test_multikernelmanager.py)', '666': 'test_tcp_cinfo(test_multikernelmanager.py)', '668': 'test_tcp_lifecycle_with_kernel_id(test_multikernelmanager.py)', '569': 'test_secure_write(test_connect.py)', '573': 'check_user_only_permissions(test_connect.py)', '574': 'fetch_win32_permissions(test_connect.py)', '563': 'test_find_connection_file_relative(test_connect.py)', '561': 'test_find_connection_file_abspath(test_connect.py)', '560': 'test_find_connection_file(test_connect.py)', '565': 'test_load_connection_file_session_with_kn(test_connect.py)', '441': 'Session(session.py)', '539': 'test_input_request(test_adapter.py)', '564': 'test_load_connection_file_session(test_connect.py)', '537': 'test_display_data(test_adapter.py)', '540': 'test_inspect_reply(test_adapter.py)', '543': 'test_kernel_info_reply(test_adapter.py)', '542': 'test_inspect_request_token(test_adapter.py)', '535': 'test_complete_reply(test_adapter.py)', '541': 'test_inspect_request(test_adapter.py)', '538': 'test_execute_request(test_adapter.py)', '545': 'test_rename_type(test_adapter.py)', '544': 'test_no_adapt(test_adapter.py)', '546': 'test_same_version(test_adapter.py)', '514': 'V5toV4TestCase(test_adapter.py)', '512': 'AdapterTest(test_adapter.py)', '526': 'test_input_request(test_adapter.py)', '523': 'test_display_data(test_adapter.py)', '527': 'test_kernel_info_reply(test_adapter.py)', '530': 'test_object_info_reply_not_found(test_adapter.py)', '529': 'test_object_info_reply(test_adapter.py)', '531': 'test_object_info_request(test_adapter.py)', '521': 'test_complete_reply(test_adapter.py)', '522': 'test_complete_request(test_adapter.py)', '524': 'test_execute_reply(test_adapter.py)', '532': 'test_rename_type(test_adapter.py)', '525': 'test_execute_request(test_adapter.py)', '528': 'test_no_adapt(test_adapter.py)', '533': 'test_same_version(test_adapter.py)', '513': 'V4toV5TestCase(test_adapter.py)', '519': 'setUp(test_adapter.py)', '516': 'test_default_version(test_adapter.py)', '515': 'test_code_to_line_no_code(test_adapter.py)', '51': 'code_to_line(adapter.py)', '158': 'get_shell_msg(client.py)', '615': 'execute(test_kernelmanager.py)', '157': 'get_iopub_msg(client.py)', '710': '__exit__(utils.py)', '709': '__enter__(utils.py)', '580': 'test_kernelapp_lifecycle(test_kernelapp.py)', '579': '_launch(test_kernelapp.py)', '686': 'test_clone(test_session.py)', '473': 'clone(session.py)', '695': 'test_send_raw(test_session.py)', '481': 'send_raw(session.py)', '483': 'sign(session.py)', '683': 'test_bad_roundtrip(test_session.py)', '685': 'test_bad_unpacker(test_session.py)', '682': 'test_bad_packer(test_session.py)', '681': 'test_bad_pack(test_session.py)', '675': '_bad_packer(test_session.py)', '687': 'test_cull_digest_history(test_session.py)', '700': 'test_zero_digest_history(test_session.py)', '697': 'test_session_id(test_session.py)', '699': 'test_unique_msg_ids(test_session.py)', '445': 'msg_header(session.py)', '698': 'test_tracking(test_session.py)', '680': 'test_args(test_session.py)', '478': 'msg_id(session.py)', '696': 'test_serialize(test_session.py)', '674': 'TestSession(test_session.py)', '673': 'SessionTestCase(test_session.py)', '678': 'setUp(test_session.py)', '556': 'test_shutdown(test_client.py)', '548': '_check_reply(test_client.py)', '550': 'test_comm_info(test_client.py)', '555': 'test_kernel_info(test_client.py)', '551': 'test_complete(test_client.py)', '554': 'test_inspect(test_client.py)', '553': 'test_history(test_client.py)', '549': 'setUp(test_client.py)', '255': 'NoSuchKernel(kernelspec.py)', '117': 'reqrep(client.py)', '124': 'wrapped(client.py)', '123': 'wait_for_ready(client.py)', '150': '_handle_kernel_info_reply(client.py)', '125': 'HBChannel(channels.py)', '104': 'wait_for_ready(client.py)', '102': 'hb_channel(client.py)', '196': '_make_url(connect.py)', '91': 'reqrep(client.py)', '105': 'wrapped(client.py)', '80': 'ZMQSocketChannel(channels.py)', '154': 'control_channel(client.py)', '723': 'ioloop(threaded.py)', '160': 'hb_channel(client.py)', '171': 'stdin_channel(client.py)', '164': 'iopub_channel(client.py)', '168': 'shell_channel(client.py)', '740': 'send_interrupt(win_interrupt.py)', '334': '__del__(manager.py)', '293': 'start(kernelspecapp.py)', '294': 'path_key(kernelspecapp.py)', '735': 'start(threaded.py)', '720': 'start(threaded.py)', '141': 'start(channelsabc.py)', '432': 'start(restarter.py)', '288': 'start(kernelspecapp.py)', '89': 'start(channels.py)', '115': 'start(channels.py)', '290': 'start(kernelspecapp.py)', '438': 'parse_command_line(runapp.py)', '218': 'build_kernel_argv(consoleapp.py)', '308': '_only_once(localinterfaces.py)', '317': 'wrapped(localinterfaces.py)', '47': 'V4toV5(adapter.py)', '46': 'Adapter(adapter.py)', '77': 'object_info_request(adapter.py)', '52': 'extract_oname_v4(adapter.py)', '70': 'complete_request(adapter.py)', '75': 'kernel_info_reply(adapter.py)', '49': '_version_str_to_list(adapter.py)', '48': 'V5toV4(adapter.py)', '53': '__call__(adapter.py)', '54': 'handle_reply_status_error(adapter.py)', '57': 'update_msg_type(adapter.py)', '56': 'update_metadata(adapter.py)', '55': 'update_header(adapter.py)', '247': 'initialize(kernelapp.py)', '246': '_record_started(kernelapp.py)', '585': 'config(test_kernelmanager.py)', '262': 'install_native_kernel_spec(kernelspec.py)', '276': 'install_native_kernel_spec(kernelspec.py)', '265': 'to_json(kernelspec.py)', '264': 'to_dict(kernelspec.py)', '449': 'test_msg2obj(session.py)', '440': 'Message(session.py)', '453': '__init__(session.py)', '470': '_signature_scheme_changed(session.py)', '465': '_new_auth(session.py)', '463': '_key_default(session.py)', '447': 'new_id_bytes(session.py)', '462': '_key_changed(session.py)', '443': 'default_secure(session.py)', '469': '_session_default(session.py)', '446': 'new_id(session.py)', '412': 'is_alive(multikernelmanager.py)', '420': 'shutdown_all(multikernelmanager.py)', '413': 'list_kernel_ids(multikernelmanager.py)', '721': 'stop(threaded.py)', '140': 'is_alive(channelsabc.py)', '732': 'is_alive(threaded.py)', '112': 'is_alive(channels.py)', '86': 'is_alive(channels.py)', '724': 'start_channels(threaded.py)', '722': '_check_kernel_info_reply(threaded.py)', '716': '__init__(threaded.py)', '387': 'shutdown_kernel(multikernelmanager.py)', '416': 'remove_kernel(multikernelmanager.py)', '713': 'IOLoopThread(threaded.py)', '714': 'ThreadedKernelClient(threaded.py)', '715': 'ThreadedZMQSocketChannel(threaded.py)', '731': 'flush(threaded.py)', '727': '_flush(threaded.py)', '386': 'shutdown_all(multikernelmanager.py)', '418': 'request_shutdown(multikernelmanager.py)', '402': 'cleanup_resources(multikernelmanager.py)', '408': 'finish_shutdown(multikernelmanager.py)', '393': '__len__(multikernelmanager.py)', '421': 'shutdown_kernel(multikernelmanager.py)', '198': '_session_default(connect.py)', '298': 'launch_kernel(launcher.py)', '739': 'create_interrupt_event(win_interrupt.py)', '741': 'SECURITY_ATTRIBUTES(win_interrupt.py)', '215': '__init__(consoleapp.py)', '509': '__init__(signalkernel.py)', '278': '__init__(kernelspec.py)', '127': '__init__(channels.py)', '126': 'InvalidPortNumber(channels.py)', '107': '__init__(channels.py)', '81': '__init__(channels.py)', '726': '__init__(threaded.py)', '737': 'setup_stream(threaded.py)', '728': '_handle_recv(threaded.py)', '729': 'call_handlers(threaded.py)', '136': 'stop(channels.py)', '133': 'is_beating(channels.py)', '135': 'run(channels.py)', '145': 'time_to_dead(channelsabc.py)', '131': 'call_handlers(channels.py)', '130': '_poll(channels.py)'}}, {'key': 121, 'parent': 2108, 'tfidf_word': 'EP: 121, Name: install_kernel_spec &rarr; install_kernel_spec &rarr; _get_destination_dir', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 122, 'parent': 2108, 'tfidf_word': 'EP: 122, Name: install_kernel_spec &rarr; install_kernel_spec &rarr; _is_valid_kernel_name', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1241, 'parent': 2203, 'tfidf_word': 'EP: 1241, Name: test_install_kernel_spec &rarr; install_kernel_spec &rarr; _get_destination_dir', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1242, 'parent': 2203, 'tfidf_word': 'EP: 1242, Name: test_install_kernel_spec &rarr; install_kernel_spec &rarr; _is_valid_kernel_name', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1344, 'parent': 2219, 'tfidf_word': 'EP: 1344, Name: test_start_parallel_process_kernels &rarr; _run_signaltest_lifecycle &rarr; execute', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1345, 'parent': 2219, 'tfidf_word': 'EP: 1345, Name: test_start_parallel_process_kernels &rarr; _run_signaltest_lifecycle &rarr; _prepare_kernel', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2217, 'parent': 2654, 'tfidf_word': 'lifecycle run sequence signaltest start test execute prepare kernel ', 'tfidf_method': '_run_signaltest_lifecycle test_start_sequence_kernels _prepare_kernel execute ', 'lda_word': ' kernel,signaltest,sequence,start,test,', 'lda_method': ' test_start_sequence_kernels,run_signaltest_lifecycle,prepare_kernel,execute,', 'lsi_word': ' kernel,run,signaltest,test,start,', 'lsi_method': ' run_signaltest_lifecycle,test_start_sequence_kernels,prepare_kernel,execute,', 'spm_method': ' ', 'text_summary': '', 'files_count': 1, 'files': ['test_kernelmanager.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'613': 'test_start_sequence_kernels(test_kernelmanager.py)', '610': '_run_signaltest_lifecycle(test_kernelmanager.py)', '615': 'execute(test_kernelmanager.py)', '609': '_prepare_kernel(test_kernelmanager.py)'}}, {'key': 2218, 'parent': 2654, 'tfidf_word': 'lifecycle parallel run signaltest start test thread execute prepare kernel ', 'tfidf_method': '_run_signaltest_lifecycle test_start_parallel_thread_kernels _prepare_kernel execute ', 'lda_word': ' kernel,start,test,lifecycle,run,', 'lda_method': ' test_start_parallel_thread_kernels,run_signaltest_lifecycle,execute,prepare_kernel,', 'lsi_word': ' kernel,test,start,signaltest,thread,', 'lsi_method': ' run_signaltest_lifecycle,test_start_parallel_thread_kernels,execute,prepare_kernel,', 'spm_method': ' ', 'text_summary': 'Empty', 'files_count': 1, 'files': ['test_kernelmanager.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'612': 'test_start_parallel_thread_kernels(test_kernelmanager.py)', '610': '_run_signaltest_lifecycle(test_kernelmanager.py)', '615': 'execute(test_kernelmanager.py)', '609': '_prepare_kernel(test_kernelmanager.py)'}}, {'key': 65, 'parent': 1860, 'tfidf_word': 'EP: 65, Name: _kernel_manager_class_changed &rarr; _create_kernel_manager_factory &rarr; create_kernel_manager &rarr; _find_available_port', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 66, 'parent': 1860, 'tfidf_word': 'EP: 66, Name: _kernel_manager_class_changed &rarr; _create_kernel_manager_factory &rarr; create_kernel_manager &rarr; _context_default', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 67, 'parent': 1861, 'tfidf_word': 'EP: 67, Name: _kernel_manager_factory_default &rarr; _create_kernel_manager_factory &rarr; create_kernel_manager &rarr; _find_available_port', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 68, 'parent': 1861, 'tfidf_word': 'EP: 68, Name: _kernel_manager_factory_default &rarr; _create_kernel_manager_factory &rarr; create_kernel_manager &rarr; _context_default', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 31, 'parent': 2365, 'tfidf_word': 'EP: 31, Name: __init__ &rarr; __init__ &rarr; Session', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2031, 'parent': 2365, 'tfidf_word': 'check packer auth date new squash utcnow init ', 'tfidf_method': '__init__ __init__ __init__ _check_packers squash_dates utcnow _new_auth ', 'lda_word': ' init,packer,check,utcnow,new,', 'lda_method': ' init,check_packers,new_auth,squash_dates,utcnow,', 'lsi_word': ' init,check,packer,squash,date,', 'lsi_method': ' init,check_packers,utcnow,squash_dates,new_auth,', 'spm_method': ' ', 'text_summary': '', 'files_count': 3, 'files': ['consoleapp.py', 'session.py', 'jsonutil.py'], 'execution_path_count': 3, 'function_id_to_name_file': {'215': '__init__(consoleapp.py)', '485': '__init__(session.py)', '457': '__init__(session.py)', '465': '_new_auth(session.py)', '459': '_check_packers(session.py)', '450': 'utcnow(session.py)', '244': 'squash_dates(jsonutil.py)'}}, {'key': 2680, 'parent': 2738, 'tfidf_word': 'async blocking client kernel connection file hb mixin abc channel ', 'tfidf_method': 'KernelClient ChannelABC BlockingKernelClient AsyncKernelClient HBChannelABC ConnectionFileMixin ', 'lda_word': ' kernel,client,abc,channel,async,', 'lda_method': ' kernelclient,blockingkernelclient,asynckernelclient,channelabc,connectionfilemixin,', 'lsi_word': ' client,kernel,abc,channel,async,', 'lsi_method': ' kernelclient,channelabc,blockingkernelclient,asynckernelclient,hbchannelabc,', 'spm_method': ' ', 'text_summary': '', 'files_count': 3, 'files': ['client.py', 'channelsabc.py', 'connect.py'], 'execution_path_count': 6, 'function_id_to_name_file': {'90': 'AsyncKernelClient(client.py)', '147': 'KernelClient(client.py)', '139': 'HBChannelABC(channelsabc.py)', '138': 'ChannelABC(channelsabc.py)', '116': 'BlockingKernelClient(client.py)', '188': 'ConnectionFileMixin(connect.py)'}}, {'key': 2733, 'parent': 2738, 'tfidf_word': 'loop flush native name permission io cleanup code restarter tunnel ', 'tfidf_method': 'extract_oname_v4 test_complete_reply test_complete_request test_display_data test_execute_reply test_execute_request test_input_request test_no_adapt test_load_connection_file_session_with_kn reqrep ', 'lda_word': ' kernel,test,start,run,info,', 'lda_method': ' init,interrupt_kernel,call,run_lifecycle,check_reply,', 'lsi_word': ' kernel,test,start,lifecycle,manager,', 'lsi_method': ' start,setup,poll,shutdown,shutdown_handler,', 'spm_method': ' ', 'text_summary': "Subclasses may override  Prepares a kernel for startup in a separate process. Prepares a kernel for startup in a separate process. return ip for localhost (almost always 127.0.0.1)   Ensure that a sequence of kernel startups doesn't break anything. Return the connection info as a dict. Subclasses may override Start the polling of the kernel. Ensure that a sequence of kernel startups doesn't break anything. find a connection file, and return its absolute path. return ip for localhost (almost always 127.0.0.1)      find a connection file, and return its absolute path. tunnel connections to a kernel via ssh. For tests, create a file to indicate that we've started. handle kernel info reply. Get the hb channel object for this kernel. Send a raw message via ident path. Returns the id to associate with the kernel for this request. Make a blocking client connected to my kernel. Immediately processes all pending messages on this channel. Return the number of running kernels. Interrupts the kernel by sending it a signal. Create an ssh tunnel using command-line ssh that connects port lport. This is run in the ioloop thread when the kernel info reply is received. default function for packing datetime objects in JSON. Start the polling of the kernel. Send a shutdown request via control channel. test load_connection_file() after. Sends an interrupt event using the specified handle. test that messages receive unique ids. Forgets randomly assigned port numbers and cleans up the connection file.", 'files_count': 34, 'files': ['manager.py', 'connect.py', 'test_manager.py', 'test_multikernelmanager.py', 'utils.py', 'client.py', 'test_session.py', 'session.py', 'forward.py', 'threaded.py', 'multikernelmanager.py', 'restarter.py', 'signalkernel.py', 'tunnel.py', 'test_connect.py', 'channels.py', 'kernelspecapp.py', 'kernelapp.py', 'managerabc.py', 'test_adapter.py', 'kernelspec.py', 'test_jsonutil.py', 'jsonutil.py', 'test_kernelmanager.py', 'test_kernelspec.py', 'localinterfaces.py', 'adapter.py', 'test_kernelapp.py', 'test_client.py', 'win_interrupt.py', 'channelsabc.py', 'runapp.py', 'consoleapp.py', 'launcher.py'], 'execution_path_count': 279, 'function_id_to_name_file': {'322': 'start_new_async_kernel(manager.py)', '319': 'AsyncKernelManager(manager.py)', '320': 'KernelManager(manager.py)', '188': 'ConnectionFileMixin(connect.py)', '224': 'AsyncIOLoopKernelManager(manager.py)', '225': 'IOLoopKernelManager(manager.py)', '635': 'test_connection_file_real_path(test_manager.py)', '663': 'test_start_parallel_thread_kernels(test_multikernelmanager.py)', '658': 'tcp_lifecycle_with_loop(test_multikernelmanager.py)', '667': 'test_tcp_lifecycle(test_multikernelmanager.py)', '657': '_run_lifecycle(test_multikernelmanager.py)', '662': 'test_start_parallel_process_kernels(test_multikernelmanager.py)', '704': 'execute(utils.py)', '155': 'execute(client.py)', '148': 'validate_string_dict(client.py)', '90': 'AsyncKernelClient(client.py)', '116': 'BlockingKernelClient(client.py)', '689': 'test_datetimes_msgpack(test_session.py)', '679': '_datetime_test(test_session.py)', '450': 'utcnow(session.py)', '688': 'test_datetimes(test_session.py)', '690': 'test_datetimes_pickle(test_session.py)', '492': 'handle(forward.py)', '734': 'send(threaded.py)', '738': 'thread_send(threaded.py)', '328': 'interrupt_kernel(manager.py)', '694': 'test_send(test_session.py)', '664': 'test_start_sequence_ipc_kernels(test_multikernelmanager.py)', '654': '_get_ipc_km(test_multikernelmanager.py)', '392': '__init__(multikernelmanager.py)', '660': 'test_ipc_lifecycle(test_multikernelmanager.py)', '659': 'test_ipc_cinfo(test_multikernelmanager.py)', '423': 'start_kernel(multikernelmanager.py)', '415': 'pre_start_kernel(multikernelmanager.py)', '380': 'DuplicateKernelError(multikernelmanager.py)', '414': 'new_kernel_id(multikernelmanager.py)', '389': 'start_kernel(multikernelmanager.py)', '238': 'start(restarter.py)', '430': 'poll(restarter.py)', '433': 'stop(restarter.py)', '428': '_fire_callbacks(restarter.py)', '510': 'do_execute(signalkernel.py)', '190': 'tunnel_to_kernel(connect.py)', '501': 'openssh_tunnel(tunnel.py)', '494': 'SSHException(tunnel.py)', '497': '_stop_tunnel(tunnel.py)', '479': 'recv(session.py)', '475': 'feed_identities(session.py)', '330': 'restart_kernel(manager.py)', '202': 'cleanup_random_ports(connect.py)', '200': 'cleanup_connection_file(connect.py)', '567': 'test_mixin_cleanup_random_ports(test_connect.py)', '106': 'ZMQSocketChannel(channels.py)', '109': 'close(channels.py)', '226': 'as_zmqstream(manager.py)', '233': 'wrapped(manager.py)', '568': 'test_mixin_record_random_ports(test_connect.py)', '557': 'DummyConfigurable(test_connect.py)', '235': 'IOLoopKernelRestarter(restarter.py)', '426': 'KernelRestarter(restarter.py)', '234': 'AsyncIOLoopKernelRestarter(restarter.py)', '291': 'start(kernelspecapp.py)', '251': 'start(kernelapp.py)', '249': 'setup_signals(kernelapp.py)', '252': 'shutdown_handler(kernelapp.py)', '250': 'shutdown(kernelapp.py)', '248': 'log_connection_info(kernelapp.py)', '199': 'blocking_client(connect.py)', '208': 'get_connection_info(connect.py)', '725': 'stop_channels(threaded.py)', '373': 'is_alive(managerabc.py)', '684': 'test_bad_unpack(test_session.py)', '676': '_bad_unpacker(test_session.py)', '536': 'test_complete_request(test_adapter.py)', '517': 'adapt(test_adapter.py)', '562': 'test_find_connection_file_local(test_connect.py)', '189': 'find_connection_file(connect.py)', '730': 'close(threaded.py)', '493': 'SubHander(forward.py)', '490': 'Handler(forward.py)', '253': 'KernelSpec(kernelspec.py)', '718': 'close(threaded.py)', '132': 'close(channels.py)', '114': 'send(channels.py)', '88': 'send(channels.py)', '83': 'close(channels.py)', '575': 'test_date_default(test_jsonutil.py)', '241': 'date_default(jsonutil.py)', '240': '_ensure_tzinfo(jsonutil.py)', '597': 'test_subclasses(test_kernelmanager.py)', '703': 'AsyncKernelManagerWithCleanup(utils.py)', '595': 'test_signal_kernel_subprocesses(test_kernelmanager.py)', '598': 'execute(test_kernelmanager.py)', '702': 'AsyncKernelManagerSubclass(utils.py)', '611': 'test_start_parallel_process_kernels(test_kernelmanager.py)', '591': 'transport(test_kernelmanager.py)', '606': 'test_templated_kspec_env(test_kernelmanager.py)', '599': '_env_test_body(test_kernelmanager.py)', '607': 'execute(test_kernelmanager.py)', '612': 'test_start_parallel_thread_kernels(test_kernelmanager.py)', '604': 'test_signal_kernel_subprocesses(test_kernelmanager.py)', '608': 'execute(test_kernelmanager.py)', '586': 'env(test_kernelmanager.py)', '712': 'stop(utils.py)', '711': 'start(utils.py)', '705': 'test_env(utils.py)', '630': 'test_validate_kernel_name(test_kernelspec.py)', '257': '_is_valid_kernel_name(kernelspec.py)', '506': 'SignalTestApp(signalkernel.py)', '507': 'SignalTestKernel(signalkernel.py)', '627': 'test_remove_kernel_spec(test_kernelspec.py)', '617': '_install_sample_kernel(test_kernelspec.py)', '626': 'test_kernel_spec_priority(test_kernelspec.py)', '651': 'test_tcp_cinfo(test_multikernelmanager.py)', '640': '_run_cinfo(test_multikernelmanager.py)', '621': 'test_find_all_specs(test_kernelspec.py)', '622': 'test_find_kernel_specs(test_kernelspec.py)', '623': 'test_get_kernel_spec(test_kernelspec.py)', '619': 'tearDown(test_kernelspec.py)', '618': 'setUp(test_kernelspec.py)', '649': 'test_start_sequence_ipc_kernels(test_multikernelmanager.py)', '641': '_run_lifecycle(test_multikernelmanager.py)', '650': 'test_start_sequence_tcp_kernels(test_multikernelmanager.py)', '644': 'test_ipc_cinfo(test_multikernelmanager.py)', '315': 'localhost(localinterfaces.py)', '645': 'test_ipc_lifecycle(test_multikernelmanager.py)', '665': 'test_start_sequence_tcp_kernels(test_multikernelmanager.py)', '656': '_run_cinfo(test_multikernelmanager.py)', '666': 'test_tcp_cinfo(test_multikernelmanager.py)', '668': 'test_tcp_lifecycle_with_kernel_id(test_multikernelmanager.py)', '569': 'test_secure_write(test_connect.py)', '573': 'check_user_only_permissions(test_connect.py)', '574': 'fetch_win32_permissions(test_connect.py)', '563': 'test_find_connection_file_relative(test_connect.py)', '561': 'test_find_connection_file_abspath(test_connect.py)', '560': 'test_find_connection_file(test_connect.py)', '565': 'test_load_connection_file_session_with_kn(test_connect.py)', '441': 'Session(session.py)', '539': 'test_input_request(test_adapter.py)', '564': 'test_load_connection_file_session(test_connect.py)', '537': 'test_display_data(test_adapter.py)', '540': 'test_inspect_reply(test_adapter.py)', '543': 'test_kernel_info_reply(test_adapter.py)', '542': 'test_inspect_request_token(test_adapter.py)', '535': 'test_complete_reply(test_adapter.py)', '541': 'test_inspect_request(test_adapter.py)', '538': 'test_execute_request(test_adapter.py)', '545': 'test_rename_type(test_adapter.py)', '544': 'test_no_adapt(test_adapter.py)', '546': 'test_same_version(test_adapter.py)', '514': 'V5toV4TestCase(test_adapter.py)', '512': 'AdapterTest(test_adapter.py)', '526': 'test_input_request(test_adapter.py)', '523': 'test_display_data(test_adapter.py)', '527': 'test_kernel_info_reply(test_adapter.py)', '530': 'test_object_info_reply_not_found(test_adapter.py)', '529': 'test_object_info_reply(test_adapter.py)', '531': 'test_object_info_request(test_adapter.py)', '521': 'test_complete_reply(test_adapter.py)', '522': 'test_complete_request(test_adapter.py)', '524': 'test_execute_reply(test_adapter.py)', '532': 'test_rename_type(test_adapter.py)', '525': 'test_execute_request(test_adapter.py)', '528': 'test_no_adapt(test_adapter.py)', '533': 'test_same_version(test_adapter.py)', '513': 'V4toV5TestCase(test_adapter.py)', '519': 'setUp(test_adapter.py)', '516': 'test_default_version(test_adapter.py)', '515': 'test_code_to_line_no_code(test_adapter.py)', '51': 'code_to_line(adapter.py)', '158': 'get_shell_msg(client.py)', '615': 'execute(test_kernelmanager.py)', '157': 'get_iopub_msg(client.py)', '710': '__exit__(utils.py)', '709': '__enter__(utils.py)', '580': 'test_kernelapp_lifecycle(test_kernelapp.py)', '579': '_launch(test_kernelapp.py)', '686': 'test_clone(test_session.py)', '473': 'clone(session.py)', '695': 'test_send_raw(test_session.py)', '481': 'send_raw(session.py)', '483': 'sign(session.py)', '683': 'test_bad_roundtrip(test_session.py)', '685': 'test_bad_unpacker(test_session.py)', '682': 'test_bad_packer(test_session.py)', '681': 'test_bad_pack(test_session.py)', '675': '_bad_packer(test_session.py)', '687': 'test_cull_digest_history(test_session.py)', '700': 'test_zero_digest_history(test_session.py)', '697': 'test_session_id(test_session.py)', '699': 'test_unique_msg_ids(test_session.py)', '445': 'msg_header(session.py)', '698': 'test_tracking(test_session.py)', '680': 'test_args(test_session.py)', '478': 'msg_id(session.py)', '696': 'test_serialize(test_session.py)', '674': 'TestSession(test_session.py)', '673': 'SessionTestCase(test_session.py)', '678': 'setUp(test_session.py)', '556': 'test_shutdown(test_client.py)', '548': '_check_reply(test_client.py)', '550': 'test_comm_info(test_client.py)', '555': 'test_kernel_info(test_client.py)', '551': 'test_complete(test_client.py)', '554': 'test_inspect(test_client.py)', '553': 'test_history(test_client.py)', '549': 'setUp(test_client.py)', '255': 'NoSuchKernel(kernelspec.py)', '117': 'reqrep(client.py)', '124': 'wrapped(client.py)', '123': 'wait_for_ready(client.py)', '150': '_handle_kernel_info_reply(client.py)', '125': 'HBChannel(channels.py)', '104': 'wait_for_ready(client.py)', '102': 'hb_channel(client.py)', '196': '_make_url(connect.py)', '91': 'reqrep(client.py)', '105': 'wrapped(client.py)', '80': 'ZMQSocketChannel(channels.py)', '154': 'control_channel(client.py)', '723': 'ioloop(threaded.py)', '160': 'hb_channel(client.py)', '171': 'stdin_channel(client.py)', '164': 'iopub_channel(client.py)', '168': 'shell_channel(client.py)', '740': 'send_interrupt(win_interrupt.py)', '334': '__del__(manager.py)', '293': 'start(kernelspecapp.py)', '294': 'path_key(kernelspecapp.py)', '735': 'start(threaded.py)', '720': 'start(threaded.py)', '141': 'start(channelsabc.py)', '432': 'start(restarter.py)', '288': 'start(kernelspecapp.py)', '89': 'start(channels.py)', '115': 'start(channels.py)', '290': 'start(kernelspecapp.py)', '438': 'parse_command_line(runapp.py)', '218': 'build_kernel_argv(consoleapp.py)', '308': '_only_once(localinterfaces.py)', '317': 'wrapped(localinterfaces.py)', '47': 'V4toV5(adapter.py)', '46': 'Adapter(adapter.py)', '77': 'object_info_request(adapter.py)', '52': 'extract_oname_v4(adapter.py)', '70': 'complete_request(adapter.py)', '75': 'kernel_info_reply(adapter.py)', '49': '_version_str_to_list(adapter.py)', '48': 'V5toV4(adapter.py)', '53': '__call__(adapter.py)', '54': 'handle_reply_status_error(adapter.py)', '57': 'update_msg_type(adapter.py)', '56': 'update_metadata(adapter.py)', '55': 'update_header(adapter.py)', '247': 'initialize(kernelapp.py)', '246': '_record_started(kernelapp.py)', '585': 'config(test_kernelmanager.py)', '262': 'install_native_kernel_spec(kernelspec.py)', '276': 'install_native_kernel_spec(kernelspec.py)', '265': 'to_json(kernelspec.py)', '264': 'to_dict(kernelspec.py)', '449': 'test_msg2obj(session.py)', '440': 'Message(session.py)', '453': '__init__(session.py)', '470': '_signature_scheme_changed(session.py)', '465': '_new_auth(session.py)', '463': '_key_default(session.py)', '447': 'new_id_bytes(session.py)', '462': '_key_changed(session.py)', '443': 'default_secure(session.py)', '469': '_session_default(session.py)', '446': 'new_id(session.py)', '412': 'is_alive(multikernelmanager.py)', '420': 'shutdown_all(multikernelmanager.py)', '413': 'list_kernel_ids(multikernelmanager.py)', '721': 'stop(threaded.py)', '140': 'is_alive(channelsabc.py)', '732': 'is_alive(threaded.py)', '112': 'is_alive(channels.py)', '86': 'is_alive(channels.py)', '724': 'start_channels(threaded.py)', '722': '_check_kernel_info_reply(threaded.py)', '716': '__init__(threaded.py)', '387': 'shutdown_kernel(multikernelmanager.py)', '416': 'remove_kernel(multikernelmanager.py)', '713': 'IOLoopThread(threaded.py)', '714': 'ThreadedKernelClient(threaded.py)', '715': 'ThreadedZMQSocketChannel(threaded.py)', '731': 'flush(threaded.py)', '727': '_flush(threaded.py)', '386': 'shutdown_all(multikernelmanager.py)', '418': 'request_shutdown(multikernelmanager.py)', '402': 'cleanup_resources(multikernelmanager.py)', '408': 'finish_shutdown(multikernelmanager.py)', '393': '__len__(multikernelmanager.py)', '421': 'shutdown_kernel(multikernelmanager.py)', '198': '_session_default(connect.py)', '298': 'launch_kernel(launcher.py)', '739': 'create_interrupt_event(win_interrupt.py)', '741': 'SECURITY_ATTRIBUTES(win_interrupt.py)', '215': '__init__(consoleapp.py)', '509': '__init__(signalkernel.py)', '278': '__init__(kernelspec.py)', '127': '__init__(channels.py)', '126': 'InvalidPortNumber(channels.py)', '107': '__init__(channels.py)', '81': '__init__(channels.py)', '726': '__init__(threaded.py)', '737': 'setup_stream(threaded.py)', '728': '_handle_recv(threaded.py)', '729': 'call_handlers(threaded.py)', '136': 'stop(channels.py)', '133': 'is_beating(channels.py)', '135': 'run(channels.py)', '145': 'time_to_dead(channelsabc.py)', '131': 'call_handlers(channels.py)', '130': '_poll(channels.py)'}}, {'key': 1339, 'parent': 2217, 'tfidf_word': 'EP: 1339, Name: test_start_sequence_kernels &rarr; _run_signaltest_lifecycle &rarr; execute', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1340, 'parent': 2217, 'tfidf_word': 'EP: 1340, Name: test_start_sequence_kernels &rarr; _run_signaltest_lifecycle &rarr; _prepare_kernel', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1342, 'parent': 2218, 'tfidf_word': 'EP: 1342, Name: test_start_parallel_thread_kernels &rarr; _run_signaltest_lifecycle &rarr; execute', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1343, 'parent': 2218, 'tfidf_word': 'EP: 1343, Name: test_start_parallel_thread_kernels &rarr; _run_signaltest_lifecycle &rarr; _prepare_kernel', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 30, 'parent': 2031, 'tfidf_word': 'EP: 30, Name: __init__ &rarr; __init__ &rarr; __init__ &rarr; _new_auth', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1665, 'parent': 2031, 'tfidf_word': 'check packer date squash utcnow init ', 'tfidf_method': '__init__ __init__ _check_packers __init__ squash_dates utcnow ', 'lda_word': ' init,squash,check,date,packer,', 'lda_method': ' init,check_packers,utcnow,squash_dates,', 'lsi_word': ' init,packer,check,squash,date,', 'lsi_method': ' init,check_packers,utcnow,squash_dates,', 'spm_method': ' ', 'text_summary': '', 'files_count': 3, 'files': ['consoleapp.py', 'session.py', 'jsonutil.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'215': '__init__(consoleapp.py)', '485': '__init__(session.py)', '457': '__init__(session.py)', '459': '_check_packers(session.py)', '450': 'utcnow(session.py)', '244': 'squash_dates(jsonutil.py)'}}, {'key': 1904, 'parent': 2680, 'tfidf_word': 'hb async blocking abc channel client kernel ', 'tfidf_method': 'ChannelABC HBChannelABC KernelClient BlockingKernelClient AsyncKernelClient ', 'lda_word': ' client,kernel,abc,channel,hb,', 'lda_method': ' kernelclient,channelabc,hbchannelabc,blockingkernelclient,asynckernelclient,', 'lsi_word': ' client,channel,kernel,abc,hb,', 'lsi_method': ' hbchannelabc,kernelclient,channelabc,asynckernelclient,blockingkernelclient,', 'spm_method': ' ', 'text_summary': '', 'files_count': 2, 'files': ['client.py', 'channelsabc.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'90': 'AsyncKernelClient(client.py)', '147': 'KernelClient(client.py)', '139': 'HBChannelABC(channelsabc.py)', '138': 'ChannelABC(channelsabc.py)', '116': 'BlockingKernelClient(client.py)'}}, {'key': 2657, 'parent': 2680, 'tfidf_word': 'abc async blocking channel connection file mixin client kernel ', 'tfidf_method': 'KernelClient BlockingKernelClient ChannelABC ConnectionFileMixin AsyncKernelClient ', 'lda_word': ' client,kernel,channel,async,file,', 'lda_method': ' asynckernelclient,kernelclient,channelabc,blockingkernelclient,connectionfilemixin,', 'lsi_word': ' client,kernel,connection,mixin,file,', 'lsi_method': ' kernelclient,blockingkernelclient,connectionfilemixin,channelabc,asynckernelclient,', 'spm_method': ' ', 'text_summary': '', 'files_count': 3, 'files': ['client.py', 'connect.py', 'channelsabc.py'], 'execution_path_count': 4, 'function_id_to_name_file': {'90': 'AsyncKernelClient(client.py)', '147': 'KernelClient(client.py)', '188': 'ConnectionFileMixin(connect.py)', '138': 'ChannelABC(channelsabc.py)', '116': 'BlockingKernelClient(client.py)'}}, {'key': 2362, 'parent': 2733, 'tfidf_word': 'connection file new path real start test kernel manager async ', 'tfidf_method': 'ConnectionFileMixin KernelManager AsyncKernelManager AsyncIOLoopKernelManager IOLoopKernelManager start_new_async_kernel test_connection_file_real_path ', 'lda_word': ' kernel,file,manager,connection,mixin,', 'lda_method': ' kernelmanager,connectionfilemixin,ioloopkernelmanager,asynckernelmanager,test_connection_file_real_path,', 'lsi_word': ' kernel,manager,async,file,connection,', 'lsi_method': ' kernelmanager,connectionfilemixin,asynckernelmanager,asyncioloopkernelmanager,start_new_async_kernel,', 'spm_method': ' ', 'text_summary': 'Empty', 'files_count': 3, 'files': ['manager.py', 'connect.py', 'test_manager.py'], 'execution_path_count': 4, 'function_id_to_name_file': {'322': 'start_new_async_kernel(manager.py)', '319': 'AsyncKernelManager(manager.py)', '320': 'KernelManager(manager.py)', '188': 'ConnectionFileMixin(connect.py)', '224': 'AsyncIOLoopKernelManager(manager.py)', '225': 'IOLoopKernelManager(manager.py)', '635': 'test_connection_file_real_path(test_manager.py)'}}, {'key': 2732, 'parent': 2733, 'tfidf_word': 'permission native name flush loop cleanup io code restarter tunnel ', 'tfidf_method': 'extract_oname_v4 test_complete_reply test_complete_request test_display_data test_execute_reply test_execute_request test_input_request test_kernel_info_reply V4toV5TestCase reqrep ', 'lda_word': ' test,kernel,session,info,connection,', 'lda_method': ' adapt,session,pre_start_kernel,start_kernel,run_cinfo,', 'lsi_word': ' test,kernel,start,lifecycle,run,', 'lsi_method': ' start,setup,poll,shutdown,setup_signals,', 'spm_method': ' ', 'text_summary': "Subclasses may override  Prepares a kernel for startup in a separate process. Prepares a kernel for startup in a separate process. return ip for localhost (almost always 127.0.0.1)   Ensure that a sequence of kernel startups doesn't break anything. Return the connection info as a dict. Subclasses may override Start the polling of the kernel. Ensure that a sequence of kernel startups doesn't break anything. find a connection file, and return its absolute path. return ip for localhost (almost always 127.0.0.1)      find a connection file, and return its absolute path. tunnel connections to a kernel via ssh. For tests, create a file to indicate that we've started. handle kernel info reply. Get the hb channel object for this kernel. Send a raw message via ident path. Returns the id to associate with the kernel for this request. Make a blocking client connected to my kernel. Immediately processes all pending messages on this channel. Return the number of running kernels. Interrupts the kernel by sending it a signal. Create an ssh tunnel using command-line ssh that connects port lport. This is run in the ioloop thread when the kernel info reply is received. default function for packing datetime objects in JSON. Start the polling of the kernel. Send a shutdown request via control channel. test load_connection_file() after. Sends an interrupt event using the specified handle. test that messages receive unique ids. Forgets randomly assigned port numbers and cleans up the connection file.", 'files_count': 34, 'files': ['test_multikernelmanager.py', 'utils.py', 'client.py', 'test_session.py', 'session.py', 'forward.py', 'threaded.py', 'manager.py', 'multikernelmanager.py', 'restarter.py', 'signalkernel.py', 'connect.py', 'tunnel.py', 'test_connect.py', 'channels.py', 'kernelspecapp.py', 'kernelapp.py', 'managerabc.py', 'test_adapter.py', 'test_manager.py', 'kernelspec.py', 'test_jsonutil.py', 'jsonutil.py', 'test_kernelmanager.py', 'test_kernelspec.py', 'localinterfaces.py', 'adapter.py', 'test_kernelapp.py', 'test_client.py', 'win_interrupt.py', 'channelsabc.py', 'runapp.py', 'consoleapp.py', 'launcher.py'], 'execution_path_count': 275, 'function_id_to_name_file': {'663': 'test_start_parallel_thread_kernels(test_multikernelmanager.py)', '658': 'tcp_lifecycle_with_loop(test_multikernelmanager.py)', '667': 'test_tcp_lifecycle(test_multikernelmanager.py)', '657': '_run_lifecycle(test_multikernelmanager.py)', '662': 'test_start_parallel_process_kernels(test_multikernelmanager.py)', '704': 'execute(utils.py)', '155': 'execute(client.py)', '148': 'validate_string_dict(client.py)', '90': 'AsyncKernelClient(client.py)', '116': 'BlockingKernelClient(client.py)', '689': 'test_datetimes_msgpack(test_session.py)', '679': '_datetime_test(test_session.py)', '450': 'utcnow(session.py)', '688': 'test_datetimes(test_session.py)', '690': 'test_datetimes_pickle(test_session.py)', '492': 'handle(forward.py)', '734': 'send(threaded.py)', '738': 'thread_send(threaded.py)', '328': 'interrupt_kernel(manager.py)', '694': 'test_send(test_session.py)', '664': 'test_start_sequence_ipc_kernels(test_multikernelmanager.py)', '654': '_get_ipc_km(test_multikernelmanager.py)', '392': '__init__(multikernelmanager.py)', '660': 'test_ipc_lifecycle(test_multikernelmanager.py)', '659': 'test_ipc_cinfo(test_multikernelmanager.py)', '423': 'start_kernel(multikernelmanager.py)', '415': 'pre_start_kernel(multikernelmanager.py)', '380': 'DuplicateKernelError(multikernelmanager.py)', '414': 'new_kernel_id(multikernelmanager.py)', '389': 'start_kernel(multikernelmanager.py)', '238': 'start(restarter.py)', '430': 'poll(restarter.py)', '433': 'stop(restarter.py)', '428': '_fire_callbacks(restarter.py)', '510': 'do_execute(signalkernel.py)', '190': 'tunnel_to_kernel(connect.py)', '501': 'openssh_tunnel(tunnel.py)', '494': 'SSHException(tunnel.py)', '497': '_stop_tunnel(tunnel.py)', '479': 'recv(session.py)', '475': 'feed_identities(session.py)', '330': 'restart_kernel(manager.py)', '202': 'cleanup_random_ports(connect.py)', '200': 'cleanup_connection_file(connect.py)', '567': 'test_mixin_cleanup_random_ports(test_connect.py)', '106': 'ZMQSocketChannel(channels.py)', '109': 'close(channels.py)', '225': 'IOLoopKernelManager(manager.py)', '226': 'as_zmqstream(manager.py)', '233': 'wrapped(manager.py)', '224': 'AsyncIOLoopKernelManager(manager.py)', '568': 'test_mixin_record_random_ports(test_connect.py)', '557': 'DummyConfigurable(test_connect.py)', '188': 'ConnectionFileMixin(connect.py)', '235': 'IOLoopKernelRestarter(restarter.py)', '426': 'KernelRestarter(restarter.py)', '234': 'AsyncIOLoopKernelRestarter(restarter.py)', '291': 'start(kernelspecapp.py)', '251': 'start(kernelapp.py)', '249': 'setup_signals(kernelapp.py)', '252': 'shutdown_handler(kernelapp.py)', '250': 'shutdown(kernelapp.py)', '248': 'log_connection_info(kernelapp.py)', '199': 'blocking_client(connect.py)', '208': 'get_connection_info(connect.py)', '725': 'stop_channels(threaded.py)', '373': 'is_alive(managerabc.py)', '684': 'test_bad_unpack(test_session.py)', '676': '_bad_unpacker(test_session.py)', '536': 'test_complete_request(test_adapter.py)', '517': 'adapt(test_adapter.py)', '562': 'test_find_connection_file_local(test_connect.py)', '189': 'find_connection_file(connect.py)', '730': 'close(threaded.py)', '493': 'SubHander(forward.py)', '490': 'Handler(forward.py)', '635': 'test_connection_file_real_path(test_manager.py)', '253': 'KernelSpec(kernelspec.py)', '718': 'close(threaded.py)', '132': 'close(channels.py)', '114': 'send(channels.py)', '88': 'send(channels.py)', '83': 'close(channels.py)', '575': 'test_date_default(test_jsonutil.py)', '241': 'date_default(jsonutil.py)', '240': '_ensure_tzinfo(jsonutil.py)', '597': 'test_subclasses(test_kernelmanager.py)', '703': 'AsyncKernelManagerWithCleanup(utils.py)', '595': 'test_signal_kernel_subprocesses(test_kernelmanager.py)', '598': 'execute(test_kernelmanager.py)', '702': 'AsyncKernelManagerSubclass(utils.py)', '611': 'test_start_parallel_process_kernels(test_kernelmanager.py)', '591': 'transport(test_kernelmanager.py)', '606': 'test_templated_kspec_env(test_kernelmanager.py)', '599': '_env_test_body(test_kernelmanager.py)', '607': 'execute(test_kernelmanager.py)', '612': 'test_start_parallel_thread_kernels(test_kernelmanager.py)', '604': 'test_signal_kernel_subprocesses(test_kernelmanager.py)', '608': 'execute(test_kernelmanager.py)', '586': 'env(test_kernelmanager.py)', '712': 'stop(utils.py)', '711': 'start(utils.py)', '705': 'test_env(utils.py)', '630': 'test_validate_kernel_name(test_kernelspec.py)', '257': '_is_valid_kernel_name(kernelspec.py)', '506': 'SignalTestApp(signalkernel.py)', '507': 'SignalTestKernel(signalkernel.py)', '627': 'test_remove_kernel_spec(test_kernelspec.py)', '617': '_install_sample_kernel(test_kernelspec.py)', '626': 'test_kernel_spec_priority(test_kernelspec.py)', '651': 'test_tcp_cinfo(test_multikernelmanager.py)', '640': '_run_cinfo(test_multikernelmanager.py)', '621': 'test_find_all_specs(test_kernelspec.py)', '622': 'test_find_kernel_specs(test_kernelspec.py)', '623': 'test_get_kernel_spec(test_kernelspec.py)', '619': 'tearDown(test_kernelspec.py)', '618': 'setUp(test_kernelspec.py)', '649': 'test_start_sequence_ipc_kernels(test_multikernelmanager.py)', '641': '_run_lifecycle(test_multikernelmanager.py)', '650': 'test_start_sequence_tcp_kernels(test_multikernelmanager.py)', '644': 'test_ipc_cinfo(test_multikernelmanager.py)', '315': 'localhost(localinterfaces.py)', '645': 'test_ipc_lifecycle(test_multikernelmanager.py)', '665': 'test_start_sequence_tcp_kernels(test_multikernelmanager.py)', '656': '_run_cinfo(test_multikernelmanager.py)', '666': 'test_tcp_cinfo(test_multikernelmanager.py)', '668': 'test_tcp_lifecycle_with_kernel_id(test_multikernelmanager.py)', '569': 'test_secure_write(test_connect.py)', '573': 'check_user_only_permissions(test_connect.py)', '574': 'fetch_win32_permissions(test_connect.py)', '563': 'test_find_connection_file_relative(test_connect.py)', '561': 'test_find_connection_file_abspath(test_connect.py)', '560': 'test_find_connection_file(test_connect.py)', '565': 'test_load_connection_file_session_with_kn(test_connect.py)', '441': 'Session(session.py)', '539': 'test_input_request(test_adapter.py)', '564': 'test_load_connection_file_session(test_connect.py)', '537': 'test_display_data(test_adapter.py)', '540': 'test_inspect_reply(test_adapter.py)', '543': 'test_kernel_info_reply(test_adapter.py)', '542': 'test_inspect_request_token(test_adapter.py)', '535': 'test_complete_reply(test_adapter.py)', '541': 'test_inspect_request(test_adapter.py)', '538': 'test_execute_request(test_adapter.py)', '545': 'test_rename_type(test_adapter.py)', '544': 'test_no_adapt(test_adapter.py)', '546': 'test_same_version(test_adapter.py)', '514': 'V5toV4TestCase(test_adapter.py)', '512': 'AdapterTest(test_adapter.py)', '526': 'test_input_request(test_adapter.py)', '523': 'test_display_data(test_adapter.py)', '527': 'test_kernel_info_reply(test_adapter.py)', '530': 'test_object_info_reply_not_found(test_adapter.py)', '529': 'test_object_info_reply(test_adapter.py)', '531': 'test_object_info_request(test_adapter.py)', '521': 'test_complete_reply(test_adapter.py)', '522': 'test_complete_request(test_adapter.py)', '524': 'test_execute_reply(test_adapter.py)', '532': 'test_rename_type(test_adapter.py)', '525': 'test_execute_request(test_adapter.py)', '528': 'test_no_adapt(test_adapter.py)', '533': 'test_same_version(test_adapter.py)', '513': 'V4toV5TestCase(test_adapter.py)', '519': 'setUp(test_adapter.py)', '516': 'test_default_version(test_adapter.py)', '515': 'test_code_to_line_no_code(test_adapter.py)', '51': 'code_to_line(adapter.py)', '158': 'get_shell_msg(client.py)', '615': 'execute(test_kernelmanager.py)', '157': 'get_iopub_msg(client.py)', '710': '__exit__(utils.py)', '709': '__enter__(utils.py)', '580': 'test_kernelapp_lifecycle(test_kernelapp.py)', '579': '_launch(test_kernelapp.py)', '686': 'test_clone(test_session.py)', '473': 'clone(session.py)', '695': 'test_send_raw(test_session.py)', '481': 'send_raw(session.py)', '483': 'sign(session.py)', '683': 'test_bad_roundtrip(test_session.py)', '685': 'test_bad_unpacker(test_session.py)', '682': 'test_bad_packer(test_session.py)', '681': 'test_bad_pack(test_session.py)', '675': '_bad_packer(test_session.py)', '687': 'test_cull_digest_history(test_session.py)', '700': 'test_zero_digest_history(test_session.py)', '697': 'test_session_id(test_session.py)', '699': 'test_unique_msg_ids(test_session.py)', '445': 'msg_header(session.py)', '698': 'test_tracking(test_session.py)', '680': 'test_args(test_session.py)', '478': 'msg_id(session.py)', '696': 'test_serialize(test_session.py)', '674': 'TestSession(test_session.py)', '673': 'SessionTestCase(test_session.py)', '678': 'setUp(test_session.py)', '556': 'test_shutdown(test_client.py)', '548': '_check_reply(test_client.py)', '550': 'test_comm_info(test_client.py)', '555': 'test_kernel_info(test_client.py)', '551': 'test_complete(test_client.py)', '554': 'test_inspect(test_client.py)', '553': 'test_history(test_client.py)', '549': 'setUp(test_client.py)', '255': 'NoSuchKernel(kernelspec.py)', '117': 'reqrep(client.py)', '124': 'wrapped(client.py)', '123': 'wait_for_ready(client.py)', '150': '_handle_kernel_info_reply(client.py)', '125': 'HBChannel(channels.py)', '104': 'wait_for_ready(client.py)', '102': 'hb_channel(client.py)', '196': '_make_url(connect.py)', '91': 'reqrep(client.py)', '105': 'wrapped(client.py)', '80': 'ZMQSocketChannel(channels.py)', '154': 'control_channel(client.py)', '723': 'ioloop(threaded.py)', '160': 'hb_channel(client.py)', '171': 'stdin_channel(client.py)', '164': 'iopub_channel(client.py)', '168': 'shell_channel(client.py)', '740': 'send_interrupt(win_interrupt.py)', '334': '__del__(manager.py)', '293': 'start(kernelspecapp.py)', '294': 'path_key(kernelspecapp.py)', '735': 'start(threaded.py)', '720': 'start(threaded.py)', '141': 'start(channelsabc.py)', '432': 'start(restarter.py)', '288': 'start(kernelspecapp.py)', '89': 'start(channels.py)', '115': 'start(channels.py)', '290': 'start(kernelspecapp.py)', '438': 'parse_command_line(runapp.py)', '218': 'build_kernel_argv(consoleapp.py)', '308': '_only_once(localinterfaces.py)', '317': 'wrapped(localinterfaces.py)', '47': 'V4toV5(adapter.py)', '46': 'Adapter(adapter.py)', '77': 'object_info_request(adapter.py)', '52': 'extract_oname_v4(adapter.py)', '70': 'complete_request(adapter.py)', '75': 'kernel_info_reply(adapter.py)', '49': '_version_str_to_list(adapter.py)', '48': 'V5toV4(adapter.py)', '53': '__call__(adapter.py)', '54': 'handle_reply_status_error(adapter.py)', '57': 'update_msg_type(adapter.py)', '56': 'update_metadata(adapter.py)', '55': 'update_header(adapter.py)', '247': 'initialize(kernelapp.py)', '246': '_record_started(kernelapp.py)', '585': 'config(test_kernelmanager.py)', '262': 'install_native_kernel_spec(kernelspec.py)', '276': 'install_native_kernel_spec(kernelspec.py)', '265': 'to_json(kernelspec.py)', '264': 'to_dict(kernelspec.py)', '449': 'test_msg2obj(session.py)', '440': 'Message(session.py)', '453': '__init__(session.py)', '470': '_signature_scheme_changed(session.py)', '465': '_new_auth(session.py)', '463': '_key_default(session.py)', '447': 'new_id_bytes(session.py)', '462': '_key_changed(session.py)', '443': 'default_secure(session.py)', '469': '_session_default(session.py)', '446': 'new_id(session.py)', '412': 'is_alive(multikernelmanager.py)', '420': 'shutdown_all(multikernelmanager.py)', '413': 'list_kernel_ids(multikernelmanager.py)', '721': 'stop(threaded.py)', '140': 'is_alive(channelsabc.py)', '732': 'is_alive(threaded.py)', '112': 'is_alive(channels.py)', '86': 'is_alive(channels.py)', '724': 'start_channels(threaded.py)', '722': '_check_kernel_info_reply(threaded.py)', '716': '__init__(threaded.py)', '387': 'shutdown_kernel(multikernelmanager.py)', '416': 'remove_kernel(multikernelmanager.py)', '713': 'IOLoopThread(threaded.py)', '714': 'ThreadedKernelClient(threaded.py)', '715': 'ThreadedZMQSocketChannel(threaded.py)', '731': 'flush(threaded.py)', '727': '_flush(threaded.py)', '386': 'shutdown_all(multikernelmanager.py)', '418': 'request_shutdown(multikernelmanager.py)', '402': 'cleanup_resources(multikernelmanager.py)', '408': 'finish_shutdown(multikernelmanager.py)', '393': '__len__(multikernelmanager.py)', '421': 'shutdown_kernel(multikernelmanager.py)', '198': '_session_default(connect.py)', '298': 'launch_kernel(launcher.py)', '739': 'create_interrupt_event(win_interrupt.py)', '741': 'SECURITY_ATTRIBUTES(win_interrupt.py)', '215': '__init__(consoleapp.py)', '509': '__init__(signalkernel.py)', '278': '__init__(kernelspec.py)', '127': '__init__(channels.py)', '126': 'InvalidPortNumber(channels.py)', '107': '__init__(channels.py)', '81': '__init__(channels.py)', '726': '__init__(threaded.py)', '737': 'setup_stream(threaded.py)', '728': '_handle_recv(threaded.py)', '729': 'call_handlers(threaded.py)', '136': 'stop(channels.py)', '133': 'is_beating(channels.py)', '135': 'run(channels.py)', '145': 'time_to_dead(channelsabc.py)', '131': 'call_handlers(channels.py)', '130': '_poll(channels.py)'}}, {'key': 28, 'parent': 1665, 'tfidf_word': 'EP: 28, Name: __init__ &rarr; __init__ &rarr; __init__ &rarr; _check_packers &rarr; utcnow', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 29, 'parent': 1665, 'tfidf_word': 'EP: 29, Name: __init__ &rarr; __init__ &rarr; __init__ &rarr; _check_packers &rarr; squash_dates', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 524, 'parent': 1904, 'tfidf_word': 'EP: 524, Name: AsyncKernelClient &rarr; KernelClient &rarr; HBChannelABC &rarr; ChannelABC', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 630, 'parent': 1904, 'tfidf_word': 'EP: 630, Name: BlockingKernelClient &rarr; KernelClient &rarr; HBChannelABC &rarr; ChannelABC', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2127, 'parent': 2657, 'tfidf_word': 'async abc channel connection file mixin client kernel ', 'tfidf_method': 'KernelClient AsyncKernelClient ChannelABC ConnectionFileMixin ', 'lda_word': ' kernel,client,async,abc,connection,', 'lda_method': ' asynckernelclient,kernelclient,connectionfilemixin,channelabc,', 'lsi_word': ' kernel,client,async,mixin,file,', 'lsi_method': ' asynckernelclient,kernelclient,channelabc,connectionfilemixin,', 'spm_method': ' ', 'text_summary': '', 'files_count': 3, 'files': ['client.py', 'connect.py', 'channelsabc.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'90': 'AsyncKernelClient(client.py)', '147': 'KernelClient(client.py)', '188': 'ConnectionFileMixin(connect.py)', '138': 'ChannelABC(channelsabc.py)'}}, {'key': 2141, 'parent': 2657, 'tfidf_word': 'blocking abc channel connection file mixin client kernel ', 'tfidf_method': 'BlockingKernelClient KernelClient ChannelABC ConnectionFileMixin ', 'lda_word': ' kernel,client,blocking,abc,mixin,', 'lda_method': ' kernelclient,blockingkernelclient,channelabc,connectionfilemixin,', 'lsi_word': ' kernel,client,blocking,mixin,file,', 'lsi_method': ' kernelclient,blockingkernelclient,connectionfilemixin,channelabc,', 'spm_method': ' ', 'text_summary': '', 'files_count': 3, 'files': ['client.py', 'connect.py', 'channelsabc.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'116': 'BlockingKernelClient(client.py)', '147': 'KernelClient(client.py)', '188': 'ConnectionFileMixin(connect.py)', '138': 'ChannelABC(channelsabc.py)'}}, {'key': 1893, 'parent': 2362, 'tfidf_word': 'connection file mixin io loop new start async kernel manager ', 'tfidf_method': 'ConnectionFileMixin AsyncKernelManager KernelManager AsyncIOLoopKernelManager start_new_async_kernel ', 'lda_word': ' manager,kernel,async,file,connection,', 'lda_method': ' connectionfilemixin,asynckernelmanager,kernelmanager,asyncioloopkernelmanager,start_new_async_kernel,', 'lsi_word': ' kernel,manager,async,mixin,file,', 'lsi_method': ' asynckernelmanager,connectionfilemixin,kernelmanager,start_new_async_kernel,asyncioloopkernelmanager,', 'spm_method': ' ', 'text_summary': '', 'files_count': 2, 'files': ['manager.py', 'connect.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'322': 'start_new_async_kernel(manager.py)', '319': 'AsyncKernelManager(manager.py)', '320': 'KernelManager(manager.py)', '188': 'ConnectionFileMixin(connect.py)', '224': 'AsyncIOLoopKernelManager(manager.py)'}}, {'key': 2139, 'parent': 2362, 'tfidf_word': 'mixin io loop path real test connection file kernel manager ', 'tfidf_method': 'ConnectionFileMixin KernelManager IOLoopKernelManager test_connection_file_real_path ', 'lda_word': ' connection,kernel,file,manager,mixin,', 'lda_method': ' kernelmanager,connectionfilemixin,test_connection_file_real_path,ioloopkernelmanager,', 'lsi_word': ' file,connection,manager,kernel,mixin,', 'lsi_method': ' kernelmanager,connectionfilemixin,ioloopkernelmanager,test_connection_file_real_path,', 'spm_method': ' ', 'text_summary': 'Empty', 'files_count': 3, 'files': ['manager.py', 'connect.py', 'test_manager.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'225': 'IOLoopKernelManager(manager.py)', '320': 'KernelManager(manager.py)', '188': 'ConnectionFileMixin(connect.py)', '635': 'test_connection_file_real_path(test_manager.py)'}}, {'key': 2363, 'parent': 2732, 'tfidf_word': 'kernel parallel run start loop process thread tcp test lifecycle ', 'tfidf_method': '_run_lifecycle test_tcp_lifecycle tcp_lifecycle_with_loop test_start_parallel_process_kernels test_start_parallel_thread_kernels ', 'lda_word': ' test,lifecycle,parallel,tcp,run,', 'lda_method': ' test_start_parallel_thread_kernels,test_tcp_lifecycle,run_lifecycle,test_start_parallel_process_kernels,tcp_lifecycle_with_loop,', 'lsi_word': ' lifecycle,test,tcp,kernel,run,', 'lsi_method': ' run_lifecycle,test_tcp_lifecycle,tcp_lifecycle_with_loop,test_start_parallel_thread_kernels,test_start_parallel_process_kernels,', 'spm_method': ' ', 'text_summary': '', 'files_count': 1, 'files': ['test_multikernelmanager.py'], 'execution_path_count': 4, 'function_id_to_name_file': {'663': 'test_start_parallel_thread_kernels(test_multikernelmanager.py)', '658': 'tcp_lifecycle_with_loop(test_multikernelmanager.py)', '667': 'test_tcp_lifecycle(test_multikernelmanager.py)', '657': '_run_lifecycle(test_multikernelmanager.py)', '662': 'test_start_parallel_process_kernels(test_multikernelmanager.py)'}}, {'key': 2724, 'parent': 2732, 'tfidf_word': 'flush native permission name loop io cleanup code tunnel restarter ', 'tfidf_method': 'setUp extract_oname_v4 test_complete_reply test_complete_request test_display_data test_execute_reply test_execute_request test_kernel_info_reply __init__ reqrep ', 'lda_word': ' init,channel,kernel,shutdown,handle,', 'lda_method': ' execute,adapt,make_url,init,run_lifecycle,', 'lsi_word': ' kernel,test,start,adapt,loop,', 'lsi_method': ' start,setup,poll,setup_signals,shutdown,', 'spm_method': ' ', 'text_summary': "Subclasses may override  Prepares a kernel for startup in a separate process. Prepares a kernel for startup in a separate process. return ip for localhost (almost always 127.0.0.1)   Ensure that a sequence of kernel startups doesn't break anything. Return the connection info as a dict. Subclasses may override Start the polling of the kernel. Ensure that a sequence of kernel startups doesn't break anything. find a connection file, and return its absolute path. return ip for localhost (almost always 127.0.0.1)      find a connection file, and return its absolute path. tunnel connections to a kernel via ssh. For tests, create a file to indicate that we've started. handle kernel info reply. Get the hb channel object for this kernel. Send a raw message via ident path. Returns the id to associate with the kernel for this request. Make a blocking client connected to my kernel. Immediately processes all pending messages on this channel. Return the number of running kernels. Interrupts the kernel by sending it a signal. Create an ssh tunnel using command-line ssh that connects port lport. This is run in the ioloop thread when the kernel info reply is received. default function for packing datetime objects in JSON. Start the polling of the kernel. Send a shutdown request via control channel. test load_connection_file() after. Sends an interrupt event using the specified handle. test that messages receive unique ids. Forgets randomly assigned port numbers and cleans up the connection file.", 'files_count': 34, 'files': ['utils.py', 'client.py', 'test_session.py', 'session.py', 'forward.py', 'threaded.py', 'manager.py', 'test_multikernelmanager.py', 'multikernelmanager.py', 'restarter.py', 'signalkernel.py', 'connect.py', 'tunnel.py', 'test_connect.py', 'channels.py', 'kernelspecapp.py', 'kernelapp.py', 'managerabc.py', 'test_adapter.py', 'test_manager.py', 'kernelspec.py', 'test_jsonutil.py', 'jsonutil.py', 'test_kernelmanager.py', 'test_kernelspec.py', 'localinterfaces.py', 'adapter.py', 'test_kernelapp.py', 'test_client.py', 'win_interrupt.py', 'channelsabc.py', 'runapp.py', 'consoleapp.py', 'launcher.py'], 'execution_path_count': 271, 'function_id_to_name_file': {'704': 'execute(utils.py)', '155': 'execute(client.py)', '148': 'validate_string_dict(client.py)', '90': 'AsyncKernelClient(client.py)', '116': 'BlockingKernelClient(client.py)', '689': 'test_datetimes_msgpack(test_session.py)', '679': '_datetime_test(test_session.py)', '450': 'utcnow(session.py)', '688': 'test_datetimes(test_session.py)', '690': 'test_datetimes_pickle(test_session.py)', '492': 'handle(forward.py)', '734': 'send(threaded.py)', '738': 'thread_send(threaded.py)', '328': 'interrupt_kernel(manager.py)', '694': 'test_send(test_session.py)', '664': 'test_start_sequence_ipc_kernels(test_multikernelmanager.py)', '654': '_get_ipc_km(test_multikernelmanager.py)', '392': '__init__(multikernelmanager.py)', '660': 'test_ipc_lifecycle(test_multikernelmanager.py)', '659': 'test_ipc_cinfo(test_multikernelmanager.py)', '423': 'start_kernel(multikernelmanager.py)', '415': 'pre_start_kernel(multikernelmanager.py)', '380': 'DuplicateKernelError(multikernelmanager.py)', '414': 'new_kernel_id(multikernelmanager.py)', '389': 'start_kernel(multikernelmanager.py)', '238': 'start(restarter.py)', '430': 'poll(restarter.py)', '433': 'stop(restarter.py)', '428': '_fire_callbacks(restarter.py)', '510': 'do_execute(signalkernel.py)', '190': 'tunnel_to_kernel(connect.py)', '501': 'openssh_tunnel(tunnel.py)', '494': 'SSHException(tunnel.py)', '497': '_stop_tunnel(tunnel.py)', '479': 'recv(session.py)', '475': 'feed_identities(session.py)', '330': 'restart_kernel(manager.py)', '202': 'cleanup_random_ports(connect.py)', '200': 'cleanup_connection_file(connect.py)', '567': 'test_mixin_cleanup_random_ports(test_connect.py)', '106': 'ZMQSocketChannel(channels.py)', '109': 'close(channels.py)', '225': 'IOLoopKernelManager(manager.py)', '226': 'as_zmqstream(manager.py)', '233': 'wrapped(manager.py)', '224': 'AsyncIOLoopKernelManager(manager.py)', '568': 'test_mixin_record_random_ports(test_connect.py)', '557': 'DummyConfigurable(test_connect.py)', '188': 'ConnectionFileMixin(connect.py)', '235': 'IOLoopKernelRestarter(restarter.py)', '426': 'KernelRestarter(restarter.py)', '234': 'AsyncIOLoopKernelRestarter(restarter.py)', '291': 'start(kernelspecapp.py)', '251': 'start(kernelapp.py)', '249': 'setup_signals(kernelapp.py)', '252': 'shutdown_handler(kernelapp.py)', '250': 'shutdown(kernelapp.py)', '248': 'log_connection_info(kernelapp.py)', '199': 'blocking_client(connect.py)', '208': 'get_connection_info(connect.py)', '725': 'stop_channels(threaded.py)', '373': 'is_alive(managerabc.py)', '684': 'test_bad_unpack(test_session.py)', '676': '_bad_unpacker(test_session.py)', '536': 'test_complete_request(test_adapter.py)', '517': 'adapt(test_adapter.py)', '562': 'test_find_connection_file_local(test_connect.py)', '189': 'find_connection_file(connect.py)', '730': 'close(threaded.py)', '493': 'SubHander(forward.py)', '490': 'Handler(forward.py)', '635': 'test_connection_file_real_path(test_manager.py)', '253': 'KernelSpec(kernelspec.py)', '718': 'close(threaded.py)', '132': 'close(channels.py)', '114': 'send(channels.py)', '88': 'send(channels.py)', '83': 'close(channels.py)', '575': 'test_date_default(test_jsonutil.py)', '241': 'date_default(jsonutil.py)', '240': '_ensure_tzinfo(jsonutil.py)', '597': 'test_subclasses(test_kernelmanager.py)', '703': 'AsyncKernelManagerWithCleanup(utils.py)', '595': 'test_signal_kernel_subprocesses(test_kernelmanager.py)', '598': 'execute(test_kernelmanager.py)', '702': 'AsyncKernelManagerSubclass(utils.py)', '611': 'test_start_parallel_process_kernels(test_kernelmanager.py)', '591': 'transport(test_kernelmanager.py)', '606': 'test_templated_kspec_env(test_kernelmanager.py)', '599': '_env_test_body(test_kernelmanager.py)', '607': 'execute(test_kernelmanager.py)', '612': 'test_start_parallel_thread_kernels(test_kernelmanager.py)', '604': 'test_signal_kernel_subprocesses(test_kernelmanager.py)', '608': 'execute(test_kernelmanager.py)', '586': 'env(test_kernelmanager.py)', '712': 'stop(utils.py)', '711': 'start(utils.py)', '705': 'test_env(utils.py)', '630': 'test_validate_kernel_name(test_kernelspec.py)', '257': '_is_valid_kernel_name(kernelspec.py)', '506': 'SignalTestApp(signalkernel.py)', '507': 'SignalTestKernel(signalkernel.py)', '627': 'test_remove_kernel_spec(test_kernelspec.py)', '617': '_install_sample_kernel(test_kernelspec.py)', '626': 'test_kernel_spec_priority(test_kernelspec.py)', '651': 'test_tcp_cinfo(test_multikernelmanager.py)', '640': '_run_cinfo(test_multikernelmanager.py)', '621': 'test_find_all_specs(test_kernelspec.py)', '622': 'test_find_kernel_specs(test_kernelspec.py)', '623': 'test_get_kernel_spec(test_kernelspec.py)', '619': 'tearDown(test_kernelspec.py)', '618': 'setUp(test_kernelspec.py)', '649': 'test_start_sequence_ipc_kernels(test_multikernelmanager.py)', '641': '_run_lifecycle(test_multikernelmanager.py)', '650': 'test_start_sequence_tcp_kernels(test_multikernelmanager.py)', '644': 'test_ipc_cinfo(test_multikernelmanager.py)', '315': 'localhost(localinterfaces.py)', '645': 'test_ipc_lifecycle(test_multikernelmanager.py)', '665': 'test_start_sequence_tcp_kernels(test_multikernelmanager.py)', '657': '_run_lifecycle(test_multikernelmanager.py)', '656': '_run_cinfo(test_multikernelmanager.py)', '666': 'test_tcp_cinfo(test_multikernelmanager.py)', '668': 'test_tcp_lifecycle_with_kernel_id(test_multikernelmanager.py)', '569': 'test_secure_write(test_connect.py)', '573': 'check_user_only_permissions(test_connect.py)', '574': 'fetch_win32_permissions(test_connect.py)', '563': 'test_find_connection_file_relative(test_connect.py)', '561': 'test_find_connection_file_abspath(test_connect.py)', '560': 'test_find_connection_file(test_connect.py)', '565': 'test_load_connection_file_session_with_kn(test_connect.py)', '441': 'Session(session.py)', '539': 'test_input_request(test_adapter.py)', '564': 'test_load_connection_file_session(test_connect.py)', '537': 'test_display_data(test_adapter.py)', '540': 'test_inspect_reply(test_adapter.py)', '543': 'test_kernel_info_reply(test_adapter.py)', '542': 'test_inspect_request_token(test_adapter.py)', '535': 'test_complete_reply(test_adapter.py)', '541': 'test_inspect_request(test_adapter.py)', '538': 'test_execute_request(test_adapter.py)', '545': 'test_rename_type(test_adapter.py)', '544': 'test_no_adapt(test_adapter.py)', '546': 'test_same_version(test_adapter.py)', '514': 'V5toV4TestCase(test_adapter.py)', '512': 'AdapterTest(test_adapter.py)', '526': 'test_input_request(test_adapter.py)', '523': 'test_display_data(test_adapter.py)', '527': 'test_kernel_info_reply(test_adapter.py)', '530': 'test_object_info_reply_not_found(test_adapter.py)', '529': 'test_object_info_reply(test_adapter.py)', '531': 'test_object_info_request(test_adapter.py)', '521': 'test_complete_reply(test_adapter.py)', '522': 'test_complete_request(test_adapter.py)', '524': 'test_execute_reply(test_adapter.py)', '532': 'test_rename_type(test_adapter.py)', '525': 'test_execute_request(test_adapter.py)', '528': 'test_no_adapt(test_adapter.py)', '533': 'test_same_version(test_adapter.py)', '513': 'V4toV5TestCase(test_adapter.py)', '519': 'setUp(test_adapter.py)', '516': 'test_default_version(test_adapter.py)', '515': 'test_code_to_line_no_code(test_adapter.py)', '51': 'code_to_line(adapter.py)', '158': 'get_shell_msg(client.py)', '615': 'execute(test_kernelmanager.py)', '157': 'get_iopub_msg(client.py)', '710': '__exit__(utils.py)', '709': '__enter__(utils.py)', '580': 'test_kernelapp_lifecycle(test_kernelapp.py)', '579': '_launch(test_kernelapp.py)', '686': 'test_clone(test_session.py)', '473': 'clone(session.py)', '695': 'test_send_raw(test_session.py)', '481': 'send_raw(session.py)', '483': 'sign(session.py)', '683': 'test_bad_roundtrip(test_session.py)', '685': 'test_bad_unpacker(test_session.py)', '682': 'test_bad_packer(test_session.py)', '681': 'test_bad_pack(test_session.py)', '675': '_bad_packer(test_session.py)', '687': 'test_cull_digest_history(test_session.py)', '700': 'test_zero_digest_history(test_session.py)', '697': 'test_session_id(test_session.py)', '699': 'test_unique_msg_ids(test_session.py)', '445': 'msg_header(session.py)', '698': 'test_tracking(test_session.py)', '680': 'test_args(test_session.py)', '478': 'msg_id(session.py)', '696': 'test_serialize(test_session.py)', '674': 'TestSession(test_session.py)', '673': 'SessionTestCase(test_session.py)', '678': 'setUp(test_session.py)', '556': 'test_shutdown(test_client.py)', '548': '_check_reply(test_client.py)', '550': 'test_comm_info(test_client.py)', '555': 'test_kernel_info(test_client.py)', '551': 'test_complete(test_client.py)', '554': 'test_inspect(test_client.py)', '553': 'test_history(test_client.py)', '549': 'setUp(test_client.py)', '255': 'NoSuchKernel(kernelspec.py)', '117': 'reqrep(client.py)', '124': 'wrapped(client.py)', '123': 'wait_for_ready(client.py)', '150': '_handle_kernel_info_reply(client.py)', '125': 'HBChannel(channels.py)', '104': 'wait_for_ready(client.py)', '102': 'hb_channel(client.py)', '196': '_make_url(connect.py)', '91': 'reqrep(client.py)', '105': 'wrapped(client.py)', '80': 'ZMQSocketChannel(channels.py)', '154': 'control_channel(client.py)', '723': 'ioloop(threaded.py)', '160': 'hb_channel(client.py)', '171': 'stdin_channel(client.py)', '164': 'iopub_channel(client.py)', '168': 'shell_channel(client.py)', '740': 'send_interrupt(win_interrupt.py)', '334': '__del__(manager.py)', '293': 'start(kernelspecapp.py)', '294': 'path_key(kernelspecapp.py)', '735': 'start(threaded.py)', '720': 'start(threaded.py)', '141': 'start(channelsabc.py)', '432': 'start(restarter.py)', '288': 'start(kernelspecapp.py)', '89': 'start(channels.py)', '115': 'start(channels.py)', '290': 'start(kernelspecapp.py)', '438': 'parse_command_line(runapp.py)', '218': 'build_kernel_argv(consoleapp.py)', '308': '_only_once(localinterfaces.py)', '317': 'wrapped(localinterfaces.py)', '47': 'V4toV5(adapter.py)', '46': 'Adapter(adapter.py)', '77': 'object_info_request(adapter.py)', '52': 'extract_oname_v4(adapter.py)', '70': 'complete_request(adapter.py)', '75': 'kernel_info_reply(adapter.py)', '49': '_version_str_to_list(adapter.py)', '48': 'V5toV4(adapter.py)', '53': '__call__(adapter.py)', '54': 'handle_reply_status_error(adapter.py)', '57': 'update_msg_type(adapter.py)', '56': 'update_metadata(adapter.py)', '55': 'update_header(adapter.py)', '247': 'initialize(kernelapp.py)', '246': '_record_started(kernelapp.py)', '585': 'config(test_kernelmanager.py)', '262': 'install_native_kernel_spec(kernelspec.py)', '276': 'install_native_kernel_spec(kernelspec.py)', '265': 'to_json(kernelspec.py)', '264': 'to_dict(kernelspec.py)', '449': 'test_msg2obj(session.py)', '440': 'Message(session.py)', '453': '__init__(session.py)', '470': '_signature_scheme_changed(session.py)', '465': '_new_auth(session.py)', '463': '_key_default(session.py)', '447': 'new_id_bytes(session.py)', '462': '_key_changed(session.py)', '443': 'default_secure(session.py)', '469': '_session_default(session.py)', '446': 'new_id(session.py)', '412': 'is_alive(multikernelmanager.py)', '420': 'shutdown_all(multikernelmanager.py)', '413': 'list_kernel_ids(multikernelmanager.py)', '721': 'stop(threaded.py)', '140': 'is_alive(channelsabc.py)', '732': 'is_alive(threaded.py)', '112': 'is_alive(channels.py)', '86': 'is_alive(channels.py)', '724': 'start_channels(threaded.py)', '722': '_check_kernel_info_reply(threaded.py)', '716': '__init__(threaded.py)', '387': 'shutdown_kernel(multikernelmanager.py)', '416': 'remove_kernel(multikernelmanager.py)', '713': 'IOLoopThread(threaded.py)', '714': 'ThreadedKernelClient(threaded.py)', '715': 'ThreadedZMQSocketChannel(threaded.py)', '731': 'flush(threaded.py)', '727': '_flush(threaded.py)', '386': 'shutdown_all(multikernelmanager.py)', '418': 'request_shutdown(multikernelmanager.py)', '402': 'cleanup_resources(multikernelmanager.py)', '408': 'finish_shutdown(multikernelmanager.py)', '393': '__len__(multikernelmanager.py)', '421': 'shutdown_kernel(multikernelmanager.py)', '198': '_session_default(connect.py)', '298': 'launch_kernel(launcher.py)', '739': 'create_interrupt_event(win_interrupt.py)', '741': 'SECURITY_ATTRIBUTES(win_interrupt.py)', '215': '__init__(consoleapp.py)', '509': '__init__(signalkernel.py)', '278': '__init__(kernelspec.py)', '127': '__init__(channels.py)', '126': 'InvalidPortNumber(channels.py)', '107': '__init__(channels.py)', '81': '__init__(channels.py)', '726': '__init__(threaded.py)', '737': 'setup_stream(threaded.py)', '728': '_handle_recv(threaded.py)', '729': 'call_handlers(threaded.py)', '136': 'stop(channels.py)', '133': 'is_beating(channels.py)', '135': 'run(channels.py)', '145': 'time_to_dead(channelsabc.py)', '131': 'call_handlers(channels.py)', '130': '_poll(channels.py)'}}, {'key': 525, 'parent': 2127, 'tfidf_word': 'EP: 525, Name: AsyncKernelClient &rarr; KernelClient &rarr; ConnectionFileMixin', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 526, 'parent': 2127, 'tfidf_word': 'EP: 526, Name: AsyncKernelClient &rarr; KernelClient &rarr; ChannelABC', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 631, 'parent': 2141, 'tfidf_word': 'EP: 631, Name: BlockingKernelClient &rarr; KernelClient &rarr; ConnectionFileMixin', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 632, 'parent': 2141, 'tfidf_word': 'EP: 632, Name: BlockingKernelClient &rarr; KernelClient &rarr; ChannelABC', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 407, 'parent': 1893, 'tfidf_word': 'EP: 407, Name: start_new_async_kernel &rarr; AsyncKernelManager &rarr; KernelManager &rarr; ConnectionFileMixin', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 613, 'parent': 1893, 'tfidf_word': 'EP: 613, Name: AsyncIOLoopKernelManager &rarr; AsyncKernelManager &rarr; KernelManager &rarr; ConnectionFileMixin', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 603, 'parent': 2139, 'tfidf_word': 'EP: 603, Name: IOLoopKernelManager &rarr; KernelManager &rarr; ConnectionFileMixin', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1360, 'parent': 2139, 'tfidf_word': 'EP: 1360, Name: test_connection_file_real_path &rarr; KernelManager &rarr; ConnectionFileMixin', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1953, 'parent': 2363, 'tfidf_word': 'kernel loop parallel run start process thread tcp test lifecycle ', 'tfidf_method': '_run_lifecycle tcp_lifecycle_with_loop test_tcp_lifecycle test_start_parallel_process_kernels test_start_parallel_thread_kernels ', 'lda_word': ' lifecycle,test,tcp,kernel,run,', 'lda_method': ' run_lifecycle,tcp_lifecycle_with_loop,test_tcp_lifecycle,test_start_parallel_thread_kernels,test_start_parallel_process_kernels,', 'lsi_word': ' lifecycle,tcp,test,kernel,loop,', 'lsi_method': ' run_lifecycle,tcp_lifecycle_with_loop,test_tcp_lifecycle,test_start_parallel_process_kernels,test_start_parallel_thread_kernels,', 'spm_method': ' ', 'text_summary': '', 'files_count': 1, 'files': ['test_multikernelmanager.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'663': 'test_start_parallel_thread_kernels(test_multikernelmanager.py)', '658': 'tcp_lifecycle_with_loop(test_multikernelmanager.py)', '667': 'test_tcp_lifecycle(test_multikernelmanager.py)', '657': '_run_lifecycle(test_multikernelmanager.py)', '662': 'test_start_parallel_process_kernels(test_multikernelmanager.py)'}}, {'key': 2194, 'parent': 2363, 'tfidf_word': 'kernel parallel run start tcp process thread lifecycle test ', 'tfidf_method': '_run_lifecycle test_tcp_lifecycle test_start_parallel_process_kernels test_start_parallel_thread_kernels ', 'lda_word': ' test,lifecycle,parallel,kernel,tcp,', 'lda_method': ' test_tcp_lifecycle,test_start_parallel_thread_kernels,run_lifecycle,test_start_parallel_process_kernels,', 'lsi_word': ' lifecycle,test,kernel,start,parallel,', 'lsi_method': ' run_lifecycle,test_tcp_lifecycle,test_start_parallel_thread_kernels,test_start_parallel_process_kernels,', 'spm_method': ' ', 'text_summary': '', 'files_count': 1, 'files': ['test_multikernelmanager.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'663': 'test_start_parallel_thread_kernels(test_multikernelmanager.py)', '667': 'test_tcp_lifecycle(test_multikernelmanager.py)', '657': '_run_lifecycle(test_multikernelmanager.py)', '662': 'test_start_parallel_process_kernels(test_multikernelmanager.py)'}}, {'key': 2169, 'parent': 2724, 'tfidf_word': 'dict string validate client kernel execute async blocking ', 'tfidf_method': 'validate_string_dict execute BlockingKernelClient execute AsyncKernelClient ', 'lda_word': ' execute,validate,string,dict,client,', 'lda_method': ' validate_string_dict,blockingkernelclient,execute,asynckernelclient,', 'lsi_word': ' execute,dict,string,validate,kernel,', 'lsi_method': ' execute,validate_string_dict,asynckernelclient,blockingkernelclient,', 'spm_method': ' ', 'text_summary': '', 'files_count': 2, 'files': ['utils.py', 'client.py'], 'execution_path_count': 3, 'function_id_to_name_file': {'704': 'execute(utils.py)', '155': 'execute(client.py)', '148': 'validate_string_dict(client.py)', '90': 'AsyncKernelClient(client.py)', '116': 'BlockingKernelClient(client.py)'}}, {'key': 2723, 'parent': 2724, 'tfidf_word': 'native flush name permission cleanup loop io code tunnel restarter ', 'tfidf_method': 'setUp extract_oname_v4 test_complete_reply test_complete_request test_display_data test_execute_reply test_execute_request test_input_request __init__ reqrep ', 'lda_word': ' kernel,test,send,close,handle,', 'lda_method': ' start,init,blockingkernelclient,test_ipc_cinfo,zmqsocketchannel,', 'lsi_word': ' kernel,test,start,adapt,io,', 'lsi_method': ' start,setup,poll,shutdown,setup_signals,', 'spm_method': ' ', 'text_summary': "Subclasses may override  Prepares a kernel for startup in a separate process. Prepares a kernel for startup in a separate process. return ip for localhost (almost always 127.0.0.1)   Ensure that a sequence of kernel startups doesn't break anything. This method is called in the ioloop thread when a message arrives. Return a list of the kernel ids of the active kernels. Return the connection info as a dict. Subclasses may override Start the polling of the kernel. Ensure that a sequence of kernel startups doesn't break anything. find a connection file, and return its absolute path. return ip for localhost (almost always 127.0.0.1)      find a connection file, and return its absolute path. tunnel connections to a kernel via ssh. For tests, create a file to indicate that we've started. handle kernel info reply. Get the hb channel object for this kernel. Send a raw message via ident path. Returns the id to associate with the kernel for this request. Make a blocking client connected to my kernel. Immediately processes all pending messages on this channel. Return the number of running kernels. Interrupts the kernel by sending it a signal. Create an ssh tunnel using command-line ssh that connects port lport. This is run in the ioloop thread when the kernel info reply is received. default function for packing datetime objects in JSON. Start the polling of the kernel. Send a shutdown request via control channel. test load_connection_file() after. Sends an interrupt event using the specified handle. test that messages receive unique ids. Forgets randomly assigned port numbers and cleans up the connection file.", 'files_count': 34, 'files': ['test_session.py', 'session.py', 'forward.py', 'threaded.py', 'manager.py', 'test_multikernelmanager.py', 'multikernelmanager.py', 'restarter.py', 'signalkernel.py', 'connect.py', 'tunnel.py', 'test_connect.py', 'client.py', 'channels.py', 'kernelspecapp.py', 'kernelapp.py', 'managerabc.py', 'test_adapter.py', 'test_manager.py', 'kernelspec.py', 'test_jsonutil.py', 'jsonutil.py', 'test_kernelmanager.py', 'utils.py', 'test_kernelspec.py', 'localinterfaces.py', 'adapter.py', 'test_kernelapp.py', 'test_client.py', 'win_interrupt.py', 'channelsabc.py', 'runapp.py', 'consoleapp.py', 'launcher.py'], 'execution_path_count': 268, 'function_id_to_name_file': {'689': 'test_datetimes_msgpack(test_session.py)', '679': '_datetime_test(test_session.py)', '450': 'utcnow(session.py)', '688': 'test_datetimes(test_session.py)', '690': 'test_datetimes_pickle(test_session.py)', '492': 'handle(forward.py)', '734': 'send(threaded.py)', '738': 'thread_send(threaded.py)', '328': 'interrupt_kernel(manager.py)', '694': 'test_send(test_session.py)', '664': 'test_start_sequence_ipc_kernels(test_multikernelmanager.py)', '654': '_get_ipc_km(test_multikernelmanager.py)', '392': '__init__(multikernelmanager.py)', '660': 'test_ipc_lifecycle(test_multikernelmanager.py)', '659': 'test_ipc_cinfo(test_multikernelmanager.py)', '423': 'start_kernel(multikernelmanager.py)', '415': 'pre_start_kernel(multikernelmanager.py)', '380': 'DuplicateKernelError(multikernelmanager.py)', '414': 'new_kernel_id(multikernelmanager.py)', '389': 'start_kernel(multikernelmanager.py)', '238': 'start(restarter.py)', '430': 'poll(restarter.py)', '433': 'stop(restarter.py)', '428': '_fire_callbacks(restarter.py)', '510': 'do_execute(signalkernel.py)', '190': 'tunnel_to_kernel(connect.py)', '501': 'openssh_tunnel(tunnel.py)', '494': 'SSHException(tunnel.py)', '497': '_stop_tunnel(tunnel.py)', '479': 'recv(session.py)', '475': 'feed_identities(session.py)', '330': 'restart_kernel(manager.py)', '202': 'cleanup_random_ports(connect.py)', '200': 'cleanup_connection_file(connect.py)', '567': 'test_mixin_cleanup_random_ports(test_connect.py)', '90': 'AsyncKernelClient(client.py)', '106': 'ZMQSocketChannel(channels.py)', '109': 'close(channels.py)', '116': 'BlockingKernelClient(client.py)', '225': 'IOLoopKernelManager(manager.py)', '226': 'as_zmqstream(manager.py)', '233': 'wrapped(manager.py)', '224': 'AsyncIOLoopKernelManager(manager.py)', '568': 'test_mixin_record_random_ports(test_connect.py)', '557': 'DummyConfigurable(test_connect.py)', '188': 'ConnectionFileMixin(connect.py)', '235': 'IOLoopKernelRestarter(restarter.py)', '426': 'KernelRestarter(restarter.py)', '234': 'AsyncIOLoopKernelRestarter(restarter.py)', '291': 'start(kernelspecapp.py)', '251': 'start(kernelapp.py)', '249': 'setup_signals(kernelapp.py)', '252': 'shutdown_handler(kernelapp.py)', '250': 'shutdown(kernelapp.py)', '248': 'log_connection_info(kernelapp.py)', '199': 'blocking_client(connect.py)', '208': 'get_connection_info(connect.py)', '725': 'stop_channels(threaded.py)', '373': 'is_alive(managerabc.py)', '684': 'test_bad_unpack(test_session.py)', '676': '_bad_unpacker(test_session.py)', '536': 'test_complete_request(test_adapter.py)', '517': 'adapt(test_adapter.py)', '562': 'test_find_connection_file_local(test_connect.py)', '189': 'find_connection_file(connect.py)', '730': 'close(threaded.py)', '493': 'SubHander(forward.py)', '490': 'Handler(forward.py)', '635': 'test_connection_file_real_path(test_manager.py)', '253': 'KernelSpec(kernelspec.py)', '718': 'close(threaded.py)', '132': 'close(channels.py)', '114': 'send(channels.py)', '88': 'send(channels.py)', '83': 'close(channels.py)', '575': 'test_date_default(test_jsonutil.py)', '241': 'date_default(jsonutil.py)', '240': '_ensure_tzinfo(jsonutil.py)', '597': 'test_subclasses(test_kernelmanager.py)', '703': 'AsyncKernelManagerWithCleanup(utils.py)', '595': 'test_signal_kernel_subprocesses(test_kernelmanager.py)', '598': 'execute(test_kernelmanager.py)', '702': 'AsyncKernelManagerSubclass(utils.py)', '611': 'test_start_parallel_process_kernels(test_kernelmanager.py)', '591': 'transport(test_kernelmanager.py)', '606': 'test_templated_kspec_env(test_kernelmanager.py)', '599': '_env_test_body(test_kernelmanager.py)', '607': 'execute(test_kernelmanager.py)', '612': 'test_start_parallel_thread_kernels(test_kernelmanager.py)', '604': 'test_signal_kernel_subprocesses(test_kernelmanager.py)', '608': 'execute(test_kernelmanager.py)', '586': 'env(test_kernelmanager.py)', '712': 'stop(utils.py)', '711': 'start(utils.py)', '705': 'test_env(utils.py)', '630': 'test_validate_kernel_name(test_kernelspec.py)', '257': '_is_valid_kernel_name(kernelspec.py)', '506': 'SignalTestApp(signalkernel.py)', '507': 'SignalTestKernel(signalkernel.py)', '627': 'test_remove_kernel_spec(test_kernelspec.py)', '617': '_install_sample_kernel(test_kernelspec.py)', '626': 'test_kernel_spec_priority(test_kernelspec.py)', '651': 'test_tcp_cinfo(test_multikernelmanager.py)', '640': '_run_cinfo(test_multikernelmanager.py)', '621': 'test_find_all_specs(test_kernelspec.py)', '622': 'test_find_kernel_specs(test_kernelspec.py)', '623': 'test_get_kernel_spec(test_kernelspec.py)', '619': 'tearDown(test_kernelspec.py)', '618': 'setUp(test_kernelspec.py)', '649': 'test_start_sequence_ipc_kernels(test_multikernelmanager.py)', '641': '_run_lifecycle(test_multikernelmanager.py)', '650': 'test_start_sequence_tcp_kernels(test_multikernelmanager.py)', '644': 'test_ipc_cinfo(test_multikernelmanager.py)', '315': 'localhost(localinterfaces.py)', '645': 'test_ipc_lifecycle(test_multikernelmanager.py)', '665': 'test_start_sequence_tcp_kernels(test_multikernelmanager.py)', '657': '_run_lifecycle(test_multikernelmanager.py)', '656': '_run_cinfo(test_multikernelmanager.py)', '666': 'test_tcp_cinfo(test_multikernelmanager.py)', '668': 'test_tcp_lifecycle_with_kernel_id(test_multikernelmanager.py)', '569': 'test_secure_write(test_connect.py)', '573': 'check_user_only_permissions(test_connect.py)', '574': 'fetch_win32_permissions(test_connect.py)', '563': 'test_find_connection_file_relative(test_connect.py)', '561': 'test_find_connection_file_abspath(test_connect.py)', '560': 'test_find_connection_file(test_connect.py)', '565': 'test_load_connection_file_session_with_kn(test_connect.py)', '441': 'Session(session.py)', '539': 'test_input_request(test_adapter.py)', '564': 'test_load_connection_file_session(test_connect.py)', '537': 'test_display_data(test_adapter.py)', '540': 'test_inspect_reply(test_adapter.py)', '543': 'test_kernel_info_reply(test_adapter.py)', '542': 'test_inspect_request_token(test_adapter.py)', '535': 'test_complete_reply(test_adapter.py)', '541': 'test_inspect_request(test_adapter.py)', '538': 'test_execute_request(test_adapter.py)', '545': 'test_rename_type(test_adapter.py)', '544': 'test_no_adapt(test_adapter.py)', '546': 'test_same_version(test_adapter.py)', '514': 'V5toV4TestCase(test_adapter.py)', '512': 'AdapterTest(test_adapter.py)', '526': 'test_input_request(test_adapter.py)', '523': 'test_display_data(test_adapter.py)', '527': 'test_kernel_info_reply(test_adapter.py)', '530': 'test_object_info_reply_not_found(test_adapter.py)', '529': 'test_object_info_reply(test_adapter.py)', '531': 'test_object_info_request(test_adapter.py)', '521': 'test_complete_reply(test_adapter.py)', '522': 'test_complete_request(test_adapter.py)', '524': 'test_execute_reply(test_adapter.py)', '532': 'test_rename_type(test_adapter.py)', '525': 'test_execute_request(test_adapter.py)', '528': 'test_no_adapt(test_adapter.py)', '533': 'test_same_version(test_adapter.py)', '513': 'V4toV5TestCase(test_adapter.py)', '519': 'setUp(test_adapter.py)', '516': 'test_default_version(test_adapter.py)', '515': 'test_code_to_line_no_code(test_adapter.py)', '51': 'code_to_line(adapter.py)', '704': 'execute(utils.py)', '158': 'get_shell_msg(client.py)', '615': 'execute(test_kernelmanager.py)', '157': 'get_iopub_msg(client.py)', '710': '__exit__(utils.py)', '709': '__enter__(utils.py)', '580': 'test_kernelapp_lifecycle(test_kernelapp.py)', '579': '_launch(test_kernelapp.py)', '686': 'test_clone(test_session.py)', '473': 'clone(session.py)', '695': 'test_send_raw(test_session.py)', '481': 'send_raw(session.py)', '483': 'sign(session.py)', '683': 'test_bad_roundtrip(test_session.py)', '685': 'test_bad_unpacker(test_session.py)', '682': 'test_bad_packer(test_session.py)', '681': 'test_bad_pack(test_session.py)', '675': '_bad_packer(test_session.py)', '687': 'test_cull_digest_history(test_session.py)', '700': 'test_zero_digest_history(test_session.py)', '697': 'test_session_id(test_session.py)', '699': 'test_unique_msg_ids(test_session.py)', '445': 'msg_header(session.py)', '698': 'test_tracking(test_session.py)', '680': 'test_args(test_session.py)', '478': 'msg_id(session.py)', '696': 'test_serialize(test_session.py)', '674': 'TestSession(test_session.py)', '673': 'SessionTestCase(test_session.py)', '678': 'setUp(test_session.py)', '556': 'test_shutdown(test_client.py)', '548': '_check_reply(test_client.py)', '550': 'test_comm_info(test_client.py)', '555': 'test_kernel_info(test_client.py)', '551': 'test_complete(test_client.py)', '554': 'test_inspect(test_client.py)', '553': 'test_history(test_client.py)', '549': 'setUp(test_client.py)', '255': 'NoSuchKernel(kernelspec.py)', '117': 'reqrep(client.py)', '124': 'wrapped(client.py)', '123': 'wait_for_ready(client.py)', '150': '_handle_kernel_info_reply(client.py)', '125': 'HBChannel(channels.py)', '104': 'wait_for_ready(client.py)', '102': 'hb_channel(client.py)', '196': '_make_url(connect.py)', '91': 'reqrep(client.py)', '105': 'wrapped(client.py)', '80': 'ZMQSocketChannel(channels.py)', '154': 'control_channel(client.py)', '723': 'ioloop(threaded.py)', '160': 'hb_channel(client.py)', '171': 'stdin_channel(client.py)', '164': 'iopub_channel(client.py)', '168': 'shell_channel(client.py)', '740': 'send_interrupt(win_interrupt.py)', '334': '__del__(manager.py)', '293': 'start(kernelspecapp.py)', '294': 'path_key(kernelspecapp.py)', '735': 'start(threaded.py)', '720': 'start(threaded.py)', '141': 'start(channelsabc.py)', '432': 'start(restarter.py)', '288': 'start(kernelspecapp.py)', '89': 'start(channels.py)', '115': 'start(channels.py)', '290': 'start(kernelspecapp.py)', '438': 'parse_command_line(runapp.py)', '218': 'build_kernel_argv(consoleapp.py)', '308': '_only_once(localinterfaces.py)', '317': 'wrapped(localinterfaces.py)', '47': 'V4toV5(adapter.py)', '46': 'Adapter(adapter.py)', '77': 'object_info_request(adapter.py)', '52': 'extract_oname_v4(adapter.py)', '70': 'complete_request(adapter.py)', '75': 'kernel_info_reply(adapter.py)', '49': '_version_str_to_list(adapter.py)', '48': 'V5toV4(adapter.py)', '53': '__call__(adapter.py)', '54': 'handle_reply_status_error(adapter.py)', '57': 'update_msg_type(adapter.py)', '56': 'update_metadata(adapter.py)', '55': 'update_header(adapter.py)', '247': 'initialize(kernelapp.py)', '246': '_record_started(kernelapp.py)', '585': 'config(test_kernelmanager.py)', '262': 'install_native_kernel_spec(kernelspec.py)', '276': 'install_native_kernel_spec(kernelspec.py)', '265': 'to_json(kernelspec.py)', '264': 'to_dict(kernelspec.py)', '449': 'test_msg2obj(session.py)', '440': 'Message(session.py)', '453': '__init__(session.py)', '470': '_signature_scheme_changed(session.py)', '465': '_new_auth(session.py)', '463': '_key_default(session.py)', '447': 'new_id_bytes(session.py)', '462': '_key_changed(session.py)', '443': 'default_secure(session.py)', '469': '_session_default(session.py)', '446': 'new_id(session.py)', '412': 'is_alive(multikernelmanager.py)', '420': 'shutdown_all(multikernelmanager.py)', '413': 'list_kernel_ids(multikernelmanager.py)', '721': 'stop(threaded.py)', '140': 'is_alive(channelsabc.py)', '732': 'is_alive(threaded.py)', '112': 'is_alive(channels.py)', '86': 'is_alive(channels.py)', '724': 'start_channels(threaded.py)', '722': '_check_kernel_info_reply(threaded.py)', '716': '__init__(threaded.py)', '387': 'shutdown_kernel(multikernelmanager.py)', '416': 'remove_kernel(multikernelmanager.py)', '713': 'IOLoopThread(threaded.py)', '714': 'ThreadedKernelClient(threaded.py)', '715': 'ThreadedZMQSocketChannel(threaded.py)', '731': 'flush(threaded.py)', '727': '_flush(threaded.py)', '386': 'shutdown_all(multikernelmanager.py)', '418': 'request_shutdown(multikernelmanager.py)', '402': 'cleanup_resources(multikernelmanager.py)', '408': 'finish_shutdown(multikernelmanager.py)', '393': '__len__(multikernelmanager.py)', '421': 'shutdown_kernel(multikernelmanager.py)', '198': '_session_default(connect.py)', '298': 'launch_kernel(launcher.py)', '739': 'create_interrupt_event(win_interrupt.py)', '741': 'SECURITY_ATTRIBUTES(win_interrupt.py)', '215': '__init__(consoleapp.py)', '509': '__init__(signalkernel.py)', '278': '__init__(kernelspec.py)', '127': '__init__(channels.py)', '126': 'InvalidPortNumber(channels.py)', '107': '__init__(channels.py)', '81': '__init__(channels.py)', '726': '__init__(threaded.py)', '737': 'setup_stream(threaded.py)', '728': '_handle_recv(threaded.py)', '729': 'call_handlers(threaded.py)', '136': 'stop(channels.py)', '133': 'is_beating(channels.py)', '135': 'run(channels.py)', '145': 'time_to_dead(channelsabc.py)', '131': 'call_handlers(channels.py)', '130': '_poll(channels.py)'}}, {'key': 1166, 'parent': 1953, 'tfidf_word': 'EP: 1166, Name: test_start_parallel_thread_kernels &rarr; tcp_lifecycle_with_loop &rarr; test_tcp_lifecycle &rarr; _run_lifecycle', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1174, 'parent': 1953, 'tfidf_word': 'EP: 1174, Name: test_start_parallel_process_kernels &rarr; tcp_lifecycle_with_loop &rarr; test_tcp_lifecycle &rarr; _run_lifecycle', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1162, 'parent': 2194, 'tfidf_word': 'EP: 1162, Name: test_start_parallel_thread_kernels &rarr; test_tcp_lifecycle &rarr; _run_lifecycle', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1170, 'parent': 2194, 'tfidf_word': 'EP: 1170, Name: test_start_parallel_process_kernels &rarr; test_tcp_lifecycle &rarr; _run_lifecycle', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 901, 'parent': 2169, 'tfidf_word': 'EP: 901, Name: execute &rarr; execute &rarr; validate_string_dict', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2128, 'parent': 2169, 'tfidf_word': 'client dict execute kernel string validate async blocking ', 'tfidf_method': 'validate_string_dict execute BlockingKernelClient AsyncKernelClient ', 'lda_word': ' execute,dict,string,validate,kernel,', 'lda_method': ' execute,validate_string_dict,asynckernelclient,blockingkernelclient,', 'lsi_word': ' dict,kernel,validate,execute,string,', 'lsi_method': ' execute,validate_string_dict,asynckernelclient,blockingkernelclient,', 'spm_method': ' ', 'text_summary': '', 'files_count': 1, 'files': ['client.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'90': 'AsyncKernelClient(client.py)', '155': 'execute(client.py)', '148': 'validate_string_dict(client.py)', '116': 'BlockingKernelClient(client.py)'}}, {'key': 2162, 'parent': 2723, 'tfidf_word': 'datetime datetimes utcnow test msgpack pickle ', 'tfidf_method': 'utcnow _datetime_test test_datetimes test_datetimes_msgpack test_datetimes_pickle ', 'lda_word': ' test,datetimes,utcnow,datetime,pickle,', 'lda_method': ' datetime_test,utcnow,test_datetimes_msgpack,test_datetimes,test_datetimes_pickle,', 'lsi_word': ' test,utcnow,datetimes,datetime,pickle,', 'lsi_method': ' datetime_test,utcnow,test_datetimes_pickle,test_datetimes_msgpack,test_datetimes,', 'spm_method': ' ', 'text_summary': '', 'files_count': 2, 'files': ['test_session.py', 'session.py'], 'execution_path_count': 3, 'function_id_to_name_file': {'689': 'test_datetimes_msgpack(test_session.py)', '679': '_datetime_test(test_session.py)', '450': 'utcnow(session.py)', '688': 'test_datetimes(test_session.py)', '690': 'test_datetimes_pickle(test_session.py)'}}, {'key': 2722, 'parent': 2723, 'tfidf_word': 'name native permission flush cleanup loop io code tunnel restarter ', 'tfidf_method': 'setUp extract_oname_v4 test_complete_reply test_complete_request test_display_data test_execute_reply test_execute_request test_input_request __init__ reqrep ', 'lda_word': ' connection,test,file,session,find,', 'lda_method': ' execute,install_sample_kernel,setup,shutdown_all,call,', 'lsi_word': ' kernel,test,start,io,loop,', 'lsi_method': ' start,setup,poll,shutdown,shutdown_handler,', 'spm_method': ' ', 'text_summary': "Subclasses may override  Prepares a kernel for startup in a separate process. Prepares a kernel for startup in a separate process. return ip for localhost (almost always 127.0.0.1)   Ensure that a sequence of kernel startups doesn't break anything. Return a list of the kernel ids of the active kernels. Return the connection info as a dict. Subclasses may override Start the polling of the kernel. Ensure that a sequence of kernel startups doesn't break anything. find a connection file, and return its absolute path. return ip for localhost (almost always 127.0.0.1)      find a connection file, and return its absolute path. tunnel connections to a kernel via ssh. For tests, create a file to indicate that we've started. handle kernel info reply. Get the hb channel object for this kernel. Send a raw message via ident path. Returns the id to associate with the kernel for this request. Make a blocking client connected to my kernel. Immediately processes all pending messages on this channel. Return the number of running kernels. Interrupts the kernel by sending it a signal. Create an ssh tunnel using command-line ssh that connects port lport. This is run in the ioloop thread when the kernel info reply is received. default function for packing datetime objects in JSON. Start the polling of the kernel. Send a shutdown request via control channel. test load_connection_file() after. Sends an interrupt event using the specified handle. test that messages receive unique ids. Forgets randomly assigned port numbers and cleans up the connection file.", 'files_count': 34, 'files': ['forward.py', 'threaded.py', 'manager.py', 'test_session.py', 'test_multikernelmanager.py', 'multikernelmanager.py', 'restarter.py', 'signalkernel.py', 'connect.py', 'tunnel.py', 'session.py', 'test_connect.py', 'client.py', 'channels.py', 'kernelspecapp.py', 'kernelapp.py', 'managerabc.py', 'test_adapter.py', 'test_manager.py', 'kernelspec.py', 'test_jsonutil.py', 'jsonutil.py', 'test_kernelmanager.py', 'utils.py', 'test_kernelspec.py', 'localinterfaces.py', 'adapter.py', 'test_kernelapp.py', 'test_client.py', 'win_interrupt.py', 'channelsabc.py', 'runapp.py', 'consoleapp.py', 'launcher.py'], 'execution_path_count': 265, 'function_id_to_name_file': {'492': 'handle(forward.py)', '734': 'send(threaded.py)', '738': 'thread_send(threaded.py)', '328': 'interrupt_kernel(manager.py)', '694': 'test_send(test_session.py)', '664': 'test_start_sequence_ipc_kernels(test_multikernelmanager.py)', '654': '_get_ipc_km(test_multikernelmanager.py)', '392': '__init__(multikernelmanager.py)', '660': 'test_ipc_lifecycle(test_multikernelmanager.py)', '659': 'test_ipc_cinfo(test_multikernelmanager.py)', '423': 'start_kernel(multikernelmanager.py)', '415': 'pre_start_kernel(multikernelmanager.py)', '380': 'DuplicateKernelError(multikernelmanager.py)', '414': 'new_kernel_id(multikernelmanager.py)', '389': 'start_kernel(multikernelmanager.py)', '238': 'start(restarter.py)', '430': 'poll(restarter.py)', '433': 'stop(restarter.py)', '428': '_fire_callbacks(restarter.py)', '510': 'do_execute(signalkernel.py)', '190': 'tunnel_to_kernel(connect.py)', '501': 'openssh_tunnel(tunnel.py)', '494': 'SSHException(tunnel.py)', '497': '_stop_tunnel(tunnel.py)', '479': 'recv(session.py)', '475': 'feed_identities(session.py)', '330': 'restart_kernel(manager.py)', '202': 'cleanup_random_ports(connect.py)', '200': 'cleanup_connection_file(connect.py)', '567': 'test_mixin_cleanup_random_ports(test_connect.py)', '90': 'AsyncKernelClient(client.py)', '106': 'ZMQSocketChannel(channels.py)', '109': 'close(channels.py)', '116': 'BlockingKernelClient(client.py)', '225': 'IOLoopKernelManager(manager.py)', '226': 'as_zmqstream(manager.py)', '233': 'wrapped(manager.py)', '224': 'AsyncIOLoopKernelManager(manager.py)', '568': 'test_mixin_record_random_ports(test_connect.py)', '557': 'DummyConfigurable(test_connect.py)', '188': 'ConnectionFileMixin(connect.py)', '235': 'IOLoopKernelRestarter(restarter.py)', '426': 'KernelRestarter(restarter.py)', '234': 'AsyncIOLoopKernelRestarter(restarter.py)', '291': 'start(kernelspecapp.py)', '251': 'start(kernelapp.py)', '249': 'setup_signals(kernelapp.py)', '252': 'shutdown_handler(kernelapp.py)', '250': 'shutdown(kernelapp.py)', '248': 'log_connection_info(kernelapp.py)', '199': 'blocking_client(connect.py)', '208': 'get_connection_info(connect.py)', '725': 'stop_channels(threaded.py)', '373': 'is_alive(managerabc.py)', '684': 'test_bad_unpack(test_session.py)', '676': '_bad_unpacker(test_session.py)', '536': 'test_complete_request(test_adapter.py)', '517': 'adapt(test_adapter.py)', '562': 'test_find_connection_file_local(test_connect.py)', '189': 'find_connection_file(connect.py)', '730': 'close(threaded.py)', '493': 'SubHander(forward.py)', '490': 'Handler(forward.py)', '635': 'test_connection_file_real_path(test_manager.py)', '253': 'KernelSpec(kernelspec.py)', '718': 'close(threaded.py)', '132': 'close(channels.py)', '114': 'send(channels.py)', '88': 'send(channels.py)', '83': 'close(channels.py)', '575': 'test_date_default(test_jsonutil.py)', '450': 'utcnow(session.py)', '241': 'date_default(jsonutil.py)', '240': '_ensure_tzinfo(jsonutil.py)', '597': 'test_subclasses(test_kernelmanager.py)', '703': 'AsyncKernelManagerWithCleanup(utils.py)', '595': 'test_signal_kernel_subprocesses(test_kernelmanager.py)', '598': 'execute(test_kernelmanager.py)', '702': 'AsyncKernelManagerSubclass(utils.py)', '611': 'test_start_parallel_process_kernels(test_kernelmanager.py)', '591': 'transport(test_kernelmanager.py)', '606': 'test_templated_kspec_env(test_kernelmanager.py)', '599': '_env_test_body(test_kernelmanager.py)', '607': 'execute(test_kernelmanager.py)', '612': 'test_start_parallel_thread_kernels(test_kernelmanager.py)', '604': 'test_signal_kernel_subprocesses(test_kernelmanager.py)', '608': 'execute(test_kernelmanager.py)', '586': 'env(test_kernelmanager.py)', '712': 'stop(utils.py)', '711': 'start(utils.py)', '705': 'test_env(utils.py)', '630': 'test_validate_kernel_name(test_kernelspec.py)', '257': '_is_valid_kernel_name(kernelspec.py)', '506': 'SignalTestApp(signalkernel.py)', '507': 'SignalTestKernel(signalkernel.py)', '627': 'test_remove_kernel_spec(test_kernelspec.py)', '617': '_install_sample_kernel(test_kernelspec.py)', '626': 'test_kernel_spec_priority(test_kernelspec.py)', '651': 'test_tcp_cinfo(test_multikernelmanager.py)', '640': '_run_cinfo(test_multikernelmanager.py)', '621': 'test_find_all_specs(test_kernelspec.py)', '622': 'test_find_kernel_specs(test_kernelspec.py)', '623': 'test_get_kernel_spec(test_kernelspec.py)', '619': 'tearDown(test_kernelspec.py)', '618': 'setUp(test_kernelspec.py)', '649': 'test_start_sequence_ipc_kernels(test_multikernelmanager.py)', '641': '_run_lifecycle(test_multikernelmanager.py)', '650': 'test_start_sequence_tcp_kernels(test_multikernelmanager.py)', '644': 'test_ipc_cinfo(test_multikernelmanager.py)', '315': 'localhost(localinterfaces.py)', '645': 'test_ipc_lifecycle(test_multikernelmanager.py)', '665': 'test_start_sequence_tcp_kernels(test_multikernelmanager.py)', '657': '_run_lifecycle(test_multikernelmanager.py)', '656': '_run_cinfo(test_multikernelmanager.py)', '666': 'test_tcp_cinfo(test_multikernelmanager.py)', '668': 'test_tcp_lifecycle_with_kernel_id(test_multikernelmanager.py)', '569': 'test_secure_write(test_connect.py)', '573': 'check_user_only_permissions(test_connect.py)', '574': 'fetch_win32_permissions(test_connect.py)', '563': 'test_find_connection_file_relative(test_connect.py)', '561': 'test_find_connection_file_abspath(test_connect.py)', '560': 'test_find_connection_file(test_connect.py)', '565': 'test_load_connection_file_session_with_kn(test_connect.py)', '441': 'Session(session.py)', '539': 'test_input_request(test_adapter.py)', '564': 'test_load_connection_file_session(test_connect.py)', '537': 'test_display_data(test_adapter.py)', '540': 'test_inspect_reply(test_adapter.py)', '543': 'test_kernel_info_reply(test_adapter.py)', '542': 'test_inspect_request_token(test_adapter.py)', '535': 'test_complete_reply(test_adapter.py)', '541': 'test_inspect_request(test_adapter.py)', '538': 'test_execute_request(test_adapter.py)', '545': 'test_rename_type(test_adapter.py)', '544': 'test_no_adapt(test_adapter.py)', '546': 'test_same_version(test_adapter.py)', '514': 'V5toV4TestCase(test_adapter.py)', '512': 'AdapterTest(test_adapter.py)', '526': 'test_input_request(test_adapter.py)', '523': 'test_display_data(test_adapter.py)', '527': 'test_kernel_info_reply(test_adapter.py)', '530': 'test_object_info_reply_not_found(test_adapter.py)', '529': 'test_object_info_reply(test_adapter.py)', '531': 'test_object_info_request(test_adapter.py)', '521': 'test_complete_reply(test_adapter.py)', '522': 'test_complete_request(test_adapter.py)', '524': 'test_execute_reply(test_adapter.py)', '532': 'test_rename_type(test_adapter.py)', '525': 'test_execute_request(test_adapter.py)', '528': 'test_no_adapt(test_adapter.py)', '533': 'test_same_version(test_adapter.py)', '513': 'V4toV5TestCase(test_adapter.py)', '519': 'setUp(test_adapter.py)', '516': 'test_default_version(test_adapter.py)', '515': 'test_code_to_line_no_code(test_adapter.py)', '51': 'code_to_line(adapter.py)', '704': 'execute(utils.py)', '158': 'get_shell_msg(client.py)', '615': 'execute(test_kernelmanager.py)', '157': 'get_iopub_msg(client.py)', '710': '__exit__(utils.py)', '709': '__enter__(utils.py)', '580': 'test_kernelapp_lifecycle(test_kernelapp.py)', '579': '_launch(test_kernelapp.py)', '686': 'test_clone(test_session.py)', '473': 'clone(session.py)', '695': 'test_send_raw(test_session.py)', '481': 'send_raw(session.py)', '483': 'sign(session.py)', '689': 'test_datetimes_msgpack(test_session.py)', '690': 'test_datetimes_pickle(test_session.py)', '688': 'test_datetimes(test_session.py)', '683': 'test_bad_roundtrip(test_session.py)', '685': 'test_bad_unpacker(test_session.py)', '682': 'test_bad_packer(test_session.py)', '681': 'test_bad_pack(test_session.py)', '675': '_bad_packer(test_session.py)', '687': 'test_cull_digest_history(test_session.py)', '700': 'test_zero_digest_history(test_session.py)', '697': 'test_session_id(test_session.py)', '699': 'test_unique_msg_ids(test_session.py)', '445': 'msg_header(session.py)', '698': 'test_tracking(test_session.py)', '680': 'test_args(test_session.py)', '478': 'msg_id(session.py)', '696': 'test_serialize(test_session.py)', '674': 'TestSession(test_session.py)', '673': 'SessionTestCase(test_session.py)', '678': 'setUp(test_session.py)', '556': 'test_shutdown(test_client.py)', '548': '_check_reply(test_client.py)', '550': 'test_comm_info(test_client.py)', '555': 'test_kernel_info(test_client.py)', '551': 'test_complete(test_client.py)', '554': 'test_inspect(test_client.py)', '553': 'test_history(test_client.py)', '549': 'setUp(test_client.py)', '255': 'NoSuchKernel(kernelspec.py)', '117': 'reqrep(client.py)', '124': 'wrapped(client.py)', '123': 'wait_for_ready(client.py)', '150': '_handle_kernel_info_reply(client.py)', '125': 'HBChannel(channels.py)', '104': 'wait_for_ready(client.py)', '102': 'hb_channel(client.py)', '196': '_make_url(connect.py)', '91': 'reqrep(client.py)', '105': 'wrapped(client.py)', '80': 'ZMQSocketChannel(channels.py)', '154': 'control_channel(client.py)', '723': 'ioloop(threaded.py)', '160': 'hb_channel(client.py)', '171': 'stdin_channel(client.py)', '164': 'iopub_channel(client.py)', '168': 'shell_channel(client.py)', '740': 'send_interrupt(win_interrupt.py)', '334': '__del__(manager.py)', '293': 'start(kernelspecapp.py)', '294': 'path_key(kernelspecapp.py)', '735': 'start(threaded.py)', '720': 'start(threaded.py)', '141': 'start(channelsabc.py)', '432': 'start(restarter.py)', '288': 'start(kernelspecapp.py)', '89': 'start(channels.py)', '115': 'start(channels.py)', '290': 'start(kernelspecapp.py)', '438': 'parse_command_line(runapp.py)', '218': 'build_kernel_argv(consoleapp.py)', '308': '_only_once(localinterfaces.py)', '317': 'wrapped(localinterfaces.py)', '47': 'V4toV5(adapter.py)', '46': 'Adapter(adapter.py)', '77': 'object_info_request(adapter.py)', '52': 'extract_oname_v4(adapter.py)', '70': 'complete_request(adapter.py)', '75': 'kernel_info_reply(adapter.py)', '49': '_version_str_to_list(adapter.py)', '48': 'V5toV4(adapter.py)', '53': '__call__(adapter.py)', '54': 'handle_reply_status_error(adapter.py)', '57': 'update_msg_type(adapter.py)', '56': 'update_metadata(adapter.py)', '55': 'update_header(adapter.py)', '247': 'initialize(kernelapp.py)', '246': '_record_started(kernelapp.py)', '585': 'config(test_kernelmanager.py)', '262': 'install_native_kernel_spec(kernelspec.py)', '276': 'install_native_kernel_spec(kernelspec.py)', '265': 'to_json(kernelspec.py)', '264': 'to_dict(kernelspec.py)', '449': 'test_msg2obj(session.py)', '440': 'Message(session.py)', '453': '__init__(session.py)', '470': '_signature_scheme_changed(session.py)', '465': '_new_auth(session.py)', '463': '_key_default(session.py)', '447': 'new_id_bytes(session.py)', '462': '_key_changed(session.py)', '443': 'default_secure(session.py)', '469': '_session_default(session.py)', '446': 'new_id(session.py)', '412': 'is_alive(multikernelmanager.py)', '420': 'shutdown_all(multikernelmanager.py)', '413': 'list_kernel_ids(multikernelmanager.py)', '721': 'stop(threaded.py)', '140': 'is_alive(channelsabc.py)', '732': 'is_alive(threaded.py)', '112': 'is_alive(channels.py)', '86': 'is_alive(channels.py)', '724': 'start_channels(threaded.py)', '722': '_check_kernel_info_reply(threaded.py)', '716': '__init__(threaded.py)', '387': 'shutdown_kernel(multikernelmanager.py)', '416': 'remove_kernel(multikernelmanager.py)', '713': 'IOLoopThread(threaded.py)', '714': 'ThreadedKernelClient(threaded.py)', '715': 'ThreadedZMQSocketChannel(threaded.py)', '731': 'flush(threaded.py)', '727': '_flush(threaded.py)', '386': 'shutdown_all(multikernelmanager.py)', '418': 'request_shutdown(multikernelmanager.py)', '402': 'cleanup_resources(multikernelmanager.py)', '408': 'finish_shutdown(multikernelmanager.py)', '393': '__len__(multikernelmanager.py)', '421': 'shutdown_kernel(multikernelmanager.py)', '198': '_session_default(connect.py)', '298': 'launch_kernel(launcher.py)', '739': 'create_interrupt_event(win_interrupt.py)', '741': 'SECURITY_ATTRIBUTES(win_interrupt.py)', '215': '__init__(consoleapp.py)', '509': '__init__(signalkernel.py)', '278': '__init__(kernelspec.py)', '127': '__init__(channels.py)', '126': 'InvalidPortNumber(channels.py)', '107': '__init__(channels.py)', '81': '__init__(channels.py)', '726': '__init__(threaded.py)', '737': 'setup_stream(threaded.py)', '728': '_handle_recv(threaded.py)', '729': 'call_handlers(threaded.py)', '136': 'stop(channels.py)', '133': 'is_beating(channels.py)', '135': 'run(channels.py)', '145': 'time_to_dead(channelsabc.py)', '131': 'call_handlers(channels.py)', '130': '_poll(channels.py)'}}, {'key': 578, 'parent': 2128, 'tfidf_word': 'EP: 578, Name: AsyncKernelClient &rarr; execute &rarr; validate_string_dict', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 693, 'parent': 2128, 'tfidf_word': 'EP: 693, Name: BlockingKernelClient &rarr; execute &rarr; validate_string_dict', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 851, 'parent': 2162, 'tfidf_word': 'EP: 851, Name: test_datetimes_msgpack &rarr; _datetime_test &rarr; utcnow', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2161, 'parent': 2162, 'tfidf_word': 'datetime datetimes utcnow pickle test ', 'tfidf_method': 'utcnow _datetime_test test_datetimes test_datetimes_pickle ', 'lda_word': ' test,datetimes,utcnow,datetime,pickle,', 'lda_method': ' utcnow,test_datetimes,datetime_test,test_datetimes_pickle,', 'lsi_word': ' test,datetimes,datetime,utcnow,pickle,', 'lsi_method': ' datetime_test,utcnow,test_datetimes,test_datetimes_pickle,', 'spm_method': ' ', 'text_summary': '', 'files_count': 2, 'files': ['test_session.py', 'session.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'688': 'test_datetimes(test_session.py)', '679': '_datetime_test(test_session.py)', '450': 'utcnow(session.py)', '690': 'test_datetimes_pickle(test_session.py)'}}, {'key': 2222, 'parent': 2722, 'tfidf_word': 'thread handle interrupt kernel test send ', 'tfidf_method': 'send thread_send interrupt_kernel handle test_send ', 'lda_word': ' send,thread,kernel,interrupt,test,', 'lda_method': ' thread_send,send,handle,interrupt_kernel,test_send,', 'lsi_word': ' send,thread,test,kernel,interrupt,', 'lsi_method': ' send,thread_send,handle,interrupt_kernel,test_send,', 'spm_method': ' ', 'text_summary': '', 'files_count': 4, 'files': ['forward.py', 'threaded.py', 'manager.py', 'test_session.py'], 'execution_path_count': 3, 'function_id_to_name_file': {'492': 'handle(forward.py)', '734': 'send(threaded.py)', '738': 'thread_send(threaded.py)', '328': 'interrupt_kernel(manager.py)', '694': 'test_send(test_session.py)'}}, {'key': 2721, 'parent': 2722, 'tfidf_word': 'permission name native flush cleanup loop io code tunnel restarter ', 'tfidf_method': 'test_default_version setUp extract_oname_v4 test_complete_reply test_complete_request test_display_data test_execute_reply test_execute_request SignalTestKernel reqrep ', 'lda_word': ' kernel,init,test,adapt,close,', 'lda_method': ' start,poll,start_kernel,pre_start_kernel,install_sample_kernel,', 'lsi_word': ' kernel,test,start,loop,io,', 'lsi_method': ' start,setup,poll,shutdown,shutdown_handler,', 'spm_method': ' ', 'text_summary': "Subclasses may override  Prepares a kernel for startup in a separate process. Prepares a kernel for startup in a separate process. return ip for localhost (almost always 127.0.0.1)   Ensure that a sequence of kernel startups doesn't break anything. This method is called in the ioloop thread when a message arrives. Return a list of the kernel ids of the active kernels. Return the connection info as a dict. Subclasses may override Start the polling of the kernel. Ensure that a sequence of kernel startups doesn't break anything. find a connection file, and return its absolute path. return ip for localhost (almost always 127.0.0.1)      find a connection file, and return its absolute path. tunnel connections to a kernel via ssh. For tests, create a file to indicate that we've started. handle kernel info reply. Get the hb channel object for this kernel. Send a raw message via ident path. Returns the id to associate with the kernel for this request. Make a blocking client connected to my kernel. Immediately processes all pending messages on this channel. Return the number of running kernels. Interrupts the kernel by sending it a signal. Create an ssh tunnel using command-line ssh that connects port lport. This is run in the ioloop thread when the kernel info reply is received. default function for packing datetime objects in JSON. Start the polling of the kernel. Send a shutdown request via control channel. test load_connection_file() after. Sends an interrupt event using the specified handle. test that messages receive unique ids. Forgets randomly assigned port numbers and cleans up the connection file.", 'files_count': 34, 'files': ['test_multikernelmanager.py', 'multikernelmanager.py', 'restarter.py', 'signalkernel.py', 'connect.py', 'tunnel.py', 'test_session.py', 'session.py', 'forward.py', 'manager.py', 'test_connect.py', 'client.py', 'channels.py', 'kernelspecapp.py', 'kernelapp.py', 'threaded.py', 'managerabc.py', 'test_adapter.py', 'test_manager.py', 'kernelspec.py', 'test_jsonutil.py', 'jsonutil.py', 'test_kernelmanager.py', 'utils.py', 'test_kernelspec.py', 'localinterfaces.py', 'adapter.py', 'test_kernelapp.py', 'test_client.py', 'win_interrupt.py', 'channelsabc.py', 'runapp.py', 'consoleapp.py', 'launcher.py'], 'execution_path_count': 262, 'function_id_to_name_file': {'664': 'test_start_sequence_ipc_kernels(test_multikernelmanager.py)', '654': '_get_ipc_km(test_multikernelmanager.py)', '392': '__init__(multikernelmanager.py)', '660': 'test_ipc_lifecycle(test_multikernelmanager.py)', '659': 'test_ipc_cinfo(test_multikernelmanager.py)', '423': 'start_kernel(multikernelmanager.py)', '415': 'pre_start_kernel(multikernelmanager.py)', '380': 'DuplicateKernelError(multikernelmanager.py)', '414': 'new_kernel_id(multikernelmanager.py)', '389': 'start_kernel(multikernelmanager.py)', '238': 'start(restarter.py)', '430': 'poll(restarter.py)', '433': 'stop(restarter.py)', '428': '_fire_callbacks(restarter.py)', '510': 'do_execute(signalkernel.py)', '190': 'tunnel_to_kernel(connect.py)', '501': 'openssh_tunnel(tunnel.py)', '494': 'SSHException(tunnel.py)', '497': '_stop_tunnel(tunnel.py)', '694': 'test_send(test_session.py)', '479': 'recv(session.py)', '475': 'feed_identities(session.py)', '492': 'handle(forward.py)', '330': 'restart_kernel(manager.py)', '202': 'cleanup_random_ports(connect.py)', '200': 'cleanup_connection_file(connect.py)', '567': 'test_mixin_cleanup_random_ports(test_connect.py)', '90': 'AsyncKernelClient(client.py)', '106': 'ZMQSocketChannel(channels.py)', '109': 'close(channels.py)', '116': 'BlockingKernelClient(client.py)', '225': 'IOLoopKernelManager(manager.py)', '226': 'as_zmqstream(manager.py)', '233': 'wrapped(manager.py)', '224': 'AsyncIOLoopKernelManager(manager.py)', '568': 'test_mixin_record_random_ports(test_connect.py)', '557': 'DummyConfigurable(test_connect.py)', '188': 'ConnectionFileMixin(connect.py)', '235': 'IOLoopKernelRestarter(restarter.py)', '426': 'KernelRestarter(restarter.py)', '234': 'AsyncIOLoopKernelRestarter(restarter.py)', '291': 'start(kernelspecapp.py)', '251': 'start(kernelapp.py)', '249': 'setup_signals(kernelapp.py)', '252': 'shutdown_handler(kernelapp.py)', '250': 'shutdown(kernelapp.py)', '248': 'log_connection_info(kernelapp.py)', '199': 'blocking_client(connect.py)', '208': 'get_connection_info(connect.py)', '725': 'stop_channels(threaded.py)', '373': 'is_alive(managerabc.py)', '684': 'test_bad_unpack(test_session.py)', '676': '_bad_unpacker(test_session.py)', '536': 'test_complete_request(test_adapter.py)', '517': 'adapt(test_adapter.py)', '562': 'test_find_connection_file_local(test_connect.py)', '189': 'find_connection_file(connect.py)', '730': 'close(threaded.py)', '493': 'SubHander(forward.py)', '490': 'Handler(forward.py)', '635': 'test_connection_file_real_path(test_manager.py)', '253': 'KernelSpec(kernelspec.py)', '718': 'close(threaded.py)', '132': 'close(channels.py)', '114': 'send(channels.py)', '88': 'send(channels.py)', '83': 'close(channels.py)', '575': 'test_date_default(test_jsonutil.py)', '450': 'utcnow(session.py)', '241': 'date_default(jsonutil.py)', '240': '_ensure_tzinfo(jsonutil.py)', '597': 'test_subclasses(test_kernelmanager.py)', '703': 'AsyncKernelManagerWithCleanup(utils.py)', '595': 'test_signal_kernel_subprocesses(test_kernelmanager.py)', '598': 'execute(test_kernelmanager.py)', '702': 'AsyncKernelManagerSubclass(utils.py)', '611': 'test_start_parallel_process_kernels(test_kernelmanager.py)', '591': 'transport(test_kernelmanager.py)', '606': 'test_templated_kspec_env(test_kernelmanager.py)', '599': '_env_test_body(test_kernelmanager.py)', '607': 'execute(test_kernelmanager.py)', '612': 'test_start_parallel_thread_kernels(test_kernelmanager.py)', '604': 'test_signal_kernel_subprocesses(test_kernelmanager.py)', '608': 'execute(test_kernelmanager.py)', '586': 'env(test_kernelmanager.py)', '712': 'stop(utils.py)', '711': 'start(utils.py)', '705': 'test_env(utils.py)', '630': 'test_validate_kernel_name(test_kernelspec.py)', '257': '_is_valid_kernel_name(kernelspec.py)', '506': 'SignalTestApp(signalkernel.py)', '507': 'SignalTestKernel(signalkernel.py)', '627': 'test_remove_kernel_spec(test_kernelspec.py)', '617': '_install_sample_kernel(test_kernelspec.py)', '626': 'test_kernel_spec_priority(test_kernelspec.py)', '651': 'test_tcp_cinfo(test_multikernelmanager.py)', '640': '_run_cinfo(test_multikernelmanager.py)', '621': 'test_find_all_specs(test_kernelspec.py)', '622': 'test_find_kernel_specs(test_kernelspec.py)', '623': 'test_get_kernel_spec(test_kernelspec.py)', '619': 'tearDown(test_kernelspec.py)', '618': 'setUp(test_kernelspec.py)', '649': 'test_start_sequence_ipc_kernels(test_multikernelmanager.py)', '641': '_run_lifecycle(test_multikernelmanager.py)', '650': 'test_start_sequence_tcp_kernels(test_multikernelmanager.py)', '644': 'test_ipc_cinfo(test_multikernelmanager.py)', '315': 'localhost(localinterfaces.py)', '645': 'test_ipc_lifecycle(test_multikernelmanager.py)', '665': 'test_start_sequence_tcp_kernels(test_multikernelmanager.py)', '657': '_run_lifecycle(test_multikernelmanager.py)', '656': '_run_cinfo(test_multikernelmanager.py)', '666': 'test_tcp_cinfo(test_multikernelmanager.py)', '668': 'test_tcp_lifecycle_with_kernel_id(test_multikernelmanager.py)', '569': 'test_secure_write(test_connect.py)', '573': 'check_user_only_permissions(test_connect.py)', '574': 'fetch_win32_permissions(test_connect.py)', '563': 'test_find_connection_file_relative(test_connect.py)', '561': 'test_find_connection_file_abspath(test_connect.py)', '560': 'test_find_connection_file(test_connect.py)', '565': 'test_load_connection_file_session_with_kn(test_connect.py)', '441': 'Session(session.py)', '539': 'test_input_request(test_adapter.py)', '564': 'test_load_connection_file_session(test_connect.py)', '537': 'test_display_data(test_adapter.py)', '540': 'test_inspect_reply(test_adapter.py)', '543': 'test_kernel_info_reply(test_adapter.py)', '542': 'test_inspect_request_token(test_adapter.py)', '535': 'test_complete_reply(test_adapter.py)', '541': 'test_inspect_request(test_adapter.py)', '538': 'test_execute_request(test_adapter.py)', '545': 'test_rename_type(test_adapter.py)', '544': 'test_no_adapt(test_adapter.py)', '546': 'test_same_version(test_adapter.py)', '514': 'V5toV4TestCase(test_adapter.py)', '512': 'AdapterTest(test_adapter.py)', '526': 'test_input_request(test_adapter.py)', '523': 'test_display_data(test_adapter.py)', '527': 'test_kernel_info_reply(test_adapter.py)', '530': 'test_object_info_reply_not_found(test_adapter.py)', '529': 'test_object_info_reply(test_adapter.py)', '531': 'test_object_info_request(test_adapter.py)', '521': 'test_complete_reply(test_adapter.py)', '522': 'test_complete_request(test_adapter.py)', '524': 'test_execute_reply(test_adapter.py)', '532': 'test_rename_type(test_adapter.py)', '525': 'test_execute_request(test_adapter.py)', '528': 'test_no_adapt(test_adapter.py)', '533': 'test_same_version(test_adapter.py)', '513': 'V4toV5TestCase(test_adapter.py)', '519': 'setUp(test_adapter.py)', '516': 'test_default_version(test_adapter.py)', '515': 'test_code_to_line_no_code(test_adapter.py)', '51': 'code_to_line(adapter.py)', '704': 'execute(utils.py)', '158': 'get_shell_msg(client.py)', '615': 'execute(test_kernelmanager.py)', '157': 'get_iopub_msg(client.py)', '710': '__exit__(utils.py)', '709': '__enter__(utils.py)', '580': 'test_kernelapp_lifecycle(test_kernelapp.py)', '579': '_launch(test_kernelapp.py)', '686': 'test_clone(test_session.py)', '473': 'clone(session.py)', '695': 'test_send_raw(test_session.py)', '481': 'send_raw(session.py)', '483': 'sign(session.py)', '689': 'test_datetimes_msgpack(test_session.py)', '690': 'test_datetimes_pickle(test_session.py)', '688': 'test_datetimes(test_session.py)', '683': 'test_bad_roundtrip(test_session.py)', '685': 'test_bad_unpacker(test_session.py)', '682': 'test_bad_packer(test_session.py)', '681': 'test_bad_pack(test_session.py)', '675': '_bad_packer(test_session.py)', '687': 'test_cull_digest_history(test_session.py)', '700': 'test_zero_digest_history(test_session.py)', '697': 'test_session_id(test_session.py)', '699': 'test_unique_msg_ids(test_session.py)', '445': 'msg_header(session.py)', '698': 'test_tracking(test_session.py)', '680': 'test_args(test_session.py)', '478': 'msg_id(session.py)', '696': 'test_serialize(test_session.py)', '674': 'TestSession(test_session.py)', '673': 'SessionTestCase(test_session.py)', '678': 'setUp(test_session.py)', '556': 'test_shutdown(test_client.py)', '548': '_check_reply(test_client.py)', '550': 'test_comm_info(test_client.py)', '555': 'test_kernel_info(test_client.py)', '551': 'test_complete(test_client.py)', '554': 'test_inspect(test_client.py)', '553': 'test_history(test_client.py)', '549': 'setUp(test_client.py)', '255': 'NoSuchKernel(kernelspec.py)', '117': 'reqrep(client.py)', '124': 'wrapped(client.py)', '123': 'wait_for_ready(client.py)', '150': '_handle_kernel_info_reply(client.py)', '125': 'HBChannel(channels.py)', '104': 'wait_for_ready(client.py)', '102': 'hb_channel(client.py)', '196': '_make_url(connect.py)', '91': 'reqrep(client.py)', '105': 'wrapped(client.py)', '80': 'ZMQSocketChannel(channels.py)', '154': 'control_channel(client.py)', '723': 'ioloop(threaded.py)', '160': 'hb_channel(client.py)', '171': 'stdin_channel(client.py)', '164': 'iopub_channel(client.py)', '168': 'shell_channel(client.py)', '328': 'interrupt_kernel(manager.py)', '740': 'send_interrupt(win_interrupt.py)', '334': '__del__(manager.py)', '293': 'start(kernelspecapp.py)', '294': 'path_key(kernelspecapp.py)', '735': 'start(threaded.py)', '720': 'start(threaded.py)', '141': 'start(channelsabc.py)', '432': 'start(restarter.py)', '288': 'start(kernelspecapp.py)', '89': 'start(channels.py)', '115': 'start(channels.py)', '290': 'start(kernelspecapp.py)', '438': 'parse_command_line(runapp.py)', '218': 'build_kernel_argv(consoleapp.py)', '308': '_only_once(localinterfaces.py)', '317': 'wrapped(localinterfaces.py)', '47': 'V4toV5(adapter.py)', '46': 'Adapter(adapter.py)', '77': 'object_info_request(adapter.py)', '52': 'extract_oname_v4(adapter.py)', '70': 'complete_request(adapter.py)', '75': 'kernel_info_reply(adapter.py)', '49': '_version_str_to_list(adapter.py)', '48': 'V5toV4(adapter.py)', '53': '__call__(adapter.py)', '54': 'handle_reply_status_error(adapter.py)', '57': 'update_msg_type(adapter.py)', '56': 'update_metadata(adapter.py)', '55': 'update_header(adapter.py)', '247': 'initialize(kernelapp.py)', '246': '_record_started(kernelapp.py)', '585': 'config(test_kernelmanager.py)', '262': 'install_native_kernel_spec(kernelspec.py)', '276': 'install_native_kernel_spec(kernelspec.py)', '265': 'to_json(kernelspec.py)', '264': 'to_dict(kernelspec.py)', '449': 'test_msg2obj(session.py)', '440': 'Message(session.py)', '453': '__init__(session.py)', '470': '_signature_scheme_changed(session.py)', '465': '_new_auth(session.py)', '463': '_key_default(session.py)', '447': 'new_id_bytes(session.py)', '462': '_key_changed(session.py)', '443': 'default_secure(session.py)', '469': '_session_default(session.py)', '446': 'new_id(session.py)', '412': 'is_alive(multikernelmanager.py)', '420': 'shutdown_all(multikernelmanager.py)', '413': 'list_kernel_ids(multikernelmanager.py)', '721': 'stop(threaded.py)', '140': 'is_alive(channelsabc.py)', '732': 'is_alive(threaded.py)', '112': 'is_alive(channels.py)', '86': 'is_alive(channels.py)', '724': 'start_channels(threaded.py)', '722': '_check_kernel_info_reply(threaded.py)', '716': '__init__(threaded.py)', '387': 'shutdown_kernel(multikernelmanager.py)', '416': 'remove_kernel(multikernelmanager.py)', '713': 'IOLoopThread(threaded.py)', '714': 'ThreadedKernelClient(threaded.py)', '715': 'ThreadedZMQSocketChannel(threaded.py)', '731': 'flush(threaded.py)', '727': '_flush(threaded.py)', '386': 'shutdown_all(multikernelmanager.py)', '418': 'request_shutdown(multikernelmanager.py)', '402': 'cleanup_resources(multikernelmanager.py)', '408': 'finish_shutdown(multikernelmanager.py)', '393': '__len__(multikernelmanager.py)', '421': 'shutdown_kernel(multikernelmanager.py)', '198': '_session_default(connect.py)', '298': 'launch_kernel(launcher.py)', '739': 'create_interrupt_event(win_interrupt.py)', '741': 'SECURITY_ATTRIBUTES(win_interrupt.py)', '215': '__init__(consoleapp.py)', '509': '__init__(signalkernel.py)', '278': '__init__(kernelspec.py)', '127': '__init__(channels.py)', '126': 'InvalidPortNumber(channels.py)', '107': '__init__(channels.py)', '81': '__init__(channels.py)', '726': '__init__(threaded.py)', '737': 'setup_stream(threaded.py)', '728': '_handle_recv(threaded.py)', '729': 'call_handlers(threaded.py)', '136': 'stop(channels.py)', '133': 'is_beating(channels.py)', '135': 'run(channels.py)', '145': 'time_to_dead(channelsabc.py)', '131': 'call_handlers(channels.py)', '130': '_poll(channels.py)'}}, {'key': 842, 'parent': 2161, 'tfidf_word': 'EP: 842, Name: test_datetimes &rarr; _datetime_test &rarr; utcnow', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 845, 'parent': 2161, 'tfidf_word': 'EP: 845, Name: test_datetimes_pickle &rarr; _datetime_test &rarr; utcnow', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1402, 'parent': 2222, 'tfidf_word': 'EP: 1402, Name: handle &rarr; send &rarr; thread_send', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2124, 'parent': 2222, 'tfidf_word': 'thread interrupt kernel test send ', 'tfidf_method': 'send thread_send interrupt_kernel test_send ', 'lda_word': ' send,thread,kernel,test,interrupt,', 'lda_method': ' send,thread_send,test_send,interrupt_kernel,', 'lsi_word': ' send,thread,test,kernel,interrupt,', 'lsi_method': ' send,thread_send,interrupt_kernel,test_send,', 'spm_method': ' ', 'text_summary': '', 'files_count': 3, 'files': ['manager.py', 'threaded.py', 'test_session.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'328': 'interrupt_kernel(manager.py)', '734': 'send(threaded.py)', '738': 'thread_send(threaded.py)', '694': 'test_send(test_session.py)'}}, {'key': 2193, 'parent': 2721, 'tfidf_word': 'get init km test ipc cinfo kernel lifecycle sequence start ', 'tfidf_method': '__init__ _get_ipc_km test_ipc_cinfo test_ipc_lifecycle test_start_sequence_ipc_kernels ', 'lda_word': ' ipc,test,km,init,get,', 'lda_method': ' get_ipc_km,test_ipc_lifecycle,init,test_start_sequence_ipc_kernels,test_ipc_cinfo,', 'lsi_word': ' ipc,km,test,init,get,', 'lsi_method': ' init,get_ipc_km,test_ipc_lifecycle,test_start_sequence_ipc_kernels,test_ipc_cinfo,', 'spm_method': ' ', 'text_summary': 'Empty', 'files_count': 2, 'files': ['test_multikernelmanager.py', 'multikernelmanager.py'], 'execution_path_count': 3, 'function_id_to_name_file': {'664': 'test_start_sequence_ipc_kernels(test_multikernelmanager.py)', '654': '_get_ipc_km(test_multikernelmanager.py)', '392': '__init__(multikernelmanager.py)', '660': 'test_ipc_lifecycle(test_multikernelmanager.py)', '659': 'test_ipc_cinfo(test_multikernelmanager.py)'}}, {'key': 2720, 'parent': 2721, 'tfidf_word': 'permission flush native name loop io cleanup code tunnel restarter ', 'tfidf_method': 'test_code_to_line_no_code test_default_version setUp extract_oname_v4 test_complete_reply test_complete_request test_display_data test_execute_reply SignalTestApp reqrep ', 'lda_word': ' start,init,test,kernel,close,', 'lda_method': ' start,adapt,execute,poll,install_sample_kernel,', 'lsi_word': ' kernel,test,start,loop,io,', 'lsi_method': ' start,setup,poll,shutdown,shutdown_handler,', 'spm_method': ' ', 'text_summary': "Subclasses may override  Prepares a kernel for startup in a separate process. Prepares a kernel for startup in a separate process. return ip for localhost (almost always 127.0.0.1)   Ensure that a sequence of kernel startups doesn't break anything. This method is called in the ioloop thread when a message arrives. Return a list of the kernel ids of the active kernels. Return the connection info as a dict. Subclasses may override Start the polling of the kernel. Ensure that a sequence of kernel startups doesn't break anything. find a connection file, and return its absolute path. return ip for localhost (almost always 127.0.0.1)      find a connection file, and return its absolute path. tunnel connections to a kernel via ssh. For tests, create a file to indicate that we've started. handle kernel info reply. Get the hb channel object for this kernel. Send a raw message via ident path. Returns the id to associate with the kernel for this request. Make a blocking client connected to my kernel. Immediately processes all pending messages on this channel. Return the number of running kernels. Interrupts the kernel by sending it a signal. Create an ssh tunnel using command-line ssh that connects port lport. This is run in the ioloop thread when the kernel info reply is received. default function for packing datetime objects in JSON. Start the polling of the kernel. Send a shutdown request via control channel. test load_connection_file() after. Sends an interrupt event using the specified handle. test that messages receive unique ids. Forgets randomly assigned port numbers and cleans up the connection file.", 'files_count': 34, 'files': ['multikernelmanager.py', 'restarter.py', 'signalkernel.py', 'connect.py', 'tunnel.py', 'test_session.py', 'session.py', 'forward.py', 'manager.py', 'test_connect.py', 'client.py', 'channels.py', 'kernelspecapp.py', 'kernelapp.py', 'threaded.py', 'managerabc.py', 'test_adapter.py', 'test_manager.py', 'kernelspec.py', 'test_jsonutil.py', 'jsonutil.py', 'test_kernelmanager.py', 'utils.py', 'test_kernelspec.py', 'test_multikernelmanager.py', 'localinterfaces.py', 'adapter.py', 'test_kernelapp.py', 'test_client.py', 'win_interrupt.py', 'channelsabc.py', 'runapp.py', 'consoleapp.py', 'launcher.py'], 'execution_path_count': 259, 'function_id_to_name_file': {'423': 'start_kernel(multikernelmanager.py)', '415': 'pre_start_kernel(multikernelmanager.py)', '380': 'DuplicateKernelError(multikernelmanager.py)', '414': 'new_kernel_id(multikernelmanager.py)', '389': 'start_kernel(multikernelmanager.py)', '238': 'start(restarter.py)', '430': 'poll(restarter.py)', '433': 'stop(restarter.py)', '428': '_fire_callbacks(restarter.py)', '510': 'do_execute(signalkernel.py)', '190': 'tunnel_to_kernel(connect.py)', '501': 'openssh_tunnel(tunnel.py)', '494': 'SSHException(tunnel.py)', '497': '_stop_tunnel(tunnel.py)', '694': 'test_send(test_session.py)', '479': 'recv(session.py)', '475': 'feed_identities(session.py)', '492': 'handle(forward.py)', '330': 'restart_kernel(manager.py)', '202': 'cleanup_random_ports(connect.py)', '200': 'cleanup_connection_file(connect.py)', '567': 'test_mixin_cleanup_random_ports(test_connect.py)', '90': 'AsyncKernelClient(client.py)', '106': 'ZMQSocketChannel(channels.py)', '109': 'close(channels.py)', '116': 'BlockingKernelClient(client.py)', '225': 'IOLoopKernelManager(manager.py)', '226': 'as_zmqstream(manager.py)', '233': 'wrapped(manager.py)', '224': 'AsyncIOLoopKernelManager(manager.py)', '568': 'test_mixin_record_random_ports(test_connect.py)', '557': 'DummyConfigurable(test_connect.py)', '188': 'ConnectionFileMixin(connect.py)', '235': 'IOLoopKernelRestarter(restarter.py)', '426': 'KernelRestarter(restarter.py)', '234': 'AsyncIOLoopKernelRestarter(restarter.py)', '291': 'start(kernelspecapp.py)', '251': 'start(kernelapp.py)', '249': 'setup_signals(kernelapp.py)', '252': 'shutdown_handler(kernelapp.py)', '250': 'shutdown(kernelapp.py)', '248': 'log_connection_info(kernelapp.py)', '199': 'blocking_client(connect.py)', '208': 'get_connection_info(connect.py)', '725': 'stop_channels(threaded.py)', '373': 'is_alive(managerabc.py)', '684': 'test_bad_unpack(test_session.py)', '676': '_bad_unpacker(test_session.py)', '536': 'test_complete_request(test_adapter.py)', '517': 'adapt(test_adapter.py)', '562': 'test_find_connection_file_local(test_connect.py)', '189': 'find_connection_file(connect.py)', '730': 'close(threaded.py)', '493': 'SubHander(forward.py)', '490': 'Handler(forward.py)', '635': 'test_connection_file_real_path(test_manager.py)', '253': 'KernelSpec(kernelspec.py)', '718': 'close(threaded.py)', '132': 'close(channels.py)', '114': 'send(channels.py)', '88': 'send(channels.py)', '83': 'close(channels.py)', '575': 'test_date_default(test_jsonutil.py)', '450': 'utcnow(session.py)', '241': 'date_default(jsonutil.py)', '240': '_ensure_tzinfo(jsonutil.py)', '597': 'test_subclasses(test_kernelmanager.py)', '703': 'AsyncKernelManagerWithCleanup(utils.py)', '595': 'test_signal_kernel_subprocesses(test_kernelmanager.py)', '598': 'execute(test_kernelmanager.py)', '702': 'AsyncKernelManagerSubclass(utils.py)', '611': 'test_start_parallel_process_kernels(test_kernelmanager.py)', '591': 'transport(test_kernelmanager.py)', '606': 'test_templated_kspec_env(test_kernelmanager.py)', '599': '_env_test_body(test_kernelmanager.py)', '607': 'execute(test_kernelmanager.py)', '612': 'test_start_parallel_thread_kernels(test_kernelmanager.py)', '604': 'test_signal_kernel_subprocesses(test_kernelmanager.py)', '608': 'execute(test_kernelmanager.py)', '586': 'env(test_kernelmanager.py)', '712': 'stop(utils.py)', '711': 'start(utils.py)', '705': 'test_env(utils.py)', '630': 'test_validate_kernel_name(test_kernelspec.py)', '257': '_is_valid_kernel_name(kernelspec.py)', '506': 'SignalTestApp(signalkernel.py)', '507': 'SignalTestKernel(signalkernel.py)', '627': 'test_remove_kernel_spec(test_kernelspec.py)', '617': '_install_sample_kernel(test_kernelspec.py)', '626': 'test_kernel_spec_priority(test_kernelspec.py)', '651': 'test_tcp_cinfo(test_multikernelmanager.py)', '640': '_run_cinfo(test_multikernelmanager.py)', '621': 'test_find_all_specs(test_kernelspec.py)', '622': 'test_find_kernel_specs(test_kernelspec.py)', '623': 'test_get_kernel_spec(test_kernelspec.py)', '619': 'tearDown(test_kernelspec.py)', '618': 'setUp(test_kernelspec.py)', '649': 'test_start_sequence_ipc_kernels(test_multikernelmanager.py)', '641': '_run_lifecycle(test_multikernelmanager.py)', '650': 'test_start_sequence_tcp_kernels(test_multikernelmanager.py)', '644': 'test_ipc_cinfo(test_multikernelmanager.py)', '315': 'localhost(localinterfaces.py)', '645': 'test_ipc_lifecycle(test_multikernelmanager.py)', '665': 'test_start_sequence_tcp_kernels(test_multikernelmanager.py)', '657': '_run_lifecycle(test_multikernelmanager.py)', '664': 'test_start_sequence_ipc_kernels(test_multikernelmanager.py)', '659': 'test_ipc_cinfo(test_multikernelmanager.py)', '656': '_run_cinfo(test_multikernelmanager.py)', '660': 'test_ipc_lifecycle(test_multikernelmanager.py)', '666': 'test_tcp_cinfo(test_multikernelmanager.py)', '668': 'test_tcp_lifecycle_with_kernel_id(test_multikernelmanager.py)', '569': 'test_secure_write(test_connect.py)', '573': 'check_user_only_permissions(test_connect.py)', '574': 'fetch_win32_permissions(test_connect.py)', '563': 'test_find_connection_file_relative(test_connect.py)', '561': 'test_find_connection_file_abspath(test_connect.py)', '560': 'test_find_connection_file(test_connect.py)', '565': 'test_load_connection_file_session_with_kn(test_connect.py)', '441': 'Session(session.py)', '539': 'test_input_request(test_adapter.py)', '564': 'test_load_connection_file_session(test_connect.py)', '537': 'test_display_data(test_adapter.py)', '540': 'test_inspect_reply(test_adapter.py)', '543': 'test_kernel_info_reply(test_adapter.py)', '542': 'test_inspect_request_token(test_adapter.py)', '535': 'test_complete_reply(test_adapter.py)', '541': 'test_inspect_request(test_adapter.py)', '538': 'test_execute_request(test_adapter.py)', '545': 'test_rename_type(test_adapter.py)', '544': 'test_no_adapt(test_adapter.py)', '546': 'test_same_version(test_adapter.py)', '514': 'V5toV4TestCase(test_adapter.py)', '512': 'AdapterTest(test_adapter.py)', '526': 'test_input_request(test_adapter.py)', '523': 'test_display_data(test_adapter.py)', '527': 'test_kernel_info_reply(test_adapter.py)', '530': 'test_object_info_reply_not_found(test_adapter.py)', '529': 'test_object_info_reply(test_adapter.py)', '531': 'test_object_info_request(test_adapter.py)', '521': 'test_complete_reply(test_adapter.py)', '522': 'test_complete_request(test_adapter.py)', '524': 'test_execute_reply(test_adapter.py)', '532': 'test_rename_type(test_adapter.py)', '525': 'test_execute_request(test_adapter.py)', '528': 'test_no_adapt(test_adapter.py)', '533': 'test_same_version(test_adapter.py)', '513': 'V4toV5TestCase(test_adapter.py)', '519': 'setUp(test_adapter.py)', '516': 'test_default_version(test_adapter.py)', '515': 'test_code_to_line_no_code(test_adapter.py)', '51': 'code_to_line(adapter.py)', '704': 'execute(utils.py)', '158': 'get_shell_msg(client.py)', '615': 'execute(test_kernelmanager.py)', '157': 'get_iopub_msg(client.py)', '710': '__exit__(utils.py)', '709': '__enter__(utils.py)', '580': 'test_kernelapp_lifecycle(test_kernelapp.py)', '579': '_launch(test_kernelapp.py)', '686': 'test_clone(test_session.py)', '473': 'clone(session.py)', '695': 'test_send_raw(test_session.py)', '481': 'send_raw(session.py)', '483': 'sign(session.py)', '689': 'test_datetimes_msgpack(test_session.py)', '690': 'test_datetimes_pickle(test_session.py)', '688': 'test_datetimes(test_session.py)', '683': 'test_bad_roundtrip(test_session.py)', '685': 'test_bad_unpacker(test_session.py)', '682': 'test_bad_packer(test_session.py)', '681': 'test_bad_pack(test_session.py)', '675': '_bad_packer(test_session.py)', '687': 'test_cull_digest_history(test_session.py)', '700': 'test_zero_digest_history(test_session.py)', '697': 'test_session_id(test_session.py)', '699': 'test_unique_msg_ids(test_session.py)', '445': 'msg_header(session.py)', '698': 'test_tracking(test_session.py)', '680': 'test_args(test_session.py)', '478': 'msg_id(session.py)', '696': 'test_serialize(test_session.py)', '674': 'TestSession(test_session.py)', '673': 'SessionTestCase(test_session.py)', '678': 'setUp(test_session.py)', '556': 'test_shutdown(test_client.py)', '548': '_check_reply(test_client.py)', '550': 'test_comm_info(test_client.py)', '555': 'test_kernel_info(test_client.py)', '551': 'test_complete(test_client.py)', '554': 'test_inspect(test_client.py)', '553': 'test_history(test_client.py)', '549': 'setUp(test_client.py)', '255': 'NoSuchKernel(kernelspec.py)', '117': 'reqrep(client.py)', '124': 'wrapped(client.py)', '123': 'wait_for_ready(client.py)', '150': '_handle_kernel_info_reply(client.py)', '125': 'HBChannel(channels.py)', '104': 'wait_for_ready(client.py)', '102': 'hb_channel(client.py)', '196': '_make_url(connect.py)', '91': 'reqrep(client.py)', '105': 'wrapped(client.py)', '80': 'ZMQSocketChannel(channels.py)', '154': 'control_channel(client.py)', '723': 'ioloop(threaded.py)', '160': 'hb_channel(client.py)', '171': 'stdin_channel(client.py)', '164': 'iopub_channel(client.py)', '168': 'shell_channel(client.py)', '328': 'interrupt_kernel(manager.py)', '740': 'send_interrupt(win_interrupt.py)', '334': '__del__(manager.py)', '293': 'start(kernelspecapp.py)', '294': 'path_key(kernelspecapp.py)', '735': 'start(threaded.py)', '720': 'start(threaded.py)', '141': 'start(channelsabc.py)', '432': 'start(restarter.py)', '288': 'start(kernelspecapp.py)', '89': 'start(channels.py)', '115': 'start(channels.py)', '290': 'start(kernelspecapp.py)', '438': 'parse_command_line(runapp.py)', '218': 'build_kernel_argv(consoleapp.py)', '308': '_only_once(localinterfaces.py)', '317': 'wrapped(localinterfaces.py)', '47': 'V4toV5(adapter.py)', '46': 'Adapter(adapter.py)', '77': 'object_info_request(adapter.py)', '52': 'extract_oname_v4(adapter.py)', '70': 'complete_request(adapter.py)', '75': 'kernel_info_reply(adapter.py)', '49': '_version_str_to_list(adapter.py)', '48': 'V5toV4(adapter.py)', '53': '__call__(adapter.py)', '54': 'handle_reply_status_error(adapter.py)', '57': 'update_msg_type(adapter.py)', '56': 'update_metadata(adapter.py)', '55': 'update_header(adapter.py)', '247': 'initialize(kernelapp.py)', '246': '_record_started(kernelapp.py)', '585': 'config(test_kernelmanager.py)', '262': 'install_native_kernel_spec(kernelspec.py)', '276': 'install_native_kernel_spec(kernelspec.py)', '265': 'to_json(kernelspec.py)', '264': 'to_dict(kernelspec.py)', '449': 'test_msg2obj(session.py)', '440': 'Message(session.py)', '453': '__init__(session.py)', '470': '_signature_scheme_changed(session.py)', '465': '_new_auth(session.py)', '463': '_key_default(session.py)', '447': 'new_id_bytes(session.py)', '462': '_key_changed(session.py)', '443': 'default_secure(session.py)', '469': '_session_default(session.py)', '446': 'new_id(session.py)', '412': 'is_alive(multikernelmanager.py)', '420': 'shutdown_all(multikernelmanager.py)', '413': 'list_kernel_ids(multikernelmanager.py)', '721': 'stop(threaded.py)', '140': 'is_alive(channelsabc.py)', '732': 'is_alive(threaded.py)', '112': 'is_alive(channels.py)', '86': 'is_alive(channels.py)', '724': 'start_channels(threaded.py)', '722': '_check_kernel_info_reply(threaded.py)', '716': '__init__(threaded.py)', '387': 'shutdown_kernel(multikernelmanager.py)', '416': 'remove_kernel(multikernelmanager.py)', '713': 'IOLoopThread(threaded.py)', '714': 'ThreadedKernelClient(threaded.py)', '715': 'ThreadedZMQSocketChannel(threaded.py)', '731': 'flush(threaded.py)', '727': '_flush(threaded.py)', '386': 'shutdown_all(multikernelmanager.py)', '418': 'request_shutdown(multikernelmanager.py)', '402': 'cleanup_resources(multikernelmanager.py)', '408': 'finish_shutdown(multikernelmanager.py)', '393': '__len__(multikernelmanager.py)', '421': 'shutdown_kernel(multikernelmanager.py)', '198': '_session_default(connect.py)', '298': 'launch_kernel(launcher.py)', '739': 'create_interrupt_event(win_interrupt.py)', '741': 'SECURITY_ATTRIBUTES(win_interrupt.py)', '215': '__init__(consoleapp.py)', '509': '__init__(signalkernel.py)', '278': '__init__(kernelspec.py)', '127': '__init__(channels.py)', '126': 'InvalidPortNumber(channels.py)', '107': '__init__(channels.py)', '81': '__init__(channels.py)', '392': '__init__(multikernelmanager.py)', '726': '__init__(threaded.py)', '737': 'setup_stream(threaded.py)', '728': '_handle_recv(threaded.py)', '729': 'call_handlers(threaded.py)', '136': 'stop(channels.py)', '133': 'is_beating(channels.py)', '135': 'run(channels.py)', '145': 'time_to_dead(channelsabc.py)', '131': 'call_handlers(channels.py)', '130': '_poll(channels.py)'}}, {'key': 368, 'parent': 2124, 'tfidf_word': 'EP: 368, Name: interrupt_kernel &rarr; send &rarr; thread_send', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 764, 'parent': 2124, 'tfidf_word': 'EP: 764, Name: test_send &rarr; send &rarr; thread_send', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1159, 'parent': 2193, 'tfidf_word': 'EP: 1159, Name: test_start_sequence_ipc_kernels &rarr; _get_ipc_km &rarr; __init__', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2191, 'parent': 2193, 'tfidf_word': 'get init km test cinfo lifecycle ipc ', 'tfidf_method': '__init__ _get_ipc_km test_ipc_cinfo test_ipc_lifecycle ', 'lda_word': ' ipc,init,test,km,get,', 'lda_method': ' get_ipc_km,init,test_ipc_cinfo,test_ipc_lifecycle,', 'lsi_word': ' ipc,km,init,test,get,', 'lsi_method': ' get_ipc_km,init,test_ipc_lifecycle,test_ipc_cinfo,', 'spm_method': ' ', 'text_summary': '', 'files_count': 2, 'files': ['test_multikernelmanager.py', 'multikernelmanager.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'660': 'test_ipc_lifecycle(test_multikernelmanager.py)', '654': '_get_ipc_km(test_multikernelmanager.py)', '392': '__init__(multikernelmanager.py)', '659': 'test_ipc_cinfo(test_multikernelmanager.py)'}}, {'key': 2658, 'parent': 2720, 'tfidf_word': 'pre duplicate error id new start kernel ', 'tfidf_method': 'pre_start_kernel DuplicateKernelError start_kernel new_kernel_id start_kernel ', 'lda_word': ' kernel,start,pre,new,duplicate,', 'lda_method': ' start_kernel,pre_start_kernel,new_kernel_id,duplicatekernelerror,', 'lsi_word': ' kernel,start,pre,duplicate,error,', 'lsi_method': ' start_kernel,pre_start_kernel,duplicatekernelerror,new_kernel_id,', 'spm_method': ' ', 'text_summary': 'Returns the id to associate with the kernel for this request.', 'files_count': 1, 'files': ['multikernelmanager.py'], 'execution_path_count': 4, 'function_id_to_name_file': {'423': 'start_kernel(multikernelmanager.py)', '415': 'pre_start_kernel(multikernelmanager.py)', '380': 'DuplicateKernelError(multikernelmanager.py)', '414': 'new_kernel_id(multikernelmanager.py)', '389': 'start_kernel(multikernelmanager.py)'}}, {'key': 2719, 'parent': 2720, 'tfidf_word': 'flush permission native name io cleanup loop code tunnel restarter ', 'tfidf_method': 'test_code_to_line_no_code test_default_version setUp extract_oname_v4 test_complete_reply test_complete_request test_display_data test_execute_reply SignalTestApp reqrep ', 'lda_word': ' test,kernel,cinfo,run,lifecycle,', 'lda_method': ' start,init,setup,shutdown_all,run_lifecycle,', 'lsi_word': ' test,kernel,adapt,session,reply,', 'lsi_method': ' start,setup,poll,shutdown,shutdown_handler,', 'spm_method': ' ', 'text_summary': "return ip for localhost (almost always 127.0.0.1)   Ensure that a sequence of kernel startups doesn't break anything. This method is called in the ioloop thread when a message arrives. Pass a message to the ZMQ socket to send. Return a list of the kernel ids of the active kernels. Return the connection info as a dict. Ensure that a sequence of kernel startups doesn't break anything. Launches a localhost kernel, binding to the specified ports. find a connection file, and return its absolute path. return ip for localhost (almost always 127.0.0.1)      find a connection file, and return its absolute path. tunnel connections to a kernel via ssh. For tests, create a file to indicate that we've started. test load_connection_file() after. handle kernel info reply. Get the hb channel object for this kernel. Send a raw message via ident path. Make a blocking client connected to my kernel. Immediately processes all pending messages on this channel. Shutdown all kernels. Return the number of running kernels. Interrupts the kernel by sending it a signal. Get a message from the shell channel. Create an ssh tunnel using command-line ssh that connects port lport. This is run in the ioloop thread when the kernel info reply is received. default function for packing datetime objects in JSON. Send a shutdown request via control channel. Create an interrupt event handle. Get a message from the iopub channel. Sends an interrupt event using the specified handle. test that messages receive unique ids. Forgets randomly assigned port numbers and cleans up the connection file.", 'files_count': 34, 'files': ['restarter.py', 'signalkernel.py', 'connect.py', 'tunnel.py', 'test_session.py', 'session.py', 'forward.py', 'manager.py', 'test_connect.py', 'client.py', 'channels.py', 'kernelspecapp.py', 'kernelapp.py', 'threaded.py', 'managerabc.py', 'test_adapter.py', 'test_manager.py', 'kernelspec.py', 'test_jsonutil.py', 'jsonutil.py', 'test_kernelmanager.py', 'utils.py', 'test_kernelspec.py', 'test_multikernelmanager.py', 'localinterfaces.py', 'adapter.py', 'test_kernelapp.py', 'test_client.py', 'win_interrupt.py', 'channelsabc.py', 'runapp.py', 'consoleapp.py', 'multikernelmanager.py', 'launcher.py'], 'execution_path_count': 255, 'function_id_to_name_file': {'238': 'start(restarter.py)', '430': 'poll(restarter.py)', '433': 'stop(restarter.py)', '428': '_fire_callbacks(restarter.py)', '510': 'do_execute(signalkernel.py)', '190': 'tunnel_to_kernel(connect.py)', '501': 'openssh_tunnel(tunnel.py)', '494': 'SSHException(tunnel.py)', '497': '_stop_tunnel(tunnel.py)', '694': 'test_send(test_session.py)', '479': 'recv(session.py)', '475': 'feed_identities(session.py)', '492': 'handle(forward.py)', '330': 'restart_kernel(manager.py)', '202': 'cleanup_random_ports(connect.py)', '200': 'cleanup_connection_file(connect.py)', '567': 'test_mixin_cleanup_random_ports(test_connect.py)', '90': 'AsyncKernelClient(client.py)', '106': 'ZMQSocketChannel(channels.py)', '109': 'close(channels.py)', '116': 'BlockingKernelClient(client.py)', '225': 'IOLoopKernelManager(manager.py)', '226': 'as_zmqstream(manager.py)', '233': 'wrapped(manager.py)', '224': 'AsyncIOLoopKernelManager(manager.py)', '568': 'test_mixin_record_random_ports(test_connect.py)', '557': 'DummyConfigurable(test_connect.py)', '188': 'ConnectionFileMixin(connect.py)', '235': 'IOLoopKernelRestarter(restarter.py)', '426': 'KernelRestarter(restarter.py)', '234': 'AsyncIOLoopKernelRestarter(restarter.py)', '291': 'start(kernelspecapp.py)', '251': 'start(kernelapp.py)', '249': 'setup_signals(kernelapp.py)', '252': 'shutdown_handler(kernelapp.py)', '250': 'shutdown(kernelapp.py)', '248': 'log_connection_info(kernelapp.py)', '199': 'blocking_client(connect.py)', '208': 'get_connection_info(connect.py)', '725': 'stop_channels(threaded.py)', '373': 'is_alive(managerabc.py)', '684': 'test_bad_unpack(test_session.py)', '676': '_bad_unpacker(test_session.py)', '536': 'test_complete_request(test_adapter.py)', '517': 'adapt(test_adapter.py)', '562': 'test_find_connection_file_local(test_connect.py)', '189': 'find_connection_file(connect.py)', '730': 'close(threaded.py)', '493': 'SubHander(forward.py)', '490': 'Handler(forward.py)', '635': 'test_connection_file_real_path(test_manager.py)', '253': 'KernelSpec(kernelspec.py)', '718': 'close(threaded.py)', '132': 'close(channels.py)', '114': 'send(channels.py)', '88': 'send(channels.py)', '83': 'close(channels.py)', '575': 'test_date_default(test_jsonutil.py)', '450': 'utcnow(session.py)', '241': 'date_default(jsonutil.py)', '240': '_ensure_tzinfo(jsonutil.py)', '597': 'test_subclasses(test_kernelmanager.py)', '703': 'AsyncKernelManagerWithCleanup(utils.py)', '595': 'test_signal_kernel_subprocesses(test_kernelmanager.py)', '598': 'execute(test_kernelmanager.py)', '702': 'AsyncKernelManagerSubclass(utils.py)', '611': 'test_start_parallel_process_kernels(test_kernelmanager.py)', '591': 'transport(test_kernelmanager.py)', '606': 'test_templated_kspec_env(test_kernelmanager.py)', '599': '_env_test_body(test_kernelmanager.py)', '607': 'execute(test_kernelmanager.py)', '612': 'test_start_parallel_thread_kernels(test_kernelmanager.py)', '604': 'test_signal_kernel_subprocesses(test_kernelmanager.py)', '608': 'execute(test_kernelmanager.py)', '586': 'env(test_kernelmanager.py)', '712': 'stop(utils.py)', '711': 'start(utils.py)', '705': 'test_env(utils.py)', '630': 'test_validate_kernel_name(test_kernelspec.py)', '257': '_is_valid_kernel_name(kernelspec.py)', '506': 'SignalTestApp(signalkernel.py)', '507': 'SignalTestKernel(signalkernel.py)', '627': 'test_remove_kernel_spec(test_kernelspec.py)', '617': '_install_sample_kernel(test_kernelspec.py)', '626': 'test_kernel_spec_priority(test_kernelspec.py)', '651': 'test_tcp_cinfo(test_multikernelmanager.py)', '640': '_run_cinfo(test_multikernelmanager.py)', '621': 'test_find_all_specs(test_kernelspec.py)', '622': 'test_find_kernel_specs(test_kernelspec.py)', '623': 'test_get_kernel_spec(test_kernelspec.py)', '619': 'tearDown(test_kernelspec.py)', '618': 'setUp(test_kernelspec.py)', '649': 'test_start_sequence_ipc_kernels(test_multikernelmanager.py)', '641': '_run_lifecycle(test_multikernelmanager.py)', '650': 'test_start_sequence_tcp_kernels(test_multikernelmanager.py)', '644': 'test_ipc_cinfo(test_multikernelmanager.py)', '315': 'localhost(localinterfaces.py)', '645': 'test_ipc_lifecycle(test_multikernelmanager.py)', '665': 'test_start_sequence_tcp_kernels(test_multikernelmanager.py)', '657': '_run_lifecycle(test_multikernelmanager.py)', '664': 'test_start_sequence_ipc_kernels(test_multikernelmanager.py)', '659': 'test_ipc_cinfo(test_multikernelmanager.py)', '656': '_run_cinfo(test_multikernelmanager.py)', '660': 'test_ipc_lifecycle(test_multikernelmanager.py)', '666': 'test_tcp_cinfo(test_multikernelmanager.py)', '668': 'test_tcp_lifecycle_with_kernel_id(test_multikernelmanager.py)', '569': 'test_secure_write(test_connect.py)', '573': 'check_user_only_permissions(test_connect.py)', '574': 'fetch_win32_permissions(test_connect.py)', '563': 'test_find_connection_file_relative(test_connect.py)', '561': 'test_find_connection_file_abspath(test_connect.py)', '560': 'test_find_connection_file(test_connect.py)', '565': 'test_load_connection_file_session_with_kn(test_connect.py)', '441': 'Session(session.py)', '539': 'test_input_request(test_adapter.py)', '564': 'test_load_connection_file_session(test_connect.py)', '537': 'test_display_data(test_adapter.py)', '540': 'test_inspect_reply(test_adapter.py)', '543': 'test_kernel_info_reply(test_adapter.py)', '542': 'test_inspect_request_token(test_adapter.py)', '535': 'test_complete_reply(test_adapter.py)', '541': 'test_inspect_request(test_adapter.py)', '538': 'test_execute_request(test_adapter.py)', '545': 'test_rename_type(test_adapter.py)', '544': 'test_no_adapt(test_adapter.py)', '546': 'test_same_version(test_adapter.py)', '514': 'V5toV4TestCase(test_adapter.py)', '512': 'AdapterTest(test_adapter.py)', '526': 'test_input_request(test_adapter.py)', '523': 'test_display_data(test_adapter.py)', '527': 'test_kernel_info_reply(test_adapter.py)', '530': 'test_object_info_reply_not_found(test_adapter.py)', '529': 'test_object_info_reply(test_adapter.py)', '531': 'test_object_info_request(test_adapter.py)', '521': 'test_complete_reply(test_adapter.py)', '522': 'test_complete_request(test_adapter.py)', '524': 'test_execute_reply(test_adapter.py)', '532': 'test_rename_type(test_adapter.py)', '525': 'test_execute_request(test_adapter.py)', '528': 'test_no_adapt(test_adapter.py)', '533': 'test_same_version(test_adapter.py)', '513': 'V4toV5TestCase(test_adapter.py)', '519': 'setUp(test_adapter.py)', '516': 'test_default_version(test_adapter.py)', '515': 'test_code_to_line_no_code(test_adapter.py)', '51': 'code_to_line(adapter.py)', '704': 'execute(utils.py)', '158': 'get_shell_msg(client.py)', '615': 'execute(test_kernelmanager.py)', '157': 'get_iopub_msg(client.py)', '710': '__exit__(utils.py)', '709': '__enter__(utils.py)', '580': 'test_kernelapp_lifecycle(test_kernelapp.py)', '579': '_launch(test_kernelapp.py)', '686': 'test_clone(test_session.py)', '473': 'clone(session.py)', '695': 'test_send_raw(test_session.py)', '481': 'send_raw(session.py)', '483': 'sign(session.py)', '689': 'test_datetimes_msgpack(test_session.py)', '690': 'test_datetimes_pickle(test_session.py)', '688': 'test_datetimes(test_session.py)', '683': 'test_bad_roundtrip(test_session.py)', '685': 'test_bad_unpacker(test_session.py)', '682': 'test_bad_packer(test_session.py)', '681': 'test_bad_pack(test_session.py)', '675': '_bad_packer(test_session.py)', '687': 'test_cull_digest_history(test_session.py)', '700': 'test_zero_digest_history(test_session.py)', '697': 'test_session_id(test_session.py)', '699': 'test_unique_msg_ids(test_session.py)', '445': 'msg_header(session.py)', '698': 'test_tracking(test_session.py)', '680': 'test_args(test_session.py)', '478': 'msg_id(session.py)', '696': 'test_serialize(test_session.py)', '674': 'TestSession(test_session.py)', '673': 'SessionTestCase(test_session.py)', '678': 'setUp(test_session.py)', '556': 'test_shutdown(test_client.py)', '548': '_check_reply(test_client.py)', '550': 'test_comm_info(test_client.py)', '555': 'test_kernel_info(test_client.py)', '551': 'test_complete(test_client.py)', '554': 'test_inspect(test_client.py)', '553': 'test_history(test_client.py)', '549': 'setUp(test_client.py)', '255': 'NoSuchKernel(kernelspec.py)', '117': 'reqrep(client.py)', '124': 'wrapped(client.py)', '123': 'wait_for_ready(client.py)', '150': '_handle_kernel_info_reply(client.py)', '125': 'HBChannel(channels.py)', '104': 'wait_for_ready(client.py)', '102': 'hb_channel(client.py)', '196': '_make_url(connect.py)', '91': 'reqrep(client.py)', '105': 'wrapped(client.py)', '80': 'ZMQSocketChannel(channels.py)', '154': 'control_channel(client.py)', '723': 'ioloop(threaded.py)', '160': 'hb_channel(client.py)', '171': 'stdin_channel(client.py)', '164': 'iopub_channel(client.py)', '168': 'shell_channel(client.py)', '328': 'interrupt_kernel(manager.py)', '740': 'send_interrupt(win_interrupt.py)', '334': '__del__(manager.py)', '293': 'start(kernelspecapp.py)', '294': 'path_key(kernelspecapp.py)', '735': 'start(threaded.py)', '720': 'start(threaded.py)', '141': 'start(channelsabc.py)', '432': 'start(restarter.py)', '288': 'start(kernelspecapp.py)', '89': 'start(channels.py)', '115': 'start(channels.py)', '290': 'start(kernelspecapp.py)', '438': 'parse_command_line(runapp.py)', '218': 'build_kernel_argv(consoleapp.py)', '308': '_only_once(localinterfaces.py)', '317': 'wrapped(localinterfaces.py)', '47': 'V4toV5(adapter.py)', '46': 'Adapter(adapter.py)', '77': 'object_info_request(adapter.py)', '52': 'extract_oname_v4(adapter.py)', '70': 'complete_request(adapter.py)', '75': 'kernel_info_reply(adapter.py)', '49': '_version_str_to_list(adapter.py)', '48': 'V5toV4(adapter.py)', '53': '__call__(adapter.py)', '54': 'handle_reply_status_error(adapter.py)', '57': 'update_msg_type(adapter.py)', '56': 'update_metadata(adapter.py)', '55': 'update_header(adapter.py)', '247': 'initialize(kernelapp.py)', '246': '_record_started(kernelapp.py)', '585': 'config(test_kernelmanager.py)', '262': 'install_native_kernel_spec(kernelspec.py)', '276': 'install_native_kernel_spec(kernelspec.py)', '265': 'to_json(kernelspec.py)', '264': 'to_dict(kernelspec.py)', '449': 'test_msg2obj(session.py)', '440': 'Message(session.py)', '453': '__init__(session.py)', '470': '_signature_scheme_changed(session.py)', '465': '_new_auth(session.py)', '463': '_key_default(session.py)', '447': 'new_id_bytes(session.py)', '462': '_key_changed(session.py)', '443': 'default_secure(session.py)', '469': '_session_default(session.py)', '446': 'new_id(session.py)', '412': 'is_alive(multikernelmanager.py)', '420': 'shutdown_all(multikernelmanager.py)', '413': 'list_kernel_ids(multikernelmanager.py)', '721': 'stop(threaded.py)', '140': 'is_alive(channelsabc.py)', '732': 'is_alive(threaded.py)', '112': 'is_alive(channels.py)', '86': 'is_alive(channels.py)', '724': 'start_channels(threaded.py)', '722': '_check_kernel_info_reply(threaded.py)', '716': '__init__(threaded.py)', '387': 'shutdown_kernel(multikernelmanager.py)', '416': 'remove_kernel(multikernelmanager.py)', '713': 'IOLoopThread(threaded.py)', '714': 'ThreadedKernelClient(threaded.py)', '715': 'ThreadedZMQSocketChannel(threaded.py)', '731': 'flush(threaded.py)', '727': '_flush(threaded.py)', '386': 'shutdown_all(multikernelmanager.py)', '418': 'request_shutdown(multikernelmanager.py)', '402': 'cleanup_resources(multikernelmanager.py)', '408': 'finish_shutdown(multikernelmanager.py)', '393': '__len__(multikernelmanager.py)', '421': 'shutdown_kernel(multikernelmanager.py)', '198': '_session_default(connect.py)', '298': 'launch_kernel(launcher.py)', '739': 'create_interrupt_event(win_interrupt.py)', '741': 'SECURITY_ATTRIBUTES(win_interrupt.py)', '215': '__init__(consoleapp.py)', '509': '__init__(signalkernel.py)', '278': '__init__(kernelspec.py)', '127': '__init__(channels.py)', '126': 'InvalidPortNumber(channels.py)', '107': '__init__(channels.py)', '81': '__init__(channels.py)', '392': '__init__(multikernelmanager.py)', '726': '__init__(threaded.py)', '737': 'setup_stream(threaded.py)', '728': '_handle_recv(threaded.py)', '729': 'call_handlers(threaded.py)', '136': 'stop(channels.py)', '133': 'is_beating(channels.py)', '135': 'run(channels.py)', '145': 'time_to_dead(channelsabc.py)', '131': 'call_handlers(channels.py)', '130': '_poll(channels.py)'}}, {'key': 1147, 'parent': 2191, 'tfidf_word': 'EP: 1147, Name: test_ipc_lifecycle &rarr; _get_ipc_km &rarr; __init__', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1151, 'parent': 2191, 'tfidf_word': 'EP: 1151, Name: test_ipc_cinfo &rarr; _get_ipc_km &rarr; __init__', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2101, 'parent': 2658, 'tfidf_word': 'pre duplicate error id new start kernel ', 'tfidf_method': 'pre_start_kernel start_kernel DuplicateKernelError new_kernel_id ', 'lda_word': ' kernel,start,pre,error,duplicate,', 'lda_method': ' pre_start_kernel,start_kernel,new_kernel_id,duplicatekernelerror,', 'lsi_word': ' kernel,start,pre,error,duplicate,', 'lsi_method': ' pre_start_kernel,start_kernel,duplicatekernelerror,new_kernel_id,', 'spm_method': ' ', 'text_summary': '', 'files_count': 1, 'files': ['multikernelmanager.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'423': 'start_kernel(multikernelmanager.py)', '415': 'pre_start_kernel(multikernelmanager.py)', '380': 'DuplicateKernelError(multikernelmanager.py)', '414': 'new_kernel_id(multikernelmanager.py)'}}, {'key': 2103, 'parent': 2658, 'tfidf_word': 'pre duplicate error id new start kernel ', 'tfidf_method': 'start_kernel pre_start_kernel DuplicateKernelError new_kernel_id ', 'lda_word': ' kernel,start,pre,error,duplicate,', 'lda_method': ' pre_start_kernel,start_kernel,duplicatekernelerror,new_kernel_id,', 'lsi_word': ' kernel,start,pre,duplicate,error,', 'lsi_method': ' pre_start_kernel,start_kernel,duplicatekernelerror,new_kernel_id,', 'spm_method': ' ', 'text_summary': '', 'files_count': 1, 'files': ['multikernelmanager.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'389': 'start_kernel(multikernelmanager.py)', '415': 'pre_start_kernel(multikernelmanager.py)', '380': 'DuplicateKernelError(multikernelmanager.py)', '414': 'new_kernel_id(multikernelmanager.py)'}}, {'key': 2653, 'parent': 2719, 'tfidf_word': 'poll callback execute fire start stop ', 'tfidf_method': 'poll start _fire_callbacks stop do_execute ', 'lda_word': ' poll,stop,fire,callback,start,', 'lda_method': ' poll,fire_callbacks,do_execute,start,stop,', 'lsi_word': ' poll,callback,fire,start,execute,', 'lsi_method': ' poll,stop,start,do_execute,fire_callbacks,', 'spm_method': ' ', 'text_summary': '', 'files_count': 2, 'files': ['restarter.py', 'signalkernel.py'], 'execution_path_count': 4, 'function_id_to_name_file': {'238': 'start(restarter.py)', '430': 'poll(restarter.py)', '433': 'stop(restarter.py)', '428': '_fire_callbacks(restarter.py)', '510': 'do_execute(signalkernel.py)'}}, {'key': 2706, 'parent': 2719, 'tfidf_word': 'name flush native permission cleanup io loop code restarter tunnel ', 'tfidf_method': 'test_default_version setUp extract_oname_v4 test_complete_reply test_complete_request test_display_data test_execute_reply test_execute_request SignalTestKernel reqrep ', 'lda_word': ' test,adapt,request,handle,shutdown,', 'lda_method': ' start,init,is_alive,adapt,stop_channels,', 'lsi_word': ' test,kernel,adapt,session,reply,', 'lsi_method': ' start,setup,shutdown,setup_signals,shutdown_handler,', 'spm_method': ' ', 'text_summary': "return ip for localhost (almost always 127.0.0.1)   Ensure that a sequence of kernel startups doesn't break anything. This method is called in the ioloop thread when a message arrives. Pass a message to the ZMQ socket to send. Return a list of the kernel ids of the active kernels. Return the connection info as a dict. Ensure that a sequence of kernel startups doesn't break anything. Launches a localhost kernel, binding to the specified ports. find a connection file, and return its absolute path. return ip for localhost (almost always 127.0.0.1)      find a connection file, and return its absolute path. tunnel connections to a kernel via ssh. For tests, create a file to indicate that we've started. test load_connection_file() after. handle kernel info reply. Get the hb channel object for this kernel. Send a raw message via ident path. Make a blocking client connected to my kernel. Immediately processes all pending messages on this channel. Shutdown all kernels. Return the number of running kernels. Interrupts the kernel by sending it a signal. Get a message from the shell channel. Create an ssh tunnel using command-line ssh that connects port lport. This is run in the ioloop thread when the kernel info reply is received. default function for packing datetime objects in JSON. Send a shutdown request via control channel. Get a message from the iopub channel. Sends an interrupt event using the specified handle. test that messages receive unique ids. Forgets randomly assigned port numbers and cleans up the connection file.", 'files_count': 34, 'files': ['connect.py', 'tunnel.py', 'test_session.py', 'session.py', 'forward.py', 'manager.py', 'test_connect.py', 'client.py', 'channels.py', 'restarter.py', 'kernelspecapp.py', 'kernelapp.py', 'threaded.py', 'managerabc.py', 'test_adapter.py', 'test_manager.py', 'kernelspec.py', 'test_jsonutil.py', 'jsonutil.py', 'test_kernelmanager.py', 'utils.py', 'test_kernelspec.py', 'signalkernel.py', 'test_multikernelmanager.py', 'localinterfaces.py', 'adapter.py', 'test_kernelapp.py', 'test_client.py', 'win_interrupt.py', 'channelsabc.py', 'runapp.py', 'consoleapp.py', 'multikernelmanager.py', 'launcher.py'], 'execution_path_count': 251, 'function_id_to_name_file': {'190': 'tunnel_to_kernel(connect.py)', '501': 'openssh_tunnel(tunnel.py)', '494': 'SSHException(tunnel.py)', '497': '_stop_tunnel(tunnel.py)', '694': 'test_send(test_session.py)', '479': 'recv(session.py)', '475': 'feed_identities(session.py)', '492': 'handle(forward.py)', '330': 'restart_kernel(manager.py)', '202': 'cleanup_random_ports(connect.py)', '200': 'cleanup_connection_file(connect.py)', '567': 'test_mixin_cleanup_random_ports(test_connect.py)', '90': 'AsyncKernelClient(client.py)', '106': 'ZMQSocketChannel(channels.py)', '109': 'close(channels.py)', '116': 'BlockingKernelClient(client.py)', '225': 'IOLoopKernelManager(manager.py)', '226': 'as_zmqstream(manager.py)', '233': 'wrapped(manager.py)', '224': 'AsyncIOLoopKernelManager(manager.py)', '568': 'test_mixin_record_random_ports(test_connect.py)', '557': 'DummyConfigurable(test_connect.py)', '188': 'ConnectionFileMixin(connect.py)', '235': 'IOLoopKernelRestarter(restarter.py)', '426': 'KernelRestarter(restarter.py)', '234': 'AsyncIOLoopKernelRestarter(restarter.py)', '291': 'start(kernelspecapp.py)', '251': 'start(kernelapp.py)', '249': 'setup_signals(kernelapp.py)', '252': 'shutdown_handler(kernelapp.py)', '250': 'shutdown(kernelapp.py)', '248': 'log_connection_info(kernelapp.py)', '199': 'blocking_client(connect.py)', '208': 'get_connection_info(connect.py)', '725': 'stop_channels(threaded.py)', '373': 'is_alive(managerabc.py)', '684': 'test_bad_unpack(test_session.py)', '676': '_bad_unpacker(test_session.py)', '536': 'test_complete_request(test_adapter.py)', '517': 'adapt(test_adapter.py)', '562': 'test_find_connection_file_local(test_connect.py)', '189': 'find_connection_file(connect.py)', '730': 'close(threaded.py)', '493': 'SubHander(forward.py)', '490': 'Handler(forward.py)', '635': 'test_connection_file_real_path(test_manager.py)', '253': 'KernelSpec(kernelspec.py)', '718': 'close(threaded.py)', '132': 'close(channels.py)', '114': 'send(channels.py)', '88': 'send(channels.py)', '83': 'close(channels.py)', '575': 'test_date_default(test_jsonutil.py)', '450': 'utcnow(session.py)', '241': 'date_default(jsonutil.py)', '240': '_ensure_tzinfo(jsonutil.py)', '597': 'test_subclasses(test_kernelmanager.py)', '703': 'AsyncKernelManagerWithCleanup(utils.py)', '595': 'test_signal_kernel_subprocesses(test_kernelmanager.py)', '598': 'execute(test_kernelmanager.py)', '702': 'AsyncKernelManagerSubclass(utils.py)', '611': 'test_start_parallel_process_kernels(test_kernelmanager.py)', '591': 'transport(test_kernelmanager.py)', '606': 'test_templated_kspec_env(test_kernelmanager.py)', '599': '_env_test_body(test_kernelmanager.py)', '607': 'execute(test_kernelmanager.py)', '612': 'test_start_parallel_thread_kernels(test_kernelmanager.py)', '604': 'test_signal_kernel_subprocesses(test_kernelmanager.py)', '608': 'execute(test_kernelmanager.py)', '586': 'env(test_kernelmanager.py)', '712': 'stop(utils.py)', '711': 'start(utils.py)', '705': 'test_env(utils.py)', '630': 'test_validate_kernel_name(test_kernelspec.py)', '257': '_is_valid_kernel_name(kernelspec.py)', '506': 'SignalTestApp(signalkernel.py)', '507': 'SignalTestKernel(signalkernel.py)', '627': 'test_remove_kernel_spec(test_kernelspec.py)', '617': '_install_sample_kernel(test_kernelspec.py)', '626': 'test_kernel_spec_priority(test_kernelspec.py)', '651': 'test_tcp_cinfo(test_multikernelmanager.py)', '640': '_run_cinfo(test_multikernelmanager.py)', '621': 'test_find_all_specs(test_kernelspec.py)', '622': 'test_find_kernel_specs(test_kernelspec.py)', '623': 'test_get_kernel_spec(test_kernelspec.py)', '619': 'tearDown(test_kernelspec.py)', '618': 'setUp(test_kernelspec.py)', '649': 'test_start_sequence_ipc_kernels(test_multikernelmanager.py)', '641': '_run_lifecycle(test_multikernelmanager.py)', '650': 'test_start_sequence_tcp_kernels(test_multikernelmanager.py)', '644': 'test_ipc_cinfo(test_multikernelmanager.py)', '315': 'localhost(localinterfaces.py)', '645': 'test_ipc_lifecycle(test_multikernelmanager.py)', '665': 'test_start_sequence_tcp_kernels(test_multikernelmanager.py)', '657': '_run_lifecycle(test_multikernelmanager.py)', '664': 'test_start_sequence_ipc_kernels(test_multikernelmanager.py)', '659': 'test_ipc_cinfo(test_multikernelmanager.py)', '656': '_run_cinfo(test_multikernelmanager.py)', '660': 'test_ipc_lifecycle(test_multikernelmanager.py)', '666': 'test_tcp_cinfo(test_multikernelmanager.py)', '668': 'test_tcp_lifecycle_with_kernel_id(test_multikernelmanager.py)', '569': 'test_secure_write(test_connect.py)', '573': 'check_user_only_permissions(test_connect.py)', '574': 'fetch_win32_permissions(test_connect.py)', '563': 'test_find_connection_file_relative(test_connect.py)', '561': 'test_find_connection_file_abspath(test_connect.py)', '560': 'test_find_connection_file(test_connect.py)', '565': 'test_load_connection_file_session_with_kn(test_connect.py)', '441': 'Session(session.py)', '539': 'test_input_request(test_adapter.py)', '564': 'test_load_connection_file_session(test_connect.py)', '537': 'test_display_data(test_adapter.py)', '540': 'test_inspect_reply(test_adapter.py)', '543': 'test_kernel_info_reply(test_adapter.py)', '542': 'test_inspect_request_token(test_adapter.py)', '535': 'test_complete_reply(test_adapter.py)', '541': 'test_inspect_request(test_adapter.py)', '538': 'test_execute_request(test_adapter.py)', '545': 'test_rename_type(test_adapter.py)', '544': 'test_no_adapt(test_adapter.py)', '546': 'test_same_version(test_adapter.py)', '514': 'V5toV4TestCase(test_adapter.py)', '512': 'AdapterTest(test_adapter.py)', '526': 'test_input_request(test_adapter.py)', '523': 'test_display_data(test_adapter.py)', '527': 'test_kernel_info_reply(test_adapter.py)', '530': 'test_object_info_reply_not_found(test_adapter.py)', '529': 'test_object_info_reply(test_adapter.py)', '531': 'test_object_info_request(test_adapter.py)', '521': 'test_complete_reply(test_adapter.py)', '522': 'test_complete_request(test_adapter.py)', '524': 'test_execute_reply(test_adapter.py)', '532': 'test_rename_type(test_adapter.py)', '525': 'test_execute_request(test_adapter.py)', '528': 'test_no_adapt(test_adapter.py)', '533': 'test_same_version(test_adapter.py)', '513': 'V4toV5TestCase(test_adapter.py)', '519': 'setUp(test_adapter.py)', '516': 'test_default_version(test_adapter.py)', '515': 'test_code_to_line_no_code(test_adapter.py)', '51': 'code_to_line(adapter.py)', '704': 'execute(utils.py)', '158': 'get_shell_msg(client.py)', '615': 'execute(test_kernelmanager.py)', '157': 'get_iopub_msg(client.py)', '710': '__exit__(utils.py)', '709': '__enter__(utils.py)', '580': 'test_kernelapp_lifecycle(test_kernelapp.py)', '579': '_launch(test_kernelapp.py)', '686': 'test_clone(test_session.py)', '473': 'clone(session.py)', '695': 'test_send_raw(test_session.py)', '481': 'send_raw(session.py)', '483': 'sign(session.py)', '689': 'test_datetimes_msgpack(test_session.py)', '690': 'test_datetimes_pickle(test_session.py)', '688': 'test_datetimes(test_session.py)', '683': 'test_bad_roundtrip(test_session.py)', '685': 'test_bad_unpacker(test_session.py)', '682': 'test_bad_packer(test_session.py)', '681': 'test_bad_pack(test_session.py)', '675': '_bad_packer(test_session.py)', '687': 'test_cull_digest_history(test_session.py)', '700': 'test_zero_digest_history(test_session.py)', '697': 'test_session_id(test_session.py)', '699': 'test_unique_msg_ids(test_session.py)', '445': 'msg_header(session.py)', '698': 'test_tracking(test_session.py)', '680': 'test_args(test_session.py)', '478': 'msg_id(session.py)', '696': 'test_serialize(test_session.py)', '674': 'TestSession(test_session.py)', '673': 'SessionTestCase(test_session.py)', '678': 'setUp(test_session.py)', '556': 'test_shutdown(test_client.py)', '548': '_check_reply(test_client.py)', '550': 'test_comm_info(test_client.py)', '555': 'test_kernel_info(test_client.py)', '551': 'test_complete(test_client.py)', '554': 'test_inspect(test_client.py)', '553': 'test_history(test_client.py)', '549': 'setUp(test_client.py)', '255': 'NoSuchKernel(kernelspec.py)', '117': 'reqrep(client.py)', '124': 'wrapped(client.py)', '123': 'wait_for_ready(client.py)', '150': '_handle_kernel_info_reply(client.py)', '125': 'HBChannel(channels.py)', '104': 'wait_for_ready(client.py)', '102': 'hb_channel(client.py)', '196': '_make_url(connect.py)', '91': 'reqrep(client.py)', '105': 'wrapped(client.py)', '80': 'ZMQSocketChannel(channels.py)', '154': 'control_channel(client.py)', '723': 'ioloop(threaded.py)', '160': 'hb_channel(client.py)', '171': 'stdin_channel(client.py)', '164': 'iopub_channel(client.py)', '168': 'shell_channel(client.py)', '328': 'interrupt_kernel(manager.py)', '740': 'send_interrupt(win_interrupt.py)', '334': '__del__(manager.py)', '293': 'start(kernelspecapp.py)', '294': 'path_key(kernelspecapp.py)', '735': 'start(threaded.py)', '720': 'start(threaded.py)', '141': 'start(channelsabc.py)', '432': 'start(restarter.py)', '288': 'start(kernelspecapp.py)', '89': 'start(channels.py)', '115': 'start(channels.py)', '290': 'start(kernelspecapp.py)', '438': 'parse_command_line(runapp.py)', '218': 'build_kernel_argv(consoleapp.py)', '308': '_only_once(localinterfaces.py)', '317': 'wrapped(localinterfaces.py)', '47': 'V4toV5(adapter.py)', '46': 'Adapter(adapter.py)', '77': 'object_info_request(adapter.py)', '52': 'extract_oname_v4(adapter.py)', '70': 'complete_request(adapter.py)', '75': 'kernel_info_reply(adapter.py)', '49': '_version_str_to_list(adapter.py)', '48': 'V5toV4(adapter.py)', '53': '__call__(adapter.py)', '54': 'handle_reply_status_error(adapter.py)', '57': 'update_msg_type(adapter.py)', '56': 'update_metadata(adapter.py)', '55': 'update_header(adapter.py)', '247': 'initialize(kernelapp.py)', '246': '_record_started(kernelapp.py)', '585': 'config(test_kernelmanager.py)', '262': 'install_native_kernel_spec(kernelspec.py)', '276': 'install_native_kernel_spec(kernelspec.py)', '265': 'to_json(kernelspec.py)', '264': 'to_dict(kernelspec.py)', '449': 'test_msg2obj(session.py)', '440': 'Message(session.py)', '453': '__init__(session.py)', '470': '_signature_scheme_changed(session.py)', '465': '_new_auth(session.py)', '463': '_key_default(session.py)', '447': 'new_id_bytes(session.py)', '462': '_key_changed(session.py)', '443': 'default_secure(session.py)', '469': '_session_default(session.py)', '446': 'new_id(session.py)', '412': 'is_alive(multikernelmanager.py)', '420': 'shutdown_all(multikernelmanager.py)', '413': 'list_kernel_ids(multikernelmanager.py)', '721': 'stop(threaded.py)', '140': 'is_alive(channelsabc.py)', '732': 'is_alive(threaded.py)', '112': 'is_alive(channels.py)', '86': 'is_alive(channels.py)', '724': 'start_channels(threaded.py)', '722': '_check_kernel_info_reply(threaded.py)', '716': '__init__(threaded.py)', '387': 'shutdown_kernel(multikernelmanager.py)', '416': 'remove_kernel(multikernelmanager.py)', '713': 'IOLoopThread(threaded.py)', '714': 'ThreadedKernelClient(threaded.py)', '715': 'ThreadedZMQSocketChannel(threaded.py)', '731': 'flush(threaded.py)', '727': '_flush(threaded.py)', '386': 'shutdown_all(multikernelmanager.py)', '418': 'request_shutdown(multikernelmanager.py)', '402': 'cleanup_resources(multikernelmanager.py)', '408': 'finish_shutdown(multikernelmanager.py)', '393': '__len__(multikernelmanager.py)', '421': 'shutdown_kernel(multikernelmanager.py)', '198': '_session_default(connect.py)', '298': 'launch_kernel(launcher.py)', '739': 'create_interrupt_event(win_interrupt.py)', '741': 'SECURITY_ATTRIBUTES(win_interrupt.py)', '215': '__init__(consoleapp.py)', '509': '__init__(signalkernel.py)', '278': '__init__(kernelspec.py)', '127': '__init__(channels.py)', '126': 'InvalidPortNumber(channels.py)', '107': '__init__(channels.py)', '81': '__init__(channels.py)', '392': '__init__(multikernelmanager.py)', '726': '__init__(threaded.py)', '737': 'setup_stream(threaded.py)', '728': '_handle_recv(threaded.py)', '729': 'call_handlers(threaded.py)', '136': 'stop(channels.py)', '133': 'is_beating(channels.py)', '135': 'run(channels.py)', '145': 'time_to_dead(channelsabc.py)', '131': 'call_handlers(channels.py)', '130': '_poll(channels.py)'}}, {'key': 70, 'parent': 2101, 'tfidf_word': 'EP: 70, Name: start_kernel &rarr; pre_start_kernel &rarr; DuplicateKernelError', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 71, 'parent': 2101, 'tfidf_word': 'EP: 71, Name: start_kernel &rarr; pre_start_kernel &rarr; new_kernel_id', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 79, 'parent': 2103, 'tfidf_word': 'EP: 79, Name: start_kernel &rarr; pre_start_kernel &rarr; DuplicateKernelError', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 80, 'parent': 2103, 'tfidf_word': 'EP: 80, Name: start_kernel &rarr; pre_start_kernel &rarr; new_kernel_id', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2137, 'parent': 2653, 'tfidf_word': 'poll start callback fire stop ', 'tfidf_method': 'start poll _fire_callbacks stop ', 'lda_word': ' start,poll,fire,stop,callback,', 'lda_method': ' start,poll,stop,fire_callbacks,', 'lsi_word': ' poll,start,callback,fire,stop,', 'lsi_method': ' poll,start,fire_callbacks,stop,', 'spm_method': ' ', 'text_summary': '', 'files_count': 1, 'files': ['restarter.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'238': 'start(restarter.py)', '430': 'poll(restarter.py)', '433': 'stop(restarter.py)', '428': '_fire_callbacks(restarter.py)'}}, {'key': 2216, 'parent': 2653, 'tfidf_word': 'execute poll callback fire stop ', 'tfidf_method': 'poll do_execute _fire_callbacks stop ', 'lda_word': ' poll,execute,stop,fire,callback,', 'lda_method': ' do_execute,poll,stop,fire_callbacks,', 'lsi_word': ' execute,poll,callback,fire,stop,', 'lsi_method': ' poll,do_execute,stop,fire_callbacks,', 'spm_method': ' ', 'text_summary': '', 'files_count': 2, 'files': ['signalkernel.py', 'restarter.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'510': 'do_execute(signalkernel.py)', '430': 'poll(restarter.py)', '433': 'stop(restarter.py)', '428': '_fire_callbacks(restarter.py)'}}, {'key': 2096, 'parent': 2706, 'tfidf_word': 'kernel openssh exception ssh stop tunnel ', 'tfidf_method': 'tunnel_to_kernel openssh_tunnel SSHException _stop_tunnel ', 'lda_word': ' tunnel,openssh,kernel,ssh,exception,', 'lda_method': ' openssh_tunnel,tunnel_to_kernel,sshexception,stop_tunnel,', 'lsi_word': ' tunnel,kernel,openssh,stop,ssh,', 'lsi_method': ' openssh_tunnel,tunnel_to_kernel,stop_tunnel,sshexception,', 'spm_method': ' ', 'text_summary': '', 'files_count': 2, 'files': ['connect.py', 'tunnel.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'190': 'tunnel_to_kernel(connect.py)', '501': 'openssh_tunnel(tunnel.py)', '494': 'SSHException(tunnel.py)', '497': '_stop_tunnel(tunnel.py)'}}, {'key': 2705, 'parent': 2706, 'tfidf_word': 'clone name flush native permission loop cleanup io code restarter ', 'tfidf_method': 'test_default_version setUp extract_oname_v4 test_complete_reply test_complete_request test_display_data test_execute_reply test_execute_request test_kernel_info_reply reqrep ', 'lda_word': ' start,test,session,connection,file,', 'lda_method': ' execute,session,run_lifecycle,feed_identities,test_tcp_cinfo,', 'lsi_word': ' test,kernel,adapt,session,reply,', 'lsi_method': ' start,setup,shutdown,setup_signals,shutdown_handler,', 'spm_method': ' ', 'text_summary': "return ip for localhost (almost always 127.0.0.1)   Ensure that a sequence of kernel startups doesn't break anything. This method is called in the ioloop thread when a message arrives. Pass a message to the ZMQ socket to send. Return a list of the kernel ids of the active kernels. Return the connection info as a dict. Ensure that a sequence of kernel startups doesn't break anything. Launches a localhost kernel, binding to the specified ports. find a connection file, and return its absolute path. return ip for localhost (almost always 127.0.0.1)      find a connection file, and return its absolute path. For tests, create a file to indicate that we've started. test load_connection_file() after. handle kernel info reply. Get the hb channel object for this kernel. Send a raw message via ident path. Make a blocking client connected to my kernel. Immediately processes all pending messages on this channel. Shutdown all kernels. Return the number of running kernels. Interrupts the kernel by sending it a signal. Get a message from the shell channel. This is run in the ioloop thread when the kernel info reply is received. default function for packing datetime objects in JSON. Send a shutdown request via control channel. Get a message from the iopub channel. Sends an interrupt event using the specified handle. test that messages receive unique ids. Forgets randomly assigned port numbers and cleans up the connection file.", 'files_count': 33, 'files': ['test_session.py', 'session.py', 'forward.py', 'manager.py', 'connect.py', 'test_connect.py', 'client.py', 'channels.py', 'restarter.py', 'kernelspecapp.py', 'kernelapp.py', 'threaded.py', 'managerabc.py', 'test_adapter.py', 'test_manager.py', 'kernelspec.py', 'test_jsonutil.py', 'jsonutil.py', 'test_kernelmanager.py', 'utils.py', 'test_kernelspec.py', 'signalkernel.py', 'test_multikernelmanager.py', 'localinterfaces.py', 'adapter.py', 'test_kernelapp.py', 'test_client.py', 'win_interrupt.py', 'channelsabc.py', 'runapp.py', 'consoleapp.py', 'multikernelmanager.py', 'launcher.py'], 'execution_path_count': 249, 'function_id_to_name_file': {'694': 'test_send(test_session.py)', '479': 'recv(session.py)', '475': 'feed_identities(session.py)', '492': 'handle(forward.py)', '330': 'restart_kernel(manager.py)', '202': 'cleanup_random_ports(connect.py)', '200': 'cleanup_connection_file(connect.py)', '567': 'test_mixin_cleanup_random_ports(test_connect.py)', '90': 'AsyncKernelClient(client.py)', '106': 'ZMQSocketChannel(channels.py)', '109': 'close(channels.py)', '116': 'BlockingKernelClient(client.py)', '225': 'IOLoopKernelManager(manager.py)', '226': 'as_zmqstream(manager.py)', '233': 'wrapped(manager.py)', '224': 'AsyncIOLoopKernelManager(manager.py)', '568': 'test_mixin_record_random_ports(test_connect.py)', '557': 'DummyConfigurable(test_connect.py)', '188': 'ConnectionFileMixin(connect.py)', '235': 'IOLoopKernelRestarter(restarter.py)', '426': 'KernelRestarter(restarter.py)', '234': 'AsyncIOLoopKernelRestarter(restarter.py)', '291': 'start(kernelspecapp.py)', '251': 'start(kernelapp.py)', '249': 'setup_signals(kernelapp.py)', '252': 'shutdown_handler(kernelapp.py)', '250': 'shutdown(kernelapp.py)', '248': 'log_connection_info(kernelapp.py)', '199': 'blocking_client(connect.py)', '208': 'get_connection_info(connect.py)', '725': 'stop_channels(threaded.py)', '373': 'is_alive(managerabc.py)', '684': 'test_bad_unpack(test_session.py)', '676': '_bad_unpacker(test_session.py)', '536': 'test_complete_request(test_adapter.py)', '517': 'adapt(test_adapter.py)', '562': 'test_find_connection_file_local(test_connect.py)', '189': 'find_connection_file(connect.py)', '730': 'close(threaded.py)', '493': 'SubHander(forward.py)', '490': 'Handler(forward.py)', '635': 'test_connection_file_real_path(test_manager.py)', '253': 'KernelSpec(kernelspec.py)', '718': 'close(threaded.py)', '132': 'close(channels.py)', '114': 'send(channels.py)', '88': 'send(channels.py)', '83': 'close(channels.py)', '575': 'test_date_default(test_jsonutil.py)', '450': 'utcnow(session.py)', '241': 'date_default(jsonutil.py)', '240': '_ensure_tzinfo(jsonutil.py)', '597': 'test_subclasses(test_kernelmanager.py)', '703': 'AsyncKernelManagerWithCleanup(utils.py)', '595': 'test_signal_kernel_subprocesses(test_kernelmanager.py)', '598': 'execute(test_kernelmanager.py)', '702': 'AsyncKernelManagerSubclass(utils.py)', '611': 'test_start_parallel_process_kernels(test_kernelmanager.py)', '591': 'transport(test_kernelmanager.py)', '606': 'test_templated_kspec_env(test_kernelmanager.py)', '599': '_env_test_body(test_kernelmanager.py)', '607': 'execute(test_kernelmanager.py)', '612': 'test_start_parallel_thread_kernels(test_kernelmanager.py)', '604': 'test_signal_kernel_subprocesses(test_kernelmanager.py)', '608': 'execute(test_kernelmanager.py)', '586': 'env(test_kernelmanager.py)', '712': 'stop(utils.py)', '711': 'start(utils.py)', '705': 'test_env(utils.py)', '630': 'test_validate_kernel_name(test_kernelspec.py)', '257': '_is_valid_kernel_name(kernelspec.py)', '506': 'SignalTestApp(signalkernel.py)', '507': 'SignalTestKernel(signalkernel.py)', '627': 'test_remove_kernel_spec(test_kernelspec.py)', '617': '_install_sample_kernel(test_kernelspec.py)', '626': 'test_kernel_spec_priority(test_kernelspec.py)', '651': 'test_tcp_cinfo(test_multikernelmanager.py)', '640': '_run_cinfo(test_multikernelmanager.py)', '621': 'test_find_all_specs(test_kernelspec.py)', '622': 'test_find_kernel_specs(test_kernelspec.py)', '623': 'test_get_kernel_spec(test_kernelspec.py)', '619': 'tearDown(test_kernelspec.py)', '618': 'setUp(test_kernelspec.py)', '649': 'test_start_sequence_ipc_kernels(test_multikernelmanager.py)', '641': '_run_lifecycle(test_multikernelmanager.py)', '650': 'test_start_sequence_tcp_kernels(test_multikernelmanager.py)', '644': 'test_ipc_cinfo(test_multikernelmanager.py)', '315': 'localhost(localinterfaces.py)', '645': 'test_ipc_lifecycle(test_multikernelmanager.py)', '665': 'test_start_sequence_tcp_kernels(test_multikernelmanager.py)', '657': '_run_lifecycle(test_multikernelmanager.py)', '664': 'test_start_sequence_ipc_kernels(test_multikernelmanager.py)', '659': 'test_ipc_cinfo(test_multikernelmanager.py)', '656': '_run_cinfo(test_multikernelmanager.py)', '660': 'test_ipc_lifecycle(test_multikernelmanager.py)', '666': 'test_tcp_cinfo(test_multikernelmanager.py)', '668': 'test_tcp_lifecycle_with_kernel_id(test_multikernelmanager.py)', '569': 'test_secure_write(test_connect.py)', '573': 'check_user_only_permissions(test_connect.py)', '574': 'fetch_win32_permissions(test_connect.py)', '563': 'test_find_connection_file_relative(test_connect.py)', '561': 'test_find_connection_file_abspath(test_connect.py)', '560': 'test_find_connection_file(test_connect.py)', '565': 'test_load_connection_file_session_with_kn(test_connect.py)', '441': 'Session(session.py)', '539': 'test_input_request(test_adapter.py)', '564': 'test_load_connection_file_session(test_connect.py)', '537': 'test_display_data(test_adapter.py)', '540': 'test_inspect_reply(test_adapter.py)', '543': 'test_kernel_info_reply(test_adapter.py)', '542': 'test_inspect_request_token(test_adapter.py)', '535': 'test_complete_reply(test_adapter.py)', '541': 'test_inspect_request(test_adapter.py)', '538': 'test_execute_request(test_adapter.py)', '545': 'test_rename_type(test_adapter.py)', '544': 'test_no_adapt(test_adapter.py)', '546': 'test_same_version(test_adapter.py)', '514': 'V5toV4TestCase(test_adapter.py)', '512': 'AdapterTest(test_adapter.py)', '526': 'test_input_request(test_adapter.py)', '523': 'test_display_data(test_adapter.py)', '527': 'test_kernel_info_reply(test_adapter.py)', '530': 'test_object_info_reply_not_found(test_adapter.py)', '529': 'test_object_info_reply(test_adapter.py)', '531': 'test_object_info_request(test_adapter.py)', '521': 'test_complete_reply(test_adapter.py)', '522': 'test_complete_request(test_adapter.py)', '524': 'test_execute_reply(test_adapter.py)', '532': 'test_rename_type(test_adapter.py)', '525': 'test_execute_request(test_adapter.py)', '528': 'test_no_adapt(test_adapter.py)', '533': 'test_same_version(test_adapter.py)', '513': 'V4toV5TestCase(test_adapter.py)', '519': 'setUp(test_adapter.py)', '516': 'test_default_version(test_adapter.py)', '515': 'test_code_to_line_no_code(test_adapter.py)', '51': 'code_to_line(adapter.py)', '704': 'execute(utils.py)', '158': 'get_shell_msg(client.py)', '615': 'execute(test_kernelmanager.py)', '157': 'get_iopub_msg(client.py)', '710': '__exit__(utils.py)', '709': '__enter__(utils.py)', '580': 'test_kernelapp_lifecycle(test_kernelapp.py)', '579': '_launch(test_kernelapp.py)', '686': 'test_clone(test_session.py)', '473': 'clone(session.py)', '695': 'test_send_raw(test_session.py)', '481': 'send_raw(session.py)', '483': 'sign(session.py)', '689': 'test_datetimes_msgpack(test_session.py)', '690': 'test_datetimes_pickle(test_session.py)', '688': 'test_datetimes(test_session.py)', '683': 'test_bad_roundtrip(test_session.py)', '685': 'test_bad_unpacker(test_session.py)', '682': 'test_bad_packer(test_session.py)', '681': 'test_bad_pack(test_session.py)', '675': '_bad_packer(test_session.py)', '687': 'test_cull_digest_history(test_session.py)', '700': 'test_zero_digest_history(test_session.py)', '697': 'test_session_id(test_session.py)', '699': 'test_unique_msg_ids(test_session.py)', '445': 'msg_header(session.py)', '698': 'test_tracking(test_session.py)', '680': 'test_args(test_session.py)', '478': 'msg_id(session.py)', '696': 'test_serialize(test_session.py)', '674': 'TestSession(test_session.py)', '673': 'SessionTestCase(test_session.py)', '678': 'setUp(test_session.py)', '556': 'test_shutdown(test_client.py)', '548': '_check_reply(test_client.py)', '550': 'test_comm_info(test_client.py)', '555': 'test_kernel_info(test_client.py)', '551': 'test_complete(test_client.py)', '554': 'test_inspect(test_client.py)', '553': 'test_history(test_client.py)', '549': 'setUp(test_client.py)', '255': 'NoSuchKernel(kernelspec.py)', '117': 'reqrep(client.py)', '124': 'wrapped(client.py)', '123': 'wait_for_ready(client.py)', '150': '_handle_kernel_info_reply(client.py)', '125': 'HBChannel(channels.py)', '104': 'wait_for_ready(client.py)', '102': 'hb_channel(client.py)', '196': '_make_url(connect.py)', '91': 'reqrep(client.py)', '105': 'wrapped(client.py)', '80': 'ZMQSocketChannel(channels.py)', '154': 'control_channel(client.py)', '723': 'ioloop(threaded.py)', '160': 'hb_channel(client.py)', '171': 'stdin_channel(client.py)', '164': 'iopub_channel(client.py)', '168': 'shell_channel(client.py)', '328': 'interrupt_kernel(manager.py)', '740': 'send_interrupt(win_interrupt.py)', '334': '__del__(manager.py)', '293': 'start(kernelspecapp.py)', '294': 'path_key(kernelspecapp.py)', '735': 'start(threaded.py)', '720': 'start(threaded.py)', '141': 'start(channelsabc.py)', '432': 'start(restarter.py)', '288': 'start(kernelspecapp.py)', '89': 'start(channels.py)', '115': 'start(channels.py)', '290': 'start(kernelspecapp.py)', '438': 'parse_command_line(runapp.py)', '218': 'build_kernel_argv(consoleapp.py)', '308': '_only_once(localinterfaces.py)', '317': 'wrapped(localinterfaces.py)', '47': 'V4toV5(adapter.py)', '46': 'Adapter(adapter.py)', '77': 'object_info_request(adapter.py)', '52': 'extract_oname_v4(adapter.py)', '70': 'complete_request(adapter.py)', '75': 'kernel_info_reply(adapter.py)', '49': '_version_str_to_list(adapter.py)', '48': 'V5toV4(adapter.py)', '53': '__call__(adapter.py)', '54': 'handle_reply_status_error(adapter.py)', '57': 'update_msg_type(adapter.py)', '56': 'update_metadata(adapter.py)', '55': 'update_header(adapter.py)', '247': 'initialize(kernelapp.py)', '246': '_record_started(kernelapp.py)', '585': 'config(test_kernelmanager.py)', '262': 'install_native_kernel_spec(kernelspec.py)', '276': 'install_native_kernel_spec(kernelspec.py)', '265': 'to_json(kernelspec.py)', '264': 'to_dict(kernelspec.py)', '449': 'test_msg2obj(session.py)', '440': 'Message(session.py)', '453': '__init__(session.py)', '470': '_signature_scheme_changed(session.py)', '465': '_new_auth(session.py)', '463': '_key_default(session.py)', '447': 'new_id_bytes(session.py)', '462': '_key_changed(session.py)', '443': 'default_secure(session.py)', '469': '_session_default(session.py)', '446': 'new_id(session.py)', '412': 'is_alive(multikernelmanager.py)', '420': 'shutdown_all(multikernelmanager.py)', '413': 'list_kernel_ids(multikernelmanager.py)', '721': 'stop(threaded.py)', '140': 'is_alive(channelsabc.py)', '732': 'is_alive(threaded.py)', '112': 'is_alive(channels.py)', '86': 'is_alive(channels.py)', '724': 'start_channels(threaded.py)', '722': '_check_kernel_info_reply(threaded.py)', '716': '__init__(threaded.py)', '387': 'shutdown_kernel(multikernelmanager.py)', '416': 'remove_kernel(multikernelmanager.py)', '713': 'IOLoopThread(threaded.py)', '714': 'ThreadedKernelClient(threaded.py)', '715': 'ThreadedZMQSocketChannel(threaded.py)', '731': 'flush(threaded.py)', '727': '_flush(threaded.py)', '386': 'shutdown_all(multikernelmanager.py)', '418': 'request_shutdown(multikernelmanager.py)', '402': 'cleanup_resources(multikernelmanager.py)', '408': 'finish_shutdown(multikernelmanager.py)', '393': '__len__(multikernelmanager.py)', '421': 'shutdown_kernel(multikernelmanager.py)', '198': '_session_default(connect.py)', '298': 'launch_kernel(launcher.py)', '739': 'create_interrupt_event(win_interrupt.py)', '741': 'SECURITY_ATTRIBUTES(win_interrupt.py)', '215': '__init__(consoleapp.py)', '509': '__init__(signalkernel.py)', '278': '__init__(kernelspec.py)', '127': '__init__(channels.py)', '126': 'InvalidPortNumber(channels.py)', '107': '__init__(channels.py)', '81': '__init__(channels.py)', '392': '__init__(multikernelmanager.py)', '726': '__init__(threaded.py)', '737': 'setup_stream(threaded.py)', '728': '_handle_recv(threaded.py)', '729': 'call_handlers(threaded.py)', '136': 'stop(channels.py)', '133': 'is_beating(channels.py)', '135': 'run(channels.py)', '145': 'time_to_dead(channelsabc.py)', '131': 'call_handlers(channels.py)', '130': '_poll(channels.py)'}}, {'key': 594, 'parent': 2137, 'tfidf_word': 'EP: 594, Name: start &rarr; poll &rarr; stop', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 595, 'parent': 2137, 'tfidf_word': 'EP: 595, Name: start &rarr; poll &rarr; _fire_callbacks', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1331, 'parent': 2216, 'tfidf_word': 'EP: 1331, Name: do_execute &rarr; poll &rarr; stop', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1332, 'parent': 2216, 'tfidf_word': 'EP: 1332, Name: do_execute &rarr; poll &rarr; _fire_callbacks', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 52, 'parent': 2096, 'tfidf_word': 'EP: 52, Name: tunnel_to_kernel &rarr; openssh_tunnel &rarr; SSHException', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 53, 'parent': 2096, 'tfidf_word': 'EP: 53, Name: tunnel_to_kernel &rarr; openssh_tunnel &rarr; _stop_tunnel', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2156, 'parent': 2705, 'tfidf_word': 'feed identity recv handle send test ', 'tfidf_method': 'feed_identities recv handle test_send ', 'lda_word': ' recv,identity,handle,feed,test,', 'lda_method': ' feed_identities,recv,test_send,handle,', 'lsi_word': ' feed,identity,recv,send,test,', 'lsi_method': ' feed_identities,recv,handle,test_send,', 'spm_method': ' ', 'text_summary': '', 'files_count': 3, 'files': ['test_session.py', 'session.py', 'forward.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'694': 'test_send(test_session.py)', '479': 'recv(session.py)', '475': 'feed_identities(session.py)', '492': 'handle(forward.py)'}}, {'key': 2704, 'parent': 2705, 'tfidf_word': 'clone name flush native permission loop cleanup io code restarter ', 'tfidf_method': 'test_default_version setUp extract_oname_v4 test_complete_reply test_complete_request test_display_data test_execute_reply test_execute_request test_kernel_info_reply reqrep ', 'lda_word': ' test,init,alive,stop,reply,', 'lda_method': ' start,is_beating,is_alive,close,adapt,', 'lsi_word': ' test,kernel,adapt,session,reply,', 'lsi_method': ' start,setup,shutdown,setup_signals,shutdown_handler,', 'spm_method': ' ', 'text_summary': "return ip for localhost (almost always 127.0.0.1)   Ensure that a sequence of kernel startups doesn't break anything. This method is called in the ioloop thread when a message arrives. Pass a message to the ZMQ socket to send. Return a list of the kernel ids of the active kernels. Return the connection info as a dict. Ensure that a sequence of kernel startups doesn't break anything. Launches a localhost kernel, binding to the specified ports. find a connection file, and return its absolute path. return ip for localhost (almost always 127.0.0.1)      find a connection file, and return its absolute path. For tests, create a file to indicate that we've started. test load_connection_file() after. handle kernel info reply. Get the hb channel object for this kernel. Send a raw message via ident path. Make a blocking client connected to my kernel. Immediately processes all pending messages on this channel. Shutdown all kernels. Return the number of running kernels. Interrupts the kernel by sending it a signal. Get a message from the shell channel. This is run in the ioloop thread when the kernel info reply is received. default function for packing datetime objects in JSON. Send a shutdown request via control channel. Get a message from the iopub channel. Sends an interrupt event using the specified handle. test that messages receive unique ids. Forgets randomly assigned port numbers and cleans up the connection file.", 'files_count': 33, 'files': ['manager.py', 'connect.py', 'test_connect.py', 'client.py', 'channels.py', 'restarter.py', 'kernelspecapp.py', 'kernelapp.py', 'threaded.py', 'managerabc.py', 'test_session.py', 'test_adapter.py', 'forward.py', 'test_manager.py', 'kernelspec.py', 'test_jsonutil.py', 'session.py', 'jsonutil.py', 'test_kernelmanager.py', 'utils.py', 'test_kernelspec.py', 'signalkernel.py', 'test_multikernelmanager.py', 'localinterfaces.py', 'adapter.py', 'test_kernelapp.py', 'test_client.py', 'win_interrupt.py', 'channelsabc.py', 'runapp.py', 'consoleapp.py', 'multikernelmanager.py', 'launcher.py'], 'execution_path_count': 247, 'function_id_to_name_file': {'330': 'restart_kernel(manager.py)', '202': 'cleanup_random_ports(connect.py)', '200': 'cleanup_connection_file(connect.py)', '567': 'test_mixin_cleanup_random_ports(test_connect.py)', '90': 'AsyncKernelClient(client.py)', '106': 'ZMQSocketChannel(channels.py)', '109': 'close(channels.py)', '116': 'BlockingKernelClient(client.py)', '225': 'IOLoopKernelManager(manager.py)', '226': 'as_zmqstream(manager.py)', '233': 'wrapped(manager.py)', '224': 'AsyncIOLoopKernelManager(manager.py)', '568': 'test_mixin_record_random_ports(test_connect.py)', '557': 'DummyConfigurable(test_connect.py)', '188': 'ConnectionFileMixin(connect.py)', '235': 'IOLoopKernelRestarter(restarter.py)', '426': 'KernelRestarter(restarter.py)', '234': 'AsyncIOLoopKernelRestarter(restarter.py)', '291': 'start(kernelspecapp.py)', '251': 'start(kernelapp.py)', '249': 'setup_signals(kernelapp.py)', '252': 'shutdown_handler(kernelapp.py)', '250': 'shutdown(kernelapp.py)', '248': 'log_connection_info(kernelapp.py)', '199': 'blocking_client(connect.py)', '208': 'get_connection_info(connect.py)', '725': 'stop_channels(threaded.py)', '373': 'is_alive(managerabc.py)', '684': 'test_bad_unpack(test_session.py)', '676': '_bad_unpacker(test_session.py)', '536': 'test_complete_request(test_adapter.py)', '517': 'adapt(test_adapter.py)', '562': 'test_find_connection_file_local(test_connect.py)', '189': 'find_connection_file(connect.py)', '492': 'handle(forward.py)', '730': 'close(threaded.py)', '493': 'SubHander(forward.py)', '490': 'Handler(forward.py)', '635': 'test_connection_file_real_path(test_manager.py)', '253': 'KernelSpec(kernelspec.py)', '718': 'close(threaded.py)', '132': 'close(channels.py)', '114': 'send(channels.py)', '88': 'send(channels.py)', '83': 'close(channels.py)', '575': 'test_date_default(test_jsonutil.py)', '450': 'utcnow(session.py)', '241': 'date_default(jsonutil.py)', '240': '_ensure_tzinfo(jsonutil.py)', '597': 'test_subclasses(test_kernelmanager.py)', '703': 'AsyncKernelManagerWithCleanup(utils.py)', '595': 'test_signal_kernel_subprocesses(test_kernelmanager.py)', '598': 'execute(test_kernelmanager.py)', '702': 'AsyncKernelManagerSubclass(utils.py)', '611': 'test_start_parallel_process_kernels(test_kernelmanager.py)', '591': 'transport(test_kernelmanager.py)', '606': 'test_templated_kspec_env(test_kernelmanager.py)', '599': '_env_test_body(test_kernelmanager.py)', '607': 'execute(test_kernelmanager.py)', '612': 'test_start_parallel_thread_kernels(test_kernelmanager.py)', '604': 'test_signal_kernel_subprocesses(test_kernelmanager.py)', '608': 'execute(test_kernelmanager.py)', '586': 'env(test_kernelmanager.py)', '712': 'stop(utils.py)', '711': 'start(utils.py)', '705': 'test_env(utils.py)', '630': 'test_validate_kernel_name(test_kernelspec.py)', '257': '_is_valid_kernel_name(kernelspec.py)', '506': 'SignalTestApp(signalkernel.py)', '507': 'SignalTestKernel(signalkernel.py)', '627': 'test_remove_kernel_spec(test_kernelspec.py)', '617': '_install_sample_kernel(test_kernelspec.py)', '626': 'test_kernel_spec_priority(test_kernelspec.py)', '651': 'test_tcp_cinfo(test_multikernelmanager.py)', '640': '_run_cinfo(test_multikernelmanager.py)', '621': 'test_find_all_specs(test_kernelspec.py)', '622': 'test_find_kernel_specs(test_kernelspec.py)', '623': 'test_get_kernel_spec(test_kernelspec.py)', '619': 'tearDown(test_kernelspec.py)', '618': 'setUp(test_kernelspec.py)', '649': 'test_start_sequence_ipc_kernels(test_multikernelmanager.py)', '641': '_run_lifecycle(test_multikernelmanager.py)', '650': 'test_start_sequence_tcp_kernels(test_multikernelmanager.py)', '644': 'test_ipc_cinfo(test_multikernelmanager.py)', '315': 'localhost(localinterfaces.py)', '645': 'test_ipc_lifecycle(test_multikernelmanager.py)', '665': 'test_start_sequence_tcp_kernels(test_multikernelmanager.py)', '657': '_run_lifecycle(test_multikernelmanager.py)', '664': 'test_start_sequence_ipc_kernels(test_multikernelmanager.py)', '659': 'test_ipc_cinfo(test_multikernelmanager.py)', '656': '_run_cinfo(test_multikernelmanager.py)', '660': 'test_ipc_lifecycle(test_multikernelmanager.py)', '666': 'test_tcp_cinfo(test_multikernelmanager.py)', '668': 'test_tcp_lifecycle_with_kernel_id(test_multikernelmanager.py)', '569': 'test_secure_write(test_connect.py)', '573': 'check_user_only_permissions(test_connect.py)', '574': 'fetch_win32_permissions(test_connect.py)', '563': 'test_find_connection_file_relative(test_connect.py)', '561': 'test_find_connection_file_abspath(test_connect.py)', '560': 'test_find_connection_file(test_connect.py)', '565': 'test_load_connection_file_session_with_kn(test_connect.py)', '441': 'Session(session.py)', '539': 'test_input_request(test_adapter.py)', '564': 'test_load_connection_file_session(test_connect.py)', '537': 'test_display_data(test_adapter.py)', '540': 'test_inspect_reply(test_adapter.py)', '543': 'test_kernel_info_reply(test_adapter.py)', '542': 'test_inspect_request_token(test_adapter.py)', '535': 'test_complete_reply(test_adapter.py)', '541': 'test_inspect_request(test_adapter.py)', '538': 'test_execute_request(test_adapter.py)', '545': 'test_rename_type(test_adapter.py)', '544': 'test_no_adapt(test_adapter.py)', '546': 'test_same_version(test_adapter.py)', '514': 'V5toV4TestCase(test_adapter.py)', '512': 'AdapterTest(test_adapter.py)', '526': 'test_input_request(test_adapter.py)', '523': 'test_display_data(test_adapter.py)', '527': 'test_kernel_info_reply(test_adapter.py)', '530': 'test_object_info_reply_not_found(test_adapter.py)', '529': 'test_object_info_reply(test_adapter.py)', '531': 'test_object_info_request(test_adapter.py)', '521': 'test_complete_reply(test_adapter.py)', '522': 'test_complete_request(test_adapter.py)', '524': 'test_execute_reply(test_adapter.py)', '532': 'test_rename_type(test_adapter.py)', '525': 'test_execute_request(test_adapter.py)', '528': 'test_no_adapt(test_adapter.py)', '533': 'test_same_version(test_adapter.py)', '513': 'V4toV5TestCase(test_adapter.py)', '519': 'setUp(test_adapter.py)', '516': 'test_default_version(test_adapter.py)', '515': 'test_code_to_line_no_code(test_adapter.py)', '51': 'code_to_line(adapter.py)', '704': 'execute(utils.py)', '158': 'get_shell_msg(client.py)', '615': 'execute(test_kernelmanager.py)', '157': 'get_iopub_msg(client.py)', '710': '__exit__(utils.py)', '709': '__enter__(utils.py)', '580': 'test_kernelapp_lifecycle(test_kernelapp.py)', '579': '_launch(test_kernelapp.py)', '686': 'test_clone(test_session.py)', '473': 'clone(session.py)', '695': 'test_send_raw(test_session.py)', '481': 'send_raw(session.py)', '483': 'sign(session.py)', '689': 'test_datetimes_msgpack(test_session.py)', '475': 'feed_identities(session.py)', '690': 'test_datetimes_pickle(test_session.py)', '688': 'test_datetimes(test_session.py)', '683': 'test_bad_roundtrip(test_session.py)', '685': 'test_bad_unpacker(test_session.py)', '682': 'test_bad_packer(test_session.py)', '681': 'test_bad_pack(test_session.py)', '675': '_bad_packer(test_session.py)', '687': 'test_cull_digest_history(test_session.py)', '700': 'test_zero_digest_history(test_session.py)', '697': 'test_session_id(test_session.py)', '699': 'test_unique_msg_ids(test_session.py)', '445': 'msg_header(session.py)', '698': 'test_tracking(test_session.py)', '680': 'test_args(test_session.py)', '694': 'test_send(test_session.py)', '478': 'msg_id(session.py)', '696': 'test_serialize(test_session.py)', '674': 'TestSession(test_session.py)', '673': 'SessionTestCase(test_session.py)', '678': 'setUp(test_session.py)', '556': 'test_shutdown(test_client.py)', '548': '_check_reply(test_client.py)', '550': 'test_comm_info(test_client.py)', '555': 'test_kernel_info(test_client.py)', '551': 'test_complete(test_client.py)', '554': 'test_inspect(test_client.py)', '553': 'test_history(test_client.py)', '549': 'setUp(test_client.py)', '255': 'NoSuchKernel(kernelspec.py)', '117': 'reqrep(client.py)', '124': 'wrapped(client.py)', '123': 'wait_for_ready(client.py)', '150': '_handle_kernel_info_reply(client.py)', '125': 'HBChannel(channels.py)', '104': 'wait_for_ready(client.py)', '102': 'hb_channel(client.py)', '196': '_make_url(connect.py)', '91': 'reqrep(client.py)', '105': 'wrapped(client.py)', '80': 'ZMQSocketChannel(channels.py)', '154': 'control_channel(client.py)', '723': 'ioloop(threaded.py)', '160': 'hb_channel(client.py)', '171': 'stdin_channel(client.py)', '164': 'iopub_channel(client.py)', '168': 'shell_channel(client.py)', '328': 'interrupt_kernel(manager.py)', '740': 'send_interrupt(win_interrupt.py)', '334': '__del__(manager.py)', '293': 'start(kernelspecapp.py)', '294': 'path_key(kernelspecapp.py)', '735': 'start(threaded.py)', '720': 'start(threaded.py)', '141': 'start(channelsabc.py)', '432': 'start(restarter.py)', '288': 'start(kernelspecapp.py)', '89': 'start(channels.py)', '115': 'start(channels.py)', '290': 'start(kernelspecapp.py)', '438': 'parse_command_line(runapp.py)', '218': 'build_kernel_argv(consoleapp.py)', '308': '_only_once(localinterfaces.py)', '317': 'wrapped(localinterfaces.py)', '47': 'V4toV5(adapter.py)', '46': 'Adapter(adapter.py)', '77': 'object_info_request(adapter.py)', '52': 'extract_oname_v4(adapter.py)', '70': 'complete_request(adapter.py)', '75': 'kernel_info_reply(adapter.py)', '49': '_version_str_to_list(adapter.py)', '48': 'V5toV4(adapter.py)', '53': '__call__(adapter.py)', '54': 'handle_reply_status_error(adapter.py)', '57': 'update_msg_type(adapter.py)', '56': 'update_metadata(adapter.py)', '55': 'update_header(adapter.py)', '247': 'initialize(kernelapp.py)', '246': '_record_started(kernelapp.py)', '585': 'config(test_kernelmanager.py)', '262': 'install_native_kernel_spec(kernelspec.py)', '276': 'install_native_kernel_spec(kernelspec.py)', '265': 'to_json(kernelspec.py)', '264': 'to_dict(kernelspec.py)', '449': 'test_msg2obj(session.py)', '440': 'Message(session.py)', '453': '__init__(session.py)', '470': '_signature_scheme_changed(session.py)', '465': '_new_auth(session.py)', '463': '_key_default(session.py)', '447': 'new_id_bytes(session.py)', '462': '_key_changed(session.py)', '443': 'default_secure(session.py)', '469': '_session_default(session.py)', '446': 'new_id(session.py)', '412': 'is_alive(multikernelmanager.py)', '420': 'shutdown_all(multikernelmanager.py)', '413': 'list_kernel_ids(multikernelmanager.py)', '721': 'stop(threaded.py)', '140': 'is_alive(channelsabc.py)', '732': 'is_alive(threaded.py)', '112': 'is_alive(channels.py)', '86': 'is_alive(channels.py)', '724': 'start_channels(threaded.py)', '722': '_check_kernel_info_reply(threaded.py)', '716': '__init__(threaded.py)', '387': 'shutdown_kernel(multikernelmanager.py)', '416': 'remove_kernel(multikernelmanager.py)', '713': 'IOLoopThread(threaded.py)', '714': 'ThreadedKernelClient(threaded.py)', '715': 'ThreadedZMQSocketChannel(threaded.py)', '731': 'flush(threaded.py)', '727': '_flush(threaded.py)', '386': 'shutdown_all(multikernelmanager.py)', '418': 'request_shutdown(multikernelmanager.py)', '402': 'cleanup_resources(multikernelmanager.py)', '408': 'finish_shutdown(multikernelmanager.py)', '393': '__len__(multikernelmanager.py)', '421': 'shutdown_kernel(multikernelmanager.py)', '198': '_session_default(connect.py)', '298': 'launch_kernel(launcher.py)', '739': 'create_interrupt_event(win_interrupt.py)', '741': 'SECURITY_ATTRIBUTES(win_interrupt.py)', '215': '__init__(consoleapp.py)', '509': '__init__(signalkernel.py)', '278': '__init__(kernelspec.py)', '127': '__init__(channels.py)', '126': 'InvalidPortNumber(channels.py)', '107': '__init__(channels.py)', '81': '__init__(channels.py)', '392': '__init__(multikernelmanager.py)', '726': '__init__(threaded.py)', '737': 'setup_stream(threaded.py)', '728': '_handle_recv(threaded.py)', '729': 'call_handlers(threaded.py)', '136': 'stop(channels.py)', '133': 'is_beating(channels.py)', '135': 'run(channels.py)', '145': 'time_to_dead(channelsabc.py)', '131': 'call_handlers(channels.py)', '130': '_poll(channels.py)'}}, {'key': 779, 'parent': 2156, 'tfidf_word': 'EP: 779, Name: test_send &rarr; recv &rarr; feed_identities', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1396, 'parent': 2156, 'tfidf_word': 'EP: 1396, Name: handle &rarr; recv &rarr; feed_identities', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2118, 'parent': 2704, 'tfidf_word': 'connection file kernel mixin restart test port random cleanup ', 'tfidf_method': 'cleanup_connection_file cleanup_random_ports restart_kernel test_mixin_cleanup_random_ports ', 'lda_word': ' cleanup,port,random,test,connection,', 'lda_method': ' cleanup_random_ports,cleanup_connection_file,test_mixin_cleanup_random_ports,restart_kernel,', 'lsi_word': ' cleanup,random,port,file,connection,', 'lsi_method': ' cleanup_connection_file,cleanup_random_ports,restart_kernel,test_mixin_cleanup_random_ports,', 'spm_method': ' ', 'text_summary': '', 'files_count': 3, 'files': ['manager.py', 'connect.py', 'test_connect.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'330': 'restart_kernel(manager.py)', '202': 'cleanup_random_ports(connect.py)', '200': 'cleanup_connection_file(connect.py)', '567': 'test_mixin_cleanup_random_ports(test_connect.py)'}}, {'key': 2703, 'parent': 2704, 'tfidf_word': 'subclass clone native name permission flush io loop code restarter ', 'tfidf_method': 'test_default_version setUp extract_oname_v4 test_complete_reply test_complete_request test_display_data test_execute_reply test_execute_request test_kernel_info_reply reqrep ', 'lda_word': ' test,adapt,session,cinfo,bad,', 'lda_method': ' start,adapt,close,stop_channels,is_alive,', 'lsi_word': ' test,kernel,adapt,session,reply,', 'lsi_method': ' start,setup,shutdown,shutdown_handler,setup_signals,', 'spm_method': ' ', 'text_summary': "return ip for localhost (almost always 127.0.0.1)   Ensure that a sequence of kernel startups doesn't break anything. This method is called in the ioloop thread when a message arrives. Pass a message to the ZMQ socket to send. Stop the kernel polling. Return a list of the kernel ids of the active kernels. Return the connection info as a dict. Ensure that a sequence of kernel startups doesn't break anything. find a connection file, and return its absolute path. return ip for localhost (almost always 127.0.0.1)      find a connection file, and return its absolute path. For tests, create a file to indicate that we've started. test load_connection_file() after. handle kernel info reply. Get the hb channel object for this kernel. Send a raw message via ident path. Make a blocking client connected to my kernel. Immediately processes all pending messages on this channel. Shutdown all kernels. Return the number of running kernels. Interrupts the kernel by sending it a signal. Get a message from the shell channel. This is run in the ioloop thread when the kernel info reply is received. default function for packing datetime objects in JSON. Send a shutdown request via control channel. Create an interrupt event handle. Get a message from the iopub channel. Sends an interrupt event using the specified handle. test that messages receive unique ids.", 'files_count': 33, 'files': ['client.py', 'channels.py', 'manager.py', 'test_connect.py', 'connect.py', 'restarter.py', 'kernelspecapp.py', 'kernelapp.py', 'threaded.py', 'managerabc.py', 'test_session.py', 'test_adapter.py', 'forward.py', 'test_manager.py', 'kernelspec.py', 'test_jsonutil.py', 'session.py', 'jsonutil.py', 'test_kernelmanager.py', 'utils.py', 'test_kernelspec.py', 'signalkernel.py', 'test_multikernelmanager.py', 'localinterfaces.py', 'adapter.py', 'test_kernelapp.py', 'test_client.py', 'win_interrupt.py', 'channelsabc.py', 'runapp.py', 'consoleapp.py', 'multikernelmanager.py', 'launcher.py'], 'execution_path_count': 245, 'function_id_to_name_file': {'90': 'AsyncKernelClient(client.py)', '106': 'ZMQSocketChannel(channels.py)', '109': 'close(channels.py)', '116': 'BlockingKernelClient(client.py)', '225': 'IOLoopKernelManager(manager.py)', '226': 'as_zmqstream(manager.py)', '233': 'wrapped(manager.py)', '224': 'AsyncIOLoopKernelManager(manager.py)', '568': 'test_mixin_record_random_ports(test_connect.py)', '557': 'DummyConfigurable(test_connect.py)', '188': 'ConnectionFileMixin(connect.py)', '567': 'test_mixin_cleanup_random_ports(test_connect.py)', '235': 'IOLoopKernelRestarter(restarter.py)', '426': 'KernelRestarter(restarter.py)', '234': 'AsyncIOLoopKernelRestarter(restarter.py)', '291': 'start(kernelspecapp.py)', '251': 'start(kernelapp.py)', '249': 'setup_signals(kernelapp.py)', '252': 'shutdown_handler(kernelapp.py)', '250': 'shutdown(kernelapp.py)', '248': 'log_connection_info(kernelapp.py)', '199': 'blocking_client(connect.py)', '208': 'get_connection_info(connect.py)', '725': 'stop_channels(threaded.py)', '373': 'is_alive(managerabc.py)', '684': 'test_bad_unpack(test_session.py)', '676': '_bad_unpacker(test_session.py)', '536': 'test_complete_request(test_adapter.py)', '517': 'adapt(test_adapter.py)', '562': 'test_find_connection_file_local(test_connect.py)', '189': 'find_connection_file(connect.py)', '492': 'handle(forward.py)', '730': 'close(threaded.py)', '493': 'SubHander(forward.py)', '490': 'Handler(forward.py)', '635': 'test_connection_file_real_path(test_manager.py)', '253': 'KernelSpec(kernelspec.py)', '718': 'close(threaded.py)', '132': 'close(channels.py)', '114': 'send(channels.py)', '88': 'send(channels.py)', '83': 'close(channels.py)', '575': 'test_date_default(test_jsonutil.py)', '450': 'utcnow(session.py)', '241': 'date_default(jsonutil.py)', '240': '_ensure_tzinfo(jsonutil.py)', '597': 'test_subclasses(test_kernelmanager.py)', '703': 'AsyncKernelManagerWithCleanup(utils.py)', '595': 'test_signal_kernel_subprocesses(test_kernelmanager.py)', '598': 'execute(test_kernelmanager.py)', '702': 'AsyncKernelManagerSubclass(utils.py)', '611': 'test_start_parallel_process_kernels(test_kernelmanager.py)', '591': 'transport(test_kernelmanager.py)', '606': 'test_templated_kspec_env(test_kernelmanager.py)', '599': '_env_test_body(test_kernelmanager.py)', '607': 'execute(test_kernelmanager.py)', '612': 'test_start_parallel_thread_kernels(test_kernelmanager.py)', '604': 'test_signal_kernel_subprocesses(test_kernelmanager.py)', '608': 'execute(test_kernelmanager.py)', '586': 'env(test_kernelmanager.py)', '712': 'stop(utils.py)', '711': 'start(utils.py)', '705': 'test_env(utils.py)', '630': 'test_validate_kernel_name(test_kernelspec.py)', '257': '_is_valid_kernel_name(kernelspec.py)', '506': 'SignalTestApp(signalkernel.py)', '507': 'SignalTestKernel(signalkernel.py)', '627': 'test_remove_kernel_spec(test_kernelspec.py)', '617': '_install_sample_kernel(test_kernelspec.py)', '626': 'test_kernel_spec_priority(test_kernelspec.py)', '651': 'test_tcp_cinfo(test_multikernelmanager.py)', '640': '_run_cinfo(test_multikernelmanager.py)', '621': 'test_find_all_specs(test_kernelspec.py)', '622': 'test_find_kernel_specs(test_kernelspec.py)', '623': 'test_get_kernel_spec(test_kernelspec.py)', '619': 'tearDown(test_kernelspec.py)', '618': 'setUp(test_kernelspec.py)', '649': 'test_start_sequence_ipc_kernels(test_multikernelmanager.py)', '641': '_run_lifecycle(test_multikernelmanager.py)', '650': 'test_start_sequence_tcp_kernels(test_multikernelmanager.py)', '644': 'test_ipc_cinfo(test_multikernelmanager.py)', '315': 'localhost(localinterfaces.py)', '645': 'test_ipc_lifecycle(test_multikernelmanager.py)', '665': 'test_start_sequence_tcp_kernels(test_multikernelmanager.py)', '657': '_run_lifecycle(test_multikernelmanager.py)', '664': 'test_start_sequence_ipc_kernels(test_multikernelmanager.py)', '659': 'test_ipc_cinfo(test_multikernelmanager.py)', '656': '_run_cinfo(test_multikernelmanager.py)', '660': 'test_ipc_lifecycle(test_multikernelmanager.py)', '666': 'test_tcp_cinfo(test_multikernelmanager.py)', '668': 'test_tcp_lifecycle_with_kernel_id(test_multikernelmanager.py)', '569': 'test_secure_write(test_connect.py)', '573': 'check_user_only_permissions(test_connect.py)', '574': 'fetch_win32_permissions(test_connect.py)', '563': 'test_find_connection_file_relative(test_connect.py)', '561': 'test_find_connection_file_abspath(test_connect.py)', '560': 'test_find_connection_file(test_connect.py)', '565': 'test_load_connection_file_session_with_kn(test_connect.py)', '441': 'Session(session.py)', '539': 'test_input_request(test_adapter.py)', '564': 'test_load_connection_file_session(test_connect.py)', '537': 'test_display_data(test_adapter.py)', '540': 'test_inspect_reply(test_adapter.py)', '543': 'test_kernel_info_reply(test_adapter.py)', '542': 'test_inspect_request_token(test_adapter.py)', '535': 'test_complete_reply(test_adapter.py)', '541': 'test_inspect_request(test_adapter.py)', '538': 'test_execute_request(test_adapter.py)', '545': 'test_rename_type(test_adapter.py)', '544': 'test_no_adapt(test_adapter.py)', '546': 'test_same_version(test_adapter.py)', '514': 'V5toV4TestCase(test_adapter.py)', '512': 'AdapterTest(test_adapter.py)', '526': 'test_input_request(test_adapter.py)', '523': 'test_display_data(test_adapter.py)', '527': 'test_kernel_info_reply(test_adapter.py)', '530': 'test_object_info_reply_not_found(test_adapter.py)', '529': 'test_object_info_reply(test_adapter.py)', '531': 'test_object_info_request(test_adapter.py)', '521': 'test_complete_reply(test_adapter.py)', '522': 'test_complete_request(test_adapter.py)', '524': 'test_execute_reply(test_adapter.py)', '532': 'test_rename_type(test_adapter.py)', '525': 'test_execute_request(test_adapter.py)', '528': 'test_no_adapt(test_adapter.py)', '533': 'test_same_version(test_adapter.py)', '513': 'V4toV5TestCase(test_adapter.py)', '519': 'setUp(test_adapter.py)', '516': 'test_default_version(test_adapter.py)', '515': 'test_code_to_line_no_code(test_adapter.py)', '51': 'code_to_line(adapter.py)', '704': 'execute(utils.py)', '158': 'get_shell_msg(client.py)', '615': 'execute(test_kernelmanager.py)', '157': 'get_iopub_msg(client.py)', '710': '__exit__(utils.py)', '709': '__enter__(utils.py)', '580': 'test_kernelapp_lifecycle(test_kernelapp.py)', '579': '_launch(test_kernelapp.py)', '686': 'test_clone(test_session.py)', '473': 'clone(session.py)', '695': 'test_send_raw(test_session.py)', '481': 'send_raw(session.py)', '483': 'sign(session.py)', '689': 'test_datetimes_msgpack(test_session.py)', '475': 'feed_identities(session.py)', '690': 'test_datetimes_pickle(test_session.py)', '688': 'test_datetimes(test_session.py)', '683': 'test_bad_roundtrip(test_session.py)', '685': 'test_bad_unpacker(test_session.py)', '682': 'test_bad_packer(test_session.py)', '681': 'test_bad_pack(test_session.py)', '675': '_bad_packer(test_session.py)', '687': 'test_cull_digest_history(test_session.py)', '700': 'test_zero_digest_history(test_session.py)', '697': 'test_session_id(test_session.py)', '699': 'test_unique_msg_ids(test_session.py)', '445': 'msg_header(session.py)', '698': 'test_tracking(test_session.py)', '680': 'test_args(test_session.py)', '694': 'test_send(test_session.py)', '478': 'msg_id(session.py)', '696': 'test_serialize(test_session.py)', '674': 'TestSession(test_session.py)', '673': 'SessionTestCase(test_session.py)', '678': 'setUp(test_session.py)', '556': 'test_shutdown(test_client.py)', '548': '_check_reply(test_client.py)', '550': 'test_comm_info(test_client.py)', '555': 'test_kernel_info(test_client.py)', '551': 'test_complete(test_client.py)', '554': 'test_inspect(test_client.py)', '553': 'test_history(test_client.py)', '549': 'setUp(test_client.py)', '255': 'NoSuchKernel(kernelspec.py)', '117': 'reqrep(client.py)', '124': 'wrapped(client.py)', '123': 'wait_for_ready(client.py)', '150': '_handle_kernel_info_reply(client.py)', '125': 'HBChannel(channels.py)', '104': 'wait_for_ready(client.py)', '102': 'hb_channel(client.py)', '196': '_make_url(connect.py)', '91': 'reqrep(client.py)', '105': 'wrapped(client.py)', '80': 'ZMQSocketChannel(channels.py)', '154': 'control_channel(client.py)', '723': 'ioloop(threaded.py)', '160': 'hb_channel(client.py)', '171': 'stdin_channel(client.py)', '164': 'iopub_channel(client.py)', '168': 'shell_channel(client.py)', '328': 'interrupt_kernel(manager.py)', '740': 'send_interrupt(win_interrupt.py)', '334': '__del__(manager.py)', '200': 'cleanup_connection_file(connect.py)', '293': 'start(kernelspecapp.py)', '294': 'path_key(kernelspecapp.py)', '735': 'start(threaded.py)', '720': 'start(threaded.py)', '141': 'start(channelsabc.py)', '432': 'start(restarter.py)', '288': 'start(kernelspecapp.py)', '89': 'start(channels.py)', '115': 'start(channels.py)', '290': 'start(kernelspecapp.py)', '438': 'parse_command_line(runapp.py)', '218': 'build_kernel_argv(consoleapp.py)', '308': '_only_once(localinterfaces.py)', '317': 'wrapped(localinterfaces.py)', '47': 'V4toV5(adapter.py)', '46': 'Adapter(adapter.py)', '77': 'object_info_request(adapter.py)', '52': 'extract_oname_v4(adapter.py)', '70': 'complete_request(adapter.py)', '75': 'kernel_info_reply(adapter.py)', '49': '_version_str_to_list(adapter.py)', '48': 'V5toV4(adapter.py)', '53': '__call__(adapter.py)', '54': 'handle_reply_status_error(adapter.py)', '57': 'update_msg_type(adapter.py)', '56': 'update_metadata(adapter.py)', '55': 'update_header(adapter.py)', '247': 'initialize(kernelapp.py)', '246': '_record_started(kernelapp.py)', '585': 'config(test_kernelmanager.py)', '262': 'install_native_kernel_spec(kernelspec.py)', '276': 'install_native_kernel_spec(kernelspec.py)', '265': 'to_json(kernelspec.py)', '264': 'to_dict(kernelspec.py)', '449': 'test_msg2obj(session.py)', '440': 'Message(session.py)', '453': '__init__(session.py)', '470': '_signature_scheme_changed(session.py)', '465': '_new_auth(session.py)', '463': '_key_default(session.py)', '447': 'new_id_bytes(session.py)', '462': '_key_changed(session.py)', '443': 'default_secure(session.py)', '469': '_session_default(session.py)', '446': 'new_id(session.py)', '412': 'is_alive(multikernelmanager.py)', '420': 'shutdown_all(multikernelmanager.py)', '413': 'list_kernel_ids(multikernelmanager.py)', '721': 'stop(threaded.py)', '140': 'is_alive(channelsabc.py)', '732': 'is_alive(threaded.py)', '112': 'is_alive(channels.py)', '86': 'is_alive(channels.py)', '724': 'start_channels(threaded.py)', '722': '_check_kernel_info_reply(threaded.py)', '716': '__init__(threaded.py)', '387': 'shutdown_kernel(multikernelmanager.py)', '416': 'remove_kernel(multikernelmanager.py)', '713': 'IOLoopThread(threaded.py)', '714': 'ThreadedKernelClient(threaded.py)', '715': 'ThreadedZMQSocketChannel(threaded.py)', '731': 'flush(threaded.py)', '727': '_flush(threaded.py)', '386': 'shutdown_all(multikernelmanager.py)', '418': 'request_shutdown(multikernelmanager.py)', '402': 'cleanup_resources(multikernelmanager.py)', '408': 'finish_shutdown(multikernelmanager.py)', '393': '__len__(multikernelmanager.py)', '421': 'shutdown_kernel(multikernelmanager.py)', '198': '_session_default(connect.py)', '298': 'launch_kernel(launcher.py)', '739': 'create_interrupt_event(win_interrupt.py)', '741': 'SECURITY_ATTRIBUTES(win_interrupt.py)', '215': '__init__(consoleapp.py)', '509': '__init__(signalkernel.py)', '278': '__init__(kernelspec.py)', '127': '__init__(channels.py)', '126': 'InvalidPortNumber(channels.py)', '107': '__init__(channels.py)', '81': '__init__(channels.py)', '392': '__init__(multikernelmanager.py)', '726': '__init__(threaded.py)', '737': 'setup_stream(threaded.py)', '728': '_handle_recv(threaded.py)', '729': 'call_handlers(threaded.py)', '136': 'stop(channels.py)', '133': 'is_beating(channels.py)', '135': 'run(channels.py)', '145': 'time_to_dead(channelsabc.py)', '131': 'call_handlers(channels.py)', '130': '_poll(channels.py)'}}, {'key': 335, 'parent': 2118, 'tfidf_word': 'EP: 335, Name: restart_kernel &rarr; cleanup_random_ports &rarr; cleanup_connection_file', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1110, 'parent': 2118, 'tfidf_word': 'EP: 1110, Name: test_mixin_cleanup_random_ports &rarr; cleanup_random_ports &rarr; cleanup_connection_file', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2126, 'parent': 2703, 'tfidf_word': 'channel client close kernel socket zmq async blocking ', 'tfidf_method': 'ZMQSocketChannel close BlockingKernelClient AsyncKernelClient ', 'lda_word': ' kernel,client,channel,close,socket,', 'lda_method': ' zmqsocketchannel,close,asynckernelclient,blockingkernelclient,', 'lsi_word': ' channel,client,kernel,zmq,close,', 'lsi_method': ' zmqsocketchannel,close,asynckernelclient,blockingkernelclient,', 'spm_method': ' ', 'text_summary': '', 'files_count': 2, 'files': ['client.py', 'channels.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'90': 'AsyncKernelClient(client.py)', '106': 'ZMQSocketChannel(channels.py)', '109': 'close(channels.py)', '116': 'BlockingKernelClient(client.py)'}}, {'key': 2702, 'parent': 2703, 'tfidf_word': 'subclass clone native name permission flush io loop code restarter ', 'tfidf_method': 'test_default_version setUp extract_oname_v4 test_complete_reply test_complete_request test_display_data test_execute_reply test_execute_request test_kernel_info_reply reqrep ', 'lda_word': ' test,kernel,init,session,shutdown,', 'lda_method': ' start,init,stop_channels,close,is_alive,', 'lsi_word': ' test,kernel,adapt,session,reply,', 'lsi_method': ' start,setup,shutdown,setup_signals,shutdown_handler,', 'spm_method': ' ', 'text_summary': "return ip for localhost (almost always 127.0.0.1)   Ensure that a sequence of kernel startups doesn't break anything. This method is called in the ioloop thread when a message arrives. Pass a message to the ZMQ socket to send. Stop the kernel polling. Return a list of the kernel ids of the active kernels. Return the connection info as a dict. Ensure that a sequence of kernel startups doesn't break anything. find a connection file, and return its absolute path. return ip for localhost (almost always 127.0.0.1)      find a connection file, and return its absolute path. For tests, create a file to indicate that we've started. test load_connection_file() after. handle kernel info reply. Get the hb channel object for this kernel. Send a raw message via ident path. Make a blocking client connected to my kernel. Immediately processes all pending messages on this channel. Shutdown all kernels. Return the number of running kernels. Interrupts the kernel by sending it a signal. Get a message from the shell channel. This is run in the ioloop thread when the kernel info reply is received. default function for packing datetime objects in JSON. Send a shutdown request via control channel. Create an interrupt event handle. Get a message from the iopub channel. Sends an interrupt event using the specified handle. test that messages receive unique ids.", 'files_count': 33, 'files': ['manager.py', 'test_connect.py', 'connect.py', 'restarter.py', 'kernelspecapp.py', 'kernelapp.py', 'threaded.py', 'managerabc.py', 'test_session.py', 'test_adapter.py', 'forward.py', 'test_manager.py', 'kernelspec.py', 'channels.py', 'test_jsonutil.py', 'session.py', 'jsonutil.py', 'test_kernelmanager.py', 'utils.py', 'test_kernelspec.py', 'signalkernel.py', 'test_multikernelmanager.py', 'localinterfaces.py', 'adapter.py', 'client.py', 'test_kernelapp.py', 'test_client.py', 'win_interrupt.py', 'channelsabc.py', 'runapp.py', 'consoleapp.py', 'multikernelmanager.py', 'launcher.py'], 'execution_path_count': 243, 'function_id_to_name_file': {'225': 'IOLoopKernelManager(manager.py)', '226': 'as_zmqstream(manager.py)', '233': 'wrapped(manager.py)', '224': 'AsyncIOLoopKernelManager(manager.py)', '568': 'test_mixin_record_random_ports(test_connect.py)', '557': 'DummyConfigurable(test_connect.py)', '188': 'ConnectionFileMixin(connect.py)', '567': 'test_mixin_cleanup_random_ports(test_connect.py)', '235': 'IOLoopKernelRestarter(restarter.py)', '426': 'KernelRestarter(restarter.py)', '234': 'AsyncIOLoopKernelRestarter(restarter.py)', '291': 'start(kernelspecapp.py)', '251': 'start(kernelapp.py)', '249': 'setup_signals(kernelapp.py)', '252': 'shutdown_handler(kernelapp.py)', '250': 'shutdown(kernelapp.py)', '248': 'log_connection_info(kernelapp.py)', '199': 'blocking_client(connect.py)', '208': 'get_connection_info(connect.py)', '725': 'stop_channels(threaded.py)', '373': 'is_alive(managerabc.py)', '684': 'test_bad_unpack(test_session.py)', '676': '_bad_unpacker(test_session.py)', '536': 'test_complete_request(test_adapter.py)', '517': 'adapt(test_adapter.py)', '562': 'test_find_connection_file_local(test_connect.py)', '189': 'find_connection_file(connect.py)', '492': 'handle(forward.py)', '730': 'close(threaded.py)', '493': 'SubHander(forward.py)', '490': 'Handler(forward.py)', '635': 'test_connection_file_real_path(test_manager.py)', '253': 'KernelSpec(kernelspec.py)', '718': 'close(threaded.py)', '132': 'close(channels.py)', '114': 'send(channels.py)', '88': 'send(channels.py)', '83': 'close(channels.py)', '109': 'close(channels.py)', '575': 'test_date_default(test_jsonutil.py)', '450': 'utcnow(session.py)', '241': 'date_default(jsonutil.py)', '240': '_ensure_tzinfo(jsonutil.py)', '597': 'test_subclasses(test_kernelmanager.py)', '703': 'AsyncKernelManagerWithCleanup(utils.py)', '595': 'test_signal_kernel_subprocesses(test_kernelmanager.py)', '598': 'execute(test_kernelmanager.py)', '702': 'AsyncKernelManagerSubclass(utils.py)', '611': 'test_start_parallel_process_kernels(test_kernelmanager.py)', '591': 'transport(test_kernelmanager.py)', '606': 'test_templated_kspec_env(test_kernelmanager.py)', '599': '_env_test_body(test_kernelmanager.py)', '607': 'execute(test_kernelmanager.py)', '612': 'test_start_parallel_thread_kernels(test_kernelmanager.py)', '604': 'test_signal_kernel_subprocesses(test_kernelmanager.py)', '608': 'execute(test_kernelmanager.py)', '586': 'env(test_kernelmanager.py)', '712': 'stop(utils.py)', '711': 'start(utils.py)', '705': 'test_env(utils.py)', '630': 'test_validate_kernel_name(test_kernelspec.py)', '257': '_is_valid_kernel_name(kernelspec.py)', '506': 'SignalTestApp(signalkernel.py)', '507': 'SignalTestKernel(signalkernel.py)', '627': 'test_remove_kernel_spec(test_kernelspec.py)', '617': '_install_sample_kernel(test_kernelspec.py)', '626': 'test_kernel_spec_priority(test_kernelspec.py)', '651': 'test_tcp_cinfo(test_multikernelmanager.py)', '640': '_run_cinfo(test_multikernelmanager.py)', '621': 'test_find_all_specs(test_kernelspec.py)', '622': 'test_find_kernel_specs(test_kernelspec.py)', '623': 'test_get_kernel_spec(test_kernelspec.py)', '619': 'tearDown(test_kernelspec.py)', '618': 'setUp(test_kernelspec.py)', '649': 'test_start_sequence_ipc_kernels(test_multikernelmanager.py)', '641': '_run_lifecycle(test_multikernelmanager.py)', '650': 'test_start_sequence_tcp_kernels(test_multikernelmanager.py)', '644': 'test_ipc_cinfo(test_multikernelmanager.py)', '315': 'localhost(localinterfaces.py)', '645': 'test_ipc_lifecycle(test_multikernelmanager.py)', '665': 'test_start_sequence_tcp_kernels(test_multikernelmanager.py)', '657': '_run_lifecycle(test_multikernelmanager.py)', '664': 'test_start_sequence_ipc_kernels(test_multikernelmanager.py)', '659': 'test_ipc_cinfo(test_multikernelmanager.py)', '656': '_run_cinfo(test_multikernelmanager.py)', '660': 'test_ipc_lifecycle(test_multikernelmanager.py)', '666': 'test_tcp_cinfo(test_multikernelmanager.py)', '668': 'test_tcp_lifecycle_with_kernel_id(test_multikernelmanager.py)', '569': 'test_secure_write(test_connect.py)', '573': 'check_user_only_permissions(test_connect.py)', '574': 'fetch_win32_permissions(test_connect.py)', '563': 'test_find_connection_file_relative(test_connect.py)', '561': 'test_find_connection_file_abspath(test_connect.py)', '560': 'test_find_connection_file(test_connect.py)', '565': 'test_load_connection_file_session_with_kn(test_connect.py)', '441': 'Session(session.py)', '539': 'test_input_request(test_adapter.py)', '564': 'test_load_connection_file_session(test_connect.py)', '537': 'test_display_data(test_adapter.py)', '540': 'test_inspect_reply(test_adapter.py)', '543': 'test_kernel_info_reply(test_adapter.py)', '542': 'test_inspect_request_token(test_adapter.py)', '535': 'test_complete_reply(test_adapter.py)', '541': 'test_inspect_request(test_adapter.py)', '538': 'test_execute_request(test_adapter.py)', '545': 'test_rename_type(test_adapter.py)', '544': 'test_no_adapt(test_adapter.py)', '546': 'test_same_version(test_adapter.py)', '514': 'V5toV4TestCase(test_adapter.py)', '512': 'AdapterTest(test_adapter.py)', '526': 'test_input_request(test_adapter.py)', '523': 'test_display_data(test_adapter.py)', '527': 'test_kernel_info_reply(test_adapter.py)', '530': 'test_object_info_reply_not_found(test_adapter.py)', '529': 'test_object_info_reply(test_adapter.py)', '531': 'test_object_info_request(test_adapter.py)', '521': 'test_complete_reply(test_adapter.py)', '522': 'test_complete_request(test_adapter.py)', '524': 'test_execute_reply(test_adapter.py)', '532': 'test_rename_type(test_adapter.py)', '525': 'test_execute_request(test_adapter.py)', '528': 'test_no_adapt(test_adapter.py)', '533': 'test_same_version(test_adapter.py)', '513': 'V4toV5TestCase(test_adapter.py)', '519': 'setUp(test_adapter.py)', '516': 'test_default_version(test_adapter.py)', '515': 'test_code_to_line_no_code(test_adapter.py)', '51': 'code_to_line(adapter.py)', '704': 'execute(utils.py)', '158': 'get_shell_msg(client.py)', '615': 'execute(test_kernelmanager.py)', '157': 'get_iopub_msg(client.py)', '710': '__exit__(utils.py)', '709': '__enter__(utils.py)', '580': 'test_kernelapp_lifecycle(test_kernelapp.py)', '579': '_launch(test_kernelapp.py)', '686': 'test_clone(test_session.py)', '473': 'clone(session.py)', '695': 'test_send_raw(test_session.py)', '481': 'send_raw(session.py)', '483': 'sign(session.py)', '689': 'test_datetimes_msgpack(test_session.py)', '475': 'feed_identities(session.py)', '690': 'test_datetimes_pickle(test_session.py)', '688': 'test_datetimes(test_session.py)', '683': 'test_bad_roundtrip(test_session.py)', '685': 'test_bad_unpacker(test_session.py)', '682': 'test_bad_packer(test_session.py)', '681': 'test_bad_pack(test_session.py)', '675': '_bad_packer(test_session.py)', '687': 'test_cull_digest_history(test_session.py)', '700': 'test_zero_digest_history(test_session.py)', '697': 'test_session_id(test_session.py)', '699': 'test_unique_msg_ids(test_session.py)', '445': 'msg_header(session.py)', '698': 'test_tracking(test_session.py)', '680': 'test_args(test_session.py)', '694': 'test_send(test_session.py)', '478': 'msg_id(session.py)', '696': 'test_serialize(test_session.py)', '674': 'TestSession(test_session.py)', '673': 'SessionTestCase(test_session.py)', '678': 'setUp(test_session.py)', '556': 'test_shutdown(test_client.py)', '548': '_check_reply(test_client.py)', '550': 'test_comm_info(test_client.py)', '555': 'test_kernel_info(test_client.py)', '551': 'test_complete(test_client.py)', '554': 'test_inspect(test_client.py)', '553': 'test_history(test_client.py)', '549': 'setUp(test_client.py)', '255': 'NoSuchKernel(kernelspec.py)', '116': 'BlockingKernelClient(client.py)', '117': 'reqrep(client.py)', '124': 'wrapped(client.py)', '123': 'wait_for_ready(client.py)', '150': '_handle_kernel_info_reply(client.py)', '125': 'HBChannel(channels.py)', '104': 'wait_for_ready(client.py)', '102': 'hb_channel(client.py)', '196': '_make_url(connect.py)', '90': 'AsyncKernelClient(client.py)', '91': 'reqrep(client.py)', '105': 'wrapped(client.py)', '80': 'ZMQSocketChannel(channels.py)', '154': 'control_channel(client.py)', '723': 'ioloop(threaded.py)', '160': 'hb_channel(client.py)', '171': 'stdin_channel(client.py)', '164': 'iopub_channel(client.py)', '168': 'shell_channel(client.py)', '328': 'interrupt_kernel(manager.py)', '740': 'send_interrupt(win_interrupt.py)', '334': '__del__(manager.py)', '200': 'cleanup_connection_file(connect.py)', '293': 'start(kernelspecapp.py)', '294': 'path_key(kernelspecapp.py)', '735': 'start(threaded.py)', '720': 'start(threaded.py)', '141': 'start(channelsabc.py)', '432': 'start(restarter.py)', '288': 'start(kernelspecapp.py)', '89': 'start(channels.py)', '115': 'start(channels.py)', '290': 'start(kernelspecapp.py)', '438': 'parse_command_line(runapp.py)', '218': 'build_kernel_argv(consoleapp.py)', '308': '_only_once(localinterfaces.py)', '317': 'wrapped(localinterfaces.py)', '47': 'V4toV5(adapter.py)', '46': 'Adapter(adapter.py)', '77': 'object_info_request(adapter.py)', '52': 'extract_oname_v4(adapter.py)', '70': 'complete_request(adapter.py)', '75': 'kernel_info_reply(adapter.py)', '49': '_version_str_to_list(adapter.py)', '48': 'V5toV4(adapter.py)', '53': '__call__(adapter.py)', '54': 'handle_reply_status_error(adapter.py)', '57': 'update_msg_type(adapter.py)', '56': 'update_metadata(adapter.py)', '55': 'update_header(adapter.py)', '247': 'initialize(kernelapp.py)', '246': '_record_started(kernelapp.py)', '585': 'config(test_kernelmanager.py)', '262': 'install_native_kernel_spec(kernelspec.py)', '276': 'install_native_kernel_spec(kernelspec.py)', '265': 'to_json(kernelspec.py)', '264': 'to_dict(kernelspec.py)', '449': 'test_msg2obj(session.py)', '440': 'Message(session.py)', '453': '__init__(session.py)', '470': '_signature_scheme_changed(session.py)', '465': '_new_auth(session.py)', '463': '_key_default(session.py)', '447': 'new_id_bytes(session.py)', '462': '_key_changed(session.py)', '443': 'default_secure(session.py)', '469': '_session_default(session.py)', '446': 'new_id(session.py)', '412': 'is_alive(multikernelmanager.py)', '420': 'shutdown_all(multikernelmanager.py)', '413': 'list_kernel_ids(multikernelmanager.py)', '721': 'stop(threaded.py)', '140': 'is_alive(channelsabc.py)', '732': 'is_alive(threaded.py)', '112': 'is_alive(channels.py)', '86': 'is_alive(channels.py)', '724': 'start_channels(threaded.py)', '722': '_check_kernel_info_reply(threaded.py)', '716': '__init__(threaded.py)', '387': 'shutdown_kernel(multikernelmanager.py)', '416': 'remove_kernel(multikernelmanager.py)', '713': 'IOLoopThread(threaded.py)', '714': 'ThreadedKernelClient(threaded.py)', '715': 'ThreadedZMQSocketChannel(threaded.py)', '731': 'flush(threaded.py)', '727': '_flush(threaded.py)', '386': 'shutdown_all(multikernelmanager.py)', '418': 'request_shutdown(multikernelmanager.py)', '402': 'cleanup_resources(multikernelmanager.py)', '408': 'finish_shutdown(multikernelmanager.py)', '393': '__len__(multikernelmanager.py)', '421': 'shutdown_kernel(multikernelmanager.py)', '198': '_session_default(connect.py)', '298': 'launch_kernel(launcher.py)', '739': 'create_interrupt_event(win_interrupt.py)', '741': 'SECURITY_ATTRIBUTES(win_interrupt.py)', '215': '__init__(consoleapp.py)', '509': '__init__(signalkernel.py)', '278': '__init__(kernelspec.py)', '127': '__init__(channels.py)', '126': 'InvalidPortNumber(channels.py)', '107': '__init__(channels.py)', '81': '__init__(channels.py)', '392': '__init__(multikernelmanager.py)', '726': '__init__(threaded.py)', '737': 'setup_stream(threaded.py)', '728': '_handle_recv(threaded.py)', '729': 'call_handlers(threaded.py)', '136': 'stop(channels.py)', '133': 'is_beating(channels.py)', '135': 'run(channels.py)', '145': 'time_to_dead(channelsabc.py)', '131': 'call_handlers(channels.py)', '130': '_poll(channels.py)'}}, {'key': 513, 'parent': 2126, 'tfidf_word': 'EP: 513, Name: AsyncKernelClient &rarr; ZMQSocketChannel &rarr; close', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 628, 'parent': 2126, 'tfidf_word': 'EP: 628, Name: BlockingKernelClient &rarr; ZMQSocketChannel &rarr; close', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2138, 'parent': 2702, 'tfidf_word': 'io kernel loop manager wrap zmqstream async ', 'tfidf_method': 'as_zmqstream wrapped AsyncIOLoopKernelManager IOLoopKernelManager ', 'lda_word': ' loop,wrap,kernel,zmqstream,manager,', 'lda_method': ' as_zmqstream,wrap,ioloopkernelmanager,asyncioloopkernelmanager,', 'lsi_word': ' io,kernel,zmqstream,manager,wrap,', 'lsi_method': ' as_zmqstream,wrap,ioloopkernelmanager,asyncioloopkernelmanager,', 'spm_method': ' ', 'text_summary': '', 'files_count': 1, 'files': ['manager.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'225': 'IOLoopKernelManager(manager.py)', '226': 'as_zmqstream(manager.py)', '233': 'wrapped(manager.py)', '224': 'AsyncIOLoopKernelManager(manager.py)'}}, {'key': 2701, 'parent': 2702, 'tfidf_word': 'raw subclass native name flush permission io code loop restarter ', 'tfidf_method': 'test_code_to_line_no_code test_default_version setUp extract_oname_v4 test_complete_reply test_complete_request test_display_data test_execute_reply SignalTestApp reqrep ', 'lda_word': ' test,run,kernel,lifecycle,cinfo,', 'lda_method': ' start,stop,run_lifecycle,test_tcp_cinfo,run_cinfo,', 'lsi_word': ' test,kernel,adapt,session,reply,', 'lsi_method': ' start,setup,setup_signals,shutdown,shutdown_handler,', 'spm_method': ' ', 'text_summary': "return ip for localhost (almost always 127.0.0.1)   Ensure that a sequence of kernel startups doesn't break anything. This method is called in the ioloop thread when a message arrives. Pass a message to the ZMQ socket to send. Stop the kernel polling. Return a list of the kernel ids of the active kernels. Return the connection info as a dict. Ensure that a sequence of kernel startups doesn't break anything. find a connection file, and return its absolute path. return ip for localhost (almost always 127.0.0.1)      find a connection file, and return its absolute path. For tests, create a file to indicate that we've started. test load_connection_file() after. handle kernel info reply. Get the hb channel object for this kernel. Send a raw message via ident path. Make a blocking client connected to my kernel. Immediately processes all pending messages on this channel. Shutdown all kernels. Return the number of running kernels. Interrupts the kernel by sending it a signal. Get a message from the shell channel. This is run in the ioloop thread when the kernel info reply is received. default function for packing datetime objects in JSON. Send a shutdown request via control channel. Create an interrupt event handle. Get a message from the iopub channel. Sends an interrupt event using the specified handle. test that messages receive unique ids.", 'files_count': 33, 'files': ['test_connect.py', 'connect.py', 'manager.py', 'restarter.py', 'kernelspecapp.py', 'kernelapp.py', 'threaded.py', 'managerabc.py', 'test_session.py', 'test_adapter.py', 'forward.py', 'test_manager.py', 'kernelspec.py', 'channels.py', 'test_jsonutil.py', 'session.py', 'jsonutil.py', 'test_kernelmanager.py', 'utils.py', 'test_kernelspec.py', 'signalkernel.py', 'test_multikernelmanager.py', 'localinterfaces.py', 'adapter.py', 'client.py', 'test_kernelapp.py', 'test_client.py', 'win_interrupt.py', 'channelsabc.py', 'runapp.py', 'consoleapp.py', 'multikernelmanager.py', 'launcher.py'], 'execution_path_count': 241, 'function_id_to_name_file': {'568': 'test_mixin_record_random_ports(test_connect.py)', '557': 'DummyConfigurable(test_connect.py)', '188': 'ConnectionFileMixin(connect.py)', '567': 'test_mixin_cleanup_random_ports(test_connect.py)', '225': 'IOLoopKernelManager(manager.py)', '235': 'IOLoopKernelRestarter(restarter.py)', '426': 'KernelRestarter(restarter.py)', '224': 'AsyncIOLoopKernelManager(manager.py)', '234': 'AsyncIOLoopKernelRestarter(restarter.py)', '291': 'start(kernelspecapp.py)', '251': 'start(kernelapp.py)', '249': 'setup_signals(kernelapp.py)', '252': 'shutdown_handler(kernelapp.py)', '250': 'shutdown(kernelapp.py)', '248': 'log_connection_info(kernelapp.py)', '199': 'blocking_client(connect.py)', '208': 'get_connection_info(connect.py)', '725': 'stop_channels(threaded.py)', '373': 'is_alive(managerabc.py)', '684': 'test_bad_unpack(test_session.py)', '676': '_bad_unpacker(test_session.py)', '536': 'test_complete_request(test_adapter.py)', '517': 'adapt(test_adapter.py)', '562': 'test_find_connection_file_local(test_connect.py)', '189': 'find_connection_file(connect.py)', '492': 'handle(forward.py)', '730': 'close(threaded.py)', '493': 'SubHander(forward.py)', '490': 'Handler(forward.py)', '635': 'test_connection_file_real_path(test_manager.py)', '253': 'KernelSpec(kernelspec.py)', '718': 'close(threaded.py)', '132': 'close(channels.py)', '114': 'send(channels.py)', '88': 'send(channels.py)', '83': 'close(channels.py)', '109': 'close(channels.py)', '575': 'test_date_default(test_jsonutil.py)', '450': 'utcnow(session.py)', '241': 'date_default(jsonutil.py)', '240': '_ensure_tzinfo(jsonutil.py)', '597': 'test_subclasses(test_kernelmanager.py)', '703': 'AsyncKernelManagerWithCleanup(utils.py)', '595': 'test_signal_kernel_subprocesses(test_kernelmanager.py)', '598': 'execute(test_kernelmanager.py)', '702': 'AsyncKernelManagerSubclass(utils.py)', '611': 'test_start_parallel_process_kernels(test_kernelmanager.py)', '591': 'transport(test_kernelmanager.py)', '606': 'test_templated_kspec_env(test_kernelmanager.py)', '599': '_env_test_body(test_kernelmanager.py)', '607': 'execute(test_kernelmanager.py)', '612': 'test_start_parallel_thread_kernels(test_kernelmanager.py)', '604': 'test_signal_kernel_subprocesses(test_kernelmanager.py)', '608': 'execute(test_kernelmanager.py)', '586': 'env(test_kernelmanager.py)', '712': 'stop(utils.py)', '711': 'start(utils.py)', '705': 'test_env(utils.py)', '630': 'test_validate_kernel_name(test_kernelspec.py)', '257': '_is_valid_kernel_name(kernelspec.py)', '506': 'SignalTestApp(signalkernel.py)', '507': 'SignalTestKernel(signalkernel.py)', '627': 'test_remove_kernel_spec(test_kernelspec.py)', '617': '_install_sample_kernel(test_kernelspec.py)', '626': 'test_kernel_spec_priority(test_kernelspec.py)', '651': 'test_tcp_cinfo(test_multikernelmanager.py)', '640': '_run_cinfo(test_multikernelmanager.py)', '621': 'test_find_all_specs(test_kernelspec.py)', '622': 'test_find_kernel_specs(test_kernelspec.py)', '623': 'test_get_kernel_spec(test_kernelspec.py)', '619': 'tearDown(test_kernelspec.py)', '618': 'setUp(test_kernelspec.py)', '649': 'test_start_sequence_ipc_kernels(test_multikernelmanager.py)', '641': '_run_lifecycle(test_multikernelmanager.py)', '650': 'test_start_sequence_tcp_kernels(test_multikernelmanager.py)', '644': 'test_ipc_cinfo(test_multikernelmanager.py)', '315': 'localhost(localinterfaces.py)', '645': 'test_ipc_lifecycle(test_multikernelmanager.py)', '665': 'test_start_sequence_tcp_kernels(test_multikernelmanager.py)', '657': '_run_lifecycle(test_multikernelmanager.py)', '664': 'test_start_sequence_ipc_kernels(test_multikernelmanager.py)', '659': 'test_ipc_cinfo(test_multikernelmanager.py)', '656': '_run_cinfo(test_multikernelmanager.py)', '660': 'test_ipc_lifecycle(test_multikernelmanager.py)', '666': 'test_tcp_cinfo(test_multikernelmanager.py)', '668': 'test_tcp_lifecycle_with_kernel_id(test_multikernelmanager.py)', '569': 'test_secure_write(test_connect.py)', '573': 'check_user_only_permissions(test_connect.py)', '574': 'fetch_win32_permissions(test_connect.py)', '563': 'test_find_connection_file_relative(test_connect.py)', '561': 'test_find_connection_file_abspath(test_connect.py)', '560': 'test_find_connection_file(test_connect.py)', '565': 'test_load_connection_file_session_with_kn(test_connect.py)', '441': 'Session(session.py)', '539': 'test_input_request(test_adapter.py)', '564': 'test_load_connection_file_session(test_connect.py)', '537': 'test_display_data(test_adapter.py)', '540': 'test_inspect_reply(test_adapter.py)', '543': 'test_kernel_info_reply(test_adapter.py)', '542': 'test_inspect_request_token(test_adapter.py)', '535': 'test_complete_reply(test_adapter.py)', '541': 'test_inspect_request(test_adapter.py)', '538': 'test_execute_request(test_adapter.py)', '545': 'test_rename_type(test_adapter.py)', '544': 'test_no_adapt(test_adapter.py)', '546': 'test_same_version(test_adapter.py)', '514': 'V5toV4TestCase(test_adapter.py)', '512': 'AdapterTest(test_adapter.py)', '526': 'test_input_request(test_adapter.py)', '523': 'test_display_data(test_adapter.py)', '527': 'test_kernel_info_reply(test_adapter.py)', '530': 'test_object_info_reply_not_found(test_adapter.py)', '529': 'test_object_info_reply(test_adapter.py)', '531': 'test_object_info_request(test_adapter.py)', '521': 'test_complete_reply(test_adapter.py)', '522': 'test_complete_request(test_adapter.py)', '524': 'test_execute_reply(test_adapter.py)', '532': 'test_rename_type(test_adapter.py)', '525': 'test_execute_request(test_adapter.py)', '528': 'test_no_adapt(test_adapter.py)', '533': 'test_same_version(test_adapter.py)', '513': 'V4toV5TestCase(test_adapter.py)', '519': 'setUp(test_adapter.py)', '516': 'test_default_version(test_adapter.py)', '515': 'test_code_to_line_no_code(test_adapter.py)', '51': 'code_to_line(adapter.py)', '704': 'execute(utils.py)', '158': 'get_shell_msg(client.py)', '615': 'execute(test_kernelmanager.py)', '157': 'get_iopub_msg(client.py)', '710': '__exit__(utils.py)', '709': '__enter__(utils.py)', '580': 'test_kernelapp_lifecycle(test_kernelapp.py)', '579': '_launch(test_kernelapp.py)', '686': 'test_clone(test_session.py)', '473': 'clone(session.py)', '695': 'test_send_raw(test_session.py)', '481': 'send_raw(session.py)', '483': 'sign(session.py)', '689': 'test_datetimes_msgpack(test_session.py)', '475': 'feed_identities(session.py)', '690': 'test_datetimes_pickle(test_session.py)', '688': 'test_datetimes(test_session.py)', '683': 'test_bad_roundtrip(test_session.py)', '685': 'test_bad_unpacker(test_session.py)', '682': 'test_bad_packer(test_session.py)', '681': 'test_bad_pack(test_session.py)', '675': '_bad_packer(test_session.py)', '687': 'test_cull_digest_history(test_session.py)', '700': 'test_zero_digest_history(test_session.py)', '697': 'test_session_id(test_session.py)', '699': 'test_unique_msg_ids(test_session.py)', '445': 'msg_header(session.py)', '698': 'test_tracking(test_session.py)', '680': 'test_args(test_session.py)', '694': 'test_send(test_session.py)', '478': 'msg_id(session.py)', '696': 'test_serialize(test_session.py)', '674': 'TestSession(test_session.py)', '673': 'SessionTestCase(test_session.py)', '678': 'setUp(test_session.py)', '556': 'test_shutdown(test_client.py)', '548': '_check_reply(test_client.py)', '550': 'test_comm_info(test_client.py)', '555': 'test_kernel_info(test_client.py)', '551': 'test_complete(test_client.py)', '554': 'test_inspect(test_client.py)', '553': 'test_history(test_client.py)', '549': 'setUp(test_client.py)', '255': 'NoSuchKernel(kernelspec.py)', '116': 'BlockingKernelClient(client.py)', '117': 'reqrep(client.py)', '124': 'wrapped(client.py)', '123': 'wait_for_ready(client.py)', '150': '_handle_kernel_info_reply(client.py)', '125': 'HBChannel(channels.py)', '104': 'wait_for_ready(client.py)', '102': 'hb_channel(client.py)', '196': '_make_url(connect.py)', '90': 'AsyncKernelClient(client.py)', '91': 'reqrep(client.py)', '105': 'wrapped(client.py)', '80': 'ZMQSocketChannel(channels.py)', '154': 'control_channel(client.py)', '723': 'ioloop(threaded.py)', '160': 'hb_channel(client.py)', '171': 'stdin_channel(client.py)', '164': 'iopub_channel(client.py)', '168': 'shell_channel(client.py)', '328': 'interrupt_kernel(manager.py)', '740': 'send_interrupt(win_interrupt.py)', '334': '__del__(manager.py)', '200': 'cleanup_connection_file(connect.py)', '293': 'start(kernelspecapp.py)', '294': 'path_key(kernelspecapp.py)', '735': 'start(threaded.py)', '720': 'start(threaded.py)', '141': 'start(channelsabc.py)', '432': 'start(restarter.py)', '288': 'start(kernelspecapp.py)', '89': 'start(channels.py)', '115': 'start(channels.py)', '290': 'start(kernelspecapp.py)', '438': 'parse_command_line(runapp.py)', '218': 'build_kernel_argv(consoleapp.py)', '308': '_only_once(localinterfaces.py)', '317': 'wrapped(localinterfaces.py)', '47': 'V4toV5(adapter.py)', '46': 'Adapter(adapter.py)', '77': 'object_info_request(adapter.py)', '52': 'extract_oname_v4(adapter.py)', '70': 'complete_request(adapter.py)', '75': 'kernel_info_reply(adapter.py)', '49': '_version_str_to_list(adapter.py)', '48': 'V5toV4(adapter.py)', '53': '__call__(adapter.py)', '54': 'handle_reply_status_error(adapter.py)', '57': 'update_msg_type(adapter.py)', '56': 'update_metadata(adapter.py)', '55': 'update_header(adapter.py)', '247': 'initialize(kernelapp.py)', '246': '_record_started(kernelapp.py)', '585': 'config(test_kernelmanager.py)', '262': 'install_native_kernel_spec(kernelspec.py)', '276': 'install_native_kernel_spec(kernelspec.py)', '265': 'to_json(kernelspec.py)', '264': 'to_dict(kernelspec.py)', '449': 'test_msg2obj(session.py)', '440': 'Message(session.py)', '453': '__init__(session.py)', '470': '_signature_scheme_changed(session.py)', '465': '_new_auth(session.py)', '463': '_key_default(session.py)', '447': 'new_id_bytes(session.py)', '462': '_key_changed(session.py)', '443': 'default_secure(session.py)', '469': '_session_default(session.py)', '446': 'new_id(session.py)', '412': 'is_alive(multikernelmanager.py)', '420': 'shutdown_all(multikernelmanager.py)', '413': 'list_kernel_ids(multikernelmanager.py)', '721': 'stop(threaded.py)', '140': 'is_alive(channelsabc.py)', '732': 'is_alive(threaded.py)', '112': 'is_alive(channels.py)', '86': 'is_alive(channels.py)', '724': 'start_channels(threaded.py)', '722': '_check_kernel_info_reply(threaded.py)', '716': '__init__(threaded.py)', '387': 'shutdown_kernel(multikernelmanager.py)', '416': 'remove_kernel(multikernelmanager.py)', '713': 'IOLoopThread(threaded.py)', '714': 'ThreadedKernelClient(threaded.py)', '715': 'ThreadedZMQSocketChannel(threaded.py)', '731': 'flush(threaded.py)', '727': '_flush(threaded.py)', '386': 'shutdown_all(multikernelmanager.py)', '418': 'request_shutdown(multikernelmanager.py)', '402': 'cleanup_resources(multikernelmanager.py)', '408': 'finish_shutdown(multikernelmanager.py)', '393': '__len__(multikernelmanager.py)', '421': 'shutdown_kernel(multikernelmanager.py)', '198': '_session_default(connect.py)', '298': 'launch_kernel(launcher.py)', '739': 'create_interrupt_event(win_interrupt.py)', '741': 'SECURITY_ATTRIBUTES(win_interrupt.py)', '215': '__init__(consoleapp.py)', '509': '__init__(signalkernel.py)', '278': '__init__(kernelspec.py)', '127': '__init__(channels.py)', '126': 'InvalidPortNumber(channels.py)', '107': '__init__(channels.py)', '81': '__init__(channels.py)', '392': '__init__(multikernelmanager.py)', '726': '__init__(threaded.py)', '737': 'setup_stream(threaded.py)', '728': '_handle_recv(threaded.py)', '729': 'call_handlers(threaded.py)', '136': 'stop(channels.py)', '133': 'is_beating(channels.py)', '135': 'run(channels.py)', '145': 'time_to_dead(channelsabc.py)', '131': 'call_handlers(channels.py)', '130': '_poll(channels.py)'}}, {'key': 601, 'parent': 2138, 'tfidf_word': 'EP: 601, Name: IOLoopKernelManager &rarr; as_zmqstream &rarr; wrapped', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 611, 'parent': 2138, 'tfidf_word': 'EP: 611, Name: AsyncIOLoopKernelManager &rarr; as_zmqstream &rarr; wrapped', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2186, 'parent': 2701, 'tfidf_word': 'configurable connection dummy file port random test cleanup record mixin ', 'tfidf_method': 'ConnectionFileMixin DummyConfigurable test_mixin_cleanup_random_ports test_mixin_record_random_ports ', 'lda_word': ' mixin,dummy,test,configurable,port,', 'lda_method': ' dummyconfigurable,test_mixin_cleanup_random_ports,connectionfilemixin,test_mixin_record_random_ports,', 'lsi_word': ' mixin,configurable,dummy,random,test,', 'lsi_method': ' dummyconfigurable,connectionfilemixin,test_mixin_cleanup_random_ports,test_mixin_record_random_ports,', 'spm_method': ' ', 'text_summary': '', 'files_count': 2, 'files': ['test_connect.py', 'connect.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'568': 'test_mixin_record_random_ports(test_connect.py)', '557': 'DummyConfigurable(test_connect.py)', '188': 'ConnectionFileMixin(connect.py)', '567': 'test_mixin_cleanup_random_ports(test_connect.py)'}}, {'key': 2695, 'parent': 2701, 'tfidf_word': 'date raw native permission flush name code loop io restarter ', 'tfidf_method': 'V5toV4TestCase test_code_to_line_no_code test_default_version setUp extract_oname_v4 test_complete_reply test_complete_request test_display_data test_execute_request reqrep ', 'lda_word': ' test,kernel,stop,run,lifecycle,', 'lda_method': ' start,init,adapt,start_channels,call,', 'lsi_word': ' test,kernel,adapt,session,reply,', 'lsi_method': ' start,setup,shutdown,shutdown_handler,setup_signals,', 'spm_method': ' ', 'text_summary': "return ip for localhost (almost always 127.0.0.1)   Ensure that a sequence of kernel startups doesn't break anything. This method is called in the ioloop thread when a message arrives. Pass a message to the ZMQ socket to send. Stop the kernel polling. Return a list of the kernel ids of the active kernels. Return the connection info as a dict. Ensure that a sequence of kernel startups doesn't break anything. find a connection file, and return its absolute path. return ip for localhost (almost always 127.0.0.1)      find a connection file, and return its absolute path. For tests, create a file to indicate that we've started. test load_connection_file() after. handle kernel info reply. Get the hb channel object for this kernel. Send a raw message via ident path. Make a blocking client connected to my kernel. Immediately processes all pending messages on this channel. Shutdown all kernels. Return the number of running kernels. Interrupts the kernel by sending it a signal. Get a message from the shell channel. This is run in the ioloop thread when the kernel info reply is received. default function for packing datetime objects in JSON. Send a shutdown request via control channel. Create an interrupt event handle. Get a message from the iopub channel. Sends an interrupt event using the specified handle. test that messages receive unique ids.", 'files_count': 33, 'files': ['manager.py', 'restarter.py', 'kernelspecapp.py', 'kernelapp.py', 'connect.py', 'threaded.py', 'managerabc.py', 'test_session.py', 'test_adapter.py', 'test_connect.py', 'forward.py', 'test_manager.py', 'kernelspec.py', 'channels.py', 'test_jsonutil.py', 'session.py', 'jsonutil.py', 'test_kernelmanager.py', 'utils.py', 'test_kernelspec.py', 'signalkernel.py', 'test_multikernelmanager.py', 'localinterfaces.py', 'adapter.py', 'client.py', 'test_kernelapp.py', 'test_client.py', 'win_interrupt.py', 'channelsabc.py', 'runapp.py', 'consoleapp.py', 'multikernelmanager.py', 'launcher.py'], 'execution_path_count': 239, 'function_id_to_name_file': {'225': 'IOLoopKernelManager(manager.py)', '235': 'IOLoopKernelRestarter(restarter.py)', '426': 'KernelRestarter(restarter.py)', '224': 'AsyncIOLoopKernelManager(manager.py)', '234': 'AsyncIOLoopKernelRestarter(restarter.py)', '291': 'start(kernelspecapp.py)', '251': 'start(kernelapp.py)', '249': 'setup_signals(kernelapp.py)', '252': 'shutdown_handler(kernelapp.py)', '250': 'shutdown(kernelapp.py)', '248': 'log_connection_info(kernelapp.py)', '199': 'blocking_client(connect.py)', '208': 'get_connection_info(connect.py)', '725': 'stop_channels(threaded.py)', '373': 'is_alive(managerabc.py)', '684': 'test_bad_unpack(test_session.py)', '676': '_bad_unpacker(test_session.py)', '536': 'test_complete_request(test_adapter.py)', '517': 'adapt(test_adapter.py)', '562': 'test_find_connection_file_local(test_connect.py)', '189': 'find_connection_file(connect.py)', '492': 'handle(forward.py)', '730': 'close(threaded.py)', '493': 'SubHander(forward.py)', '490': 'Handler(forward.py)', '635': 'test_connection_file_real_path(test_manager.py)', '253': 'KernelSpec(kernelspec.py)', '718': 'close(threaded.py)', '132': 'close(channels.py)', '114': 'send(channels.py)', '88': 'send(channels.py)', '83': 'close(channels.py)', '109': 'close(channels.py)', '575': 'test_date_default(test_jsonutil.py)', '450': 'utcnow(session.py)', '241': 'date_default(jsonutil.py)', '240': '_ensure_tzinfo(jsonutil.py)', '597': 'test_subclasses(test_kernelmanager.py)', '703': 'AsyncKernelManagerWithCleanup(utils.py)', '595': 'test_signal_kernel_subprocesses(test_kernelmanager.py)', '598': 'execute(test_kernelmanager.py)', '702': 'AsyncKernelManagerSubclass(utils.py)', '611': 'test_start_parallel_process_kernels(test_kernelmanager.py)', '591': 'transport(test_kernelmanager.py)', '606': 'test_templated_kspec_env(test_kernelmanager.py)', '599': '_env_test_body(test_kernelmanager.py)', '607': 'execute(test_kernelmanager.py)', '612': 'test_start_parallel_thread_kernels(test_kernelmanager.py)', '604': 'test_signal_kernel_subprocesses(test_kernelmanager.py)', '608': 'execute(test_kernelmanager.py)', '586': 'env(test_kernelmanager.py)', '712': 'stop(utils.py)', '711': 'start(utils.py)', '705': 'test_env(utils.py)', '630': 'test_validate_kernel_name(test_kernelspec.py)', '257': '_is_valid_kernel_name(kernelspec.py)', '506': 'SignalTestApp(signalkernel.py)', '507': 'SignalTestKernel(signalkernel.py)', '627': 'test_remove_kernel_spec(test_kernelspec.py)', '617': '_install_sample_kernel(test_kernelspec.py)', '626': 'test_kernel_spec_priority(test_kernelspec.py)', '651': 'test_tcp_cinfo(test_multikernelmanager.py)', '640': '_run_cinfo(test_multikernelmanager.py)', '621': 'test_find_all_specs(test_kernelspec.py)', '622': 'test_find_kernel_specs(test_kernelspec.py)', '623': 'test_get_kernel_spec(test_kernelspec.py)', '619': 'tearDown(test_kernelspec.py)', '618': 'setUp(test_kernelspec.py)', '649': 'test_start_sequence_ipc_kernels(test_multikernelmanager.py)', '641': '_run_lifecycle(test_multikernelmanager.py)', '650': 'test_start_sequence_tcp_kernels(test_multikernelmanager.py)', '644': 'test_ipc_cinfo(test_multikernelmanager.py)', '315': 'localhost(localinterfaces.py)', '645': 'test_ipc_lifecycle(test_multikernelmanager.py)', '665': 'test_start_sequence_tcp_kernels(test_multikernelmanager.py)', '657': '_run_lifecycle(test_multikernelmanager.py)', '664': 'test_start_sequence_ipc_kernels(test_multikernelmanager.py)', '659': 'test_ipc_cinfo(test_multikernelmanager.py)', '656': '_run_cinfo(test_multikernelmanager.py)', '660': 'test_ipc_lifecycle(test_multikernelmanager.py)', '666': 'test_tcp_cinfo(test_multikernelmanager.py)', '668': 'test_tcp_lifecycle_with_kernel_id(test_multikernelmanager.py)', '569': 'test_secure_write(test_connect.py)', '573': 'check_user_only_permissions(test_connect.py)', '574': 'fetch_win32_permissions(test_connect.py)', '563': 'test_find_connection_file_relative(test_connect.py)', '561': 'test_find_connection_file_abspath(test_connect.py)', '560': 'test_find_connection_file(test_connect.py)', '565': 'test_load_connection_file_session_with_kn(test_connect.py)', '441': 'Session(session.py)', '539': 'test_input_request(test_adapter.py)', '564': 'test_load_connection_file_session(test_connect.py)', '537': 'test_display_data(test_adapter.py)', '540': 'test_inspect_reply(test_adapter.py)', '543': 'test_kernel_info_reply(test_adapter.py)', '542': 'test_inspect_request_token(test_adapter.py)', '535': 'test_complete_reply(test_adapter.py)', '541': 'test_inspect_request(test_adapter.py)', '538': 'test_execute_request(test_adapter.py)', '545': 'test_rename_type(test_adapter.py)', '544': 'test_no_adapt(test_adapter.py)', '546': 'test_same_version(test_adapter.py)', '514': 'V5toV4TestCase(test_adapter.py)', '512': 'AdapterTest(test_adapter.py)', '526': 'test_input_request(test_adapter.py)', '523': 'test_display_data(test_adapter.py)', '527': 'test_kernel_info_reply(test_adapter.py)', '530': 'test_object_info_reply_not_found(test_adapter.py)', '529': 'test_object_info_reply(test_adapter.py)', '531': 'test_object_info_request(test_adapter.py)', '521': 'test_complete_reply(test_adapter.py)', '522': 'test_complete_request(test_adapter.py)', '524': 'test_execute_reply(test_adapter.py)', '532': 'test_rename_type(test_adapter.py)', '525': 'test_execute_request(test_adapter.py)', '528': 'test_no_adapt(test_adapter.py)', '533': 'test_same_version(test_adapter.py)', '513': 'V4toV5TestCase(test_adapter.py)', '519': 'setUp(test_adapter.py)', '516': 'test_default_version(test_adapter.py)', '515': 'test_code_to_line_no_code(test_adapter.py)', '51': 'code_to_line(adapter.py)', '704': 'execute(utils.py)', '158': 'get_shell_msg(client.py)', '615': 'execute(test_kernelmanager.py)', '157': 'get_iopub_msg(client.py)', '710': '__exit__(utils.py)', '709': '__enter__(utils.py)', '580': 'test_kernelapp_lifecycle(test_kernelapp.py)', '579': '_launch(test_kernelapp.py)', '686': 'test_clone(test_session.py)', '473': 'clone(session.py)', '695': 'test_send_raw(test_session.py)', '481': 'send_raw(session.py)', '483': 'sign(session.py)', '689': 'test_datetimes_msgpack(test_session.py)', '475': 'feed_identities(session.py)', '690': 'test_datetimes_pickle(test_session.py)', '688': 'test_datetimes(test_session.py)', '683': 'test_bad_roundtrip(test_session.py)', '685': 'test_bad_unpacker(test_session.py)', '682': 'test_bad_packer(test_session.py)', '681': 'test_bad_pack(test_session.py)', '675': '_bad_packer(test_session.py)', '687': 'test_cull_digest_history(test_session.py)', '700': 'test_zero_digest_history(test_session.py)', '697': 'test_session_id(test_session.py)', '699': 'test_unique_msg_ids(test_session.py)', '445': 'msg_header(session.py)', '698': 'test_tracking(test_session.py)', '680': 'test_args(test_session.py)', '694': 'test_send(test_session.py)', '478': 'msg_id(session.py)', '696': 'test_serialize(test_session.py)', '674': 'TestSession(test_session.py)', '673': 'SessionTestCase(test_session.py)', '678': 'setUp(test_session.py)', '556': 'test_shutdown(test_client.py)', '548': '_check_reply(test_client.py)', '550': 'test_comm_info(test_client.py)', '555': 'test_kernel_info(test_client.py)', '551': 'test_complete(test_client.py)', '554': 'test_inspect(test_client.py)', '553': 'test_history(test_client.py)', '549': 'setUp(test_client.py)', '255': 'NoSuchKernel(kernelspec.py)', '116': 'BlockingKernelClient(client.py)', '117': 'reqrep(client.py)', '124': 'wrapped(client.py)', '123': 'wait_for_ready(client.py)', '150': '_handle_kernel_info_reply(client.py)', '125': 'HBChannel(channels.py)', '104': 'wait_for_ready(client.py)', '102': 'hb_channel(client.py)', '196': '_make_url(connect.py)', '90': 'AsyncKernelClient(client.py)', '91': 'reqrep(client.py)', '105': 'wrapped(client.py)', '80': 'ZMQSocketChannel(channels.py)', '154': 'control_channel(client.py)', '723': 'ioloop(threaded.py)', '160': 'hb_channel(client.py)', '171': 'stdin_channel(client.py)', '164': 'iopub_channel(client.py)', '168': 'shell_channel(client.py)', '328': 'interrupt_kernel(manager.py)', '740': 'send_interrupt(win_interrupt.py)', '334': '__del__(manager.py)', '200': 'cleanup_connection_file(connect.py)', '293': 'start(kernelspecapp.py)', '294': 'path_key(kernelspecapp.py)', '735': 'start(threaded.py)', '720': 'start(threaded.py)', '141': 'start(channelsabc.py)', '432': 'start(restarter.py)', '288': 'start(kernelspecapp.py)', '89': 'start(channels.py)', '115': 'start(channels.py)', '290': 'start(kernelspecapp.py)', '438': 'parse_command_line(runapp.py)', '218': 'build_kernel_argv(consoleapp.py)', '308': '_only_once(localinterfaces.py)', '317': 'wrapped(localinterfaces.py)', '47': 'V4toV5(adapter.py)', '46': 'Adapter(adapter.py)', '77': 'object_info_request(adapter.py)', '52': 'extract_oname_v4(adapter.py)', '70': 'complete_request(adapter.py)', '75': 'kernel_info_reply(adapter.py)', '49': '_version_str_to_list(adapter.py)', '48': 'V5toV4(adapter.py)', '53': '__call__(adapter.py)', '54': 'handle_reply_status_error(adapter.py)', '57': 'update_msg_type(adapter.py)', '56': 'update_metadata(adapter.py)', '55': 'update_header(adapter.py)', '247': 'initialize(kernelapp.py)', '246': '_record_started(kernelapp.py)', '585': 'config(test_kernelmanager.py)', '262': 'install_native_kernel_spec(kernelspec.py)', '276': 'install_native_kernel_spec(kernelspec.py)', '265': 'to_json(kernelspec.py)', '264': 'to_dict(kernelspec.py)', '449': 'test_msg2obj(session.py)', '440': 'Message(session.py)', '453': '__init__(session.py)', '470': '_signature_scheme_changed(session.py)', '465': '_new_auth(session.py)', '463': '_key_default(session.py)', '447': 'new_id_bytes(session.py)', '462': '_key_changed(session.py)', '443': 'default_secure(session.py)', '469': '_session_default(session.py)', '446': 'new_id(session.py)', '412': 'is_alive(multikernelmanager.py)', '420': 'shutdown_all(multikernelmanager.py)', '413': 'list_kernel_ids(multikernelmanager.py)', '721': 'stop(threaded.py)', '140': 'is_alive(channelsabc.py)', '732': 'is_alive(threaded.py)', '112': 'is_alive(channels.py)', '86': 'is_alive(channels.py)', '724': 'start_channels(threaded.py)', '722': '_check_kernel_info_reply(threaded.py)', '716': '__init__(threaded.py)', '387': 'shutdown_kernel(multikernelmanager.py)', '416': 'remove_kernel(multikernelmanager.py)', '713': 'IOLoopThread(threaded.py)', '714': 'ThreadedKernelClient(threaded.py)', '715': 'ThreadedZMQSocketChannel(threaded.py)', '731': 'flush(threaded.py)', '727': '_flush(threaded.py)', '386': 'shutdown_all(multikernelmanager.py)', '418': 'request_shutdown(multikernelmanager.py)', '402': 'cleanup_resources(multikernelmanager.py)', '408': 'finish_shutdown(multikernelmanager.py)', '393': '__len__(multikernelmanager.py)', '421': 'shutdown_kernel(multikernelmanager.py)', '198': '_session_default(connect.py)', '298': 'launch_kernel(launcher.py)', '739': 'create_interrupt_event(win_interrupt.py)', '741': 'SECURITY_ATTRIBUTES(win_interrupt.py)', '215': '__init__(consoleapp.py)', '509': '__init__(signalkernel.py)', '278': '__init__(kernelspec.py)', '127': '__init__(channels.py)', '126': 'InvalidPortNumber(channels.py)', '107': '__init__(channels.py)', '81': '__init__(channels.py)', '392': '__init__(multikernelmanager.py)', '726': '__init__(threaded.py)', '737': 'setup_stream(threaded.py)', '728': '_handle_recv(threaded.py)', '729': 'call_handlers(threaded.py)', '136': 'stop(channels.py)', '133': 'is_beating(channels.py)', '135': 'run(channels.py)', '145': 'time_to_dead(channelsabc.py)', '131': 'call_handlers(channels.py)', '130': '_poll(channels.py)'}}, {'key': 1107, 'parent': 2186, 'tfidf_word': 'EP: 1107, Name: test_mixin_record_random_ports &rarr; DummyConfigurable &rarr; ConnectionFileMixin', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1109, 'parent': 2186, 'tfidf_word': 'EP: 1109, Name: test_mixin_cleanup_random_ports &rarr; DummyConfigurable &rarr; ConnectionFileMixin', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2276, 'parent': 2695, 'tfidf_word': 'manager io loop restarter async kernel ', 'tfidf_method': 'IOLoopKernelRestarter KernelRestarter AsyncIOLoopKernelManager IOLoopKernelManager AsyncIOLoopKernelRestarter ', 'lda_word': ' restarter,io,loop,kernel,manager,', 'lda_method': ' kernelrestarter,ioloopkernelrestarter,ioloopkernelmanager,asyncioloopkernelmanager,asyncioloopkernelrestarter,', 'lsi_word': ' kernel,loop,restarter,io,async,', 'lsi_method': ' kernelrestarter,ioloopkernelrestarter,asyncioloopkernelmanager,asyncioloopkernelrestarter,ioloopkernelmanager,', 'spm_method': ' ', 'text_summary': '', 'files_count': 2, 'files': ['manager.py', 'restarter.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'225': 'IOLoopKernelManager(manager.py)', '235': 'IOLoopKernelRestarter(restarter.py)', '426': 'KernelRestarter(restarter.py)', '224': 'AsyncIOLoopKernelManager(manager.py)', '234': 'AsyncIOLoopKernelRestarter(restarter.py)'}}, {'key': 2692, 'parent': 2695, 'tfidf_word': 'threaded raw date clone subclass permission name flush native code ', 'tfidf_method': 'test_default_version setUp extract_oname_v4 test_complete_reply test_complete_request test_display_data test_execute_reply test_execute_request test_kernel_info_reply reqrep ', 'lda_word': ' close,alive,test,stop,channels,', 'lda_method': ' adapt,is_alive,is_beating,make_url,test_env,', 'lsi_word': ' test,kernel,adapt,session,reply,', 'lsi_method': ' start,setup,shutdown_handler,shutdown,setup_signals,', 'spm_method': ' ', 'text_summary': "return ip for localhost (almost always 127.0.0.1)   Ensure that a sequence of kernel startups doesn't break anything. This method is called in the ioloop thread when a message arrives. Pass a message to the ZMQ socket to send. Stop the kernel polling. Return a list of the kernel ids of the active kernels. Return the connection info as a dict. Ensure that a sequence of kernel startups doesn't break anything. find a connection file, and return its absolute path. return ip for localhost (almost always 127.0.0.1)      find a connection file, and return its absolute path. For tests, create a file to indicate that we've started. test load_connection_file() after. handle kernel info reply. Get the hb channel object for this kernel. Send a raw message via ident path. Make a blocking client connected to my kernel. Immediately processes all pending messages on this channel. Shutdown all kernels. Return the number of running kernels. Interrupts the kernel by sending it a signal. Get a message from the shell channel. This is run in the ioloop thread when the kernel info reply is received. default function for packing datetime objects in JSON. Send a shutdown request via control channel. Create an interrupt event handle. Get a message from the iopub channel. Sends an interrupt event using the specified handle. test that messages receive unique ids.", 'files_count': 33, 'files': ['kernelspecapp.py', 'kernelapp.py', 'connect.py', 'threaded.py', 'managerabc.py', 'test_session.py', 'test_adapter.py', 'test_connect.py', 'forward.py', 'test_manager.py', 'kernelspec.py', 'channels.py', 'test_jsonutil.py', 'session.py', 'jsonutil.py', 'test_kernelmanager.py', 'utils.py', 'test_kernelspec.py', 'signalkernel.py', 'test_multikernelmanager.py', 'localinterfaces.py', 'adapter.py', 'client.py', 'test_kernelapp.py', 'test_client.py', 'manager.py', 'win_interrupt.py', 'channelsabc.py', 'restarter.py', 'runapp.py', 'consoleapp.py', 'multikernelmanager.py', 'launcher.py'], 'execution_path_count': 237, 'function_id_to_name_file': {'291': 'start(kernelspecapp.py)', '251': 'start(kernelapp.py)', '249': 'setup_signals(kernelapp.py)', '252': 'shutdown_handler(kernelapp.py)', '250': 'shutdown(kernelapp.py)', '248': 'log_connection_info(kernelapp.py)', '199': 'blocking_client(connect.py)', '208': 'get_connection_info(connect.py)', '725': 'stop_channels(threaded.py)', '373': 'is_alive(managerabc.py)', '684': 'test_bad_unpack(test_session.py)', '676': '_bad_unpacker(test_session.py)', '536': 'test_complete_request(test_adapter.py)', '517': 'adapt(test_adapter.py)', '562': 'test_find_connection_file_local(test_connect.py)', '189': 'find_connection_file(connect.py)', '492': 'handle(forward.py)', '730': 'close(threaded.py)', '493': 'SubHander(forward.py)', '490': 'Handler(forward.py)', '635': 'test_connection_file_real_path(test_manager.py)', '253': 'KernelSpec(kernelspec.py)', '718': 'close(threaded.py)', '132': 'close(channels.py)', '114': 'send(channels.py)', '88': 'send(channels.py)', '83': 'close(channels.py)', '109': 'close(channels.py)', '575': 'test_date_default(test_jsonutil.py)', '450': 'utcnow(session.py)', '241': 'date_default(jsonutil.py)', '240': '_ensure_tzinfo(jsonutil.py)', '597': 'test_subclasses(test_kernelmanager.py)', '703': 'AsyncKernelManagerWithCleanup(utils.py)', '595': 'test_signal_kernel_subprocesses(test_kernelmanager.py)', '598': 'execute(test_kernelmanager.py)', '702': 'AsyncKernelManagerSubclass(utils.py)', '611': 'test_start_parallel_process_kernels(test_kernelmanager.py)', '591': 'transport(test_kernelmanager.py)', '606': 'test_templated_kspec_env(test_kernelmanager.py)', '599': '_env_test_body(test_kernelmanager.py)', '607': 'execute(test_kernelmanager.py)', '612': 'test_start_parallel_thread_kernels(test_kernelmanager.py)', '604': 'test_signal_kernel_subprocesses(test_kernelmanager.py)', '608': 'execute(test_kernelmanager.py)', '586': 'env(test_kernelmanager.py)', '712': 'stop(utils.py)', '711': 'start(utils.py)', '705': 'test_env(utils.py)', '630': 'test_validate_kernel_name(test_kernelspec.py)', '257': '_is_valid_kernel_name(kernelspec.py)', '506': 'SignalTestApp(signalkernel.py)', '507': 'SignalTestKernel(signalkernel.py)', '627': 'test_remove_kernel_spec(test_kernelspec.py)', '617': '_install_sample_kernel(test_kernelspec.py)', '626': 'test_kernel_spec_priority(test_kernelspec.py)', '651': 'test_tcp_cinfo(test_multikernelmanager.py)', '640': '_run_cinfo(test_multikernelmanager.py)', '621': 'test_find_all_specs(test_kernelspec.py)', '622': 'test_find_kernel_specs(test_kernelspec.py)', '623': 'test_get_kernel_spec(test_kernelspec.py)', '619': 'tearDown(test_kernelspec.py)', '618': 'setUp(test_kernelspec.py)', '649': 'test_start_sequence_ipc_kernels(test_multikernelmanager.py)', '641': '_run_lifecycle(test_multikernelmanager.py)', '650': 'test_start_sequence_tcp_kernels(test_multikernelmanager.py)', '644': 'test_ipc_cinfo(test_multikernelmanager.py)', '315': 'localhost(localinterfaces.py)', '645': 'test_ipc_lifecycle(test_multikernelmanager.py)', '665': 'test_start_sequence_tcp_kernels(test_multikernelmanager.py)', '657': '_run_lifecycle(test_multikernelmanager.py)', '664': 'test_start_sequence_ipc_kernels(test_multikernelmanager.py)', '659': 'test_ipc_cinfo(test_multikernelmanager.py)', '656': '_run_cinfo(test_multikernelmanager.py)', '660': 'test_ipc_lifecycle(test_multikernelmanager.py)', '666': 'test_tcp_cinfo(test_multikernelmanager.py)', '668': 'test_tcp_lifecycle_with_kernel_id(test_multikernelmanager.py)', '569': 'test_secure_write(test_connect.py)', '573': 'check_user_only_permissions(test_connect.py)', '574': 'fetch_win32_permissions(test_connect.py)', '563': 'test_find_connection_file_relative(test_connect.py)', '561': 'test_find_connection_file_abspath(test_connect.py)', '560': 'test_find_connection_file(test_connect.py)', '565': 'test_load_connection_file_session_with_kn(test_connect.py)', '441': 'Session(session.py)', '539': 'test_input_request(test_adapter.py)', '564': 'test_load_connection_file_session(test_connect.py)', '537': 'test_display_data(test_adapter.py)', '540': 'test_inspect_reply(test_adapter.py)', '543': 'test_kernel_info_reply(test_adapter.py)', '542': 'test_inspect_request_token(test_adapter.py)', '535': 'test_complete_reply(test_adapter.py)', '541': 'test_inspect_request(test_adapter.py)', '538': 'test_execute_request(test_adapter.py)', '545': 'test_rename_type(test_adapter.py)', '544': 'test_no_adapt(test_adapter.py)', '546': 'test_same_version(test_adapter.py)', '514': 'V5toV4TestCase(test_adapter.py)', '512': 'AdapterTest(test_adapter.py)', '526': 'test_input_request(test_adapter.py)', '523': 'test_display_data(test_adapter.py)', '527': 'test_kernel_info_reply(test_adapter.py)', '530': 'test_object_info_reply_not_found(test_adapter.py)', '529': 'test_object_info_reply(test_adapter.py)', '531': 'test_object_info_request(test_adapter.py)', '521': 'test_complete_reply(test_adapter.py)', '522': 'test_complete_request(test_adapter.py)', '524': 'test_execute_reply(test_adapter.py)', '532': 'test_rename_type(test_adapter.py)', '525': 'test_execute_request(test_adapter.py)', '528': 'test_no_adapt(test_adapter.py)', '533': 'test_same_version(test_adapter.py)', '513': 'V4toV5TestCase(test_adapter.py)', '519': 'setUp(test_adapter.py)', '516': 'test_default_version(test_adapter.py)', '515': 'test_code_to_line_no_code(test_adapter.py)', '51': 'code_to_line(adapter.py)', '704': 'execute(utils.py)', '158': 'get_shell_msg(client.py)', '615': 'execute(test_kernelmanager.py)', '157': 'get_iopub_msg(client.py)', '710': '__exit__(utils.py)', '709': '__enter__(utils.py)', '580': 'test_kernelapp_lifecycle(test_kernelapp.py)', '579': '_launch(test_kernelapp.py)', '686': 'test_clone(test_session.py)', '473': 'clone(session.py)', '695': 'test_send_raw(test_session.py)', '481': 'send_raw(session.py)', '483': 'sign(session.py)', '689': 'test_datetimes_msgpack(test_session.py)', '475': 'feed_identities(session.py)', '690': 'test_datetimes_pickle(test_session.py)', '688': 'test_datetimes(test_session.py)', '683': 'test_bad_roundtrip(test_session.py)', '685': 'test_bad_unpacker(test_session.py)', '682': 'test_bad_packer(test_session.py)', '681': 'test_bad_pack(test_session.py)', '675': '_bad_packer(test_session.py)', '687': 'test_cull_digest_history(test_session.py)', '700': 'test_zero_digest_history(test_session.py)', '697': 'test_session_id(test_session.py)', '699': 'test_unique_msg_ids(test_session.py)', '445': 'msg_header(session.py)', '698': 'test_tracking(test_session.py)', '680': 'test_args(test_session.py)', '694': 'test_send(test_session.py)', '478': 'msg_id(session.py)', '696': 'test_serialize(test_session.py)', '674': 'TestSession(test_session.py)', '673': 'SessionTestCase(test_session.py)', '678': 'setUp(test_session.py)', '556': 'test_shutdown(test_client.py)', '548': '_check_reply(test_client.py)', '550': 'test_comm_info(test_client.py)', '555': 'test_kernel_info(test_client.py)', '551': 'test_complete(test_client.py)', '554': 'test_inspect(test_client.py)', '553': 'test_history(test_client.py)', '549': 'setUp(test_client.py)', '255': 'NoSuchKernel(kernelspec.py)', '116': 'BlockingKernelClient(client.py)', '117': 'reqrep(client.py)', '124': 'wrapped(client.py)', '123': 'wait_for_ready(client.py)', '150': '_handle_kernel_info_reply(client.py)', '125': 'HBChannel(channels.py)', '104': 'wait_for_ready(client.py)', '102': 'hb_channel(client.py)', '196': '_make_url(connect.py)', '90': 'AsyncKernelClient(client.py)', '91': 'reqrep(client.py)', '105': 'wrapped(client.py)', '80': 'ZMQSocketChannel(channels.py)', '154': 'control_channel(client.py)', '723': 'ioloop(threaded.py)', '160': 'hb_channel(client.py)', '171': 'stdin_channel(client.py)', '164': 'iopub_channel(client.py)', '168': 'shell_channel(client.py)', '328': 'interrupt_kernel(manager.py)', '740': 'send_interrupt(win_interrupt.py)', '334': '__del__(manager.py)', '200': 'cleanup_connection_file(connect.py)', '293': 'start(kernelspecapp.py)', '294': 'path_key(kernelspecapp.py)', '735': 'start(threaded.py)', '720': 'start(threaded.py)', '141': 'start(channelsabc.py)', '432': 'start(restarter.py)', '288': 'start(kernelspecapp.py)', '89': 'start(channels.py)', '115': 'start(channels.py)', '290': 'start(kernelspecapp.py)', '438': 'parse_command_line(runapp.py)', '218': 'build_kernel_argv(consoleapp.py)', '308': '_only_once(localinterfaces.py)', '317': 'wrapped(localinterfaces.py)', '47': 'V4toV5(adapter.py)', '46': 'Adapter(adapter.py)', '77': 'object_info_request(adapter.py)', '52': 'extract_oname_v4(adapter.py)', '70': 'complete_request(adapter.py)', '75': 'kernel_info_reply(adapter.py)', '49': '_version_str_to_list(adapter.py)', '48': 'V5toV4(adapter.py)', '53': '__call__(adapter.py)', '54': 'handle_reply_status_error(adapter.py)', '57': 'update_msg_type(adapter.py)', '56': 'update_metadata(adapter.py)', '55': 'update_header(adapter.py)', '247': 'initialize(kernelapp.py)', '246': '_record_started(kernelapp.py)', '585': 'config(test_kernelmanager.py)', '262': 'install_native_kernel_spec(kernelspec.py)', '276': 'install_native_kernel_spec(kernelspec.py)', '265': 'to_json(kernelspec.py)', '264': 'to_dict(kernelspec.py)', '449': 'test_msg2obj(session.py)', '440': 'Message(session.py)', '453': '__init__(session.py)', '470': '_signature_scheme_changed(session.py)', '465': '_new_auth(session.py)', '463': '_key_default(session.py)', '447': 'new_id_bytes(session.py)', '462': '_key_changed(session.py)', '443': 'default_secure(session.py)', '469': '_session_default(session.py)', '446': 'new_id(session.py)', '412': 'is_alive(multikernelmanager.py)', '420': 'shutdown_all(multikernelmanager.py)', '413': 'list_kernel_ids(multikernelmanager.py)', '721': 'stop(threaded.py)', '140': 'is_alive(channelsabc.py)', '732': 'is_alive(threaded.py)', '112': 'is_alive(channels.py)', '86': 'is_alive(channels.py)', '724': 'start_channels(threaded.py)', '722': '_check_kernel_info_reply(threaded.py)', '716': '__init__(threaded.py)', '387': 'shutdown_kernel(multikernelmanager.py)', '416': 'remove_kernel(multikernelmanager.py)', '713': 'IOLoopThread(threaded.py)', '714': 'ThreadedKernelClient(threaded.py)', '715': 'ThreadedZMQSocketChannel(threaded.py)', '731': 'flush(threaded.py)', '727': '_flush(threaded.py)', '386': 'shutdown_all(multikernelmanager.py)', '418': 'request_shutdown(multikernelmanager.py)', '402': 'cleanup_resources(multikernelmanager.py)', '408': 'finish_shutdown(multikernelmanager.py)', '393': '__len__(multikernelmanager.py)', '421': 'shutdown_kernel(multikernelmanager.py)', '198': '_session_default(connect.py)', '298': 'launch_kernel(launcher.py)', '739': 'create_interrupt_event(win_interrupt.py)', '741': 'SECURITY_ATTRIBUTES(win_interrupt.py)', '215': '__init__(consoleapp.py)', '509': '__init__(signalkernel.py)', '278': '__init__(kernelspec.py)', '127': '__init__(channels.py)', '126': 'InvalidPortNumber(channels.py)', '107': '__init__(channels.py)', '81': '__init__(channels.py)', '392': '__init__(multikernelmanager.py)', '726': '__init__(threaded.py)', '737': 'setup_stream(threaded.py)', '728': '_handle_recv(threaded.py)', '729': 'call_handlers(threaded.py)', '136': 'stop(channels.py)', '133': 'is_beating(channels.py)', '135': 'run(channels.py)', '145': 'time_to_dead(channelsabc.py)', '131': 'call_handlers(channels.py)', '130': '_poll(channels.py)'}}, {'key': 604, 'parent': 2276, 'tfidf_word': 'EP: 604, Name: IOLoopKernelManager &rarr; IOLoopKernelRestarter &rarr; KernelRestarter', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 614, 'parent': 2276, 'tfidf_word': 'EP: 614, Name: AsyncIOLoopKernelManager &rarr; AsyncIOLoopKernelRestarter &rarr; IOLoopKernelRestarter &rarr; KernelRestarter', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2337, 'parent': 2692, 'tfidf_word': 'connection handler info log setup signal start shutdown ', 'tfidf_method': 'start start log_connection_info setup_signals shutdown shutdown_handler ', 'lda_word': ' start,info,log,shutdown,setup,', 'lda_method': ' start,log_connection_info,shutdown_handler,shutdown,setup_signals,', 'lsi_word': ' start,shutdown,signal,setup,handler,', 'lsi_method': ' start,setup_signals,shutdown,shutdown_handler,log_connection_info,', 'spm_method': ' ', 'text_summary': '', 'files_count': 2, 'files': ['kernelspecapp.py', 'kernelapp.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'291': 'start(kernelspecapp.py)', '251': 'start(kernelapp.py)', '249': 'setup_signals(kernelapp.py)', '252': 'shutdown_handler(kernelapp.py)', '250': 'shutdown(kernelapp.py)', '248': 'log_connection_info(kernelapp.py)'}}, {'key': 2648, 'parent': 2692, 'tfidf_word': 'threaded clone date subclass raw native permission flush name code ', 'tfidf_method': 'test_complete_reply test_complete_request test_display_data test_execute_reply test_execute_request test_input_request test_kernel_info_reply test_no_adapt test_load_connection_file_session reqrep ', 'lda_word': ' start,execute,reply,test,adapt,', 'lda_method': ' session,setup,test_tcp_cinfo,ioloop,check_reply,', 'lsi_word': ' test,kernel,adapt,session,reply,', 'lsi_method': ' start,setup,path_key,start_channels,env,', 'spm_method': ' ', 'text_summary': "return ip for localhost (almost always 127.0.0.1)   Ensure that a sequence of kernel startups doesn't break anything. This method is called in the ioloop thread when a message arrives. Pass a message to the ZMQ socket to send. Return a list of the kernel ids of the active kernels. Return the connection info as a dict. Ensure that a sequence of kernel startups doesn't break anything. find a connection file, and return its absolute path. return ip for localhost (almost always 127.0.0.1)      find a connection file, and return its absolute path. For tests, create a file to indicate that we've started. test load_connection_file() after. handle kernel info reply. Get the hb channel object for this kernel. Send a raw message via ident path. Make a blocking client connected to my kernel. Immediately processes all pending messages on this channel. Return the number of running kernels. Interrupts the kernel by sending it a signal. Get a message from the shell channel. This is run in the ioloop thread when the kernel info reply is received. default function for packing datetime objects in JSON. Start the polling of the kernel. Send a shutdown request via control channel. Create an interrupt event handle. Get a message from the iopub channel. Sends an interrupt event using the specified handle. test that messages receive unique ids.", 'files_count': 33, 'files': ['connect.py', 'threaded.py', 'managerabc.py', 'test_session.py', 'test_adapter.py', 'test_connect.py', 'forward.py', 'test_manager.py', 'kernelspec.py', 'channels.py', 'test_jsonutil.py', 'session.py', 'jsonutil.py', 'test_kernelmanager.py', 'utils.py', 'test_kernelspec.py', 'signalkernel.py', 'test_multikernelmanager.py', 'localinterfaces.py', 'adapter.py', 'client.py', 'test_kernelapp.py', 'test_client.py', 'manager.py', 'win_interrupt.py', 'kernelspecapp.py', 'channelsabc.py', 'restarter.py', 'runapp.py', 'consoleapp.py', 'kernelapp.py', 'multikernelmanager.py', 'launcher.py'], 'execution_path_count': 235, 'function_id_to_name_file': {'199': 'blocking_client(connect.py)', '208': 'get_connection_info(connect.py)', '725': 'stop_channels(threaded.py)', '373': 'is_alive(managerabc.py)', '684': 'test_bad_unpack(test_session.py)', '676': '_bad_unpacker(test_session.py)', '536': 'test_complete_request(test_adapter.py)', '517': 'adapt(test_adapter.py)', '562': 'test_find_connection_file_local(test_connect.py)', '189': 'find_connection_file(connect.py)', '492': 'handle(forward.py)', '730': 'close(threaded.py)', '493': 'SubHander(forward.py)', '490': 'Handler(forward.py)', '635': 'test_connection_file_real_path(test_manager.py)', '253': 'KernelSpec(kernelspec.py)', '718': 'close(threaded.py)', '132': 'close(channels.py)', '114': 'send(channels.py)', '88': 'send(channels.py)', '83': 'close(channels.py)', '109': 'close(channels.py)', '575': 'test_date_default(test_jsonutil.py)', '450': 'utcnow(session.py)', '241': 'date_default(jsonutil.py)', '240': '_ensure_tzinfo(jsonutil.py)', '597': 'test_subclasses(test_kernelmanager.py)', '703': 'AsyncKernelManagerWithCleanup(utils.py)', '595': 'test_signal_kernel_subprocesses(test_kernelmanager.py)', '598': 'execute(test_kernelmanager.py)', '702': 'AsyncKernelManagerSubclass(utils.py)', '611': 'test_start_parallel_process_kernels(test_kernelmanager.py)', '591': 'transport(test_kernelmanager.py)', '606': 'test_templated_kspec_env(test_kernelmanager.py)', '599': '_env_test_body(test_kernelmanager.py)', '607': 'execute(test_kernelmanager.py)', '612': 'test_start_parallel_thread_kernels(test_kernelmanager.py)', '604': 'test_signal_kernel_subprocesses(test_kernelmanager.py)', '608': 'execute(test_kernelmanager.py)', '586': 'env(test_kernelmanager.py)', '712': 'stop(utils.py)', '711': 'start(utils.py)', '705': 'test_env(utils.py)', '630': 'test_validate_kernel_name(test_kernelspec.py)', '257': '_is_valid_kernel_name(kernelspec.py)', '506': 'SignalTestApp(signalkernel.py)', '507': 'SignalTestKernel(signalkernel.py)', '627': 'test_remove_kernel_spec(test_kernelspec.py)', '617': '_install_sample_kernel(test_kernelspec.py)', '626': 'test_kernel_spec_priority(test_kernelspec.py)', '651': 'test_tcp_cinfo(test_multikernelmanager.py)', '640': '_run_cinfo(test_multikernelmanager.py)', '621': 'test_find_all_specs(test_kernelspec.py)', '622': 'test_find_kernel_specs(test_kernelspec.py)', '623': 'test_get_kernel_spec(test_kernelspec.py)', '619': 'tearDown(test_kernelspec.py)', '618': 'setUp(test_kernelspec.py)', '649': 'test_start_sequence_ipc_kernels(test_multikernelmanager.py)', '641': '_run_lifecycle(test_multikernelmanager.py)', '650': 'test_start_sequence_tcp_kernels(test_multikernelmanager.py)', '644': 'test_ipc_cinfo(test_multikernelmanager.py)', '315': 'localhost(localinterfaces.py)', '645': 'test_ipc_lifecycle(test_multikernelmanager.py)', '665': 'test_start_sequence_tcp_kernels(test_multikernelmanager.py)', '657': '_run_lifecycle(test_multikernelmanager.py)', '664': 'test_start_sequence_ipc_kernels(test_multikernelmanager.py)', '659': 'test_ipc_cinfo(test_multikernelmanager.py)', '656': '_run_cinfo(test_multikernelmanager.py)', '660': 'test_ipc_lifecycle(test_multikernelmanager.py)', '666': 'test_tcp_cinfo(test_multikernelmanager.py)', '668': 'test_tcp_lifecycle_with_kernel_id(test_multikernelmanager.py)', '569': 'test_secure_write(test_connect.py)', '573': 'check_user_only_permissions(test_connect.py)', '574': 'fetch_win32_permissions(test_connect.py)', '563': 'test_find_connection_file_relative(test_connect.py)', '561': 'test_find_connection_file_abspath(test_connect.py)', '560': 'test_find_connection_file(test_connect.py)', '565': 'test_load_connection_file_session_with_kn(test_connect.py)', '441': 'Session(session.py)', '539': 'test_input_request(test_adapter.py)', '564': 'test_load_connection_file_session(test_connect.py)', '537': 'test_display_data(test_adapter.py)', '540': 'test_inspect_reply(test_adapter.py)', '543': 'test_kernel_info_reply(test_adapter.py)', '542': 'test_inspect_request_token(test_adapter.py)', '535': 'test_complete_reply(test_adapter.py)', '541': 'test_inspect_request(test_adapter.py)', '538': 'test_execute_request(test_adapter.py)', '545': 'test_rename_type(test_adapter.py)', '544': 'test_no_adapt(test_adapter.py)', '546': 'test_same_version(test_adapter.py)', '514': 'V5toV4TestCase(test_adapter.py)', '512': 'AdapterTest(test_adapter.py)', '526': 'test_input_request(test_adapter.py)', '523': 'test_display_data(test_adapter.py)', '527': 'test_kernel_info_reply(test_adapter.py)', '530': 'test_object_info_reply_not_found(test_adapter.py)', '529': 'test_object_info_reply(test_adapter.py)', '531': 'test_object_info_request(test_adapter.py)', '521': 'test_complete_reply(test_adapter.py)', '522': 'test_complete_request(test_adapter.py)', '524': 'test_execute_reply(test_adapter.py)', '532': 'test_rename_type(test_adapter.py)', '525': 'test_execute_request(test_adapter.py)', '528': 'test_no_adapt(test_adapter.py)', '533': 'test_same_version(test_adapter.py)', '513': 'V4toV5TestCase(test_adapter.py)', '519': 'setUp(test_adapter.py)', '516': 'test_default_version(test_adapter.py)', '515': 'test_code_to_line_no_code(test_adapter.py)', '51': 'code_to_line(adapter.py)', '704': 'execute(utils.py)', '158': 'get_shell_msg(client.py)', '615': 'execute(test_kernelmanager.py)', '157': 'get_iopub_msg(client.py)', '710': '__exit__(utils.py)', '709': '__enter__(utils.py)', '580': 'test_kernelapp_lifecycle(test_kernelapp.py)', '579': '_launch(test_kernelapp.py)', '686': 'test_clone(test_session.py)', '473': 'clone(session.py)', '695': 'test_send_raw(test_session.py)', '481': 'send_raw(session.py)', '483': 'sign(session.py)', '689': 'test_datetimes_msgpack(test_session.py)', '475': 'feed_identities(session.py)', '690': 'test_datetimes_pickle(test_session.py)', '688': 'test_datetimes(test_session.py)', '683': 'test_bad_roundtrip(test_session.py)', '685': 'test_bad_unpacker(test_session.py)', '682': 'test_bad_packer(test_session.py)', '681': 'test_bad_pack(test_session.py)', '675': '_bad_packer(test_session.py)', '687': 'test_cull_digest_history(test_session.py)', '700': 'test_zero_digest_history(test_session.py)', '697': 'test_session_id(test_session.py)', '699': 'test_unique_msg_ids(test_session.py)', '445': 'msg_header(session.py)', '698': 'test_tracking(test_session.py)', '680': 'test_args(test_session.py)', '694': 'test_send(test_session.py)', '478': 'msg_id(session.py)', '696': 'test_serialize(test_session.py)', '674': 'TestSession(test_session.py)', '673': 'SessionTestCase(test_session.py)', '678': 'setUp(test_session.py)', '556': 'test_shutdown(test_client.py)', '548': '_check_reply(test_client.py)', '550': 'test_comm_info(test_client.py)', '555': 'test_kernel_info(test_client.py)', '551': 'test_complete(test_client.py)', '554': 'test_inspect(test_client.py)', '553': 'test_history(test_client.py)', '549': 'setUp(test_client.py)', '255': 'NoSuchKernel(kernelspec.py)', '116': 'BlockingKernelClient(client.py)', '117': 'reqrep(client.py)', '124': 'wrapped(client.py)', '123': 'wait_for_ready(client.py)', '150': '_handle_kernel_info_reply(client.py)', '125': 'HBChannel(channels.py)', '104': 'wait_for_ready(client.py)', '102': 'hb_channel(client.py)', '196': '_make_url(connect.py)', '90': 'AsyncKernelClient(client.py)', '91': 'reqrep(client.py)', '105': 'wrapped(client.py)', '80': 'ZMQSocketChannel(channels.py)', '154': 'control_channel(client.py)', '723': 'ioloop(threaded.py)', '160': 'hb_channel(client.py)', '171': 'stdin_channel(client.py)', '164': 'iopub_channel(client.py)', '168': 'shell_channel(client.py)', '328': 'interrupt_kernel(manager.py)', '740': 'send_interrupt(win_interrupt.py)', '334': '__del__(manager.py)', '200': 'cleanup_connection_file(connect.py)', '291': 'start(kernelspecapp.py)', '293': 'start(kernelspecapp.py)', '294': 'path_key(kernelspecapp.py)', '735': 'start(threaded.py)', '720': 'start(threaded.py)', '141': 'start(channelsabc.py)', '432': 'start(restarter.py)', '288': 'start(kernelspecapp.py)', '89': 'start(channels.py)', '115': 'start(channels.py)', '290': 'start(kernelspecapp.py)', '438': 'parse_command_line(runapp.py)', '218': 'build_kernel_argv(consoleapp.py)', '308': '_only_once(localinterfaces.py)', '317': 'wrapped(localinterfaces.py)', '47': 'V4toV5(adapter.py)', '46': 'Adapter(adapter.py)', '77': 'object_info_request(adapter.py)', '52': 'extract_oname_v4(adapter.py)', '70': 'complete_request(adapter.py)', '75': 'kernel_info_reply(adapter.py)', '49': '_version_str_to_list(adapter.py)', '48': 'V5toV4(adapter.py)', '53': '__call__(adapter.py)', '54': 'handle_reply_status_error(adapter.py)', '57': 'update_msg_type(adapter.py)', '56': 'update_metadata(adapter.py)', '55': 'update_header(adapter.py)', '247': 'initialize(kernelapp.py)', '246': '_record_started(kernelapp.py)', '585': 'config(test_kernelmanager.py)', '262': 'install_native_kernel_spec(kernelspec.py)', '276': 'install_native_kernel_spec(kernelspec.py)', '265': 'to_json(kernelspec.py)', '264': 'to_dict(kernelspec.py)', '449': 'test_msg2obj(session.py)', '440': 'Message(session.py)', '453': '__init__(session.py)', '470': '_signature_scheme_changed(session.py)', '465': '_new_auth(session.py)', '463': '_key_default(session.py)', '447': 'new_id_bytes(session.py)', '462': '_key_changed(session.py)', '443': 'default_secure(session.py)', '469': '_session_default(session.py)', '446': 'new_id(session.py)', '412': 'is_alive(multikernelmanager.py)', '420': 'shutdown_all(multikernelmanager.py)', '413': 'list_kernel_ids(multikernelmanager.py)', '721': 'stop(threaded.py)', '140': 'is_alive(channelsabc.py)', '732': 'is_alive(threaded.py)', '112': 'is_alive(channels.py)', '86': 'is_alive(channels.py)', '724': 'start_channels(threaded.py)', '722': '_check_kernel_info_reply(threaded.py)', '716': '__init__(threaded.py)', '387': 'shutdown_kernel(multikernelmanager.py)', '416': 'remove_kernel(multikernelmanager.py)', '713': 'IOLoopThread(threaded.py)', '714': 'ThreadedKernelClient(threaded.py)', '715': 'ThreadedZMQSocketChannel(threaded.py)', '731': 'flush(threaded.py)', '727': '_flush(threaded.py)', '386': 'shutdown_all(multikernelmanager.py)', '418': 'request_shutdown(multikernelmanager.py)', '402': 'cleanup_resources(multikernelmanager.py)', '408': 'finish_shutdown(multikernelmanager.py)', '393': '__len__(multikernelmanager.py)', '421': 'shutdown_kernel(multikernelmanager.py)', '198': '_session_default(connect.py)', '298': 'launch_kernel(launcher.py)', '739': 'create_interrupt_event(win_interrupt.py)', '741': 'SECURITY_ATTRIBUTES(win_interrupt.py)', '215': '__init__(consoleapp.py)', '509': '__init__(signalkernel.py)', '278': '__init__(kernelspec.py)', '127': '__init__(channels.py)', '126': 'InvalidPortNumber(channels.py)', '107': '__init__(channels.py)', '81': '__init__(channels.py)', '392': '__init__(multikernelmanager.py)', '726': '__init__(threaded.py)', '737': 'setup_stream(threaded.py)', '728': '_handle_recv(threaded.py)', '729': 'call_handlers(threaded.py)', '136': 'stop(channels.py)', '133': 'is_beating(channels.py)', '135': 'run(channels.py)', '145': 'time_to_dead(channelsabc.py)', '131': 'call_handlers(channels.py)', '130': '_poll(channels.py)'}}, {'key': 283, 'parent': 2337, 'tfidf_word': 'EP: 283, Name: start &rarr; start &rarr; setup_signals &rarr; shutdown_handler &rarr; shutdown', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 284, 'parent': 2337, 'tfidf_word': 'EP: 284, Name: start &rarr; start &rarr; log_connection_info', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2644, 'parent': 2648, 'tfidf_word': 'threaded subclass date raw clone name permission flush native code ', 'tfidf_method': 'test_complete_request test_display_data test_execute_reply test_execute_request test_input_request test_kernel_info_reply test_no_adapt test_object_info_reply test_default_version reqrep ', 'lda_word': ' kernel,shutdown,client,request,line,', 'lda_method': ' adapt,stop_channels,is_alive,session,env,', 'lsi_word': ' test,kernel,adapt,session,reply,', 'lsi_method': ' start,setup,path_key,start_channels,env,', 'spm_method': ' ', 'text_summary': "return ip for localhost (almost always 127.0.0.1)   Ensure that a sequence of kernel startups doesn't break anything. This method is called in the ioloop thread when a message arrives. Pass a message to the ZMQ socket to send. Return a list of the kernel ids of the active kernels. Return the connection info as a dict. Ensure that a sequence of kernel startups doesn't break anything. Cleanup connection file *if we wrote it*. find a connection file, and return its absolute path. return ip for localhost (almost always 127.0.0.1)      find a connection file, and return its absolute path. For tests, create a file to indicate that we've started. test load_connection_file() after. handle kernel info reply. Get the hb channel object for this kernel. Send a raw message via ident path. test tracking messages. Make a blocking client connected to my kernel. Immediately processes all pending messages on this channel. Return the number of running kernels. Wait for kernel shutdown, then kill process if it doesn't shutdown. Interrupts the kernel by sending it a signal. Get a message from the shell channel. This is run in the ioloop thread when the kernel info reply is received. default function for packing datetime objects in JSON. Attempts to stop the kernel process cleanly. Start the polling of the kernel. Send a shutdown request via control channel. Create an interrupt event handle. Get a message from the iopub channel. Sends an interrupt event using the specified handle. test that messages receive unique ids.", 'files_count': 33, 'files': ['connect.py', 'threaded.py', 'managerabc.py', 'test_session.py', 'test_adapter.py', 'test_connect.py', 'forward.py', 'test_manager.py', 'kernelspec.py', 'channels.py', 'test_jsonutil.py', 'session.py', 'jsonutil.py', 'test_kernelmanager.py', 'utils.py', 'test_kernelspec.py', 'signalkernel.py', 'test_multikernelmanager.py', 'localinterfaces.py', 'adapter.py', 'client.py', 'test_kernelapp.py', 'test_client.py', 'manager.py', 'win_interrupt.py', 'kernelspecapp.py', 'channelsabc.py', 'restarter.py', 'runapp.py', 'consoleapp.py', 'kernelapp.py', 'multikernelmanager.py', 'launcher.py'], 'execution_path_count': 231, 'function_id_to_name_file': {'199': 'blocking_client(connect.py)', '208': 'get_connection_info(connect.py)', '725': 'stop_channels(threaded.py)', '373': 'is_alive(managerabc.py)', '684': 'test_bad_unpack(test_session.py)', '676': '_bad_unpacker(test_session.py)', '536': 'test_complete_request(test_adapter.py)', '517': 'adapt(test_adapter.py)', '562': 'test_find_connection_file_local(test_connect.py)', '189': 'find_connection_file(connect.py)', '492': 'handle(forward.py)', '730': 'close(threaded.py)', '493': 'SubHander(forward.py)', '490': 'Handler(forward.py)', '635': 'test_connection_file_real_path(test_manager.py)', '253': 'KernelSpec(kernelspec.py)', '718': 'close(threaded.py)', '132': 'close(channels.py)', '114': 'send(channels.py)', '88': 'send(channels.py)', '83': 'close(channels.py)', '109': 'close(channels.py)', '575': 'test_date_default(test_jsonutil.py)', '450': 'utcnow(session.py)', '241': 'date_default(jsonutil.py)', '240': '_ensure_tzinfo(jsonutil.py)', '597': 'test_subclasses(test_kernelmanager.py)', '703': 'AsyncKernelManagerWithCleanup(utils.py)', '595': 'test_signal_kernel_subprocesses(test_kernelmanager.py)', '598': 'execute(test_kernelmanager.py)', '702': 'AsyncKernelManagerSubclass(utils.py)', '611': 'test_start_parallel_process_kernels(test_kernelmanager.py)', '591': 'transport(test_kernelmanager.py)', '606': 'test_templated_kspec_env(test_kernelmanager.py)', '599': '_env_test_body(test_kernelmanager.py)', '607': 'execute(test_kernelmanager.py)', '612': 'test_start_parallel_thread_kernels(test_kernelmanager.py)', '604': 'test_signal_kernel_subprocesses(test_kernelmanager.py)', '608': 'execute(test_kernelmanager.py)', '586': 'env(test_kernelmanager.py)', '712': 'stop(utils.py)', '711': 'start(utils.py)', '705': 'test_env(utils.py)', '630': 'test_validate_kernel_name(test_kernelspec.py)', '257': '_is_valid_kernel_name(kernelspec.py)', '506': 'SignalTestApp(signalkernel.py)', '507': 'SignalTestKernel(signalkernel.py)', '627': 'test_remove_kernel_spec(test_kernelspec.py)', '617': '_install_sample_kernel(test_kernelspec.py)', '626': 'test_kernel_spec_priority(test_kernelspec.py)', '651': 'test_tcp_cinfo(test_multikernelmanager.py)', '640': '_run_cinfo(test_multikernelmanager.py)', '621': 'test_find_all_specs(test_kernelspec.py)', '622': 'test_find_kernel_specs(test_kernelspec.py)', '623': 'test_get_kernel_spec(test_kernelspec.py)', '619': 'tearDown(test_kernelspec.py)', '618': 'setUp(test_kernelspec.py)', '649': 'test_start_sequence_ipc_kernels(test_multikernelmanager.py)', '641': '_run_lifecycle(test_multikernelmanager.py)', '650': 'test_start_sequence_tcp_kernels(test_multikernelmanager.py)', '644': 'test_ipc_cinfo(test_multikernelmanager.py)', '315': 'localhost(localinterfaces.py)', '645': 'test_ipc_lifecycle(test_multikernelmanager.py)', '665': 'test_start_sequence_tcp_kernels(test_multikernelmanager.py)', '657': '_run_lifecycle(test_multikernelmanager.py)', '664': 'test_start_sequence_ipc_kernels(test_multikernelmanager.py)', '659': 'test_ipc_cinfo(test_multikernelmanager.py)', '656': '_run_cinfo(test_multikernelmanager.py)', '660': 'test_ipc_lifecycle(test_multikernelmanager.py)', '666': 'test_tcp_cinfo(test_multikernelmanager.py)', '668': 'test_tcp_lifecycle_with_kernel_id(test_multikernelmanager.py)', '569': 'test_secure_write(test_connect.py)', '573': 'check_user_only_permissions(test_connect.py)', '574': 'fetch_win32_permissions(test_connect.py)', '563': 'test_find_connection_file_relative(test_connect.py)', '561': 'test_find_connection_file_abspath(test_connect.py)', '560': 'test_find_connection_file(test_connect.py)', '565': 'test_load_connection_file_session_with_kn(test_connect.py)', '441': 'Session(session.py)', '539': 'test_input_request(test_adapter.py)', '564': 'test_load_connection_file_session(test_connect.py)', '537': 'test_display_data(test_adapter.py)', '540': 'test_inspect_reply(test_adapter.py)', '543': 'test_kernel_info_reply(test_adapter.py)', '542': 'test_inspect_request_token(test_adapter.py)', '535': 'test_complete_reply(test_adapter.py)', '541': 'test_inspect_request(test_adapter.py)', '538': 'test_execute_request(test_adapter.py)', '545': 'test_rename_type(test_adapter.py)', '544': 'test_no_adapt(test_adapter.py)', '546': 'test_same_version(test_adapter.py)', '514': 'V5toV4TestCase(test_adapter.py)', '512': 'AdapterTest(test_adapter.py)', '526': 'test_input_request(test_adapter.py)', '523': 'test_display_data(test_adapter.py)', '527': 'test_kernel_info_reply(test_adapter.py)', '530': 'test_object_info_reply_not_found(test_adapter.py)', '529': 'test_object_info_reply(test_adapter.py)', '531': 'test_object_info_request(test_adapter.py)', '521': 'test_complete_reply(test_adapter.py)', '522': 'test_complete_request(test_adapter.py)', '524': 'test_execute_reply(test_adapter.py)', '532': 'test_rename_type(test_adapter.py)', '525': 'test_execute_request(test_adapter.py)', '528': 'test_no_adapt(test_adapter.py)', '533': 'test_same_version(test_adapter.py)', '513': 'V4toV5TestCase(test_adapter.py)', '519': 'setUp(test_adapter.py)', '516': 'test_default_version(test_adapter.py)', '515': 'test_code_to_line_no_code(test_adapter.py)', '51': 'code_to_line(adapter.py)', '704': 'execute(utils.py)', '158': 'get_shell_msg(client.py)', '615': 'execute(test_kernelmanager.py)', '157': 'get_iopub_msg(client.py)', '710': '__exit__(utils.py)', '709': '__enter__(utils.py)', '580': 'test_kernelapp_lifecycle(test_kernelapp.py)', '579': '_launch(test_kernelapp.py)', '686': 'test_clone(test_session.py)', '473': 'clone(session.py)', '695': 'test_send_raw(test_session.py)', '481': 'send_raw(session.py)', '483': 'sign(session.py)', '689': 'test_datetimes_msgpack(test_session.py)', '475': 'feed_identities(session.py)', '690': 'test_datetimes_pickle(test_session.py)', '688': 'test_datetimes(test_session.py)', '683': 'test_bad_roundtrip(test_session.py)', '685': 'test_bad_unpacker(test_session.py)', '682': 'test_bad_packer(test_session.py)', '681': 'test_bad_pack(test_session.py)', '675': '_bad_packer(test_session.py)', '687': 'test_cull_digest_history(test_session.py)', '700': 'test_zero_digest_history(test_session.py)', '697': 'test_session_id(test_session.py)', '699': 'test_unique_msg_ids(test_session.py)', '445': 'msg_header(session.py)', '698': 'test_tracking(test_session.py)', '680': 'test_args(test_session.py)', '694': 'test_send(test_session.py)', '478': 'msg_id(session.py)', '696': 'test_serialize(test_session.py)', '674': 'TestSession(test_session.py)', '673': 'SessionTestCase(test_session.py)', '678': 'setUp(test_session.py)', '556': 'test_shutdown(test_client.py)', '548': '_check_reply(test_client.py)', '550': 'test_comm_info(test_client.py)', '555': 'test_kernel_info(test_client.py)', '551': 'test_complete(test_client.py)', '554': 'test_inspect(test_client.py)', '553': 'test_history(test_client.py)', '549': 'setUp(test_client.py)', '255': 'NoSuchKernel(kernelspec.py)', '116': 'BlockingKernelClient(client.py)', '117': 'reqrep(client.py)', '124': 'wrapped(client.py)', '123': 'wait_for_ready(client.py)', '150': '_handle_kernel_info_reply(client.py)', '125': 'HBChannel(channels.py)', '104': 'wait_for_ready(client.py)', '102': 'hb_channel(client.py)', '196': '_make_url(connect.py)', '90': 'AsyncKernelClient(client.py)', '91': 'reqrep(client.py)', '105': 'wrapped(client.py)', '80': 'ZMQSocketChannel(channels.py)', '154': 'control_channel(client.py)', '723': 'ioloop(threaded.py)', '160': 'hb_channel(client.py)', '171': 'stdin_channel(client.py)', '164': 'iopub_channel(client.py)', '168': 'shell_channel(client.py)', '328': 'interrupt_kernel(manager.py)', '740': 'send_interrupt(win_interrupt.py)', '334': '__del__(manager.py)', '200': 'cleanup_connection_file(connect.py)', '291': 'start(kernelspecapp.py)', '293': 'start(kernelspecapp.py)', '294': 'path_key(kernelspecapp.py)', '735': 'start(threaded.py)', '720': 'start(threaded.py)', '141': 'start(channelsabc.py)', '432': 'start(restarter.py)', '288': 'start(kernelspecapp.py)', '89': 'start(channels.py)', '115': 'start(channels.py)', '290': 'start(kernelspecapp.py)', '438': 'parse_command_line(runapp.py)', '218': 'build_kernel_argv(consoleapp.py)', '308': '_only_once(localinterfaces.py)', '317': 'wrapped(localinterfaces.py)', '47': 'V4toV5(adapter.py)', '46': 'Adapter(adapter.py)', '77': 'object_info_request(adapter.py)', '52': 'extract_oname_v4(adapter.py)', '70': 'complete_request(adapter.py)', '75': 'kernel_info_reply(adapter.py)', '49': '_version_str_to_list(adapter.py)', '48': 'V5toV4(adapter.py)', '53': '__call__(adapter.py)', '54': 'handle_reply_status_error(adapter.py)', '57': 'update_msg_type(adapter.py)', '56': 'update_metadata(adapter.py)', '55': 'update_header(adapter.py)', '247': 'initialize(kernelapp.py)', '246': '_record_started(kernelapp.py)', '585': 'config(test_kernelmanager.py)', '262': 'install_native_kernel_spec(kernelspec.py)', '276': 'install_native_kernel_spec(kernelspec.py)', '265': 'to_json(kernelspec.py)', '264': 'to_dict(kernelspec.py)', '449': 'test_msg2obj(session.py)', '440': 'Message(session.py)', '453': '__init__(session.py)', '470': '_signature_scheme_changed(session.py)', '465': '_new_auth(session.py)', '463': '_key_default(session.py)', '447': 'new_id_bytes(session.py)', '462': '_key_changed(session.py)', '443': 'default_secure(session.py)', '469': '_session_default(session.py)', '446': 'new_id(session.py)', '412': 'is_alive(multikernelmanager.py)', '420': 'shutdown_all(multikernelmanager.py)', '413': 'list_kernel_ids(multikernelmanager.py)', '721': 'stop(threaded.py)', '140': 'is_alive(channelsabc.py)', '732': 'is_alive(threaded.py)', '112': 'is_alive(channels.py)', '86': 'is_alive(channels.py)', '724': 'start_channels(threaded.py)', '722': '_check_kernel_info_reply(threaded.py)', '716': '__init__(threaded.py)', '387': 'shutdown_kernel(multikernelmanager.py)', '416': 'remove_kernel(multikernelmanager.py)', '713': 'IOLoopThread(threaded.py)', '714': 'ThreadedKernelClient(threaded.py)', '715': 'ThreadedZMQSocketChannel(threaded.py)', '731': 'flush(threaded.py)', '727': '_flush(threaded.py)', '386': 'shutdown_all(multikernelmanager.py)', '418': 'request_shutdown(multikernelmanager.py)', '402': 'cleanup_resources(multikernelmanager.py)', '408': 'finish_shutdown(multikernelmanager.py)', '393': '__len__(multikernelmanager.py)', '421': 'shutdown_kernel(multikernelmanager.py)', '198': '_session_default(connect.py)', '298': 'launch_kernel(launcher.py)', '739': 'create_interrupt_event(win_interrupt.py)', '741': 'SECURITY_ATTRIBUTES(win_interrupt.py)', '215': '__init__(consoleapp.py)', '509': '__init__(signalkernel.py)', '278': '__init__(kernelspec.py)', '127': '__init__(channels.py)', '126': 'InvalidPortNumber(channels.py)', '107': '__init__(channels.py)', '81': '__init__(channels.py)', '392': '__init__(multikernelmanager.py)', '726': '__init__(threaded.py)', '737': 'setup_stream(threaded.py)', '728': '_handle_recv(threaded.py)', '729': 'call_handlers(threaded.py)', '136': 'stop(channels.py)', '133': 'is_beating(channels.py)'}}, {'key': 2647, 'parent': 2648, 'tfidf_word': 'run dead time alive beating call handler poll ', 'tfidf_method': 'run time_to_dead _poll call_handlers is_beating is_alive ', 'lda_word': ' run,time,alive,dead,beating,', 'lda_method': ' run,time_to_dead,call_handlers,is_beating,is_alive,', 'lsi_word': ' run,time,dead,poll,handler,', 'lsi_method': ' run,time_to_dead,poll,call_handlers,is_beating,', 'spm_method': ' ', 'text_summary': 'Run my loop, ignoring EINTR events in the poller.', 'files_count': 2, 'files': ['channels.py', 'channelsabc.py'], 'execution_path_count': 4, 'function_id_to_name_file': {'133': 'is_beating(channels.py)', '86': 'is_alive(channels.py)', '135': 'run(channels.py)', '145': 'time_to_dead(channelsabc.py)', '131': 'call_handlers(channels.py)', '130': '_poll(channels.py)'}}, {'key': 2628, 'parent': 2644, 'tfidf_word': 'signal clone date subclass raw flush native name permission code ', 'tfidf_method': 'extract_oname_v4 test_complete_reply test_complete_request test_display_data test_execute_reply test_execute_request test_input_request test_kernel_info_reply test_object_info_reply reqrep ', 'lda_word': ' stop,channel,kernel,test,client,', 'lda_method': ' close,handle,call,shutdown_all,handle_kernel_info_reply,', 'lsi_word': ' test,kernel,adapt,session,reply,', 'lsi_method': ' start,setup,path_key,start_channels,env,', 'spm_method': ' ', 'text_summary': "return ip for localhost (almost always 127.0.0.1)   Ensure that a sequence of kernel startups doesn't break anything. Pass a message to the ZMQ socket to send. Return a list of the kernel ids of the active kernels. Return the connection info as a dict. Ensure that a sequence of kernel startups doesn't break anything. Cleanup connection file *if we wrote it*. find a connection file, and return its absolute path. return ip for localhost (almost always 127.0.0.1)      find a connection file, and return its absolute path. For tests, create a file to indicate that we've started. test load_connection_file() after. handle kernel info reply. Get the hb channel object for this kernel. Send a raw message via ident path. test tracking messages. Make a blocking client connected to my kernel. Immediately processes all pending messages on this channel. Return the number of running kernels. Wait for kernel shutdown, then kill process if it doesn't shutdown. Interrupts the kernel by sending it a signal. Get a message from the shell channel. This is run in the ioloop thread when the kernel info reply is received. default function for packing datetime objects in JSON. Attempts to stop the kernel process cleanly. Start the polling of the kernel. Send a shutdown request via control channel. Get a message from the iopub channel. test that messages receive unique ids.", 'files_count': 33, 'files': ['connect.py', 'threaded.py', 'managerabc.py', 'test_session.py', 'test_adapter.py', 'test_connect.py', 'forward.py', 'test_manager.py', 'kernelspec.py', 'channels.py', 'test_jsonutil.py', 'session.py', 'jsonutil.py', 'test_kernelmanager.py', 'utils.py', 'test_kernelspec.py', 'signalkernel.py', 'test_multikernelmanager.py', 'localinterfaces.py', 'adapter.py', 'client.py', 'test_kernelapp.py', 'test_client.py', 'manager.py', 'win_interrupt.py', 'kernelspecapp.py', 'channelsabc.py', 'restarter.py', 'runapp.py', 'consoleapp.py', 'kernelapp.py', 'multikernelmanager.py', 'launcher.py'], 'execution_path_count': 213, 'function_id_to_name_file': {'199': 'blocking_client(connect.py)', '208': 'get_connection_info(connect.py)', '725': 'stop_channels(threaded.py)', '373': 'is_alive(managerabc.py)', '684': 'test_bad_unpack(test_session.py)', '676': '_bad_unpacker(test_session.py)', '536': 'test_complete_request(test_adapter.py)', '517': 'adapt(test_adapter.py)', '562': 'test_find_connection_file_local(test_connect.py)', '189': 'find_connection_file(connect.py)', '492': 'handle(forward.py)', '730': 'close(threaded.py)', '493': 'SubHander(forward.py)', '490': 'Handler(forward.py)', '635': 'test_connection_file_real_path(test_manager.py)', '253': 'KernelSpec(kernelspec.py)', '718': 'close(threaded.py)', '132': 'close(channels.py)', '114': 'send(channels.py)', '88': 'send(channels.py)', '83': 'close(channels.py)', '109': 'close(channels.py)', '575': 'test_date_default(test_jsonutil.py)', '450': 'utcnow(session.py)', '241': 'date_default(jsonutil.py)', '240': '_ensure_tzinfo(jsonutil.py)', '597': 'test_subclasses(test_kernelmanager.py)', '703': 'AsyncKernelManagerWithCleanup(utils.py)', '595': 'test_signal_kernel_subprocesses(test_kernelmanager.py)', '598': 'execute(test_kernelmanager.py)', '702': 'AsyncKernelManagerSubclass(utils.py)', '611': 'test_start_parallel_process_kernels(test_kernelmanager.py)', '591': 'transport(test_kernelmanager.py)', '606': 'test_templated_kspec_env(test_kernelmanager.py)', '599': '_env_test_body(test_kernelmanager.py)', '607': 'execute(test_kernelmanager.py)', '612': 'test_start_parallel_thread_kernels(test_kernelmanager.py)', '604': 'test_signal_kernel_subprocesses(test_kernelmanager.py)', '608': 'execute(test_kernelmanager.py)', '586': 'env(test_kernelmanager.py)', '712': 'stop(utils.py)', '711': 'start(utils.py)', '705': 'test_env(utils.py)', '630': 'test_validate_kernel_name(test_kernelspec.py)', '257': '_is_valid_kernel_name(kernelspec.py)', '506': 'SignalTestApp(signalkernel.py)', '507': 'SignalTestKernel(signalkernel.py)', '627': 'test_remove_kernel_spec(test_kernelspec.py)', '617': '_install_sample_kernel(test_kernelspec.py)', '626': 'test_kernel_spec_priority(test_kernelspec.py)', '651': 'test_tcp_cinfo(test_multikernelmanager.py)', '640': '_run_cinfo(test_multikernelmanager.py)', '621': 'test_find_all_specs(test_kernelspec.py)', '622': 'test_find_kernel_specs(test_kernelspec.py)', '623': 'test_get_kernel_spec(test_kernelspec.py)', '619': 'tearDown(test_kernelspec.py)', '618': 'setUp(test_kernelspec.py)', '649': 'test_start_sequence_ipc_kernels(test_multikernelmanager.py)', '641': '_run_lifecycle(test_multikernelmanager.py)', '650': 'test_start_sequence_tcp_kernels(test_multikernelmanager.py)', '644': 'test_ipc_cinfo(test_multikernelmanager.py)', '315': 'localhost(localinterfaces.py)', '645': 'test_ipc_lifecycle(test_multikernelmanager.py)', '665': 'test_start_sequence_tcp_kernels(test_multikernelmanager.py)', '657': '_run_lifecycle(test_multikernelmanager.py)', '664': 'test_start_sequence_ipc_kernels(test_multikernelmanager.py)', '659': 'test_ipc_cinfo(test_multikernelmanager.py)', '656': '_run_cinfo(test_multikernelmanager.py)', '660': 'test_ipc_lifecycle(test_multikernelmanager.py)', '666': 'test_tcp_cinfo(test_multikernelmanager.py)', '668': 'test_tcp_lifecycle_with_kernel_id(test_multikernelmanager.py)', '569': 'test_secure_write(test_connect.py)', '573': 'check_user_only_permissions(test_connect.py)', '574': 'fetch_win32_permissions(test_connect.py)', '563': 'test_find_connection_file_relative(test_connect.py)', '561': 'test_find_connection_file_abspath(test_connect.py)', '560': 'test_find_connection_file(test_connect.py)', '565': 'test_load_connection_file_session_with_kn(test_connect.py)', '441': 'Session(session.py)', '539': 'test_input_request(test_adapter.py)', '564': 'test_load_connection_file_session(test_connect.py)', '537': 'test_display_data(test_adapter.py)', '540': 'test_inspect_reply(test_adapter.py)', '543': 'test_kernel_info_reply(test_adapter.py)', '542': 'test_inspect_request_token(test_adapter.py)', '535': 'test_complete_reply(test_adapter.py)', '541': 'test_inspect_request(test_adapter.py)', '538': 'test_execute_request(test_adapter.py)', '545': 'test_rename_type(test_adapter.py)', '544': 'test_no_adapt(test_adapter.py)', '546': 'test_same_version(test_adapter.py)', '514': 'V5toV4TestCase(test_adapter.py)', '512': 'AdapterTest(test_adapter.py)', '526': 'test_input_request(test_adapter.py)', '523': 'test_display_data(test_adapter.py)', '527': 'test_kernel_info_reply(test_adapter.py)', '530': 'test_object_info_reply_not_found(test_adapter.py)', '529': 'test_object_info_reply(test_adapter.py)', '531': 'test_object_info_request(test_adapter.py)', '521': 'test_complete_reply(test_adapter.py)', '522': 'test_complete_request(test_adapter.py)', '524': 'test_execute_reply(test_adapter.py)', '532': 'test_rename_type(test_adapter.py)', '525': 'test_execute_request(test_adapter.py)', '528': 'test_no_adapt(test_adapter.py)', '533': 'test_same_version(test_adapter.py)', '513': 'V4toV5TestCase(test_adapter.py)', '519': 'setUp(test_adapter.py)', '516': 'test_default_version(test_adapter.py)', '515': 'test_code_to_line_no_code(test_adapter.py)', '51': 'code_to_line(adapter.py)', '704': 'execute(utils.py)', '158': 'get_shell_msg(client.py)', '615': 'execute(test_kernelmanager.py)', '157': 'get_iopub_msg(client.py)', '710': '__exit__(utils.py)', '709': '__enter__(utils.py)', '580': 'test_kernelapp_lifecycle(test_kernelapp.py)', '579': '_launch(test_kernelapp.py)', '686': 'test_clone(test_session.py)', '473': 'clone(session.py)', '695': 'test_send_raw(test_session.py)', '481': 'send_raw(session.py)', '483': 'sign(session.py)', '689': 'test_datetimes_msgpack(test_session.py)', '475': 'feed_identities(session.py)', '690': 'test_datetimes_pickle(test_session.py)', '688': 'test_datetimes(test_session.py)', '683': 'test_bad_roundtrip(test_session.py)', '685': 'test_bad_unpacker(test_session.py)', '682': 'test_bad_packer(test_session.py)', '681': 'test_bad_pack(test_session.py)', '675': '_bad_packer(test_session.py)', '687': 'test_cull_digest_history(test_session.py)', '700': 'test_zero_digest_history(test_session.py)', '697': 'test_session_id(test_session.py)', '699': 'test_unique_msg_ids(test_session.py)', '445': 'msg_header(session.py)', '698': 'test_tracking(test_session.py)', '680': 'test_args(test_session.py)', '694': 'test_send(test_session.py)', '478': 'msg_id(session.py)', '696': 'test_serialize(test_session.py)', '674': 'TestSession(test_session.py)', '673': 'SessionTestCase(test_session.py)', '678': 'setUp(test_session.py)', '556': 'test_shutdown(test_client.py)', '548': '_check_reply(test_client.py)', '550': 'test_comm_info(test_client.py)', '555': 'test_kernel_info(test_client.py)', '551': 'test_complete(test_client.py)', '554': 'test_inspect(test_client.py)', '553': 'test_history(test_client.py)', '549': 'setUp(test_client.py)', '255': 'NoSuchKernel(kernelspec.py)', '116': 'BlockingKernelClient(client.py)', '117': 'reqrep(client.py)', '124': 'wrapped(client.py)', '123': 'wait_for_ready(client.py)', '150': '_handle_kernel_info_reply(client.py)', '125': 'HBChannel(channels.py)', '104': 'wait_for_ready(client.py)', '102': 'hb_channel(client.py)', '196': '_make_url(connect.py)', '90': 'AsyncKernelClient(client.py)', '91': 'reqrep(client.py)', '105': 'wrapped(client.py)', '80': 'ZMQSocketChannel(channels.py)', '154': 'control_channel(client.py)', '723': 'ioloop(threaded.py)', '160': 'hb_channel(client.py)', '171': 'stdin_channel(client.py)', '164': 'iopub_channel(client.py)', '168': 'shell_channel(client.py)', '328': 'interrupt_kernel(manager.py)', '740': 'send_interrupt(win_interrupt.py)', '334': '__del__(manager.py)', '200': 'cleanup_connection_file(connect.py)', '291': 'start(kernelspecapp.py)', '293': 'start(kernelspecapp.py)', '294': 'path_key(kernelspecapp.py)', '735': 'start(threaded.py)', '720': 'start(threaded.py)', '141': 'start(channelsabc.py)', '432': 'start(restarter.py)', '288': 'start(kernelspecapp.py)', '89': 'start(channels.py)', '115': 'start(channels.py)', '290': 'start(kernelspecapp.py)', '438': 'parse_command_line(runapp.py)', '218': 'build_kernel_argv(consoleapp.py)', '308': '_only_once(localinterfaces.py)', '317': 'wrapped(localinterfaces.py)', '47': 'V4toV5(adapter.py)', '46': 'Adapter(adapter.py)', '77': 'object_info_request(adapter.py)', '52': 'extract_oname_v4(adapter.py)', '70': 'complete_request(adapter.py)', '75': 'kernel_info_reply(adapter.py)', '49': '_version_str_to_list(adapter.py)', '48': 'V5toV4(adapter.py)', '53': '__call__(adapter.py)', '54': 'handle_reply_status_error(adapter.py)', '57': 'update_msg_type(adapter.py)', '56': 'update_metadata(adapter.py)', '55': 'update_header(adapter.py)', '247': 'initialize(kernelapp.py)', '246': '_record_started(kernelapp.py)', '585': 'config(test_kernelmanager.py)', '262': 'install_native_kernel_spec(kernelspec.py)', '276': 'install_native_kernel_spec(kernelspec.py)', '265': 'to_json(kernelspec.py)', '264': 'to_dict(kernelspec.py)', '449': 'test_msg2obj(session.py)', '440': 'Message(session.py)', '453': '__init__(session.py)', '470': '_signature_scheme_changed(session.py)', '465': '_new_auth(session.py)', '463': '_key_default(session.py)', '447': 'new_id_bytes(session.py)', '462': '_key_changed(session.py)', '443': 'default_secure(session.py)', '469': '_session_default(session.py)', '446': 'new_id(session.py)', '412': 'is_alive(multikernelmanager.py)', '420': 'shutdown_all(multikernelmanager.py)', '413': 'list_kernel_ids(multikernelmanager.py)', '721': 'stop(threaded.py)', '140': 'is_alive(channelsabc.py)', '732': 'is_alive(threaded.py)', '112': 'is_alive(channels.py)', '86': 'is_alive(channels.py)', '724': 'start_channels(threaded.py)', '722': '_check_kernel_info_reply(threaded.py)', '716': '__init__(threaded.py)', '387': 'shutdown_kernel(multikernelmanager.py)', '416': 'remove_kernel(multikernelmanager.py)', '713': 'IOLoopThread(threaded.py)', '714': 'ThreadedKernelClient(threaded.py)', '715': 'ThreadedZMQSocketChannel(threaded.py)', '731': 'flush(threaded.py)', '727': '_flush(threaded.py)', '386': 'shutdown_all(multikernelmanager.py)', '418': 'request_shutdown(multikernelmanager.py)', '402': 'cleanup_resources(multikernelmanager.py)', '408': 'finish_shutdown(multikernelmanager.py)', '393': '__len__(multikernelmanager.py)', '421': 'shutdown_kernel(multikernelmanager.py)', '198': '_session_default(connect.py)', '298': 'launch_kernel(launcher.py)'}}, {'key': 2643, 'parent': 2644, 'tfidf_word': 'interrupt stop handler handle event create call attributes invalid stream ', 'tfidf_method': 'SECURITY_ATTRIBUTES is_alive __init__ is_alive stop __init__ InvalidPortNumber is_alive __init__ __init__ ', 'lda_word': ' kernel,close,launch,alive,beating,', 'lda_method': ' init,is_alive,is_beating,close,launch_kernel,', 'lsi_word': ' init,handler,setup,call,stream,', 'lsi_method': ' init,setup_stream,handle_recv,call_handlers,invalidportnumber,', 'spm_method': ' ', 'text_summary': '', 'files_count': 11, 'files': ['launcher.py', 'channels.py', 'threaded.py', 'win_interrupt.py', 'consoleapp.py', 'signalkernel.py', 'kernelspec.py', 'multikernelmanager.py', 'session.py', 'managerabc.py', 'channelsabc.py'], 'execution_path_count': 18, 'function_id_to_name_file': {'298': 'launch_kernel(launcher.py)', '132': 'close(channels.py)', '718': 'close(threaded.py)', '739': 'create_interrupt_event(win_interrupt.py)', '741': 'SECURITY_ATTRIBUTES(win_interrupt.py)', '215': '__init__(consoleapp.py)', '509': '__init__(signalkernel.py)', '278': '__init__(kernelspec.py)', '127': '__init__(channels.py)', '126': 'InvalidPortNumber(channels.py)', '107': '__init__(channels.py)', '81': '__init__(channels.py)', '392': '__init__(multikernelmanager.py)', '726': '__init__(threaded.py)', '737': 'setup_stream(threaded.py)', '728': '_handle_recv(threaded.py)', '729': 'call_handlers(threaded.py)', '716': '__init__(threaded.py)', '453': '__init__(session.py)', '136': 'stop(channels.py)', '133': 'is_beating(channels.py)', '412': 'is_alive(multikernelmanager.py)', '373': 'is_alive(managerabc.py)', '140': 'is_alive(channelsabc.py)', '112': 'is_alive(channels.py)', '732': 'is_alive(threaded.py)'}}, {'key': 8, 'parent': 2647, 'tfidf_word': 'EP: 8, Name: is_beating &rarr; is_alive', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2646, 'parent': 2647, 'tfidf_word': 'run dead time call handler poll ', 'tfidf_method': 'run time_to_dead _poll call_handlers ', 'lda_word': ' run,dead,time,poll,handler,', 'lda_method': ' run,call_handlers,time_to_dead,poll,', 'lsi_word': ' run,dead,time,poll,call,', 'lsi_method': ' run,time_to_dead,poll,call_handlers,', 'spm_method': ' ', 'text_summary': 'Run my loop, ignoring EINTR events in the poller.', 'files_count': 2, 'files': ['channels.py', 'channelsabc.py'], 'execution_path_count': 3, 'function_id_to_name_file': {'135': 'run(channels.py)', '145': 'time_to_dead(channelsabc.py)', '131': 'call_handlers(channels.py)', '130': '_poll(channels.py)'}}, {'key': 2622, 'parent': 2628, 'tfidf_word': 'threaded subclass date raw clone permission native name flush code ', 'tfidf_method': 'extract_oname_v4 test_complete_reply test_complete_request test_display_data test_execute_reply test_execute_request test_input_request test_kernel_info_reply test_object_info_reply reqrep ', 'lda_word': ' start,test,file,connection,find,', 'lda_method': ' adapt,setup,session,test_tcp_cinfo,threadedkernelclient,', 'lsi_word': ' test,kernel,adapt,session,reply,', 'lsi_method': ' start,setup,path_key,start_channels,env,', 'spm_method': ' ', 'text_summary': "return ip for localhost (almost always 127.0.0.1)   Ensure that a sequence of kernel startups doesn't break anything. Pass a message to the ZMQ socket to send. Return a list of the kernel ids of the active kernels. Return the connection info as a dict. Ensure that a sequence of kernel startups doesn't break anything. Cleanup connection file *if we wrote it*. find a connection file, and return its absolute path. return ip for localhost (almost always 127.0.0.1)      find a connection file, and return its absolute path. For tests, create a file to indicate that we've started. test load_connection_file() after. handle kernel info reply. Get the hb channel object for this kernel. Send a raw message via ident path. test tracking messages. Make a blocking client connected to my kernel. Immediately processes all pending messages on this channel. Return the number of running kernels. Wait for kernel shutdown, then kill process if it doesn't shutdown. Interrupts the kernel by sending it a signal. Get a message from the shell channel. This is run in the ioloop thread when the kernel info reply is received. default function for packing datetime objects in JSON. Attempts to stop the kernel process cleanly. Start the polling of the kernel. Send a shutdown request via control channel. Get a message from the iopub channel. test that messages receive unique ids.", 'files_count': 32, 'files': ['connect.py', 'threaded.py', 'managerabc.py', 'test_session.py', 'test_adapter.py', 'test_connect.py', 'forward.py', 'test_manager.py', 'kernelspec.py', 'channels.py', 'test_jsonutil.py', 'session.py', 'jsonutil.py', 'test_kernelmanager.py', 'utils.py', 'test_kernelspec.py', 'signalkernel.py', 'test_multikernelmanager.py', 'localinterfaces.py', 'adapter.py', 'client.py', 'test_kernelapp.py', 'test_client.py', 'manager.py', 'win_interrupt.py', 'kernelspecapp.py', 'channelsabc.py', 'restarter.py', 'runapp.py', 'consoleapp.py', 'kernelapp.py', 'multikernelmanager.py'], 'execution_path_count': 209, 'function_id_to_name_file': {'199': 'blocking_client(connect.py)', '208': 'get_connection_info(connect.py)', '725': 'stop_channels(threaded.py)', '373': 'is_alive(managerabc.py)', '684': 'test_bad_unpack(test_session.py)', '676': '_bad_unpacker(test_session.py)', '536': 'test_complete_request(test_adapter.py)', '517': 'adapt(test_adapter.py)', '562': 'test_find_connection_file_local(test_connect.py)', '189': 'find_connection_file(connect.py)', '492': 'handle(forward.py)', '730': 'close(threaded.py)', '493': 'SubHander(forward.py)', '490': 'Handler(forward.py)', '635': 'test_connection_file_real_path(test_manager.py)', '253': 'KernelSpec(kernelspec.py)', '718': 'close(threaded.py)', '132': 'close(channels.py)', '114': 'send(channels.py)', '88': 'send(channels.py)', '83': 'close(channels.py)', '109': 'close(channels.py)', '575': 'test_date_default(test_jsonutil.py)', '450': 'utcnow(session.py)', '241': 'date_default(jsonutil.py)', '240': '_ensure_tzinfo(jsonutil.py)', '597': 'test_subclasses(test_kernelmanager.py)', '703': 'AsyncKernelManagerWithCleanup(utils.py)', '595': 'test_signal_kernel_subprocesses(test_kernelmanager.py)', '598': 'execute(test_kernelmanager.py)', '702': 'AsyncKernelManagerSubclass(utils.py)', '611': 'test_start_parallel_process_kernels(test_kernelmanager.py)', '591': 'transport(test_kernelmanager.py)', '606': 'test_templated_kspec_env(test_kernelmanager.py)', '599': '_env_test_body(test_kernelmanager.py)', '607': 'execute(test_kernelmanager.py)', '612': 'test_start_parallel_thread_kernels(test_kernelmanager.py)', '604': 'test_signal_kernel_subprocesses(test_kernelmanager.py)', '608': 'execute(test_kernelmanager.py)', '586': 'env(test_kernelmanager.py)', '712': 'stop(utils.py)', '711': 'start(utils.py)', '705': 'test_env(utils.py)', '630': 'test_validate_kernel_name(test_kernelspec.py)', '257': '_is_valid_kernel_name(kernelspec.py)', '506': 'SignalTestApp(signalkernel.py)', '507': 'SignalTestKernel(signalkernel.py)', '627': 'test_remove_kernel_spec(test_kernelspec.py)', '617': '_install_sample_kernel(test_kernelspec.py)', '626': 'test_kernel_spec_priority(test_kernelspec.py)', '651': 'test_tcp_cinfo(test_multikernelmanager.py)', '640': '_run_cinfo(test_multikernelmanager.py)', '621': 'test_find_all_specs(test_kernelspec.py)', '622': 'test_find_kernel_specs(test_kernelspec.py)', '623': 'test_get_kernel_spec(test_kernelspec.py)', '619': 'tearDown(test_kernelspec.py)', '618': 'setUp(test_kernelspec.py)', '649': 'test_start_sequence_ipc_kernels(test_multikernelmanager.py)', '641': '_run_lifecycle(test_multikernelmanager.py)', '650': 'test_start_sequence_tcp_kernels(test_multikernelmanager.py)', '644': 'test_ipc_cinfo(test_multikernelmanager.py)', '315': 'localhost(localinterfaces.py)', '645': 'test_ipc_lifecycle(test_multikernelmanager.py)', '665': 'test_start_sequence_tcp_kernels(test_multikernelmanager.py)', '657': '_run_lifecycle(test_multikernelmanager.py)', '664': 'test_start_sequence_ipc_kernels(test_multikernelmanager.py)', '659': 'test_ipc_cinfo(test_multikernelmanager.py)', '656': '_run_cinfo(test_multikernelmanager.py)', '660': 'test_ipc_lifecycle(test_multikernelmanager.py)', '666': 'test_tcp_cinfo(test_multikernelmanager.py)', '668': 'test_tcp_lifecycle_with_kernel_id(test_multikernelmanager.py)', '569': 'test_secure_write(test_connect.py)', '573': 'check_user_only_permissions(test_connect.py)', '574': 'fetch_win32_permissions(test_connect.py)', '563': 'test_find_connection_file_relative(test_connect.py)', '561': 'test_find_connection_file_abspath(test_connect.py)', '560': 'test_find_connection_file(test_connect.py)', '565': 'test_load_connection_file_session_with_kn(test_connect.py)', '441': 'Session(session.py)', '539': 'test_input_request(test_adapter.py)', '564': 'test_load_connection_file_session(test_connect.py)', '537': 'test_display_data(test_adapter.py)', '540': 'test_inspect_reply(test_adapter.py)', '543': 'test_kernel_info_reply(test_adapter.py)', '542': 'test_inspect_request_token(test_adapter.py)', '535': 'test_complete_reply(test_adapter.py)', '541': 'test_inspect_request(test_adapter.py)', '538': 'test_execute_request(test_adapter.py)', '545': 'test_rename_type(test_adapter.py)', '544': 'test_no_adapt(test_adapter.py)', '546': 'test_same_version(test_adapter.py)', '514': 'V5toV4TestCase(test_adapter.py)', '512': 'AdapterTest(test_adapter.py)', '526': 'test_input_request(test_adapter.py)', '523': 'test_display_data(test_adapter.py)', '527': 'test_kernel_info_reply(test_adapter.py)', '530': 'test_object_info_reply_not_found(test_adapter.py)', '529': 'test_object_info_reply(test_adapter.py)', '531': 'test_object_info_request(test_adapter.py)', '521': 'test_complete_reply(test_adapter.py)', '522': 'test_complete_request(test_adapter.py)', '524': 'test_execute_reply(test_adapter.py)', '532': 'test_rename_type(test_adapter.py)', '525': 'test_execute_request(test_adapter.py)', '528': 'test_no_adapt(test_adapter.py)', '533': 'test_same_version(test_adapter.py)', '513': 'V4toV5TestCase(test_adapter.py)', '519': 'setUp(test_adapter.py)', '516': 'test_default_version(test_adapter.py)', '515': 'test_code_to_line_no_code(test_adapter.py)', '51': 'code_to_line(adapter.py)', '704': 'execute(utils.py)', '158': 'get_shell_msg(client.py)', '615': 'execute(test_kernelmanager.py)', '157': 'get_iopub_msg(client.py)', '710': '__exit__(utils.py)', '709': '__enter__(utils.py)', '580': 'test_kernelapp_lifecycle(test_kernelapp.py)', '579': '_launch(test_kernelapp.py)', '686': 'test_clone(test_session.py)', '473': 'clone(session.py)', '695': 'test_send_raw(test_session.py)', '481': 'send_raw(session.py)', '483': 'sign(session.py)', '689': 'test_datetimes_msgpack(test_session.py)', '475': 'feed_identities(session.py)', '690': 'test_datetimes_pickle(test_session.py)', '688': 'test_datetimes(test_session.py)', '683': 'test_bad_roundtrip(test_session.py)', '685': 'test_bad_unpacker(test_session.py)', '682': 'test_bad_packer(test_session.py)', '681': 'test_bad_pack(test_session.py)', '675': '_bad_packer(test_session.py)', '687': 'test_cull_digest_history(test_session.py)', '700': 'test_zero_digest_history(test_session.py)', '697': 'test_session_id(test_session.py)', '699': 'test_unique_msg_ids(test_session.py)', '445': 'msg_header(session.py)', '698': 'test_tracking(test_session.py)', '680': 'test_args(test_session.py)', '694': 'test_send(test_session.py)', '478': 'msg_id(session.py)', '696': 'test_serialize(test_session.py)', '674': 'TestSession(test_session.py)', '673': 'SessionTestCase(test_session.py)', '678': 'setUp(test_session.py)', '556': 'test_shutdown(test_client.py)', '548': '_check_reply(test_client.py)', '550': 'test_comm_info(test_client.py)', '555': 'test_kernel_info(test_client.py)', '551': 'test_complete(test_client.py)', '554': 'test_inspect(test_client.py)', '553': 'test_history(test_client.py)', '549': 'setUp(test_client.py)', '255': 'NoSuchKernel(kernelspec.py)', '116': 'BlockingKernelClient(client.py)', '117': 'reqrep(client.py)', '124': 'wrapped(client.py)', '123': 'wait_for_ready(client.py)', '150': '_handle_kernel_info_reply(client.py)', '125': 'HBChannel(channels.py)', '104': 'wait_for_ready(client.py)', '102': 'hb_channel(client.py)', '196': '_make_url(connect.py)', '90': 'AsyncKernelClient(client.py)', '91': 'reqrep(client.py)', '105': 'wrapped(client.py)', '80': 'ZMQSocketChannel(channels.py)', '154': 'control_channel(client.py)', '723': 'ioloop(threaded.py)', '160': 'hb_channel(client.py)', '171': 'stdin_channel(client.py)', '164': 'iopub_channel(client.py)', '168': 'shell_channel(client.py)', '328': 'interrupt_kernel(manager.py)', '740': 'send_interrupt(win_interrupt.py)', '334': '__del__(manager.py)', '200': 'cleanup_connection_file(connect.py)', '291': 'start(kernelspecapp.py)', '293': 'start(kernelspecapp.py)', '294': 'path_key(kernelspecapp.py)', '735': 'start(threaded.py)', '720': 'start(threaded.py)', '141': 'start(channelsabc.py)', '432': 'start(restarter.py)', '288': 'start(kernelspecapp.py)', '89': 'start(channels.py)', '115': 'start(channels.py)', '290': 'start(kernelspecapp.py)', '438': 'parse_command_line(runapp.py)', '218': 'build_kernel_argv(consoleapp.py)', '308': '_only_once(localinterfaces.py)', '317': 'wrapped(localinterfaces.py)', '47': 'V4toV5(adapter.py)', '46': 'Adapter(adapter.py)', '77': 'object_info_request(adapter.py)', '52': 'extract_oname_v4(adapter.py)', '70': 'complete_request(adapter.py)', '75': 'kernel_info_reply(adapter.py)', '49': '_version_str_to_list(adapter.py)', '48': 'V5toV4(adapter.py)', '53': '__call__(adapter.py)', '54': 'handle_reply_status_error(adapter.py)', '57': 'update_msg_type(adapter.py)', '56': 'update_metadata(adapter.py)', '55': 'update_header(adapter.py)', '247': 'initialize(kernelapp.py)', '246': '_record_started(kernelapp.py)', '585': 'config(test_kernelmanager.py)', '262': 'install_native_kernel_spec(kernelspec.py)', '276': 'install_native_kernel_spec(kernelspec.py)', '265': 'to_json(kernelspec.py)', '264': 'to_dict(kernelspec.py)', '449': 'test_msg2obj(session.py)', '440': 'Message(session.py)', '453': '__init__(session.py)', '470': '_signature_scheme_changed(session.py)', '465': '_new_auth(session.py)', '463': '_key_default(session.py)', '447': 'new_id_bytes(session.py)', '462': '_key_changed(session.py)', '443': 'default_secure(session.py)', '469': '_session_default(session.py)', '446': 'new_id(session.py)', '412': 'is_alive(multikernelmanager.py)', '420': 'shutdown_all(multikernelmanager.py)', '413': 'list_kernel_ids(multikernelmanager.py)', '721': 'stop(threaded.py)', '140': 'is_alive(channelsabc.py)', '732': 'is_alive(threaded.py)', '112': 'is_alive(channels.py)', '86': 'is_alive(channels.py)', '724': 'start_channels(threaded.py)', '722': '_check_kernel_info_reply(threaded.py)', '716': '__init__(threaded.py)', '387': 'shutdown_kernel(multikernelmanager.py)', '416': 'remove_kernel(multikernelmanager.py)', '713': 'IOLoopThread(threaded.py)', '714': 'ThreadedKernelClient(threaded.py)', '715': 'ThreadedZMQSocketChannel(threaded.py)', '731': 'flush(threaded.py)', '727': '_flush(threaded.py)', '386': 'shutdown_all(multikernelmanager.py)', '418': 'request_shutdown(multikernelmanager.py)', '402': 'cleanup_resources(multikernelmanager.py)', '408': 'finish_shutdown(multikernelmanager.py)', '393': '__len__(multikernelmanager.py)', '421': 'shutdown_kernel(multikernelmanager.py)'}}, {'key': 2627, 'parent': 2628, 'tfidf_word': 'close kernel launch default session ', 'tfidf_method': 'launch_kernel close _session_default Session close close ', 'lda_word': ' close,launch,kernel,session,default,', 'lda_method': ' session,session_default,launch_kernel,close,', 'lsi_word': ' close,kernel,launch,default,session,', 'lsi_method': ' launch_kernel,close,session_default,session,', 'spm_method': ' ', 'text_summary': '', 'files_count': 5, 'files': ['connect.py', 'session.py', 'launcher.py', 'channels.py', 'threaded.py'], 'execution_path_count': 4, 'function_id_to_name_file': {'198': '_session_default(connect.py)', '441': 'Session(session.py)', '298': 'launch_kernel(launcher.py)', '109': 'close(channels.py)', '730': 'close(threaded.py)', '83': 'close(channels.py)'}}, {'key': 36, 'parent': 2643, 'tfidf_word': 'EP: 36, Name: launch_kernel &rarr; close', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2642, 'parent': 2643, 'tfidf_word': 'interrupt stop handler handle event create call attributes invalid stream ', 'tfidf_method': 'is_alive __init__ is_alive stop close __init__ InvalidPortNumber is_alive is_alive __init__ ', 'lda_word': ' init,setup,call,handle,stream,', 'lda_method': ' launch_kernel,security_attributes,create_interrupt_event,close,init,', 'lsi_word': ' init,handler,recv,handle,call,', 'lsi_method': ' init,call_handlers,setup_stream,handle_recv,invalidportnumber,', 'spm_method': ' ', 'text_summary': '', 'files_count': 11, 'files': ['launcher.py', 'threaded.py', 'win_interrupt.py', 'consoleapp.py', 'signalkernel.py', 'kernelspec.py', 'channels.py', 'multikernelmanager.py', 'session.py', 'managerabc.py', 'channelsabc.py'], 'execution_path_count': 17, 'function_id_to_name_file': {'298': 'launch_kernel(launcher.py)', '718': 'close(threaded.py)', '739': 'create_interrupt_event(win_interrupt.py)', '741': 'SECURITY_ATTRIBUTES(win_interrupt.py)', '215': '__init__(consoleapp.py)', '509': '__init__(signalkernel.py)', '278': '__init__(kernelspec.py)', '127': '__init__(channels.py)', '126': 'InvalidPortNumber(channels.py)', '107': '__init__(channels.py)', '81': '__init__(channels.py)', '392': '__init__(multikernelmanager.py)', '726': '__init__(threaded.py)', '737': 'setup_stream(threaded.py)', '728': '_handle_recv(threaded.py)', '729': 'call_handlers(threaded.py)', '716': '__init__(threaded.py)', '453': '__init__(session.py)', '136': 'stop(channels.py)', '132': 'close(channels.py)', '133': 'is_beating(channels.py)', '412': 'is_alive(multikernelmanager.py)', '373': 'is_alive(managerabc.py)', '140': 'is_alive(channelsabc.py)', '112': 'is_alive(channels.py)', '732': 'is_alive(threaded.py)'}}, {'key': 7, 'parent': 2646, 'tfidf_word': 'EP: 7, Name: run &rarr; time_to_dead', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2645, 'parent': 2646, 'tfidf_word': 'run call dead handler poll time ', 'tfidf_method': 'run _poll call_handlers time_to_dead ', 'lda_word': ' run,handler,dead,time,call,', 'lda_method': ' run,call_handlers,time_to_dead,poll,', 'lsi_word': ' run,time,dead,poll,call,', 'lsi_method': ' run,poll,time_to_dead,call_handlers,', 'spm_method': ' ', 'text_summary': 'Run my loop, ignoring EINTR events in the poller.', 'files_count': 2, 'files': ['channels.py', 'channelsabc.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'135': 'run(channels.py)', '131': 'call_handlers(channels.py)', '130': '_poll(channels.py)', '145': 'time_to_dead(channelsabc.py)'}}, {'key': 64, 'parent': 2622, 'tfidf_word': 'EP: 64, Name: blocking_client &rarr; get_connection_info', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2621, 'parent': 2622, 'tfidf_word': 'signal date clone subclass raw name flush native permission code ', 'tfidf_method': 'test_complete_reply test_complete_request test_display_data test_execute_reply test_execute_request test_input_request test_kernel_info_reply test_no_adapt test_object_info_reply_not_found reqrep ', 'lda_word': ' kernel,test,session,stop,channels,', 'lda_method': ' start,session,setup,stop,run_lifecycle,', 'lsi_word': ' test,kernel,adapt,session,reply,', 'lsi_method': ' start,setup,path_key,start_channels,env,', 'spm_method': ' ', 'text_summary': "Turn a multiline code block and cursor position into a single line. return ip for localhost (almost always 127.0.0.1)   Ensure that a sequence of kernel startups doesn't break anything. Pass a message to the ZMQ socket to send. Return a list of the kernel ids of the active kernels. Ensure that a sequence of kernel startups doesn't break anything. find a connection file, and return its absolute path. return ip for localhost (almost always 127.0.0.1)      find a connection file, and return its absolute path. For tests, create a file to indicate that we've started. test load_connection_file() after. handle kernel info reply. Get the hb channel object for this kernel. Send a raw message via ident path. test tracking messages. Immediately processes all pending messages on this channel. Return the number of running kernels. Wait for kernel shutdown, then kill process if it doesn't shutdown. Interrupts the kernel by sending it a signal. Get a message from the shell channel. This is run in the ioloop thread when the kernel info reply is received. default function for packing datetime objects in JSON. Attempts to stop the kernel process cleanly. Start the polling of the kernel. Send a shutdown request via control channel. Get a message from the iopub channel. test that messages receive unique ids.", 'files_count': 32, 'files': ['threaded.py', 'managerabc.py', 'test_session.py', 'test_adapter.py', 'test_connect.py', 'connect.py', 'forward.py', 'test_manager.py', 'kernelspec.py', 'channels.py', 'test_jsonutil.py', 'session.py', 'jsonutil.py', 'test_kernelmanager.py', 'utils.py', 'test_kernelspec.py', 'signalkernel.py', 'test_multikernelmanager.py', 'localinterfaces.py', 'adapter.py', 'client.py', 'test_kernelapp.py', 'test_client.py', 'manager.py', 'win_interrupt.py', 'kernelspecapp.py', 'channelsabc.py', 'restarter.py', 'runapp.py', 'consoleapp.py', 'kernelapp.py', 'multikernelmanager.py'], 'execution_path_count': 208, 'function_id_to_name_file': {'725': 'stop_channels(threaded.py)', '373': 'is_alive(managerabc.py)', '684': 'test_bad_unpack(test_session.py)', '676': '_bad_unpacker(test_session.py)', '536': 'test_complete_request(test_adapter.py)', '517': 'adapt(test_adapter.py)', '562': 'test_find_connection_file_local(test_connect.py)', '189': 'find_connection_file(connect.py)', '492': 'handle(forward.py)', '730': 'close(threaded.py)', '493': 'SubHander(forward.py)', '490': 'Handler(forward.py)', '635': 'test_connection_file_real_path(test_manager.py)', '253': 'KernelSpec(kernelspec.py)', '718': 'close(threaded.py)', '132': 'close(channels.py)', '114': 'send(channels.py)', '88': 'send(channels.py)', '83': 'close(channels.py)', '109': 'close(channels.py)', '575': 'test_date_default(test_jsonutil.py)', '450': 'utcnow(session.py)', '241': 'date_default(jsonutil.py)', '240': '_ensure_tzinfo(jsonutil.py)', '597': 'test_subclasses(test_kernelmanager.py)', '703': 'AsyncKernelManagerWithCleanup(utils.py)', '595': 'test_signal_kernel_subprocesses(test_kernelmanager.py)', '598': 'execute(test_kernelmanager.py)', '702': 'AsyncKernelManagerSubclass(utils.py)', '611': 'test_start_parallel_process_kernels(test_kernelmanager.py)', '591': 'transport(test_kernelmanager.py)', '606': 'test_templated_kspec_env(test_kernelmanager.py)', '599': '_env_test_body(test_kernelmanager.py)', '607': 'execute(test_kernelmanager.py)', '612': 'test_start_parallel_thread_kernels(test_kernelmanager.py)', '604': 'test_signal_kernel_subprocesses(test_kernelmanager.py)', '608': 'execute(test_kernelmanager.py)', '586': 'env(test_kernelmanager.py)', '712': 'stop(utils.py)', '711': 'start(utils.py)', '705': 'test_env(utils.py)', '630': 'test_validate_kernel_name(test_kernelspec.py)', '257': '_is_valid_kernel_name(kernelspec.py)', '506': 'SignalTestApp(signalkernel.py)', '507': 'SignalTestKernel(signalkernel.py)', '627': 'test_remove_kernel_spec(test_kernelspec.py)', '617': '_install_sample_kernel(test_kernelspec.py)', '626': 'test_kernel_spec_priority(test_kernelspec.py)', '651': 'test_tcp_cinfo(test_multikernelmanager.py)', '640': '_run_cinfo(test_multikernelmanager.py)', '621': 'test_find_all_specs(test_kernelspec.py)', '622': 'test_find_kernel_specs(test_kernelspec.py)', '623': 'test_get_kernel_spec(test_kernelspec.py)', '619': 'tearDown(test_kernelspec.py)', '618': 'setUp(test_kernelspec.py)', '649': 'test_start_sequence_ipc_kernels(test_multikernelmanager.py)', '641': '_run_lifecycle(test_multikernelmanager.py)', '650': 'test_start_sequence_tcp_kernels(test_multikernelmanager.py)', '644': 'test_ipc_cinfo(test_multikernelmanager.py)', '315': 'localhost(localinterfaces.py)', '645': 'test_ipc_lifecycle(test_multikernelmanager.py)', '665': 'test_start_sequence_tcp_kernels(test_multikernelmanager.py)', '657': '_run_lifecycle(test_multikernelmanager.py)', '664': 'test_start_sequence_ipc_kernels(test_multikernelmanager.py)', '659': 'test_ipc_cinfo(test_multikernelmanager.py)', '656': '_run_cinfo(test_multikernelmanager.py)', '660': 'test_ipc_lifecycle(test_multikernelmanager.py)', '666': 'test_tcp_cinfo(test_multikernelmanager.py)', '668': 'test_tcp_lifecycle_with_kernel_id(test_multikernelmanager.py)', '569': 'test_secure_write(test_connect.py)', '573': 'check_user_only_permissions(test_connect.py)', '574': 'fetch_win32_permissions(test_connect.py)', '563': 'test_find_connection_file_relative(test_connect.py)', '561': 'test_find_connection_file_abspath(test_connect.py)', '560': 'test_find_connection_file(test_connect.py)', '565': 'test_load_connection_file_session_with_kn(test_connect.py)', '441': 'Session(session.py)', '539': 'test_input_request(test_adapter.py)', '564': 'test_load_connection_file_session(test_connect.py)', '537': 'test_display_data(test_adapter.py)', '540': 'test_inspect_reply(test_adapter.py)', '543': 'test_kernel_info_reply(test_adapter.py)', '542': 'test_inspect_request_token(test_adapter.py)', '535': 'test_complete_reply(test_adapter.py)', '541': 'test_inspect_request(test_adapter.py)', '538': 'test_execute_request(test_adapter.py)', '545': 'test_rename_type(test_adapter.py)', '544': 'test_no_adapt(test_adapter.py)', '546': 'test_same_version(test_adapter.py)', '514': 'V5toV4TestCase(test_adapter.py)', '512': 'AdapterTest(test_adapter.py)', '526': 'test_input_request(test_adapter.py)', '523': 'test_display_data(test_adapter.py)', '527': 'test_kernel_info_reply(test_adapter.py)', '530': 'test_object_info_reply_not_found(test_adapter.py)', '529': 'test_object_info_reply(test_adapter.py)', '531': 'test_object_info_request(test_adapter.py)', '521': 'test_complete_reply(test_adapter.py)', '522': 'test_complete_request(test_adapter.py)', '524': 'test_execute_reply(test_adapter.py)', '532': 'test_rename_type(test_adapter.py)', '525': 'test_execute_request(test_adapter.py)', '528': 'test_no_adapt(test_adapter.py)', '533': 'test_same_version(test_adapter.py)', '513': 'V4toV5TestCase(test_adapter.py)', '519': 'setUp(test_adapter.py)', '516': 'test_default_version(test_adapter.py)', '515': 'test_code_to_line_no_code(test_adapter.py)', '51': 'code_to_line(adapter.py)', '704': 'execute(utils.py)', '158': 'get_shell_msg(client.py)', '615': 'execute(test_kernelmanager.py)', '157': 'get_iopub_msg(client.py)', '710': '__exit__(utils.py)', '709': '__enter__(utils.py)', '580': 'test_kernelapp_lifecycle(test_kernelapp.py)', '579': '_launch(test_kernelapp.py)', '686': 'test_clone(test_session.py)', '473': 'clone(session.py)', '695': 'test_send_raw(test_session.py)', '481': 'send_raw(session.py)', '483': 'sign(session.py)', '689': 'test_datetimes_msgpack(test_session.py)', '475': 'feed_identities(session.py)', '690': 'test_datetimes_pickle(test_session.py)', '688': 'test_datetimes(test_session.py)', '683': 'test_bad_roundtrip(test_session.py)', '685': 'test_bad_unpacker(test_session.py)', '682': 'test_bad_packer(test_session.py)', '681': 'test_bad_pack(test_session.py)', '675': '_bad_packer(test_session.py)', '687': 'test_cull_digest_history(test_session.py)', '700': 'test_zero_digest_history(test_session.py)', '697': 'test_session_id(test_session.py)', '699': 'test_unique_msg_ids(test_session.py)', '445': 'msg_header(session.py)', '698': 'test_tracking(test_session.py)', '680': 'test_args(test_session.py)', '694': 'test_send(test_session.py)', '478': 'msg_id(session.py)', '696': 'test_serialize(test_session.py)', '674': 'TestSession(test_session.py)', '673': 'SessionTestCase(test_session.py)', '678': 'setUp(test_session.py)', '556': 'test_shutdown(test_client.py)', '548': '_check_reply(test_client.py)', '550': 'test_comm_info(test_client.py)', '555': 'test_kernel_info(test_client.py)', '551': 'test_complete(test_client.py)', '554': 'test_inspect(test_client.py)', '553': 'test_history(test_client.py)', '549': 'setUp(test_client.py)', '255': 'NoSuchKernel(kernelspec.py)', '116': 'BlockingKernelClient(client.py)', '117': 'reqrep(client.py)', '124': 'wrapped(client.py)', '123': 'wait_for_ready(client.py)', '150': '_handle_kernel_info_reply(client.py)', '125': 'HBChannel(channels.py)', '104': 'wait_for_ready(client.py)', '102': 'hb_channel(client.py)', '196': '_make_url(connect.py)', '90': 'AsyncKernelClient(client.py)', '91': 'reqrep(client.py)', '105': 'wrapped(client.py)', '80': 'ZMQSocketChannel(channels.py)', '154': 'control_channel(client.py)', '723': 'ioloop(threaded.py)', '160': 'hb_channel(client.py)', '171': 'stdin_channel(client.py)', '164': 'iopub_channel(client.py)', '168': 'shell_channel(client.py)', '328': 'interrupt_kernel(manager.py)', '740': 'send_interrupt(win_interrupt.py)', '334': '__del__(manager.py)', '200': 'cleanup_connection_file(connect.py)', '291': 'start(kernelspecapp.py)', '293': 'start(kernelspecapp.py)', '294': 'path_key(kernelspecapp.py)', '735': 'start(threaded.py)', '720': 'start(threaded.py)', '141': 'start(channelsabc.py)', '432': 'start(restarter.py)', '288': 'start(kernelspecapp.py)', '89': 'start(channels.py)', '115': 'start(channels.py)', '290': 'start(kernelspecapp.py)', '438': 'parse_command_line(runapp.py)', '218': 'build_kernel_argv(consoleapp.py)', '308': '_only_once(localinterfaces.py)', '317': 'wrapped(localinterfaces.py)', '47': 'V4toV5(adapter.py)', '46': 'Adapter(adapter.py)', '77': 'object_info_request(adapter.py)', '52': 'extract_oname_v4(adapter.py)', '70': 'complete_request(adapter.py)', '75': 'kernel_info_reply(adapter.py)', '49': '_version_str_to_list(adapter.py)', '48': 'V5toV4(adapter.py)', '53': '__call__(adapter.py)', '54': 'handle_reply_status_error(adapter.py)', '57': 'update_msg_type(adapter.py)', '56': 'update_metadata(adapter.py)', '55': 'update_header(adapter.py)', '247': 'initialize(kernelapp.py)', '246': '_record_started(kernelapp.py)', '585': 'config(test_kernelmanager.py)', '262': 'install_native_kernel_spec(kernelspec.py)', '276': 'install_native_kernel_spec(kernelspec.py)', '265': 'to_json(kernelspec.py)', '264': 'to_dict(kernelspec.py)', '449': 'test_msg2obj(session.py)', '440': 'Message(session.py)', '453': '__init__(session.py)', '470': '_signature_scheme_changed(session.py)', '465': '_new_auth(session.py)', '463': '_key_default(session.py)', '447': 'new_id_bytes(session.py)', '462': '_key_changed(session.py)', '443': 'default_secure(session.py)', '469': '_session_default(session.py)', '446': 'new_id(session.py)', '412': 'is_alive(multikernelmanager.py)', '420': 'shutdown_all(multikernelmanager.py)', '413': 'list_kernel_ids(multikernelmanager.py)', '721': 'stop(threaded.py)', '140': 'is_alive(channelsabc.py)', '732': 'is_alive(threaded.py)', '112': 'is_alive(channels.py)', '86': 'is_alive(channels.py)', '724': 'start_channels(threaded.py)', '722': '_check_kernel_info_reply(threaded.py)', '716': '__init__(threaded.py)', '387': 'shutdown_kernel(multikernelmanager.py)', '416': 'remove_kernel(multikernelmanager.py)', '713': 'IOLoopThread(threaded.py)', '714': 'ThreadedKernelClient(threaded.py)', '715': 'ThreadedZMQSocketChannel(threaded.py)', '731': 'flush(threaded.py)', '727': '_flush(threaded.py)', '386': 'shutdown_all(multikernelmanager.py)', '418': 'request_shutdown(multikernelmanager.py)', '402': 'cleanup_resources(multikernelmanager.py)', '408': 'finish_shutdown(multikernelmanager.py)', '393': '__len__(multikernelmanager.py)', '421': 'shutdown_kernel(multikernelmanager.py)'}}, {'key': 60, 'parent': 2627, 'tfidf_word': 'EP: 60, Name: _session_default &rarr; Session', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2626, 'parent': 2627, 'tfidf_word': 'close kernel launch ', 'tfidf_method': 'launch_kernel close close close ', 'lda_word': ' close,kernel,launch,', 'lda_method': ' close,launch_kernel,', 'lsi_word': ' close,kernel,launch,', 'lsi_method': ' launch_kernel,close,', 'spm_method': ' ', 'text_summary': '', 'files_count': 3, 'files': ['launcher.py', 'channels.py', 'threaded.py'], 'execution_path_count': 3, 'function_id_to_name_file': {'298': 'launch_kernel(launcher.py)', '109': 'close(channels.py)', '730': 'close(threaded.py)', '83': 'close(channels.py)'}}, {'key': 35, 'parent': 2642, 'tfidf_word': 'EP: 35, Name: launch_kernel &rarr; close', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2641, 'parent': 2642, 'tfidf_word': 'interrupt handler handle event create close call attributes stop stream ', 'tfidf_method': 'launch_kernel __init__ is_alive stop close __init__ InvalidPortNumber is_alive SECURITY_ATTRIBUTES __init__ ', 'lda_word': ' init,alive,number,beating,invalid,', 'lda_method': ' stop,close,init,is_beating,is_alive,', 'lsi_word': ' init,handler,recv,handle,call,', 'lsi_method': ' init,handle_recv,setup_stream,call_handlers,invalidportnumber,', 'spm_method': ' ', 'text_summary': '', 'files_count': 11, 'files': ['launcher.py', 'win_interrupt.py', 'consoleapp.py', 'signalkernel.py', 'kernelspec.py', 'channels.py', 'multikernelmanager.py', 'threaded.py', 'session.py', 'managerabc.py', 'channelsabc.py'], 'execution_path_count': 16, 'function_id_to_name_file': {'298': 'launch_kernel(launcher.py)', '739': 'create_interrupt_event(win_interrupt.py)', '741': 'SECURITY_ATTRIBUTES(win_interrupt.py)', '215': '__init__(consoleapp.py)', '509': '__init__(signalkernel.py)', '278': '__init__(kernelspec.py)', '127': '__init__(channels.py)', '126': 'InvalidPortNumber(channels.py)', '107': '__init__(channels.py)', '81': '__init__(channels.py)', '392': '__init__(multikernelmanager.py)', '726': '__init__(threaded.py)', '737': 'setup_stream(threaded.py)', '728': '_handle_recv(threaded.py)', '729': 'call_handlers(threaded.py)', '716': '__init__(threaded.py)', '453': '__init__(session.py)', '136': 'stop(channels.py)', '132': 'close(channels.py)', '133': 'is_beating(channels.py)', '412': 'is_alive(multikernelmanager.py)', '373': 'is_alive(managerabc.py)', '140': 'is_alive(channelsabc.py)', '112': 'is_alive(channels.py)', '732': 'is_alive(threaded.py)'}}, {'key': 0, 'parent': 2645, 'tfidf_word': 'EP: 0, Name: run &rarr; call_handlers', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 6, 'parent': 2645, 'tfidf_word': 'EP: 6, Name: run &rarr; _poll &rarr; time_to_dead', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2616, 'parent': 2621, 'tfidf_word': 'signal date clone subclass raw flush native name permission code ', 'tfidf_method': 'test_complete_request test_display_data test_execute_reply test_execute_request test_input_request test_kernel_info_reply test_no_adapt test_object_info_reply clone reqrep ', 'lda_word': ' close,handle,test,channel,url,', 'lda_method': ' session,make_url,check_reply,ioloop,send,', 'lsi_word': ' test,kernel,adapt,session,reply,', 'lsi_method': ' start,setup,path_key,start_channels,env,', 'spm_method': ' ', 'text_summary': "Turn a multiline code block and cursor position into a single line. return ip for localhost (almost always 127.0.0.1)   Ensure that a sequence of kernel startups doesn't break anything. Pass a message to the ZMQ socket to send. Return a list of the kernel ids of the active kernels. Ensure that a sequence of kernel startups doesn't break anything. find a connection file, and return its absolute path. return ip for localhost (almost always 127.0.0.1)      find a connection file, and return its absolute path. For tests, create a file to indicate that we've started. test load_connection_file() after. handle kernel info reply. Get the hb channel object for this kernel. Send a raw message via ident path. test tracking messages. Immediately processes all pending messages on this channel. Reimplement token-finding logic from IPython 2.x javascript Turn a multiline code block and cursor position into a single line. Interrupts the kernel by sending it a signal. Get a message from the shell channel. This is run in the ioloop thread when the kernel info reply is received. default function for packing datetime objects in JSON. Start the polling of the kernel. Send a shutdown request via control channel. Get a message from the iopub channel. test that messages receive unique ids.", 'files_count': 32, 'files': ['threaded.py', 'managerabc.py', 'test_session.py', 'test_adapter.py', 'test_connect.py', 'connect.py', 'forward.py', 'test_manager.py', 'kernelspec.py', 'channels.py', 'test_jsonutil.py', 'session.py', 'jsonutil.py', 'test_kernelmanager.py', 'utils.py', 'test_kernelspec.py', 'signalkernel.py', 'test_multikernelmanager.py', 'localinterfaces.py', 'adapter.py', 'client.py', 'test_kernelapp.py', 'test_client.py', 'manager.py', 'win_interrupt.py', 'kernelspecapp.py', 'channelsabc.py', 'restarter.py', 'runapp.py', 'consoleapp.py', 'kernelapp.py', 'multikernelmanager.py'], 'execution_path_count': 203, 'function_id_to_name_file': {'725': 'stop_channels(threaded.py)', '373': 'is_alive(managerabc.py)', '684': 'test_bad_unpack(test_session.py)', '676': '_bad_unpacker(test_session.py)', '536': 'test_complete_request(test_adapter.py)', '517': 'adapt(test_adapter.py)', '562': 'test_find_connection_file_local(test_connect.py)', '189': 'find_connection_file(connect.py)', '492': 'handle(forward.py)', '730': 'close(threaded.py)', '493': 'SubHander(forward.py)', '490': 'Handler(forward.py)', '635': 'test_connection_file_real_path(test_manager.py)', '253': 'KernelSpec(kernelspec.py)', '718': 'close(threaded.py)', '132': 'close(channels.py)', '114': 'send(channels.py)', '88': 'send(channels.py)', '83': 'close(channels.py)', '109': 'close(channels.py)', '575': 'test_date_default(test_jsonutil.py)', '450': 'utcnow(session.py)', '241': 'date_default(jsonutil.py)', '240': '_ensure_tzinfo(jsonutil.py)', '597': 'test_subclasses(test_kernelmanager.py)', '703': 'AsyncKernelManagerWithCleanup(utils.py)', '595': 'test_signal_kernel_subprocesses(test_kernelmanager.py)', '598': 'execute(test_kernelmanager.py)', '702': 'AsyncKernelManagerSubclass(utils.py)', '611': 'test_start_parallel_process_kernels(test_kernelmanager.py)', '591': 'transport(test_kernelmanager.py)', '606': 'test_templated_kspec_env(test_kernelmanager.py)', '599': '_env_test_body(test_kernelmanager.py)', '607': 'execute(test_kernelmanager.py)', '612': 'test_start_parallel_thread_kernels(test_kernelmanager.py)', '604': 'test_signal_kernel_subprocesses(test_kernelmanager.py)', '608': 'execute(test_kernelmanager.py)', '586': 'env(test_kernelmanager.py)', '712': 'stop(utils.py)', '711': 'start(utils.py)', '705': 'test_env(utils.py)', '630': 'test_validate_kernel_name(test_kernelspec.py)', '257': '_is_valid_kernel_name(kernelspec.py)', '506': 'SignalTestApp(signalkernel.py)', '507': 'SignalTestKernel(signalkernel.py)', '627': 'test_remove_kernel_spec(test_kernelspec.py)', '617': '_install_sample_kernel(test_kernelspec.py)', '626': 'test_kernel_spec_priority(test_kernelspec.py)', '651': 'test_tcp_cinfo(test_multikernelmanager.py)', '640': '_run_cinfo(test_multikernelmanager.py)', '621': 'test_find_all_specs(test_kernelspec.py)', '622': 'test_find_kernel_specs(test_kernelspec.py)', '623': 'test_get_kernel_spec(test_kernelspec.py)', '619': 'tearDown(test_kernelspec.py)', '618': 'setUp(test_kernelspec.py)', '649': 'test_start_sequence_ipc_kernels(test_multikernelmanager.py)', '641': '_run_lifecycle(test_multikernelmanager.py)', '650': 'test_start_sequence_tcp_kernels(test_multikernelmanager.py)', '644': 'test_ipc_cinfo(test_multikernelmanager.py)', '315': 'localhost(localinterfaces.py)', '645': 'test_ipc_lifecycle(test_multikernelmanager.py)', '665': 'test_start_sequence_tcp_kernels(test_multikernelmanager.py)', '657': '_run_lifecycle(test_multikernelmanager.py)', '664': 'test_start_sequence_ipc_kernels(test_multikernelmanager.py)', '659': 'test_ipc_cinfo(test_multikernelmanager.py)', '656': '_run_cinfo(test_multikernelmanager.py)', '660': 'test_ipc_lifecycle(test_multikernelmanager.py)', '666': 'test_tcp_cinfo(test_multikernelmanager.py)', '668': 'test_tcp_lifecycle_with_kernel_id(test_multikernelmanager.py)', '569': 'test_secure_write(test_connect.py)', '573': 'check_user_only_permissions(test_connect.py)', '574': 'fetch_win32_permissions(test_connect.py)', '563': 'test_find_connection_file_relative(test_connect.py)', '561': 'test_find_connection_file_abspath(test_connect.py)', '560': 'test_find_connection_file(test_connect.py)', '565': 'test_load_connection_file_session_with_kn(test_connect.py)', '441': 'Session(session.py)', '539': 'test_input_request(test_adapter.py)', '564': 'test_load_connection_file_session(test_connect.py)', '537': 'test_display_data(test_adapter.py)', '540': 'test_inspect_reply(test_adapter.py)', '543': 'test_kernel_info_reply(test_adapter.py)', '542': 'test_inspect_request_token(test_adapter.py)', '535': 'test_complete_reply(test_adapter.py)', '541': 'test_inspect_request(test_adapter.py)', '538': 'test_execute_request(test_adapter.py)', '545': 'test_rename_type(test_adapter.py)', '544': 'test_no_adapt(test_adapter.py)', '546': 'test_same_version(test_adapter.py)', '514': 'V5toV4TestCase(test_adapter.py)', '512': 'AdapterTest(test_adapter.py)', '526': 'test_input_request(test_adapter.py)', '523': 'test_display_data(test_adapter.py)', '527': 'test_kernel_info_reply(test_adapter.py)', '530': 'test_object_info_reply_not_found(test_adapter.py)', '529': 'test_object_info_reply(test_adapter.py)', '531': 'test_object_info_request(test_adapter.py)', '521': 'test_complete_reply(test_adapter.py)', '522': 'test_complete_request(test_adapter.py)', '524': 'test_execute_reply(test_adapter.py)', '532': 'test_rename_type(test_adapter.py)', '525': 'test_execute_request(test_adapter.py)', '528': 'test_no_adapt(test_adapter.py)', '533': 'test_same_version(test_adapter.py)', '513': 'V4toV5TestCase(test_adapter.py)', '519': 'setUp(test_adapter.py)', '516': 'test_default_version(test_adapter.py)', '515': 'test_code_to_line_no_code(test_adapter.py)', '51': 'code_to_line(adapter.py)', '704': 'execute(utils.py)', '158': 'get_shell_msg(client.py)', '615': 'execute(test_kernelmanager.py)', '157': 'get_iopub_msg(client.py)', '710': '__exit__(utils.py)', '709': '__enter__(utils.py)', '580': 'test_kernelapp_lifecycle(test_kernelapp.py)', '579': '_launch(test_kernelapp.py)', '686': 'test_clone(test_session.py)', '473': 'clone(session.py)', '695': 'test_send_raw(test_session.py)', '481': 'send_raw(session.py)', '483': 'sign(session.py)', '689': 'test_datetimes_msgpack(test_session.py)', '475': 'feed_identities(session.py)', '690': 'test_datetimes_pickle(test_session.py)', '688': 'test_datetimes(test_session.py)', '683': 'test_bad_roundtrip(test_session.py)', '685': 'test_bad_unpacker(test_session.py)', '682': 'test_bad_packer(test_session.py)', '681': 'test_bad_pack(test_session.py)', '675': '_bad_packer(test_session.py)', '687': 'test_cull_digest_history(test_session.py)', '700': 'test_zero_digest_history(test_session.py)', '697': 'test_session_id(test_session.py)', '699': 'test_unique_msg_ids(test_session.py)', '445': 'msg_header(session.py)', '698': 'test_tracking(test_session.py)', '680': 'test_args(test_session.py)', '694': 'test_send(test_session.py)', '478': 'msg_id(session.py)', '696': 'test_serialize(test_session.py)', '674': 'TestSession(test_session.py)', '673': 'SessionTestCase(test_session.py)', '678': 'setUp(test_session.py)', '556': 'test_shutdown(test_client.py)', '548': '_check_reply(test_client.py)', '550': 'test_comm_info(test_client.py)', '555': 'test_kernel_info(test_client.py)', '551': 'test_complete(test_client.py)', '554': 'test_inspect(test_client.py)', '553': 'test_history(test_client.py)', '549': 'setUp(test_client.py)', '255': 'NoSuchKernel(kernelspec.py)', '116': 'BlockingKernelClient(client.py)', '117': 'reqrep(client.py)', '124': 'wrapped(client.py)', '123': 'wait_for_ready(client.py)', '150': '_handle_kernel_info_reply(client.py)', '125': 'HBChannel(channels.py)', '104': 'wait_for_ready(client.py)', '102': 'hb_channel(client.py)', '196': '_make_url(connect.py)', '90': 'AsyncKernelClient(client.py)', '91': 'reqrep(client.py)', '105': 'wrapped(client.py)', '80': 'ZMQSocketChannel(channels.py)', '154': 'control_channel(client.py)', '723': 'ioloop(threaded.py)', '160': 'hb_channel(client.py)', '171': 'stdin_channel(client.py)', '164': 'iopub_channel(client.py)', '168': 'shell_channel(client.py)', '328': 'interrupt_kernel(manager.py)', '740': 'send_interrupt(win_interrupt.py)', '334': '__del__(manager.py)', '200': 'cleanup_connection_file(connect.py)', '291': 'start(kernelspecapp.py)', '293': 'start(kernelspecapp.py)', '294': 'path_key(kernelspecapp.py)', '735': 'start(threaded.py)', '720': 'start(threaded.py)', '141': 'start(channelsabc.py)', '432': 'start(restarter.py)', '288': 'start(kernelspecapp.py)', '89': 'start(channels.py)', '115': 'start(channels.py)', '290': 'start(kernelspecapp.py)', '438': 'parse_command_line(runapp.py)', '218': 'build_kernel_argv(consoleapp.py)', '308': '_only_once(localinterfaces.py)', '317': 'wrapped(localinterfaces.py)', '47': 'V4toV5(adapter.py)', '46': 'Adapter(adapter.py)', '77': 'object_info_request(adapter.py)', '52': 'extract_oname_v4(adapter.py)', '70': 'complete_request(adapter.py)', '75': 'kernel_info_reply(adapter.py)', '49': '_version_str_to_list(adapter.py)', '48': 'V5toV4(adapter.py)', '53': '__call__(adapter.py)', '54': 'handle_reply_status_error(adapter.py)', '57': 'update_msg_type(adapter.py)', '56': 'update_metadata(adapter.py)', '55': 'update_header(adapter.py)', '247': 'initialize(kernelapp.py)', '246': '_record_started(kernelapp.py)', '585': 'config(test_kernelmanager.py)', '262': 'install_native_kernel_spec(kernelspec.py)', '276': 'install_native_kernel_spec(kernelspec.py)', '265': 'to_json(kernelspec.py)', '264': 'to_dict(kernelspec.py)', '449': 'test_msg2obj(session.py)', '440': 'Message(session.py)', '453': '__init__(session.py)', '470': '_signature_scheme_changed(session.py)', '465': '_new_auth(session.py)', '463': '_key_default(session.py)', '447': 'new_id_bytes(session.py)', '462': '_key_changed(session.py)', '443': 'default_secure(session.py)', '469': '_session_default(session.py)', '446': 'new_id(session.py)', '412': 'is_alive(multikernelmanager.py)', '420': 'shutdown_all(multikernelmanager.py)', '413': 'list_kernel_ids(multikernelmanager.py)', '721': 'stop(threaded.py)', '140': 'is_alive(channelsabc.py)', '732': 'is_alive(threaded.py)', '112': 'is_alive(channels.py)', '86': 'is_alive(channels.py)', '724': 'start_channels(threaded.py)', '722': '_check_kernel_info_reply(threaded.py)', '716': '__init__(threaded.py)', '387': 'shutdown_kernel(multikernelmanager.py)', '416': 'remove_kernel(multikernelmanager.py)', '713': 'IOLoopThread(threaded.py)', '714': 'ThreadedKernelClient(threaded.py)', '715': 'ThreadedZMQSocketChannel(threaded.py)', '731': 'flush(threaded.py)', '727': '_flush(threaded.py)', '386': 'shutdown_all(multikernelmanager.py)', '418': 'request_shutdown(multikernelmanager.py)', '402': 'cleanup_resources(multikernelmanager.py)'}}, {'key': 2620, 'parent': 2621, 'tfidf_word': 'remove shutdown finish id len list request kernel ', 'tfidf_method': 'shutdown_all remove_kernel __len__ finish_shutdown list_kernel_ids request_shutdown shutdown_kernel ', 'lda_word': ' kernel,len,list,shutdown,remove,', 'lda_method': ' len,list_kernel_ids,shutdown_all,remove_kernel,request_shutdown,', 'lsi_word': ' shutdown,kernel,remove,finish,request,', 'lsi_method': ' shutdown_all,remove_kernel,request_shutdown,finish_shutdown,shutdown_kernel,', 'spm_method': ' ', 'text_summary': 'Shutdown all kernels.', 'files_count': 1, 'files': ['multikernelmanager.py'], 'execution_path_count': 5, 'function_id_to_name_file': {'420': 'shutdown_all(multikernelmanager.py)', '408': 'finish_shutdown(multikernelmanager.py)', '416': 'remove_kernel(multikernelmanager.py)', '418': 'request_shutdown(multikernelmanager.py)', '393': '__len__(multikernelmanager.py)', '413': 'list_kernel_ids(multikernelmanager.py)', '421': 'shutdown_kernel(multikernelmanager.py)'}}, {'key': 39, 'parent': 2626, 'tfidf_word': 'EP: 39, Name: launch_kernel &rarr; close', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2625, 'parent': 2626, 'tfidf_word': 'close kernel launch ', 'tfidf_method': 'launch_kernel close close ', 'lda_word': ' close,launch,kernel,', 'lda_method': ' close,launch_kernel,', 'lsi_word': ' kernel,launch,close,', 'lsi_method': ' launch_kernel,close,', 'spm_method': ' ', 'text_summary': '', 'files_count': 3, 'files': ['launcher.py', 'threaded.py', 'channels.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'298': 'launch_kernel(launcher.py)', '730': 'close(threaded.py)', '83': 'close(channels.py)'}}, {'key': 34, 'parent': 2641, 'tfidf_word': 'EP: 34, Name: launch_kernel &rarr; create_interrupt_event &rarr; SECURITY_ATTRIBUTES', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2640, 'parent': 2641, 'tfidf_word': 'close handle handler invalid number port recv setup stop stream ', 'tfidf_method': 'setup_stream __init__ is_alive stop close __init__ InvalidPortNumber is_alive __init__ __init__ ', 'lda_word': ' init,alive,beating,close,stop,', 'lda_method': ' is_beating,is_alive,init,close,stop,', 'lsi_word': ' init,call,recv,stream,setup,', 'lsi_method': ' init,setup_stream,handle_recv,call_handlers,invalidportnumber,', 'spm_method': ' ', 'text_summary': 'Stop the kernel polling.', 'files_count': 9, 'files': ['consoleapp.py', 'signalkernel.py', 'kernelspec.py', 'channels.py', 'multikernelmanager.py', 'threaded.py', 'session.py', 'managerabc.py', 'channelsabc.py'], 'execution_path_count': 15, 'function_id_to_name_file': {'215': '__init__(consoleapp.py)', '509': '__init__(signalkernel.py)', '278': '__init__(kernelspec.py)', '127': '__init__(channels.py)', '126': 'InvalidPortNumber(channels.py)', '107': '__init__(channels.py)', '81': '__init__(channels.py)', '392': '__init__(multikernelmanager.py)', '726': '__init__(threaded.py)', '737': 'setup_stream(threaded.py)', '728': '_handle_recv(threaded.py)', '729': 'call_handlers(threaded.py)', '716': '__init__(threaded.py)', '453': '__init__(session.py)', '136': 'stop(channels.py)', '132': 'close(channels.py)', '133': 'is_beating(channels.py)', '412': 'is_alive(multikernelmanager.py)', '373': 'is_alive(managerabc.py)', '140': 'is_alive(channelsabc.py)', '112': 'is_alive(channels.py)', '732': 'is_alive(threaded.py)'}}, {'key': 2613, 'parent': 2616, 'tfidf_word': 'signal interrupt clone raw date subclass name native permission code ', 'tfidf_method': 'test_complete_request test_display_data test_execute_reply test_execute_request test_input_request test_kernel_info_reply test_no_adapt test_object_info_reply test_find_connection_file_abspath reqrep ', 'lda_word': ' start,test,run,lifecycle,kernel,', 'lda_method': ' adapt,session,setup,find_connection_file,install_sample_kernel,', 'lsi_word': ' test,kernel,adapt,session,reply,', 'lsi_method': ' start,setup,path_key,env,enter,', 'spm_method': ' ', 'text_summary': "default function for packing datetime objects in JSON. test tracking messages. Get a message from the iopub channel. Send a raw message via ident path. Turn a multiline code block and cursor position into a single line. find a connection file, and return its absolute path. return ip for localhost (almost always 127.0.0.1)      find a connection file, and return its absolute path. return ip for localhost (almost always 127.0.0.1)   Ensure that a sequence of kernel startups doesn't break anything. Start the polling of the kernel. Pass a message to the ZMQ socket to send. Reimplement token-finding logic from IPython 2.x javascript Turn a multiline code block and cursor position into a single line. For tests, create a file to indicate that we've started. Interrupts the kernel by sending it a signal. test load_connection_file() after. Get the hb channel object for this kernel. Ensure that a sequence of kernel startups doesn't break anything. Get a message from the shell channel.", 'files_count': 31, 'files': ['threaded.py', 'managerabc.py', 'test_session.py', 'test_adapter.py', 'test_connect.py', 'connect.py', 'forward.py', 'test_manager.py', 'kernelspec.py', 'channels.py', 'test_jsonutil.py', 'session.py', 'jsonutil.py', 'test_kernelmanager.py', 'utils.py', 'test_kernelspec.py', 'signalkernel.py', 'test_multikernelmanager.py', 'localinterfaces.py', 'adapter.py', 'client.py', 'test_kernelapp.py', 'test_client.py', 'manager.py', 'win_interrupt.py', 'kernelspecapp.py', 'channelsabc.py', 'restarter.py', 'runapp.py', 'consoleapp.py', 'kernelapp.py'], 'execution_path_count': 183, 'function_id_to_name_file': {'725': 'stop_channels(threaded.py)', '373': 'is_alive(managerabc.py)', '684': 'test_bad_unpack(test_session.py)', '676': '_bad_unpacker(test_session.py)', '536': 'test_complete_request(test_adapter.py)', '517': 'adapt(test_adapter.py)', '562': 'test_find_connection_file_local(test_connect.py)', '189': 'find_connection_file(connect.py)', '492': 'handle(forward.py)', '730': 'close(threaded.py)', '493': 'SubHander(forward.py)', '490': 'Handler(forward.py)', '635': 'test_connection_file_real_path(test_manager.py)', '253': 'KernelSpec(kernelspec.py)', '718': 'close(threaded.py)', '132': 'close(channels.py)', '114': 'send(channels.py)', '88': 'send(channels.py)', '83': 'close(channels.py)', '109': 'close(channels.py)', '575': 'test_date_default(test_jsonutil.py)', '450': 'utcnow(session.py)', '241': 'date_default(jsonutil.py)', '240': '_ensure_tzinfo(jsonutil.py)', '597': 'test_subclasses(test_kernelmanager.py)', '703': 'AsyncKernelManagerWithCleanup(utils.py)', '595': 'test_signal_kernel_subprocesses(test_kernelmanager.py)', '598': 'execute(test_kernelmanager.py)', '702': 'AsyncKernelManagerSubclass(utils.py)', '611': 'test_start_parallel_process_kernels(test_kernelmanager.py)', '591': 'transport(test_kernelmanager.py)', '606': 'test_templated_kspec_env(test_kernelmanager.py)', '599': '_env_test_body(test_kernelmanager.py)', '607': 'execute(test_kernelmanager.py)', '612': 'test_start_parallel_thread_kernels(test_kernelmanager.py)', '604': 'test_signal_kernel_subprocesses(test_kernelmanager.py)', '608': 'execute(test_kernelmanager.py)', '586': 'env(test_kernelmanager.py)', '712': 'stop(utils.py)', '711': 'start(utils.py)', '705': 'test_env(utils.py)', '630': 'test_validate_kernel_name(test_kernelspec.py)', '257': '_is_valid_kernel_name(kernelspec.py)', '506': 'SignalTestApp(signalkernel.py)', '507': 'SignalTestKernel(signalkernel.py)', '627': 'test_remove_kernel_spec(test_kernelspec.py)', '617': '_install_sample_kernel(test_kernelspec.py)', '626': 'test_kernel_spec_priority(test_kernelspec.py)', '651': 'test_tcp_cinfo(test_multikernelmanager.py)', '640': '_run_cinfo(test_multikernelmanager.py)', '621': 'test_find_all_specs(test_kernelspec.py)', '622': 'test_find_kernel_specs(test_kernelspec.py)', '623': 'test_get_kernel_spec(test_kernelspec.py)', '619': 'tearDown(test_kernelspec.py)', '618': 'setUp(test_kernelspec.py)', '649': 'test_start_sequence_ipc_kernels(test_multikernelmanager.py)', '641': '_run_lifecycle(test_multikernelmanager.py)', '650': 'test_start_sequence_tcp_kernels(test_multikernelmanager.py)', '644': 'test_ipc_cinfo(test_multikernelmanager.py)', '315': 'localhost(localinterfaces.py)', '645': 'test_ipc_lifecycle(test_multikernelmanager.py)', '665': 'test_start_sequence_tcp_kernels(test_multikernelmanager.py)', '657': '_run_lifecycle(test_multikernelmanager.py)', '664': 'test_start_sequence_ipc_kernels(test_multikernelmanager.py)', '659': 'test_ipc_cinfo(test_multikernelmanager.py)', '656': '_run_cinfo(test_multikernelmanager.py)', '660': 'test_ipc_lifecycle(test_multikernelmanager.py)', '666': 'test_tcp_cinfo(test_multikernelmanager.py)', '668': 'test_tcp_lifecycle_with_kernel_id(test_multikernelmanager.py)', '569': 'test_secure_write(test_connect.py)', '573': 'check_user_only_permissions(test_connect.py)', '574': 'fetch_win32_permissions(test_connect.py)', '563': 'test_find_connection_file_relative(test_connect.py)', '561': 'test_find_connection_file_abspath(test_connect.py)', '560': 'test_find_connection_file(test_connect.py)', '565': 'test_load_connection_file_session_with_kn(test_connect.py)', '441': 'Session(session.py)', '539': 'test_input_request(test_adapter.py)', '564': 'test_load_connection_file_session(test_connect.py)', '537': 'test_display_data(test_adapter.py)', '540': 'test_inspect_reply(test_adapter.py)', '543': 'test_kernel_info_reply(test_adapter.py)', '542': 'test_inspect_request_token(test_adapter.py)', '535': 'test_complete_reply(test_adapter.py)', '541': 'test_inspect_request(test_adapter.py)', '538': 'test_execute_request(test_adapter.py)', '545': 'test_rename_type(test_adapter.py)', '544': 'test_no_adapt(test_adapter.py)', '546': 'test_same_version(test_adapter.py)', '514': 'V5toV4TestCase(test_adapter.py)', '512': 'AdapterTest(test_adapter.py)', '526': 'test_input_request(test_adapter.py)', '523': 'test_display_data(test_adapter.py)', '527': 'test_kernel_info_reply(test_adapter.py)', '530': 'test_object_info_reply_not_found(test_adapter.py)', '529': 'test_object_info_reply(test_adapter.py)', '531': 'test_object_info_request(test_adapter.py)', '521': 'test_complete_reply(test_adapter.py)', '522': 'test_complete_request(test_adapter.py)', '524': 'test_execute_reply(test_adapter.py)', '532': 'test_rename_type(test_adapter.py)', '525': 'test_execute_request(test_adapter.py)', '528': 'test_no_adapt(test_adapter.py)', '533': 'test_same_version(test_adapter.py)', '513': 'V4toV5TestCase(test_adapter.py)', '519': 'setUp(test_adapter.py)', '516': 'test_default_version(test_adapter.py)', '515': 'test_code_to_line_no_code(test_adapter.py)', '51': 'code_to_line(adapter.py)', '704': 'execute(utils.py)', '158': 'get_shell_msg(client.py)', '615': 'execute(test_kernelmanager.py)', '157': 'get_iopub_msg(client.py)', '710': '__exit__(utils.py)', '709': '__enter__(utils.py)', '580': 'test_kernelapp_lifecycle(test_kernelapp.py)', '579': '_launch(test_kernelapp.py)', '686': 'test_clone(test_session.py)', '473': 'clone(session.py)', '695': 'test_send_raw(test_session.py)', '481': 'send_raw(session.py)', '483': 'sign(session.py)', '689': 'test_datetimes_msgpack(test_session.py)', '475': 'feed_identities(session.py)', '690': 'test_datetimes_pickle(test_session.py)', '688': 'test_datetimes(test_session.py)', '683': 'test_bad_roundtrip(test_session.py)', '685': 'test_bad_unpacker(test_session.py)', '682': 'test_bad_packer(test_session.py)', '681': 'test_bad_pack(test_session.py)', '675': '_bad_packer(test_session.py)', '687': 'test_cull_digest_history(test_session.py)', '700': 'test_zero_digest_history(test_session.py)', '697': 'test_session_id(test_session.py)', '699': 'test_unique_msg_ids(test_session.py)', '445': 'msg_header(session.py)', '698': 'test_tracking(test_session.py)', '680': 'test_args(test_session.py)', '694': 'test_send(test_session.py)', '478': 'msg_id(session.py)', '696': 'test_serialize(test_session.py)', '674': 'TestSession(test_session.py)', '673': 'SessionTestCase(test_session.py)', '678': 'setUp(test_session.py)', '556': 'test_shutdown(test_client.py)', '548': '_check_reply(test_client.py)', '550': 'test_comm_info(test_client.py)', '555': 'test_kernel_info(test_client.py)', '551': 'test_complete(test_client.py)', '554': 'test_inspect(test_client.py)', '553': 'test_history(test_client.py)', '549': 'setUp(test_client.py)', '255': 'NoSuchKernel(kernelspec.py)', '116': 'BlockingKernelClient(client.py)', '117': 'reqrep(client.py)', '124': 'wrapped(client.py)', '123': 'wait_for_ready(client.py)', '150': '_handle_kernel_info_reply(client.py)', '125': 'HBChannel(channels.py)', '104': 'wait_for_ready(client.py)', '102': 'hb_channel(client.py)', '196': '_make_url(connect.py)', '90': 'AsyncKernelClient(client.py)', '91': 'reqrep(client.py)', '105': 'wrapped(client.py)', '80': 'ZMQSocketChannel(channels.py)', '154': 'control_channel(client.py)', '723': 'ioloop(threaded.py)', '160': 'hb_channel(client.py)', '171': 'stdin_channel(client.py)', '164': 'iopub_channel(client.py)', '168': 'shell_channel(client.py)', '328': 'interrupt_kernel(manager.py)', '740': 'send_interrupt(win_interrupt.py)', '334': '__del__(manager.py)', '200': 'cleanup_connection_file(connect.py)', '291': 'start(kernelspecapp.py)', '293': 'start(kernelspecapp.py)', '294': 'path_key(kernelspecapp.py)', '735': 'start(threaded.py)', '720': 'start(threaded.py)', '141': 'start(channelsabc.py)', '432': 'start(restarter.py)', '288': 'start(kernelspecapp.py)', '89': 'start(channels.py)', '115': 'start(channels.py)', '290': 'start(kernelspecapp.py)', '438': 'parse_command_line(runapp.py)', '218': 'build_kernel_argv(consoleapp.py)', '308': '_only_once(localinterfaces.py)', '317': 'wrapped(localinterfaces.py)', '47': 'V4toV5(adapter.py)', '46': 'Adapter(adapter.py)', '77': 'object_info_request(adapter.py)', '52': 'extract_oname_v4(adapter.py)', '70': 'complete_request(adapter.py)', '75': 'kernel_info_reply(adapter.py)', '49': '_version_str_to_list(adapter.py)', '48': 'V5toV4(adapter.py)', '53': '__call__(adapter.py)', '54': 'handle_reply_status_error(adapter.py)', '57': 'update_msg_type(adapter.py)', '56': 'update_metadata(adapter.py)', '55': 'update_header(adapter.py)', '247': 'initialize(kernelapp.py)', '246': '_record_started(kernelapp.py)', '585': 'config(test_kernelmanager.py)', '262': 'install_native_kernel_spec(kernelspec.py)', '276': 'install_native_kernel_spec(kernelspec.py)', '265': 'to_json(kernelspec.py)', '264': 'to_dict(kernelspec.py)', '449': 'test_msg2obj(session.py)', '440': 'Message(session.py)', '453': '__init__(session.py)', '470': '_signature_scheme_changed(session.py)', '465': '_new_auth(session.py)', '463': '_key_default(session.py)', '447': 'new_id_bytes(session.py)', '462': '_key_changed(session.py)', '443': 'default_secure(session.py)', '469': '_session_default(session.py)', '446': 'new_id(session.py)'}}, {'key': 2615, 'parent': 2616, 'tfidf_word': 'close init cleanup shutdown stop start threaded info flush reply ', 'tfidf_method': 'shutdown_all request_shutdown is_alive cleanup_resources shutdown_kernel _handle_kernel_info_reply is_alive HBChannel ThreadedZMQSocketChannel is_alive ', 'lda_word': ' channels,stop,alive,kernel,info,', 'lda_method': ' threadedkernelclient,remove_kernel,ioloopthread,hbchannel,shutdown_kernel,', 'lsi_word': ' kernel,channels,thread,start,info,', 'lsi_method': ' stop_channels,is_alive,close,stop,start_channels,', 'spm_method': ' ', 'text_summary': 'Attempts to stop the kernel process cleanly. Start the polling of the kernel. Stop the kernel polling. handle kernel info reply. This is run in the ioloop thread when the kernel info reply is received.', 'files_count': 5, 'files': ['threaded.py', 'multikernelmanager.py', 'channelsabc.py', 'channels.py', 'client.py'], 'execution_path_count': 20, 'function_id_to_name_file': {'725': 'stop_channels(threaded.py)', '412': 'is_alive(multikernelmanager.py)', '420': 'shutdown_all(multikernelmanager.py)', '413': 'list_kernel_ids(multikernelmanager.py)', '721': 'stop(threaded.py)', '718': 'close(threaded.py)', '140': 'is_alive(channelsabc.py)', '732': 'is_alive(threaded.py)', '112': 'is_alive(channels.py)', '86': 'is_alive(channels.py)', '724': 'start_channels(threaded.py)', '722': '_check_kernel_info_reply(threaded.py)', '150': '_handle_kernel_info_reply(client.py)', '716': '__init__(threaded.py)', '387': 'shutdown_kernel(multikernelmanager.py)', '416': 'remove_kernel(multikernelmanager.py)', '713': 'IOLoopThread(threaded.py)', '720': 'start(threaded.py)', '714': 'ThreadedKernelClient(threaded.py)', '715': 'ThreadedZMQSocketChannel(threaded.py)', '125': 'HBChannel(channels.py)', '731': 'flush(threaded.py)', '727': '_flush(threaded.py)', '386': 'shutdown_all(multikernelmanager.py)', '418': 'request_shutdown(multikernelmanager.py)', '402': 'cleanup_resources(multikernelmanager.py)'}}, {'key': 76, 'parent': 2620, 'tfidf_word': 'EP: 76, Name: shutdown_all &rarr; finish_shutdown', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2619, 'parent': 2620, 'tfidf_word': 'remove id len list request kernel shutdown ', 'tfidf_method': 'remove_kernel shutdown_all __len__ list_kernel_ids request_shutdown shutdown_kernel ', 'lda_word': ' shutdown,request,kernel,remove,list,', 'lda_method': ' len,list_kernel_ids,shutdown_all,remove_kernel,shutdown_kernel,', 'lsi_word': ' kernel,shutdown,remove,request,len,', 'lsi_method': ' shutdown_all,remove_kernel,request_shutdown,shutdown_kernel,len,', 'spm_method': ' ', 'text_summary': 'Shutdown all kernels.', 'files_count': 1, 'files': ['multikernelmanager.py'], 'execution_path_count': 4, 'function_id_to_name_file': {'420': 'shutdown_all(multikernelmanager.py)', '416': 'remove_kernel(multikernelmanager.py)', '418': 'request_shutdown(multikernelmanager.py)', '393': '__len__(multikernelmanager.py)', '413': 'list_kernel_ids(multikernelmanager.py)', '421': 'shutdown_kernel(multikernelmanager.py)'}}, {'key': 37, 'parent': 2625, 'tfidf_word': 'EP: 37, Name: launch_kernel &rarr; close', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 38, 'parent': 2625, 'tfidf_word': 'EP: 38, Name: launch_kernel &rarr; close', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 33, 'parent': 2640, 'tfidf_word': 'EP: 33, Name: __init__ &rarr; __init__', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2639, 'parent': 2640, 'tfidf_word': 'close handle handler invalid number port recv setup stop stream ', 'tfidf_method': 'is_alive __init__ is_alive stop close __init__ InvalidPortNumber is_alive setup_stream __init__ ', 'lda_word': ' init,alive,beating,stop,close,', 'lda_method': ' init,is_beating,is_alive,stop,invalidportnumber,', 'lsi_word': ' init,recv,stream,setup,handler,', 'lsi_method': ' init,handle_recv,setup_stream,call_handlers,invalidportnumber,', 'spm_method': ' ', 'text_summary': 'Callback for stream.on_recv.', 'files_count': 8, 'files': ['consoleapp.py', 'kernelspec.py', 'channels.py', 'multikernelmanager.py', 'threaded.py', 'session.py', 'managerabc.py', 'channelsabc.py'], 'execution_path_count': 14, 'function_id_to_name_file': {'215': '__init__(consoleapp.py)', '278': '__init__(kernelspec.py)', '127': '__init__(channels.py)', '126': 'InvalidPortNumber(channels.py)', '107': '__init__(channels.py)', '81': '__init__(channels.py)', '392': '__init__(multikernelmanager.py)', '726': '__init__(threaded.py)', '737': 'setup_stream(threaded.py)', '728': '_handle_recv(threaded.py)', '729': 'call_handlers(threaded.py)', '716': '__init__(threaded.py)', '453': '__init__(session.py)', '136': 'stop(channels.py)', '132': 'close(channels.py)', '133': 'is_beating(channels.py)', '412': 'is_alive(multikernelmanager.py)', '373': 'is_alive(managerabc.py)', '140': 'is_alive(channelsabc.py)', '112': 'is_alive(channels.py)', '732': 'is_alive(threaded.py)'}}, {'key': 106, 'parent': 2613, 'tfidf_word': 'EP: 106, Name: stop_channels &rarr; is_alive', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2604, 'parent': 2613, 'tfidf_word': 'interrupt signal subclass date clone raw permission native name code ', 'tfidf_method': 'test_complete_request test_display_data test_execute_reply test_execute_request test_input_request test_kernel_info_reply test_no_adapt test_object_info_reply extract_oname_v4 reqrep ', 'lda_word': ' test,adapt,session,reply,request,', 'lda_method': ' adapt,session,feed_identities,test_rename_type,asynckernelclient,', 'lsi_word': ' test,kernel,adapt,session,reply,', 'lsi_method': ' start,setup,path_key,env,enter,', 'spm_method': ' ', 'text_summary': "default function for packing datetime objects in JSON. test tracking messages. Get a message from the iopub channel. Send a raw message via ident path. Turn a multiline code block and cursor position into a single line. find a connection file, and return its absolute path. return ip for localhost (almost always 127.0.0.1)      find a connection file, and return its absolute path. return ip for localhost (almost always 127.0.0.1)   Ensure that a sequence of kernel startups doesn't break anything. Start the polling of the kernel. Pass a message to the ZMQ socket to send. Reimplement token-finding logic from IPython 2.x javascript Turn a multiline code block and cursor position into a single line. For tests, create a file to indicate that we've started. Interrupts the kernel by sending it a signal. test load_connection_file() after. Get the hb channel object for this kernel. Ensure that a sequence of kernel startups doesn't break anything. Get a message from the shell channel.", 'files_count': 30, 'files': ['test_session.py', 'test_adapter.py', 'test_connect.py', 'connect.py', 'forward.py', 'threaded.py', 'test_manager.py', 'kernelspec.py', 'channels.py', 'test_jsonutil.py', 'session.py', 'jsonutil.py', 'test_kernelmanager.py', 'utils.py', 'test_kernelspec.py', 'signalkernel.py', 'test_multikernelmanager.py', 'localinterfaces.py', 'adapter.py', 'client.py', 'test_kernelapp.py', 'test_client.py', 'manager.py', 'win_interrupt.py', 'kernelspecapp.py', 'channelsabc.py', 'restarter.py', 'runapp.py', 'consoleapp.py', 'kernelapp.py'], 'execution_path_count': 182, 'function_id_to_name_file': {'684': 'test_bad_unpack(test_session.py)', '676': '_bad_unpacker(test_session.py)', '536': 'test_complete_request(test_adapter.py)', '517': 'adapt(test_adapter.py)', '562': 'test_find_connection_file_local(test_connect.py)', '189': 'find_connection_file(connect.py)', '492': 'handle(forward.py)', '730': 'close(threaded.py)', '493': 'SubHander(forward.py)', '490': 'Handler(forward.py)', '635': 'test_connection_file_real_path(test_manager.py)', '253': 'KernelSpec(kernelspec.py)', '718': 'close(threaded.py)', '132': 'close(channels.py)', '114': 'send(channels.py)', '88': 'send(channels.py)', '83': 'close(channels.py)', '109': 'close(channels.py)', '575': 'test_date_default(test_jsonutil.py)', '450': 'utcnow(session.py)', '241': 'date_default(jsonutil.py)', '240': '_ensure_tzinfo(jsonutil.py)', '597': 'test_subclasses(test_kernelmanager.py)', '703': 'AsyncKernelManagerWithCleanup(utils.py)', '595': 'test_signal_kernel_subprocesses(test_kernelmanager.py)', '598': 'execute(test_kernelmanager.py)', '702': 'AsyncKernelManagerSubclass(utils.py)', '611': 'test_start_parallel_process_kernels(test_kernelmanager.py)', '591': 'transport(test_kernelmanager.py)', '606': 'test_templated_kspec_env(test_kernelmanager.py)', '599': '_env_test_body(test_kernelmanager.py)', '607': 'execute(test_kernelmanager.py)', '612': 'test_start_parallel_thread_kernels(test_kernelmanager.py)', '604': 'test_signal_kernel_subprocesses(test_kernelmanager.py)', '608': 'execute(test_kernelmanager.py)', '586': 'env(test_kernelmanager.py)', '712': 'stop(utils.py)', '711': 'start(utils.py)', '705': 'test_env(utils.py)', '630': 'test_validate_kernel_name(test_kernelspec.py)', '257': '_is_valid_kernel_name(kernelspec.py)', '506': 'SignalTestApp(signalkernel.py)', '507': 'SignalTestKernel(signalkernel.py)', '627': 'test_remove_kernel_spec(test_kernelspec.py)', '617': '_install_sample_kernel(test_kernelspec.py)', '626': 'test_kernel_spec_priority(test_kernelspec.py)', '651': 'test_tcp_cinfo(test_multikernelmanager.py)', '640': '_run_cinfo(test_multikernelmanager.py)', '621': 'test_find_all_specs(test_kernelspec.py)', '622': 'test_find_kernel_specs(test_kernelspec.py)', '623': 'test_get_kernel_spec(test_kernelspec.py)', '619': 'tearDown(test_kernelspec.py)', '618': 'setUp(test_kernelspec.py)', '649': 'test_start_sequence_ipc_kernels(test_multikernelmanager.py)', '641': '_run_lifecycle(test_multikernelmanager.py)', '650': 'test_start_sequence_tcp_kernels(test_multikernelmanager.py)', '644': 'test_ipc_cinfo(test_multikernelmanager.py)', '315': 'localhost(localinterfaces.py)', '645': 'test_ipc_lifecycle(test_multikernelmanager.py)', '665': 'test_start_sequence_tcp_kernels(test_multikernelmanager.py)', '657': '_run_lifecycle(test_multikernelmanager.py)', '664': 'test_start_sequence_ipc_kernels(test_multikernelmanager.py)', '659': 'test_ipc_cinfo(test_multikernelmanager.py)', '656': '_run_cinfo(test_multikernelmanager.py)', '660': 'test_ipc_lifecycle(test_multikernelmanager.py)', '666': 'test_tcp_cinfo(test_multikernelmanager.py)', '668': 'test_tcp_lifecycle_with_kernel_id(test_multikernelmanager.py)', '569': 'test_secure_write(test_connect.py)', '573': 'check_user_only_permissions(test_connect.py)', '574': 'fetch_win32_permissions(test_connect.py)', '563': 'test_find_connection_file_relative(test_connect.py)', '561': 'test_find_connection_file_abspath(test_connect.py)', '560': 'test_find_connection_file(test_connect.py)', '565': 'test_load_connection_file_session_with_kn(test_connect.py)', '441': 'Session(session.py)', '539': 'test_input_request(test_adapter.py)', '564': 'test_load_connection_file_session(test_connect.py)', '537': 'test_display_data(test_adapter.py)', '540': 'test_inspect_reply(test_adapter.py)', '543': 'test_kernel_info_reply(test_adapter.py)', '542': 'test_inspect_request_token(test_adapter.py)', '535': 'test_complete_reply(test_adapter.py)', '541': 'test_inspect_request(test_adapter.py)', '538': 'test_execute_request(test_adapter.py)', '545': 'test_rename_type(test_adapter.py)', '544': 'test_no_adapt(test_adapter.py)', '546': 'test_same_version(test_adapter.py)', '514': 'V5toV4TestCase(test_adapter.py)', '512': 'AdapterTest(test_adapter.py)', '526': 'test_input_request(test_adapter.py)', '523': 'test_display_data(test_adapter.py)', '527': 'test_kernel_info_reply(test_adapter.py)', '530': 'test_object_info_reply_not_found(test_adapter.py)', '529': 'test_object_info_reply(test_adapter.py)', '531': 'test_object_info_request(test_adapter.py)', '521': 'test_complete_reply(test_adapter.py)', '522': 'test_complete_request(test_adapter.py)', '524': 'test_execute_reply(test_adapter.py)', '532': 'test_rename_type(test_adapter.py)', '525': 'test_execute_request(test_adapter.py)', '528': 'test_no_adapt(test_adapter.py)', '533': 'test_same_version(test_adapter.py)', '513': 'V4toV5TestCase(test_adapter.py)', '519': 'setUp(test_adapter.py)', '516': 'test_default_version(test_adapter.py)', '515': 'test_code_to_line_no_code(test_adapter.py)', '51': 'code_to_line(adapter.py)', '704': 'execute(utils.py)', '158': 'get_shell_msg(client.py)', '615': 'execute(test_kernelmanager.py)', '157': 'get_iopub_msg(client.py)', '710': '__exit__(utils.py)', '709': '__enter__(utils.py)', '580': 'test_kernelapp_lifecycle(test_kernelapp.py)', '579': '_launch(test_kernelapp.py)', '686': 'test_clone(test_session.py)', '473': 'clone(session.py)', '695': 'test_send_raw(test_session.py)', '481': 'send_raw(session.py)', '483': 'sign(session.py)', '689': 'test_datetimes_msgpack(test_session.py)', '475': 'feed_identities(session.py)', '690': 'test_datetimes_pickle(test_session.py)', '688': 'test_datetimes(test_session.py)', '683': 'test_bad_roundtrip(test_session.py)', '685': 'test_bad_unpacker(test_session.py)', '682': 'test_bad_packer(test_session.py)', '681': 'test_bad_pack(test_session.py)', '675': '_bad_packer(test_session.py)', '687': 'test_cull_digest_history(test_session.py)', '700': 'test_zero_digest_history(test_session.py)', '697': 'test_session_id(test_session.py)', '699': 'test_unique_msg_ids(test_session.py)', '445': 'msg_header(session.py)', '698': 'test_tracking(test_session.py)', '680': 'test_args(test_session.py)', '694': 'test_send(test_session.py)', '478': 'msg_id(session.py)', '696': 'test_serialize(test_session.py)', '674': 'TestSession(test_session.py)', '673': 'SessionTestCase(test_session.py)', '678': 'setUp(test_session.py)', '556': 'test_shutdown(test_client.py)', '548': '_check_reply(test_client.py)', '550': 'test_comm_info(test_client.py)', '555': 'test_kernel_info(test_client.py)', '551': 'test_complete(test_client.py)', '554': 'test_inspect(test_client.py)', '553': 'test_history(test_client.py)', '549': 'setUp(test_client.py)', '255': 'NoSuchKernel(kernelspec.py)', '116': 'BlockingKernelClient(client.py)', '117': 'reqrep(client.py)', '124': 'wrapped(client.py)', '123': 'wait_for_ready(client.py)', '150': '_handle_kernel_info_reply(client.py)', '125': 'HBChannel(channels.py)', '104': 'wait_for_ready(client.py)', '102': 'hb_channel(client.py)', '196': '_make_url(connect.py)', '90': 'AsyncKernelClient(client.py)', '91': 'reqrep(client.py)', '105': 'wrapped(client.py)', '80': 'ZMQSocketChannel(channels.py)', '154': 'control_channel(client.py)', '723': 'ioloop(threaded.py)', '160': 'hb_channel(client.py)', '171': 'stdin_channel(client.py)', '164': 'iopub_channel(client.py)', '168': 'shell_channel(client.py)', '328': 'interrupt_kernel(manager.py)', '740': 'send_interrupt(win_interrupt.py)', '334': '__del__(manager.py)', '200': 'cleanup_connection_file(connect.py)', '291': 'start(kernelspecapp.py)', '293': 'start(kernelspecapp.py)', '294': 'path_key(kernelspecapp.py)', '735': 'start(threaded.py)', '720': 'start(threaded.py)', '141': 'start(channelsabc.py)', '432': 'start(restarter.py)', '288': 'start(kernelspecapp.py)', '89': 'start(channels.py)', '115': 'start(channels.py)', '290': 'start(kernelspecapp.py)', '438': 'parse_command_line(runapp.py)', '218': 'build_kernel_argv(consoleapp.py)', '308': '_only_once(localinterfaces.py)', '317': 'wrapped(localinterfaces.py)', '47': 'V4toV5(adapter.py)', '46': 'Adapter(adapter.py)', '77': 'object_info_request(adapter.py)', '52': 'extract_oname_v4(adapter.py)', '70': 'complete_request(adapter.py)', '75': 'kernel_info_reply(adapter.py)', '49': '_version_str_to_list(adapter.py)', '48': 'V5toV4(adapter.py)', '53': '__call__(adapter.py)', '54': 'handle_reply_status_error(adapter.py)', '57': 'update_msg_type(adapter.py)', '56': 'update_metadata(adapter.py)', '55': 'update_header(adapter.py)', '247': 'initialize(kernelapp.py)', '246': '_record_started(kernelapp.py)', '585': 'config(test_kernelmanager.py)', '262': 'install_native_kernel_spec(kernelspec.py)', '276': 'install_native_kernel_spec(kernelspec.py)', '265': 'to_json(kernelspec.py)', '264': 'to_dict(kernelspec.py)', '449': 'test_msg2obj(session.py)', '440': 'Message(session.py)', '453': '__init__(session.py)', '470': '_signature_scheme_changed(session.py)', '465': '_new_auth(session.py)', '463': '_key_default(session.py)', '447': 'new_id_bytes(session.py)', '462': '_key_changed(session.py)', '443': 'default_secure(session.py)', '469': '_session_default(session.py)', '446': 'new_id(session.py)'}}, {'key': 105, 'parent': 2615, 'tfidf_word': 'EP: 105, Name: stop_channels &rarr; is_alive', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2614, 'parent': 2615, 'tfidf_word': 'close init cleanup shutdown stop start threaded info flush reply ', 'tfidf_method': 'is_alive shutdown_all request_shutdown cleanup_resources shutdown_kernel _handle_kernel_info_reply is_alive HBChannel ThreadedZMQSocketChannel is_alive ', 'lda_word': ' thread,kernel,client,flush,loop,', 'lda_method': ' stop_channels,is_alive,remove_kernel,shutdown_kernel,init,', 'lsi_word': ' kernel,thread,channels,start,reply,', 'lsi_method': ' stop_channels,is_alive,close,stop,shutdown_all,', 'spm_method': ' ', 'text_summary': 'Attempts to stop the kernel process cleanly. Start the polling of the kernel. Stop the kernel polling. handle kernel info reply. This is run in the ioloop thread when the kernel info reply is received.', 'files_count': 5, 'files': ['multikernelmanager.py', 'threaded.py', 'channelsabc.py', 'channels.py', 'client.py'], 'execution_path_count': 19, 'function_id_to_name_file': {'420': 'shutdown_all(multikernelmanager.py)', '413': 'list_kernel_ids(multikernelmanager.py)', '725': 'stop_channels(threaded.py)', '721': 'stop(threaded.py)', '718': 'close(threaded.py)', '140': 'is_alive(channelsabc.py)', '732': 'is_alive(threaded.py)', '112': 'is_alive(channels.py)', '86': 'is_alive(channels.py)', '724': 'start_channels(threaded.py)', '722': '_check_kernel_info_reply(threaded.py)', '150': '_handle_kernel_info_reply(client.py)', '716': '__init__(threaded.py)', '387': 'shutdown_kernel(multikernelmanager.py)', '416': 'remove_kernel(multikernelmanager.py)', '713': 'IOLoopThread(threaded.py)', '720': 'start(threaded.py)', '714': 'ThreadedKernelClient(threaded.py)', '715': 'ThreadedZMQSocketChannel(threaded.py)', '125': 'HBChannel(channels.py)', '731': 'flush(threaded.py)', '727': '_flush(threaded.py)', '386': 'shutdown_all(multikernelmanager.py)', '418': 'request_shutdown(multikernelmanager.py)', '402': 'cleanup_resources(multikernelmanager.py)'}}, {'key': 75, 'parent': 2619, 'tfidf_word': 'EP: 75, Name: shutdown_all &rarr; remove_kernel', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2618, 'parent': 2619, 'tfidf_word': 'id len list remove request kernel shutdown ', 'tfidf_method': '__len__ list_kernel_ids remove_kernel request_shutdown shutdown_all shutdown_kernel ', 'lda_word': ' kernel,shutdown,len,request,remove,', 'lda_method': ' len,list_kernel_ids,shutdown_all,shutdown_kernel,request_shutdown,', 'lsi_word': ' kernel,shutdown,remove,request,len,', 'lsi_method': ' len,list_kernel_ids,shutdown_kernel,remove_kernel,shutdown_all,', 'spm_method': ' ', 'text_summary': 'Shutdown all kernels. Return the number of running kernels.', 'files_count': 1, 'files': ['multikernelmanager.py'], 'execution_path_count': 3, 'function_id_to_name_file': {'420': 'shutdown_all(multikernelmanager.py)', '418': 'request_shutdown(multikernelmanager.py)', '393': '__len__(multikernelmanager.py)', '413': 'list_kernel_ids(multikernelmanager.py)', '421': 'shutdown_kernel(multikernelmanager.py)', '416': 'remove_kernel(multikernelmanager.py)'}}, {'key': 32, 'parent': 2639, 'tfidf_word': 'EP: 32, Name: __init__ &rarr; __init__', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2638, 'parent': 2639, 'tfidf_word': 'close handle handler invalid number port recv setup stop stream ', 'tfidf_method': 'is_alive setup_stream is_alive stop close __init__ InvalidPortNumber is_alive __init__ __init__ ', 'lda_word': ' init,recv,setup,handler,handle,', 'lda_method': ' init,invalidportnumber,is_beating,is_alive,stop,', 'lsi_word': ' init,setup,recv,handler,call,', 'lsi_method': ' init,handle_recv,setup_stream,call_handlers,invalidportnumber,', 'spm_method': ' ', 'text_summary': 'Callback for stream.on_recv.', 'files_count': 7, 'files': ['consoleapp.py', 'channels.py', 'multikernelmanager.py', 'threaded.py', 'session.py', 'managerabc.py', 'channelsabc.py'], 'execution_path_count': 13, 'function_id_to_name_file': {'215': '__init__(consoleapp.py)', '127': '__init__(channels.py)', '126': 'InvalidPortNumber(channels.py)', '107': '__init__(channels.py)', '81': '__init__(channels.py)', '392': '__init__(multikernelmanager.py)', '726': '__init__(threaded.py)', '737': 'setup_stream(threaded.py)', '728': '_handle_recv(threaded.py)', '729': 'call_handlers(threaded.py)', '716': '__init__(threaded.py)', '453': '__init__(session.py)', '136': 'stop(channels.py)', '132': 'close(channels.py)', '133': 'is_beating(channels.py)', '412': 'is_alive(multikernelmanager.py)', '373': 'is_alive(managerabc.py)', '140': 'is_alive(channelsabc.py)', '112': 'is_alive(channels.py)', '732': 'is_alive(threaded.py)'}}, {'key': 2595, 'parent': 2604, 'tfidf_word': 'signal interrupt date clone raw subclass name permission native code ', 'tfidf_method': 'test_display_data test_execute_reply test_execute_request test_input_request test_kernel_info_reply test_no_adapt test_object_info_reply test_object_info_reply_not_found test_complete_reply reqrep ', 'lda_word': ' test,connection,file,send,lifecycle,', 'lda_method': ' session,adapt,wrap,test_bad_unpack,test_complete_request,', 'lsi_word': ' test,kernel,adapt,session,reply,', 'lsi_method': ' start,setup,path_key,env,enter,', 'spm_method': ' ', 'text_summary': "default function for packing datetime objects in JSON. test tracking messages. Get a message from the iopub channel. Send a raw message via ident path. Turn a multiline code block and cursor position into a single line. find a connection file, and return its absolute path. return ip for localhost (almost always 127.0.0.1)      find a connection file, and return its absolute path. return ip for localhost (almost always 127.0.0.1)   Ensure that a sequence of kernel startups doesn't break anything. Start the polling of the kernel. Pass a message to the ZMQ socket to send. Reimplement token-finding logic from IPython 2.x javascript Turn a multiline code block and cursor position into a single line. For tests, create a file to indicate that we've started. Interrupts the kernel by sending it a signal. test load_connection_file() after. Get the hb channel object for this kernel. Ensure that a sequence of kernel startups doesn't break anything. Get a message from the shell channel.", 'files_count': 30, 'files': ['test_session.py', 'test_adapter.py', 'test_connect.py', 'connect.py', 'forward.py', 'threaded.py', 'test_manager.py', 'kernelspec.py', 'channels.py', 'test_jsonutil.py', 'session.py', 'jsonutil.py', 'test_kernelmanager.py', 'utils.py', 'test_kernelspec.py', 'signalkernel.py', 'test_multikernelmanager.py', 'localinterfaces.py', 'adapter.py', 'client.py', 'test_kernelapp.py', 'test_client.py', 'manager.py', 'win_interrupt.py', 'kernelspecapp.py', 'channelsabc.py', 'restarter.py', 'runapp.py', 'consoleapp.py', 'kernelapp.py'], 'execution_path_count': 180, 'function_id_to_name_file': {'684': 'test_bad_unpack(test_session.py)', '676': '_bad_unpacker(test_session.py)', '536': 'test_complete_request(test_adapter.py)', '517': 'adapt(test_adapter.py)', '562': 'test_find_connection_file_local(test_connect.py)', '189': 'find_connection_file(connect.py)', '492': 'handle(forward.py)', '730': 'close(threaded.py)', '493': 'SubHander(forward.py)', '490': 'Handler(forward.py)', '635': 'test_connection_file_real_path(test_manager.py)', '253': 'KernelSpec(kernelspec.py)', '718': 'close(threaded.py)', '132': 'close(channels.py)', '114': 'send(channels.py)', '88': 'send(channels.py)', '83': 'close(channels.py)', '109': 'close(channels.py)', '575': 'test_date_default(test_jsonutil.py)', '450': 'utcnow(session.py)', '241': 'date_default(jsonutil.py)', '240': '_ensure_tzinfo(jsonutil.py)', '597': 'test_subclasses(test_kernelmanager.py)', '703': 'AsyncKernelManagerWithCleanup(utils.py)', '595': 'test_signal_kernel_subprocesses(test_kernelmanager.py)', '598': 'execute(test_kernelmanager.py)', '702': 'AsyncKernelManagerSubclass(utils.py)', '611': 'test_start_parallel_process_kernels(test_kernelmanager.py)', '591': 'transport(test_kernelmanager.py)', '606': 'test_templated_kspec_env(test_kernelmanager.py)', '599': '_env_test_body(test_kernelmanager.py)', '607': 'execute(test_kernelmanager.py)', '612': 'test_start_parallel_thread_kernels(test_kernelmanager.py)', '604': 'test_signal_kernel_subprocesses(test_kernelmanager.py)', '608': 'execute(test_kernelmanager.py)', '586': 'env(test_kernelmanager.py)', '712': 'stop(utils.py)', '711': 'start(utils.py)', '705': 'test_env(utils.py)', '630': 'test_validate_kernel_name(test_kernelspec.py)', '257': '_is_valid_kernel_name(kernelspec.py)', '506': 'SignalTestApp(signalkernel.py)', '507': 'SignalTestKernel(signalkernel.py)', '627': 'test_remove_kernel_spec(test_kernelspec.py)', '617': '_install_sample_kernel(test_kernelspec.py)', '626': 'test_kernel_spec_priority(test_kernelspec.py)', '651': 'test_tcp_cinfo(test_multikernelmanager.py)', '640': '_run_cinfo(test_multikernelmanager.py)', '621': 'test_find_all_specs(test_kernelspec.py)', '622': 'test_find_kernel_specs(test_kernelspec.py)', '623': 'test_get_kernel_spec(test_kernelspec.py)', '619': 'tearDown(test_kernelspec.py)', '618': 'setUp(test_kernelspec.py)', '649': 'test_start_sequence_ipc_kernels(test_multikernelmanager.py)', '641': '_run_lifecycle(test_multikernelmanager.py)', '650': 'test_start_sequence_tcp_kernels(test_multikernelmanager.py)', '644': 'test_ipc_cinfo(test_multikernelmanager.py)', '315': 'localhost(localinterfaces.py)', '645': 'test_ipc_lifecycle(test_multikernelmanager.py)', '665': 'test_start_sequence_tcp_kernels(test_multikernelmanager.py)', '657': '_run_lifecycle(test_multikernelmanager.py)', '664': 'test_start_sequence_ipc_kernels(test_multikernelmanager.py)', '659': 'test_ipc_cinfo(test_multikernelmanager.py)', '656': '_run_cinfo(test_multikernelmanager.py)', '660': 'test_ipc_lifecycle(test_multikernelmanager.py)', '666': 'test_tcp_cinfo(test_multikernelmanager.py)', '668': 'test_tcp_lifecycle_with_kernel_id(test_multikernelmanager.py)', '569': 'test_secure_write(test_connect.py)', '573': 'check_user_only_permissions(test_connect.py)', '574': 'fetch_win32_permissions(test_connect.py)', '563': 'test_find_connection_file_relative(test_connect.py)', '561': 'test_find_connection_file_abspath(test_connect.py)', '560': 'test_find_connection_file(test_connect.py)', '565': 'test_load_connection_file_session_with_kn(test_connect.py)', '441': 'Session(session.py)', '539': 'test_input_request(test_adapter.py)', '564': 'test_load_connection_file_session(test_connect.py)', '537': 'test_display_data(test_adapter.py)', '540': 'test_inspect_reply(test_adapter.py)', '543': 'test_kernel_info_reply(test_adapter.py)', '542': 'test_inspect_request_token(test_adapter.py)', '535': 'test_complete_reply(test_adapter.py)', '541': 'test_inspect_request(test_adapter.py)', '538': 'test_execute_request(test_adapter.py)', '545': 'test_rename_type(test_adapter.py)', '544': 'test_no_adapt(test_adapter.py)', '546': 'test_same_version(test_adapter.py)', '514': 'V5toV4TestCase(test_adapter.py)', '512': 'AdapterTest(test_adapter.py)', '526': 'test_input_request(test_adapter.py)', '523': 'test_display_data(test_adapter.py)', '527': 'test_kernel_info_reply(test_adapter.py)', '530': 'test_object_info_reply_not_found(test_adapter.py)', '529': 'test_object_info_reply(test_adapter.py)', '531': 'test_object_info_request(test_adapter.py)', '521': 'test_complete_reply(test_adapter.py)', '522': 'test_complete_request(test_adapter.py)', '524': 'test_execute_reply(test_adapter.py)', '532': 'test_rename_type(test_adapter.py)', '525': 'test_execute_request(test_adapter.py)', '528': 'test_no_adapt(test_adapter.py)', '533': 'test_same_version(test_adapter.py)', '513': 'V4toV5TestCase(test_adapter.py)', '519': 'setUp(test_adapter.py)', '516': 'test_default_version(test_adapter.py)', '515': 'test_code_to_line_no_code(test_adapter.py)', '51': 'code_to_line(adapter.py)', '704': 'execute(utils.py)', '158': 'get_shell_msg(client.py)', '615': 'execute(test_kernelmanager.py)', '157': 'get_iopub_msg(client.py)', '710': '__exit__(utils.py)', '709': '__enter__(utils.py)', '580': 'test_kernelapp_lifecycle(test_kernelapp.py)', '579': '_launch(test_kernelapp.py)', '686': 'test_clone(test_session.py)', '473': 'clone(session.py)', '695': 'test_send_raw(test_session.py)', '481': 'send_raw(session.py)', '483': 'sign(session.py)', '689': 'test_datetimes_msgpack(test_session.py)', '475': 'feed_identities(session.py)', '690': 'test_datetimes_pickle(test_session.py)', '688': 'test_datetimes(test_session.py)', '683': 'test_bad_roundtrip(test_session.py)', '685': 'test_bad_unpacker(test_session.py)', '682': 'test_bad_packer(test_session.py)', '681': 'test_bad_pack(test_session.py)', '675': '_bad_packer(test_session.py)', '687': 'test_cull_digest_history(test_session.py)', '700': 'test_zero_digest_history(test_session.py)', '697': 'test_session_id(test_session.py)', '699': 'test_unique_msg_ids(test_session.py)', '445': 'msg_header(session.py)', '698': 'test_tracking(test_session.py)', '680': 'test_args(test_session.py)', '694': 'test_send(test_session.py)', '478': 'msg_id(session.py)', '696': 'test_serialize(test_session.py)', '674': 'TestSession(test_session.py)', '673': 'SessionTestCase(test_session.py)', '678': 'setUp(test_session.py)', '556': 'test_shutdown(test_client.py)', '548': '_check_reply(test_client.py)', '550': 'test_comm_info(test_client.py)', '555': 'test_kernel_info(test_client.py)', '551': 'test_complete(test_client.py)', '554': 'test_inspect(test_client.py)', '553': 'test_history(test_client.py)', '549': 'setUp(test_client.py)', '255': 'NoSuchKernel(kernelspec.py)', '116': 'BlockingKernelClient(client.py)', '117': 'reqrep(client.py)', '124': 'wrapped(client.py)', '123': 'wait_for_ready(client.py)', '150': '_handle_kernel_info_reply(client.py)', '125': 'HBChannel(channels.py)', '104': 'wait_for_ready(client.py)', '102': 'hb_channel(client.py)', '196': '_make_url(connect.py)', '90': 'AsyncKernelClient(client.py)', '91': 'reqrep(client.py)', '105': 'wrapped(client.py)', '80': 'ZMQSocketChannel(channels.py)', '154': 'control_channel(client.py)', '723': 'ioloop(threaded.py)', '160': 'hb_channel(client.py)', '171': 'stdin_channel(client.py)', '164': 'iopub_channel(client.py)', '168': 'shell_channel(client.py)', '328': 'interrupt_kernel(manager.py)', '740': 'send_interrupt(win_interrupt.py)', '334': '__del__(manager.py)', '200': 'cleanup_connection_file(connect.py)', '291': 'start(kernelspecapp.py)', '293': 'start(kernelspecapp.py)', '294': 'path_key(kernelspecapp.py)', '735': 'start(threaded.py)', '720': 'start(threaded.py)', '141': 'start(channelsabc.py)', '432': 'start(restarter.py)', '288': 'start(kernelspecapp.py)', '89': 'start(channels.py)', '115': 'start(channels.py)', '290': 'start(kernelspecapp.py)', '438': 'parse_command_line(runapp.py)', '218': 'build_kernel_argv(consoleapp.py)', '308': '_only_once(localinterfaces.py)', '317': 'wrapped(localinterfaces.py)', '47': 'V4toV5(adapter.py)', '46': 'Adapter(adapter.py)', '77': 'object_info_request(adapter.py)', '52': 'extract_oname_v4(adapter.py)', '70': 'complete_request(adapter.py)', '75': 'kernel_info_reply(adapter.py)', '49': '_version_str_to_list(adapter.py)', '48': 'V5toV4(adapter.py)', '53': '__call__(adapter.py)', '54': 'handle_reply_status_error(adapter.py)', '57': 'update_msg_type(adapter.py)', '56': 'update_metadata(adapter.py)', '55': 'update_header(adapter.py)', '247': 'initialize(kernelapp.py)', '246': '_record_started(kernelapp.py)', '585': 'config(test_kernelmanager.py)', '262': 'install_native_kernel_spec(kernelspec.py)', '276': 'install_native_kernel_spec(kernelspec.py)', '265': 'to_json(kernelspec.py)', '264': 'to_dict(kernelspec.py)', '449': 'test_msg2obj(session.py)', '440': 'Message(session.py)', '453': '__init__(session.py)', '470': '_signature_scheme_changed(session.py)', '465': '_new_auth(session.py)', '463': '_key_default(session.py)', '447': 'new_id_bytes(session.py)', '462': '_key_changed(session.py)'}}, {'key': 2603, 'parent': 2604, 'tfidf_word': 'default id new byte secure session ', 'tfidf_method': 'default_secure new_id new_id_bytes _session_default ', 'lda_word': ' secure,default,new,byte,session,', 'lda_method': ' session_default,new_id_bytes,default_secure,new_id,', 'lsi_word': ' default,new,byte,secure,session,', 'lsi_method': ' new_id_bytes,default_secure,new_id,session_default,', 'spm_method': ' ', 'text_summary': '', 'files_count': 1, 'files': ['session.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'443': 'default_secure(session.py)', '447': 'new_id_bytes(session.py)', '469': '_session_default(session.py)', '446': 'new_id(session.py)'}}, {'key': 78, 'parent': 2614, 'tfidf_word': 'EP: 78, Name: shutdown_all &rarr; list_kernel_ids', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2612, 'parent': 2614, 'tfidf_word': 'hb handle list shutdown stop start threaded reply info flush ', 'tfidf_method': 'is_alive request_shutdown list_kernel_ids cleanup_resources shutdown_kernel _handle_kernel_info_reply is_alive HBChannel ThreadedZMQSocketChannel is_alive ', 'lda_word': ' channels,start,stop,close,hb,', 'lda_method': ' stop_channels,is_alive,close,stop,hbchannel,', 'lsi_word': ' kernel,thread,channels,start,reply,', 'lsi_method': ' stop_channels,is_alive,stop,close,flush,', 'spm_method': ' ', 'text_summary': 'Attempts to stop the kernel process cleanly. Shutdown all kernels. Stop the kernel polling. handle kernel info reply. This is run in the ioloop thread when the kernel info reply is received.', 'files_count': 5, 'files': ['threaded.py', 'channelsabc.py', 'channels.py', 'client.py', 'multikernelmanager.py'], 'execution_path_count': 18, 'function_id_to_name_file': {'725': 'stop_channels(threaded.py)', '721': 'stop(threaded.py)', '718': 'close(threaded.py)', '140': 'is_alive(channelsabc.py)', '732': 'is_alive(threaded.py)', '112': 'is_alive(channels.py)', '86': 'is_alive(channels.py)', '724': 'start_channels(threaded.py)', '722': '_check_kernel_info_reply(threaded.py)', '150': '_handle_kernel_info_reply(client.py)', '716': '__init__(threaded.py)', '387': 'shutdown_kernel(multikernelmanager.py)', '416': 'remove_kernel(multikernelmanager.py)', '713': 'IOLoopThread(threaded.py)', '720': 'start(threaded.py)', '714': 'ThreadedKernelClient(threaded.py)', '715': 'ThreadedZMQSocketChannel(threaded.py)', '125': 'HBChannel(channels.py)', '731': 'flush(threaded.py)', '727': '_flush(threaded.py)', '386': 'shutdown_all(multikernelmanager.py)', '413': 'list_kernel_ids(multikernelmanager.py)', '418': 'request_shutdown(multikernelmanager.py)', '402': 'cleanup_resources(multikernelmanager.py)'}}, {'key': 74, 'parent': 2618, 'tfidf_word': 'EP: 74, Name: shutdown_all &rarr; request_shutdown', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2617, 'parent': 2618, 'tfidf_word': 'id len list remove shutdown kernel ', 'tfidf_method': '__len__ list_kernel_ids remove_kernel shutdown_kernel ', 'lda_word': ' kernel,shutdown,remove,list,len,', 'lda_method': ' len,list_kernel_ids,remove_kernel,shutdown_kernel,', 'lsi_word': ' kernel,remove,shutdown,list,len,', 'lsi_method': ' len,list_kernel_ids,remove_kernel,shutdown_kernel,', 'spm_method': ' ', 'text_summary': 'remove a kernel from our mapping.', 'files_count': 1, 'files': ['multikernelmanager.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'393': '__len__(multikernelmanager.py)', '413': 'list_kernel_ids(multikernelmanager.py)', '421': 'shutdown_kernel(multikernelmanager.py)', '416': 'remove_kernel(multikernelmanager.py)'}}, {'key': 27, 'parent': 2638, 'tfidf_word': 'EP: 27, Name: __init__ &rarr; __init__ &rarr; InvalidPortNumber', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2637, 'parent': 2638, 'tfidf_word': 'beating init call close handle handler recv setup stop stream ', 'tfidf_method': '__init__ __init__ setup_stream is_alive is_alive stop close is_alive is_alive __init__ ', 'lda_word': ' init,call,handler,stream,recv,', 'lda_method': ' init,is_beating,is_alive,stop,close,', 'lsi_word': ' init,recv,handle,stream,setup,', 'lsi_method': ' init,call_handlers,setup_stream,handle_recv,is_beating,', 'spm_method': ' ', 'text_summary': 'Callback for stream.on_recv.', 'files_count': 7, 'files': ['consoleapp.py', 'channels.py', 'multikernelmanager.py', 'threaded.py', 'session.py', 'managerabc.py', 'channelsabc.py'], 'execution_path_count': 12, 'function_id_to_name_file': {'215': '__init__(consoleapp.py)', '107': '__init__(channels.py)', '81': '__init__(channels.py)', '392': '__init__(multikernelmanager.py)', '726': '__init__(threaded.py)', '737': 'setup_stream(threaded.py)', '728': '_handle_recv(threaded.py)', '729': 'call_handlers(threaded.py)', '716': '__init__(threaded.py)', '453': '__init__(session.py)', '136': 'stop(channels.py)', '132': 'close(channels.py)', '133': 'is_beating(channels.py)', '412': 'is_alive(multikernelmanager.py)', '373': 'is_alive(managerabc.py)', '140': 'is_alive(channelsabc.py)', '112': 'is_alive(channels.py)', '732': 'is_alive(threaded.py)'}}, {'key': 2570, 'parent': 2595, 'tfidf_word': 'signal default date clone raw subclass permission line name code ', 'tfidf_method': 'test_complete_request test_display_data test_execute_request test_input_request test_inspect_reply test_inspect_request test_inspect_request_token test_kernel_info_reply test_input_request reqrep ', 'lda_word': ' test,adapt,reply,session,bad,', 'lda_method': ' handle,close,make_url,send,test_send,', 'lsi_word': ' test,kernel,adapt,session,reply,', 'lsi_method': ' adapt,test_complete_reply,test_display_data,test_same_version,test_input_request,', 'spm_method': ' ', 'text_summary': "test tracking messages. Get a message from the iopub channel. Turn a multiline code block and cursor position into a single line. Send a raw message via ident path. Waits for a response when a client is blocked. Get the hb channel object for this kernel. find a connection file, and return its absolute path. return ip for localhost (almost always 127.0.0.1)      find a connection file, and return its absolute path. test that messages receive unique ids. return ip for localhost (almost always 127.0.0.1)   Ensure that a sequence of kernel startups doesn't break anything. Get a message from the shell channel. initialization arguments for Session. test load_connection_file() after. Create a copy of this Session. Ensure that a sequence of kernel startups doesn't break anything. Check that a kernel name is valid. Ensure a datetime object has tzinfo.", 'files_count': 22, 'files': ['test_session.py', 'test_adapter.py', 'test_connect.py', 'connect.py', 'forward.py', 'threaded.py', 'test_manager.py', 'kernelspec.py', 'channels.py', 'test_jsonutil.py', 'session.py', 'jsonutil.py', 'test_kernelmanager.py', 'utils.py', 'test_kernelspec.py', 'signalkernel.py', 'test_multikernelmanager.py', 'localinterfaces.py', 'adapter.py', 'client.py', 'test_kernelapp.py', 'test_client.py'], 'execution_path_count': 143, 'function_id_to_name_file': {'684': 'test_bad_unpack(test_session.py)', '676': '_bad_unpacker(test_session.py)', '536': 'test_complete_request(test_adapter.py)', '517': 'adapt(test_adapter.py)', '562': 'test_find_connection_file_local(test_connect.py)', '189': 'find_connection_file(connect.py)', '492': 'handle(forward.py)', '730': 'close(threaded.py)', '493': 'SubHander(forward.py)', '490': 'Handler(forward.py)', '635': 'test_connection_file_real_path(test_manager.py)', '253': 'KernelSpec(kernelspec.py)', '718': 'close(threaded.py)', '132': 'close(channels.py)', '114': 'send(channels.py)', '88': 'send(channels.py)', '83': 'close(channels.py)', '109': 'close(channels.py)', '575': 'test_date_default(test_jsonutil.py)', '450': 'utcnow(session.py)', '241': 'date_default(jsonutil.py)', '240': '_ensure_tzinfo(jsonutil.py)', '597': 'test_subclasses(test_kernelmanager.py)', '703': 'AsyncKernelManagerWithCleanup(utils.py)', '595': 'test_signal_kernel_subprocesses(test_kernelmanager.py)', '598': 'execute(test_kernelmanager.py)', '702': 'AsyncKernelManagerSubclass(utils.py)', '611': 'test_start_parallel_process_kernels(test_kernelmanager.py)', '591': 'transport(test_kernelmanager.py)', '606': 'test_templated_kspec_env(test_kernelmanager.py)', '599': '_env_test_body(test_kernelmanager.py)', '607': 'execute(test_kernelmanager.py)', '612': 'test_start_parallel_thread_kernels(test_kernelmanager.py)', '604': 'test_signal_kernel_subprocesses(test_kernelmanager.py)', '608': 'execute(test_kernelmanager.py)', '586': 'env(test_kernelmanager.py)', '712': 'stop(utils.py)', '711': 'start(utils.py)', '705': 'test_env(utils.py)', '630': 'test_validate_kernel_name(test_kernelspec.py)', '257': '_is_valid_kernel_name(kernelspec.py)', '506': 'SignalTestApp(signalkernel.py)', '507': 'SignalTestKernel(signalkernel.py)', '627': 'test_remove_kernel_spec(test_kernelspec.py)', '617': '_install_sample_kernel(test_kernelspec.py)', '626': 'test_kernel_spec_priority(test_kernelspec.py)', '651': 'test_tcp_cinfo(test_multikernelmanager.py)', '640': '_run_cinfo(test_multikernelmanager.py)', '621': 'test_find_all_specs(test_kernelspec.py)', '622': 'test_find_kernel_specs(test_kernelspec.py)', '623': 'test_get_kernel_spec(test_kernelspec.py)', '619': 'tearDown(test_kernelspec.py)', '618': 'setUp(test_kernelspec.py)', '649': 'test_start_sequence_ipc_kernels(test_multikernelmanager.py)', '641': '_run_lifecycle(test_multikernelmanager.py)', '650': 'test_start_sequence_tcp_kernels(test_multikernelmanager.py)', '644': 'test_ipc_cinfo(test_multikernelmanager.py)', '315': 'localhost(localinterfaces.py)', '645': 'test_ipc_lifecycle(test_multikernelmanager.py)', '665': 'test_start_sequence_tcp_kernels(test_multikernelmanager.py)', '657': '_run_lifecycle(test_multikernelmanager.py)', '664': 'test_start_sequence_ipc_kernels(test_multikernelmanager.py)', '659': 'test_ipc_cinfo(test_multikernelmanager.py)', '656': '_run_cinfo(test_multikernelmanager.py)', '660': 'test_ipc_lifecycle(test_multikernelmanager.py)', '666': 'test_tcp_cinfo(test_multikernelmanager.py)', '668': 'test_tcp_lifecycle_with_kernel_id(test_multikernelmanager.py)', '569': 'test_secure_write(test_connect.py)', '573': 'check_user_only_permissions(test_connect.py)', '574': 'fetch_win32_permissions(test_connect.py)', '563': 'test_find_connection_file_relative(test_connect.py)', '561': 'test_find_connection_file_abspath(test_connect.py)', '560': 'test_find_connection_file(test_connect.py)', '565': 'test_load_connection_file_session_with_kn(test_connect.py)', '441': 'Session(session.py)', '539': 'test_input_request(test_adapter.py)', '564': 'test_load_connection_file_session(test_connect.py)', '537': 'test_display_data(test_adapter.py)', '540': 'test_inspect_reply(test_adapter.py)', '543': 'test_kernel_info_reply(test_adapter.py)', '542': 'test_inspect_request_token(test_adapter.py)', '535': 'test_complete_reply(test_adapter.py)', '541': 'test_inspect_request(test_adapter.py)', '538': 'test_execute_request(test_adapter.py)', '545': 'test_rename_type(test_adapter.py)', '544': 'test_no_adapt(test_adapter.py)', '546': 'test_same_version(test_adapter.py)', '514': 'V5toV4TestCase(test_adapter.py)', '512': 'AdapterTest(test_adapter.py)', '526': 'test_input_request(test_adapter.py)', '523': 'test_display_data(test_adapter.py)', '527': 'test_kernel_info_reply(test_adapter.py)', '530': 'test_object_info_reply_not_found(test_adapter.py)', '529': 'test_object_info_reply(test_adapter.py)', '531': 'test_object_info_request(test_adapter.py)', '521': 'test_complete_reply(test_adapter.py)', '522': 'test_complete_request(test_adapter.py)', '524': 'test_execute_reply(test_adapter.py)', '532': 'test_rename_type(test_adapter.py)', '525': 'test_execute_request(test_adapter.py)', '528': 'test_no_adapt(test_adapter.py)', '533': 'test_same_version(test_adapter.py)', '513': 'V4toV5TestCase(test_adapter.py)', '519': 'setUp(test_adapter.py)', '516': 'test_default_version(test_adapter.py)', '515': 'test_code_to_line_no_code(test_adapter.py)', '51': 'code_to_line(adapter.py)', '704': 'execute(utils.py)', '158': 'get_shell_msg(client.py)', '615': 'execute(test_kernelmanager.py)', '157': 'get_iopub_msg(client.py)', '710': '__exit__(utils.py)', '709': '__enter__(utils.py)', '580': 'test_kernelapp_lifecycle(test_kernelapp.py)', '579': '_launch(test_kernelapp.py)', '686': 'test_clone(test_session.py)', '473': 'clone(session.py)', '695': 'test_send_raw(test_session.py)', '481': 'send_raw(session.py)', '483': 'sign(session.py)', '689': 'test_datetimes_msgpack(test_session.py)', '475': 'feed_identities(session.py)', '690': 'test_datetimes_pickle(test_session.py)', '688': 'test_datetimes(test_session.py)', '683': 'test_bad_roundtrip(test_session.py)', '685': 'test_bad_unpacker(test_session.py)', '682': 'test_bad_packer(test_session.py)', '681': 'test_bad_pack(test_session.py)', '675': '_bad_packer(test_session.py)', '687': 'test_cull_digest_history(test_session.py)', '700': 'test_zero_digest_history(test_session.py)', '697': 'test_session_id(test_session.py)', '699': 'test_unique_msg_ids(test_session.py)', '445': 'msg_header(session.py)', '698': 'test_tracking(test_session.py)', '680': 'test_args(test_session.py)', '694': 'test_send(test_session.py)', '478': 'msg_id(session.py)', '696': 'test_serialize(test_session.py)', '674': 'TestSession(test_session.py)', '673': 'SessionTestCase(test_session.py)', '678': 'setUp(test_session.py)', '556': 'test_shutdown(test_client.py)', '548': '_check_reply(test_client.py)', '550': 'test_comm_info(test_client.py)', '555': 'test_kernel_info(test_client.py)', '551': 'test_complete(test_client.py)', '554': 'test_inspect(test_client.py)', '553': 'test_history(test_client.py)', '549': 'setUp(test_client.py)', '255': 'NoSuchKernel(kernelspec.py)', '116': 'BlockingKernelClient(client.py)', '117': 'reqrep(client.py)', '124': 'wrapped(client.py)', '123': 'wait_for_ready(client.py)', '150': '_handle_kernel_info_reply(client.py)', '125': 'HBChannel(channels.py)', '104': 'wait_for_ready(client.py)', '102': 'hb_channel(client.py)', '196': '_make_url(connect.py)', '90': 'AsyncKernelClient(client.py)', '91': 'reqrep(client.py)', '105': 'wrapped(client.py)', '80': 'ZMQSocketChannel(channels.py)', '154': 'control_channel(client.py)', '723': 'ioloop(threaded.py)', '160': 'hb_channel(client.py)', '171': 'stdin_channel(client.py)', '164': 'iopub_channel(client.py)'}}, {'key': 2594, 'parent': 2595, 'tfidf_word': 'message metadata msg config json kernel interrupt spec install native ', 'tfidf_method': 'path_key _only_once wrapped __del__ start parse_command_line Message new_id_bytes __init__ start ', 'lda_word': ' start,auth,new,change,initialize,', 'lda_method': ' start,call,test_msg2obj,new_auth,initialize,', 'lsi_word': ' start,key,path,initialize,record,', 'lsi_method': ' start,path_key,shell_channel,make_url,ioloop,', 'spm_method': ' ', 'text_summary': 'Start the polling of the kernel. Interrupts the kernel by sending it a signal.', 'files_count': 18, 'files': ['client.py', 'threaded.py', 'connect.py', 'manager.py', 'channels.py', 'win_interrupt.py', 'kernelspecapp.py', 'utils.py', 'channelsabc.py', 'restarter.py', 'runapp.py', 'consoleapp.py', 'localinterfaces.py', 'adapter.py', 'kernelapp.py', 'test_kernelmanager.py', 'kernelspec.py', 'session.py'], 'execution_path_count': 37, 'function_id_to_name_file': {'168': 'shell_channel(client.py)', '723': 'ioloop(threaded.py)', '196': '_make_url(connect.py)', '328': 'interrupt_kernel(manager.py)', '114': 'send(channels.py)', '740': 'send_interrupt(win_interrupt.py)', '88': 'send(channels.py)', '334': '__del__(manager.py)', '200': 'cleanup_connection_file(connect.py)', '291': 'start(kernelspecapp.py)', '293': 'start(kernelspecapp.py)', '294': 'path_key(kernelspecapp.py)', '735': 'start(threaded.py)', '711': 'start(utils.py)', '720': 'start(threaded.py)', '141': 'start(channelsabc.py)', '432': 'start(restarter.py)', '288': 'start(kernelspecapp.py)', '89': 'start(channels.py)', '115': 'start(channels.py)', '290': 'start(kernelspecapp.py)', '438': 'parse_command_line(runapp.py)', '218': 'build_kernel_argv(consoleapp.py)', '308': '_only_once(localinterfaces.py)', '317': 'wrapped(localinterfaces.py)', '47': 'V4toV5(adapter.py)', '46': 'Adapter(adapter.py)', '77': 'object_info_request(adapter.py)', '51': 'code_to_line(adapter.py)', '52': 'extract_oname_v4(adapter.py)', '70': 'complete_request(adapter.py)', '75': 'kernel_info_reply(adapter.py)', '49': '_version_str_to_list(adapter.py)', '48': 'V5toV4(adapter.py)', '53': '__call__(adapter.py)', '54': 'handle_reply_status_error(adapter.py)', '57': 'update_msg_type(adapter.py)', '56': 'update_metadata(adapter.py)', '55': 'update_header(adapter.py)', '247': 'initialize(kernelapp.py)', '246': '_record_started(kernelapp.py)', '585': 'config(test_kernelmanager.py)', '262': 'install_native_kernel_spec(kernelspec.py)', '276': 'install_native_kernel_spec(kernelspec.py)', '265': 'to_json(kernelspec.py)', '264': 'to_dict(kernelspec.py)', '449': 'test_msg2obj(session.py)', '440': 'Message(session.py)', '453': '__init__(session.py)', '470': '_signature_scheme_changed(session.py)', '465': '_new_auth(session.py)', '463': '_key_default(session.py)', '447': 'new_id_bytes(session.py)', '462': '_key_changed(session.py)'}}, {'key': 107, 'parent': 2603, 'tfidf_word': 'EP: 107, Name: default_secure &rarr; new_id_bytes', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 108, 'parent': 2603, 'tfidf_word': 'EP: 108, Name: _session_default &rarr; new_id', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 104, 'parent': 2612, 'tfidf_word': 'EP: 104, Name: stop_channels &rarr; stop &rarr; close', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2611, 'parent': 2612, 'tfidf_word': 'handle list hb init shutdown start threaded reply flush info ', 'tfidf_method': 'is_alive request_shutdown list_kernel_ids cleanup_resources shutdown_kernel _handle_kernel_info_reply is_alive HBChannel is_alive is_alive ', 'lda_word': ' channels,alive,stop,start,shutdown,', 'lda_method': ' stop_channels,is_alive,start_channels,handle_kernel_info_reply,start,', 'lsi_word': ' kernel,thread,channels,start,reply,', 'lsi_method': ' stop_channels,is_alive,start_channels,threadedkernelclient,ioloopthread,', 'spm_method': ' ', 'text_summary': 'Shutdown all kernels. handle kernel info reply. This is run in the ioloop thread when the kernel info reply is received.', 'files_count': 5, 'files': ['threaded.py', 'channelsabc.py', 'channels.py', 'client.py', 'multikernelmanager.py'], 'execution_path_count': 17, 'function_id_to_name_file': {'725': 'stop_channels(threaded.py)', '140': 'is_alive(channelsabc.py)', '732': 'is_alive(threaded.py)', '112': 'is_alive(channels.py)', '86': 'is_alive(channels.py)', '724': 'start_channels(threaded.py)', '722': '_check_kernel_info_reply(threaded.py)', '150': '_handle_kernel_info_reply(client.py)', '716': '__init__(threaded.py)', '387': 'shutdown_kernel(multikernelmanager.py)', '416': 'remove_kernel(multikernelmanager.py)', '713': 'IOLoopThread(threaded.py)', '720': 'start(threaded.py)', '714': 'ThreadedKernelClient(threaded.py)', '715': 'ThreadedZMQSocketChannel(threaded.py)', '125': 'HBChannel(channels.py)', '731': 'flush(threaded.py)', '727': '_flush(threaded.py)', '386': 'shutdown_all(multikernelmanager.py)', '413': 'list_kernel_ids(multikernelmanager.py)', '418': 'request_shutdown(multikernelmanager.py)', '402': 'cleanup_resources(multikernelmanager.py)'}}, {'key': 69, 'parent': 2617, 'tfidf_word': 'EP: 69, Name: __len__ &rarr; list_kernel_ids', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 72, 'parent': 2617, 'tfidf_word': 'EP: 72, Name: shutdown_kernel &rarr; remove_kernel', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 26, 'parent': 2637, 'tfidf_word': 'EP: 26, Name: __init__ &rarr; __init__', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2636, 'parent': 2637, 'tfidf_word': 'beating call close handle handler recv setup stop stream init ', 'tfidf_method': '__init__ __init__ is_alive __init__ is_alive is_alive stop close setup_stream __init__ ', 'lda_word': ' close,stop,beating,alive,init,', 'lda_method': ' init,handle_recv,setup_stream,call_handlers,is_alive,', 'lsi_word': ' init,recv,stream,setup,handle,', 'lsi_method': ' init,call_handlers,setup_stream,handle_recv,is_alive,', 'spm_method': ' ', 'text_summary': 'Callback for stream.on_recv.', 'files_count': 7, 'files': ['consoleapp.py', 'channels.py', 'multikernelmanager.py', 'threaded.py', 'session.py', 'managerabc.py', 'channelsabc.py'], 'execution_path_count': 11, 'function_id_to_name_file': {'215': '__init__(consoleapp.py)', '81': '__init__(channels.py)', '392': '__init__(multikernelmanager.py)', '726': '__init__(threaded.py)', '737': 'setup_stream(threaded.py)', '728': '_handle_recv(threaded.py)', '729': 'call_handlers(threaded.py)', '716': '__init__(threaded.py)', '453': '__init__(session.py)', '136': 'stop(channels.py)', '132': 'close(channels.py)', '133': 'is_beating(channels.py)', '412': 'is_alive(multikernelmanager.py)', '373': 'is_alive(managerabc.py)', '140': 'is_alive(channelsabc.py)', '112': 'is_alive(channels.py)', '732': 'is_alive(threaded.py)'}}, {'key': 2556, 'parent': 2570, 'tfidf_word': 'default signal date clone raw subclass permission line name code ', 'tfidf_method': 'test_complete_request test_display_data test_execute_request test_input_request test_inspect_reply test_inspect_request test_inspect_request_token test_kernel_info_reply test_input_request reqrep ', 'lda_word': ' test,msg,adapt,default,stop,', 'lda_method': ' adapt,run_lifecycle,check_reply,session,handle,', 'lsi_word': ' test,kernel,adapt,session,reply,', 'lsi_method': ' adapt,test_complete_reply,test_no_adapt,test_kernel_info_reply,test_same_version,', 'spm_method': ' ', 'text_summary': "test tracking messages. Get a message from the iopub channel. Turn a multiline code block and cursor position into a single line. Send a raw message via ident path. Waits for a response when a client is blocked. Get the hb channel object for this kernel. find a connection file, and return its absolute path. return ip for localhost (almost always 127.0.0.1)      find a connection file, and return its absolute path. test that messages receive unique ids. return ip for localhost (almost always 127.0.0.1)   Ensure that a sequence of kernel startups doesn't break anything. Get a message from the shell channel. initialization arguments for Session. test load_connection_file() after. Create a copy of this Session. Ensure that a sequence of kernel startups doesn't break anything. Check that a kernel name is valid. Ensure a datetime object has tzinfo.", 'files_count': 22, 'files': ['test_session.py', 'test_adapter.py', 'test_connect.py', 'connect.py', 'forward.py', 'threaded.py', 'test_manager.py', 'kernelspec.py', 'channels.py', 'test_jsonutil.py', 'session.py', 'jsonutil.py', 'test_kernelmanager.py', 'utils.py', 'test_kernelspec.py', 'signalkernel.py', 'test_multikernelmanager.py', 'localinterfaces.py', 'adapter.py', 'client.py', 'test_kernelapp.py', 'test_client.py'], 'execution_path_count': 141, 'function_id_to_name_file': {'684': 'test_bad_unpack(test_session.py)', '676': '_bad_unpacker(test_session.py)', '536': 'test_complete_request(test_adapter.py)', '517': 'adapt(test_adapter.py)', '562': 'test_find_connection_file_local(test_connect.py)', '189': 'find_connection_file(connect.py)', '492': 'handle(forward.py)', '730': 'close(threaded.py)', '493': 'SubHander(forward.py)', '490': 'Handler(forward.py)', '635': 'test_connection_file_real_path(test_manager.py)', '253': 'KernelSpec(kernelspec.py)', '718': 'close(threaded.py)', '132': 'close(channels.py)', '114': 'send(channels.py)', '88': 'send(channels.py)', '83': 'close(channels.py)', '109': 'close(channels.py)', '575': 'test_date_default(test_jsonutil.py)', '450': 'utcnow(session.py)', '241': 'date_default(jsonutil.py)', '240': '_ensure_tzinfo(jsonutil.py)', '597': 'test_subclasses(test_kernelmanager.py)', '703': 'AsyncKernelManagerWithCleanup(utils.py)', '595': 'test_signal_kernel_subprocesses(test_kernelmanager.py)', '598': 'execute(test_kernelmanager.py)', '702': 'AsyncKernelManagerSubclass(utils.py)', '611': 'test_start_parallel_process_kernels(test_kernelmanager.py)', '591': 'transport(test_kernelmanager.py)', '606': 'test_templated_kspec_env(test_kernelmanager.py)', '599': '_env_test_body(test_kernelmanager.py)', '607': 'execute(test_kernelmanager.py)', '612': 'test_start_parallel_thread_kernels(test_kernelmanager.py)', '604': 'test_signal_kernel_subprocesses(test_kernelmanager.py)', '608': 'execute(test_kernelmanager.py)', '586': 'env(test_kernelmanager.py)', '712': 'stop(utils.py)', '711': 'start(utils.py)', '705': 'test_env(utils.py)', '630': 'test_validate_kernel_name(test_kernelspec.py)', '257': '_is_valid_kernel_name(kernelspec.py)', '506': 'SignalTestApp(signalkernel.py)', '507': 'SignalTestKernel(signalkernel.py)', '627': 'test_remove_kernel_spec(test_kernelspec.py)', '617': '_install_sample_kernel(test_kernelspec.py)', '626': 'test_kernel_spec_priority(test_kernelspec.py)', '651': 'test_tcp_cinfo(test_multikernelmanager.py)', '640': '_run_cinfo(test_multikernelmanager.py)', '621': 'test_find_all_specs(test_kernelspec.py)', '622': 'test_find_kernel_specs(test_kernelspec.py)', '623': 'test_get_kernel_spec(test_kernelspec.py)', '619': 'tearDown(test_kernelspec.py)', '618': 'setUp(test_kernelspec.py)', '649': 'test_start_sequence_ipc_kernels(test_multikernelmanager.py)', '641': '_run_lifecycle(test_multikernelmanager.py)', '650': 'test_start_sequence_tcp_kernels(test_multikernelmanager.py)', '644': 'test_ipc_cinfo(test_multikernelmanager.py)', '315': 'localhost(localinterfaces.py)', '645': 'test_ipc_lifecycle(test_multikernelmanager.py)', '665': 'test_start_sequence_tcp_kernels(test_multikernelmanager.py)', '657': '_run_lifecycle(test_multikernelmanager.py)', '664': 'test_start_sequence_ipc_kernels(test_multikernelmanager.py)', '659': 'test_ipc_cinfo(test_multikernelmanager.py)', '656': '_run_cinfo(test_multikernelmanager.py)', '660': 'test_ipc_lifecycle(test_multikernelmanager.py)', '666': 'test_tcp_cinfo(test_multikernelmanager.py)', '668': 'test_tcp_lifecycle_with_kernel_id(test_multikernelmanager.py)', '569': 'test_secure_write(test_connect.py)', '573': 'check_user_only_permissions(test_connect.py)', '574': 'fetch_win32_permissions(test_connect.py)', '563': 'test_find_connection_file_relative(test_connect.py)', '561': 'test_find_connection_file_abspath(test_connect.py)', '560': 'test_find_connection_file(test_connect.py)', '565': 'test_load_connection_file_session_with_kn(test_connect.py)', '441': 'Session(session.py)', '539': 'test_input_request(test_adapter.py)', '564': 'test_load_connection_file_session(test_connect.py)', '537': 'test_display_data(test_adapter.py)', '540': 'test_inspect_reply(test_adapter.py)', '543': 'test_kernel_info_reply(test_adapter.py)', '542': 'test_inspect_request_token(test_adapter.py)', '535': 'test_complete_reply(test_adapter.py)', '541': 'test_inspect_request(test_adapter.py)', '538': 'test_execute_request(test_adapter.py)', '545': 'test_rename_type(test_adapter.py)', '544': 'test_no_adapt(test_adapter.py)', '546': 'test_same_version(test_adapter.py)', '514': 'V5toV4TestCase(test_adapter.py)', '512': 'AdapterTest(test_adapter.py)', '526': 'test_input_request(test_adapter.py)', '523': 'test_display_data(test_adapter.py)', '527': 'test_kernel_info_reply(test_adapter.py)', '530': 'test_object_info_reply_not_found(test_adapter.py)', '529': 'test_object_info_reply(test_adapter.py)', '531': 'test_object_info_request(test_adapter.py)', '521': 'test_complete_reply(test_adapter.py)', '522': 'test_complete_request(test_adapter.py)', '524': 'test_execute_reply(test_adapter.py)', '532': 'test_rename_type(test_adapter.py)', '525': 'test_execute_request(test_adapter.py)', '528': 'test_no_adapt(test_adapter.py)', '533': 'test_same_version(test_adapter.py)', '513': 'V4toV5TestCase(test_adapter.py)', '519': 'setUp(test_adapter.py)', '516': 'test_default_version(test_adapter.py)', '515': 'test_code_to_line_no_code(test_adapter.py)', '51': 'code_to_line(adapter.py)', '704': 'execute(utils.py)', '158': 'get_shell_msg(client.py)', '615': 'execute(test_kernelmanager.py)', '157': 'get_iopub_msg(client.py)', '710': '__exit__(utils.py)', '709': '__enter__(utils.py)', '580': 'test_kernelapp_lifecycle(test_kernelapp.py)', '579': '_launch(test_kernelapp.py)', '686': 'test_clone(test_session.py)', '473': 'clone(session.py)', '695': 'test_send_raw(test_session.py)', '481': 'send_raw(session.py)', '483': 'sign(session.py)', '689': 'test_datetimes_msgpack(test_session.py)', '475': 'feed_identities(session.py)', '690': 'test_datetimes_pickle(test_session.py)', '688': 'test_datetimes(test_session.py)', '683': 'test_bad_roundtrip(test_session.py)', '685': 'test_bad_unpacker(test_session.py)', '682': 'test_bad_packer(test_session.py)', '681': 'test_bad_pack(test_session.py)', '675': '_bad_packer(test_session.py)', '687': 'test_cull_digest_history(test_session.py)', '700': 'test_zero_digest_history(test_session.py)', '697': 'test_session_id(test_session.py)', '699': 'test_unique_msg_ids(test_session.py)', '445': 'msg_header(session.py)', '698': 'test_tracking(test_session.py)', '680': 'test_args(test_session.py)', '694': 'test_send(test_session.py)', '478': 'msg_id(session.py)', '696': 'test_serialize(test_session.py)', '674': 'TestSession(test_session.py)', '673': 'SessionTestCase(test_session.py)', '678': 'setUp(test_session.py)', '556': 'test_shutdown(test_client.py)', '548': '_check_reply(test_client.py)', '550': 'test_comm_info(test_client.py)', '555': 'test_kernel_info(test_client.py)', '551': 'test_complete(test_client.py)', '554': 'test_inspect(test_client.py)', '553': 'test_history(test_client.py)', '549': 'setUp(test_client.py)', '255': 'NoSuchKernel(kernelspec.py)', '116': 'BlockingKernelClient(client.py)', '117': 'reqrep(client.py)', '124': 'wrapped(client.py)', '123': 'wait_for_ready(client.py)', '150': '_handle_kernel_info_reply(client.py)', '125': 'HBChannel(channels.py)', '104': 'wait_for_ready(client.py)', '102': 'hb_channel(client.py)', '196': '_make_url(connect.py)', '90': 'AsyncKernelClient(client.py)', '91': 'reqrep(client.py)', '105': 'wrapped(client.py)', '80': 'ZMQSocketChannel(channels.py)', '154': 'control_channel(client.py)', '723': 'ioloop(threaded.py)', '160': 'hb_channel(client.py)', '171': 'stdin_channel(client.py)'}}, {'key': 2569, 'parent': 2570, 'tfidf_word': 'channel iopub ioloop make url ', 'tfidf_method': 'iopub_channel _make_url ioloop ', 'lda_word': ' iopub,channel,ioloop,url,make,', 'lda_method': ' iopub_channel,ioloop,make_url,', 'lsi_word': ' channel,iopub,make,url,ioloop,', 'lsi_method': ' iopub_channel,make_url,ioloop,', 'spm_method': ' ', 'text_summary': 'Empty', 'files_count': 3, 'files': ['client.py', 'connect.py', 'threaded.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'164': 'iopub_channel(client.py)', '196': '_make_url(connect.py)', '723': 'ioloop(threaded.py)'}}, {'key': 2568, 'parent': 2594, 'tfidf_word': 'cleanup connection del file ioloop key make path url interrupt ', 'tfidf_method': '__del__ path_key start start cleanup_connection_file _make_url start start send start ', 'lda_word': ' shell,channel,url,make,start,', 'lda_method': ' cleanup_connection_file,send_interrupt,interrupt_kernel,del,start,', 'lsi_word': ' start,key,path,make,url,', 'lsi_method': ' start,path_key,ioloop,make_url,shell_channel,', 'spm_method': ' ', 'text_summary': 'Sends an interrupt event using the specified handle. Start the polling of the kernel. Interrupts the kernel by sending it a signal.', 'files_count': 10, 'files': ['client.py', 'threaded.py', 'connect.py', 'manager.py', 'channels.py', 'win_interrupt.py', 'kernelspecapp.py', 'utils.py', 'channelsabc.py', 'restarter.py'], 'execution_path_count': 15, 'function_id_to_name_file': {'168': 'shell_channel(client.py)', '723': 'ioloop(threaded.py)', '196': '_make_url(connect.py)', '328': 'interrupt_kernel(manager.py)', '114': 'send(channels.py)', '740': 'send_interrupt(win_interrupt.py)', '88': 'send(channels.py)', '334': '__del__(manager.py)', '200': 'cleanup_connection_file(connect.py)', '291': 'start(kernelspecapp.py)', '293': 'start(kernelspecapp.py)', '294': 'path_key(kernelspecapp.py)', '735': 'start(threaded.py)', '711': 'start(utils.py)', '720': 'start(threaded.py)', '141': 'start(channelsabc.py)', '432': 'start(restarter.py)', '288': 'start(kernelspecapp.py)', '89': 'start(channels.py)', '115': 'start(channels.py)'}}, {'key': 2593, 'parent': 2594, 'tfidf_word': 'id init json version extract kernel start install native spec ', 'tfidf_method': '_only_once start start install_native_kernel_spec to_json to_dict install_native_kernel_spec _record_started _key_default _key_changed ', 'lda_word': ' auth,change,new,signature,scheme,', 'lda_method': ' code_to_line,start,object_info_request,kernel_info_reply,extract_oname_v4,', 'lsi_word': ' kernel,spec,native,install,line,', 'lsi_method': ' code_to_line,object_info_request,extract_oname_v4,complete_request,call,', 'spm_method': ' ', 'text_summary': 'Start the polling of the kernel. Reimplement token-finding logic from IPython 2.x javascript Turn a multiline code block and cursor position into a single line. Turn a multiline code block and cursor position into a single line.', 'files_count': 9, 'files': ['kernelspecapp.py', 'runapp.py', 'consoleapp.py', 'localinterfaces.py', 'adapter.py', 'kernelapp.py', 'test_kernelmanager.py', 'kernelspec.py', 'session.py'], 'execution_path_count': 22, 'function_id_to_name_file': {'291': 'start(kernelspecapp.py)', '290': 'start(kernelspecapp.py)', '438': 'parse_command_line(runapp.py)', '218': 'build_kernel_argv(consoleapp.py)', '308': '_only_once(localinterfaces.py)', '317': 'wrapped(localinterfaces.py)', '47': 'V4toV5(adapter.py)', '46': 'Adapter(adapter.py)', '77': 'object_info_request(adapter.py)', '51': 'code_to_line(adapter.py)', '52': 'extract_oname_v4(adapter.py)', '70': 'complete_request(adapter.py)', '75': 'kernel_info_reply(adapter.py)', '49': '_version_str_to_list(adapter.py)', '48': 'V5toV4(adapter.py)', '53': '__call__(adapter.py)', '54': 'handle_reply_status_error(adapter.py)', '57': 'update_msg_type(adapter.py)', '56': 'update_metadata(adapter.py)', '55': 'update_header(adapter.py)', '247': 'initialize(kernelapp.py)', '246': '_record_started(kernelapp.py)', '585': 'config(test_kernelmanager.py)', '262': 'install_native_kernel_spec(kernelspec.py)', '276': 'install_native_kernel_spec(kernelspec.py)', '265': 'to_json(kernelspec.py)', '264': 'to_dict(kernelspec.py)', '449': 'test_msg2obj(session.py)', '440': 'Message(session.py)', '453': '__init__(session.py)', '470': '_signature_scheme_changed(session.py)', '465': '_new_auth(session.py)', '463': '_key_default(session.py)', '447': 'new_id_bytes(session.py)', '462': '_key_changed(session.py)'}}, {'key': 103, 'parent': 2611, 'tfidf_word': 'EP: 103, Name: stop_channels &rarr; is_alive', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2610, 'parent': 2611, 'tfidf_word': 'handle list hb init shutdown start threaded reply flush info ', 'tfidf_method': 'is_alive is_alive request_shutdown list_kernel_ids cleanup_resources shutdown_kernel _handle_kernel_info_reply HBChannel ThreadedZMQSocketChannel is_alive ', 'lda_word': ' channels,stop,alive,kernel,shutdown,', 'lda_method': ' start_channels,ioloopthread,threadedkernelclient,start,hbchannel,', 'lsi_word': ' kernel,thread,channels,start,reply,', 'lsi_method': ' stop_channels,is_alive,check_kernel_info_reply,flush,threadedkernelclient,', 'spm_method': ' ', 'text_summary': 'Shutdown all kernels. handle kernel info reply. This is run in the ioloop thread when the kernel info reply is received.', 'files_count': 4, 'files': ['threaded.py', 'channels.py', 'client.py', 'multikernelmanager.py'], 'execution_path_count': 16, 'function_id_to_name_file': {'725': 'stop_channels(threaded.py)', '732': 'is_alive(threaded.py)', '112': 'is_alive(channels.py)', '86': 'is_alive(channels.py)', '724': 'start_channels(threaded.py)', '722': '_check_kernel_info_reply(threaded.py)', '150': '_handle_kernel_info_reply(client.py)', '716': '__init__(threaded.py)', '387': 'shutdown_kernel(multikernelmanager.py)', '416': 'remove_kernel(multikernelmanager.py)', '713': 'IOLoopThread(threaded.py)', '720': 'start(threaded.py)', '714': 'ThreadedKernelClient(threaded.py)', '715': 'ThreadedZMQSocketChannel(threaded.py)', '125': 'HBChannel(channels.py)', '731': 'flush(threaded.py)', '727': '_flush(threaded.py)', '386': 'shutdown_all(multikernelmanager.py)', '413': 'list_kernel_ids(multikernelmanager.py)', '418': 'request_shutdown(multikernelmanager.py)', '402': 'cleanup_resources(multikernelmanager.py)'}}, {'key': 25, 'parent': 2636, 'tfidf_word': 'EP: 25, Name: __init__ &rarr; __init__', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2635, 'parent': 2636, 'tfidf_word': 'beating call close handle handler recv setup stop stream init ', 'tfidf_method': 'is_alive __init__ is_alive __init__ __init__ __init__ _handle_recv call_handlers is_alive setup_stream ', 'lda_word': ' beating,alive,init,close,stop,', 'lda_method': ' init,stop,close,is_beating,is_alive,', 'lsi_word': ' init,recv,stream,setup,handle,', 'lsi_method': ' init,call_handlers,setup_stream,handle_recv,stop,', 'spm_method': ' ', 'text_summary': 'This method is called in the ioloop thread when a message arrives.', 'files_count': 7, 'files': ['consoleapp.py', 'multikernelmanager.py', 'threaded.py', 'session.py', 'channels.py', 'managerabc.py', 'channelsabc.py'], 'execution_path_count': 10, 'function_id_to_name_file': {'215': '__init__(consoleapp.py)', '392': '__init__(multikernelmanager.py)', '726': '__init__(threaded.py)', '737': 'setup_stream(threaded.py)', '728': '_handle_recv(threaded.py)', '729': 'call_handlers(threaded.py)', '716': '__init__(threaded.py)', '453': '__init__(session.py)', '136': 'stop(channels.py)', '132': 'close(channels.py)', '133': 'is_beating(channels.py)', '412': 'is_alive(multikernelmanager.py)', '373': 'is_alive(managerabc.py)', '140': 'is_alive(channelsabc.py)', '112': 'is_alive(channels.py)', '732': 'is_alive(threaded.py)'}}, {'key': 2544, 'parent': 2556, 'tfidf_word': 'default signal clone subclass date raw line name permission code ', 'tfidf_method': 'test_display_data test_complete_request test_complete_reply test_same_version test_rename_type test_object_info_request test_object_info_reply_not_found test_object_info_reply test_kernel_info_reply send ', 'lda_word': ' test,kernel,adapt,tcp,run,', 'lda_method': ' session,test_tcp_cinfo,test_bad_unpack,localhost,run_cinfo,', 'lsi_word': ' test,kernel,adapt,connection,file,', 'lsi_method': ' adapt,test_complete_request,test_complete_reply,test_execute_request,test_same_version,', 'spm_method': ' ', 'text_summary': "Get a message from the iopub channel. Send a raw message via ident path. find a connection file, and return its absolute path. return ip for localhost (almost always 127.0.0.1)      find a connection file, and return its absolute path. return ip for localhost (almost always 127.0.0.1)   Ensure that a sequence of kernel startups doesn't break anything. Start the polling of the kernel. Stop the kernel polling. Get a message from the shell channel. Ensure that a sequence of kernel startups doesn't break anything. Check that a kernel name is valid. Ensure a datetime object has tzinfo.", 'files_count': 21, 'files': ['test_session.py', 'test_adapter.py', 'test_connect.py', 'connect.py', 'forward.py', 'threaded.py', 'test_manager.py', 'kernelspec.py', 'channels.py', 'test_jsonutil.py', 'session.py', 'jsonutil.py', 'test_kernelmanager.py', 'utils.py', 'test_kernelspec.py', 'signalkernel.py', 'test_multikernelmanager.py', 'localinterfaces.py', 'adapter.py', 'client.py', 'test_kernelapp.py'], 'execution_path_count': 106, 'function_id_to_name_file': {'684': 'test_bad_unpack(test_session.py)', '676': '_bad_unpacker(test_session.py)', '536': 'test_complete_request(test_adapter.py)', '517': 'adapt(test_adapter.py)', '562': 'test_find_connection_file_local(test_connect.py)', '189': 'find_connection_file(connect.py)', '492': 'handle(forward.py)', '730': 'close(threaded.py)', '493': 'SubHander(forward.py)', '490': 'Handler(forward.py)', '635': 'test_connection_file_real_path(test_manager.py)', '253': 'KernelSpec(kernelspec.py)', '718': 'close(threaded.py)', '132': 'close(channels.py)', '114': 'send(channels.py)', '88': 'send(channels.py)', '83': 'close(channels.py)', '109': 'close(channels.py)', '575': 'test_date_default(test_jsonutil.py)', '450': 'utcnow(session.py)', '241': 'date_default(jsonutil.py)', '240': '_ensure_tzinfo(jsonutil.py)', '597': 'test_subclasses(test_kernelmanager.py)', '703': 'AsyncKernelManagerWithCleanup(utils.py)', '595': 'test_signal_kernel_subprocesses(test_kernelmanager.py)', '598': 'execute(test_kernelmanager.py)', '702': 'AsyncKernelManagerSubclass(utils.py)', '611': 'test_start_parallel_process_kernels(test_kernelmanager.py)', '591': 'transport(test_kernelmanager.py)', '606': 'test_templated_kspec_env(test_kernelmanager.py)', '599': '_env_test_body(test_kernelmanager.py)', '607': 'execute(test_kernelmanager.py)', '612': 'test_start_parallel_thread_kernels(test_kernelmanager.py)', '604': 'test_signal_kernel_subprocesses(test_kernelmanager.py)', '608': 'execute(test_kernelmanager.py)', '586': 'env(test_kernelmanager.py)', '712': 'stop(utils.py)', '711': 'start(utils.py)', '705': 'test_env(utils.py)', '630': 'test_validate_kernel_name(test_kernelspec.py)', '257': '_is_valid_kernel_name(kernelspec.py)', '506': 'SignalTestApp(signalkernel.py)', '507': 'SignalTestKernel(signalkernel.py)', '627': 'test_remove_kernel_spec(test_kernelspec.py)', '617': '_install_sample_kernel(test_kernelspec.py)', '626': 'test_kernel_spec_priority(test_kernelspec.py)', '651': 'test_tcp_cinfo(test_multikernelmanager.py)', '640': '_run_cinfo(test_multikernelmanager.py)', '621': 'test_find_all_specs(test_kernelspec.py)', '622': 'test_find_kernel_specs(test_kernelspec.py)', '623': 'test_get_kernel_spec(test_kernelspec.py)', '619': 'tearDown(test_kernelspec.py)', '618': 'setUp(test_kernelspec.py)', '649': 'test_start_sequence_ipc_kernels(test_multikernelmanager.py)', '641': '_run_lifecycle(test_multikernelmanager.py)', '650': 'test_start_sequence_tcp_kernels(test_multikernelmanager.py)', '644': 'test_ipc_cinfo(test_multikernelmanager.py)', '315': 'localhost(localinterfaces.py)', '645': 'test_ipc_lifecycle(test_multikernelmanager.py)', '665': 'test_start_sequence_tcp_kernels(test_multikernelmanager.py)', '657': '_run_lifecycle(test_multikernelmanager.py)', '664': 'test_start_sequence_ipc_kernels(test_multikernelmanager.py)', '659': 'test_ipc_cinfo(test_multikernelmanager.py)', '656': '_run_cinfo(test_multikernelmanager.py)', '660': 'test_ipc_lifecycle(test_multikernelmanager.py)', '666': 'test_tcp_cinfo(test_multikernelmanager.py)', '668': 'test_tcp_lifecycle_with_kernel_id(test_multikernelmanager.py)', '569': 'test_secure_write(test_connect.py)', '573': 'check_user_only_permissions(test_connect.py)', '574': 'fetch_win32_permissions(test_connect.py)', '563': 'test_find_connection_file_relative(test_connect.py)', '561': 'test_find_connection_file_abspath(test_connect.py)', '560': 'test_find_connection_file(test_connect.py)', '565': 'test_load_connection_file_session_with_kn(test_connect.py)', '441': 'Session(session.py)', '539': 'test_input_request(test_adapter.py)', '564': 'test_load_connection_file_session(test_connect.py)', '537': 'test_display_data(test_adapter.py)', '540': 'test_inspect_reply(test_adapter.py)', '543': 'test_kernel_info_reply(test_adapter.py)', '542': 'test_inspect_request_token(test_adapter.py)', '535': 'test_complete_reply(test_adapter.py)', '541': 'test_inspect_request(test_adapter.py)', '538': 'test_execute_request(test_adapter.py)', '545': 'test_rename_type(test_adapter.py)', '544': 'test_no_adapt(test_adapter.py)', '546': 'test_same_version(test_adapter.py)', '514': 'V5toV4TestCase(test_adapter.py)', '512': 'AdapterTest(test_adapter.py)', '526': 'test_input_request(test_adapter.py)', '523': 'test_display_data(test_adapter.py)', '527': 'test_kernel_info_reply(test_adapter.py)', '530': 'test_object_info_reply_not_found(test_adapter.py)', '529': 'test_object_info_reply(test_adapter.py)', '531': 'test_object_info_request(test_adapter.py)', '521': 'test_complete_reply(test_adapter.py)', '522': 'test_complete_request(test_adapter.py)', '524': 'test_execute_reply(test_adapter.py)', '532': 'test_rename_type(test_adapter.py)', '525': 'test_execute_request(test_adapter.py)', '528': 'test_no_adapt(test_adapter.py)', '533': 'test_same_version(test_adapter.py)', '513': 'V4toV5TestCase(test_adapter.py)', '519': 'setUp(test_adapter.py)', '516': 'test_default_version(test_adapter.py)', '515': 'test_code_to_line_no_code(test_adapter.py)', '51': 'code_to_line(adapter.py)', '704': 'execute(utils.py)', '158': 'get_shell_msg(client.py)', '615': 'execute(test_kernelmanager.py)', '157': 'get_iopub_msg(client.py)', '710': '__exit__(utils.py)', '709': '__enter__(utils.py)', '580': 'test_kernelapp_lifecycle(test_kernelapp.py)', '579': '_launch(test_kernelapp.py)', '686': 'test_clone(test_session.py)', '473': 'clone(session.py)', '695': 'test_send_raw(test_session.py)', '481': 'send_raw(session.py)', '483': 'sign(session.py)', '689': 'test_datetimes_msgpack(test_session.py)', '475': 'feed_identities(session.py)', '690': 'test_datetimes_pickle(test_session.py)', '688': 'test_datetimes(test_session.py)', '683': 'test_bad_roundtrip(test_session.py)', '685': 'test_bad_unpacker(test_session.py)', '682': 'test_bad_packer(test_session.py)', '681': 'test_bad_pack(test_session.py)', '675': '_bad_packer(test_session.py)', '687': 'test_cull_digest_history(test_session.py)'}}, {'key': 2555, 'parent': 2556, 'tfidf_word': 'env digest complete comm close case zmq session send msg ', 'tfidf_method': 'NoSuchKernel msg_header utcnow msg_id test_comm_info test_history test_inspect test_kernel_info SessionTestCase reqrep ', 'lda_word': ' send,test,set,kernel,client,', 'lda_method': ' session,test_send,check_reply,send,setup,', 'lsi_word': ' test,session,reply,check,send,', 'lsi_method': ' check_reply,test_complete,test_history,test_inspect,test_shutdown,', 'spm_method': ' ', 'text_summary': 'test tracking messages. Split the identities from the rest of the message. Start the polling of the kernel. Stop the kernel polling. Get the hb channel object for this kernel. test that messages receive unique ids.', 'files_count': 9, 'files': ['test_session.py', 'session.py', 'channels.py', 'test_client.py', 'utils.py', 'kernelspec.py', 'client.py', 'connect.py', 'threaded.py'], 'execution_path_count': 35, 'function_id_to_name_file': {'700': 'test_zero_digest_history(test_session.py)', '441': 'Session(session.py)', '697': 'test_session_id(test_session.py)', '699': 'test_unique_msg_ids(test_session.py)', '445': 'msg_header(session.py)', '450': 'utcnow(session.py)', '698': 'test_tracking(test_session.py)', '680': 'test_args(test_session.py)', '694': 'test_send(test_session.py)', '114': 'send(channels.py)', '478': 'msg_id(session.py)', '88': 'send(channels.py)', '475': 'feed_identities(session.py)', '696': 'test_serialize(test_session.py)', '674': 'TestSession(test_session.py)', '673': 'SessionTestCase(test_session.py)', '678': 'setUp(test_session.py)', '556': 'test_shutdown(test_client.py)', '548': '_check_reply(test_client.py)', '550': 'test_comm_info(test_client.py)', '555': 'test_kernel_info(test_client.py)', '551': 'test_complete(test_client.py)', '554': 'test_inspect(test_client.py)', '553': 'test_history(test_client.py)', '549': 'setUp(test_client.py)', '712': 'stop(utils.py)', '255': 'NoSuchKernel(kernelspec.py)', '711': 'start(utils.py)', '705': 'test_env(utils.py)', '116': 'BlockingKernelClient(client.py)', '117': 'reqrep(client.py)', '124': 'wrapped(client.py)', '123': 'wait_for_ready(client.py)', '150': '_handle_kernel_info_reply(client.py)', '125': 'HBChannel(channels.py)', '104': 'wait_for_ready(client.py)', '102': 'hb_channel(client.py)', '196': '_make_url(connect.py)', '90': 'AsyncKernelClient(client.py)', '91': 'reqrep(client.py)', '105': 'wrapped(client.py)', '80': 'ZMQSocketChannel(channels.py)', '83': 'close(channels.py)', '154': 'control_channel(client.py)', '723': 'ioloop(threaded.py)', '160': 'hb_channel(client.py)', '171': 'stdin_channel(client.py)'}}, {'key': 480, 'parent': 2569, 'tfidf_word': 'EP: 480, Name: iopub_channel &rarr; _make_url', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 481, 'parent': 2569, 'tfidf_word': 'EP: 481, Name: iopub_channel &rarr; ioloop', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 478, 'parent': 2568, 'tfidf_word': 'EP: 478, Name: shell_channel &rarr; ioloop', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2567, 'parent': 2568, 'tfidf_word': 'cleanup connection del file key make path shell url interrupt ', 'tfidf_method': 'path_key start start cleanup_connection_file _make_url shell_channel start start send start ', 'lda_word': ' channel,make,url,shell,start,', 'lda_method': ' start,interrupt_kernel,send,del,shell_channel,', 'lsi_word': ' start,path,key,interrupt,make,', 'lsi_method': ' start,path_key,make_url,send_interrupt,send,', 'spm_method': ' ', 'text_summary': 'Sends an interrupt event using the specified handle. Start the polling of the kernel. Interrupts the kernel by sending it a signal.', 'files_count': 10, 'files': ['client.py', 'connect.py', 'manager.py', 'channels.py', 'win_interrupt.py', 'kernelspecapp.py', 'threaded.py', 'utils.py', 'channelsabc.py', 'restarter.py'], 'execution_path_count': 14, 'function_id_to_name_file': {'168': 'shell_channel(client.py)', '196': '_make_url(connect.py)', '328': 'interrupt_kernel(manager.py)', '114': 'send(channels.py)', '740': 'send_interrupt(win_interrupt.py)', '88': 'send(channels.py)', '334': '__del__(manager.py)', '200': 'cleanup_connection_file(connect.py)', '291': 'start(kernelspecapp.py)', '293': 'start(kernelspecapp.py)', '294': 'path_key(kernelspecapp.py)', '735': 'start(threaded.py)', '711': 'start(utils.py)', '720': 'start(threaded.py)', '141': 'start(channelsabc.py)', '432': 'start(restarter.py)', '288': 'start(kernelspecapp.py)', '89': 'start(channels.py)', '115': 'start(channels.py)'}}, {'key': 219, 'parent': 2593, 'tfidf_word': 'EP: 219, Name: start &rarr; start', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2592, 'parent': 2593, 'tfidf_word': 'id init json version message msg kernel install native spec ', 'tfidf_method': 'parse_command_line wrapped _only_once install_native_kernel_spec to_json to_dict install_native_kernel_spec _record_started kernel_info_reply _key_default ', 'lda_word': ' kernel,spec,native,install,parse,', 'lda_method': ' code_to_line,object_info_request,extract_oname_v4,new_auth,complete_request,', 'lsi_word': ' kernel,native,install,spec,line,', 'lsi_method': ' code_to_line,object_info_request,extract_oname_v4,complete_request,call,', 'spm_method': ' ', 'text_summary': '', 'files_count': 8, 'files': ['runapp.py', 'consoleapp.py', 'localinterfaces.py', 'adapter.py', 'kernelapp.py', 'test_kernelmanager.py', 'kernelspec.py', 'session.py'], 'execution_path_count': 21, 'function_id_to_name_file': {'438': 'parse_command_line(runapp.py)', '218': 'build_kernel_argv(consoleapp.py)', '308': '_only_once(localinterfaces.py)', '317': 'wrapped(localinterfaces.py)', '47': 'V4toV5(adapter.py)', '46': 'Adapter(adapter.py)', '77': 'object_info_request(adapter.py)', '51': 'code_to_line(adapter.py)', '52': 'extract_oname_v4(adapter.py)', '70': 'complete_request(adapter.py)', '75': 'kernel_info_reply(adapter.py)', '49': '_version_str_to_list(adapter.py)', '48': 'V5toV4(adapter.py)', '53': '__call__(adapter.py)', '54': 'handle_reply_status_error(adapter.py)', '57': 'update_msg_type(adapter.py)', '56': 'update_metadata(adapter.py)', '55': 'update_header(adapter.py)', '247': 'initialize(kernelapp.py)', '246': '_record_started(kernelapp.py)', '585': 'config(test_kernelmanager.py)', '262': 'install_native_kernel_spec(kernelspec.py)', '276': 'install_native_kernel_spec(kernelspec.py)', '265': 'to_json(kernelspec.py)', '264': 'to_dict(kernelspec.py)', '449': 'test_msg2obj(session.py)', '440': 'Message(session.py)', '453': '__init__(session.py)', '470': '_signature_scheme_changed(session.py)', '465': '_new_auth(session.py)', '463': '_key_default(session.py)', '447': 'new_id_bytes(session.py)', '462': '_key_changed(session.py)'}}, {'key': 102, 'parent': 2610, 'tfidf_word': 'EP: 102, Name: stop_channels &rarr; is_alive', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2609, 'parent': 2610, 'tfidf_word': 'handle list hb init shutdown start threaded reply flush info ', 'tfidf_method': 'ThreadedZMQSocketChannel is_alive request_shutdown list_kernel_ids cleanup_resources shutdown_kernel _handle_kernel_info_reply HBChannel flush is_alive ', 'lda_word': ' shutdown,cleanup,list,resource,init,', 'lda_method': ' threadedkernelclient,ioloopthread,hbchannel,start_channels,is_alive,', 'lsi_word': ' kernel,thread,start,reply,info,', 'lsi_method': ' start_channels,ioloopthread,handle_kernel_info_reply,check_kernel_info_reply,start,', 'spm_method': ' ', 'text_summary': 'Shutdown all kernels. handle kernel info reply. This is run in the ioloop thread when the kernel info reply is received.', 'files_count': 4, 'files': ['threaded.py', 'channels.py', 'client.py', 'multikernelmanager.py'], 'execution_path_count': 15, 'function_id_to_name_file': {'725': 'stop_channels(threaded.py)', '112': 'is_alive(channels.py)', '86': 'is_alive(channels.py)', '724': 'start_channels(threaded.py)', '722': '_check_kernel_info_reply(threaded.py)', '150': '_handle_kernel_info_reply(client.py)', '716': '__init__(threaded.py)', '387': 'shutdown_kernel(multikernelmanager.py)', '416': 'remove_kernel(multikernelmanager.py)', '713': 'IOLoopThread(threaded.py)', '720': 'start(threaded.py)', '714': 'ThreadedKernelClient(threaded.py)', '715': 'ThreadedZMQSocketChannel(threaded.py)', '125': 'HBChannel(channels.py)', '731': 'flush(threaded.py)', '727': '_flush(threaded.py)', '386': 'shutdown_all(multikernelmanager.py)', '413': 'list_kernel_ids(multikernelmanager.py)', '418': 'request_shutdown(multikernelmanager.py)', '402': 'cleanup_resources(multikernelmanager.py)'}}, {'key': 21, 'parent': 2635, 'tfidf_word': 'EP: 21, Name: __init__ &rarr; __init__', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2634, 'parent': 2635, 'tfidf_word': 'beating call close handle handler recv setup stop stream init ', 'tfidf_method': 'is_alive is_alive is_alive __init__ __init__ __init__ _handle_recv call_handlers is_alive setup_stream ', 'lda_word': ' alive,beating,init,stop,close,', 'lda_method': ' init,is_alive,is_beating,stop,close,', 'lsi_word': ' init,handler,recv,stream,setup,', 'lsi_method': ' init,setup_stream,handle_recv,call_handlers,close,', 'spm_method': ' ', 'text_summary': 'This method is called in the ioloop thread when a message arrives.', 'files_count': 7, 'files': ['consoleapp.py', 'threaded.py', 'session.py', 'channels.py', 'multikernelmanager.py', 'managerabc.py', 'channelsabc.py'], 'execution_path_count': 9, 'function_id_to_name_file': {'215': '__init__(consoleapp.py)', '726': '__init__(threaded.py)', '737': 'setup_stream(threaded.py)', '728': '_handle_recv(threaded.py)', '729': 'call_handlers(threaded.py)', '716': '__init__(threaded.py)', '453': '__init__(session.py)', '136': 'stop(channels.py)', '132': 'close(channels.py)', '133': 'is_beating(channels.py)', '412': 'is_alive(multikernelmanager.py)', '373': 'is_alive(managerabc.py)', '140': 'is_alive(channelsabc.py)', '112': 'is_alive(channels.py)', '732': 'is_alive(threaded.py)'}}, {'key': 2524, 'parent': 2544, 'tfidf_word': 'signal default date subclass raw clone permission line name code ', 'tfidf_method': 'test_complete_request test_complete_reply test_same_version test_rename_type test_object_info_request test_object_info_reply_not_found test_object_info_reply test_no_adapt test_kernelapp_lifecycle send ', 'lda_word': ' test,kernel,run,lifecycle,find,', 'lda_method': ' execute,handle,close,run_cinfo,test_tcp_cinfo,', 'lsi_word': ' test,kernel,adapt,file,connection,', 'lsi_method': ' adapt,test_rename_type,test_no_adapt,test_kernel_info_reply,test_same_version,', 'spm_method': ' ', 'text_summary': "Get a message from the iopub channel. Send a raw message via ident path. find a connection file, and return its absolute path. return ip for localhost (almost always 127.0.0.1)      find a connection file, and return its absolute path. return ip for localhost (almost always 127.0.0.1)   Ensure that a sequence of kernel startups doesn't break anything. Start the polling of the kernel. Stop the kernel polling. Get a message from the shell channel. Ensure that a sequence of kernel startups doesn't break anything. Check that a kernel name is valid. Ensure a datetime object has tzinfo.", 'files_count': 21, 'files': ['test_session.py', 'test_adapter.py', 'test_connect.py', 'connect.py', 'forward.py', 'threaded.py', 'test_manager.py', 'kernelspec.py', 'channels.py', 'test_jsonutil.py', 'session.py', 'jsonutil.py', 'test_kernelmanager.py', 'utils.py', 'test_kernelspec.py', 'signalkernel.py', 'test_multikernelmanager.py', 'localinterfaces.py', 'adapter.py', 'client.py', 'test_kernelapp.py'], 'execution_path_count': 103, 'function_id_to_name_file': {'684': 'test_bad_unpack(test_session.py)', '676': '_bad_unpacker(test_session.py)', '536': 'test_complete_request(test_adapter.py)', '517': 'adapt(test_adapter.py)', '562': 'test_find_connection_file_local(test_connect.py)', '189': 'find_connection_file(connect.py)', '492': 'handle(forward.py)', '730': 'close(threaded.py)', '493': 'SubHander(forward.py)', '490': 'Handler(forward.py)', '635': 'test_connection_file_real_path(test_manager.py)', '253': 'KernelSpec(kernelspec.py)', '718': 'close(threaded.py)', '132': 'close(channels.py)', '114': 'send(channels.py)', '88': 'send(channels.py)', '83': 'close(channels.py)', '109': 'close(channels.py)', '575': 'test_date_default(test_jsonutil.py)', '450': 'utcnow(session.py)', '241': 'date_default(jsonutil.py)', '240': '_ensure_tzinfo(jsonutil.py)', '597': 'test_subclasses(test_kernelmanager.py)', '703': 'AsyncKernelManagerWithCleanup(utils.py)', '595': 'test_signal_kernel_subprocesses(test_kernelmanager.py)', '598': 'execute(test_kernelmanager.py)', '702': 'AsyncKernelManagerSubclass(utils.py)', '611': 'test_start_parallel_process_kernels(test_kernelmanager.py)', '591': 'transport(test_kernelmanager.py)', '606': 'test_templated_kspec_env(test_kernelmanager.py)', '599': '_env_test_body(test_kernelmanager.py)', '607': 'execute(test_kernelmanager.py)', '612': 'test_start_parallel_thread_kernels(test_kernelmanager.py)', '604': 'test_signal_kernel_subprocesses(test_kernelmanager.py)', '608': 'execute(test_kernelmanager.py)', '586': 'env(test_kernelmanager.py)', '712': 'stop(utils.py)', '711': 'start(utils.py)', '705': 'test_env(utils.py)', '630': 'test_validate_kernel_name(test_kernelspec.py)', '257': '_is_valid_kernel_name(kernelspec.py)', '506': 'SignalTestApp(signalkernel.py)', '507': 'SignalTestKernel(signalkernel.py)', '627': 'test_remove_kernel_spec(test_kernelspec.py)', '617': '_install_sample_kernel(test_kernelspec.py)', '626': 'test_kernel_spec_priority(test_kernelspec.py)', '651': 'test_tcp_cinfo(test_multikernelmanager.py)', '640': '_run_cinfo(test_multikernelmanager.py)', '621': 'test_find_all_specs(test_kernelspec.py)', '622': 'test_find_kernel_specs(test_kernelspec.py)', '623': 'test_get_kernel_spec(test_kernelspec.py)', '619': 'tearDown(test_kernelspec.py)', '618': 'setUp(test_kernelspec.py)', '649': 'test_start_sequence_ipc_kernels(test_multikernelmanager.py)', '641': '_run_lifecycle(test_multikernelmanager.py)', '650': 'test_start_sequence_tcp_kernels(test_multikernelmanager.py)', '644': 'test_ipc_cinfo(test_multikernelmanager.py)', '315': 'localhost(localinterfaces.py)', '645': 'test_ipc_lifecycle(test_multikernelmanager.py)', '665': 'test_start_sequence_tcp_kernels(test_multikernelmanager.py)', '657': '_run_lifecycle(test_multikernelmanager.py)', '664': 'test_start_sequence_ipc_kernels(test_multikernelmanager.py)', '659': 'test_ipc_cinfo(test_multikernelmanager.py)', '656': '_run_cinfo(test_multikernelmanager.py)', '660': 'test_ipc_lifecycle(test_multikernelmanager.py)', '666': 'test_tcp_cinfo(test_multikernelmanager.py)', '668': 'test_tcp_lifecycle_with_kernel_id(test_multikernelmanager.py)', '569': 'test_secure_write(test_connect.py)', '573': 'check_user_only_permissions(test_connect.py)', '574': 'fetch_win32_permissions(test_connect.py)', '563': 'test_find_connection_file_relative(test_connect.py)', '561': 'test_find_connection_file_abspath(test_connect.py)', '560': 'test_find_connection_file(test_connect.py)', '565': 'test_load_connection_file_session_with_kn(test_connect.py)', '441': 'Session(session.py)', '539': 'test_input_request(test_adapter.py)', '564': 'test_load_connection_file_session(test_connect.py)', '537': 'test_display_data(test_adapter.py)', '540': 'test_inspect_reply(test_adapter.py)', '543': 'test_kernel_info_reply(test_adapter.py)', '542': 'test_inspect_request_token(test_adapter.py)', '535': 'test_complete_reply(test_adapter.py)', '541': 'test_inspect_request(test_adapter.py)', '538': 'test_execute_request(test_adapter.py)', '545': 'test_rename_type(test_adapter.py)', '544': 'test_no_adapt(test_adapter.py)', '546': 'test_same_version(test_adapter.py)', '514': 'V5toV4TestCase(test_adapter.py)', '512': 'AdapterTest(test_adapter.py)', '526': 'test_input_request(test_adapter.py)', '523': 'test_display_data(test_adapter.py)', '527': 'test_kernel_info_reply(test_adapter.py)', '530': 'test_object_info_reply_not_found(test_adapter.py)', '529': 'test_object_info_reply(test_adapter.py)', '531': 'test_object_info_request(test_adapter.py)', '521': 'test_complete_reply(test_adapter.py)', '522': 'test_complete_request(test_adapter.py)', '524': 'test_execute_reply(test_adapter.py)', '532': 'test_rename_type(test_adapter.py)', '525': 'test_execute_request(test_adapter.py)', '528': 'test_no_adapt(test_adapter.py)', '533': 'test_same_version(test_adapter.py)', '513': 'V4toV5TestCase(test_adapter.py)', '519': 'setUp(test_adapter.py)', '516': 'test_default_version(test_adapter.py)', '515': 'test_code_to_line_no_code(test_adapter.py)', '51': 'code_to_line(adapter.py)', '704': 'execute(utils.py)', '158': 'get_shell_msg(client.py)', '615': 'execute(test_kernelmanager.py)', '157': 'get_iopub_msg(client.py)', '710': '__exit__(utils.py)', '709': '__enter__(utils.py)', '580': 'test_kernelapp_lifecycle(test_kernelapp.py)', '579': '_launch(test_kernelapp.py)', '686': 'test_clone(test_session.py)', '473': 'clone(session.py)', '695': 'test_send_raw(test_session.py)', '481': 'send_raw(session.py)', '483': 'sign(session.py)', '689': 'test_datetimes_msgpack(test_session.py)', '475': 'feed_identities(session.py)', '690': 'test_datetimes_pickle(test_session.py)', '688': 'test_datetimes(test_session.py)', '683': 'test_bad_roundtrip(test_session.py)', '685': 'test_bad_unpacker(test_session.py)', '682': 'test_bad_packer(test_session.py)'}}, {'key': 2543, 'parent': 2544, 'tfidf_word': 'test pack session cull digest history packer bad ', 'tfidf_method': 'Session test_bad_pack _bad_packer test_cull_digest_history ', 'lda_word': ' bad,test,pack,packer,session,', 'lda_method': ' session,test_cull_digest_history,test_bad_pack,bad_packer,', 'lsi_word': ' bad,test,pack,session,packer,', 'lsi_method': ' test_bad_pack,session,bad_packer,test_cull_digest_history,', 'spm_method': ' ', 'text_summary': '', 'files_count': 2, 'files': ['test_session.py', 'session.py'], 'execution_path_count': 3, 'function_id_to_name_file': {'681': 'test_bad_pack(test_session.py)', '675': '_bad_packer(test_session.py)', '687': 'test_cull_digest_history(test_session.py)', '441': 'Session(session.py)'}}, {'key': 813, 'parent': 2555, 'tfidf_word': 'EP: 813, Name: test_zero_digest_history &rarr; Session', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2554, 'parent': 2555, 'tfidf_word': 'header env complete comm close case zmq session send msg ', 'tfidf_method': 'test_shutdown hb_channel msg_header utcnow msg_id test_complete test_history test_inspect NoSuchKernel reqrep ', 'lda_word': ' test,msg,feed,identity,header,', 'lda_method': ' blockingkernelclient,session,wrap,hbchannel,reqrep,', 'lsi_word': ' test,reply,session,check,send,', 'lsi_method': ' check_reply,test_complete,test_shutdown,test_kernel_info,test_inspect,', 'spm_method': ' ', 'text_summary': 'test tracking messages. Split the identities from the rest of the message. Start the polling of the kernel. Stop the kernel polling. Get the hb channel object for this kernel. test that messages receive unique ids.', 'files_count': 9, 'files': ['test_session.py', 'session.py', 'channels.py', 'test_client.py', 'utils.py', 'kernelspec.py', 'client.py', 'connect.py', 'threaded.py'], 'execution_path_count': 34, 'function_id_to_name_file': {'697': 'test_session_id(test_session.py)', '441': 'Session(session.py)', '699': 'test_unique_msg_ids(test_session.py)', '445': 'msg_header(session.py)', '450': 'utcnow(session.py)', '698': 'test_tracking(test_session.py)', '680': 'test_args(test_session.py)', '694': 'test_send(test_session.py)', '114': 'send(channels.py)', '478': 'msg_id(session.py)', '88': 'send(channels.py)', '475': 'feed_identities(session.py)', '696': 'test_serialize(test_session.py)', '674': 'TestSession(test_session.py)', '673': 'SessionTestCase(test_session.py)', '678': 'setUp(test_session.py)', '556': 'test_shutdown(test_client.py)', '548': '_check_reply(test_client.py)', '550': 'test_comm_info(test_client.py)', '555': 'test_kernel_info(test_client.py)', '551': 'test_complete(test_client.py)', '554': 'test_inspect(test_client.py)', '553': 'test_history(test_client.py)', '549': 'setUp(test_client.py)', '712': 'stop(utils.py)', '255': 'NoSuchKernel(kernelspec.py)', '711': 'start(utils.py)', '705': 'test_env(utils.py)', '116': 'BlockingKernelClient(client.py)', '117': 'reqrep(client.py)', '124': 'wrapped(client.py)', '123': 'wait_for_ready(client.py)', '150': '_handle_kernel_info_reply(client.py)', '125': 'HBChannel(channels.py)', '104': 'wait_for_ready(client.py)', '102': 'hb_channel(client.py)', '196': '_make_url(connect.py)', '90': 'AsyncKernelClient(client.py)', '91': 'reqrep(client.py)', '105': 'wrapped(client.py)', '80': 'ZMQSocketChannel(channels.py)', '83': 'close(channels.py)', '154': 'control_channel(client.py)', '723': 'ioloop(threaded.py)', '160': 'hb_channel(client.py)', '171': 'stdin_channel(client.py)'}}, {'key': 477, 'parent': 2567, 'tfidf_word': 'EP: 477, Name: shell_channel &rarr; _make_url', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2566, 'parent': 2567, 'tfidf_word': 'kernel send start cleanup connection del file key path interrupt ', 'tfidf_method': '__del__ send path_key start start cleanup_connection_file start start send start ', 'lda_word': ' connection,file,cleanup,del,start,', 'lda_method': ' start,cleanup_connection_file,del,interrupt_kernel,send,', 'lsi_word': ' start,key,path,interrupt,send,', 'lsi_method': ' start,path_key,interrupt_kernel,send,send_interrupt,', 'spm_method': ' ', 'text_summary': 'Start the polling of the kernel. Interrupts the kernel by sending it a signal.', 'files_count': 9, 'files': ['manager.py', 'channels.py', 'win_interrupt.py', 'connect.py', 'kernelspecapp.py', 'threaded.py', 'utils.py', 'channelsabc.py', 'restarter.py'], 'execution_path_count': 13, 'function_id_to_name_file': {'328': 'interrupt_kernel(manager.py)', '114': 'send(channels.py)', '740': 'send_interrupt(win_interrupt.py)', '88': 'send(channels.py)', '334': '__del__(manager.py)', '200': 'cleanup_connection_file(connect.py)', '291': 'start(kernelspecapp.py)', '293': 'start(kernelspecapp.py)', '294': 'path_key(kernelspecapp.py)', '735': 'start(threaded.py)', '711': 'start(utils.py)', '720': 'start(threaded.py)', '141': 'start(channelsabc.py)', '432': 'start(restarter.py)', '288': 'start(kernelspecapp.py)', '89': 'start(channels.py)', '115': 'start(channels.py)'}}, {'key': 161, 'parent': 2592, 'tfidf_word': 'EP: 161, Name: parse_command_line &rarr; build_kernel_argv', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2591, 'parent': 2592, 'tfidf_word': 'json list version metadata id wrap kernel native spec install ', 'tfidf_method': '_key_default _key_changed to_dict __init__ to_json new_id_bytes Message wrapped _signature_scheme_changed _record_started ', 'lda_word': ' install,native,kernel,spec,auth,', 'lda_method': ' new_auth,test_msg2obj,version_str_to_list,signature_scheme_changed,new_id_bytes,', 'lsi_word': ' kernel,native,spec,install,info,', 'lsi_method': ' code_to_line,object_info_request,extract_oname_v4,complete_request,call,', 'spm_method': ' ', 'text_summary': '', 'files_count': 6, 'files': ['localinterfaces.py', 'adapter.py', 'kernelapp.py', 'test_kernelmanager.py', 'kernelspec.py', 'session.py'], 'execution_path_count': 20, 'function_id_to_name_file': {'308': '_only_once(localinterfaces.py)', '317': 'wrapped(localinterfaces.py)', '47': 'V4toV5(adapter.py)', '46': 'Adapter(adapter.py)', '77': 'object_info_request(adapter.py)', '51': 'code_to_line(adapter.py)', '52': 'extract_oname_v4(adapter.py)', '70': 'complete_request(adapter.py)', '75': 'kernel_info_reply(adapter.py)', '49': '_version_str_to_list(adapter.py)', '48': 'V5toV4(adapter.py)', '53': '__call__(adapter.py)', '54': 'handle_reply_status_error(adapter.py)', '57': 'update_msg_type(adapter.py)', '56': 'update_metadata(adapter.py)', '55': 'update_header(adapter.py)', '247': 'initialize(kernelapp.py)', '246': '_record_started(kernelapp.py)', '585': 'config(test_kernelmanager.py)', '262': 'install_native_kernel_spec(kernelspec.py)', '276': 'install_native_kernel_spec(kernelspec.py)', '265': 'to_json(kernelspec.py)', '264': 'to_dict(kernelspec.py)', '449': 'test_msg2obj(session.py)', '440': 'Message(session.py)', '453': '__init__(session.py)', '470': '_signature_scheme_changed(session.py)', '465': '_new_auth(session.py)', '463': '_key_default(session.py)', '447': 'new_id_bytes(session.py)', '462': '_key_changed(session.py)'}}, {'key': 101, 'parent': 2609, 'tfidf_word': 'EP: 101, Name: stop_channels &rarr; is_alive', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2608, 'parent': 2609, 'tfidf_word': 'handle cleanup check zmq shutdown start threaded info reply flush ', 'tfidf_method': '__init__ HBChannel flush request_shutdown list_kernel_ids cleanup_resources shutdown_kernel _handle_kernel_info_reply ThreadedZMQSocketChannel is_alive ', 'lda_word': ' shutdown,request,kernel,flush,channels,', 'lda_method': ' shutdown_all,request_shutdown,start_channels,threadedkernelclient,ioloopthread,', 'lsi_word': ' kernel,thread,start,info,reply,', 'lsi_method': ' start_channels,ioloopthread,check_kernel_info_reply,handle_kernel_info_reply,start,', 'spm_method': ' ', 'text_summary': 'Shutdown all kernels. handle kernel info reply. This is run in the ioloop thread when the kernel info reply is received.', 'files_count': 4, 'files': ['threaded.py', 'channels.py', 'client.py', 'multikernelmanager.py'], 'execution_path_count': 14, 'function_id_to_name_file': {'725': 'stop_channels(threaded.py)', '86': 'is_alive(channels.py)', '724': 'start_channels(threaded.py)', '722': '_check_kernel_info_reply(threaded.py)', '150': '_handle_kernel_info_reply(client.py)', '716': '__init__(threaded.py)', '387': 'shutdown_kernel(multikernelmanager.py)', '416': 'remove_kernel(multikernelmanager.py)', '713': 'IOLoopThread(threaded.py)', '720': 'start(threaded.py)', '714': 'ThreadedKernelClient(threaded.py)', '715': 'ThreadedZMQSocketChannel(threaded.py)', '125': 'HBChannel(channels.py)', '731': 'flush(threaded.py)', '727': '_flush(threaded.py)', '386': 'shutdown_all(multikernelmanager.py)', '413': 'list_kernel_ids(multikernelmanager.py)', '418': 'request_shutdown(multikernelmanager.py)', '402': 'cleanup_resources(multikernelmanager.py)'}}, {'key': 20, 'parent': 2634, 'tfidf_word': 'EP: 20, Name: __init__ &rarr; __init__ &rarr; setup_stream &rarr; _handle_recv &rarr; call_handlers', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2633, 'parent': 2634, 'tfidf_word': 'alive beating close stop init ', 'tfidf_method': '__init__ is_alive close stop is_alive is_alive is_alive __init__ __init__ is_alive ', 'lda_word': ' alive,beating,init,close,stop,', 'lda_method': ' stop,close,is_beating,is_alive,init,', 'lsi_word': ' alive,beating,init,close,stop,', 'lsi_method': ' is_alive,is_beating,init,close,stop,', 'spm_method': ' ', 'text_summary': 'Empty', 'files_count': 7, 'files': ['consoleapp.py', 'threaded.py', 'session.py', 'channels.py', 'multikernelmanager.py', 'managerabc.py', 'channelsabc.py'], 'execution_path_count': 8, 'function_id_to_name_file': {'215': '__init__(consoleapp.py)', '716': '__init__(threaded.py)', '453': '__init__(session.py)', '136': 'stop(channels.py)', '132': 'close(channels.py)', '133': 'is_beating(channels.py)', '412': 'is_alive(multikernelmanager.py)', '373': 'is_alive(managerabc.py)', '140': 'is_alive(channelsabc.py)', '112': 'is_alive(channels.py)', '732': 'is_alive(threaded.py)'}}, {'key': 828, 'parent': 2524, 'tfidf_word': 'EP: 828, Name: test_bad_unpack &rarr; _bad_unpacker', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2515, 'parent': 2524, 'tfidf_word': 'signal default clone raw subclass date line permission name code ', 'tfidf_method': 'test_complete_request test_complete_reply test_same_version test_rename_type test_object_info_request test_object_info_reply_not_found test_object_info_reply test_no_adapt test_inspect_request send ', 'lda_word': ' test,session,lifecycle,default,bad,', 'lda_method': ' execute,adapt,run_cinfo,test_tcp_cinfo,test_rename_type,', 'lsi_word': ' test,kernel,adapt,file,connection,', 'lsi_method': ' adapt,test_complete_request,test_input_request,test_display_data,test_same_version,', 'spm_method': ' ', 'text_summary': "Get a message from the iopub channel. Send a raw message via ident path. find a connection file, and return its absolute path. return ip for localhost (almost always 127.0.0.1)      find a connection file, and return its absolute path. return ip for localhost (almost always 127.0.0.1)   Ensure that a sequence of kernel startups doesn't break anything. Start the polling of the kernel. Stop the kernel polling. Get a message from the shell channel. Ensure that a sequence of kernel startups doesn't break anything. Check that a kernel name is valid. Ensure a datetime object has tzinfo.", 'files_count': 21, 'files': ['test_adapter.py', 'test_connect.py', 'connect.py', 'forward.py', 'threaded.py', 'test_manager.py', 'kernelspec.py', 'channels.py', 'test_jsonutil.py', 'session.py', 'jsonutil.py', 'test_kernelmanager.py', 'utils.py', 'test_kernelspec.py', 'signalkernel.py', 'test_multikernelmanager.py', 'localinterfaces.py', 'adapter.py', 'client.py', 'test_kernelapp.py', 'test_session.py'], 'execution_path_count': 102, 'function_id_to_name_file': {'536': 'test_complete_request(test_adapter.py)', '517': 'adapt(test_adapter.py)', '562': 'test_find_connection_file_local(test_connect.py)', '189': 'find_connection_file(connect.py)', '492': 'handle(forward.py)', '730': 'close(threaded.py)', '493': 'SubHander(forward.py)', '490': 'Handler(forward.py)', '635': 'test_connection_file_real_path(test_manager.py)', '253': 'KernelSpec(kernelspec.py)', '718': 'close(threaded.py)', '132': 'close(channels.py)', '114': 'send(channels.py)', '88': 'send(channels.py)', '83': 'close(channels.py)', '109': 'close(channels.py)', '575': 'test_date_default(test_jsonutil.py)', '450': 'utcnow(session.py)', '241': 'date_default(jsonutil.py)', '240': '_ensure_tzinfo(jsonutil.py)', '597': 'test_subclasses(test_kernelmanager.py)', '703': 'AsyncKernelManagerWithCleanup(utils.py)', '595': 'test_signal_kernel_subprocesses(test_kernelmanager.py)', '598': 'execute(test_kernelmanager.py)', '702': 'AsyncKernelManagerSubclass(utils.py)', '611': 'test_start_parallel_process_kernels(test_kernelmanager.py)', '591': 'transport(test_kernelmanager.py)', '606': 'test_templated_kspec_env(test_kernelmanager.py)', '599': '_env_test_body(test_kernelmanager.py)', '607': 'execute(test_kernelmanager.py)', '612': 'test_start_parallel_thread_kernels(test_kernelmanager.py)', '604': 'test_signal_kernel_subprocesses(test_kernelmanager.py)', '608': 'execute(test_kernelmanager.py)', '586': 'env(test_kernelmanager.py)', '712': 'stop(utils.py)', '711': 'start(utils.py)', '705': 'test_env(utils.py)', '630': 'test_validate_kernel_name(test_kernelspec.py)', '257': '_is_valid_kernel_name(kernelspec.py)', '506': 'SignalTestApp(signalkernel.py)', '507': 'SignalTestKernel(signalkernel.py)', '627': 'test_remove_kernel_spec(test_kernelspec.py)', '617': '_install_sample_kernel(test_kernelspec.py)', '626': 'test_kernel_spec_priority(test_kernelspec.py)', '651': 'test_tcp_cinfo(test_multikernelmanager.py)', '640': '_run_cinfo(test_multikernelmanager.py)', '621': 'test_find_all_specs(test_kernelspec.py)', '622': 'test_find_kernel_specs(test_kernelspec.py)', '623': 'test_get_kernel_spec(test_kernelspec.py)', '619': 'tearDown(test_kernelspec.py)', '618': 'setUp(test_kernelspec.py)', '649': 'test_start_sequence_ipc_kernels(test_multikernelmanager.py)', '641': '_run_lifecycle(test_multikernelmanager.py)', '650': 'test_start_sequence_tcp_kernels(test_multikernelmanager.py)', '644': 'test_ipc_cinfo(test_multikernelmanager.py)', '315': 'localhost(localinterfaces.py)', '645': 'test_ipc_lifecycle(test_multikernelmanager.py)', '665': 'test_start_sequence_tcp_kernels(test_multikernelmanager.py)', '657': '_run_lifecycle(test_multikernelmanager.py)', '664': 'test_start_sequence_ipc_kernels(test_multikernelmanager.py)', '659': 'test_ipc_cinfo(test_multikernelmanager.py)', '656': '_run_cinfo(test_multikernelmanager.py)', '660': 'test_ipc_lifecycle(test_multikernelmanager.py)', '666': 'test_tcp_cinfo(test_multikernelmanager.py)', '668': 'test_tcp_lifecycle_with_kernel_id(test_multikernelmanager.py)', '569': 'test_secure_write(test_connect.py)', '573': 'check_user_only_permissions(test_connect.py)', '574': 'fetch_win32_permissions(test_connect.py)', '563': 'test_find_connection_file_relative(test_connect.py)', '561': 'test_find_connection_file_abspath(test_connect.py)', '560': 'test_find_connection_file(test_connect.py)', '565': 'test_load_connection_file_session_with_kn(test_connect.py)', '441': 'Session(session.py)', '539': 'test_input_request(test_adapter.py)', '564': 'test_load_connection_file_session(test_connect.py)', '537': 'test_display_data(test_adapter.py)', '540': 'test_inspect_reply(test_adapter.py)', '543': 'test_kernel_info_reply(test_adapter.py)', '542': 'test_inspect_request_token(test_adapter.py)', '535': 'test_complete_reply(test_adapter.py)', '541': 'test_inspect_request(test_adapter.py)', '538': 'test_execute_request(test_adapter.py)', '545': 'test_rename_type(test_adapter.py)', '544': 'test_no_adapt(test_adapter.py)', '546': 'test_same_version(test_adapter.py)', '514': 'V5toV4TestCase(test_adapter.py)', '512': 'AdapterTest(test_adapter.py)', '526': 'test_input_request(test_adapter.py)', '523': 'test_display_data(test_adapter.py)', '527': 'test_kernel_info_reply(test_adapter.py)', '530': 'test_object_info_reply_not_found(test_adapter.py)', '529': 'test_object_info_reply(test_adapter.py)', '531': 'test_object_info_request(test_adapter.py)', '521': 'test_complete_reply(test_adapter.py)', '522': 'test_complete_request(test_adapter.py)', '524': 'test_execute_reply(test_adapter.py)', '532': 'test_rename_type(test_adapter.py)', '525': 'test_execute_request(test_adapter.py)', '528': 'test_no_adapt(test_adapter.py)', '533': 'test_same_version(test_adapter.py)', '513': 'V4toV5TestCase(test_adapter.py)', '519': 'setUp(test_adapter.py)', '516': 'test_default_version(test_adapter.py)', '515': 'test_code_to_line_no_code(test_adapter.py)', '51': 'code_to_line(adapter.py)', '704': 'execute(utils.py)', '158': 'get_shell_msg(client.py)', '615': 'execute(test_kernelmanager.py)', '157': 'get_iopub_msg(client.py)', '710': '__exit__(utils.py)', '709': '__enter__(utils.py)', '580': 'test_kernelapp_lifecycle(test_kernelapp.py)', '579': '_launch(test_kernelapp.py)', '686': 'test_clone(test_session.py)', '473': 'clone(session.py)', '695': 'test_send_raw(test_session.py)', '481': 'send_raw(session.py)', '483': 'sign(session.py)', '689': 'test_datetimes_msgpack(test_session.py)', '475': 'feed_identities(session.py)', '690': 'test_datetimes_pickle(test_session.py)', '688': 'test_datetimes(test_session.py)', '683': 'test_bad_roundtrip(test_session.py)', '685': 'test_bad_unpacker(test_session.py)', '684': 'test_bad_unpack(test_session.py)', '682': 'test_bad_packer(test_session.py)'}}, {'key': 824, 'parent': 2543, 'tfidf_word': 'EP: 824, Name: test_bad_pack &rarr; _bad_packer', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2542, 'parent': 2543, 'tfidf_word': 'session test bad cull digest history pack ', 'tfidf_method': 'Session test_bad_pack test_cull_digest_history ', 'lda_word': ' session,cull,test,history,digest,', 'lda_method': ' session,test_bad_pack,test_cull_digest_history,', 'lsi_word': ' test,session,cull,digest,history,', 'lsi_method': ' session,test_cull_digest_history,test_bad_pack,', 'spm_method': ' ', 'text_summary': '', 'files_count': 2, 'files': ['test_session.py', 'session.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'687': 'test_cull_digest_history(test_session.py)', '441': 'Session(session.py)', '681': 'test_bad_pack(test_session.py)'}}, {'key': 809, 'parent': 2554, 'tfidf_word': 'EP: 809, Name: test_session_id &rarr; Session', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2553, 'parent': 2554, 'tfidf_word': 'header env complete comm close case zmq send session msg ', 'tfidf_method': 'test_shutdown hb_channel msg_header utcnow msg_id test_complete test_history test_inspect NoSuchKernel reqrep ', 'lda_word': ' feed,identity,test,stdin,ioloop,', 'lda_method': ' check_reply,make_url,hb_channel,test_comm_info,zmqsocketchannel,', 'lsi_word': ' test,reply,check,send,session,', 'lsi_method': ' check_reply,test_comm_info,test_history,test_inspect,test_shutdown,', 'spm_method': ' ', 'text_summary': 'test tracking messages. Split the identities from the rest of the message. Start the polling of the kernel. Stop the kernel polling. Get the hb channel object for this kernel. test that messages receive unique ids.', 'files_count': 9, 'files': ['test_session.py', 'session.py', 'channels.py', 'test_client.py', 'utils.py', 'kernelspec.py', 'client.py', 'connect.py', 'threaded.py'], 'execution_path_count': 33, 'function_id_to_name_file': {'699': 'test_unique_msg_ids(test_session.py)', '445': 'msg_header(session.py)', '450': 'utcnow(session.py)', '698': 'test_tracking(test_session.py)', '441': 'Session(session.py)', '680': 'test_args(test_session.py)', '694': 'test_send(test_session.py)', '114': 'send(channels.py)', '478': 'msg_id(session.py)', '88': 'send(channels.py)', '475': 'feed_identities(session.py)', '696': 'test_serialize(test_session.py)', '674': 'TestSession(test_session.py)', '673': 'SessionTestCase(test_session.py)', '678': 'setUp(test_session.py)', '556': 'test_shutdown(test_client.py)', '548': '_check_reply(test_client.py)', '550': 'test_comm_info(test_client.py)', '555': 'test_kernel_info(test_client.py)', '551': 'test_complete(test_client.py)', '554': 'test_inspect(test_client.py)', '553': 'test_history(test_client.py)', '549': 'setUp(test_client.py)', '712': 'stop(utils.py)', '255': 'NoSuchKernel(kernelspec.py)', '711': 'start(utils.py)', '705': 'test_env(utils.py)', '116': 'BlockingKernelClient(client.py)', '117': 'reqrep(client.py)', '124': 'wrapped(client.py)', '123': 'wait_for_ready(client.py)', '150': '_handle_kernel_info_reply(client.py)', '125': 'HBChannel(channels.py)', '104': 'wait_for_ready(client.py)', '102': 'hb_channel(client.py)', '196': '_make_url(connect.py)', '90': 'AsyncKernelClient(client.py)', '91': 'reqrep(client.py)', '105': 'wrapped(client.py)', '80': 'ZMQSocketChannel(channels.py)', '83': 'close(channels.py)', '154': 'control_channel(client.py)', '723': 'ioloop(threaded.py)', '160': 'hb_channel(client.py)', '171': 'stdin_channel(client.py)'}}, {'key': 354, 'parent': 2566, 'tfidf_word': 'EP: 354, Name: interrupt_kernel &rarr; send', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2565, 'parent': 2566, 'tfidf_word': 'start kernel send cleanup connection del file key path interrupt ', 'tfidf_method': 'start path_key __del__ start start start start send_interrupt send start ', 'lda_word': ' interrupt,send,kernel,start,key,', 'lda_method': ' start,send,interrupt_kernel,del,send_interrupt,', 'lsi_word': ' start,key,path,send,kernel,', 'lsi_method': ' start,path_key,del,send_interrupt,interrupt_kernel,', 'spm_method': ' ', 'text_summary': 'Start the polling of the kernel. Interrupts the kernel by sending it a signal.', 'files_count': 9, 'files': ['manager.py', 'win_interrupt.py', 'channels.py', 'connect.py', 'kernelspecapp.py', 'threaded.py', 'utils.py', 'channelsabc.py', 'restarter.py'], 'execution_path_count': 12, 'function_id_to_name_file': {'328': 'interrupt_kernel(manager.py)', '740': 'send_interrupt(win_interrupt.py)', '88': 'send(channels.py)', '334': '__del__(manager.py)', '200': 'cleanup_connection_file(connect.py)', '291': 'start(kernelspecapp.py)', '293': 'start(kernelspecapp.py)', '294': 'path_key(kernelspecapp.py)', '735': 'start(threaded.py)', '711': 'start(utils.py)', '720': 'start(threaded.py)', '141': 'start(channelsabc.py)', '432': 'start(restarter.py)', '288': 'start(kernelspecapp.py)', '89': 'start(channels.py)', '115': 'start(channels.py)'}}, {'key': 137, 'parent': 2591, 'tfidf_word': 'EP: 137, Name: _only_once &rarr; wrapped', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2590, 'parent': 2591, 'tfidf_word': 'id init json list v5to metadata kernel install spec native ', 'tfidf_method': '_key_changed __init__ new_id_bytes Message install_native_kernel_spec to_json to_dict install_native_kernel_spec _signature_scheme_changed V4toV5 ', 'lda_word': ' call,reply,handle,status,error,', 'lda_method': ' adapter,code_to_line,init,v5tov4,complete_request,', 'lsi_word': ' kernel,install,native,spec,info,', 'lsi_method': ' code_to_line,object_info_request,extract_oname_v4,complete_request,call,', 'spm_method': ' ', 'text_summary': '', 'files_count': 5, 'files': ['adapter.py', 'kernelapp.py', 'test_kernelmanager.py', 'kernelspec.py', 'session.py'], 'execution_path_count': 19, 'function_id_to_name_file': {'47': 'V4toV5(adapter.py)', '46': 'Adapter(adapter.py)', '77': 'object_info_request(adapter.py)', '51': 'code_to_line(adapter.py)', '52': 'extract_oname_v4(adapter.py)', '70': 'complete_request(adapter.py)', '75': 'kernel_info_reply(adapter.py)', '49': '_version_str_to_list(adapter.py)', '48': 'V5toV4(adapter.py)', '53': '__call__(adapter.py)', '54': 'handle_reply_status_error(adapter.py)', '57': 'update_msg_type(adapter.py)', '56': 'update_metadata(adapter.py)', '55': 'update_header(adapter.py)', '247': 'initialize(kernelapp.py)', '246': '_record_started(kernelapp.py)', '585': 'config(test_kernelmanager.py)', '262': 'install_native_kernel_spec(kernelspec.py)', '276': 'install_native_kernel_spec(kernelspec.py)', '265': 'to_json(kernelspec.py)', '264': 'to_dict(kernelspec.py)', '449': 'test_msg2obj(session.py)', '440': 'Message(session.py)', '453': '__init__(session.py)', '470': '_signature_scheme_changed(session.py)', '465': '_new_auth(session.py)', '463': '_key_default(session.py)', '447': 'new_id_bytes(session.py)', '462': '_key_changed(session.py)'}}, {'key': 99, 'parent': 2608, 'tfidf_word': 'EP: 99, Name: stop_channels &rarr; is_alive', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2607, 'parent': 2608, 'tfidf_word': 'zmq list handle init shutdown start threaded info flush reply ', 'tfidf_method': '__init__ ThreadedZMQSocketChannel HBChannel request_shutdown list_kernel_ids cleanup_resources shutdown_kernel _handle_kernel_info_reply _flush flush ', 'lda_word': ' start,channels,io,loop,cleanup,', 'lda_method': ' start_channels,remove_kernel,shutdown_all,handle_kernel_info_reply,check_kernel_info_reply,', 'lsi_word': ' kernel,thread,start,reply,info,', 'lsi_method': ' start_channels,ioloopthread,handle_kernel_info_reply,check_kernel_info_reply,init,', 'spm_method': ' ', 'text_summary': 'Shutdown all kernels. handle kernel info reply. This is run in the ioloop thread when the kernel info reply is received.', 'files_count': 4, 'files': ['threaded.py', 'client.py', 'multikernelmanager.py', 'channels.py'], 'execution_path_count': 13, 'function_id_to_name_file': {'724': 'start_channels(threaded.py)', '722': '_check_kernel_info_reply(threaded.py)', '150': '_handle_kernel_info_reply(client.py)', '716': '__init__(threaded.py)', '387': 'shutdown_kernel(multikernelmanager.py)', '416': 'remove_kernel(multikernelmanager.py)', '713': 'IOLoopThread(threaded.py)', '720': 'start(threaded.py)', '714': 'ThreadedKernelClient(threaded.py)', '715': 'ThreadedZMQSocketChannel(threaded.py)', '125': 'HBChannel(channels.py)', '731': 'flush(threaded.py)', '727': '_flush(threaded.py)', '386': 'shutdown_all(multikernelmanager.py)', '413': 'list_kernel_ids(multikernelmanager.py)', '418': 'request_shutdown(multikernelmanager.py)', '402': 'cleanup_resources(multikernelmanager.py)'}}, {'key': 19, 'parent': 2633, 'tfidf_word': 'EP: 19, Name: __init__ &rarr; __init__', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2632, 'parent': 2633, 'tfidf_word': 'alive beating close stop init ', 'tfidf_method': 'is_beating is_alive close stop is_alive __init__ is_alive is_alive __init__ is_alive ', 'lda_word': ' init,beating,alive,stop,close,', 'lda_method': ' is_beating,is_alive,init,close,stop,', 'lsi_word': ' beating,alive,init,close,stop,', 'lsi_method': ' is_alive,is_beating,init,stop,close,', 'spm_method': ' ', 'text_summary': 'Empty', 'files_count': 7, 'files': ['consoleapp.py', 'session.py', 'channels.py', 'multikernelmanager.py', 'managerabc.py', 'channelsabc.py', 'threaded.py'], 'execution_path_count': 7, 'function_id_to_name_file': {'215': '__init__(consoleapp.py)', '453': '__init__(session.py)', '136': 'stop(channels.py)', '132': 'close(channels.py)', '133': 'is_beating(channels.py)', '412': 'is_alive(multikernelmanager.py)', '373': 'is_alive(managerabc.py)', '140': 'is_alive(channelsabc.py)', '112': 'is_alive(channels.py)', '732': 'is_alive(threaded.py)'}}, {'key': 2503, 'parent': 2515, 'tfidf_word': 'find cinfo env signal subclass default session date permission name ', 'tfidf_method': 'test_secure_write test_load_connection_file_session_with_kn test_load_connection_file_session test_find_connection_file_relative test_find_connection_file_local test_find_connection_file_abspath test_find_connection_file test_kernel_info_reply execute send ', 'lda_word': ' test,cinfo,find,file,connection,', 'lda_method': ' run_cinfo,test_tcp_cinfo,localhost,test_ipc_cinfo,env,', 'lsi_word': ' test,kernel,file,connection,find,', 'lsi_method': ' handle,close,send,test_complete_request,install_sample_kernel,', 'spm_method': ' ', 'text_summary': "find a connection file, and return its absolute path. return ip for localhost (almost always 127.0.0.1)      find a connection file, and return its absolute path. return ip for localhost (almost always 127.0.0.1)   Ensure that a sequence of kernel startups doesn't break anything. Ensure that a sequence of kernel startups doesn't break anything. Check that a kernel name is valid. Ensure a datetime object has tzinfo.", 'files_count': 17, 'files': ['test_adapter.py', 'test_connect.py', 'connect.py', 'forward.py', 'threaded.py', 'test_manager.py', 'kernelspec.py', 'channels.py', 'test_jsonutil.py', 'session.py', 'jsonutil.py', 'test_kernelmanager.py', 'utils.py', 'test_kernelspec.py', 'signalkernel.py', 'test_multikernelmanager.py', 'localinterfaces.py'], 'execution_path_count': 60, 'function_id_to_name_file': {'536': 'test_complete_request(test_adapter.py)', '517': 'adapt(test_adapter.py)', '562': 'test_find_connection_file_local(test_connect.py)', '189': 'find_connection_file(connect.py)', '492': 'handle(forward.py)', '730': 'close(threaded.py)', '493': 'SubHander(forward.py)', '490': 'Handler(forward.py)', '635': 'test_connection_file_real_path(test_manager.py)', '253': 'KernelSpec(kernelspec.py)', '718': 'close(threaded.py)', '132': 'close(channels.py)', '114': 'send(channels.py)', '88': 'send(channels.py)', '83': 'close(channels.py)', '109': 'close(channels.py)', '575': 'test_date_default(test_jsonutil.py)', '450': 'utcnow(session.py)', '241': 'date_default(jsonutil.py)', '240': '_ensure_tzinfo(jsonutil.py)', '597': 'test_subclasses(test_kernelmanager.py)', '703': 'AsyncKernelManagerWithCleanup(utils.py)', '595': 'test_signal_kernel_subprocesses(test_kernelmanager.py)', '598': 'execute(test_kernelmanager.py)', '702': 'AsyncKernelManagerSubclass(utils.py)', '611': 'test_start_parallel_process_kernels(test_kernelmanager.py)', '591': 'transport(test_kernelmanager.py)', '606': 'test_templated_kspec_env(test_kernelmanager.py)', '599': '_env_test_body(test_kernelmanager.py)', '607': 'execute(test_kernelmanager.py)', '612': 'test_start_parallel_thread_kernels(test_kernelmanager.py)', '604': 'test_signal_kernel_subprocesses(test_kernelmanager.py)', '608': 'execute(test_kernelmanager.py)', '586': 'env(test_kernelmanager.py)', '712': 'stop(utils.py)', '711': 'start(utils.py)', '705': 'test_env(utils.py)', '630': 'test_validate_kernel_name(test_kernelspec.py)', '257': '_is_valid_kernel_name(kernelspec.py)', '506': 'SignalTestApp(signalkernel.py)', '507': 'SignalTestKernel(signalkernel.py)', '627': 'test_remove_kernel_spec(test_kernelspec.py)', '617': '_install_sample_kernel(test_kernelspec.py)', '626': 'test_kernel_spec_priority(test_kernelspec.py)', '651': 'test_tcp_cinfo(test_multikernelmanager.py)', '640': '_run_cinfo(test_multikernelmanager.py)', '621': 'test_find_all_specs(test_kernelspec.py)', '622': 'test_find_kernel_specs(test_kernelspec.py)', '623': 'test_get_kernel_spec(test_kernelspec.py)', '619': 'tearDown(test_kernelspec.py)', '618': 'setUp(test_kernelspec.py)', '649': 'test_start_sequence_ipc_kernels(test_multikernelmanager.py)', '641': '_run_lifecycle(test_multikernelmanager.py)', '650': 'test_start_sequence_tcp_kernels(test_multikernelmanager.py)', '644': 'test_ipc_cinfo(test_multikernelmanager.py)', '315': 'localhost(localinterfaces.py)', '645': 'test_ipc_lifecycle(test_multikernelmanager.py)', '665': 'test_start_sequence_tcp_kernels(test_multikernelmanager.py)', '657': '_run_lifecycle(test_multikernelmanager.py)', '664': 'test_start_sequence_ipc_kernels(test_multikernelmanager.py)', '659': 'test_ipc_cinfo(test_multikernelmanager.py)', '656': '_run_cinfo(test_multikernelmanager.py)', '660': 'test_ipc_lifecycle(test_multikernelmanager.py)', '666': 'test_tcp_cinfo(test_multikernelmanager.py)', '668': 'test_tcp_lifecycle_with_kernel_id(test_multikernelmanager.py)', '569': 'test_secure_write(test_connect.py)', '573': 'check_user_only_permissions(test_connect.py)', '574': 'fetch_win32_permissions(test_connect.py)', '563': 'test_find_connection_file_relative(test_connect.py)', '561': 'test_find_connection_file_abspath(test_connect.py)', '560': 'test_find_connection_file(test_connect.py)', '565': 'test_load_connection_file_session_with_kn(test_connect.py)', '441': 'Session(session.py)', '539': 'test_input_request(test_adapter.py)', '564': 'test_load_connection_file_session(test_connect.py)', '537': 'test_display_data(test_adapter.py)', '540': 'test_inspect_reply(test_adapter.py)', '543': 'test_kernel_info_reply(test_adapter.py)', '542': 'test_inspect_request_token(test_adapter.py)', '535': 'test_complete_reply(test_adapter.py)', '541': 'test_inspect_request(test_adapter.py)'}}, {'key': 2514, 'parent': 2515, 'tfidf_word': 'lifecycle v5to msgpack kernelapp execute send clone raw line code ', 'tfidf_method': 'test_display_data test_execute_reply test_execute_request test_input_request test_kernel_info_reply test_no_adapt test_object_info_reply test_object_info_reply_not_found test_rename_type stop ', 'lda_word': ' test,session,case,adapter,bad,', 'lda_method': ' session,adaptertest,test_bad_roundtrip,test_bad_packer,test_default_version,', 'lsi_word': ' test,adapt,session,reply,request,', 'lsi_method': ' adapt,test_execute_request,test_rename_type,test_same_version,test_no_adapt,', 'spm_method': ' ', 'text_summary': 'Split the identities from the rest of the message. Start the polling of the kernel. Stop the kernel polling. Get a message from the iopub channel. Send a raw message via ident path. Sign a message with HMAC digest. Get a message from the shell channel.', 'files_count': 8, 'files': ['test_adapter.py', 'session.py', 'adapter.py', 'utils.py', 'client.py', 'test_kernelmanager.py', 'test_kernelapp.py', 'test_session.py'], 'execution_path_count': 42, 'function_id_to_name_file': {'538': 'test_execute_request(test_adapter.py)', '517': 'adapt(test_adapter.py)', '545': 'test_rename_type(test_adapter.py)', '544': 'test_no_adapt(test_adapter.py)', '546': 'test_same_version(test_adapter.py)', '514': 'V5toV4TestCase(test_adapter.py)', '512': 'AdapterTest(test_adapter.py)', '526': 'test_input_request(test_adapter.py)', '523': 'test_display_data(test_adapter.py)', '527': 'test_kernel_info_reply(test_adapter.py)', '530': 'test_object_info_reply_not_found(test_adapter.py)', '529': 'test_object_info_reply(test_adapter.py)', '531': 'test_object_info_request(test_adapter.py)', '521': 'test_complete_reply(test_adapter.py)', '522': 'test_complete_request(test_adapter.py)', '524': 'test_execute_reply(test_adapter.py)', '532': 'test_rename_type(test_adapter.py)', '525': 'test_execute_request(test_adapter.py)', '528': 'test_no_adapt(test_adapter.py)', '533': 'test_same_version(test_adapter.py)', '513': 'V4toV5TestCase(test_adapter.py)', '519': 'setUp(test_adapter.py)', '441': 'Session(session.py)', '516': 'test_default_version(test_adapter.py)', '515': 'test_code_to_line_no_code(test_adapter.py)', '51': 'code_to_line(adapter.py)', '704': 'execute(utils.py)', '158': 'get_shell_msg(client.py)', '607': 'execute(test_kernelmanager.py)', '615': 'execute(test_kernelmanager.py)', '598': 'execute(test_kernelmanager.py)', '608': 'execute(test_kernelmanager.py)', '157': 'get_iopub_msg(client.py)', '710': '__exit__(utils.py)', '712': 'stop(utils.py)', '709': '__enter__(utils.py)', '711': 'start(utils.py)', '580': 'test_kernelapp_lifecycle(test_kernelapp.py)', '579': '_launch(test_kernelapp.py)', '686': 'test_clone(test_session.py)', '473': 'clone(session.py)', '695': 'test_send_raw(test_session.py)', '481': 'send_raw(session.py)', '483': 'sign(session.py)', '689': 'test_datetimes_msgpack(test_session.py)', '475': 'feed_identities(session.py)', '690': 'test_datetimes_pickle(test_session.py)', '688': 'test_datetimes(test_session.py)', '683': 'test_bad_roundtrip(test_session.py)', '685': 'test_bad_unpacker(test_session.py)', '684': 'test_bad_unpack(test_session.py)', '682': 'test_bad_packer(test_session.py)'}}, {'key': 818, 'parent': 2542, 'tfidf_word': 'EP: 818, Name: test_cull_digest_history &rarr; Session', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 823, 'parent': 2542, 'tfidf_word': 'EP: 823, Name: test_bad_pack &rarr; Session', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 794, 'parent': 2553, 'tfidf_word': 'EP: 794, Name: test_unique_msg_ids &rarr; msg_header &rarr; utcnow', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2552, 'parent': 2553, 'tfidf_word': 'id history env complete comm close case zmq send session ', 'tfidf_method': 'NoSuchKernel hb_channel wrapped wait_for_ready reqrep send wrapped wait_for_ready test_shutdown reqrep ', 'lda_word': ' test,reply,check,session,channel,', 'lda_method': ' asynckernelclient,stdin_channel,check_reply,reqrep,hbchannel,', 'lsi_word': ' test,reply,check,send,session,', 'lsi_method': ' check_reply,test_shutdown,test_complete,test_comm_info,test_inspect,', 'spm_method': ' ', 'text_summary': 'Get the hb channel object for this kernel. Stop the kernel polling. Split the identities from the rest of the message. Start the polling of the kernel.', 'files_count': 9, 'files': ['test_session.py', 'session.py', 'channels.py', 'test_client.py', 'utils.py', 'kernelspec.py', 'client.py', 'connect.py', 'threaded.py'], 'execution_path_count': 32, 'function_id_to_name_file': {'698': 'test_tracking(test_session.py)', '441': 'Session(session.py)', '680': 'test_args(test_session.py)', '694': 'test_send(test_session.py)', '114': 'send(channels.py)', '478': 'msg_id(session.py)', '88': 'send(channels.py)', '475': 'feed_identities(session.py)', '696': 'test_serialize(test_session.py)', '674': 'TestSession(test_session.py)', '673': 'SessionTestCase(test_session.py)', '678': 'setUp(test_session.py)', '556': 'test_shutdown(test_client.py)', '548': '_check_reply(test_client.py)', '550': 'test_comm_info(test_client.py)', '555': 'test_kernel_info(test_client.py)', '551': 'test_complete(test_client.py)', '554': 'test_inspect(test_client.py)', '553': 'test_history(test_client.py)', '549': 'setUp(test_client.py)', '712': 'stop(utils.py)', '255': 'NoSuchKernel(kernelspec.py)', '711': 'start(utils.py)', '705': 'test_env(utils.py)', '116': 'BlockingKernelClient(client.py)', '117': 'reqrep(client.py)', '124': 'wrapped(client.py)', '123': 'wait_for_ready(client.py)', '150': '_handle_kernel_info_reply(client.py)', '125': 'HBChannel(channels.py)', '104': 'wait_for_ready(client.py)', '102': 'hb_channel(client.py)', '196': '_make_url(connect.py)', '90': 'AsyncKernelClient(client.py)', '91': 'reqrep(client.py)', '105': 'wrapped(client.py)', '80': 'ZMQSocketChannel(channels.py)', '83': 'close(channels.py)', '154': 'control_channel(client.py)', '723': 'ioloop(threaded.py)', '160': 'hb_channel(client.py)', '171': 'stdin_channel(client.py)'}}, {'key': 353, 'parent': 2565, 'tfidf_word': 'EP: 353, Name: interrupt_kernel &rarr; send_interrupt', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2564, 'parent': 2565, 'tfidf_word': 'start cleanup connection del file interrupt kernel key path send ', 'tfidf_method': 'start path_key interrupt_kernel __del__ start start start start send start ', 'lda_word': ' connection,del,cleanup,file,start,', 'lda_method': ' start,send,interrupt_kernel,path_key,del,', 'lsi_word': ' start,key,path,interrupt,send,', 'lsi_method': ' start,path_key,interrupt_kernel,send,del,', 'spm_method': ' ', 'text_summary': 'Start the polling of the kernel. Interrupts the kernel by sending it a signal.', 'files_count': 8, 'files': ['manager.py', 'channels.py', 'connect.py', 'kernelspecapp.py', 'threaded.py', 'utils.py', 'channelsabc.py', 'restarter.py'], 'execution_path_count': 11, 'function_id_to_name_file': {'328': 'interrupt_kernel(manager.py)', '88': 'send(channels.py)', '334': '__del__(manager.py)', '200': 'cleanup_connection_file(connect.py)', '291': 'start(kernelspecapp.py)', '293': 'start(kernelspecapp.py)', '294': 'path_key(kernelspecapp.py)', '735': 'start(threaded.py)', '711': 'start(utils.py)', '720': 'start(threaded.py)', '141': 'start(channelsabc.py)', '432': 'start(restarter.py)', '288': 'start(kernelspecapp.py)', '89': 'start(channels.py)', '115': 'start(channels.py)'}}, {'key': 136, 'parent': 2590, 'tfidf_word': 'EP: 136, Name: V4toV5 &rarr; Adapter', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2589, 'parent': 2590, 'tfidf_word': 'id init json v5to header version kernel spec install native ', 'tfidf_method': 'kernel_info_reply _key_default _key_changed Adapter __init__ to_dict new_id_bytes Message V5toV4 _record_started ', 'lda_word': ' info,initialize,kernel,str,list,', 'lda_method': ' code_to_line,object_info_request,extract_oname_v4,new_auth,new_id_bytes,', 'lsi_word': ' kernel,install,native,spec,info,', 'lsi_method': ' code_to_line,object_info_request,extract_oname_v4,complete_request,install_native_kernel_spec,', 'spm_method': ' ', 'text_summary': '', 'files_count': 5, 'files': ['adapter.py', 'kernelapp.py', 'test_kernelmanager.py', 'kernelspec.py', 'session.py'], 'execution_path_count': 18, 'function_id_to_name_file': {'77': 'object_info_request(adapter.py)', '51': 'code_to_line(adapter.py)', '52': 'extract_oname_v4(adapter.py)', '70': 'complete_request(adapter.py)', '75': 'kernel_info_reply(adapter.py)', '49': '_version_str_to_list(adapter.py)', '48': 'V5toV4(adapter.py)', '46': 'Adapter(adapter.py)', '53': '__call__(adapter.py)', '54': 'handle_reply_status_error(adapter.py)', '57': 'update_msg_type(adapter.py)', '56': 'update_metadata(adapter.py)', '55': 'update_header(adapter.py)', '247': 'initialize(kernelapp.py)', '246': '_record_started(kernelapp.py)', '585': 'config(test_kernelmanager.py)', '262': 'install_native_kernel_spec(kernelspec.py)', '276': 'install_native_kernel_spec(kernelspec.py)', '265': 'to_json(kernelspec.py)', '264': 'to_dict(kernelspec.py)', '449': 'test_msg2obj(session.py)', '440': 'Message(session.py)', '453': '__init__(session.py)', '470': '_signature_scheme_changed(session.py)', '465': '_new_auth(session.py)', '463': '_key_default(session.py)', '447': 'new_id_bytes(session.py)', '462': '_key_changed(session.py)'}}, {'key': 98, 'parent': 2607, 'tfidf_word': 'EP: 98, Name: start_channels &rarr; _check_kernel_info_reply &rarr; _handle_kernel_info_reply', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2606, 'parent': 2607, 'tfidf_word': 'list init id hb cleanup zmq shutdown start threaded flush ', 'tfidf_method': 'HBChannel shutdown_kernel cleanup_resources list_kernel_ids request_shutdown ThreadedZMQSocketChannel __init__ start _flush flush ', 'lda_word': ' shutdown,flush,channels,request,init,', 'lda_method': ' shutdown_all,flush,cleanup_resources,remove_kernel,request_shutdown,', 'lsi_word': ' thread,kernel,client,channel,shutdown,', 'lsi_method': ' shutdown_all,remove_kernel,list_kernel_ids,request_shutdown,cleanup_resources,', 'spm_method': ' ', 'text_summary': 'Shutdown all kernels. Send a shutdown request via control channel. Immediately processes all pending messages on this channel.', 'files_count': 3, 'files': ['threaded.py', 'multikernelmanager.py', 'channels.py'], 'execution_path_count': 12, 'function_id_to_name_file': {'724': 'start_channels(threaded.py)', '716': '__init__(threaded.py)', '387': 'shutdown_kernel(multikernelmanager.py)', '416': 'remove_kernel(multikernelmanager.py)', '713': 'IOLoopThread(threaded.py)', '720': 'start(threaded.py)', '714': 'ThreadedKernelClient(threaded.py)', '715': 'ThreadedZMQSocketChannel(threaded.py)', '125': 'HBChannel(channels.py)', '731': 'flush(threaded.py)', '727': '_flush(threaded.py)', '386': 'shutdown_all(multikernelmanager.py)', '413': 'list_kernel_ids(multikernelmanager.py)', '418': 'request_shutdown(multikernelmanager.py)', '402': 'cleanup_resources(multikernelmanager.py)'}}, {'key': 18, 'parent': 2632, 'tfidf_word': 'EP: 18, Name: __init__ &rarr; __init__', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2631, 'parent': 2632, 'tfidf_word': 'alive beating close stop ', 'tfidf_method': 'is_beating is_alive close stop is_alive is_alive is_alive is_alive ', 'lda_word': ' close,stop,beating,alive,', 'lda_method': ' stop,close,is_beating,is_alive,', 'lsi_word': ' alive,beating,stop,close,', 'lsi_method': ' is_alive,is_beating,close,stop,', 'spm_method': ' ', 'text_summary': 'Empty', 'files_count': 5, 'files': ['channels.py', 'multikernelmanager.py', 'managerabc.py', 'channelsabc.py', 'threaded.py'], 'execution_path_count': 6, 'function_id_to_name_file': {'136': 'stop(channels.py)', '132': 'close(channels.py)', '133': 'is_beating(channels.py)', '412': 'is_alive(multikernelmanager.py)', '373': 'is_alive(managerabc.py)', '140': 'is_alive(channelsabc.py)', '112': 'is_alive(channels.py)', '732': 'is_alive(threaded.py)'}}, {'key': 1001, 'parent': 2503, 'tfidf_word': 'EP: 1001, Name: test_complete_request &rarr; adapt', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2478, 'parent': 2503, 'tfidf_word': 'find cinfo env signal date subclass session default permission name ', 'tfidf_method': 'test_inspect_request_token check_user_only_permissions test_load_connection_file_session_with_kn test_load_connection_file_session test_find_connection_file_relative test_find_connection_file_local test_find_connection_file_abspath test_find_connection_file test_secure_write send ', 'lda_word': ' kernel,test,sample,install,spec,', 'lda_method': ' handle,close,setup,run_cinfo,test_ipc_cinfo,', 'lsi_word': ' test,kernel,connection,file,find,', 'lsi_method': ' handle,close,send,install_sample_kernel,test_find_connection_file_local,', 'spm_method': ' ', 'text_summary': "find a connection file, and return its absolute path. return ip for localhost (almost always 127.0.0.1)      find a connection file, and return its absolute path. return ip for localhost (almost always 127.0.0.1)   Ensure that a sequence of kernel startups doesn't break anything. Ensure that a sequence of kernel startups doesn't break anything. Check that a kernel name is valid. Ensure a datetime object has tzinfo.", 'files_count': 17, 'files': ['test_connect.py', 'connect.py', 'forward.py', 'threaded.py', 'test_manager.py', 'kernelspec.py', 'channels.py', 'test_jsonutil.py', 'session.py', 'jsonutil.py', 'test_kernelmanager.py', 'utils.py', 'test_kernelspec.py', 'signalkernel.py', 'test_multikernelmanager.py', 'localinterfaces.py', 'test_adapter.py'], 'execution_path_count': 59, 'function_id_to_name_file': {'562': 'test_find_connection_file_local(test_connect.py)', '189': 'find_connection_file(connect.py)', '492': 'handle(forward.py)', '730': 'close(threaded.py)', '493': 'SubHander(forward.py)', '490': 'Handler(forward.py)', '635': 'test_connection_file_real_path(test_manager.py)', '253': 'KernelSpec(kernelspec.py)', '718': 'close(threaded.py)', '132': 'close(channels.py)', '114': 'send(channels.py)', '88': 'send(channels.py)', '83': 'close(channels.py)', '109': 'close(channels.py)', '575': 'test_date_default(test_jsonutil.py)', '450': 'utcnow(session.py)', '241': 'date_default(jsonutil.py)', '240': '_ensure_tzinfo(jsonutil.py)', '597': 'test_subclasses(test_kernelmanager.py)', '703': 'AsyncKernelManagerWithCleanup(utils.py)', '595': 'test_signal_kernel_subprocesses(test_kernelmanager.py)', '598': 'execute(test_kernelmanager.py)', '702': 'AsyncKernelManagerSubclass(utils.py)', '611': 'test_start_parallel_process_kernels(test_kernelmanager.py)', '591': 'transport(test_kernelmanager.py)', '606': 'test_templated_kspec_env(test_kernelmanager.py)', '599': '_env_test_body(test_kernelmanager.py)', '607': 'execute(test_kernelmanager.py)', '612': 'test_start_parallel_thread_kernels(test_kernelmanager.py)', '604': 'test_signal_kernel_subprocesses(test_kernelmanager.py)', '608': 'execute(test_kernelmanager.py)', '586': 'env(test_kernelmanager.py)', '712': 'stop(utils.py)', '711': 'start(utils.py)', '705': 'test_env(utils.py)', '630': 'test_validate_kernel_name(test_kernelspec.py)', '257': '_is_valid_kernel_name(kernelspec.py)', '506': 'SignalTestApp(signalkernel.py)', '507': 'SignalTestKernel(signalkernel.py)', '627': 'test_remove_kernel_spec(test_kernelspec.py)', '617': '_install_sample_kernel(test_kernelspec.py)', '626': 'test_kernel_spec_priority(test_kernelspec.py)', '651': 'test_tcp_cinfo(test_multikernelmanager.py)', '640': '_run_cinfo(test_multikernelmanager.py)', '621': 'test_find_all_specs(test_kernelspec.py)', '622': 'test_find_kernel_specs(test_kernelspec.py)', '623': 'test_get_kernel_spec(test_kernelspec.py)', '619': 'tearDown(test_kernelspec.py)', '618': 'setUp(test_kernelspec.py)', '649': 'test_start_sequence_ipc_kernels(test_multikernelmanager.py)', '641': '_run_lifecycle(test_multikernelmanager.py)', '650': 'test_start_sequence_tcp_kernels(test_multikernelmanager.py)', '644': 'test_ipc_cinfo(test_multikernelmanager.py)', '315': 'localhost(localinterfaces.py)', '645': 'test_ipc_lifecycle(test_multikernelmanager.py)', '665': 'test_start_sequence_tcp_kernels(test_multikernelmanager.py)', '657': '_run_lifecycle(test_multikernelmanager.py)', '664': 'test_start_sequence_ipc_kernels(test_multikernelmanager.py)', '659': 'test_ipc_cinfo(test_multikernelmanager.py)', '656': '_run_cinfo(test_multikernelmanager.py)', '660': 'test_ipc_lifecycle(test_multikernelmanager.py)', '666': 'test_tcp_cinfo(test_multikernelmanager.py)', '668': 'test_tcp_lifecycle_with_kernel_id(test_multikernelmanager.py)', '569': 'test_secure_write(test_connect.py)', '573': 'check_user_only_permissions(test_connect.py)', '574': 'fetch_win32_permissions(test_connect.py)', '563': 'test_find_connection_file_relative(test_connect.py)', '561': 'test_find_connection_file_abspath(test_connect.py)', '560': 'test_find_connection_file(test_connect.py)', '565': 'test_load_connection_file_session_with_kn(test_connect.py)', '441': 'Session(session.py)', '539': 'test_input_request(test_adapter.py)', '517': 'adapt(test_adapter.py)', '564': 'test_load_connection_file_session(test_connect.py)', '537': 'test_display_data(test_adapter.py)', '540': 'test_inspect_reply(test_adapter.py)', '543': 'test_kernel_info_reply(test_adapter.py)', '542': 'test_inspect_request_token(test_adapter.py)', '535': 'test_complete_reply(test_adapter.py)', '541': 'test_inspect_request(test_adapter.py)'}}, {'key': 2502, 'parent': 2514, 'tfidf_word': 'set default v5to kernel input data found display line code ', 'tfidf_method': 'test_complete_request test_complete_reply setUp test_default_version test_code_to_line_no_code V5toV4TestCase V4toV5TestCase code_to_line test_execute_request test_same_version ', 'lda_word': ' test,adapt,reply,info,execute,', 'lda_method': ' adapt,test_execute_request,test_rename_type,test_same_version,code_to_line,', 'lsi_word': ' test,adapt,reply,request,info,', 'lsi_method': ' adapt,test_same_version,test_execute_request,test_no_adapt,test_rename_type,', 'spm_method': ' ', 'text_summary': 'Empty', 'files_count': 3, 'files': ['test_adapter.py', 'session.py', 'adapter.py'], 'execution_path_count': 22, 'function_id_to_name_file': {'538': 'test_execute_request(test_adapter.py)', '517': 'adapt(test_adapter.py)', '545': 'test_rename_type(test_adapter.py)', '544': 'test_no_adapt(test_adapter.py)', '546': 'test_same_version(test_adapter.py)', '514': 'V5toV4TestCase(test_adapter.py)', '512': 'AdapterTest(test_adapter.py)', '526': 'test_input_request(test_adapter.py)', '523': 'test_display_data(test_adapter.py)', '527': 'test_kernel_info_reply(test_adapter.py)', '530': 'test_object_info_reply_not_found(test_adapter.py)', '529': 'test_object_info_reply(test_adapter.py)', '531': 'test_object_info_request(test_adapter.py)', '521': 'test_complete_reply(test_adapter.py)', '522': 'test_complete_request(test_adapter.py)', '524': 'test_execute_reply(test_adapter.py)', '532': 'test_rename_type(test_adapter.py)', '525': 'test_execute_request(test_adapter.py)', '528': 'test_no_adapt(test_adapter.py)', '533': 'test_same_version(test_adapter.py)', '513': 'V4toV5TestCase(test_adapter.py)', '519': 'setUp(test_adapter.py)', '441': 'Session(session.py)', '516': 'test_default_version(test_adapter.py)', '515': 'test_code_to_line_no_code(test_adapter.py)', '51': 'code_to_line(adapter.py)'}}, {'key': 2513, 'parent': 2514, 'tfidf_word': 'launch kernelapp iopub identity msgpack unpacker execute raw send clone ', 'tfidf_method': 'execute test_kernelapp_lifecycle _launch sign send_raw feed_identities clone get_shell_msg start stop ', 'lda_word': ' clone,test,exit,stop,packer,', 'lda_method': ' start,enter,get_iopub_msg,execute,session,', 'lsi_word': ' test,session,bad,datetimes,send,', 'lsi_method': ' execute,get_shell_msg,get_iopub_msg,session,test_send_raw,', 'spm_method': ' ', 'text_summary': 'Split the identities from the rest of the message. Start the polling of the kernel. Stop the kernel polling. Get a message from the iopub channel. Send a raw message via ident path. Get a message from the shell channel.', 'files_count': 6, 'files': ['utils.py', 'client.py', 'test_kernelmanager.py', 'test_kernelapp.py', 'test_session.py', 'session.py'], 'execution_path_count': 20, 'function_id_to_name_file': {'704': 'execute(utils.py)', '158': 'get_shell_msg(client.py)', '607': 'execute(test_kernelmanager.py)', '615': 'execute(test_kernelmanager.py)', '598': 'execute(test_kernelmanager.py)', '608': 'execute(test_kernelmanager.py)', '157': 'get_iopub_msg(client.py)', '710': '__exit__(utils.py)', '712': 'stop(utils.py)', '709': '__enter__(utils.py)', '711': 'start(utils.py)', '580': 'test_kernelapp_lifecycle(test_kernelapp.py)', '579': '_launch(test_kernelapp.py)', '686': 'test_clone(test_session.py)', '441': 'Session(session.py)', '473': 'clone(session.py)', '695': 'test_send_raw(test_session.py)', '481': 'send_raw(session.py)', '483': 'sign(session.py)', '689': 'test_datetimes_msgpack(test_session.py)', '475': 'feed_identities(session.py)', '690': 'test_datetimes_pickle(test_session.py)', '688': 'test_datetimes(test_session.py)', '683': 'test_bad_roundtrip(test_session.py)', '685': 'test_bad_unpacker(test_session.py)', '684': 'test_bad_unpack(test_session.py)', '682': 'test_bad_packer(test_session.py)'}}, {'key': 793, 'parent': 2552, 'tfidf_word': 'EP: 793, Name: test_tracking &rarr; Session', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2551, 'parent': 2552, 'tfidf_word': 'history env complete comm close case serialize zmq send session ', 'tfidf_method': 'NoSuchKernel hb_channel wrapped wait_for_ready reqrep send wrapped wait_for_ready test_shutdown reqrep ', 'lda_word': ' set,kernel,session,wait,ready,', 'lda_method': ' test_send,asynckernelclient,send,reqrep,hbchannel,', 'lsi_word': ' test,reply,check,send,info,', 'lsi_method': ' check_reply,test_complete,test_history,test_inspect,test_kernel_info,', 'spm_method': ' ', 'text_summary': 'Get the hb channel object for this kernel. Stop the kernel polling. Start the polling of the kernel. Pass a message to the ZMQ socket to send.', 'files_count': 9, 'files': ['test_session.py', 'session.py', 'channels.py', 'test_client.py', 'utils.py', 'kernelspec.py', 'client.py', 'connect.py', 'threaded.py'], 'execution_path_count': 31, 'function_id_to_name_file': {'680': 'test_args(test_session.py)', '441': 'Session(session.py)', '694': 'test_send(test_session.py)', '114': 'send(channels.py)', '478': 'msg_id(session.py)', '88': 'send(channels.py)', '475': 'feed_identities(session.py)', '696': 'test_serialize(test_session.py)', '674': 'TestSession(test_session.py)', '673': 'SessionTestCase(test_session.py)', '678': 'setUp(test_session.py)', '556': 'test_shutdown(test_client.py)', '548': '_check_reply(test_client.py)', '550': 'test_comm_info(test_client.py)', '555': 'test_kernel_info(test_client.py)', '551': 'test_complete(test_client.py)', '554': 'test_inspect(test_client.py)', '553': 'test_history(test_client.py)', '549': 'setUp(test_client.py)', '712': 'stop(utils.py)', '255': 'NoSuchKernel(kernelspec.py)', '711': 'start(utils.py)', '705': 'test_env(utils.py)', '116': 'BlockingKernelClient(client.py)', '117': 'reqrep(client.py)', '124': 'wrapped(client.py)', '123': 'wait_for_ready(client.py)', '150': '_handle_kernel_info_reply(client.py)', '125': 'HBChannel(channels.py)', '104': 'wait_for_ready(client.py)', '102': 'hb_channel(client.py)', '196': '_make_url(connect.py)', '90': 'AsyncKernelClient(client.py)', '91': 'reqrep(client.py)', '105': 'wrapped(client.py)', '80': 'ZMQSocketChannel(channels.py)', '83': 'close(channels.py)', '154': 'control_channel(client.py)', '723': 'ioloop(threaded.py)', '160': 'hb_channel(client.py)', '171': 'stdin_channel(client.py)'}}, {'key': 351, 'parent': 2564, 'tfidf_word': 'EP: 351, Name: interrupt_kernel &rarr; send', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2563, 'parent': 2564, 'tfidf_word': 'start cleanup connection del file key path ', 'tfidf_method': 'cleanup_connection_file start start path_key __del__ start start start start start ', 'lda_word': ' start,del,key,path,file,', 'lda_method': ' start,path_key,cleanup_connection_file,del,', 'lsi_word': ' start,key,path,cleanup,del,', 'lsi_method': ' start,path_key,del,cleanup_connection_file,', 'spm_method': ' ', 'text_summary': 'Cleanup connection file *if we wrote it*. Start the polling of the kernel. sort key function for Jupyter path priority.', 'files_count': 8, 'files': ['manager.py', 'connect.py', 'kernelspecapp.py', 'threaded.py', 'utils.py', 'channelsabc.py', 'restarter.py', 'channels.py'], 'execution_path_count': 10, 'function_id_to_name_file': {'334': '__del__(manager.py)', '200': 'cleanup_connection_file(connect.py)', '291': 'start(kernelspecapp.py)', '293': 'start(kernelspecapp.py)', '294': 'path_key(kernelspecapp.py)', '735': 'start(threaded.py)', '711': 'start(utils.py)', '720': 'start(threaded.py)', '141': 'start(channelsabc.py)', '432': 'start(restarter.py)', '288': 'start(kernelspecapp.py)', '89': 'start(channels.py)', '115': 'start(channels.py)'}}, {'key': 135, 'parent': 2589, 'tfidf_word': 'EP: 135, Name: object_info_request &rarr; code_to_line', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2588, 'parent': 2589, 'tfidf_word': 'id init json v5to header version kernel spec install native ', 'tfidf_method': 'Adapter __init__ new_id_bytes Message install_native_kernel_spec to_json to_dict install_native_kernel_spec _signature_scheme_changed object_info_request ', 'lda_word': ' key,reply,str,list,version,', 'lda_method': ' install_native_kernel_spec,new_auth,signature_scheme_changed,to_json,to_dict,', 'lsi_word': ' kernel,spec,native,install,info,', 'lsi_method': ' call,update_header,handle_reply_status_error,update_msg_type,update_metadata,', 'spm_method': ' ', 'text_summary': '', 'files_count': 5, 'files': ['adapter.py', 'kernelapp.py', 'test_kernelmanager.py', 'kernelspec.py', 'session.py'], 'execution_path_count': 17, 'function_id_to_name_file': {'77': 'object_info_request(adapter.py)', '52': 'extract_oname_v4(adapter.py)', '51': 'code_to_line(adapter.py)', '70': 'complete_request(adapter.py)', '75': 'kernel_info_reply(adapter.py)', '49': '_version_str_to_list(adapter.py)', '48': 'V5toV4(adapter.py)', '46': 'Adapter(adapter.py)', '53': '__call__(adapter.py)', '54': 'handle_reply_status_error(adapter.py)', '57': 'update_msg_type(adapter.py)', '56': 'update_metadata(adapter.py)', '55': 'update_header(adapter.py)', '247': 'initialize(kernelapp.py)', '246': '_record_started(kernelapp.py)', '585': 'config(test_kernelmanager.py)', '262': 'install_native_kernel_spec(kernelspec.py)', '276': 'install_native_kernel_spec(kernelspec.py)', '265': 'to_json(kernelspec.py)', '264': 'to_dict(kernelspec.py)', '449': 'test_msg2obj(session.py)', '440': 'Message(session.py)', '453': '__init__(session.py)', '470': '_signature_scheme_changed(session.py)', '465': '_new_auth(session.py)', '463': '_key_default(session.py)', '447': 'new_id_bytes(session.py)', '462': '_key_changed(session.py)'}}, {'key': 97, 'parent': 2606, 'tfidf_word': 'EP: 97, Name: start_channels &rarr; __init__', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2605, 'parent': 2606, 'tfidf_word': 'request list id hb cleanup zmq shutdown threaded start flush ', 'tfidf_method': 'start_channels HBChannel shutdown_kernel cleanup_resources list_kernel_ids request_shutdown ThreadedZMQSocketChannel start _flush flush ', 'lda_word': ' start,channels,io,loop,thread,', 'lda_method': ' start_channels,ioloopthread,start,threadedkernelclient,shutdown_all,', 'lsi_word': ' thread,kernel,client,channel,shutdown,', 'lsi_method': ' shutdown_all,remove_kernel,list_kernel_ids,request_shutdown,cleanup_resources,', 'spm_method': ' ', 'text_summary': 'Shutdown all kernels. Send a shutdown request via control channel. Immediately processes all pending messages on this channel.', 'files_count': 3, 'files': ['multikernelmanager.py', 'threaded.py', 'channels.py'], 'execution_path_count': 11, 'function_id_to_name_file': {'387': 'shutdown_kernel(multikernelmanager.py)', '416': 'remove_kernel(multikernelmanager.py)', '724': 'start_channels(threaded.py)', '713': 'IOLoopThread(threaded.py)', '720': 'start(threaded.py)', '714': 'ThreadedKernelClient(threaded.py)', '715': 'ThreadedZMQSocketChannel(threaded.py)', '125': 'HBChannel(channels.py)', '731': 'flush(threaded.py)', '727': '_flush(threaded.py)', '386': 'shutdown_all(multikernelmanager.py)', '413': 'list_kernel_ids(multikernelmanager.py)', '418': 'request_shutdown(multikernelmanager.py)', '402': 'cleanup_resources(multikernelmanager.py)'}}, {'key': 2624, 'parent': 2631, 'tfidf_word': 'alive beating close stop ', 'tfidf_method': 'is_beating close stop is_alive is_alive ', 'lda_word': ' beating,alive,close,stop,', 'lda_method': ' is_alive,is_beating,stop,close,', 'lsi_word': ' beating,alive,stop,close,', 'lsi_method': ' is_beating,is_alive,stop,close,', 'spm_method': ' ', 'text_summary': 'Empty', 'files_count': 3, 'files': ['channels.py', 'multikernelmanager.py', 'managerabc.py'], 'execution_path_count': 3, 'function_id_to_name_file': {'136': 'stop(channels.py)', '132': 'close(channels.py)', '133': 'is_beating(channels.py)', '412': 'is_alive(multikernelmanager.py)', '373': 'is_alive(managerabc.py)'}}, {'key': 2630, 'parent': 2631, 'tfidf_word': 'alive beating ', 'tfidf_method': 'is_beating is_alive is_alive is_alive ', 'lda_word': ' beating,alive,', 'lda_method': ' is_alive,is_beating,', 'lsi_word': ' alive,beating,', 'lsi_method': ' is_beating,is_alive,', 'spm_method': ' ', 'text_summary': '', 'files_count': 3, 'files': ['channels.py', 'channelsabc.py', 'threaded.py'], 'execution_path_count': 3, 'function_id_to_name_file': {'133': 'is_beating(channels.py)', '140': 'is_alive(channelsabc.py)', '112': 'is_alive(channels.py)', '732': 'is_alive(threaded.py)'}}, {'key': 2465, 'parent': 2478, 'tfidf_word': 'find env connection file signal date subclass default name permission ', 'tfidf_method': 'execute _env_test_body test_signal_kernel_subprocesses test_templated_kspec_env execute execute test_start_parallel_process_kernels close test_find_connection_file_relative send ', 'lda_word': ' cinfo,tcp,test,run,localhost,', 'lda_method': ' test_ipc_lifecycle,run_lifecycle,test_date_default,test_subclasses,fetch_win32_permissions,', 'lsi_word': ' test,kernel,run,lifecycle,find,', 'lsi_method': ' handle,close,send,run_lifecycle,find_connection_file,', 'spm_method': ' ', 'text_summary': "find a connection file, and return its absolute path. return ip for localhost (almost always 127.0.0.1)      find a connection file, and return its absolute path. return ip for localhost (almost always 127.0.0.1)   Ensure that a sequence of kernel startups doesn't break anything. Ensure that a sequence of kernel startups doesn't break anything. Check that a kernel name is valid. Ensure a datetime object has tzinfo.", 'files_count': 16, 'files': ['test_connect.py', 'connect.py', 'forward.py', 'threaded.py', 'test_manager.py', 'kernelspec.py', 'channels.py', 'test_jsonutil.py', 'session.py', 'jsonutil.py', 'test_kernelmanager.py', 'utils.py', 'test_kernelspec.py', 'signalkernel.py', 'test_multikernelmanager.py', 'localinterfaces.py'], 'execution_path_count': 49, 'function_id_to_name_file': {'562': 'test_find_connection_file_local(test_connect.py)', '189': 'find_connection_file(connect.py)', '492': 'handle(forward.py)', '730': 'close(threaded.py)', '493': 'SubHander(forward.py)', '490': 'Handler(forward.py)', '635': 'test_connection_file_real_path(test_manager.py)', '253': 'KernelSpec(kernelspec.py)', '718': 'close(threaded.py)', '132': 'close(channels.py)', '114': 'send(channels.py)', '88': 'send(channels.py)', '83': 'close(channels.py)', '109': 'close(channels.py)', '575': 'test_date_default(test_jsonutil.py)', '450': 'utcnow(session.py)', '241': 'date_default(jsonutil.py)', '240': '_ensure_tzinfo(jsonutil.py)', '597': 'test_subclasses(test_kernelmanager.py)', '703': 'AsyncKernelManagerWithCleanup(utils.py)', '595': 'test_signal_kernel_subprocesses(test_kernelmanager.py)', '598': 'execute(test_kernelmanager.py)', '702': 'AsyncKernelManagerSubclass(utils.py)', '611': 'test_start_parallel_process_kernels(test_kernelmanager.py)', '591': 'transport(test_kernelmanager.py)', '606': 'test_templated_kspec_env(test_kernelmanager.py)', '599': '_env_test_body(test_kernelmanager.py)', '607': 'execute(test_kernelmanager.py)', '612': 'test_start_parallel_thread_kernels(test_kernelmanager.py)', '604': 'test_signal_kernel_subprocesses(test_kernelmanager.py)', '608': 'execute(test_kernelmanager.py)', '586': 'env(test_kernelmanager.py)', '712': 'stop(utils.py)', '711': 'start(utils.py)', '705': 'test_env(utils.py)', '630': 'test_validate_kernel_name(test_kernelspec.py)', '257': '_is_valid_kernel_name(kernelspec.py)', '506': 'SignalTestApp(signalkernel.py)', '507': 'SignalTestKernel(signalkernel.py)', '627': 'test_remove_kernel_spec(test_kernelspec.py)', '617': '_install_sample_kernel(test_kernelspec.py)', '626': 'test_kernel_spec_priority(test_kernelspec.py)', '651': 'test_tcp_cinfo(test_multikernelmanager.py)', '640': '_run_cinfo(test_multikernelmanager.py)', '621': 'test_find_all_specs(test_kernelspec.py)', '622': 'test_find_kernel_specs(test_kernelspec.py)', '623': 'test_get_kernel_spec(test_kernelspec.py)', '619': 'tearDown(test_kernelspec.py)', '618': 'setUp(test_kernelspec.py)', '649': 'test_start_sequence_ipc_kernels(test_multikernelmanager.py)', '641': '_run_lifecycle(test_multikernelmanager.py)', '650': 'test_start_sequence_tcp_kernels(test_multikernelmanager.py)', '644': 'test_ipc_cinfo(test_multikernelmanager.py)', '315': 'localhost(localinterfaces.py)', '645': 'test_ipc_lifecycle(test_multikernelmanager.py)', '665': 'test_start_sequence_tcp_kernels(test_multikernelmanager.py)', '657': '_run_lifecycle(test_multikernelmanager.py)', '664': 'test_start_sequence_ipc_kernels(test_multikernelmanager.py)', '659': 'test_ipc_cinfo(test_multikernelmanager.py)', '656': '_run_cinfo(test_multikernelmanager.py)', '660': 'test_ipc_lifecycle(test_multikernelmanager.py)', '666': 'test_tcp_cinfo(test_multikernelmanager.py)', '668': 'test_tcp_lifecycle_with_kernel_id(test_multikernelmanager.py)', '569': 'test_secure_write(test_connect.py)', '573': 'check_user_only_permissions(test_connect.py)', '574': 'fetch_win32_permissions(test_connect.py)', '563': 'test_find_connection_file_relative(test_connect.py)', '561': 'test_find_connection_file_abspath(test_connect.py)'}}, {'key': 2477, 'parent': 2478, 'tfidf_word': 'input display data complete info token file connection session find ', 'tfidf_method': 'test_complete_reply test_display_data test_input_request test_inspect_reply test_inspect_request test_inspect_request_token test_kernel_info_reply test_find_connection_file test_load_connection_file_session test_load_connection_file_session_with_kn ', 'lda_word': ' test,adapt,reply,request,inspect,', 'lda_method': ' session,test_load_connection_file_session,test_load_connection_file_session_with_kn,adapt,test_input_request,', 'lsi_word': ' test,file,connection,session,adapt,', 'lsi_method': ' adapt,test_inspect_reply,test_complete_reply,test_kernel_info_reply,test_inspect_request_token,', 'spm_method': ' ', 'text_summary': '', 'files_count': 4, 'files': ['test_connect.py', 'connect.py', 'session.py', 'test_adapter.py'], 'execution_path_count': 10, 'function_id_to_name_file': {'560': 'test_find_connection_file(test_connect.py)', '189': 'find_connection_file(connect.py)', '565': 'test_load_connection_file_session_with_kn(test_connect.py)', '441': 'Session(session.py)', '539': 'test_input_request(test_adapter.py)', '517': 'adapt(test_adapter.py)', '564': 'test_load_connection_file_session(test_connect.py)', '537': 'test_display_data(test_adapter.py)', '540': 'test_inspect_reply(test_adapter.py)', '543': 'test_kernel_info_reply(test_adapter.py)', '542': 'test_inspect_request_token(test_adapter.py)', '535': 'test_complete_reply(test_adapter.py)', '541': 'test_inspect_request(test_adapter.py)'}}, {'key': 1000, 'parent': 2502, 'tfidf_word': 'EP: 1000, Name: test_execute_request &rarr; adapt', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2501, 'parent': 2502, 'tfidf_word': 'set display v5to kernel input data found default line code ', 'tfidf_method': 'test_complete_request test_complete_reply setUp test_default_version test_code_to_line_no_code V5toV4TestCase V4toV5TestCase code_to_line test_rename_type test_same_version ', 'lda_word': ' adapt,test,version,session,default,', 'lda_method': ' adapt,test_no_adapt,v5tov4testcase,adaptertest,session,', 'lsi_word': ' test,adapt,reply,info,request,', 'lsi_method': ' adapt,test_rename_type,test_same_version,test_no_adapt,test_input_request,', 'spm_method': ' ', 'text_summary': 'Empty', 'files_count': 3, 'files': ['test_adapter.py', 'session.py', 'adapter.py'], 'execution_path_count': 21, 'function_id_to_name_file': {'545': 'test_rename_type(test_adapter.py)', '517': 'adapt(test_adapter.py)', '544': 'test_no_adapt(test_adapter.py)', '546': 'test_same_version(test_adapter.py)', '514': 'V5toV4TestCase(test_adapter.py)', '512': 'AdapterTest(test_adapter.py)', '526': 'test_input_request(test_adapter.py)', '523': 'test_display_data(test_adapter.py)', '527': 'test_kernel_info_reply(test_adapter.py)', '530': 'test_object_info_reply_not_found(test_adapter.py)', '529': 'test_object_info_reply(test_adapter.py)', '531': 'test_object_info_request(test_adapter.py)', '521': 'test_complete_reply(test_adapter.py)', '522': 'test_complete_request(test_adapter.py)', '524': 'test_execute_reply(test_adapter.py)', '532': 'test_rename_type(test_adapter.py)', '525': 'test_execute_request(test_adapter.py)', '528': 'test_no_adapt(test_adapter.py)', '533': 'test_same_version(test_adapter.py)', '513': 'V4toV5TestCase(test_adapter.py)', '519': 'setUp(test_adapter.py)', '441': 'Session(session.py)', '516': 'test_default_version(test_adapter.py)', '515': 'test_code_to_line_no_code(test_adapter.py)', '51': 'code_to_line(adapter.py)'}}, {'key': 890, 'parent': 2513, 'tfidf_word': 'EP: 890, Name: execute &rarr; get_shell_msg', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2512, 'parent': 2513, 'tfidf_word': 'get feed exit enter lifecycle unpacker execute raw send clone ', 'tfidf_method': 'execute execute test_kernelapp_lifecycle _launch sign send_raw feed_identities clone start stop ', 'lda_word': ' clone,test,session,execute,bad,', 'lda_method': ' session,test_datetimes_msgpack,test_bad_roundtrip,test_datetimes,execute,', 'lsi_word': ' test,session,bad,datetimes,send,', 'lsi_method': ' execute,get_iopub_msg,session,test_send_raw,test_bad_roundtrip,', 'spm_method': ' ', 'text_summary': 'Split the identities from the rest of the message. Start the polling of the kernel. Stop the kernel polling. Sign a message with HMAC digest. Send a raw message via ident path.', 'files_count': 6, 'files': ['utils.py', 'test_kernelmanager.py', 'client.py', 'test_kernelapp.py', 'test_session.py', 'session.py'], 'execution_path_count': 19, 'function_id_to_name_file': {'704': 'execute(utils.py)', '607': 'execute(test_kernelmanager.py)', '615': 'execute(test_kernelmanager.py)', '598': 'execute(test_kernelmanager.py)', '608': 'execute(test_kernelmanager.py)', '157': 'get_iopub_msg(client.py)', '710': '__exit__(utils.py)', '712': 'stop(utils.py)', '709': '__enter__(utils.py)', '711': 'start(utils.py)', '580': 'test_kernelapp_lifecycle(test_kernelapp.py)', '579': '_launch(test_kernelapp.py)', '686': 'test_clone(test_session.py)', '441': 'Session(session.py)', '473': 'clone(session.py)', '695': 'test_send_raw(test_session.py)', '481': 'send_raw(session.py)', '483': 'sign(session.py)', '689': 'test_datetimes_msgpack(test_session.py)', '475': 'feed_identities(session.py)', '690': 'test_datetimes_pickle(test_session.py)', '688': 'test_datetimes(test_session.py)', '683': 'test_bad_roundtrip(test_session.py)', '685': 'test_bad_unpacker(test_session.py)', '684': 'test_bad_unpack(test_session.py)', '682': 'test_bad_packer(test_session.py)'}}, {'key': 787, 'parent': 2551, 'tfidf_word': 'EP: 787, Name: test_args &rarr; Session', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2550, 'parent': 2551, 'tfidf_word': 'start shutdown inspect serialize env history socket zmq send session ', 'tfidf_method': 'NoSuchKernel hb_channel wrapped wait_for_ready reqrep send wrapped wait_for_ready test_inspect reqrep ', 'lda_word': ' test,check,reply,send,session,', 'lda_method': ' test_send,msg_id,check_reply,setup,make_url,', 'lsi_word': ' test,reply,check,send,info,', 'lsi_method': ' check_reply,test_kernel_info,test_shutdown,test_history,test_comm_info,', 'spm_method': ' ', 'text_summary': 'Stop the kernel polling. Split the identities from the rest of the message. Start the polling of the kernel. Pass a message to the ZMQ socket to send.', 'files_count': 9, 'files': ['test_session.py', 'channels.py', 'session.py', 'test_client.py', 'utils.py', 'kernelspec.py', 'client.py', 'connect.py', 'threaded.py'], 'execution_path_count': 30, 'function_id_to_name_file': {'694': 'test_send(test_session.py)', '114': 'send(channels.py)', '478': 'msg_id(session.py)', '88': 'send(channels.py)', '475': 'feed_identities(session.py)', '696': 'test_serialize(test_session.py)', '674': 'TestSession(test_session.py)', '673': 'SessionTestCase(test_session.py)', '678': 'setUp(test_session.py)', '441': 'Session(session.py)', '556': 'test_shutdown(test_client.py)', '548': '_check_reply(test_client.py)', '550': 'test_comm_info(test_client.py)', '555': 'test_kernel_info(test_client.py)', '551': 'test_complete(test_client.py)', '554': 'test_inspect(test_client.py)', '553': 'test_history(test_client.py)', '549': 'setUp(test_client.py)', '712': 'stop(utils.py)', '255': 'NoSuchKernel(kernelspec.py)', '711': 'start(utils.py)', '705': 'test_env(utils.py)', '116': 'BlockingKernelClient(client.py)', '117': 'reqrep(client.py)', '124': 'wrapped(client.py)', '123': 'wait_for_ready(client.py)', '150': '_handle_kernel_info_reply(client.py)', '125': 'HBChannel(channels.py)', '104': 'wait_for_ready(client.py)', '102': 'hb_channel(client.py)', '196': '_make_url(connect.py)', '90': 'AsyncKernelClient(client.py)', '91': 'reqrep(client.py)', '105': 'wrapped(client.py)', '80': 'ZMQSocketChannel(channels.py)', '83': 'close(channels.py)', '154': 'control_channel(client.py)', '723': 'ioloop(threaded.py)', '160': 'hb_channel(client.py)', '171': 'stdin_channel(client.py)'}}, {'key': 296, 'parent': 2563, 'tfidf_word': 'EP: 296, Name: __del__ &rarr; cleanup_connection_file', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2562, 'parent': 2563, 'tfidf_word': 'start key path ', 'tfidf_method': 'start start start start path_key start start start start start ', 'lda_word': ' start,path,key,', 'lda_method': ' start,path_key,', 'lsi_word': ' start,key,path,', 'lsi_method': ' start,path_key,', 'spm_method': ' ', 'text_summary': '', 'files_count': 6, 'files': ['kernelspecapp.py', 'threaded.py', 'utils.py', 'channelsabc.py', 'restarter.py', 'channels.py'], 'execution_path_count': 9, 'function_id_to_name_file': {'291': 'start(kernelspecapp.py)', '293': 'start(kernelspecapp.py)', '294': 'path_key(kernelspecapp.py)', '735': 'start(threaded.py)', '711': 'start(utils.py)', '720': 'start(threaded.py)', '141': 'start(channelsabc.py)', '432': 'start(restarter.py)', '288': 'start(kernelspecapp.py)', '89': 'start(channels.py)', '115': 'start(channels.py)'}}, {'key': 134, 'parent': 2588, 'tfidf_word': 'EP: 134, Name: object_info_request &rarr; extract_oname_v4 &rarr; code_to_line', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2587, 'parent': 2588, 'tfidf_word': 'id info init json header version kernel spec install native ', 'tfidf_method': 'Adapter __init__ new_id_bytes Message install_native_kernel_spec to_json to_dict install_native_kernel_spec complete_request kernel_info_reply ', 'lda_word': ' call,update,header,initialize,test,', 'lda_method': ' test_msg2obj,init,to_dict,to_json,call,', 'lsi_word': ' kernel,native,install,spec,reply,', 'lsi_method': ' call,handle_reply_status_error,update_header,update_metadata,update_msg_type,', 'spm_method': ' ', 'text_summary': "convert a version string to a list of ints. For tests, create a file to indicate that we've started.", 'files_count': 5, 'files': ['adapter.py', 'kernelapp.py', 'test_kernelmanager.py', 'kernelspec.py', 'session.py'], 'execution_path_count': 16, 'function_id_to_name_file': {'70': 'complete_request(adapter.py)', '51': 'code_to_line(adapter.py)', '75': 'kernel_info_reply(adapter.py)', '49': '_version_str_to_list(adapter.py)', '48': 'V5toV4(adapter.py)', '46': 'Adapter(adapter.py)', '53': '__call__(adapter.py)', '54': 'handle_reply_status_error(adapter.py)', '57': 'update_msg_type(adapter.py)', '56': 'update_metadata(adapter.py)', '55': 'update_header(adapter.py)', '247': 'initialize(kernelapp.py)', '246': '_record_started(kernelapp.py)', '585': 'config(test_kernelmanager.py)', '262': 'install_native_kernel_spec(kernelspec.py)', '276': 'install_native_kernel_spec(kernelspec.py)', '265': 'to_json(kernelspec.py)', '264': 'to_dict(kernelspec.py)', '449': 'test_msg2obj(session.py)', '440': 'Message(session.py)', '453': '__init__(session.py)', '470': '_signature_scheme_changed(session.py)', '465': '_new_auth(session.py)', '463': '_key_default(session.py)', '447': 'new_id_bytes(session.py)', '462': '_key_changed(session.py)'}}, {'key': 81, 'parent': 2605, 'tfidf_word': 'EP: 81, Name: shutdown_kernel &rarr; remove_kernel', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2602, 'parent': 2605, 'tfidf_word': 'remove list id hb cleanup zmq shutdown threaded start flush ', 'tfidf_method': 'start_channels HBChannel cleanup_resources list_kernel_ids remove_kernel request_shutdown ThreadedZMQSocketChannel start _flush flush ', 'lda_word': ' thread,shutdown,kernel,io,loop,', 'lda_method': ' threadedkernelclient,threadedzmqsocketchannel,shutdown_all,start_channels,ioloopthread,', 'lsi_word': ' thread,kernel,client,channel,loop,', 'lsi_method': ' shutdown_all,cleanup_resources,list_kernel_ids,remove_kernel,request_shutdown,', 'spm_method': ' ', 'text_summary': 'Shutdown all kernels. Send a shutdown request via control channel.', 'files_count': 3, 'files': ['threaded.py', 'channels.py', 'multikernelmanager.py'], 'execution_path_count': 10, 'function_id_to_name_file': {'724': 'start_channels(threaded.py)', '713': 'IOLoopThread(threaded.py)', '720': 'start(threaded.py)', '714': 'ThreadedKernelClient(threaded.py)', '715': 'ThreadedZMQSocketChannel(threaded.py)', '125': 'HBChannel(channels.py)', '731': 'flush(threaded.py)', '727': '_flush(threaded.py)', '386': 'shutdown_all(multikernelmanager.py)', '416': 'remove_kernel(multikernelmanager.py)', '413': 'list_kernel_ids(multikernelmanager.py)', '418': 'request_shutdown(multikernelmanager.py)', '402': 'cleanup_resources(multikernelmanager.py)'}}, {'key': 15, 'parent': 2624, 'tfidf_word': 'EP: 15, Name: stop &rarr; close', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2623, 'parent': 2624, 'tfidf_word': 'alive beating ', 'tfidf_method': 'is_beating is_alive is_alive ', 'lda_word': ' beating,alive,', 'lda_method': ' is_beating,is_alive,', 'lsi_word': ' beating,alive,', 'lsi_method': ' is_beating,is_alive,', 'spm_method': ' ', 'text_summary': '', 'files_count': 3, 'files': ['channels.py', 'multikernelmanager.py', 'managerabc.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'133': 'is_beating(channels.py)', '412': 'is_alive(multikernelmanager.py)', '373': 'is_alive(managerabc.py)'}}, {'key': 12, 'parent': 2630, 'tfidf_word': 'EP: 12, Name: is_beating &rarr; is_alive', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2629, 'parent': 2630, 'tfidf_word': 'alive beating ', 'tfidf_method': 'is_beating is_alive is_alive ', 'lda_word': ' beating,alive,', 'lda_method': ' is_alive,is_beating,', 'lsi_word': ' beating,alive,', 'lsi_method': ' is_beating,is_alive,', 'spm_method': ' ', 'text_summary': '', 'files_count': 2, 'files': ['channels.py', 'threaded.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'133': 'is_beating(channels.py)', '112': 'is_alive(channels.py)', '732': 'is_alive(threaded.py)'}}, {'key': 1104, 'parent': 2465, 'tfidf_word': 'EP: 1104, Name: test_find_connection_file_local &rarr; find_connection_file', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2461, 'parent': 2465, 'tfidf_word': 'env find connection file signal default subclass date name permission ', 'tfidf_method': '_env_test_body test_signal_kernel_subprocesses test_templated_kspec_env execute execute test_start_parallel_process_kernels test_start_parallel_thread_kernels close test_secure_write send ', 'lda_word': ' test,kernel,tcp,start,signal,', 'lda_method': ' handle,close,test_env,find_connection_file,send,', 'lsi_word': ' test,kernel,run,lifecycle,cinfo,', 'lsi_method': ' handle,close,send,run_lifecycle,test_start_sequence_ipc_kernels,', 'spm_method': ' ', 'text_summary': "find a connection file, and return its absolute path. return ip for localhost (almost always 127.0.0.1)      find a connection file, and return its absolute path. return ip for localhost (almost always 127.0.0.1)   Ensure that a sequence of kernel startups doesn't break anything. Start the polling of the kernel. Ensure that a sequence of kernel startups doesn't break anything. Check that a kernel name is valid. Ensure a datetime object has tzinfo.", 'files_count': 16, 'files': ['forward.py', 'threaded.py', 'test_manager.py', 'kernelspec.py', 'channels.py', 'test_jsonutil.py', 'session.py', 'jsonutil.py', 'test_kernelmanager.py', 'utils.py', 'test_kernelspec.py', 'signalkernel.py', 'test_multikernelmanager.py', 'localinterfaces.py', 'test_connect.py', 'connect.py'], 'execution_path_count': 48, 'function_id_to_name_file': {'492': 'handle(forward.py)', '730': 'close(threaded.py)', '493': 'SubHander(forward.py)', '490': 'Handler(forward.py)', '635': 'test_connection_file_real_path(test_manager.py)', '253': 'KernelSpec(kernelspec.py)', '718': 'close(threaded.py)', '132': 'close(channels.py)', '114': 'send(channels.py)', '88': 'send(channels.py)', '83': 'close(channels.py)', '109': 'close(channels.py)', '575': 'test_date_default(test_jsonutil.py)', '450': 'utcnow(session.py)', '241': 'date_default(jsonutil.py)', '240': '_ensure_tzinfo(jsonutil.py)', '597': 'test_subclasses(test_kernelmanager.py)', '703': 'AsyncKernelManagerWithCleanup(utils.py)', '595': 'test_signal_kernel_subprocesses(test_kernelmanager.py)', '598': 'execute(test_kernelmanager.py)', '702': 'AsyncKernelManagerSubclass(utils.py)', '611': 'test_start_parallel_process_kernels(test_kernelmanager.py)', '591': 'transport(test_kernelmanager.py)', '606': 'test_templated_kspec_env(test_kernelmanager.py)', '599': '_env_test_body(test_kernelmanager.py)', '607': 'execute(test_kernelmanager.py)', '612': 'test_start_parallel_thread_kernels(test_kernelmanager.py)', '604': 'test_signal_kernel_subprocesses(test_kernelmanager.py)', '608': 'execute(test_kernelmanager.py)', '586': 'env(test_kernelmanager.py)', '712': 'stop(utils.py)', '711': 'start(utils.py)', '705': 'test_env(utils.py)', '630': 'test_validate_kernel_name(test_kernelspec.py)', '257': '_is_valid_kernel_name(kernelspec.py)', '506': 'SignalTestApp(signalkernel.py)', '507': 'SignalTestKernel(signalkernel.py)', '627': 'test_remove_kernel_spec(test_kernelspec.py)', '617': '_install_sample_kernel(test_kernelspec.py)', '626': 'test_kernel_spec_priority(test_kernelspec.py)', '651': 'test_tcp_cinfo(test_multikernelmanager.py)', '640': '_run_cinfo(test_multikernelmanager.py)', '621': 'test_find_all_specs(test_kernelspec.py)', '622': 'test_find_kernel_specs(test_kernelspec.py)', '623': 'test_get_kernel_spec(test_kernelspec.py)', '619': 'tearDown(test_kernelspec.py)', '618': 'setUp(test_kernelspec.py)', '649': 'test_start_sequence_ipc_kernels(test_multikernelmanager.py)', '641': '_run_lifecycle(test_multikernelmanager.py)', '650': 'test_start_sequence_tcp_kernels(test_multikernelmanager.py)', '644': 'test_ipc_cinfo(test_multikernelmanager.py)', '315': 'localhost(localinterfaces.py)', '645': 'test_ipc_lifecycle(test_multikernelmanager.py)', '665': 'test_start_sequence_tcp_kernels(test_multikernelmanager.py)', '657': '_run_lifecycle(test_multikernelmanager.py)', '664': 'test_start_sequence_ipc_kernels(test_multikernelmanager.py)', '659': 'test_ipc_cinfo(test_multikernelmanager.py)', '656': '_run_cinfo(test_multikernelmanager.py)', '660': 'test_ipc_lifecycle(test_multikernelmanager.py)', '666': 'test_tcp_cinfo(test_multikernelmanager.py)', '668': 'test_tcp_lifecycle_with_kernel_id(test_multikernelmanager.py)', '569': 'test_secure_write(test_connect.py)', '573': 'check_user_only_permissions(test_connect.py)', '574': 'fetch_win32_permissions(test_connect.py)', '563': 'test_find_connection_file_relative(test_connect.py)', '189': 'find_connection_file(connect.py)', '561': 'test_find_connection_file_abspath(test_connect.py)'}}, {'key': 1103, 'parent': 2477, 'tfidf_word': 'EP: 1103, Name: test_find_connection_file &rarr; find_connection_file', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2476, 'parent': 2477, 'tfidf_word': 'connection info input data kernel kn complete display token session ', 'tfidf_method': 'Session test_complete_reply test_display_data test_input_request test_inspect_reply test_inspect_request test_inspect_request_token test_kernel_info_reply test_load_connection_file_session test_load_connection_file_session_with_kn ', 'lda_word': ' test,adapt,reply,request,inspect,', 'lda_method': ' adapt,session,test_inspect_request_token,test_kernel_info_reply,test_load_connection_file_session,', 'lsi_word': ' test,adapt,session,inspect,request,', 'lsi_method': ' adapt,test_complete_reply,test_inspect_reply,test_inspect_request_token,test_display_data,', 'spm_method': ' ', 'text_summary': '', 'files_count': 3, 'files': ['test_connect.py', 'session.py', 'test_adapter.py'], 'execution_path_count': 9, 'function_id_to_name_file': {'565': 'test_load_connection_file_session_with_kn(test_connect.py)', '441': 'Session(session.py)', '539': 'test_input_request(test_adapter.py)', '517': 'adapt(test_adapter.py)', '564': 'test_load_connection_file_session(test_connect.py)', '537': 'test_display_data(test_adapter.py)', '540': 'test_inspect_reply(test_adapter.py)', '543': 'test_kernel_info_reply(test_adapter.py)', '542': 'test_inspect_request_token(test_adapter.py)', '535': 'test_complete_reply(test_adapter.py)', '541': 'test_inspect_request(test_adapter.py)'}}, {'key': 995, 'parent': 2501, 'tfidf_word': 'EP: 995, Name: test_rename_type &rarr; adapt', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2500, 'parent': 2501, 'tfidf_word': 'display rename v5to kernel input data found default line code ', 'tfidf_method': 'test_complete_request test_complete_reply setUp test_default_version test_code_to_line_no_code V5toV4TestCase V4toV5TestCase code_to_line test_execute_reply test_same_version ', 'lda_word': ' test,case,adapter,execute,adapt,', 'lda_method': ' adaptertest,test_complete_reply,v4tov5testcase,adapt,session,', 'lsi_word': ' test,adapt,reply,info,request,', 'lsi_method': ' adapt,test_no_adapt,test_same_version,test_kernel_info_reply,test_rename_type,', 'spm_method': ' ', 'text_summary': 'Empty', 'files_count': 3, 'files': ['test_adapter.py', 'session.py', 'adapter.py'], 'execution_path_count': 20, 'function_id_to_name_file': {'544': 'test_no_adapt(test_adapter.py)', '517': 'adapt(test_adapter.py)', '546': 'test_same_version(test_adapter.py)', '514': 'V5toV4TestCase(test_adapter.py)', '512': 'AdapterTest(test_adapter.py)', '526': 'test_input_request(test_adapter.py)', '523': 'test_display_data(test_adapter.py)', '527': 'test_kernel_info_reply(test_adapter.py)', '530': 'test_object_info_reply_not_found(test_adapter.py)', '529': 'test_object_info_reply(test_adapter.py)', '531': 'test_object_info_request(test_adapter.py)', '521': 'test_complete_reply(test_adapter.py)', '522': 'test_complete_request(test_adapter.py)', '524': 'test_execute_reply(test_adapter.py)', '532': 'test_rename_type(test_adapter.py)', '525': 'test_execute_request(test_adapter.py)', '528': 'test_no_adapt(test_adapter.py)', '533': 'test_same_version(test_adapter.py)', '513': 'V4toV5TestCase(test_adapter.py)', '519': 'setUp(test_adapter.py)', '441': 'Session(session.py)', '516': 'test_default_version(test_adapter.py)', '515': 'test_code_to_line_no_code(test_adapter.py)', '51': 'code_to_line(adapter.py)'}}, {'key': 889, 'parent': 2512, 'tfidf_word': 'EP: 889, Name: execute &rarr; execute', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2511, 'parent': 2512, 'tfidf_word': 'get feed exit enter lifecycle unpacker execute raw send clone ', 'tfidf_method': 'execute execute test_kernelapp_lifecycle _launch sign send_raw feed_identities clone start stop ', 'lda_word': ' send,raw,test,sign,execute,', 'lda_method': ' get_iopub_msg,execute,session,test_clone,start,', 'lsi_word': ' test,session,bad,datetimes,raw,', 'lsi_method': ' execute,get_iopub_msg,session,exit,test_clone,', 'spm_method': ' ', 'text_summary': 'Split the identities from the rest of the message. Start the polling of the kernel. Stop the kernel polling. Sign a message with HMAC digest. Send a raw message via ident path.', 'files_count': 6, 'files': ['utils.py', 'test_kernelmanager.py', 'client.py', 'test_kernelapp.py', 'test_session.py', 'session.py'], 'execution_path_count': 18, 'function_id_to_name_file': {'704': 'execute(utils.py)', '615': 'execute(test_kernelmanager.py)', '598': 'execute(test_kernelmanager.py)', '608': 'execute(test_kernelmanager.py)', '157': 'get_iopub_msg(client.py)', '710': '__exit__(utils.py)', '712': 'stop(utils.py)', '709': '__enter__(utils.py)', '711': 'start(utils.py)', '580': 'test_kernelapp_lifecycle(test_kernelapp.py)', '579': '_launch(test_kernelapp.py)', '686': 'test_clone(test_session.py)', '441': 'Session(session.py)', '473': 'clone(session.py)', '695': 'test_send_raw(test_session.py)', '481': 'send_raw(session.py)', '483': 'sign(session.py)', '689': 'test_datetimes_msgpack(test_session.py)', '475': 'feed_identities(session.py)', '690': 'test_datetimes_pickle(test_session.py)', '688': 'test_datetimes(test_session.py)', '683': 'test_bad_roundtrip(test_session.py)', '685': 'test_bad_unpacker(test_session.py)', '684': 'test_bad_unpack(test_session.py)', '682': 'test_bad_packer(test_session.py)'}}, {'key': 773, 'parent': 2550, 'tfidf_word': 'EP: 773, Name: test_send &rarr; send', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2549, 'parent': 2550, 'tfidf_word': 'serialize env no msg history id shutdown zmq send session ', 'tfidf_method': 'Session NoSuchKernel hb_channel wrapped wait_for_ready reqrep wrapped wait_for_ready test_kernel_info reqrep ', 'lda_word': ' test,send,reply,check,session,', 'lda_method': ' hbchannel,ioloop,test_send,asynckernelclient,send,', 'lsi_word': ' test,reply,check,kernel,info,', 'lsi_method': ' check_reply,test_history,test_complete,test_shutdown,test_kernel_info,', 'spm_method': ' ', 'text_summary': 'Get the hb channel object for this kernel. Make a ZeroMQ URL for a given channel.', 'files_count': 9, 'files': ['test_session.py', 'session.py', 'channels.py', 'test_client.py', 'utils.py', 'kernelspec.py', 'client.py', 'connect.py', 'threaded.py'], 'execution_path_count': 29, 'function_id_to_name_file': {'694': 'test_send(test_session.py)', '478': 'msg_id(session.py)', '88': 'send(channels.py)', '475': 'feed_identities(session.py)', '696': 'test_serialize(test_session.py)', '674': 'TestSession(test_session.py)', '673': 'SessionTestCase(test_session.py)', '678': 'setUp(test_session.py)', '441': 'Session(session.py)', '556': 'test_shutdown(test_client.py)', '548': '_check_reply(test_client.py)', '550': 'test_comm_info(test_client.py)', '555': 'test_kernel_info(test_client.py)', '551': 'test_complete(test_client.py)', '554': 'test_inspect(test_client.py)', '553': 'test_history(test_client.py)', '549': 'setUp(test_client.py)', '712': 'stop(utils.py)', '255': 'NoSuchKernel(kernelspec.py)', '711': 'start(utils.py)', '705': 'test_env(utils.py)', '116': 'BlockingKernelClient(client.py)', '117': 'reqrep(client.py)', '124': 'wrapped(client.py)', '123': 'wait_for_ready(client.py)', '150': '_handle_kernel_info_reply(client.py)', '125': 'HBChannel(channels.py)', '104': 'wait_for_ready(client.py)', '102': 'hb_channel(client.py)', '196': '_make_url(connect.py)', '90': 'AsyncKernelClient(client.py)', '91': 'reqrep(client.py)', '105': 'wrapped(client.py)', '80': 'ZMQSocketChannel(channels.py)', '83': 'close(channels.py)', '154': 'control_channel(client.py)', '723': 'ioloop(threaded.py)', '160': 'hb_channel(client.py)', '171': 'stdin_channel(client.py)'}}, {'key': 282, 'parent': 2562, 'tfidf_word': 'EP: 282, Name: start &rarr; start &rarr; path_key', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2561, 'parent': 2562, 'tfidf_word': 'start ', 'tfidf_method': 'start start start start start start start start start ', 'lda_word': ' start,', 'lda_method': ' start,', 'lsi_word': ' start,', 'lsi_method': ' start,', 'spm_method': ' ', 'text_summary': '', 'files_count': 6, 'files': ['kernelspecapp.py', 'threaded.py', 'utils.py', 'channelsabc.py', 'restarter.py', 'channels.py'], 'execution_path_count': 8, 'function_id_to_name_file': {'291': 'start(kernelspecapp.py)', '735': 'start(threaded.py)', '711': 'start(utils.py)', '720': 'start(threaded.py)', '141': 'start(channelsabc.py)', '432': 'start(restarter.py)', '288': 'start(kernelspecapp.py)', '89': 'start(channels.py)', '115': 'start(channels.py)'}}, {'key': 133, 'parent': 2587, 'tfidf_word': 'EP: 133, Name: complete_request &rarr; code_to_line', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2586, 'parent': 2587, 'tfidf_word': 'version id info init json message kernel install native spec ', 'tfidf_method': 'Adapter __init__ new_id_bytes Message install_native_kernel_spec to_json to_dict install_native_kernel_spec _key_default kernel_info_reply ', 'lda_word': ' kernel,native,spec,install,test,', 'lda_method': ' new_auth,kernel_info_reply,signature_scheme_changed,record_started,key_changed,', 'lsi_word': ' kernel,spec,native,install,reply,', 'lsi_method': ' call,handle_reply_status_error,update_header,update_msg_type,update_metadata,', 'spm_method': ' ', 'text_summary': "For tests, create a file to indicate that we've started.", 'files_count': 5, 'files': ['adapter.py', 'kernelapp.py', 'test_kernelmanager.py', 'kernelspec.py', 'session.py'], 'execution_path_count': 15, 'function_id_to_name_file': {'75': 'kernel_info_reply(adapter.py)', '49': '_version_str_to_list(adapter.py)', '48': 'V5toV4(adapter.py)', '46': 'Adapter(adapter.py)', '53': '__call__(adapter.py)', '54': 'handle_reply_status_error(adapter.py)', '57': 'update_msg_type(adapter.py)', '56': 'update_metadata(adapter.py)', '55': 'update_header(adapter.py)', '247': 'initialize(kernelapp.py)', '246': '_record_started(kernelapp.py)', '585': 'config(test_kernelmanager.py)', '262': 'install_native_kernel_spec(kernelspec.py)', '276': 'install_native_kernel_spec(kernelspec.py)', '265': 'to_json(kernelspec.py)', '264': 'to_dict(kernelspec.py)', '449': 'test_msg2obj(session.py)', '440': 'Message(session.py)', '453': '__init__(session.py)', '470': '_signature_scheme_changed(session.py)', '465': '_new_auth(session.py)', '463': '_key_default(session.py)', '447': 'new_id_bytes(session.py)', '462': '_key_changed(session.py)'}}, {'key': 96, 'parent': 2602, 'tfidf_word': 'EP: 96, Name: start_channels &rarr; IOLoopThread', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2601, 'parent': 2602, 'tfidf_word': 'io id hb cleanup channels zmq shutdown threaded flush start ', 'tfidf_method': 'cleanup_resources list_kernel_ids remove_kernel request_shutdown IOLoopThread ThreadedZMQSocketChannel start start_channels _flush flush ', 'lda_word': ' shutdown,kernel,thread,flush,client,', 'lda_method': ' shutdown_all,list_kernel_ids,threadedkernelclient,flush,start,', 'lsi_word': ' thread,kernel,client,channel,socket,', 'lsi_method': ' shutdown_all,cleanup_resources,remove_kernel,list_kernel_ids,request_shutdown,', 'spm_method': ' ', 'text_summary': 'Shutdown all kernels. Send a shutdown request via control channel.', 'files_count': 3, 'files': ['threaded.py', 'channels.py', 'multikernelmanager.py'], 'execution_path_count': 9, 'function_id_to_name_file': {'724': 'start_channels(threaded.py)', '720': 'start(threaded.py)', '714': 'ThreadedKernelClient(threaded.py)', '713': 'IOLoopThread(threaded.py)', '715': 'ThreadedZMQSocketChannel(threaded.py)', '125': 'HBChannel(channels.py)', '731': 'flush(threaded.py)', '727': '_flush(threaded.py)', '386': 'shutdown_all(multikernelmanager.py)', '416': 'remove_kernel(multikernelmanager.py)', '413': 'list_kernel_ids(multikernelmanager.py)', '418': 'request_shutdown(multikernelmanager.py)', '402': 'cleanup_resources(multikernelmanager.py)'}}, {'key': 13, 'parent': 2623, 'tfidf_word': 'EP: 13, Name: is_beating &rarr; is_alive', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 14, 'parent': 2623, 'tfidf_word': 'EP: 14, Name: is_beating &rarr; is_alive', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 10, 'parent': 2629, 'tfidf_word': 'EP: 10, Name: is_beating &rarr; is_alive', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 11, 'parent': 2629, 'tfidf_word': 'EP: 11, Name: is_beating &rarr; is_alive', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2453, 'parent': 2461, 'tfidf_word': 'handler with lifecycle env signal cinfo subclass default date name ', 'tfidf_method': '_env_test_body test_signal_kernel_subprocesses test_templated_kspec_env execute execute test_start_parallel_process_kernels test_start_parallel_thread_kernels close SignalTestKernel send ', 'lda_word': ' set,stop,start,tear,test,', 'lda_method': ' handle,close,execute,test_date_default,test_signal_kernel_subprocesses,', 'lsi_word': ' kernel,test,sample,install,start,', 'lsi_method': ' handle,close,send,install_sample_kernel,run_lifecycle,', 'spm_method': ' ', 'text_summary': "return ip for localhost (almost always 127.0.0.1)   Ensure that a sequence of kernel startups doesn't break anything. Start the polling of the kernel. Ensure that a sequence of kernel startups doesn't break anything. Check that a kernel name is valid. Ensure a datetime object has tzinfo.", 'files_count': 14, 'files': ['forward.py', 'threaded.py', 'test_manager.py', 'kernelspec.py', 'channels.py', 'test_jsonutil.py', 'session.py', 'jsonutil.py', 'test_kernelmanager.py', 'utils.py', 'test_kernelspec.py', 'signalkernel.py', 'test_multikernelmanager.py', 'localinterfaces.py'], 'execution_path_count': 40, 'function_id_to_name_file': {'492': 'handle(forward.py)', '730': 'close(threaded.py)', '493': 'SubHander(forward.py)', '490': 'Handler(forward.py)', '635': 'test_connection_file_real_path(test_manager.py)', '253': 'KernelSpec(kernelspec.py)', '718': 'close(threaded.py)', '132': 'close(channels.py)', '114': 'send(channels.py)', '88': 'send(channels.py)', '83': 'close(channels.py)', '109': 'close(channels.py)', '575': 'test_date_default(test_jsonutil.py)', '450': 'utcnow(session.py)', '241': 'date_default(jsonutil.py)', '240': '_ensure_tzinfo(jsonutil.py)', '597': 'test_subclasses(test_kernelmanager.py)', '703': 'AsyncKernelManagerWithCleanup(utils.py)', '595': 'test_signal_kernel_subprocesses(test_kernelmanager.py)', '598': 'execute(test_kernelmanager.py)', '702': 'AsyncKernelManagerSubclass(utils.py)', '611': 'test_start_parallel_process_kernels(test_kernelmanager.py)', '591': 'transport(test_kernelmanager.py)', '606': 'test_templated_kspec_env(test_kernelmanager.py)', '599': '_env_test_body(test_kernelmanager.py)', '607': 'execute(test_kernelmanager.py)', '612': 'test_start_parallel_thread_kernels(test_kernelmanager.py)', '604': 'test_signal_kernel_subprocesses(test_kernelmanager.py)', '608': 'execute(test_kernelmanager.py)', '586': 'env(test_kernelmanager.py)', '712': 'stop(utils.py)', '711': 'start(utils.py)', '705': 'test_env(utils.py)', '630': 'test_validate_kernel_name(test_kernelspec.py)', '257': '_is_valid_kernel_name(kernelspec.py)', '506': 'SignalTestApp(signalkernel.py)', '507': 'SignalTestKernel(signalkernel.py)', '627': 'test_remove_kernel_spec(test_kernelspec.py)', '617': '_install_sample_kernel(test_kernelspec.py)', '626': 'test_kernel_spec_priority(test_kernelspec.py)', '651': 'test_tcp_cinfo(test_multikernelmanager.py)', '640': '_run_cinfo(test_multikernelmanager.py)', '621': 'test_find_all_specs(test_kernelspec.py)', '622': 'test_find_kernel_specs(test_kernelspec.py)', '623': 'test_get_kernel_spec(test_kernelspec.py)', '619': 'tearDown(test_kernelspec.py)', '618': 'setUp(test_kernelspec.py)', '649': 'test_start_sequence_ipc_kernels(test_multikernelmanager.py)', '641': '_run_lifecycle(test_multikernelmanager.py)', '650': 'test_start_sequence_tcp_kernels(test_multikernelmanager.py)', '644': 'test_ipc_cinfo(test_multikernelmanager.py)', '315': 'localhost(localinterfaces.py)', '645': 'test_ipc_lifecycle(test_multikernelmanager.py)', '665': 'test_start_sequence_tcp_kernels(test_multikernelmanager.py)', '657': '_run_lifecycle(test_multikernelmanager.py)', '664': 'test_start_sequence_ipc_kernels(test_multikernelmanager.py)'}}, {'key': 2460, 'parent': 2461, 'tfidf_word': 'id fetch check kernel cinfo find file connection lifecycle permission ', 'tfidf_method': 'test_tcp_cinfo localhost test_find_connection_file_abspath test_find_connection_file_relative test_secure_write check_user_only_permissions fetch_win32_permissions test_ipc_cinfo test_ipc_lifecycle test_tcp_lifecycle_with_kernel_id ', 'lda_word': ' permission,test,secure,check,win32,', 'lda_method': ' check_user_only_permissions,test_secure_write,fetch_win32_permissions,run_lifecycle,find_connection_file,', 'lsi_word': ' connection,find,file,test,cinfo,', 'lsi_method': ' run_cinfo,test_tcp_cinfo,test_ipc_cinfo,localhost,test_tcp_lifecycle_with_kernel_id,', 'spm_method': ' ', 'text_summary': '', 'files_count': 4, 'files': ['test_multikernelmanager.py', 'localinterfaces.py', 'test_connect.py', 'connect.py'], 'execution_path_count': 8, 'function_id_to_name_file': {'659': 'test_ipc_cinfo(test_multikernelmanager.py)', '656': '_run_cinfo(test_multikernelmanager.py)', '660': 'test_ipc_lifecycle(test_multikernelmanager.py)', '657': '_run_lifecycle(test_multikernelmanager.py)', '666': 'test_tcp_cinfo(test_multikernelmanager.py)', '315': 'localhost(localinterfaces.py)', '668': 'test_tcp_lifecycle_with_kernel_id(test_multikernelmanager.py)', '569': 'test_secure_write(test_connect.py)', '573': 'check_user_only_permissions(test_connect.py)', '574': 'fetch_win32_permissions(test_connect.py)', '563': 'test_find_connection_file_relative(test_connect.py)', '189': 'find_connection_file(connect.py)', '561': 'test_find_connection_file_abspath(test_connect.py)'}}, {'key': 2464, 'parent': 2476, 'tfidf_word': 'test connection file load adapt input kn request session ', 'tfidf_method': 'Session adapt test_input_request test_load_connection_file_session test_load_connection_file_session_with_kn ', 'lda_word': ' test,session,connection,file,input,', 'lda_method': ' test_input_request,adapt,session,test_load_connection_file_session_with_kn,test_load_connection_file_session,', 'lsi_word': ' session,test,connection,load,file,', 'lsi_method': ' session,test_load_connection_file_session,test_load_connection_file_session_with_kn,adapt,test_input_request,', 'spm_method': ' ', 'text_summary': '', 'files_count': 3, 'files': ['test_connect.py', 'session.py', 'test_adapter.py'], 'execution_path_count': 3, 'function_id_to_name_file': {'565': 'test_load_connection_file_session_with_kn(test_connect.py)', '441': 'Session(session.py)', '539': 'test_input_request(test_adapter.py)', '517': 'adapt(test_adapter.py)', '564': 'test_load_connection_file_session(test_connect.py)'}}, {'key': 2475, 'parent': 2476, 'tfidf_word': 'test inspect reply request complete data display info kernel token ', 'tfidf_method': 'adapt test_complete_reply test_display_data test_inspect_reply test_inspect_request test_inspect_request_token test_kernel_info_reply ', 'lda_word': ' adapt,test,reply,complete,inspect,', 'lda_method': ' adapt,test_display_data,test_inspect_request_token,test_complete_reply,test_inspect_request,', 'lsi_word': ' adapt,test,inspect,reply,request,', 'lsi_method': ' adapt,test_complete_reply,test_kernel_info_reply,test_inspect_request_token,test_display_data,', 'spm_method': ' ', 'text_summary': '', 'files_count': 1, 'files': ['test_adapter.py'], 'execution_path_count': 6, 'function_id_to_name_file': {'537': 'test_display_data(test_adapter.py)', '517': 'adapt(test_adapter.py)', '540': 'test_inspect_reply(test_adapter.py)', '543': 'test_kernel_info_reply(test_adapter.py)', '542': 'test_inspect_request_token(test_adapter.py)', '535': 'test_complete_reply(test_adapter.py)', '541': 'test_inspect_request(test_adapter.py)'}}, {'key': 986, 'parent': 2500, 'tfidf_word': 'EP: 986, Name: test_no_adapt &rarr; adapt', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2499, 'parent': 2500, 'tfidf_word': 'display rename v5to kernel input data found default line code ', 'tfidf_method': 'test_complete_request test_complete_reply setUp test_default_version test_code_to_line_no_code V5toV4TestCase V4toV5TestCase code_to_line test_same_version test_same_version ', 'lda_word': ' adapt,test,reply,info,session,', 'lda_method': ' adapt,adaptertest,test_no_adapt,session,test_object_info_request,', 'lsi_word': ' test,adapt,reply,info,request,', 'lsi_method': ' adapt,test_same_version,test_input_request,test_complete_request,test_object_info_request,', 'spm_method': ' ', 'text_summary': 'Empty', 'files_count': 3, 'files': ['test_adapter.py', 'session.py', 'adapter.py'], 'execution_path_count': 19, 'function_id_to_name_file': {'546': 'test_same_version(test_adapter.py)', '517': 'adapt(test_adapter.py)', '514': 'V5toV4TestCase(test_adapter.py)', '512': 'AdapterTest(test_adapter.py)', '526': 'test_input_request(test_adapter.py)', '523': 'test_display_data(test_adapter.py)', '527': 'test_kernel_info_reply(test_adapter.py)', '530': 'test_object_info_reply_not_found(test_adapter.py)', '529': 'test_object_info_reply(test_adapter.py)', '531': 'test_object_info_request(test_adapter.py)', '521': 'test_complete_reply(test_adapter.py)', '522': 'test_complete_request(test_adapter.py)', '524': 'test_execute_reply(test_adapter.py)', '532': 'test_rename_type(test_adapter.py)', '525': 'test_execute_request(test_adapter.py)', '528': 'test_no_adapt(test_adapter.py)', '533': 'test_same_version(test_adapter.py)', '513': 'V4toV5TestCase(test_adapter.py)', '519': 'setUp(test_adapter.py)', '441': 'Session(session.py)', '516': 'test_default_version(test_adapter.py)', '515': 'test_code_to_line_no_code(test_adapter.py)', '51': 'code_to_line(adapter.py)'}}, {'key': 888, 'parent': 2511, 'tfidf_word': 'EP: 888, Name: execute &rarr; execute', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2510, 'parent': 2511, 'tfidf_word': 'get feed exit enter lifecycle unpacker execute raw send clone ', 'tfidf_method': 'execute execute test_kernelapp_lifecycle _launch sign send_raw feed_identities clone start stop ', 'lda_word': ' raw,send,test,sign,exit,', 'lda_method': ' session,execute,start,test_clone,test_bad_packer,', 'lsi_word': ' test,session,bad,datetimes,raw,', 'lsi_method': ' execute,get_iopub_msg,session,test_bad_unpack,test_clone,', 'spm_method': ' ', 'text_summary': 'Split the identities from the rest of the message. Stop the kernel polling. Send a raw message via ident path. Start the polling of the kernel.', 'files_count': 6, 'files': ['utils.py', 'test_kernelmanager.py', 'client.py', 'test_kernelapp.py', 'test_session.py', 'session.py'], 'execution_path_count': 17, 'function_id_to_name_file': {'704': 'execute(utils.py)', '598': 'execute(test_kernelmanager.py)', '608': 'execute(test_kernelmanager.py)', '157': 'get_iopub_msg(client.py)', '710': '__exit__(utils.py)', '712': 'stop(utils.py)', '709': '__enter__(utils.py)', '711': 'start(utils.py)', '580': 'test_kernelapp_lifecycle(test_kernelapp.py)', '579': '_launch(test_kernelapp.py)', '686': 'test_clone(test_session.py)', '441': 'Session(session.py)', '473': 'clone(session.py)', '695': 'test_send_raw(test_session.py)', '481': 'send_raw(session.py)', '483': 'sign(session.py)', '689': 'test_datetimes_msgpack(test_session.py)', '475': 'feed_identities(session.py)', '690': 'test_datetimes_pickle(test_session.py)', '688': 'test_datetimes(test_session.py)', '683': 'test_bad_roundtrip(test_session.py)', '685': 'test_bad_unpacker(test_session.py)', '684': 'test_bad_unpack(test_session.py)', '682': 'test_bad_packer(test_session.py)'}}, {'key': 770, 'parent': 2549, 'tfidf_word': 'EP: 770, Name: test_send &rarr; msg_id', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2548, 'parent': 2549, 'tfidf_word': 'inspect complete serialize env no history socket zmq session send ', 'tfidf_method': 'Session NoSuchKernel hb_channel wrapped wait_for_ready reqrep wrapped wait_for_ready test_shutdown reqrep ', 'lda_word': ' send,test,kernel,reqrep,wrap,', 'lda_method': ' check_reply,blockingkernelclient,wrap,reqrep,stdin_channel,', 'lsi_word': ' test,reply,check,kernel,info,', 'lsi_method': ' check_reply,test_shutdown,test_complete,test_history,test_kernel_info,', 'spm_method': ' ', 'text_summary': 'Stop the kernel polling. Split the identities from the rest of the message. Start the polling of the kernel. Pass a message to the ZMQ socket to send.', 'files_count': 9, 'files': ['test_session.py', 'channels.py', 'session.py', 'test_client.py', 'utils.py', 'kernelspec.py', 'client.py', 'connect.py', 'threaded.py'], 'execution_path_count': 28, 'function_id_to_name_file': {'694': 'test_send(test_session.py)', '88': 'send(channels.py)', '475': 'feed_identities(session.py)', '696': 'test_serialize(test_session.py)', '674': 'TestSession(test_session.py)', '673': 'SessionTestCase(test_session.py)', '678': 'setUp(test_session.py)', '441': 'Session(session.py)', '556': 'test_shutdown(test_client.py)', '548': '_check_reply(test_client.py)', '550': 'test_comm_info(test_client.py)', '555': 'test_kernel_info(test_client.py)', '551': 'test_complete(test_client.py)', '554': 'test_inspect(test_client.py)', '553': 'test_history(test_client.py)', '549': 'setUp(test_client.py)', '712': 'stop(utils.py)', '255': 'NoSuchKernel(kernelspec.py)', '711': 'start(utils.py)', '705': 'test_env(utils.py)', '116': 'BlockingKernelClient(client.py)', '117': 'reqrep(client.py)', '124': 'wrapped(client.py)', '123': 'wait_for_ready(client.py)', '150': '_handle_kernel_info_reply(client.py)', '125': 'HBChannel(channels.py)', '104': 'wait_for_ready(client.py)', '102': 'hb_channel(client.py)', '196': '_make_url(connect.py)', '90': 'AsyncKernelClient(client.py)', '91': 'reqrep(client.py)', '105': 'wrapped(client.py)', '80': 'ZMQSocketChannel(channels.py)', '83': 'close(channels.py)', '154': 'control_channel(client.py)', '723': 'ioloop(threaded.py)', '160': 'hb_channel(client.py)', '171': 'stdin_channel(client.py)'}}, {'key': 281, 'parent': 2561, 'tfidf_word': 'EP: 281, Name: start &rarr; start', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2560, 'parent': 2561, 'tfidf_word': 'start ', 'tfidf_method': 'start start start start start start start start ', 'lda_word': ' start,', 'lda_method': ' start,', 'lsi_word': ' start,', 'lsi_method': ' start,', 'spm_method': ' ', 'text_summary': '', 'files_count': 6, 'files': ['kernelspecapp.py', 'utils.py', 'threaded.py', 'channelsabc.py', 'restarter.py', 'channels.py'], 'execution_path_count': 7, 'function_id_to_name_file': {'291': 'start(kernelspecapp.py)', '711': 'start(utils.py)', '720': 'start(threaded.py)', '141': 'start(channelsabc.py)', '432': 'start(restarter.py)', '288': 'start(kernelspecapp.py)', '89': 'start(channels.py)', '115': 'start(channels.py)'}}, {'key': 132, 'parent': 2586, 'tfidf_word': 'EP: 132, Name: kernel_info_reply &rarr; _version_str_to_list', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2585, 'parent': 2586, 'tfidf_word': 'handle id init json header v5to spec install native kernel ', 'tfidf_method': 'update_msg_type __init__ new_id_bytes Message install_native_kernel_spec to_json to_dict install_native_kernel_spec _key_changed config ', 'lda_word': ' call,update,type,msg,metadata,', 'lda_method': ' call,initialize,handle_reply_status_error,record_started,signature_scheme_changed,', 'lsi_word': ' native,kernel,install,spec,adapter,', 'lsi_method': ' call,handle_reply_status_error,update_header,update_msg_type,update_metadata,', 'spm_method': ' ', 'text_summary': "For tests, create a file to indicate that we've started.", 'files_count': 5, 'files': ['adapter.py', 'kernelapp.py', 'test_kernelmanager.py', 'kernelspec.py', 'session.py'], 'execution_path_count': 14, 'function_id_to_name_file': {'48': 'V5toV4(adapter.py)', '46': 'Adapter(adapter.py)', '53': '__call__(adapter.py)', '54': 'handle_reply_status_error(adapter.py)', '57': 'update_msg_type(adapter.py)', '56': 'update_metadata(adapter.py)', '55': 'update_header(adapter.py)', '247': 'initialize(kernelapp.py)', '246': '_record_started(kernelapp.py)', '585': 'config(test_kernelmanager.py)', '262': 'install_native_kernel_spec(kernelspec.py)', '276': 'install_native_kernel_spec(kernelspec.py)', '265': 'to_json(kernelspec.py)', '264': 'to_dict(kernelspec.py)', '449': 'test_msg2obj(session.py)', '440': 'Message(session.py)', '453': '__init__(session.py)', '470': '_signature_scheme_changed(session.py)', '465': '_new_auth(session.py)', '463': '_key_default(session.py)', '447': 'new_id_bytes(session.py)', '462': '_key_changed(session.py)'}}, {'key': 95, 'parent': 2601, 'tfidf_word': 'EP: 95, Name: start_channels &rarr; start', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2600, 'parent': 2601, 'tfidf_word': 'loop list io id hb cleanup zmq shutdown threaded flush ', 'tfidf_method': 'ThreadedKernelClient HBChannel cleanup_resources list_kernel_ids remove_kernel request_shutdown IOLoopThread ThreadedZMQSocketChannel _flush flush ', 'lda_word': ' shutdown,request,cleanup,resource,flush,', 'lda_method': ' shutdown_all,remove_kernel,cleanup_resources,threadedkernelclient,flush,', 'lsi_word': ' thread,kernel,client,channel,zmq,', 'lsi_method': ' shutdown_all,remove_kernel,list_kernel_ids,cleanup_resources,request_shutdown,', 'spm_method': ' ', 'text_summary': 'Shutdown all kernels.', 'files_count': 3, 'files': ['threaded.py', 'channels.py', 'multikernelmanager.py'], 'execution_path_count': 8, 'function_id_to_name_file': {'714': 'ThreadedKernelClient(threaded.py)', '713': 'IOLoopThread(threaded.py)', '715': 'ThreadedZMQSocketChannel(threaded.py)', '125': 'HBChannel(channels.py)', '731': 'flush(threaded.py)', '727': '_flush(threaded.py)', '386': 'shutdown_all(multikernelmanager.py)', '416': 'remove_kernel(multikernelmanager.py)', '413': 'list_kernel_ids(multikernelmanager.py)', '418': 'request_shutdown(multikernelmanager.py)', '402': 'cleanup_resources(multikernelmanager.py)'}}, {'key': 2451, 'parent': 2453, 'tfidf_word': 'handler with env lifecycle signal cinfo subclass default date name ', 'tfidf_method': 'test_signal_kernel_subprocesses execute _env_test_body test_signal_kernel_subprocesses test_templated_kspec_env execute execute test_start_parallel_process_kernels SignalTestApp send ', 'lda_word': ' test,cinfo,kernel,run,env,', 'lda_method': ' handle,close,transport,stop,test_start_parallel_process_kernels,', 'lsi_word': ' kernel,test,install,sample,spec,', 'lsi_method': ' handle,close,send,handler,run_lifecycle,', 'spm_method': ' ', 'text_summary': 'Return timezone-aware UTC timestamp. Start the polling of the kernel. Stop the kernel polling. return ip for localhost (almost always 127.0.0.1)    Check that a kernel name is valid. Ensure a datetime object has tzinfo.', 'files_count': 14, 'files': ['forward.py', 'threaded.py', 'test_manager.py', 'kernelspec.py', 'channels.py', 'test_jsonutil.py', 'session.py', 'jsonutil.py', 'test_kernelmanager.py', 'utils.py', 'test_kernelspec.py', 'signalkernel.py', 'test_multikernelmanager.py', 'localinterfaces.py'], 'execution_path_count': 38, 'function_id_to_name_file': {'492': 'handle(forward.py)', '730': 'close(threaded.py)', '493': 'SubHander(forward.py)', '490': 'Handler(forward.py)', '635': 'test_connection_file_real_path(test_manager.py)', '253': 'KernelSpec(kernelspec.py)', '718': 'close(threaded.py)', '132': 'close(channels.py)', '114': 'send(channels.py)', '88': 'send(channels.py)', '83': 'close(channels.py)', '109': 'close(channels.py)', '575': 'test_date_default(test_jsonutil.py)', '450': 'utcnow(session.py)', '241': 'date_default(jsonutil.py)', '240': '_ensure_tzinfo(jsonutil.py)', '597': 'test_subclasses(test_kernelmanager.py)', '703': 'AsyncKernelManagerWithCleanup(utils.py)', '595': 'test_signal_kernel_subprocesses(test_kernelmanager.py)', '598': 'execute(test_kernelmanager.py)', '702': 'AsyncKernelManagerSubclass(utils.py)', '611': 'test_start_parallel_process_kernels(test_kernelmanager.py)', '591': 'transport(test_kernelmanager.py)', '606': 'test_templated_kspec_env(test_kernelmanager.py)', '599': '_env_test_body(test_kernelmanager.py)', '607': 'execute(test_kernelmanager.py)', '612': 'test_start_parallel_thread_kernels(test_kernelmanager.py)', '604': 'test_signal_kernel_subprocesses(test_kernelmanager.py)', '608': 'execute(test_kernelmanager.py)', '586': 'env(test_kernelmanager.py)', '712': 'stop(utils.py)', '711': 'start(utils.py)', '705': 'test_env(utils.py)', '630': 'test_validate_kernel_name(test_kernelspec.py)', '257': '_is_valid_kernel_name(kernelspec.py)', '506': 'SignalTestApp(signalkernel.py)', '507': 'SignalTestKernel(signalkernel.py)', '627': 'test_remove_kernel_spec(test_kernelspec.py)', '617': '_install_sample_kernel(test_kernelspec.py)', '626': 'test_kernel_spec_priority(test_kernelspec.py)', '651': 'test_tcp_cinfo(test_multikernelmanager.py)', '640': '_run_cinfo(test_multikernelmanager.py)', '621': 'test_find_all_specs(test_kernelspec.py)', '622': 'test_find_kernel_specs(test_kernelspec.py)', '623': 'test_get_kernel_spec(test_kernelspec.py)', '619': 'tearDown(test_kernelspec.py)', '618': 'setUp(test_kernelspec.py)', '649': 'test_start_sequence_ipc_kernels(test_multikernelmanager.py)', '641': '_run_lifecycle(test_multikernelmanager.py)', '650': 'test_start_sequence_tcp_kernels(test_multikernelmanager.py)', '644': 'test_ipc_cinfo(test_multikernelmanager.py)', '315': 'localhost(localinterfaces.py)', '645': 'test_ipc_lifecycle(test_multikernelmanager.py)'}}, {'key': 2452, 'parent': 2453, 'tfidf_word': 'kernel lifecycle run sequence start test ipc tcp ', 'tfidf_method': '_run_lifecycle test_start_sequence_ipc_kernels test_start_sequence_tcp_kernels ', 'lda_word': ' kernel,sequence,test,start,run,', 'lda_method': ' run_lifecycle,test_start_sequence_tcp_kernels,test_start_sequence_ipc_kernels,', 'lsi_word': ' sequence,test,start,run,lifecycle,', 'lsi_method': ' run_lifecycle,test_start_sequence_tcp_kernels,test_start_sequence_ipc_kernels,', 'spm_method': ' ', 'text_summary': '', 'files_count': 1, 'files': ['test_multikernelmanager.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'665': 'test_start_sequence_tcp_kernels(test_multikernelmanager.py)', '657': '_run_lifecycle(test_multikernelmanager.py)', '664': 'test_start_sequence_ipc_kernels(test_multikernelmanager.py)'}}, {'key': 1150, 'parent': 2460, 'tfidf_word': 'EP: 1150, Name: test_ipc_cinfo &rarr; _run_cinfo', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2459, 'parent': 2460, 'tfidf_word': 'id fetch check kernel find file connection cinfo lifecycle permission ', 'tfidf_method': 'test_tcp_cinfo localhost test_find_connection_file_abspath test_find_connection_file_relative test_secure_write check_user_only_permissions fetch_win32_permissions _run_cinfo test_ipc_lifecycle test_tcp_lifecycle_with_kernel_id ', 'lda_word': ' connection,file,find,abspath,test,', 'lda_method': ' check_user_only_permissions,test_secure_write,fetch_win32_permissions,run_cinfo,test_ipc_lifecycle,', 'lsi_word': ' find,file,connection,test,relative,', 'lsi_method': ' check_user_only_permissions,test_secure_write,fetch_win32_permissions,find_connection_file,test_tcp_cinfo,', 'spm_method': ' ', 'text_summary': '', 'files_count': 4, 'files': ['test_multikernelmanager.py', 'localinterfaces.py', 'test_connect.py', 'connect.py'], 'execution_path_count': 7, 'function_id_to_name_file': {'660': 'test_ipc_lifecycle(test_multikernelmanager.py)', '657': '_run_lifecycle(test_multikernelmanager.py)', '666': 'test_tcp_cinfo(test_multikernelmanager.py)', '315': 'localhost(localinterfaces.py)', '656': '_run_cinfo(test_multikernelmanager.py)', '668': 'test_tcp_lifecycle_with_kernel_id(test_multikernelmanager.py)', '569': 'test_secure_write(test_connect.py)', '573': 'check_user_only_permissions(test_connect.py)', '574': 'fetch_win32_permissions(test_connect.py)', '563': 'test_find_connection_file_relative(test_connect.py)', '189': 'find_connection_file(connect.py)', '561': 'test_find_connection_file_abspath(test_connect.py)'}}, {'key': 1082, 'parent': 2464, 'tfidf_word': 'EP: 1082, Name: test_load_connection_file_session_with_kn &rarr; Session', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2463, 'parent': 2464, 'tfidf_word': 'test adapt connection file input load request session ', 'tfidf_method': 'Session adapt test_input_request test_load_connection_file_session ', 'lda_word': ' test,adapt,session,input,request,', 'lda_method': ' adapt,test_input_request,test_load_connection_file_session,session,', 'lsi_word': ' session,test,load,connection,file,', 'lsi_method': ' session,test_load_connection_file_session,test_input_request,adapt,', 'spm_method': ' ', 'text_summary': 'Empty', 'files_count': 3, 'files': ['test_adapter.py', 'test_connect.py', 'session.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'539': 'test_input_request(test_adapter.py)', '517': 'adapt(test_adapter.py)', '564': 'test_load_connection_file_session(test_connect.py)', '441': 'Session(session.py)'}}, {'key': 1035, 'parent': 2475, 'tfidf_word': 'EP: 1035, Name: test_display_data &rarr; adapt', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2474, 'parent': 2475, 'tfidf_word': 'adapt test inspect reply request complete info kernel token ', 'tfidf_method': 'adapt test_complete_reply test_inspect_reply test_inspect_request test_inspect_request_token test_kernel_info_reply ', 'lda_word': ' test,adapt,inspect,reply,request,', 'lda_method': ' adapt,test_complete_reply,test_inspect_request,test_inspect_reply,test_kernel_info_reply,', 'lsi_word': ' test,adapt,inspect,reply,request,', 'lsi_method': ' adapt,test_inspect_reply,test_inspect_request_token,test_complete_reply,test_kernel_info_reply,', 'spm_method': ' ', 'text_summary': '', 'files_count': 1, 'files': ['test_adapter.py'], 'execution_path_count': 5, 'function_id_to_name_file': {'540': 'test_inspect_reply(test_adapter.py)', '517': 'adapt(test_adapter.py)', '543': 'test_kernel_info_reply(test_adapter.py)', '542': 'test_inspect_request_token(test_adapter.py)', '535': 'test_complete_reply(test_adapter.py)', '541': 'test_inspect_request(test_adapter.py)'}}, {'key': 985, 'parent': 2499, 'tfidf_word': 'EP: 985, Name: test_same_version &rarr; adapt', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2498, 'parent': 2499, 'tfidf_word': 'found rename data v5to kernel input default display line code ', 'tfidf_method': 'test_rename_type test_complete_reply setUp test_default_version test_code_to_line_no_code V5toV4TestCase V4toV5TestCase code_to_line test_display_data test_same_version ', 'lda_word': ' test,adapt,info,object,reply,', 'lda_method': ' adapt,test_no_adapt,test_complete_reply,session,adaptertest,', 'lsi_word': ' test,adapt,reply,info,request,', 'lsi_method': ' adapt,test_display_data,test_complete_reply,test_kernel_info_reply,test_rename_type,', 'spm_method': ' ', 'text_summary': 'Empty', 'files_count': 3, 'files': ['test_adapter.py', 'session.py', 'adapter.py'], 'execution_path_count': 18, 'function_id_to_name_file': {'514': 'V5toV4TestCase(test_adapter.py)', '512': 'AdapterTest(test_adapter.py)', '526': 'test_input_request(test_adapter.py)', '517': 'adapt(test_adapter.py)', '523': 'test_display_data(test_adapter.py)', '527': 'test_kernel_info_reply(test_adapter.py)', '530': 'test_object_info_reply_not_found(test_adapter.py)', '529': 'test_object_info_reply(test_adapter.py)', '531': 'test_object_info_request(test_adapter.py)', '521': 'test_complete_reply(test_adapter.py)', '522': 'test_complete_request(test_adapter.py)', '524': 'test_execute_reply(test_adapter.py)', '532': 'test_rename_type(test_adapter.py)', '525': 'test_execute_request(test_adapter.py)', '528': 'test_no_adapt(test_adapter.py)', '533': 'test_same_version(test_adapter.py)', '513': 'V4toV5TestCase(test_adapter.py)', '519': 'setUp(test_adapter.py)', '441': 'Session(session.py)', '516': 'test_default_version(test_adapter.py)', '515': 'test_code_to_line_no_code(test_adapter.py)', '51': 'code_to_line(adapter.py)'}}, {'key': 887, 'parent': 2510, 'tfidf_word': 'EP: 887, Name: execute &rarr; execute', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2509, 'parent': 2510, 'tfidf_word': 'get feed exit enter lifecycle unpacker raw send execute clone ', 'tfidf_method': 'test_bad_packer execute test_kernelapp_lifecycle _launch sign send_raw feed_identities clone start stop ', 'lda_word': ' execute,test,session,clone,datetimes,', 'lda_method': ' session,execute,test_clone,test_send_raw,exit,', 'lsi_word': ' test,session,bad,datetimes,send,', 'lsi_method': ' session,test_clone,test_datetimes,test_bad_unpack,test_bad_roundtrip,', 'spm_method': ' ', 'text_summary': 'Stop the kernel polling. Split the identities from the rest of the message. Send a raw message via ident path.', 'files_count': 6, 'files': ['utils.py', 'test_kernelmanager.py', 'client.py', 'test_kernelapp.py', 'test_session.py', 'session.py'], 'execution_path_count': 16, 'function_id_to_name_file': {'704': 'execute(utils.py)', '608': 'execute(test_kernelmanager.py)', '157': 'get_iopub_msg(client.py)', '710': '__exit__(utils.py)', '712': 'stop(utils.py)', '709': '__enter__(utils.py)', '711': 'start(utils.py)', '580': 'test_kernelapp_lifecycle(test_kernelapp.py)', '579': '_launch(test_kernelapp.py)', '686': 'test_clone(test_session.py)', '441': 'Session(session.py)', '473': 'clone(session.py)', '695': 'test_send_raw(test_session.py)', '481': 'send_raw(session.py)', '483': 'sign(session.py)', '689': 'test_datetimes_msgpack(test_session.py)', '475': 'feed_identities(session.py)', '690': 'test_datetimes_pickle(test_session.py)', '688': 'test_datetimes(test_session.py)', '683': 'test_bad_roundtrip(test_session.py)', '685': 'test_bad_unpacker(test_session.py)', '684': 'test_bad_unpack(test_session.py)', '682': 'test_bad_packer(test_session.py)'}}, {'key': 2541, 'parent': 2548, 'tfidf_word': 'comm serialize complete env no ioloop inspect shutdown send session ', 'tfidf_method': 'Session NoSuchKernel hb_channel wrapped wait_for_ready reqrep wrapped wait_for_ready test_shutdown reqrep ', 'lda_word': ' channel,hb,url,make,identity,', 'lda_method': ' hbchannel,blockingkernelclient,asynckernelclient,check_reply,setup,', 'lsi_word': ' test,reply,check,kernel,info,', 'lsi_method': ' check_reply,test_kernel_info,test_history,test_inspect,test_complete,', 'spm_method': ' ', 'text_summary': 'Make a ZeroMQ URL for a given channel. Split the identities from the rest of the message. Pass a message to the ZMQ socket to send.', 'files_count': 9, 'files': ['test_session.py', 'channels.py', 'session.py', 'test_client.py', 'utils.py', 'kernelspec.py', 'client.py', 'connect.py', 'threaded.py'], 'execution_path_count': 26, 'function_id_to_name_file': {'694': 'test_send(test_session.py)', '88': 'send(channels.py)', '475': 'feed_identities(session.py)', '696': 'test_serialize(test_session.py)', '674': 'TestSession(test_session.py)', '673': 'SessionTestCase(test_session.py)', '678': 'setUp(test_session.py)', '441': 'Session(session.py)', '556': 'test_shutdown(test_client.py)', '548': '_check_reply(test_client.py)', '550': 'test_comm_info(test_client.py)', '555': 'test_kernel_info(test_client.py)', '551': 'test_complete(test_client.py)', '554': 'test_inspect(test_client.py)', '553': 'test_history(test_client.py)', '549': 'setUp(test_client.py)', '712': 'stop(utils.py)', '255': 'NoSuchKernel(kernelspec.py)', '711': 'start(utils.py)', '705': 'test_env(utils.py)', '116': 'BlockingKernelClient(client.py)', '117': 'reqrep(client.py)', '124': 'wrapped(client.py)', '123': 'wait_for_ready(client.py)', '150': '_handle_kernel_info_reply(client.py)', '125': 'HBChannel(channels.py)', '104': 'wait_for_ready(client.py)', '102': 'hb_channel(client.py)', '196': '_make_url(connect.py)', '90': 'AsyncKernelClient(client.py)', '91': 'reqrep(client.py)', '105': 'wrapped(client.py)', '80': 'ZMQSocketChannel(channels.py)', '83': 'close(channels.py)', '154': 'control_channel(client.py)', '723': 'ioloop(threaded.py)', '160': 'hb_channel(client.py)'}}, {'key': 2547, 'parent': 2548, 'tfidf_word': 'channel stdin ioloop make url ', 'tfidf_method': 'stdin_channel _make_url ioloop ', 'lda_word': ' stdin,ioloop,channel,make,url,', 'lda_method': ' stdin_channel,make_url,ioloop,', 'lsi_word': ' channel,stdin,url,make,ioloop,', 'lsi_method': ' stdin_channel,make_url,ioloop,', 'spm_method': ' ', 'text_summary': 'Empty', 'files_count': 3, 'files': ['client.py', 'connect.py', 'threaded.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'171': 'stdin_channel(client.py)', '196': '_make_url(connect.py)', '723': 'ioloop(threaded.py)'}}, {'key': 280, 'parent': 2560, 'tfidf_word': 'EP: 280, Name: start &rarr; start', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2559, 'parent': 2560, 'tfidf_word': 'start ', 'tfidf_method': 'start start start start start start start ', 'lda_word': ' start,', 'lda_method': ' start,', 'lsi_word': ' start,', 'lsi_method': ' start,', 'spm_method': ' ', 'text_summary': '', 'files_count': 5, 'files': ['kernelspecapp.py', 'threaded.py', 'channelsabc.py', 'restarter.py', 'channels.py'], 'execution_path_count': 6, 'function_id_to_name_file': {'291': 'start(kernelspecapp.py)', '720': 'start(threaded.py)', '141': 'start(channelsabc.py)', '432': 'start(restarter.py)', '288': 'start(kernelspecapp.py)', '89': 'start(channels.py)', '115': 'start(channels.py)'}}, {'key': 131, 'parent': 2585, 'tfidf_word': 'EP: 131, Name: V5toV4 &rarr; Adapter', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2584, 'parent': 2585, 'tfidf_word': 'init id header handle metadata msg native kernel install spec ', 'tfidf_method': '__init__ update_msg_type new_id_bytes Message install_native_kernel_spec to_json to_dict install_native_kernel_spec _key_changed config ', 'lda_word': ' test,msg2obj,call,update,msg,', 'lda_method': ' new_auth,test_msg2obj,key_changed,message,call,', 'lsi_word': ' install,kernel,spec,native,type,', 'lsi_method': ' call,update_metadata,update_header,update_msg_type,handle_reply_status_error,', 'spm_method': ' ', 'text_summary': "For tests, create a file to indicate that we've started.", 'files_count': 5, 'files': ['adapter.py', 'kernelapp.py', 'test_kernelmanager.py', 'kernelspec.py', 'session.py'], 'execution_path_count': 13, 'function_id_to_name_file': {'53': '__call__(adapter.py)', '54': 'handle_reply_status_error(adapter.py)', '57': 'update_msg_type(adapter.py)', '56': 'update_metadata(adapter.py)', '55': 'update_header(adapter.py)', '247': 'initialize(kernelapp.py)', '246': '_record_started(kernelapp.py)', '585': 'config(test_kernelmanager.py)', '262': 'install_native_kernel_spec(kernelspec.py)', '276': 'install_native_kernel_spec(kernelspec.py)', '265': 'to_json(kernelspec.py)', '264': 'to_dict(kernelspec.py)', '449': 'test_msg2obj(session.py)', '440': 'Message(session.py)', '453': '__init__(session.py)', '470': '_signature_scheme_changed(session.py)', '465': '_new_auth(session.py)', '463': '_key_default(session.py)', '447': 'new_id_bytes(session.py)', '462': '_key_changed(session.py)'}}, {'key': 94, 'parent': 2600, 'tfidf_word': 'EP: 94, Name: ThreadedKernelClient &rarr; IOLoopThread', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2599, 'parent': 2600, 'tfidf_word': 'id list remove request resource socket zmq shutdown threaded flush ', 'tfidf_method': 'shutdown_all ThreadedKernelClient HBChannel cleanup_resources list_kernel_ids remove_kernel request_shutdown ThreadedZMQSocketChannel _flush flush ', 'lda_word': ' shutdown,flush,kernel,thread,resource,', 'lda_method': ' shutdown_all,flush,threadedkernelclient,cleanup_resources,request_shutdown,', 'lsi_word': ' thread,kernel,client,channel,socket,', 'lsi_method': ' shutdown_all,remove_kernel,request_shutdown,cleanup_resources,list_kernel_ids,', 'spm_method': ' ', 'text_summary': 'Shutdown all kernels.', 'files_count': 3, 'files': ['threaded.py', 'channels.py', 'multikernelmanager.py'], 'execution_path_count': 7, 'function_id_to_name_file': {'714': 'ThreadedKernelClient(threaded.py)', '715': 'ThreadedZMQSocketChannel(threaded.py)', '125': 'HBChannel(channels.py)', '731': 'flush(threaded.py)', '727': '_flush(threaded.py)', '386': 'shutdown_all(multikernelmanager.py)', '416': 'remove_kernel(multikernelmanager.py)', '413': 'list_kernel_ids(multikernelmanager.py)', '418': 'request_shutdown(multikernelmanager.py)', '402': 'cleanup_resources(multikernelmanager.py)'}}, {'key': 2447, 'parent': 2451, 'tfidf_word': 'kspec validate hander with env signal subclass default date name ', 'tfidf_method': 'Handler utcnow _is_valid_kernel_name KernelSpec date_default _ensure_tzinfo close send test_signal_kernel_subprocesses send ', 'lda_word': ' env,test,handle,send,execute,', 'lda_method': ' env,start,handle,close,execute,', 'lsi_word': ' test,kernel,signal,env,execute,', 'lsi_method': ' handle,close,send,execute,test_signal_kernel_subprocesses,', 'spm_method': ' ', 'text_summary': 'Stop the kernel polling. Start the polling of the kernel. Check that a kernel name is valid. Ensure a datetime object has tzinfo.', 'files_count': 12, 'files': ['forward.py', 'threaded.py', 'test_manager.py', 'kernelspec.py', 'channels.py', 'test_jsonutil.py', 'session.py', 'jsonutil.py', 'test_kernelmanager.py', 'utils.py', 'test_kernelspec.py', 'signalkernel.py'], 'execution_path_count': 23, 'function_id_to_name_file': {'492': 'handle(forward.py)', '730': 'close(threaded.py)', '493': 'SubHander(forward.py)', '490': 'Handler(forward.py)', '635': 'test_connection_file_real_path(test_manager.py)', '253': 'KernelSpec(kernelspec.py)', '718': 'close(threaded.py)', '132': 'close(channels.py)', '114': 'send(channels.py)', '88': 'send(channels.py)', '83': 'close(channels.py)', '109': 'close(channels.py)', '575': 'test_date_default(test_jsonutil.py)', '450': 'utcnow(session.py)', '241': 'date_default(jsonutil.py)', '240': '_ensure_tzinfo(jsonutil.py)', '597': 'test_subclasses(test_kernelmanager.py)', '703': 'AsyncKernelManagerWithCleanup(utils.py)', '595': 'test_signal_kernel_subprocesses(test_kernelmanager.py)', '598': 'execute(test_kernelmanager.py)', '702': 'AsyncKernelManagerSubclass(utils.py)', '611': 'test_start_parallel_process_kernels(test_kernelmanager.py)', '591': 'transport(test_kernelmanager.py)', '606': 'test_templated_kspec_env(test_kernelmanager.py)', '599': '_env_test_body(test_kernelmanager.py)', '607': 'execute(test_kernelmanager.py)', '612': 'test_start_parallel_thread_kernels(test_kernelmanager.py)', '604': 'test_signal_kernel_subprocesses(test_kernelmanager.py)', '608': 'execute(test_kernelmanager.py)', '586': 'env(test_kernelmanager.py)', '712': 'stop(utils.py)', '711': 'start(utils.py)', '705': 'test_env(utils.py)', '630': 'test_validate_kernel_name(test_kernelspec.py)', '257': '_is_valid_kernel_name(kernelspec.py)', '506': 'SignalTestApp(signalkernel.py)', '507': 'SignalTestKernel(signalkernel.py)'}}, {'key': 2450, 'parent': 2451, 'tfidf_word': 'tear stop remove localhost get env down priority lifecycle cinfo ', 'tfidf_method': 'test_ipc_cinfo localhost test_remove_kernel_spec test_kernel_spec_priority test_get_kernel_spec test_find_kernel_specs test_find_all_specs tearDown start stop ', 'lda_word': ' test,tcp,cinfo,localhost,kernel,', 'lda_method': ' setup,test_env,start,install_sample_kernel,run_lifecycle,', 'lsi_word': ' kernel,test,install,sample,spec,', 'lsi_method': ' install_sample_kernel,setup,test_remove_kernel_spec,test_get_kernel_spec,test_find_all_specs,', 'spm_method': ' ', 'text_summary': "Stop the kernel polling. Start the polling of the kernel. Ensure that a sequence of kernel startups doesn't break anything.", 'files_count': 4, 'files': ['test_kernelspec.py', 'test_multikernelmanager.py', 'utils.py', 'localinterfaces.py'], 'execution_path_count': 15, 'function_id_to_name_file': {'627': 'test_remove_kernel_spec(test_kernelspec.py)', '617': '_install_sample_kernel(test_kernelspec.py)', '626': 'test_kernel_spec_priority(test_kernelspec.py)', '651': 'test_tcp_cinfo(test_multikernelmanager.py)', '640': '_run_cinfo(test_multikernelmanager.py)', '621': 'test_find_all_specs(test_kernelspec.py)', '622': 'test_find_kernel_specs(test_kernelspec.py)', '623': 'test_get_kernel_spec(test_kernelspec.py)', '619': 'tearDown(test_kernelspec.py)', '712': 'stop(utils.py)', '618': 'setUp(test_kernelspec.py)', '711': 'start(utils.py)', '705': 'test_env(utils.py)', '649': 'test_start_sequence_ipc_kernels(test_multikernelmanager.py)', '641': '_run_lifecycle(test_multikernelmanager.py)', '650': 'test_start_sequence_tcp_kernels(test_multikernelmanager.py)', '644': 'test_ipc_cinfo(test_multikernelmanager.py)', '315': 'localhost(localinterfaces.py)', '645': 'test_ipc_lifecycle(test_multikernelmanager.py)'}}, {'key': 1154, 'parent': 2452, 'tfidf_word': 'EP: 1154, Name: test_start_sequence_tcp_kernels &rarr; _run_lifecycle', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1158, 'parent': 2452, 'tfidf_word': 'EP: 1158, Name: test_start_sequence_ipc_kernels &rarr; _run_lifecycle', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1146, 'parent': 2459, 'tfidf_word': 'EP: 1146, Name: test_ipc_lifecycle &rarr; _run_lifecycle', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2458, 'parent': 2459, 'tfidf_word': 'id fetch check kernel find file connection cinfo permission lifecycle ', 'tfidf_method': 'test_tcp_cinfo localhost test_find_connection_file_abspath test_find_connection_file_relative test_secure_write check_user_only_permissions fetch_win32_permissions _run_cinfo _run_lifecycle test_tcp_lifecycle_with_kernel_id ', 'lda_word': ' connection,file,find,test,lifecycle,', 'lda_method': ' test_tcp_cinfo,run_cinfo,localhost,find_connection_file,test_find_connection_file_abspath,', 'lsi_word': ' find,file,connection,test,abspath,', 'lsi_method': ' fetch_win32_permissions,check_user_only_permissions,test_secure_write,find_connection_file,test_find_connection_file_abspath,', 'spm_method': ' ', 'text_summary': '', 'files_count': 4, 'files': ['test_multikernelmanager.py', 'localinterfaces.py', 'test_connect.py', 'connect.py'], 'execution_path_count': 6, 'function_id_to_name_file': {'666': 'test_tcp_cinfo(test_multikernelmanager.py)', '315': 'localhost(localinterfaces.py)', '656': '_run_cinfo(test_multikernelmanager.py)', '668': 'test_tcp_lifecycle_with_kernel_id(test_multikernelmanager.py)', '657': '_run_lifecycle(test_multikernelmanager.py)', '569': 'test_secure_write(test_connect.py)', '573': 'check_user_only_permissions(test_connect.py)', '574': 'fetch_win32_permissions(test_connect.py)', '563': 'test_find_connection_file_relative(test_connect.py)', '189': 'find_connection_file(connect.py)', '561': 'test_find_connection_file_abspath(test_connect.py)'}}, {'key': 1040, 'parent': 2463, 'tfidf_word': 'EP: 1040, Name: test_input_request &rarr; adapt', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1063, 'parent': 2463, 'tfidf_word': 'EP: 1063, Name: test_load_connection_file_session &rarr; Session', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2462, 'parent': 2474, 'tfidf_word': 'adapt reply test info inspect kernel ', 'tfidf_method': 'adapt test_inspect_reply test_kernel_info_reply ', 'lda_word': ' adapt,reply,test,kernel,inspect,', 'lda_method': ' test_kernel_info_reply,adapt,test_inspect_reply,', 'lsi_word': ' adapt,reply,test,kernel,info,', 'lsi_method': ' adapt,test_kernel_info_reply,test_inspect_reply,', 'spm_method': ' ', 'text_summary': '', 'files_count': 1, 'files': ['test_adapter.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'540': 'test_inspect_reply(test_adapter.py)', '517': 'adapt(test_adapter.py)', '543': 'test_kernel_info_reply(test_adapter.py)'}}, {'key': 2473, 'parent': 2474, 'tfidf_word': 'adapt test inspect request complete reply token ', 'tfidf_method': 'adapt test_complete_reply test_inspect_request test_inspect_request_token ', 'lda_word': ' adapt,test,complete,reply,inspect,', 'lda_method': ' adapt,test_inspect_request,test_inspect_request_token,test_complete_reply,', 'lsi_word': ' adapt,test,inspect,request,token,', 'lsi_method': ' adapt,test_inspect_request_token,test_inspect_request,test_complete_reply,', 'spm_method': ' ', 'text_summary': '', 'files_count': 1, 'files': ['test_adapter.py'], 'execution_path_count': 3, 'function_id_to_name_file': {'542': 'test_inspect_request_token(test_adapter.py)', '517': 'adapt(test_adapter.py)', '535': 'test_complete_reply(test_adapter.py)', '541': 'test_inspect_request(test_adapter.py)'}}, {'key': 980, 'parent': 2498, 'tfidf_word': 'EP: 980, Name: V5toV4TestCase &rarr; AdapterTest', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2497, 'parent': 2498, 'tfidf_word': 'case kernel rename data v5 input default display line code ', 'tfidf_method': 'test_complete_request test_complete_reply setUp test_default_version test_code_to_line_no_code V4toV5TestCase AdapterTest code_to_line test_rename_type test_same_version ', 'lda_word': ' test,adapt,code,line,execute,', 'lda_method': ' adapt,test_execute_reply,test_object_info_request,test_object_info_reply_not_found,test_same_version,', 'lsi_word': ' test,adapt,reply,info,request,', 'lsi_method': ' adapt,test_display_data,test_object_info_reply,test_same_version,test_execute_reply,', 'spm_method': ' ', 'text_summary': 'Empty', 'files_count': 3, 'files': ['test_adapter.py', 'session.py', 'adapter.py'], 'execution_path_count': 17, 'function_id_to_name_file': {'526': 'test_input_request(test_adapter.py)', '517': 'adapt(test_adapter.py)', '523': 'test_display_data(test_adapter.py)', '527': 'test_kernel_info_reply(test_adapter.py)', '530': 'test_object_info_reply_not_found(test_adapter.py)', '529': 'test_object_info_reply(test_adapter.py)', '531': 'test_object_info_request(test_adapter.py)', '521': 'test_complete_reply(test_adapter.py)', '522': 'test_complete_request(test_adapter.py)', '524': 'test_execute_reply(test_adapter.py)', '532': 'test_rename_type(test_adapter.py)', '525': 'test_execute_request(test_adapter.py)', '528': 'test_no_adapt(test_adapter.py)', '533': 'test_same_version(test_adapter.py)', '513': 'V4toV5TestCase(test_adapter.py)', '512': 'AdapterTest(test_adapter.py)', '519': 'setUp(test_adapter.py)', '441': 'Session(session.py)', '516': 'test_default_version(test_adapter.py)', '515': 'test_code_to_line_no_code(test_adapter.py)', '51': 'code_to_line(adapter.py)'}}, {'key': 2487, 'parent': 2509, 'tfidf_word': 'get feed exit enter datetimes iopub raw send execute clone ', 'tfidf_method': 'test_datetimes_msgpack execute test_kernelapp_lifecycle _launch sign send_raw feed_identities clone start stop ', 'lda_word': ' test,execute,clone,session,exit,', 'lda_method': ' execute,test_clone,session,enter,start,', 'lsi_word': ' test,send,raw,sign,clone,', 'lsi_method': ' execute,get_iopub_msg,clone,test_send_raw,test_datetimes_msgpack,', 'spm_method': ' ', 'text_summary': 'Stop the kernel polling. Split the identities from the rest of the message. Send a raw message via ident path.', 'files_count': 6, 'files': ['utils.py', 'test_kernelmanager.py', 'client.py', 'test_kernelapp.py', 'test_session.py', 'session.py'], 'execution_path_count': 10, 'function_id_to_name_file': {'704': 'execute(utils.py)', '608': 'execute(test_kernelmanager.py)', '157': 'get_iopub_msg(client.py)', '710': '__exit__(utils.py)', '712': 'stop(utils.py)', '709': '__enter__(utils.py)', '711': 'start(utils.py)', '580': 'test_kernelapp_lifecycle(test_kernelapp.py)', '579': '_launch(test_kernelapp.py)', '686': 'test_clone(test_session.py)', '441': 'Session(session.py)', '473': 'clone(session.py)', '695': 'test_send_raw(test_session.py)', '481': 'send_raw(session.py)', '483': 'sign(session.py)', '689': 'test_datetimes_msgpack(test_session.py)', '475': 'feed_identities(session.py)'}}, {'key': 2508, 'parent': 2509, 'tfidf_word': 'session test bad datetimes packer pickle roundtrip unpack unpacker ', 'tfidf_method': 'Session test_bad_packer test_bad_roundtrip test_bad_unpack test_bad_unpacker test_datetimes test_datetimes_pickle ', 'lda_word': ' test,session,bad,datetimes,unpacker,', 'lda_method': ' session,test_datetimes_pickle,test_bad_packer,test_bad_unpacker,test_bad_unpack,', 'lsi_word': ' test,session,bad,datetimes,unpack,', 'lsi_method': ' session,test_datetimes_pickle,test_bad_packer,test_bad_unpack,test_datetimes,', 'spm_method': ' ', 'text_summary': '', 'files_count': 2, 'files': ['test_session.py', 'session.py'], 'execution_path_count': 6, 'function_id_to_name_file': {'690': 'test_datetimes_pickle(test_session.py)', '441': 'Session(session.py)', '688': 'test_datetimes(test_session.py)', '683': 'test_bad_roundtrip(test_session.py)', '685': 'test_bad_unpacker(test_session.py)', '684': 'test_bad_unpack(test_session.py)', '682': 'test_bad_packer(test_session.py)'}}, {'key': 765, 'parent': 2541, 'tfidf_word': 'EP: 765, Name: test_send &rarr; send', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2540, 'parent': 2541, 'tfidf_word': 'comm serialize send complete env no ioloop inspect shutdown session ', 'tfidf_method': 'Session NoSuchKernel hb_channel wrapped wait_for_ready reqrep wrapped wait_for_ready test_kernel_info reqrep ', 'lda_word': ' test,feed,identity,set,send,', 'lda_method': ' setup,control_channel,stop,ioloop,nosuchkernel,', 'lsi_word': ' test,reply,check,kernel,info,', 'lsi_method': ' check_reply,test_inspect,test_kernel_info,test_history,test_complete,', 'spm_method': ' ', 'text_summary': 'Get the hb channel object for this kernel. Stop the kernel polling. Start the polling of the kernel.', 'files_count': 9, 'files': ['test_session.py', 'session.py', 'test_client.py', 'utils.py', 'kernelspec.py', 'client.py', 'channels.py', 'connect.py', 'threaded.py'], 'execution_path_count': 25, 'function_id_to_name_file': {'694': 'test_send(test_session.py)', '475': 'feed_identities(session.py)', '696': 'test_serialize(test_session.py)', '674': 'TestSession(test_session.py)', '673': 'SessionTestCase(test_session.py)', '678': 'setUp(test_session.py)', '441': 'Session(session.py)', '556': 'test_shutdown(test_client.py)', '548': '_check_reply(test_client.py)', '550': 'test_comm_info(test_client.py)', '555': 'test_kernel_info(test_client.py)', '551': 'test_complete(test_client.py)', '554': 'test_inspect(test_client.py)', '553': 'test_history(test_client.py)', '549': 'setUp(test_client.py)', '712': 'stop(utils.py)', '255': 'NoSuchKernel(kernelspec.py)', '711': 'start(utils.py)', '705': 'test_env(utils.py)', '116': 'BlockingKernelClient(client.py)', '117': 'reqrep(client.py)', '124': 'wrapped(client.py)', '123': 'wait_for_ready(client.py)', '150': '_handle_kernel_info_reply(client.py)', '125': 'HBChannel(channels.py)', '104': 'wait_for_ready(client.py)', '102': 'hb_channel(client.py)', '196': '_make_url(connect.py)', '90': 'AsyncKernelClient(client.py)', '91': 'reqrep(client.py)', '105': 'wrapped(client.py)', '80': 'ZMQSocketChannel(channels.py)', '83': 'close(channels.py)', '154': 'control_channel(client.py)', '723': 'ioloop(threaded.py)', '160': 'hb_channel(client.py)'}}, {'key': 483, 'parent': 2547, 'tfidf_word': 'EP: 483, Name: stdin_channel &rarr; _make_url', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 484, 'parent': 2547, 'tfidf_word': 'EP: 484, Name: stdin_channel &rarr; ioloop', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 279, 'parent': 2559, 'tfidf_word': 'EP: 279, Name: start &rarr; start', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2558, 'parent': 2559, 'tfidf_word': 'start ', 'tfidf_method': 'start start start start start start ', 'lda_word': ' start,', 'lda_method': ' start,', 'lsi_word': ' start,', 'lsi_method': ' start,', 'spm_method': ' ', 'text_summary': '', 'files_count': 4, 'files': ['kernelspecapp.py', 'channelsabc.py', 'restarter.py', 'channels.py'], 'execution_path_count': 5, 'function_id_to_name_file': {'291': 'start(kernelspecapp.py)', '141': 'start(channelsabc.py)', '432': 'start(restarter.py)', '288': 'start(kernelspecapp.py)', '89': 'start(channels.py)', '115': 'start(channels.py)'}}, {'key': 130, 'parent': 2584, 'tfidf_word': 'EP: 130, Name: __call__ &rarr; handle_reply_status_error', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2583, 'parent': 2584, 'tfidf_word': 'json default init id metadata msg native kernel install spec ', 'tfidf_method': '_key_changed __init__ new_id_bytes Message install_native_kernel_spec to_json to_dict install_native_kernel_spec update_msg_type config ', 'lda_word': ' install,spec,kernel,native,update,', 'lda_method': ' new_auth,install_native_kernel_spec,test_msg2obj,call,initialize,', 'lsi_word': ' spec,kernel,install,native,type,', 'lsi_method': ' install_native_kernel_spec,initialize,config,record_started,key_changed,', 'spm_method': ' ', 'text_summary': "For tests, create a file to indicate that we've started.", 'files_count': 5, 'files': ['adapter.py', 'kernelapp.py', 'test_kernelmanager.py', 'kernelspec.py', 'session.py'], 'execution_path_count': 12, 'function_id_to_name_file': {'53': '__call__(adapter.py)', '57': 'update_msg_type(adapter.py)', '56': 'update_metadata(adapter.py)', '55': 'update_header(adapter.py)', '247': 'initialize(kernelapp.py)', '246': '_record_started(kernelapp.py)', '585': 'config(test_kernelmanager.py)', '262': 'install_native_kernel_spec(kernelspec.py)', '276': 'install_native_kernel_spec(kernelspec.py)', '265': 'to_json(kernelspec.py)', '264': 'to_dict(kernelspec.py)', '449': 'test_msg2obj(session.py)', '440': 'Message(session.py)', '453': '__init__(session.py)', '470': '_signature_scheme_changed(session.py)', '465': '_new_auth(session.py)', '463': '_key_default(session.py)', '447': 'new_id_bytes(session.py)', '462': '_key_changed(session.py)'}}, {'key': 93, 'parent': 2599, 'tfidf_word': 'EP: 93, Name: ThreadedKernelClient &rarr; ThreadedZMQSocketChannel', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2598, 'parent': 2599, 'tfidf_word': 'client hb id list remove request resource threaded shutdown flush ', 'tfidf_method': 'shutdown_all HBChannel cleanup_resources list_kernel_ids remove_kernel request_shutdown ThreadedKernelClient _flush flush ', 'lda_word': ' shutdown,flush,kernel,list,cleanup,', 'lda_method': ' shutdown_all,cleanup_resources,list_kernel_ids,flush,threadedkernelclient,', 'lsi_word': ' shutdown,kernel,request,list,remove,', 'lsi_method': ' shutdown_all,request_shutdown,cleanup_resources,list_kernel_ids,remove_kernel,', 'spm_method': ' ', 'text_summary': 'Shutdown all kernels.', 'files_count': 3, 'files': ['threaded.py', 'channels.py', 'multikernelmanager.py'], 'execution_path_count': 6, 'function_id_to_name_file': {'714': 'ThreadedKernelClient(threaded.py)', '125': 'HBChannel(channels.py)', '731': 'flush(threaded.py)', '727': '_flush(threaded.py)', '386': 'shutdown_all(multikernelmanager.py)', '416': 'remove_kernel(multikernelmanager.py)', '413': 'list_kernel_ids(multikernelmanager.py)', '418': 'request_shutdown(multikernelmanager.py)', '402': 'cleanup_resources(multikernelmanager.py)'}}, {'key': 2435, 'parent': 2447, 'tfidf_word': 'process path utcnow kspec file spec env default subclass date ', 'tfidf_method': 'SubHander Handler utcnow KernelSpec date_default _ensure_tzinfo close send test_templated_kspec_env send ', 'lda_word': ' handle,close,env,test,send,', 'lda_method': ' send,env_test_body,test_templated_kspec_env,utcnow,test_env,', 'lsi_word': ' test,kernel,env,execute,subclass,', 'lsi_method': ' handle,close,send,test_connection_file_real_path,env_test_body,', 'spm_method': ' ', 'text_summary': 'default function for packing datetime objects in JSON. Start the polling of the kernel. Ensure a datetime object has tzinfo.', 'files_count': 10, 'files': ['forward.py', 'threaded.py', 'test_manager.py', 'kernelspec.py', 'channels.py', 'test_jsonutil.py', 'session.py', 'jsonutil.py', 'test_kernelmanager.py', 'utils.py'], 'execution_path_count': 21, 'function_id_to_name_file': {'492': 'handle(forward.py)', '730': 'close(threaded.py)', '493': 'SubHander(forward.py)', '490': 'Handler(forward.py)', '635': 'test_connection_file_real_path(test_manager.py)', '253': 'KernelSpec(kernelspec.py)', '718': 'close(threaded.py)', '132': 'close(channels.py)', '114': 'send(channels.py)', '88': 'send(channels.py)', '83': 'close(channels.py)', '109': 'close(channels.py)', '575': 'test_date_default(test_jsonutil.py)', '450': 'utcnow(session.py)', '241': 'date_default(jsonutil.py)', '240': '_ensure_tzinfo(jsonutil.py)', '597': 'test_subclasses(test_kernelmanager.py)', '703': 'AsyncKernelManagerWithCleanup(utils.py)', '595': 'test_signal_kernel_subprocesses(test_kernelmanager.py)', '598': 'execute(test_kernelmanager.py)', '702': 'AsyncKernelManagerSubclass(utils.py)', '611': 'test_start_parallel_process_kernels(test_kernelmanager.py)', '591': 'transport(test_kernelmanager.py)', '606': 'test_templated_kspec_env(test_kernelmanager.py)', '599': '_env_test_body(test_kernelmanager.py)', '607': 'execute(test_kernelmanager.py)', '612': 'test_start_parallel_thread_kernels(test_kernelmanager.py)', '604': 'test_signal_kernel_subprocesses(test_kernelmanager.py)', '608': 'execute(test_kernelmanager.py)', '586': 'env(test_kernelmanager.py)', '712': 'stop(utils.py)', '711': 'start(utils.py)', '705': 'test_env(utils.py)'}}, {'key': 2446, 'parent': 2447, 'tfidf_word': 'app valid validate kernel test name signal ', 'tfidf_method': '_is_valid_kernel_name SignalTestApp SignalTestKernel test_validate_kernel_name ', 'lda_word': ' test,kernel,name,signal,validate,', 'lda_method': ' is_valid_kernel_name,test_validate_kernel_name,signaltestapp,signaltestkernel,', 'lsi_word': ' kernel,test,name,signal,valid,', 'lsi_method': ' signaltestapp,signaltestkernel,test_validate_kernel_name,is_valid_kernel_name,', 'spm_method': ' ', 'text_summary': 'Empty', 'files_count': 3, 'files': ['test_kernelspec.py', 'kernelspec.py', 'signalkernel.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'630': 'test_validate_kernel_name(test_kernelspec.py)', '257': '_is_valid_kernel_name(kernelspec.py)', '506': 'SignalTestApp(signalkernel.py)', '507': 'SignalTestKernel(signalkernel.py)'}}, {'key': 1251, 'parent': 2450, 'tfidf_word': 'EP: 1251, Name: test_remove_kernel_spec &rarr; _install_sample_kernel', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2449, 'parent': 2450, 'tfidf_word': 'kernel localhost priority get env stop down tear lifecycle cinfo ', 'tfidf_method': 'test_ipc_lifecycle test_ipc_cinfo localhost test_kernel_spec_priority test_get_kernel_spec test_find_kernel_specs test_find_all_specs tearDown start stop ', 'lda_word': ' stop,tear,test,kernel,set,', 'lda_method': ' setup,run_lifecycle,test_start_sequence_tcp_kernels,test_env,start,', 'lsi_word': ' kernel,test,install,sample,run,', 'lsi_method': ' install_sample_kernel,setup,test_kernel_spec_priority,test_find_kernel_specs,test_get_kernel_spec,', 'spm_method': ' ', 'text_summary': "Stop the kernel polling. Start the polling of the kernel. Ensure that a sequence of kernel startups doesn't break anything.", 'files_count': 4, 'files': ['test_kernelspec.py', 'test_multikernelmanager.py', 'utils.py', 'localinterfaces.py'], 'execution_path_count': 14, 'function_id_to_name_file': {'626': 'test_kernel_spec_priority(test_kernelspec.py)', '617': '_install_sample_kernel(test_kernelspec.py)', '651': 'test_tcp_cinfo(test_multikernelmanager.py)', '640': '_run_cinfo(test_multikernelmanager.py)', '621': 'test_find_all_specs(test_kernelspec.py)', '622': 'test_find_kernel_specs(test_kernelspec.py)', '623': 'test_get_kernel_spec(test_kernelspec.py)', '619': 'tearDown(test_kernelspec.py)', '712': 'stop(utils.py)', '618': 'setUp(test_kernelspec.py)', '711': 'start(utils.py)', '705': 'test_env(utils.py)', '649': 'test_start_sequence_ipc_kernels(test_multikernelmanager.py)', '641': '_run_lifecycle(test_multikernelmanager.py)', '650': 'test_start_sequence_tcp_kernels(test_multikernelmanager.py)', '644': 'test_ipc_cinfo(test_multikernelmanager.py)', '315': 'localhost(localinterfaces.py)', '645': 'test_ipc_lifecycle(test_multikernelmanager.py)'}}, {'key': 1145, 'parent': 2458, 'tfidf_word': 'EP: 1145, Name: test_tcp_cinfo &rarr; localhost', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2457, 'parent': 2458, 'tfidf_word': 'id fetch check kernel find file connection permission cinfo lifecycle ', 'tfidf_method': 'find_connection_file test_find_connection_file_abspath test_find_connection_file_relative test_secure_write check_user_only_permissions fetch_win32_permissions _run_cinfo _run_lifecycle test_tcp_cinfo test_tcp_lifecycle_with_kernel_id ', 'lda_word': ' test,find,connection,file,run,', 'lda_method': ' test_tcp_lifecycle_with_kernel_id,run_lifecycle,find_connection_file,test_tcp_cinfo,test_find_connection_file_relative,', 'lsi_word': ' find,file,connection,test,abspath,', 'lsi_method': ' find_connection_file,check_user_only_permissions,fetch_win32_permissions,test_secure_write,test_find_connection_file_relative,', 'spm_method': ' ', 'text_summary': '', 'files_count': 3, 'files': ['test_multikernelmanager.py', 'test_connect.py', 'connect.py'], 'execution_path_count': 5, 'function_id_to_name_file': {'666': 'test_tcp_cinfo(test_multikernelmanager.py)', '656': '_run_cinfo(test_multikernelmanager.py)', '668': 'test_tcp_lifecycle_with_kernel_id(test_multikernelmanager.py)', '657': '_run_lifecycle(test_multikernelmanager.py)', '569': 'test_secure_write(test_connect.py)', '573': 'check_user_only_permissions(test_connect.py)', '574': 'fetch_win32_permissions(test_connect.py)', '563': 'test_find_connection_file_relative(test_connect.py)', '189': 'find_connection_file(connect.py)', '561': 'test_find_connection_file_abspath(test_connect.py)'}}, {'key': 1025, 'parent': 2462, 'tfidf_word': 'EP: 1025, Name: test_inspect_reply &rarr; adapt', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1030, 'parent': 2462, 'tfidf_word': 'EP: 1030, Name: test_kernel_info_reply &rarr; adapt', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1020, 'parent': 2473, 'tfidf_word': 'EP: 1020, Name: test_inspect_request_token &rarr; adapt', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2472, 'parent': 2473, 'tfidf_word': 'adapt test complete inspect reply request ', 'tfidf_method': 'adapt test_complete_reply test_inspect_request ', 'lda_word': ' adapt,test,inspect,reply,complete,', 'lda_method': ' adapt,test_complete_reply,test_inspect_request,', 'lsi_word': ' adapt,test,request,inspect,complete,', 'lsi_method': ' adapt,test_inspect_request,test_complete_reply,', 'spm_method': ' ', 'text_summary': '', 'files_count': 1, 'files': ['test_adapter.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'535': 'test_complete_reply(test_adapter.py)', '517': 'adapt(test_adapter.py)', '541': 'test_inspect_request(test_adapter.py)'}}, {'key': 979, 'parent': 2497, 'tfidf_word': 'EP: 979, Name: test_input_request &rarr; adapt', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2496, 'parent': 2497, 'tfidf_word': 'rename case set adapter type up v4to display line code ', 'tfidf_method': 'test_complete_request test_complete_reply setUp test_default_version test_code_to_line_no_code V4toV5TestCase AdapterTest code_to_line test_rename_type test_same_version ', 'lda_word': ' test,adapt,code,line,complete,', 'lda_method': ' adapt,test_object_info_reply,test_rename_type,test_object_info_reply_not_found,test_kernel_info_reply,', 'lsi_word': ' test,adapt,reply,info,object,', 'lsi_method': ' adapt,test_display_data,test_complete_request,test_execute_reply,test_kernel_info_reply,', 'spm_method': ' ', 'text_summary': 'Empty', 'files_count': 3, 'files': ['test_adapter.py', 'session.py', 'adapter.py'], 'execution_path_count': 16, 'function_id_to_name_file': {'523': 'test_display_data(test_adapter.py)', '517': 'adapt(test_adapter.py)', '527': 'test_kernel_info_reply(test_adapter.py)', '530': 'test_object_info_reply_not_found(test_adapter.py)', '529': 'test_object_info_reply(test_adapter.py)', '531': 'test_object_info_request(test_adapter.py)', '521': 'test_complete_reply(test_adapter.py)', '522': 'test_complete_request(test_adapter.py)', '524': 'test_execute_reply(test_adapter.py)', '532': 'test_rename_type(test_adapter.py)', '525': 'test_execute_request(test_adapter.py)', '528': 'test_no_adapt(test_adapter.py)', '533': 'test_same_version(test_adapter.py)', '513': 'V4toV5TestCase(test_adapter.py)', '512': 'AdapterTest(test_adapter.py)', '519': 'setUp(test_adapter.py)', '441': 'Session(session.py)', '516': 'test_default_version(test_adapter.py)', '515': 'test_code_to_line_no_code(test_adapter.py)', '51': 'code_to_line(adapter.py)'}}, {'key': 886, 'parent': 2487, 'tfidf_word': 'EP: 886, Name: execute &rarr; execute', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2486, 'parent': 2487, 'tfidf_word': 'get feed exit execute enter datetimes iopub raw send clone ', 'tfidf_method': 'send_raw sign _launch test_kernelapp_lifecycle test_datetimes_msgpack execute __enter__ __exit__ start stop ', 'lda_word': ' raw,send,test,sign,clone,', 'lda_method': ' test_send_raw,clone,feed_identities,test_clone,session,', 'lsi_word': ' test,raw,send,sign,clone,', 'lsi_method': ' test_send_raw,send_raw,sign,feed_identities,test_clone,', 'spm_method': ' ', 'text_summary': 'Stop the kernel polling. Split the identities from the rest of the message. Send a raw message via ident path.', 'files_count': 5, 'files': ['utils.py', 'client.py', 'test_kernelapp.py', 'test_session.py', 'session.py'], 'execution_path_count': 9, 'function_id_to_name_file': {'704': 'execute(utils.py)', '157': 'get_iopub_msg(client.py)', '710': '__exit__(utils.py)', '712': 'stop(utils.py)', '709': '__enter__(utils.py)', '711': 'start(utils.py)', '580': 'test_kernelapp_lifecycle(test_kernelapp.py)', '579': '_launch(test_kernelapp.py)', '686': 'test_clone(test_session.py)', '441': 'Session(session.py)', '473': 'clone(session.py)', '695': 'test_send_raw(test_session.py)', '481': 'send_raw(session.py)', '483': 'sign(session.py)', '689': 'test_datetimes_msgpack(test_session.py)', '475': 'feed_identities(session.py)'}}, {'key': 847, 'parent': 2508, 'tfidf_word': 'EP: 847, Name: test_datetimes_pickle &rarr; Session', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2507, 'parent': 2508, 'tfidf_word': 'session test bad datetimes packer roundtrip unpack unpacker ', 'tfidf_method': 'Session test_bad_packer test_bad_roundtrip test_bad_unpack test_bad_unpacker test_datetimes ', 'lda_word': ' bad,test,session,unpack,unpacker,', 'lda_method': ' session,test_datetimes,test_bad_unpacker,test_bad_packer,test_bad_roundtrip,', 'lsi_word': ' test,session,bad,roundtrip,unpacker,', 'lsi_method': ' session,test_bad_packer,test_bad_unpack,test_bad_roundtrip,test_bad_unpacker,', 'spm_method': ' ', 'text_summary': '', 'files_count': 2, 'files': ['test_session.py', 'session.py'], 'execution_path_count': 5, 'function_id_to_name_file': {'688': 'test_datetimes(test_session.py)', '441': 'Session(session.py)', '683': 'test_bad_roundtrip(test_session.py)', '685': 'test_bad_unpacker(test_session.py)', '684': 'test_bad_unpack(test_session.py)', '682': 'test_bad_packer(test_session.py)'}}, {'key': 755, 'parent': 2540, 'tfidf_word': 'EP: 755, Name: test_send &rarr; feed_identities', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2539, 'parent': 2540, 'tfidf_word': 'serialize complete env no feed ioloop inspect identity zmq session ', 'tfidf_method': 'Session NoSuchKernel hb_channel wrapped wait_for_ready reqrep wrapped wait_for_ready test_inspect reqrep ', 'lda_word': ' test,check,reply,session,case,', 'lda_method': ' setup,check_reply,nosuchkernel,test_shutdown,test_env,', 'lsi_word': ' test,reply,check,kernel,info,', 'lsi_method': ' check_reply,test_history,test_inspect,test_kernel_info,test_complete,', 'spm_method': ' ', 'text_summary': 'Get the hb channel object for this kernel. Stop the kernel polling. Start the polling of the kernel.', 'files_count': 9, 'files': ['test_session.py', 'session.py', 'test_client.py', 'utils.py', 'kernelspec.py', 'client.py', 'channels.py', 'connect.py', 'threaded.py'], 'execution_path_count': 24, 'function_id_to_name_file': {'696': 'test_serialize(test_session.py)', '475': 'feed_identities(session.py)', '674': 'TestSession(test_session.py)', '673': 'SessionTestCase(test_session.py)', '678': 'setUp(test_session.py)', '441': 'Session(session.py)', '556': 'test_shutdown(test_client.py)', '548': '_check_reply(test_client.py)', '550': 'test_comm_info(test_client.py)', '555': 'test_kernel_info(test_client.py)', '551': 'test_complete(test_client.py)', '554': 'test_inspect(test_client.py)', '553': 'test_history(test_client.py)', '549': 'setUp(test_client.py)', '712': 'stop(utils.py)', '255': 'NoSuchKernel(kernelspec.py)', '711': 'start(utils.py)', '705': 'test_env(utils.py)', '116': 'BlockingKernelClient(client.py)', '117': 'reqrep(client.py)', '124': 'wrapped(client.py)', '123': 'wait_for_ready(client.py)', '150': '_handle_kernel_info_reply(client.py)', '125': 'HBChannel(channels.py)', '104': 'wait_for_ready(client.py)', '102': 'hb_channel(client.py)', '196': '_make_url(connect.py)', '90': 'AsyncKernelClient(client.py)', '91': 'reqrep(client.py)', '105': 'wrapped(client.py)', '80': 'ZMQSocketChannel(channels.py)', '83': 'close(channels.py)', '154': 'control_channel(client.py)', '723': 'ioloop(threaded.py)', '160': 'hb_channel(client.py)'}}, {'key': 2546, 'parent': 2558, 'tfidf_word': 'start ', 'tfidf_method': 'start start start start ', 'lda_word': ' start,', 'lda_method': ' start,', 'lsi_word': ' start,', 'lsi_method': ' start,', 'spm_method': ' ', 'text_summary': '', 'files_count': 3, 'files': ['kernelspecapp.py', 'channelsabc.py', 'restarter.py'], 'execution_path_count': 3, 'function_id_to_name_file': {'291': 'start(kernelspecapp.py)', '141': 'start(channelsabc.py)', '432': 'start(restarter.py)', '288': 'start(kernelspecapp.py)'}}, {'key': 2557, 'parent': 2558, 'tfidf_word': 'start ', 'tfidf_method': 'start start start ', 'lda_word': ' start,', 'lda_method': ' start,', 'lsi_word': ' start,', 'lsi_method': ' start,', 'spm_method': ' ', 'text_summary': '', 'files_count': 2, 'files': ['kernelspecapp.py', 'channels.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'291': 'start(kernelspecapp.py)', '89': 'start(channels.py)', '115': 'start(channels.py)'}}, {'key': 129, 'parent': 2583, 'tfidf_word': 'EP: 129, Name: __call__ &rarr; update_msg_type', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2582, 'parent': 2583, 'tfidf_word': 'config json default init id message native install spec kernel ', 'tfidf_method': '__init__ _record_started new_id_bytes Message install_native_kernel_spec to_json to_dict install_native_kernel_spec update_metadata config ', 'lda_word': ' msg2obj,test,new,change,auth,', 'lda_method': ' call,test_msg2obj,key_changed,new_auth,install_native_kernel_spec,', 'lsi_word': ' native,install,kernel,spec,update,', 'lsi_method': ' install_native_kernel_spec,test_msg2obj,update_header,update_metadata,new_auth,', 'spm_method': ' ', 'text_summary': 'Return new_id as ascii bytes.', 'files_count': 5, 'files': ['adapter.py', 'kernelapp.py', 'test_kernelmanager.py', 'kernelspec.py', 'session.py'], 'execution_path_count': 11, 'function_id_to_name_file': {'53': '__call__(adapter.py)', '56': 'update_metadata(adapter.py)', '55': 'update_header(adapter.py)', '247': 'initialize(kernelapp.py)', '246': '_record_started(kernelapp.py)', '585': 'config(test_kernelmanager.py)', '262': 'install_native_kernel_spec(kernelspec.py)', '276': 'install_native_kernel_spec(kernelspec.py)', '265': 'to_json(kernelspec.py)', '264': 'to_dict(kernelspec.py)', '449': 'test_msg2obj(session.py)', '440': 'Message(session.py)', '453': '__init__(session.py)', '470': '_signature_scheme_changed(session.py)', '465': '_new_auth(session.py)', '463': '_key_default(session.py)', '447': 'new_id_bytes(session.py)', '462': '_key_changed(session.py)'}}, {'key': 92, 'parent': 2598, 'tfidf_word': 'EP: 92, Name: ThreadedKernelClient &rarr; HBChannel', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2597, 'parent': 2598, 'tfidf_word': 'kernel shutdown cleanup id list remove request resource flush ', 'tfidf_method': 'shutdown_all cleanup_resources list_kernel_ids remove_kernel request_shutdown _flush flush ', 'lda_word': ' flush,list,kernel,shutdown,request,', 'lda_method': ' shutdown_all,flush,request_shutdown,remove_kernel,cleanup_resources,', 'lsi_word': ' shutdown,kernel,request,remove,list,', 'lsi_method': ' shutdown_all,list_kernel_ids,cleanup_resources,request_shutdown,remove_kernel,', 'spm_method': ' ', 'text_summary': 'Shutdown all kernels.', 'files_count': 2, 'files': ['threaded.py', 'multikernelmanager.py'], 'execution_path_count': 5, 'function_id_to_name_file': {'731': 'flush(threaded.py)', '727': '_flush(threaded.py)', '386': 'shutdown_all(multikernelmanager.py)', '416': 'remove_kernel(multikernelmanager.py)', '413': 'list_kernel_ids(multikernelmanager.py)', '418': 'request_shutdown(multikernelmanager.py)', '402': 'cleanup_resources(multikernelmanager.py)'}}, {'key': 2427, 'parent': 2435, 'tfidf_word': 'hander file execute ensure connection cleanup manager with default date ', 'tfidf_method': 'SubHander Handler utcnow KernelSpec date_default _ensure_tzinfo close send close send ', 'lda_word': ' handle,close,send,test,default,', 'lda_method': ' handle,close,send,handler,execute,', 'lsi_word': ' default,date,test,ensure,tzinfo,', 'lsi_method': ' handle,close,send,handler,test_date_default,', 'spm_method': ' ', 'text_summary': '', 'files_count': 10, 'files': ['forward.py', 'threaded.py', 'test_manager.py', 'kernelspec.py', 'channels.py', 'test_jsonutil.py', 'session.py', 'jsonutil.py', 'test_kernelmanager.py', 'utils.py'], 'execution_path_count': 13, 'function_id_to_name_file': {'492': 'handle(forward.py)', '730': 'close(threaded.py)', '493': 'SubHander(forward.py)', '490': 'Handler(forward.py)', '635': 'test_connection_file_real_path(test_manager.py)', '253': 'KernelSpec(kernelspec.py)', '718': 'close(threaded.py)', '132': 'close(channels.py)', '114': 'send(channels.py)', '88': 'send(channels.py)', '83': 'close(channels.py)', '109': 'close(channels.py)', '575': 'test_date_default(test_jsonutil.py)', '450': 'utcnow(session.py)', '241': 'date_default(jsonutil.py)', '240': '_ensure_tzinfo(jsonutil.py)', '597': 'test_subclasses(test_kernelmanager.py)', '703': 'AsyncKernelManagerWithCleanup(utils.py)', '595': 'test_signal_kernel_subprocesses(test_kernelmanager.py)', '598': 'execute(test_kernelmanager.py)'}}, {'key': 2434, 'parent': 2435, 'tfidf_word': 'stop async thread manager kspec body signal process env subclass ', 'tfidf_method': 'test_signal_kernel_subprocesses test_templated_kspec_env execute execute test_start_parallel_process_kernels test_start_parallel_thread_kernels AsyncKernelManagerSubclass test_env start stop ', 'lda_word': ' env,test,start,stop,kernel,', 'lda_method': ' env_test_body,test_templated_kspec_env,execute,start,env,', 'lsi_word': ' test,env,kernel,execute,start,', 'lsi_method': ' env,test_env,stop,start,execute,', 'spm_method': ' ', 'text_summary': '', 'files_count': 2, 'files': ['test_kernelmanager.py', 'utils.py'], 'execution_path_count': 8, 'function_id_to_name_file': {'597': 'test_subclasses(test_kernelmanager.py)', '702': 'AsyncKernelManagerSubclass(utils.py)', '611': 'test_start_parallel_process_kernels(test_kernelmanager.py)', '591': 'transport(test_kernelmanager.py)', '606': 'test_templated_kspec_env(test_kernelmanager.py)', '599': '_env_test_body(test_kernelmanager.py)', '607': 'execute(test_kernelmanager.py)', '612': 'test_start_parallel_thread_kernels(test_kernelmanager.py)', '604': 'test_signal_kernel_subprocesses(test_kernelmanager.py)', '608': 'execute(test_kernelmanager.py)', '586': 'env(test_kernelmanager.py)', '712': 'stop(utils.py)', '711': 'start(utils.py)', '705': 'test_env(utils.py)'}}, {'key': 1254, 'parent': 2446, 'tfidf_word': 'EP: 1254, Name: test_validate_kernel_name &rarr; _is_valid_kernel_name', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1333, 'parent': 2446, 'tfidf_word': 'EP: 1333, Name: SignalTestApp &rarr; SignalTestKernel', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1240, 'parent': 2449, 'tfidf_word': 'EP: 1240, Name: test_kernel_spec_priority &rarr; _install_sample_kernel', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2448, 'parent': 2449, 'tfidf_word': 'kernel localhost get spec env stop down tear lifecycle cinfo ', 'tfidf_method': 'test_start_sequence_ipc_kernels test_ipc_lifecycle localhost start test_get_kernel_spec test_find_kernel_specs test_find_all_specs tearDown test_ipc_cinfo stop ', 'lda_word': ' kernel,test,sample,install,set,', 'lda_method': ' install_sample_kernel,setup,test_start_sequence_ipc_kernels,test_env,test_find_all_specs,', 'lsi_word': ' kernel,test,run,install,sample,', 'lsi_method': ' install_sample_kernel,setup,test_find_kernel_specs,test_get_kernel_spec,test_find_all_specs,', 'spm_method': ' ', 'text_summary': "Stop the kernel polling. Start the polling of the kernel. Ensure that a sequence of kernel startups doesn't break anything.", 'files_count': 4, 'files': ['test_multikernelmanager.py', 'test_kernelspec.py', 'utils.py', 'localinterfaces.py'], 'execution_path_count': 13, 'function_id_to_name_file': {'651': 'test_tcp_cinfo(test_multikernelmanager.py)', '640': '_run_cinfo(test_multikernelmanager.py)', '621': 'test_find_all_specs(test_kernelspec.py)', '617': '_install_sample_kernel(test_kernelspec.py)', '622': 'test_find_kernel_specs(test_kernelspec.py)', '623': 'test_get_kernel_spec(test_kernelspec.py)', '619': 'tearDown(test_kernelspec.py)', '712': 'stop(utils.py)', '618': 'setUp(test_kernelspec.py)', '711': 'start(utils.py)', '705': 'test_env(utils.py)', '649': 'test_start_sequence_ipc_kernels(test_multikernelmanager.py)', '641': '_run_lifecycle(test_multikernelmanager.py)', '650': 'test_start_sequence_tcp_kernels(test_multikernelmanager.py)', '644': 'test_ipc_cinfo(test_multikernelmanager.py)', '315': 'localhost(localinterfaces.py)', '645': 'test_ipc_lifecycle(test_multikernelmanager.py)'}}, {'key': 1141, 'parent': 2457, 'tfidf_word': 'EP: 1141, Name: test_tcp_cinfo &rarr; _run_cinfo', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2456, 'parent': 2457, 'tfidf_word': 'write id fetch check kernel find file connection permission lifecycle ', 'tfidf_method': 'find_connection_file test_find_connection_file_abspath test_find_connection_file_relative test_secure_write check_user_only_permissions fetch_win32_permissions _run_lifecycle test_tcp_lifecycle_with_kernel_id ', 'lda_word': ' find,connection,file,test,abspath,', 'lda_method': ' find_connection_file,test_tcp_lifecycle_with_kernel_id,test_find_connection_file_relative,test_find_connection_file_abspath,run_lifecycle,', 'lsi_word': ' find,connection,file,test,relative,', 'lsi_method': ' fetch_win32_permissions,test_secure_write,check_user_only_permissions,find_connection_file,test_find_connection_file_relative,', 'spm_method': ' ', 'text_summary': '', 'files_count': 3, 'files': ['test_multikernelmanager.py', 'test_connect.py', 'connect.py'], 'execution_path_count': 4, 'function_id_to_name_file': {'668': 'test_tcp_lifecycle_with_kernel_id(test_multikernelmanager.py)', '657': '_run_lifecycle(test_multikernelmanager.py)', '569': 'test_secure_write(test_connect.py)', '573': 'check_user_only_permissions(test_connect.py)', '574': 'fetch_win32_permissions(test_connect.py)', '563': 'test_find_connection_file_relative(test_connect.py)', '189': 'find_connection_file(connect.py)', '561': 'test_find_connection_file_abspath(test_connect.py)'}}, {'key': 1010, 'parent': 2472, 'tfidf_word': 'EP: 1010, Name: test_complete_reply &rarr; adapt', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1015, 'parent': 2472, 'tfidf_word': 'EP: 1015, Name: test_inspect_request &rarr; adapt', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 974, 'parent': 2496, 'tfidf_word': 'EP: 974, Name: test_display_data &rarr; adapt', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2495, 'parent': 2496, 'tfidf_word': 'default found set adapter type up v4to case line code ', 'tfidf_method': 'test_complete_request test_complete_reply setUp test_default_version test_code_to_line_no_code V4toV5TestCase AdapterTest code_to_line test_rename_type test_same_version ', 'lda_word': ' test,adapt,info,object,reply,', 'lda_method': ' session,setup,code_to_line,test_code_to_line_no_code,adapt,', 'lsi_word': ' test,adapt,reply,info,object,', 'lsi_method': ' adapt,test_kernel_info_reply,test_object_info_reply,test_same_version,test_complete_request,', 'spm_method': ' ', 'text_summary': 'Empty', 'files_count': 3, 'files': ['test_adapter.py', 'session.py', 'adapter.py'], 'execution_path_count': 15, 'function_id_to_name_file': {'527': 'test_kernel_info_reply(test_adapter.py)', '517': 'adapt(test_adapter.py)', '530': 'test_object_info_reply_not_found(test_adapter.py)', '529': 'test_object_info_reply(test_adapter.py)', '531': 'test_object_info_request(test_adapter.py)', '521': 'test_complete_reply(test_adapter.py)', '522': 'test_complete_request(test_adapter.py)', '524': 'test_execute_reply(test_adapter.py)', '532': 'test_rename_type(test_adapter.py)', '525': 'test_execute_request(test_adapter.py)', '528': 'test_no_adapt(test_adapter.py)', '533': 'test_same_version(test_adapter.py)', '513': 'V4toV5TestCase(test_adapter.py)', '512': 'AdapterTest(test_adapter.py)', '519': 'setUp(test_adapter.py)', '441': 'Session(session.py)', '516': 'test_default_version(test_adapter.py)', '515': 'test_code_to_line_no_code(test_adapter.py)', '51': 'code_to_line(adapter.py)'}}, {'key': 885, 'parent': 2486, 'tfidf_word': 'EP: 885, Name: execute &rarr; get_iopub_msg', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2485, 'parent': 2486, 'tfidf_word': 'lifecycle identity feed exit enter datetimes kernelapp raw send clone ', 'tfidf_method': 'feed_identities send_raw sign _launch test_kernelapp_lifecycle test_datetimes_msgpack __enter__ __exit__ start stop ', 'lda_word': ' test,clone,lifecycle,kernelapp,launch,', 'lda_method': ' exit,stop,clone,test_clone,test_send_raw,', 'lsi_word': ' test,send,raw,sign,clone,', 'lsi_method': ' test_send_raw,send_raw,sign,feed_identities,session,', 'spm_method': ' ', 'text_summary': 'Send a raw message via ident path. Split the identities from the rest of the message.', 'files_count': 4, 'files': ['utils.py', 'test_kernelapp.py', 'test_session.py', 'session.py'], 'execution_path_count': 8, 'function_id_to_name_file': {'710': '__exit__(utils.py)', '712': 'stop(utils.py)', '709': '__enter__(utils.py)', '711': 'start(utils.py)', '580': 'test_kernelapp_lifecycle(test_kernelapp.py)', '579': '_launch(test_kernelapp.py)', '686': 'test_clone(test_session.py)', '441': 'Session(session.py)', '473': 'clone(session.py)', '695': 'test_send_raw(test_session.py)', '481': 'send_raw(session.py)', '483': 'sign(session.py)', '689': 'test_datetimes_msgpack(test_session.py)', '475': 'feed_identities(session.py)'}}, {'key': 844, 'parent': 2507, 'tfidf_word': 'EP: 844, Name: test_datetimes &rarr; Session', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2506, 'parent': 2507, 'tfidf_word': 'bad session test packer roundtrip unpack unpacker ', 'tfidf_method': 'Session test_bad_packer test_bad_roundtrip test_bad_unpack test_bad_unpacker ', 'lda_word': ' bad,session,test,unpacker,packer,', 'lda_method': ' session,test_bad_roundtrip,test_bad_unpacker,test_bad_unpack,test_bad_packer,', 'lsi_word': ' session,bad,test,unpacker,unpack,', 'lsi_method': ' session,test_bad_packer,test_bad_unpack,test_bad_unpacker,test_bad_roundtrip,', 'spm_method': ' ', 'text_summary': '', 'files_count': 2, 'files': ['test_session.py', 'session.py'], 'execution_path_count': 4, 'function_id_to_name_file': {'683': 'test_bad_roundtrip(test_session.py)', '441': 'Session(session.py)', '685': 'test_bad_unpacker(test_session.py)', '684': 'test_bad_unpack(test_session.py)', '682': 'test_bad_packer(test_session.py)'}}, {'key': 741, 'parent': 2539, 'tfidf_word': 'EP: 741, Name: test_serialize &rarr; feed_identities', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2538, 'parent': 2539, 'tfidf_word': 'shutdown inspect comm complete env no history socket zmq session ', 'tfidf_method': 'Session NoSuchKernel hb_channel wrapped wait_for_ready reqrep wrapped wait_for_ready test_inspect reqrep ', 'lda_word': ' kernel,client,channel,hb,blocking,', 'lda_method': ' check_reply,handle_kernel_info_reply,wait_for_ready,test_kernel_info,test_inspect,', 'lsi_word': ' test,reply,check,kernel,info,', 'lsi_method': ' check_reply,test_kernel_info,test_inspect,test_history,test_comm_info,', 'spm_method': ' ', 'text_summary': 'Get the hb channel object for this kernel. Stop the kernel polling.', 'files_count': 9, 'files': ['test_session.py', 'session.py', 'test_client.py', 'utils.py', 'kernelspec.py', 'client.py', 'channels.py', 'connect.py', 'threaded.py'], 'execution_path_count': 23, 'function_id_to_name_file': {'674': 'TestSession(test_session.py)', '673': 'SessionTestCase(test_session.py)', '678': 'setUp(test_session.py)', '441': 'Session(session.py)', '556': 'test_shutdown(test_client.py)', '548': '_check_reply(test_client.py)', '550': 'test_comm_info(test_client.py)', '555': 'test_kernel_info(test_client.py)', '551': 'test_complete(test_client.py)', '554': 'test_inspect(test_client.py)', '553': 'test_history(test_client.py)', '549': 'setUp(test_client.py)', '712': 'stop(utils.py)', '255': 'NoSuchKernel(kernelspec.py)', '711': 'start(utils.py)', '705': 'test_env(utils.py)', '116': 'BlockingKernelClient(client.py)', '117': 'reqrep(client.py)', '124': 'wrapped(client.py)', '123': 'wait_for_ready(client.py)', '150': '_handle_kernel_info_reply(client.py)', '125': 'HBChannel(channels.py)', '104': 'wait_for_ready(client.py)', '102': 'hb_channel(client.py)', '196': '_make_url(connect.py)', '90': 'AsyncKernelClient(client.py)', '91': 'reqrep(client.py)', '105': 'wrapped(client.py)', '80': 'ZMQSocketChannel(channels.py)', '83': 'close(channels.py)', '154': 'control_channel(client.py)', '723': 'ioloop(threaded.py)', '160': 'hb_channel(client.py)'}}, {'key': 278, 'parent': 2546, 'tfidf_word': 'EP: 278, Name: start &rarr; start', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2545, 'parent': 2546, 'tfidf_word': 'start ', 'tfidf_method': 'start start start ', 'lda_word': ' start,', 'lda_method': ' start,', 'lsi_word': ' start,', 'lsi_method': ' start,', 'spm_method': ' ', 'text_summary': '', 'files_count': 2, 'files': ['kernelspecapp.py', 'restarter.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'291': 'start(kernelspecapp.py)', '432': 'start(restarter.py)', '288': 'start(kernelspecapp.py)'}}, {'key': 274, 'parent': 2557, 'tfidf_word': 'EP: 274, Name: start &rarr; start', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 275, 'parent': 2557, 'tfidf_word': 'EP: 275, Name: start &rarr; start', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 128, 'parent': 2582, 'tfidf_word': 'EP: 128, Name: __call__ &rarr; update_metadata', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2581, 'parent': 2582, 'tfidf_word': 'dict default config call byte update kernel native spec install ', 'tfidf_method': '__init__ _record_started new_id_bytes Message install_native_kernel_spec to_json to_dict install_native_kernel_spec update_header config ', 'lda_word': ' key,default,byte,new,init,', 'lda_method': ' install_native_kernel_spec,test_msg2obj,message,new_auth,initialize,', 'lsi_word': ' native,kernel,install,spec,update,', 'lsi_method': ' install_native_kernel_spec,initialize,test_msg2obj,config,message,', 'spm_method': ' ', 'text_summary': "For tests, create a file to indicate that we've started.", 'files_count': 5, 'files': ['adapter.py', 'kernelapp.py', 'test_kernelmanager.py', 'kernelspec.py', 'session.py'], 'execution_path_count': 10, 'function_id_to_name_file': {'53': '__call__(adapter.py)', '55': 'update_header(adapter.py)', '247': 'initialize(kernelapp.py)', '246': '_record_started(kernelapp.py)', '585': 'config(test_kernelmanager.py)', '262': 'install_native_kernel_spec(kernelspec.py)', '276': 'install_native_kernel_spec(kernelspec.py)', '265': 'to_json(kernelspec.py)', '264': 'to_dict(kernelspec.py)', '449': 'test_msg2obj(session.py)', '440': 'Message(session.py)', '453': '__init__(session.py)', '470': '_signature_scheme_changed(session.py)', '465': '_new_auth(session.py)', '463': '_key_default(session.py)', '447': 'new_id_bytes(session.py)', '462': '_key_changed(session.py)'}}, {'key': 2572, 'parent': 2597, 'tfidf_word': 'kernel shutdown id list remove flush ', 'tfidf_method': 'shutdown_all list_kernel_ids remove_kernel _flush flush ', 'lda_word': ' kernel,shutdown,remove,list,flush,', 'lda_method': ' flush,remove_kernel,shutdown_all,list_kernel_ids,', 'lsi_word': ' kernel,shutdown,list,remove,flush,', 'lsi_method': ' flush,remove_kernel,shutdown_all,list_kernel_ids,', 'spm_method': ' ', 'text_summary': '', 'files_count': 2, 'files': ['threaded.py', 'multikernelmanager.py'], 'execution_path_count': 3, 'function_id_to_name_file': {'731': 'flush(threaded.py)', '727': '_flush(threaded.py)', '386': 'shutdown_all(multikernelmanager.py)', '416': 'remove_kernel(multikernelmanager.py)', '413': 'list_kernel_ids(multikernelmanager.py)'}}, {'key': 2596, 'parent': 2597, 'tfidf_word': 'cleanup request resource shutdown ', 'tfidf_method': 'shutdown_all cleanup_resources request_shutdown ', 'lda_word': ' shutdown,resource,request,cleanup,', 'lda_method': ' shutdown_all,request_shutdown,cleanup_resources,', 'lsi_word': ' shutdown,request,cleanup,resource,', 'lsi_method': ' shutdown_all,cleanup_resources,request_shutdown,', 'spm_method': ' ', 'text_summary': '', 'files_count': 1, 'files': ['multikernelmanager.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'386': 'shutdown_all(multikernelmanager.py)', '418': 'request_shutdown(multikernelmanager.py)', '402': 'cleanup_resources(multikernelmanager.py)'}}, {'key': 2424, 'parent': 2427, 'tfidf_word': 'kernel handler hander file ensure connection tzinfo utcnow default date ', 'tfidf_method': 'date_default KernelSpec utcnow Handler SubHander test_connection_file_real_path close close close send ', 'lda_word': ' test,real,file,kernel,spec,', 'lda_method': ' test_date_default,utcnow,handle,close,send,', 'lsi_word': ' default,date,test,ensure,tzinfo,', 'lsi_method': ' handle,close,send,utcnow,ensure_tzinfo,', 'spm_method': ' ', 'text_summary': '', 'files_count': 8, 'files': ['forward.py', 'threaded.py', 'test_manager.py', 'kernelspec.py', 'channels.py', 'test_jsonutil.py', 'session.py', 'jsonutil.py'], 'execution_path_count': 11, 'function_id_to_name_file': {'492': 'handle(forward.py)', '730': 'close(threaded.py)', '493': 'SubHander(forward.py)', '490': 'Handler(forward.py)', '635': 'test_connection_file_real_path(test_manager.py)', '253': 'KernelSpec(kernelspec.py)', '718': 'close(threaded.py)', '132': 'close(channels.py)', '114': 'send(channels.py)', '88': 'send(channels.py)', '83': 'close(channels.py)', '109': 'close(channels.py)', '575': 'test_date_default(test_jsonutil.py)', '450': 'utcnow(session.py)', '241': 'date_default(jsonutil.py)', '240': '_ensure_tzinfo(jsonutil.py)'}}, {'key': 2426, 'parent': 2427, 'tfidf_word': 'kernel test async cleanup execute manager signal subclass subprocesses with ', 'tfidf_method': 'test_signal_kernel_subprocesses test_subclasses execute AsyncKernelManagerWithCleanup ', 'lda_word': ' test,kernel,subprocesses,signal,subclass,', 'lda_method': ' asynckernelmanagerwithcleanup,test_subclasses,test_signal_kernel_subprocesses,execute,', 'lsi_word': ' test,kernel,subclass,async,manager,', 'lsi_method': ' test_subclasses,asynckernelmanagerwithcleanup,test_signal_kernel_subprocesses,execute,', 'spm_method': ' ', 'text_summary': 'Empty', 'files_count': 2, 'files': ['test_kernelmanager.py', 'utils.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'597': 'test_subclasses(test_kernelmanager.py)', '703': 'AsyncKernelManagerWithCleanup(utils.py)', '595': 'test_signal_kernel_subprocesses(test_kernelmanager.py)', '598': 'execute(test_kernelmanager.py)'}}, {'key': 1349, 'parent': 2434, 'tfidf_word': 'EP: 1349, Name: test_subclasses &rarr; AsyncKernelManagerSubclass', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2433, 'parent': 2434, 'tfidf_word': 'test body kspec process signal stop subprocesses templated thread env ', 'tfidf_method': '_env_test_body test_signal_kernel_subprocesses test_templated_kspec_env execute execute test_start_parallel_process_kernels test_start_parallel_thread_kernels test_env start stop ', 'lda_word': ' env,stop,test,kernel,start,', 'lda_method': ' test_templated_kspec_env,env_test_body,test_env,execute,env,', 'lsi_word': ' test,env,execute,kernel,start,', 'lsi_method': ' env,start,stop,test_env,test_templated_kspec_env,', 'spm_method': ' ', 'text_summary': '', 'files_count': 2, 'files': ['test_kernelmanager.py', 'utils.py'], 'execution_path_count': 7, 'function_id_to_name_file': {'611': 'test_start_parallel_process_kernels(test_kernelmanager.py)', '591': 'transport(test_kernelmanager.py)', '606': 'test_templated_kspec_env(test_kernelmanager.py)', '599': '_env_test_body(test_kernelmanager.py)', '607': 'execute(test_kernelmanager.py)', '612': 'test_start_parallel_thread_kernels(test_kernelmanager.py)', '604': 'test_signal_kernel_subprocesses(test_kernelmanager.py)', '608': 'execute(test_kernelmanager.py)', '586': 'env(test_kernelmanager.py)', '712': 'stop(utils.py)', '711': 'start(utils.py)', '705': 'test_env(utils.py)'}}, {'key': 1188, 'parent': 2448, 'tfidf_word': 'EP: 1188, Name: test_tcp_cinfo &rarr; _run_cinfo', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2445, 'parent': 2448, 'tfidf_word': 'kernel localhost get env spec down stop tear lifecycle cinfo ', 'tfidf_method': 'test_ipc_lifecycle test_ipc_cinfo localhost _run_cinfo test_get_kernel_spec test_find_kernel_specs test_find_all_specs tearDown start stop ', 'lda_word': ' lifecycle,ipc,run,install,sample,', 'lda_method': ' test_find_all_specs,test_start_sequence_ipc_kernels,test_ipc_cinfo,run_cinfo,install_sample_kernel,', 'lsi_word': ' kernel,test,install,sample,lifecycle,', 'lsi_method': ' install_sample_kernel,setup,test_get_kernel_spec,test_find_kernel_specs,test_find_all_specs,', 'spm_method': ' ', 'text_summary': "Stop the kernel polling. Start the polling of the kernel. Ensure that a sequence of kernel startups doesn't break anything.", 'files_count': 4, 'files': ['test_kernelspec.py', 'utils.py', 'test_multikernelmanager.py', 'localinterfaces.py'], 'execution_path_count': 12, 'function_id_to_name_file': {'621': 'test_find_all_specs(test_kernelspec.py)', '617': '_install_sample_kernel(test_kernelspec.py)', '622': 'test_find_kernel_specs(test_kernelspec.py)', '623': 'test_get_kernel_spec(test_kernelspec.py)', '619': 'tearDown(test_kernelspec.py)', '712': 'stop(utils.py)', '618': 'setUp(test_kernelspec.py)', '711': 'start(utils.py)', '705': 'test_env(utils.py)', '649': 'test_start_sequence_ipc_kernels(test_multikernelmanager.py)', '641': '_run_lifecycle(test_multikernelmanager.py)', '650': 'test_start_sequence_tcp_kernels(test_multikernelmanager.py)', '644': 'test_ipc_cinfo(test_multikernelmanager.py)', '640': '_run_cinfo(test_multikernelmanager.py)', '651': 'test_tcp_cinfo(test_multikernelmanager.py)', '315': 'localhost(localinterfaces.py)', '645': 'test_ipc_lifecycle(test_multikernelmanager.py)'}}, {'key': 1137, 'parent': 2456, 'tfidf_word': 'EP: 1137, Name: test_tcp_lifecycle_with_kernel_id &rarr; _run_lifecycle', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2455, 'parent': 2456, 'tfidf_word': 'fetch relative secure user win32 write connection file find permission ', 'tfidf_method': 'find_connection_file test_find_connection_file_abspath test_find_connection_file_relative test_secure_write check_user_only_permissions fetch_win32_permissions ', 'lda_word': ' permission,test,fetch,win32,user,', 'lda_method': ' find_connection_file,test_find_connection_file_abspath,test_find_connection_file_relative,fetch_win32_permissions,test_secure_write,', 'lsi_word': ' find,file,connection,test,abspath,', 'lsi_method': ' find_connection_file,test_find_connection_file_abspath,test_find_connection_file_relative,fetch_win32_permissions,test_secure_write,', 'spm_method': ' ', 'text_summary': '', 'files_count': 2, 'files': ['test_connect.py', 'connect.py'], 'execution_path_count': 3, 'function_id_to_name_file': {'569': 'test_secure_write(test_connect.py)', '573': 'check_user_only_permissions(test_connect.py)', '574': 'fetch_win32_permissions(test_connect.py)', '563': 'test_find_connection_file_relative(test_connect.py)', '189': 'find_connection_file(connect.py)', '561': 'test_find_connection_file_abspath(test_connect.py)'}}, {'key': 969, 'parent': 2495, 'tfidf_word': 'EP: 969, Name: test_kernel_info_reply &rarr; adapt', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2494, 'parent': 2495, 'tfidf_word': 'rename case set adapter type up v4to default line code ', 'tfidf_method': 'test_complete_request test_complete_reply setUp test_default_version test_code_to_line_no_code V4toV5TestCase AdapterTest code_to_line test_rename_type test_same_version ', 'lda_word': ' code,line,test,adapt,reply,', 'lda_method': ' adapt,test_object_info_reply,test_object_info_reply_not_found,test_rename_type,session,', 'lsi_word': ' test,adapt,reply,info,object,', 'lsi_method': ' adapt,test_no_adapt,test_execute_request,test_same_version,test_execute_reply,', 'spm_method': ' ', 'text_summary': 'Empty', 'files_count': 3, 'files': ['test_adapter.py', 'session.py', 'adapter.py'], 'execution_path_count': 14, 'function_id_to_name_file': {'530': 'test_object_info_reply_not_found(test_adapter.py)', '517': 'adapt(test_adapter.py)', '529': 'test_object_info_reply(test_adapter.py)', '531': 'test_object_info_request(test_adapter.py)', '521': 'test_complete_reply(test_adapter.py)', '522': 'test_complete_request(test_adapter.py)', '524': 'test_execute_reply(test_adapter.py)', '532': 'test_rename_type(test_adapter.py)', '525': 'test_execute_request(test_adapter.py)', '528': 'test_no_adapt(test_adapter.py)', '533': 'test_same_version(test_adapter.py)', '513': 'V4toV5TestCase(test_adapter.py)', '512': 'AdapterTest(test_adapter.py)', '519': 'setUp(test_adapter.py)', '441': 'Session(session.py)', '516': 'test_default_version(test_adapter.py)', '515': 'test_code_to_line_no_code(test_adapter.py)', '51': 'code_to_line(adapter.py)'}}, {'key': 884, 'parent': 2485, 'tfidf_word': 'EP: 884, Name: __exit__ &rarr; stop', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2484, 'parent': 2485, 'tfidf_word': 'identity kernelapp launch lifecycle msgpack sign start clone raw send ', 'tfidf_method': 'test_send_raw clone feed_identities send_raw sign _launch test_kernelapp_lifecycle test_datetimes_msgpack __enter__ start ', 'lda_word': ' test,session,msgpack,datetimes,clone,', 'lda_method': ' feed_identities,test_kernelapp_lifecycle,launch,test_send_raw,test_clone,', 'lsi_word': ' test,send,raw,sign,clone,', 'lsi_method': ' test_send_raw,send_raw,sign,feed_identities,test_clone,', 'spm_method': ' ', 'text_summary': '', 'files_count': 4, 'files': ['utils.py', 'test_kernelapp.py', 'test_session.py', 'session.py'], 'execution_path_count': 7, 'function_id_to_name_file': {'709': '__enter__(utils.py)', '711': 'start(utils.py)', '580': 'test_kernelapp_lifecycle(test_kernelapp.py)', '579': '_launch(test_kernelapp.py)', '686': 'test_clone(test_session.py)', '441': 'Session(session.py)', '473': 'clone(session.py)', '695': 'test_send_raw(test_session.py)', '481': 'send_raw(session.py)', '483': 'sign(session.py)', '689': 'test_datetimes_msgpack(test_session.py)', '475': 'feed_identities(session.py)'}}, {'key': 841, 'parent': 2506, 'tfidf_word': 'EP: 841, Name: test_bad_roundtrip &rarr; Session', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2505, 'parent': 2506, 'tfidf_word': 'bad session test packer unpack unpacker ', 'tfidf_method': 'Session test_bad_packer test_bad_unpack test_bad_unpacker ', 'lda_word': ' bad,session,test,unpacker,packer,', 'lda_method': ' session,test_bad_unpack,test_bad_unpacker,test_bad_packer,', 'lsi_word': ' session,bad,test,packer,unpacker,', 'lsi_method': ' session,test_bad_unpacker,test_bad_packer,test_bad_unpack,', 'spm_method': ' ', 'text_summary': '', 'files_count': 2, 'files': ['test_session.py', 'session.py'], 'execution_path_count': 3, 'function_id_to_name_file': {'685': 'test_bad_unpacker(test_session.py)', '441': 'Session(session.py)', '684': 'test_bad_unpack(test_session.py)', '682': 'test_bad_packer(test_session.py)'}}, {'key': 728, 'parent': 2538, 'tfidf_word': 'EP: 728, Name: TestSession &rarr; SessionTestCase', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2537, 'parent': 2538, 'tfidf_word': 'stop socket ioloop shutdown session env history no start zmq ', 'tfidf_method': 'Session NoSuchKernel hb_channel wrapped wait_for_ready reqrep wrapped wait_for_ready test_history reqrep ', 'lda_word': ' channel,make,url,hb,control,', 'lda_method': ' hb_channel,make_url,check_reply,test_shutdown,setup,', 'lsi_word': ' reply,test,check,kernel,info,', 'lsi_method': ' check_reply,test_inspect,test_comm_info,test_kernel_info,test_history,', 'spm_method': ' ', 'text_summary': 'Get the hb channel object for this kernel. Stop the kernel polling.', 'files_count': 9, 'files': ['test_session.py', 'session.py', 'test_client.py', 'utils.py', 'kernelspec.py', 'client.py', 'channels.py', 'connect.py', 'threaded.py'], 'execution_path_count': 22, 'function_id_to_name_file': {'678': 'setUp(test_session.py)', '441': 'Session(session.py)', '556': 'test_shutdown(test_client.py)', '548': '_check_reply(test_client.py)', '550': 'test_comm_info(test_client.py)', '555': 'test_kernel_info(test_client.py)', '551': 'test_complete(test_client.py)', '554': 'test_inspect(test_client.py)', '553': 'test_history(test_client.py)', '549': 'setUp(test_client.py)', '712': 'stop(utils.py)', '255': 'NoSuchKernel(kernelspec.py)', '711': 'start(utils.py)', '705': 'test_env(utils.py)', '116': 'BlockingKernelClient(client.py)', '117': 'reqrep(client.py)', '124': 'wrapped(client.py)', '123': 'wait_for_ready(client.py)', '150': '_handle_kernel_info_reply(client.py)', '125': 'HBChannel(channels.py)', '104': 'wait_for_ready(client.py)', '102': 'hb_channel(client.py)', '196': '_make_url(connect.py)', '90': 'AsyncKernelClient(client.py)', '91': 'reqrep(client.py)', '105': 'wrapped(client.py)', '80': 'ZMQSocketChannel(channels.py)', '83': 'close(channels.py)', '154': 'control_channel(client.py)', '723': 'ioloop(threaded.py)', '160': 'hb_channel(client.py)'}}, {'key': 276, 'parent': 2545, 'tfidf_word': 'EP: 276, Name: start &rarr; start', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 277, 'parent': 2545, 'tfidf_word': 'EP: 277, Name: start &rarr; start', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 127, 'parent': 2581, 'tfidf_word': 'EP: 127, Name: __call__ &rarr; update_header', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2580, 'parent': 2581, 'tfidf_word': 'id start json default init config native install spec kernel ', 'tfidf_method': 'to_dict to_json install_native_kernel_spec Message new_id_bytes __init__ _key_changed _key_default _signature_scheme_changed config ', 'lda_word': ' kernel,install,native,spec,test,', 'lda_method': ' initialize,record_started,config,new_id_bytes,key_default,', 'lsi_word': ' kernel,native,install,spec,message,', 'lsi_method': ' install_native_kernel_spec,config,test_msg2obj,new_auth,key_changed,', 'spm_method': ' ', 'text_summary': "For tests, create a file to indicate that we've started.", 'files_count': 4, 'files': ['kernelapp.py', 'test_kernelmanager.py', 'kernelspec.py', 'session.py'], 'execution_path_count': 9, 'function_id_to_name_file': {'247': 'initialize(kernelapp.py)', '246': '_record_started(kernelapp.py)', '585': 'config(test_kernelmanager.py)', '262': 'install_native_kernel_spec(kernelspec.py)', '276': 'install_native_kernel_spec(kernelspec.py)', '265': 'to_json(kernelspec.py)', '264': 'to_dict(kernelspec.py)', '449': 'test_msg2obj(session.py)', '440': 'Message(session.py)', '453': '__init__(session.py)', '470': '_signature_scheme_changed(session.py)', '465': '_new_auth(session.py)', '463': '_key_default(session.py)', '447': 'new_id_bytes(session.py)', '462': '_key_changed(session.py)'}}, {'key': 91, 'parent': 2572, 'tfidf_word': 'EP: 91, Name: flush &rarr; _flush', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2571, 'parent': 2572, 'tfidf_word': 'kernel shutdown id list remove ', 'tfidf_method': 'shutdown_all list_kernel_ids remove_kernel ', 'lda_word': ' shutdown,kernel,list,remove,', 'lda_method': ' shutdown_all,list_kernel_ids,remove_kernel,', 'lsi_word': ' shutdown,kernel,remove,list,', 'lsi_method': ' shutdown_all,remove_kernel,list_kernel_ids,', 'spm_method': ' ', 'text_summary': '', 'files_count': 1, 'files': ['multikernelmanager.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'386': 'shutdown_all(multikernelmanager.py)', '416': 'remove_kernel(multikernelmanager.py)', '413': 'list_kernel_ids(multikernelmanager.py)'}}, {'key': 86, 'parent': 2596, 'tfidf_word': 'EP: 86, Name: shutdown_all &rarr; request_shutdown', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 87, 'parent': 2596, 'tfidf_word': 'EP: 87, Name: shutdown_all &rarr; cleanup_resources', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2422, 'parent': 2424, 'tfidf_word': 'connection file hander handler kernel path real spec sub test ', 'tfidf_method': 'send close KernelSpec Handler SubHander test_connection_file_real_path close close close send ', 'lda_word': ' handle,close,send,hander,handler,', 'lda_method': ' test_connection_file_real_path,kernelspec,handle,close,send,', 'lsi_word': ' handle,close,send,file,path,', 'lsi_method': ' handle,close,send,test_connection_file_real_path,kernelspec,', 'spm_method': ' ', 'text_summary': '', 'files_count': 5, 'files': ['forward.py', 'threaded.py', 'test_manager.py', 'kernelspec.py', 'channels.py'], 'execution_path_count': 9, 'function_id_to_name_file': {'492': 'handle(forward.py)', '730': 'close(threaded.py)', '493': 'SubHander(forward.py)', '490': 'Handler(forward.py)', '635': 'test_connection_file_real_path(test_manager.py)', '253': 'KernelSpec(kernelspec.py)', '718': 'close(threaded.py)', '132': 'close(channels.py)', '114': 'send(channels.py)', '88': 'send(channels.py)', '83': 'close(channels.py)', '109': 'close(channels.py)'}}, {'key': 2423, 'parent': 2424, 'tfidf_word': 'test ensure tzinfo utcnow date default ', 'tfidf_method': 'test_date_default _ensure_tzinfo date_default utcnow ', 'lda_word': ' default,test,date,utcnow,ensure,', 'lda_method': ' test_date_default,utcnow,date_default,ensure_tzinfo,', 'lsi_word': ' date,default,test,tzinfo,ensure,', 'lsi_method': ' test_date_default,ensure_tzinfo,date_default,utcnow,', 'spm_method': ' ', 'text_summary': '', 'files_count': 3, 'files': ['test_jsonutil.py', 'session.py', 'jsonutil.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'575': 'test_date_default(test_jsonutil.py)', '450': 'utcnow(session.py)', '241': 'date_default(jsonutil.py)', '240': '_ensure_tzinfo(jsonutil.py)'}}, {'key': 1350, 'parent': 2426, 'tfidf_word': 'EP: 1350, Name: test_subclasses &rarr; AsyncKernelManagerWithCleanup', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1351, 'parent': 2426, 'tfidf_word': 'EP: 1351, Name: test_signal_kernel_subprocesses &rarr; execute', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1346, 'parent': 2433, 'tfidf_word': 'EP: 1346, Name: test_start_parallel_process_kernels &rarr; transport', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2432, 'parent': 2433, 'tfidf_word': 'kspec parallel signal stop subprocesses templated thread transport env test ', 'tfidf_method': 'transport _env_test_body test_signal_kernel_subprocesses test_templated_kspec_env execute execute test_start_parallel_thread_kernels test_env start stop ', 'lda_word': ' env,test,start,stop,kernel,', 'lda_method': ' env,test_start_parallel_thread_kernels,execute,test_env,start,', 'lsi_word': ' env,test,execute,body,templated,', 'lsi_method': ' env,test_env,stop,start,execute,', 'spm_method': ' ', 'text_summary': '', 'files_count': 2, 'files': ['test_kernelmanager.py', 'utils.py'], 'execution_path_count': 6, 'function_id_to_name_file': {'606': 'test_templated_kspec_env(test_kernelmanager.py)', '599': '_env_test_body(test_kernelmanager.py)', '607': 'execute(test_kernelmanager.py)', '612': 'test_start_parallel_thread_kernels(test_kernelmanager.py)', '591': 'transport(test_kernelmanager.py)', '604': 'test_signal_kernel_subprocesses(test_kernelmanager.py)', '608': 'execute(test_kernelmanager.py)', '586': 'env(test_kernelmanager.py)', '712': 'stop(utils.py)', '711': 'start(utils.py)', '705': 'test_env(utils.py)'}}, {'key': 1237, 'parent': 2445, 'tfidf_word': 'EP: 1237, Name: test_find_all_specs &rarr; _install_sample_kernel', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2444, 'parent': 2445, 'tfidf_word': 'find env spec specs down stop tear kernel lifecycle cinfo ', 'tfidf_method': 'test_get_kernel_spec _run_cinfo test_ipc_cinfo test_ipc_lifecycle test_start_sequence_ipc_kernels test_start_sequence_tcp_kernels test_tcp_cinfo test_env start stop ', 'lda_word': ' kernel,install,sample,test,specs,', 'lda_method': ' stop,teardown,run_lifecycle,install_sample_kernel,setup,', 'lsi_word': ' kernel,test,lifecycle,run,install,', 'lsi_method': ' setup,install_sample_kernel,test_env,start,test_get_kernel_spec,', 'spm_method': ' ', 'text_summary': 'Stop the kernel polling. Start the polling of the kernel.', 'files_count': 4, 'files': ['test_kernelspec.py', 'utils.py', 'test_multikernelmanager.py', 'localinterfaces.py'], 'execution_path_count': 11, 'function_id_to_name_file': {'622': 'test_find_kernel_specs(test_kernelspec.py)', '617': '_install_sample_kernel(test_kernelspec.py)', '623': 'test_get_kernel_spec(test_kernelspec.py)', '619': 'tearDown(test_kernelspec.py)', '712': 'stop(utils.py)', '618': 'setUp(test_kernelspec.py)', '711': 'start(utils.py)', '705': 'test_env(utils.py)', '649': 'test_start_sequence_ipc_kernels(test_multikernelmanager.py)', '641': '_run_lifecycle(test_multikernelmanager.py)', '650': 'test_start_sequence_tcp_kernels(test_multikernelmanager.py)', '644': 'test_ipc_cinfo(test_multikernelmanager.py)', '640': '_run_cinfo(test_multikernelmanager.py)', '651': 'test_tcp_cinfo(test_multikernelmanager.py)', '315': 'localhost(localinterfaces.py)', '645': 'test_ipc_lifecycle(test_multikernelmanager.py)'}}, {'key': 1112, 'parent': 2455, 'tfidf_word': 'EP: 1112, Name: test_secure_write &rarr; check_user_only_permissions &rarr; fetch_win32_permissions', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2454, 'parent': 2455, 'tfidf_word': 'test abspath relative connection file find ', 'tfidf_method': 'find_connection_file test_find_connection_file_abspath test_find_connection_file_relative ', 'lda_word': ' file,connection,find,test,abspath,', 'lda_method': ' find_connection_file,test_find_connection_file_relative,test_find_connection_file_abspath,', 'lsi_word': ' file,find,connection,test,relative,', 'lsi_method': ' find_connection_file,test_find_connection_file_abspath,test_find_connection_file_relative,', 'spm_method': ' ', 'text_summary': '', 'files_count': 2, 'files': ['test_connect.py', 'connect.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'563': 'test_find_connection_file_relative(test_connect.py)', '189': 'find_connection_file(connect.py)', '561': 'test_find_connection_file_abspath(test_connect.py)'}}, {'key': 964, 'parent': 2494, 'tfidf_word': 'EP: 964, Name: test_object_info_reply_not_found &rarr; adapt', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2493, 'parent': 2494, 'tfidf_word': 'v5 case set adapter type up v4to rename line code ', 'tfidf_method': 'test_complete_request test_complete_reply setUp test_default_version test_code_to_line_no_code V4toV5TestCase AdapterTest code_to_line test_rename_type test_same_version ', 'lda_word': ' adapt,test,type,rename,request,', 'lda_method': ' adapt,session,test_object_info_reply,test_default_version,v4tov5testcase,', 'lsi_word': ' test,adapt,reply,request,code,', 'lsi_method': ' adapt,test_object_info_request,test_complete_request,test_rename_type,test_execute_reply,', 'spm_method': ' ', 'text_summary': 'Empty', 'files_count': 3, 'files': ['test_adapter.py', 'session.py', 'adapter.py'], 'execution_path_count': 13, 'function_id_to_name_file': {'529': 'test_object_info_reply(test_adapter.py)', '517': 'adapt(test_adapter.py)', '531': 'test_object_info_request(test_adapter.py)', '521': 'test_complete_reply(test_adapter.py)', '522': 'test_complete_request(test_adapter.py)', '524': 'test_execute_reply(test_adapter.py)', '532': 'test_rename_type(test_adapter.py)', '525': 'test_execute_request(test_adapter.py)', '528': 'test_no_adapt(test_adapter.py)', '533': 'test_same_version(test_adapter.py)', '513': 'V4toV5TestCase(test_adapter.py)', '512': 'AdapterTest(test_adapter.py)', '519': 'setUp(test_adapter.py)', '441': 'Session(session.py)', '516': 'test_default_version(test_adapter.py)', '515': 'test_code_to_line_no_code(test_adapter.py)', '51': 'code_to_line(adapter.py)'}}, {'key': 883, 'parent': 2484, 'tfidf_word': 'EP: 883, Name: __enter__ &rarr; start', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2483, 'parent': 2484, 'tfidf_word': 'feed identity kernelapp launch lifecycle msgpack sign clone raw send ', 'tfidf_method': 'Session test_clone test_send_raw clone feed_identities send_raw sign _launch test_kernelapp_lifecycle test_datetimes_msgpack ', 'lda_word': ' send,raw,test,sign,identity,', 'lda_method': ' test_clone,clone,test_send_raw,session,launch,', 'lsi_word': ' test,send,raw,sign,clone,', 'lsi_method': ' test_send_raw,send_raw,sign,feed_identities,session,', 'spm_method': ' ', 'text_summary': 'Split the identities from the rest of the message.', 'files_count': 3, 'files': ['test_kernelapp.py', 'test_session.py', 'session.py'], 'execution_path_count': 6, 'function_id_to_name_file': {'580': 'test_kernelapp_lifecycle(test_kernelapp.py)', '579': '_launch(test_kernelapp.py)', '686': 'test_clone(test_session.py)', '441': 'Session(session.py)', '473': 'clone(session.py)', '695': 'test_send_raw(test_session.py)', '481': 'send_raw(session.py)', '483': 'sign(session.py)', '689': 'test_datetimes_msgpack(test_session.py)', '475': 'feed_identities(session.py)'}}, {'key': 837, 'parent': 2505, 'tfidf_word': 'EP: 837, Name: test_bad_unpacker &rarr; Session', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2504, 'parent': 2505, 'tfidf_word': 'bad session test packer unpack ', 'tfidf_method': 'Session test_bad_packer test_bad_unpack ', 'lda_word': ' bad,test,session,packer,unpack,', 'lda_method': ' session,test_bad_packer,test_bad_unpack,', 'lsi_word': ' session,bad,test,packer,unpack,', 'lsi_method': ' session,test_bad_unpack,test_bad_packer,', 'spm_method': ' ', 'text_summary': '', 'files_count': 2, 'files': ['test_session.py', 'session.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'684': 'test_bad_unpack(test_session.py)', '441': 'Session(session.py)', '682': 'test_bad_packer(test_session.py)'}}, {'key': 724, 'parent': 2537, 'tfidf_word': 'EP: 724, Name: setUp &rarr; Session', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2536, 'parent': 2537, 'tfidf_word': 'such stop start socket shutdown env history no ioloop zmq ', 'tfidf_method': 'test_comm_info NoSuchKernel hb_channel wrapped wait_for_ready reqrep wrapped wait_for_ready test_history reqrep ', 'lda_word': ' channel,control,make,url,ioloop,', 'lda_method': ' handle_kernel_info_reply,wait_for_ready,make_url,hb_channel,check_reply,', 'lsi_word': ' reply,test,check,kernel,info,', 'lsi_method': ' check_reply,test_shutdown,test_kernel_info,test_history,test_complete,', 'spm_method': ' ', 'text_summary': 'Get the hb channel object for this kernel. Stop the kernel polling.', 'files_count': 7, 'files': ['test_client.py', 'utils.py', 'kernelspec.py', 'client.py', 'channels.py', 'connect.py', 'threaded.py'], 'execution_path_count': 21, 'function_id_to_name_file': {'556': 'test_shutdown(test_client.py)', '548': '_check_reply(test_client.py)', '550': 'test_comm_info(test_client.py)', '555': 'test_kernel_info(test_client.py)', '551': 'test_complete(test_client.py)', '554': 'test_inspect(test_client.py)', '553': 'test_history(test_client.py)', '549': 'setUp(test_client.py)', '712': 'stop(utils.py)', '255': 'NoSuchKernel(kernelspec.py)', '711': 'start(utils.py)', '705': 'test_env(utils.py)', '116': 'BlockingKernelClient(client.py)', '117': 'reqrep(client.py)', '124': 'wrapped(client.py)', '123': 'wait_for_ready(client.py)', '150': '_handle_kernel_info_reply(client.py)', '125': 'HBChannel(channels.py)', '104': 'wait_for_ready(client.py)', '102': 'hb_channel(client.py)', '196': '_make_url(connect.py)', '90': 'AsyncKernelClient(client.py)', '91': 'reqrep(client.py)', '105': 'wrapped(client.py)', '80': 'ZMQSocketChannel(channels.py)', '83': 'close(channels.py)', '154': 'control_channel(client.py)', '723': 'ioloop(threaded.py)', '160': 'hb_channel(client.py)'}}, {'key': 126, 'parent': 2580, 'tfidf_word': 'EP: 126, Name: initialize &rarr; _record_started', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2579, 'parent': 2580, 'tfidf_word': 'message byte scheme signature default json install spec kernel native ', 'tfidf_method': 'to_dict to_json install_native_kernel_spec Message new_id_bytes __init__ _key_changed _key_default _signature_scheme_changed config ', 'lda_word': ' msg2obj,test,init,message,key,', 'lda_method': ' new_auth,key_changed,install_native_kernel_spec,test_msg2obj,new_id_bytes,', 'lsi_word': ' spec,native,kernel,install,config,', 'lsi_method': ' install_native_kernel_spec,test_msg2obj,message,init,to_dict,', 'spm_method': ' ', 'text_summary': '', 'files_count': 4, 'files': ['kernelapp.py', 'test_kernelmanager.py', 'kernelspec.py', 'session.py'], 'execution_path_count': 8, 'function_id_to_name_file': {'247': 'initialize(kernelapp.py)', '585': 'config(test_kernelmanager.py)', '262': 'install_native_kernel_spec(kernelspec.py)', '276': 'install_native_kernel_spec(kernelspec.py)', '265': 'to_json(kernelspec.py)', '264': 'to_dict(kernelspec.py)', '449': 'test_msg2obj(session.py)', '440': 'Message(session.py)', '453': '__init__(session.py)', '470': '_signature_scheme_changed(session.py)', '465': '_new_auth(session.py)', '463': '_key_default(session.py)', '447': 'new_id_bytes(session.py)', '462': '_key_changed(session.py)'}}, {'key': 89, 'parent': 2571, 'tfidf_word': 'EP: 89, Name: shutdown_all &rarr; remove_kernel', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 90, 'parent': 2571, 'tfidf_word': 'EP: 90, Name: shutdown_all &rarr; list_kernel_ids', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2420, 'parent': 2422, 'tfidf_word': 'close hander handle handler sub ', 'tfidf_method': 'Handler handle SubHander close ', 'lda_word': ' handle,close,hander,handler,sub,', 'lda_method': ' handle,close,subhander,handler,', 'lsi_word': ' hander,handler,sub,close,handle,', 'lsi_method': ' close,handle,handler,subhander,', 'spm_method': ' ', 'text_summary': '', 'files_count': 2, 'files': ['forward.py', 'threaded.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'492': 'handle(forward.py)', '730': 'close(threaded.py)', '493': 'SubHander(forward.py)', '490': 'Handler(forward.py)'}}, {'key': 2421, 'parent': 2422, 'tfidf_word': 'handle close send connection file kernel path real spec test ', 'tfidf_method': 'handle close send close KernelSpec test_connection_file_real_path close close send ', 'lda_word': ' connection,real,kernel,test,spec,', 'lda_method': ' handle,send,close,test_connection_file_real_path,kernelspec,', 'lsi_word': ' handle,close,send,connection,kernel,', 'lsi_method': ' handle,close,send,kernelspec,test_connection_file_real_path,', 'spm_method': ' ', 'text_summary': '', 'files_count': 5, 'files': ['test_manager.py', 'kernelspec.py', 'forward.py', 'threaded.py', 'channels.py'], 'execution_path_count': 7, 'function_id_to_name_file': {'635': 'test_connection_file_real_path(test_manager.py)', '253': 'KernelSpec(kernelspec.py)', '492': 'handle(forward.py)', '718': 'close(threaded.py)', '132': 'close(channels.py)', '114': 'send(channels.py)', '88': 'send(channels.py)', '83': 'close(channels.py)', '109': 'close(channels.py)'}}, {'key': 1355, 'parent': 2423, 'tfidf_word': 'EP: 1355, Name: test_date_default &rarr; utcnow', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1357, 'parent': 2423, 'tfidf_word': 'EP: 1357, Name: test_date_default &rarr; date_default &rarr; _ensure_tzinfo', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2425, 'parent': 2432, 'tfidf_word': 'execute kernel kspec parallel start templated thread transport test env ', 'tfidf_method': 'transport _env_test_body test_templated_kspec_env execute test_start_parallel_thread_kernels ', 'lda_word': ' test,env,templated,body,execute,', 'lda_method': ' transport,test_start_parallel_thread_kernels,test_templated_kspec_env,execute,env_test_body,', 'lsi_word': ' test,env,execute,kspec,templated,', 'lsi_method': ' env_test_body,execute,test_templated_kspec_env,transport,test_start_parallel_thread_kernels,', 'spm_method': ' ', 'text_summary': 'Empty', 'files_count': 1, 'files': ['test_kernelmanager.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'606': 'test_templated_kspec_env(test_kernelmanager.py)', '599': '_env_test_body(test_kernelmanager.py)', '607': 'execute(test_kernelmanager.py)', '612': 'test_start_parallel_thread_kernels(test_kernelmanager.py)', '591': 'transport(test_kernelmanager.py)'}}, {'key': 2431, 'parent': 2432, 'tfidf_word': 'test execute kernel signal start stop subprocesses env ', 'tfidf_method': 'env test_signal_kernel_subprocesses execute test_env start stop ', 'lda_word': ' env,test,start,stop,subprocesses,', 'lda_method': ' test_env,test_signal_kernel_subprocesses,execute,env,start,', 'lsi_word': ' env,test,start,stop,execute,', 'lsi_method': ' env,start,test_env,stop,execute,', 'spm_method': ' ', 'text_summary': '', 'files_count': 2, 'files': ['test_kernelmanager.py', 'utils.py'], 'execution_path_count': 4, 'function_id_to_name_file': {'604': 'test_signal_kernel_subprocesses(test_kernelmanager.py)', '608': 'execute(test_kernelmanager.py)', '586': 'env(test_kernelmanager.py)', '712': 'stop(utils.py)', '711': 'start(utils.py)', '705': 'test_env(utils.py)'}}, {'key': 2428, 'parent': 2444, 'tfidf_word': 'install sample test find get spec specs kernel ', 'tfidf_method': '_install_sample_kernel test_find_kernel_specs test_get_kernel_spec ', 'lda_word': ' kernel,install,sample,test,get,', 'lda_method': ' install_sample_kernel,test_get_kernel_spec,test_find_kernel_specs,', 'lsi_word': ' kernel,install,sample,test,get,', 'lsi_method': ' install_sample_kernel,test_get_kernel_spec,test_find_kernel_specs,', 'spm_method': ' ', 'text_summary': '', 'files_count': 1, 'files': ['test_kernelspec.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'622': 'test_find_kernel_specs(test_kernelspec.py)', '617': '_install_sample_kernel(test_kernelspec.py)', '623': 'test_get_kernel_spec(test_kernelspec.py)'}}, {'key': 2443, 'parent': 2444, 'tfidf_word': 'tcp localhost install sample env down stop tear lifecycle cinfo ', 'tfidf_method': 'tearDown _run_cinfo test_ipc_cinfo test_ipc_lifecycle test_start_sequence_ipc_kernels test_start_sequence_tcp_kernels test_tcp_cinfo test_env start stop ', 'lda_word': ' lifecycle,test,ipc,tcp,cinfo,', 'lda_method': ' test_ipc_cinfo,run_cinfo,test_tcp_cinfo,localhost,run_lifecycle,', 'lsi_word': ' test,lifecycle,run,ipc,kernel,', 'lsi_method': ' run_lifecycle,setup,test_start_sequence_tcp_kernels,test_start_sequence_ipc_kernels,test_ipc_lifecycle,', 'spm_method': ' ', 'text_summary': 'Stop the kernel polling. Start the polling of the kernel.', 'files_count': 4, 'files': ['test_kernelspec.py', 'utils.py', 'test_multikernelmanager.py', 'localinterfaces.py'], 'execution_path_count': 9, 'function_id_to_name_file': {'619': 'tearDown(test_kernelspec.py)', '712': 'stop(utils.py)', '618': 'setUp(test_kernelspec.py)', '617': '_install_sample_kernel(test_kernelspec.py)', '711': 'start(utils.py)', '705': 'test_env(utils.py)', '649': 'test_start_sequence_ipc_kernels(test_multikernelmanager.py)', '641': '_run_lifecycle(test_multikernelmanager.py)', '650': 'test_start_sequence_tcp_kernels(test_multikernelmanager.py)', '644': 'test_ipc_cinfo(test_multikernelmanager.py)', '640': '_run_cinfo(test_multikernelmanager.py)', '651': 'test_tcp_cinfo(test_multikernelmanager.py)', '315': 'localhost(localinterfaces.py)', '645': 'test_ipc_lifecycle(test_multikernelmanager.py)'}}, {'key': 1105, 'parent': 2454, 'tfidf_word': 'EP: 1105, Name: test_find_connection_file_relative &rarr; find_connection_file', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1106, 'parent': 2454, 'tfidf_word': 'EP: 1106, Name: test_find_connection_file_abspath &rarr; find_connection_file', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2471, 'parent': 2493, 'tfidf_word': 'adapt test reply request complete execute info object rename type ', 'tfidf_method': 'adapt test_complete_reply test_complete_request test_execute_reply test_execute_request test_object_info_reply test_object_info_request test_rename_type ', 'lda_word': ' adapt,test,reply,complete,request,', 'lda_method': ' adapt,test_complete_request,test_execute_reply,test_complete_reply,test_object_info_reply,', 'lsi_word': ' test,adapt,request,reply,object,', 'lsi_method': ' adapt,test_complete_request,test_object_info_request,test_execute_reply,test_execute_request,', 'spm_method': ' ', 'text_summary': '', 'files_count': 1, 'files': ['test_adapter.py'], 'execution_path_count': 7, 'function_id_to_name_file': {'529': 'test_object_info_reply(test_adapter.py)', '517': 'adapt(test_adapter.py)', '531': 'test_object_info_request(test_adapter.py)', '521': 'test_complete_reply(test_adapter.py)', '522': 'test_complete_request(test_adapter.py)', '524': 'test_execute_reply(test_adapter.py)', '532': 'test_rename_type(test_adapter.py)', '525': 'test_execute_request(test_adapter.py)'}}, {'key': 2492, 'parent': 2493, 'tfidf_word': 'adapter case default set up v4to v5 adapt line code ', 'tfidf_method': 'Session adapt code_to_line AdapterTest V4toV5TestCase test_code_to_line_no_code test_default_version setUp test_no_adapt test_same_version ', 'lda_word': ' test,adapt,session,version,set,', 'lda_method': ' code_to_line,adaptertest,v4tov5testcase,test_code_to_line_no_code,session,', 'lsi_word': ' code,test,line,adapt,version,', 'lsi_method': ' adapt,test_no_adapt,test_same_version,session,v4tov5testcase,', 'spm_method': ' ', 'text_summary': 'Empty', 'files_count': 3, 'files': ['test_adapter.py', 'session.py', 'adapter.py'], 'execution_path_count': 6, 'function_id_to_name_file': {'528': 'test_no_adapt(test_adapter.py)', '517': 'adapt(test_adapter.py)', '533': 'test_same_version(test_adapter.py)', '513': 'V4toV5TestCase(test_adapter.py)', '512': 'AdapterTest(test_adapter.py)', '519': 'setUp(test_adapter.py)', '441': 'Session(session.py)', '516': 'test_default_version(test_adapter.py)', '515': 'test_code_to_line_no_code(test_adapter.py)', '51': 'code_to_line(adapter.py)'}}, {'key': 882, 'parent': 2483, 'tfidf_word': 'EP: 882, Name: test_kernelapp_lifecycle &rarr; _launch', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2482, 'parent': 2483, 'tfidf_word': 'test session datetimes feed identity msgpack sign clone raw send ', 'tfidf_method': 'Session test_clone test_send_raw clone feed_identities send_raw sign test_datetimes_msgpack ', 'lda_word': ' test,clone,raw,send,session,', 'lda_method': ' test_clone,session,test_send_raw,feed_identities,clone,', 'lsi_word': ' send,raw,test,sign,clone,', 'lsi_method': ' test_send_raw,sign,send_raw,feed_identities,session,', 'spm_method': ' ', 'text_summary': 'Send a raw message via ident path.', 'files_count': 2, 'files': ['test_session.py', 'session.py'], 'execution_path_count': 5, 'function_id_to_name_file': {'686': 'test_clone(test_session.py)', '441': 'Session(session.py)', '473': 'clone(session.py)', '695': 'test_send_raw(test_session.py)', '481': 'send_raw(session.py)', '483': 'sign(session.py)', '689': 'test_datetimes_msgpack(test_session.py)', '475': 'feed_identities(session.py)'}}, {'key': 829, 'parent': 2504, 'tfidf_word': 'EP: 829, Name: test_bad_unpack &rarr; Session', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 833, 'parent': 2504, 'tfidf_word': 'EP: 833, Name: test_bad_packer &rarr; Session', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 723, 'parent': 2536, 'tfidf_word': 'EP: 723, Name: test_shutdown &rarr; _check_reply', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2535, 'parent': 2536, 'tfidf_word': 'env socket start stop such complete comm close ioloop zmq ', 'tfidf_method': 'test_comm_info NoSuchKernel hb_channel wrapped wait_for_ready reqrep wrapped wait_for_ready test_complete reqrep ', 'lda_word': ' kernel,client,set,wrap,reqrep,', 'lda_method': ' control_channel,blockingkernelclient,ioloop,hbchannel,setup,', 'lsi_word': ' reply,kernel,test,check,info,', 'lsi_method': ' check_reply,test_inspect,test_comm_info,test_history,test_complete,', 'spm_method': ' ', 'text_summary': 'Get the hb channel object for this kernel. Start the polling of the kernel.', 'files_count': 7, 'files': ['test_client.py', 'utils.py', 'kernelspec.py', 'client.py', 'channels.py', 'connect.py', 'threaded.py'], 'execution_path_count': 20, 'function_id_to_name_file': {'550': 'test_comm_info(test_client.py)', '548': '_check_reply(test_client.py)', '555': 'test_kernel_info(test_client.py)', '551': 'test_complete(test_client.py)', '554': 'test_inspect(test_client.py)', '553': 'test_history(test_client.py)', '549': 'setUp(test_client.py)', '712': 'stop(utils.py)', '255': 'NoSuchKernel(kernelspec.py)', '711': 'start(utils.py)', '705': 'test_env(utils.py)', '116': 'BlockingKernelClient(client.py)', '117': 'reqrep(client.py)', '124': 'wrapped(client.py)', '123': 'wait_for_ready(client.py)', '150': '_handle_kernel_info_reply(client.py)', '125': 'HBChannel(channels.py)', '104': 'wait_for_ready(client.py)', '102': 'hb_channel(client.py)', '196': '_make_url(connect.py)', '90': 'AsyncKernelClient(client.py)', '91': 'reqrep(client.py)', '105': 'wrapped(client.py)', '80': 'ZMQSocketChannel(channels.py)', '83': 'close(channels.py)', '154': 'control_channel(client.py)', '723': 'ioloop(threaded.py)', '160': 'hb_channel(client.py)'}}, {'key': 125, 'parent': 2579, 'tfidf_word': 'EP: 125, Name: initialize &rarr; config', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2578, 'parent': 2579, 'tfidf_word': 'default message byte scheme signature dict install spec native kernel ', 'tfidf_method': 'install_native_kernel_spec to_dict to_json install_native_kernel_spec Message new_id_bytes __init__ _key_changed _key_default _signature_scheme_changed ', 'lda_word': ' init,json,msg2obj,test,dict,', 'lda_method': ' install_native_kernel_spec,key_changed,new_auth,test_msg2obj,to_dict,', 'lsi_word': ' install,spec,native,kernel,new,', 'lsi_method': ' install_native_kernel_spec,test_msg2obj,init,to_json,message,', 'spm_method': ' ', 'text_summary': '', 'files_count': 2, 'files': ['kernelspec.py', 'session.py'], 'execution_path_count': 7, 'function_id_to_name_file': {'262': 'install_native_kernel_spec(kernelspec.py)', '276': 'install_native_kernel_spec(kernelspec.py)', '265': 'to_json(kernelspec.py)', '264': 'to_dict(kernelspec.py)', '449': 'test_msg2obj(session.py)', '440': 'Message(session.py)', '453': '__init__(session.py)', '470': '_signature_scheme_changed(session.py)', '465': '_new_auth(session.py)', '463': '_key_default(session.py)', '447': 'new_id_bytes(session.py)', '462': '_key_changed(session.py)'}}, {'key': 1401, 'parent': 2420, 'tfidf_word': 'EP: 1401, Name: handle &rarr; close', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1403, 'parent': 2420, 'tfidf_word': 'EP: 1403, Name: SubHander &rarr; Handler', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1358, 'parent': 2421, 'tfidf_word': 'EP: 1358, Name: test_connection_file_real_path &rarr; KernelSpec', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2419, 'parent': 2421, 'tfidf_word': 'handle close send ', 'tfidf_method': 'handle close send close close close send ', 'lda_word': ' close,handle,send,', 'lda_method': ' handle,close,send,', 'lsi_word': ' handle,close,send,', 'lsi_method': ' handle,close,send,', 'spm_method': ' ', 'text_summary': '', 'files_count': 3, 'files': ['forward.py', 'threaded.py', 'channels.py'], 'execution_path_count': 6, 'function_id_to_name_file': {'492': 'handle(forward.py)', '718': 'close(threaded.py)', '132': 'close(channels.py)', '114': 'send(channels.py)', '88': 'send(channels.py)', '83': 'close(channels.py)', '109': 'close(channels.py)'}}, {'key': 1338, 'parent': 2425, 'tfidf_word': 'EP: 1338, Name: test_templated_kspec_env &rarr; _env_test_body &rarr; execute', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1341, 'parent': 2425, 'tfidf_word': 'EP: 1341, Name: test_start_parallel_thread_kernels &rarr; transport', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1337, 'parent': 2431, 'tfidf_word': 'EP: 1337, Name: test_signal_kernel_subprocesses &rarr; execute', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2430, 'parent': 2431, 'tfidf_word': 'env start stop test ', 'tfidf_method': 'env test_env start stop ', 'lda_word': ' env,stop,start,test,', 'lda_method': ' test_env,env,stop,start,', 'lsi_word': ' env,test,stop,start,', 'lsi_method': ' env,start,stop,test_env,', 'spm_method': ' ', 'text_summary': '', 'files_count': 2, 'files': ['test_kernelmanager.py', 'utils.py'], 'execution_path_count': 3, 'function_id_to_name_file': {'586': 'env(test_kernelmanager.py)', '712': 'stop(utils.py)', '711': 'start(utils.py)', '705': 'test_env(utils.py)'}}, {'key': 1219, 'parent': 2428, 'tfidf_word': 'EP: 1219, Name: test_find_kernel_specs &rarr; _install_sample_kernel', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1223, 'parent': 2428, 'tfidf_word': 'EP: 1223, Name: test_get_kernel_spec &rarr; _install_sample_kernel', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1218, 'parent': 2443, 'tfidf_word': 'EP: 1218, Name: tearDown &rarr; stop', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2442, 'parent': 2443, 'tfidf_word': 'start up sequence tcp env install localhost sample lifecycle cinfo ', 'tfidf_method': 'localhost _install_sample_kernel _run_cinfo test_ipc_cinfo test_ipc_lifecycle test_start_sequence_ipc_kernels test_start_sequence_tcp_kernels test_tcp_cinfo test_env start ', 'lda_word': ' test,set,env,run,start,', 'lda_method': ' setup,run_lifecycle,start,localhost,test_start_sequence_ipc_kernels,', 'lsi_word': ' test,lifecycle,run,ipc,kernel,', 'lsi_method': ' run_lifecycle,test_start_sequence_tcp_kernels,test_start_sequence_ipc_kernels,test_ipc_lifecycle,test_env,', 'spm_method': ' ', 'text_summary': 'return ip for localhost (almost always 127.0.0.1)   ', 'files_count': 4, 'files': ['test_kernelspec.py', 'utils.py', 'test_multikernelmanager.py', 'localinterfaces.py'], 'execution_path_count': 8, 'function_id_to_name_file': {'618': 'setUp(test_kernelspec.py)', '617': '_install_sample_kernel(test_kernelspec.py)', '711': 'start(utils.py)', '705': 'test_env(utils.py)', '649': 'test_start_sequence_ipc_kernels(test_multikernelmanager.py)', '641': '_run_lifecycle(test_multikernelmanager.py)', '650': 'test_start_sequence_tcp_kernels(test_multikernelmanager.py)', '644': 'test_ipc_cinfo(test_multikernelmanager.py)', '640': '_run_cinfo(test_multikernelmanager.py)', '651': 'test_tcp_cinfo(test_multikernelmanager.py)', '315': 'localhost(localinterfaces.py)', '645': 'test_ipc_lifecycle(test_multikernelmanager.py)'}}, {'key': 959, 'parent': 2471, 'tfidf_word': 'EP: 959, Name: test_object_info_reply &rarr; adapt', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2470, 'parent': 2471, 'tfidf_word': 'adapt test request complete execute reply info object rename type ', 'tfidf_method': 'adapt test_complete_reply test_complete_request test_execute_reply test_execute_request test_object_info_request test_rename_type ', 'lda_word': ' request,adapt,test,object,info,', 'lda_method': ' adapt,test_execute_reply,test_execute_request,test_complete_request,test_rename_type,', 'lsi_word': ' test,adapt,request,complete,execute,', 'lsi_method': ' adapt,test_rename_type,test_complete_reply,test_object_info_request,test_complete_request,', 'spm_method': ' ', 'text_summary': '', 'files_count': 1, 'files': ['test_adapter.py'], 'execution_path_count': 6, 'function_id_to_name_file': {'531': 'test_object_info_request(test_adapter.py)', '517': 'adapt(test_adapter.py)', '521': 'test_complete_reply(test_adapter.py)', '522': 'test_complete_request(test_adapter.py)', '524': 'test_execute_reply(test_adapter.py)', '532': 'test_rename_type(test_adapter.py)', '525': 'test_execute_request(test_adapter.py)'}}, {'key': 920, 'parent': 2492, 'tfidf_word': 'EP: 920, Name: test_no_adapt &rarr; adapt', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2491, 'parent': 2492, 'tfidf_word': 'adapt adapter case default set up v4to v5 line code ', 'tfidf_method': 'Session code_to_line AdapterTest V4toV5TestCase test_code_to_line_no_code test_default_version adapt setUp test_same_version ', 'lda_word': ' code,line,test,set,session,', 'lda_method': ' test_same_version,adapt,session,adaptertest,v4tov5testcase,', 'lsi_word': ' code,test,line,adapter,case,', 'lsi_method': ' session,setup,test_default_version,test_same_version,adaptertest,', 'spm_method': ' ', 'text_summary': 'Empty', 'files_count': 3, 'files': ['test_adapter.py', 'session.py', 'adapter.py'], 'execution_path_count': 5, 'function_id_to_name_file': {'533': 'test_same_version(test_adapter.py)', '517': 'adapt(test_adapter.py)', '513': 'V4toV5TestCase(test_adapter.py)', '512': 'AdapterTest(test_adapter.py)', '519': 'setUp(test_adapter.py)', '441': 'Session(session.py)', '516': 'test_default_version(test_adapter.py)', '515': 'test_code_to_line_no_code(test_adapter.py)', '51': 'code_to_line(adapter.py)'}}, {'key': 874, 'parent': 2482, 'tfidf_word': 'EP: 874, Name: test_clone &rarr; Session', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2481, 'parent': 2482, 'tfidf_word': 'test datetimes feed identity msgpack session sign raw send clone ', 'tfidf_method': 'test_send_raw Session clone feed_identities send_raw sign test_clone test_datetimes_msgpack ', 'lda_word': ' test,clone,raw,send,msgpack,', 'lda_method': ' test_send_raw,sign,send_raw,clone,test_clone,', 'lsi_word': ' raw,send,test,sign,feed,', 'lsi_method': ' test_send_raw,sign,send_raw,feed_identities,session,', 'spm_method': ' ', 'text_summary': 'Split the identities from the rest of the message.', 'files_count': 2, 'files': ['test_session.py', 'session.py'], 'execution_path_count': 4, 'function_id_to_name_file': {'686': 'test_clone(test_session.py)', '473': 'clone(session.py)', '695': 'test_send_raw(test_session.py)', '481': 'send_raw(session.py)', '483': 'sign(session.py)', '689': 'test_datetimes_msgpack(test_session.py)', '441': 'Session(session.py)', '475': 'feed_identities(session.py)'}}, {'key': 2523, 'parent': 2535, 'tfidf_word': 'kernel set up comm complete history inspect no stop such ', 'tfidf_method': '_check_reply setUp NoSuchKernel test_comm_info test_complete test_history test_inspect test_kernel_info stop ', 'lda_word': ' check,reply,test,inspect,set,', 'lda_method': ' check_reply,test_inspect,setup,test_complete,test_comm_info,', 'lsi_word': ' reply,test,check,info,kernel,', 'lsi_method': ' check_reply,test_kernel_info,test_comm_info,test_history,test_inspect,', 'spm_method': ' ', 'text_summary': 'Empty', 'files_count': 3, 'files': ['test_client.py', 'utils.py', 'kernelspec.py'], 'execution_path_count': 7, 'function_id_to_name_file': {'550': 'test_comm_info(test_client.py)', '548': '_check_reply(test_client.py)', '555': 'test_kernel_info(test_client.py)', '551': 'test_complete(test_client.py)', '554': 'test_inspect(test_client.py)', '553': 'test_history(test_client.py)', '549': 'setUp(test_client.py)', '712': 'stop(utils.py)', '255': 'NoSuchKernel(kernelspec.py)'}}, {'key': 2534, 'parent': 2535, 'tfidf_word': 'control blocking wrap ioloop env socket start test close zmq ', 'tfidf_method': 'start test_env hb_channel wrapped wait_for_ready reqrep wrapped wait_for_ready hb_channel reqrep ', 'lda_word': ' kernel,ready,reply,handle,info,', 'lda_method': ' setup,control_channel,start,ioloop,make_url,', 'lsi_word': ' kernel,channel,client,hb,url,', 'lsi_method': ' wrap,reqrep,asynckernelclient,blockingkernelclient,hbchannel,', 'spm_method': ' ', 'text_summary': 'Get the hb channel object for this kernel. Start the polling of the kernel.', 'files_count': 6, 'files': ['test_client.py', 'utils.py', 'client.py', 'channels.py', 'connect.py', 'threaded.py'], 'execution_path_count': 13, 'function_id_to_name_file': {'549': 'setUp(test_client.py)', '711': 'start(utils.py)', '705': 'test_env(utils.py)', '116': 'BlockingKernelClient(client.py)', '117': 'reqrep(client.py)', '124': 'wrapped(client.py)', '123': 'wait_for_ready(client.py)', '150': '_handle_kernel_info_reply(client.py)', '125': 'HBChannel(channels.py)', '104': 'wait_for_ready(client.py)', '102': 'hb_channel(client.py)', '196': '_make_url(connect.py)', '90': 'AsyncKernelClient(client.py)', '91': 'reqrep(client.py)', '105': 'wrapped(client.py)', '80': 'ZMQSocketChannel(channels.py)', '83': 'close(channels.py)', '154': 'control_channel(client.py)', '723': 'ioloop(threaded.py)', '160': 'hb_channel(client.py)'}}, {'key': 123, 'parent': 2578, 'tfidf_word': 'EP: 123, Name: install_native_kernel_spec &rarr; install_native_kernel_spec', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2577, 'parent': 2578, 'tfidf_word': 'test byte default dict id init json message scheme signature ', 'tfidf_method': 'test_msg2obj _new_auth to_dict to_json Message new_id_bytes __init__ _key_changed _key_default _signature_scheme_changed ', 'lda_word': ' byte,default,message,key,new,', 'lda_method': ' new_auth,signature_scheme_changed,test_msg2obj,to_dict,message,', 'lsi_word': ' new,change,auth,key,scheme,', 'lsi_method': ' new_auth,test_msg2obj,signature_scheme_changed,key_changed,init,', 'spm_method': ' ', 'text_summary': '', 'files_count': 2, 'files': ['kernelspec.py', 'session.py'], 'execution_path_count': 6, 'function_id_to_name_file': {'265': 'to_json(kernelspec.py)', '264': 'to_dict(kernelspec.py)', '449': 'test_msg2obj(session.py)', '440': 'Message(session.py)', '453': '__init__(session.py)', '470': '_signature_scheme_changed(session.py)', '465': '_new_auth(session.py)', '463': '_key_default(session.py)', '447': 'new_id_bytes(session.py)', '462': '_key_changed(session.py)'}}, {'key': 1395, 'parent': 2419, 'tfidf_word': 'EP: 1395, Name: handle &rarr; close', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2418, 'parent': 2419, 'tfidf_word': 'handle close send ', 'tfidf_method': 'handle close send close close send ', 'lda_word': ' handle,close,send,', 'lda_method': ' close,handle,send,', 'lsi_word': ' handle,close,send,', 'lsi_method': ' handle,close,send,', 'spm_method': ' ', 'text_summary': '', 'files_count': 2, 'files': ['forward.py', 'channels.py'], 'execution_path_count': 5, 'function_id_to_name_file': {'492': 'handle(forward.py)', '132': 'close(channels.py)', '114': 'send(channels.py)', '88': 'send(channels.py)', '83': 'close(channels.py)', '109': 'close(channels.py)'}}, {'key': 1336, 'parent': 2430, 'tfidf_word': 'EP: 1336, Name: env &rarr; stop', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2429, 'parent': 2430, 'tfidf_word': 'start test env ', 'tfidf_method': 'env test_env start ', 'lda_word': ' env,start,test,', 'lda_method': ' env,start,test_env,', 'lsi_word': ' env,test,start,', 'lsi_method': ' env,start,test_env,', 'spm_method': ' ', 'text_summary': 'Empty', 'files_count': 2, 'files': ['test_kernelmanager.py', 'utils.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'586': 'env(test_kernelmanager.py)', '711': 'start(utils.py)', '705': 'test_env(utils.py)'}}, {'key': 1217, 'parent': 2442, 'tfidf_word': 'EP: 1217, Name: setUp &rarr; _install_sample_kernel', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2441, 'parent': 2442, 'tfidf_word': 'start kernel sequence set tcp up env localhost lifecycle cinfo ', 'tfidf_method': 'setUp localhost _run_cinfo test_ipc_cinfo test_ipc_lifecycle test_start_sequence_ipc_kernels test_start_sequence_tcp_kernels test_tcp_cinfo test_env start ', 'lda_word': ' cinfo,ipc,test,run,set,', 'lda_method': ' test_tcp_cinfo,localhost,setup,run_lifecycle,test_start_sequence_tcp_kernels,', 'lsi_word': ' test,lifecycle,run,ipc,start,', 'lsi_method': ' run_lifecycle,test_start_sequence_ipc_kernels,test_start_sequence_tcp_kernels,test_ipc_lifecycle,test_env,', 'spm_method': ' ', 'text_summary': '', 'files_count': 4, 'files': ['test_kernelspec.py', 'utils.py', 'test_multikernelmanager.py', 'localinterfaces.py'], 'execution_path_count': 7, 'function_id_to_name_file': {'618': 'setUp(test_kernelspec.py)', '711': 'start(utils.py)', '705': 'test_env(utils.py)', '649': 'test_start_sequence_ipc_kernels(test_multikernelmanager.py)', '641': '_run_lifecycle(test_multikernelmanager.py)', '650': 'test_start_sequence_tcp_kernels(test_multikernelmanager.py)', '644': 'test_ipc_cinfo(test_multikernelmanager.py)', '640': '_run_cinfo(test_multikernelmanager.py)', '651': 'test_tcp_cinfo(test_multikernelmanager.py)', '315': 'localhost(localinterfaces.py)', '645': 'test_ipc_lifecycle(test_multikernelmanager.py)'}}, {'key': 954, 'parent': 2470, 'tfidf_word': 'EP: 954, Name: test_object_info_request &rarr; adapt', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2469, 'parent': 2470, 'tfidf_word': 'adapt test complete execute reply request rename type ', 'tfidf_method': 'adapt test_complete_reply test_complete_request test_execute_reply test_execute_request test_rename_type ', 'lda_word': ' test,reply,adapt,execute,complete,', 'lda_method': ' adapt,test_execute_reply,test_execute_request,test_rename_type,test_complete_request,', 'lsi_word': ' test,adapt,execute,request,reply,', 'lsi_method': ' adapt,test_complete_request,test_execute_reply,test_rename_type,test_execute_request,', 'spm_method': ' ', 'text_summary': '', 'files_count': 1, 'files': ['test_adapter.py'], 'execution_path_count': 5, 'function_id_to_name_file': {'521': 'test_complete_reply(test_adapter.py)', '517': 'adapt(test_adapter.py)', '522': 'test_complete_request(test_adapter.py)', '524': 'test_execute_reply(test_adapter.py)', '532': 'test_rename_type(test_adapter.py)', '525': 'test_execute_request(test_adapter.py)'}}, {'key': 919, 'parent': 2491, 'tfidf_word': 'EP: 919, Name: test_same_version &rarr; adapt', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2490, 'parent': 2491, 'tfidf_word': 'case default set up v4to v5 version test line code ', 'tfidf_method': 'Session code_to_line AdapterTest V4toV5TestCase test_code_to_line_no_code test_default_version setUp ', 'lda_word': ' session,test,code,set,line,', 'lda_method': ' session,test_default_version,v4tov5testcase,setup,code_to_line,', 'lsi_word': ' code,line,test,adapter,v5,', 'lsi_method': ' session,setup,test_default_version,test_code_to_line_no_code,code_to_line,', 'spm_method': ' ', 'text_summary': 'Empty', 'files_count': 3, 'files': ['test_adapter.py', 'session.py', 'adapter.py'], 'execution_path_count': 4, 'function_id_to_name_file': {'513': 'V4toV5TestCase(test_adapter.py)', '512': 'AdapterTest(test_adapter.py)', '519': 'setUp(test_adapter.py)', '441': 'Session(session.py)', '516': 'test_default_version(test_adapter.py)', '515': 'test_code_to_line_no_code(test_adapter.py)', '51': 'code_to_line(adapter.py)'}}, {'key': 873, 'parent': 2481, 'tfidf_word': 'EP: 873, Name: test_clone &rarr; clone', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2480, 'parent': 2481, 'tfidf_word': 'test datetimes feed identity msgpack session sign raw send ', 'tfidf_method': 'test_send_raw Session feed_identities send_raw sign test_datetimes_msgpack ', 'lda_word': ' test,raw,send,msgpack,datetimes,', 'lda_method': ' test_send_raw,feed_identities,session,test_datetimes_msgpack,sign,', 'lsi_word': ' raw,send,test,sign,feed,', 'lsi_method': ' test_send_raw,sign,send_raw,feed_identities,session,', 'spm_method': ' ', 'text_summary': 'Send a raw message via ident path.', 'files_count': 2, 'files': ['test_session.py', 'session.py'], 'execution_path_count': 3, 'function_id_to_name_file': {'695': 'test_send_raw(test_session.py)', '481': 'send_raw(session.py)', '483': 'sign(session.py)', '689': 'test_datetimes_msgpack(test_session.py)', '441': 'Session(session.py)', '475': 'feed_identities(session.py)'}}, {'key': 722, 'parent': 2523, 'tfidf_word': 'EP: 722, Name: test_comm_info &rarr; _check_reply', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2522, 'parent': 2523, 'tfidf_word': 'kernel set up complete history info inspect no stop such ', 'tfidf_method': '_check_reply setUp NoSuchKernel test_complete test_history test_inspect test_kernel_info stop ', 'lda_word': ' set,test,reply,check,kernel,', 'lda_method': ' check_reply,test_complete,stop,test_kernel_info,setup,', 'lsi_word': ' reply,test,check,kernel,info,', 'lsi_method': ' check_reply,test_history,test_inspect,test_kernel_info,test_complete,', 'spm_method': ' ', 'text_summary': 'Empty', 'files_count': 3, 'files': ['test_client.py', 'utils.py', 'kernelspec.py'], 'execution_path_count': 6, 'function_id_to_name_file': {'555': 'test_kernel_info(test_client.py)', '548': '_check_reply(test_client.py)', '551': 'test_complete(test_client.py)', '554': 'test_inspect(test_client.py)', '553': 'test_history(test_client.py)', '549': 'setUp(test_client.py)', '712': 'stop(utils.py)', '255': 'NoSuchKernel(kernelspec.py)'}}, {'key': 705, 'parent': 2534, 'tfidf_word': 'EP: 705, Name: setUp &rarr; start', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2533, 'parent': 2534, 'tfidf_word': 'control blocking env set socket test up close ioloop zmq ', 'tfidf_method': 'test_env setUp hb_channel wrapped wait_for_ready reqrep wrapped wait_for_ready hb_channel reqrep ', 'lda_word': ' kernel,info,ready,handle,reply,', 'lda_method': ' setup,test_env,close,zmqsocketchannel,make_url,', 'lsi_word': ' kernel,channel,client,hb,make,', 'lsi_method': ' reqrep,wrap,blockingkernelclient,asynckernelclient,hbchannel,', 'spm_method': ' ', 'text_summary': 'Get the hb channel object for this kernel. Waits for a response when a client is blocked.', 'files_count': 6, 'files': ['test_client.py', 'utils.py', 'client.py', 'channels.py', 'connect.py', 'threaded.py'], 'execution_path_count': 12, 'function_id_to_name_file': {'549': 'setUp(test_client.py)', '705': 'test_env(utils.py)', '116': 'BlockingKernelClient(client.py)', '117': 'reqrep(client.py)', '124': 'wrapped(client.py)', '123': 'wait_for_ready(client.py)', '150': '_handle_kernel_info_reply(client.py)', '125': 'HBChannel(channels.py)', '104': 'wait_for_ready(client.py)', '102': 'hb_channel(client.py)', '196': '_make_url(connect.py)', '90': 'AsyncKernelClient(client.py)', '91': 'reqrep(client.py)', '105': 'wrapped(client.py)', '80': 'ZMQSocketChannel(channels.py)', '83': 'close(channels.py)', '154': 'control_channel(client.py)', '723': 'ioloop(threaded.py)', '160': 'hb_channel(client.py)'}}, {'key': 118, 'parent': 2577, 'tfidf_word': 'EP: 118, Name: to_json &rarr; to_dict', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2576, 'parent': 2577, 'tfidf_word': 'key msg2obj test byte default id init message scheme signature ', 'tfidf_method': 'test_msg2obj _new_auth Message new_id_bytes __init__ _key_changed _key_default _signature_scheme_changed ', 'lda_word': ' msg2obj,test,key,auth,new,', 'lda_method': ' test_msg2obj,message,init,key_changed,new_auth,', 'lsi_word': ' new,auth,change,key,scheme,', 'lsi_method': ' new_auth,key_changed,signature_scheme_changed,new_id_bytes,key_default,', 'spm_method': ' ', 'text_summary': 'Empty', 'files_count': 1, 'files': ['session.py'], 'execution_path_count': 5, 'function_id_to_name_file': {'449': 'test_msg2obj(session.py)', '440': 'Message(session.py)', '453': '__init__(session.py)', '470': '_signature_scheme_changed(session.py)', '465': '_new_auth(session.py)', '463': '_key_default(session.py)', '447': 'new_id_bytes(session.py)', '462': '_key_changed(session.py)'}}, {'key': 1394, 'parent': 2418, 'tfidf_word': 'EP: 1394, Name: handle &rarr; close', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2417, 'parent': 2418, 'tfidf_word': 'handle close send ', 'tfidf_method': 'handle close send close send ', 'lda_word': ' handle,send,close,', 'lda_method': ' send,handle,close,', 'lsi_word': ' handle,close,send,', 'lsi_method': ' handle,send,close,', 'spm_method': ' ', 'text_summary': '', 'files_count': 2, 'files': ['forward.py', 'channels.py'], 'execution_path_count': 4, 'function_id_to_name_file': {'492': 'handle(forward.py)', '114': 'send(channels.py)', '88': 'send(channels.py)', '83': 'close(channels.py)', '109': 'close(channels.py)'}}, {'key': 1334, 'parent': 2429, 'tfidf_word': 'EP: 1334, Name: env &rarr; start', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1335, 'parent': 2429, 'tfidf_word': 'EP: 1335, Name: env &rarr; test_env', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1216, 'parent': 2441, 'tfidf_word': 'EP: 1216, Name: setUp &rarr; start', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2440, 'parent': 2441, 'tfidf_word': 'kernel sequence start tcp env localhost set up lifecycle cinfo ', 'tfidf_method': '_run_lifecycle localhost setUp _run_cinfo test_ipc_cinfo test_ipc_lifecycle test_start_sequence_ipc_kernels test_start_sequence_tcp_kernels test_tcp_cinfo test_env ', 'lda_word': ' test,localhost,set,tcp,env,', 'lda_method': ' localhost,run_cinfo,test_tcp_cinfo,test_ipc_cinfo,run_lifecycle,', 'lsi_word': ' test,lifecycle,run,ipc,kernel,', 'lsi_method': ' run_lifecycle,test_ipc_lifecycle,test_start_sequence_ipc_kernels,test_start_sequence_tcp_kernels,localhost,', 'spm_method': ' ', 'text_summary': '', 'files_count': 4, 'files': ['test_kernelspec.py', 'utils.py', 'test_multikernelmanager.py', 'localinterfaces.py'], 'execution_path_count': 6, 'function_id_to_name_file': {'618': 'setUp(test_kernelspec.py)', '705': 'test_env(utils.py)', '649': 'test_start_sequence_ipc_kernels(test_multikernelmanager.py)', '641': '_run_lifecycle(test_multikernelmanager.py)', '650': 'test_start_sequence_tcp_kernels(test_multikernelmanager.py)', '644': 'test_ipc_cinfo(test_multikernelmanager.py)', '640': '_run_cinfo(test_multikernelmanager.py)', '651': 'test_tcp_cinfo(test_multikernelmanager.py)', '315': 'localhost(localinterfaces.py)', '645': 'test_ipc_lifecycle(test_multikernelmanager.py)'}}, {'key': 949, 'parent': 2469, 'tfidf_word': 'EP: 949, Name: test_complete_reply &rarr; adapt', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2468, 'parent': 2469, 'tfidf_word': 'adapt test execute request complete rename reply type ', 'tfidf_method': 'adapt test_complete_request test_execute_reply test_execute_request test_rename_type ', 'lda_word': ' adapt,test,rename,type,request,', 'lda_method': ' adapt,test_execute_request,test_execute_reply,test_complete_request,test_rename_type,', 'lsi_word': ' test,adapt,request,execute,complete,', 'lsi_method': ' adapt,test_execute_reply,test_execute_request,test_rename_type,test_complete_request,', 'spm_method': ' ', 'text_summary': '', 'files_count': 1, 'files': ['test_adapter.py'], 'execution_path_count': 4, 'function_id_to_name_file': {'522': 'test_complete_request(test_adapter.py)', '517': 'adapt(test_adapter.py)', '524': 'test_execute_reply(test_adapter.py)', '532': 'test_rename_type(test_adapter.py)', '525': 'test_execute_request(test_adapter.py)'}}, {'key': 914, 'parent': 2490, 'tfidf_word': 'EP: 914, Name: V4toV5TestCase &rarr; AdapterTest', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2489, 'parent': 2490, 'tfidf_word': 'session test default set up version line code ', 'tfidf_method': 'Session code_to_line test_code_to_line_no_code test_default_version setUp ', 'lda_word': ' session,set,test,code,line,', 'lda_method': ' code_to_line,test_code_to_line_no_code,session,setup,test_default_version,', 'lsi_word': ' code,line,test,session,version,', 'lsi_method': ' session,test_default_version,setup,test_code_to_line_no_code,code_to_line,', 'spm_method': ' ', 'text_summary': 'Empty', 'files_count': 3, 'files': ['test_adapter.py', 'session.py', 'adapter.py'], 'execution_path_count': 3, 'function_id_to_name_file': {'519': 'setUp(test_adapter.py)', '441': 'Session(session.py)', '516': 'test_default_version(test_adapter.py)', '515': 'test_code_to_line_no_code(test_adapter.py)', '51': 'code_to_line(adapter.py)'}}, {'key': 872, 'parent': 2480, 'tfidf_word': 'EP: 872, Name: test_send_raw &rarr; send_raw &rarr; sign', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2479, 'parent': 2480, 'tfidf_word': 'test datetimes feed identity msgpack raw send session ', 'tfidf_method': 'Session feed_identities test_datetimes_msgpack test_send_raw ', 'lda_word': ' test,msgpack,datetimes,session,raw,', 'lda_method': ' feed_identities,test_send_raw,test_datetimes_msgpack,session,', 'lsi_word': ' test,identity,raw,send,feed,', 'lsi_method': ' feed_identities,test_send_raw,test_datetimes_msgpack,session,', 'spm_method': ' ', 'text_summary': 'Empty', 'files_count': 2, 'files': ['test_session.py', 'session.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'689': 'test_datetimes_msgpack(test_session.py)', '441': 'Session(session.py)', '695': 'test_send_raw(test_session.py)', '475': 'feed_identities(session.py)'}}, {'key': 721, 'parent': 2522, 'tfidf_word': 'EP: 721, Name: test_kernel_info &rarr; _check_reply', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2521, 'parent': 2522, 'tfidf_word': 'test set up complete history inspect kernel no stop such ', 'tfidf_method': '_check_reply setUp NoSuchKernel test_complete test_history test_inspect stop ', 'lda_word': ' set,check,reply,test,stop,', 'lda_method': ' setup,check_reply,test_complete,test_inspect,nosuchkernel,', 'lsi_word': ' reply,check,test,history,inspect,', 'lsi_method': ' check_reply,test_inspect,test_history,test_complete,stop,', 'spm_method': ' ', 'text_summary': 'Empty', 'files_count': 3, 'files': ['test_client.py', 'utils.py', 'kernelspec.py'], 'execution_path_count': 5, 'function_id_to_name_file': {'551': 'test_complete(test_client.py)', '548': '_check_reply(test_client.py)', '554': 'test_inspect(test_client.py)', '553': 'test_history(test_client.py)', '549': 'setUp(test_client.py)', '712': 'stop(utils.py)', '255': 'NoSuchKernel(kernelspec.py)'}}, {'key': 2517, 'parent': 2533, 'tfidf_word': 'handle info ready reply reqrep set test up wait wrap ', 'tfidf_method': 'BlockingKernelClient reqrep wait_for_ready wrapped _handle_kernel_info_reply setUp test_env ', 'lda_word': ' test,set,env,kernel,ready,', 'lda_method': ' setup,test_env,handle_kernel_info_reply,wait_for_ready,wrap,', 'lsi_word': ' kernel,ready,reply,wait,info,', 'lsi_method': ' wrap,reqrep,blockingkernelclient,wait_for_ready,handle_kernel_info_reply,', 'spm_method': ' ', 'text_summary': '', 'files_count': 3, 'files': ['test_client.py', 'utils.py', 'client.py'], 'execution_path_count': 3, 'function_id_to_name_file': {'549': 'setUp(test_client.py)', '705': 'test_env(utils.py)', '116': 'BlockingKernelClient(client.py)', '117': 'reqrep(client.py)', '124': 'wrapped(client.py)', '123': 'wait_for_ready(client.py)', '150': '_handle_kernel_info_reply(client.py)'}}, {'key': 2532, 'parent': 2533, 'tfidf_word': 'reqrep reply ioloop wrap info handle close blocking ready zmq ', 'tfidf_method': 'hb_channel wait_for_ready wrapped BlockingKernelClient _handle_kernel_info_reply hb_channel ioloop ZMQSocketChannel close reqrep ', 'lda_word': ' channel,url,make,hb,control,', 'lda_method': ' make_url,hb_channel,hbchannel,control_channel,blockingkernelclient,', 'lsi_word': ' channel,hb,kernel,make,url,', 'lsi_method': ' make_url,hb_channel,control_channel,ioloop,reqrep,', 'spm_method': ' ', 'text_summary': 'Make a ZeroMQ URL for a given channel. handle kernel info reply.', 'files_count': 4, 'files': ['client.py', 'channels.py', 'connect.py', 'threaded.py'], 'execution_path_count': 9, 'function_id_to_name_file': {'116': 'BlockingKernelClient(client.py)', '125': 'HBChannel(channels.py)', '104': 'wait_for_ready(client.py)', '150': '_handle_kernel_info_reply(client.py)', '102': 'hb_channel(client.py)', '196': '_make_url(connect.py)', '90': 'AsyncKernelClient(client.py)', '91': 'reqrep(client.py)', '105': 'wrapped(client.py)', '80': 'ZMQSocketChannel(channels.py)', '83': 'close(channels.py)', '154': 'control_channel(client.py)', '723': 'ioloop(threaded.py)', '160': 'hb_channel(client.py)'}}, {'key': 117, 'parent': 2576, 'tfidf_word': 'EP: 117, Name: test_msg2obj &rarr; Message', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2575, 'parent': 2576, 'tfidf_word': 'change key byte default id init msg2obj scheme signature test ', 'tfidf_method': '_new_auth new_id_bytes test_msg2obj __init__ _key_changed _key_default _signature_scheme_changed ', 'lda_word': ' new,change,auth,key,scheme,', 'lda_method': ' new_auth,key_changed,init,new_id_bytes,key_default,', 'lsi_word': ' new,auth,change,key,signature,', 'lsi_method': ' new_auth,signature_scheme_changed,key_changed,init,test_msg2obj,', 'spm_method': ' ', 'text_summary': 'Empty', 'files_count': 1, 'files': ['session.py'], 'execution_path_count': 4, 'function_id_to_name_file': {'449': 'test_msg2obj(session.py)', '453': '__init__(session.py)', '470': '_signature_scheme_changed(session.py)', '465': '_new_auth(session.py)', '463': '_key_default(session.py)', '447': 'new_id_bytes(session.py)', '462': '_key_changed(session.py)'}}, {'key': 1388, 'parent': 2417, 'tfidf_word': 'EP: 1388, Name: handle &rarr; send', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2416, 'parent': 2417, 'tfidf_word': 'handle close send ', 'tfidf_method': 'handle close close send ', 'lda_word': ' handle,close,send,', 'lda_method': ' handle,send,close,', 'lsi_word': ' handle,close,send,', 'lsi_method': ' handle,close,send,', 'spm_method': ' ', 'text_summary': 'Empty', 'files_count': 2, 'files': ['forward.py', 'channels.py'], 'execution_path_count': 3, 'function_id_to_name_file': {'492': 'handle(forward.py)', '88': 'send(channels.py)', '83': 'close(channels.py)', '109': 'close(channels.py)'}}, {'key': 1215, 'parent': 2440, 'tfidf_word': 'EP: 1215, Name: setUp &rarr; test_env', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2439, 'parent': 2440, 'tfidf_word': 'test run ipc kernel sequence start tcp localhost lifecycle cinfo ', 'tfidf_method': '_run_lifecycle localhost _run_cinfo test_ipc_cinfo test_ipc_lifecycle test_start_sequence_ipc_kernels test_start_sequence_tcp_kernels test_tcp_cinfo ', 'lda_word': ' lifecycle,ipc,test,run,cinfo,', 'lda_method': ' run_lifecycle,test_ipc_lifecycle,localhost,test_ipc_cinfo,test_tcp_cinfo,', 'lsi_word': ' test,lifecycle,run,ipc,start,', 'lsi_method': ' run_lifecycle,test_start_sequence_ipc_kernels,test_start_sequence_tcp_kernels,test_ipc_lifecycle,localhost,', 'spm_method': ' ', 'text_summary': '', 'files_count': 2, 'files': ['test_multikernelmanager.py', 'localinterfaces.py'], 'execution_path_count': 5, 'function_id_to_name_file': {'649': 'test_start_sequence_ipc_kernels(test_multikernelmanager.py)', '641': '_run_lifecycle(test_multikernelmanager.py)', '650': 'test_start_sequence_tcp_kernels(test_multikernelmanager.py)', '644': 'test_ipc_cinfo(test_multikernelmanager.py)', '640': '_run_cinfo(test_multikernelmanager.py)', '651': 'test_tcp_cinfo(test_multikernelmanager.py)', '315': 'localhost(localinterfaces.py)', '645': 'test_ipc_lifecycle(test_multikernelmanager.py)'}}, {'key': 940, 'parent': 2468, 'tfidf_word': 'EP: 940, Name: test_complete_request &rarr; adapt', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2467, 'parent': 2468, 'tfidf_word': 'adapt test execute rename reply request type ', 'tfidf_method': 'adapt test_execute_reply test_execute_request test_rename_type ', 'lda_word': ' test,adapt,execute,type,request,', 'lda_method': ' adapt,test_execute_request,test_rename_type,test_execute_reply,', 'lsi_word': ' test,adapt,execute,reply,request,', 'lsi_method': ' adapt,test_rename_type,test_execute_request,test_execute_reply,', 'spm_method': ' ', 'text_summary': '', 'files_count': 1, 'files': ['test_adapter.py'], 'execution_path_count': 3, 'function_id_to_name_file': {'524': 'test_execute_reply(test_adapter.py)', '517': 'adapt(test_adapter.py)', '532': 'test_rename_type(test_adapter.py)', '525': 'test_execute_request(test_adapter.py)'}}, {'key': 910, 'parent': 2489, 'tfidf_word': 'EP: 910, Name: setUp &rarr; Session', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2488, 'parent': 2489, 'tfidf_word': 'test default session version line code ', 'tfidf_method': 'Session code_to_line test_code_to_line_no_code test_default_version ', 'lda_word': ' test,code,version,line,session,', 'lda_method': ' code_to_line,test_default_version,session,test_code_to_line_no_code,', 'lsi_word': ' code,line,test,default,session,', 'lsi_method': ' session,test_default_version,test_code_to_line_no_code,code_to_line,', 'spm_method': ' ', 'text_summary': 'Empty', 'files_count': 3, 'files': ['test_adapter.py', 'session.py', 'adapter.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'516': 'test_default_version(test_adapter.py)', '441': 'Session(session.py)', '515': 'test_code_to_line_no_code(test_adapter.py)', '51': 'code_to_line(adapter.py)'}}, {'key': 856, 'parent': 2479, 'tfidf_word': 'EP: 856, Name: test_datetimes_msgpack &rarr; Session', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 859, 'parent': 2479, 'tfidf_word': 'EP: 859, Name: test_send_raw &rarr; feed_identities', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 720, 'parent': 2521, 'tfidf_word': 'EP: 720, Name: test_complete &rarr; _check_reply', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2520, 'parent': 2521, 'tfidf_word': 'reply set test up history inspect kernel no stop such ', 'tfidf_method': '_check_reply setUp NoSuchKernel test_history test_inspect stop ', 'lda_word': ' reply,check,history,test,set,', 'lda_method': ' setup,nosuchkernel,check_reply,test_history,stop,', 'lsi_word': ' reply,test,check,history,inspect,', 'lsi_method': ' setup,stop,nosuchkernel,test_history,check_reply,', 'spm_method': ' ', 'text_summary': 'Empty', 'files_count': 3, 'files': ['test_client.py', 'utils.py', 'kernelspec.py'], 'execution_path_count': 4, 'function_id_to_name_file': {'554': 'test_inspect(test_client.py)', '548': '_check_reply(test_client.py)', '553': 'test_history(test_client.py)', '549': 'setUp(test_client.py)', '712': 'stop(utils.py)', '255': 'NoSuchKernel(kernelspec.py)'}}, {'key': 704, 'parent': 2517, 'tfidf_word': 'EP: 704, Name: setUp &rarr; test_env', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2516, 'parent': 2517, 'tfidf_word': 'kernel blocking client handle info ready reply reqrep wait wrap ', 'tfidf_method': 'BlockingKernelClient reqrep wait_for_ready wrapped _handle_kernel_info_reply ', 'lda_word': ' client,kernel,wrap,ready,reqrep,', 'lda_method': ' handle_kernel_info_reply,wait_for_ready,wrap,blockingkernelclient,reqrep,', 'lsi_word': ' kernel,ready,info,reply,wait,', 'lsi_method': ' reqrep,wrap,blockingkernelclient,handle_kernel_info_reply,wait_for_ready,', 'spm_method': ' ', 'text_summary': '', 'files_count': 1, 'files': ['client.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'116': 'BlockingKernelClient(client.py)', '117': 'reqrep(client.py)', '124': 'wrapped(client.py)', '123': 'wait_for_ready(client.py)', '150': '_handle_kernel_info_reply(client.py)'}}, {'key': 617, 'parent': 2532, 'tfidf_word': 'EP: 617, Name: BlockingKernelClient &rarr; HBChannel', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2531, 'parent': 2532, 'tfidf_word': 'ioloop wrap close ready reply reqrep socket wait handle zmq ', 'tfidf_method': 'hb_channel wait_for_ready wrapped HBChannel _handle_kernel_info_reply hb_channel ioloop ZMQSocketChannel close reqrep ', 'lda_word': ' channel,socket,close,zmq,make,', 'lda_method': ' hb_channel,make_url,zmqsocketchannel,close,control_channel,', 'lsi_word': ' channel,url,make,hb,control,', 'lsi_method': ' make_url,hb_channel,control_channel,ioloop,asynckernelclient,', 'spm_method': ' ', 'text_summary': 'Waits for a response when a client is blocked. handle kernel info reply.', 'files_count': 4, 'files': ['client.py', 'connect.py', 'channels.py', 'threaded.py'], 'execution_path_count': 8, 'function_id_to_name_file': {'104': 'wait_for_ready(client.py)', '150': '_handle_kernel_info_reply(client.py)', '102': 'hb_channel(client.py)', '196': '_make_url(connect.py)', '90': 'AsyncKernelClient(client.py)', '91': 'reqrep(client.py)', '105': 'wrapped(client.py)', '125': 'HBChannel(channels.py)', '80': 'ZMQSocketChannel(channels.py)', '83': 'close(channels.py)', '154': 'control_channel(client.py)', '723': 'ioloop(threaded.py)', '160': 'hb_channel(client.py)'}}, {'key': 116, 'parent': 2575, 'tfidf_word': 'EP: 116, Name: test_msg2obj &rarr; __init__', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2574, 'parent': 2575, 'tfidf_word': 'new auth change key byte default id scheme signature ', 'tfidf_method': '_new_auth new_id_bytes _key_changed _key_default _signature_scheme_changed ', 'lda_word': ' key,auth,new,change,default,', 'lda_method': ' new_auth,key_changed,signature_scheme_changed,new_id_bytes,key_default,', 'lsi_word': ' new,auth,change,key,scheme,', 'lsi_method': ' new_auth,signature_scheme_changed,key_changed,new_id_bytes,key_default,', 'spm_method': ' ', 'text_summary': 'Empty', 'files_count': 1, 'files': ['session.py'], 'execution_path_count': 3, 'function_id_to_name_file': {'470': '_signature_scheme_changed(session.py)', '465': '_new_auth(session.py)', '463': '_key_default(session.py)', '447': 'new_id_bytes(session.py)', '462': '_key_changed(session.py)'}}, {'key': 1387, 'parent': 2416, 'tfidf_word': 'EP: 1387, Name: handle &rarr; send', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2415, 'parent': 2416, 'tfidf_word': 'close handle ', 'tfidf_method': 'handle close close ', 'lda_word': ' handle,close,', 'lda_method': ' close,handle,', 'lsi_word': ' handle,close,', 'lsi_method': ' handle,close,', 'spm_method': ' ', 'text_summary': '', 'files_count': 2, 'files': ['forward.py', 'channels.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'492': 'handle(forward.py)', '83': 'close(channels.py)', '109': 'close(channels.py)'}}, {'key': 1199, 'parent': 2439, 'tfidf_word': 'EP: 1199, Name: test_start_sequence_ipc_kernels &rarr; _run_lifecycle', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2438, 'parent': 2439, 'tfidf_word': 'test run ipc tcp kernel localhost sequence start cinfo lifecycle ', 'tfidf_method': '_run_lifecycle localhost _run_cinfo test_ipc_cinfo test_ipc_lifecycle test_start_sequence_tcp_kernels test_tcp_cinfo ', 'lda_word': ' test,run,cinfo,lifecycle,ipc,', 'lda_method': ' run_lifecycle,test_ipc_lifecycle,run_cinfo,test_ipc_cinfo,localhost,', 'lsi_word': ' test,lifecycle,run,cinfo,ipc,', 'lsi_method': ' run_lifecycle,test_start_sequence_tcp_kernels,test_ipc_lifecycle,localhost,test_tcp_cinfo,', 'spm_method': ' ', 'text_summary': '', 'files_count': 2, 'files': ['test_multikernelmanager.py', 'localinterfaces.py'], 'execution_path_count': 4, 'function_id_to_name_file': {'650': 'test_start_sequence_tcp_kernels(test_multikernelmanager.py)', '641': '_run_lifecycle(test_multikernelmanager.py)', '644': 'test_ipc_cinfo(test_multikernelmanager.py)', '640': '_run_cinfo(test_multikernelmanager.py)', '651': 'test_tcp_cinfo(test_multikernelmanager.py)', '315': 'localhost(localinterfaces.py)', '645': 'test_ipc_lifecycle(test_multikernelmanager.py)'}}, {'key': 939, 'parent': 2467, 'tfidf_word': 'EP: 939, Name: test_execute_reply &rarr; adapt', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2466, 'parent': 2467, 'tfidf_word': 'adapt test execute rename request type ', 'tfidf_method': 'adapt test_execute_request test_rename_type ', 'lda_word': ' adapt,test,execute,rename,request,', 'lda_method': ' adapt,test_rename_type,test_execute_request,', 'lsi_word': ' test,adapt,rename,type,execute,', 'lsi_method': ' adapt,test_execute_request,test_rename_type,', 'spm_method': ' ', 'text_summary': '', 'files_count': 1, 'files': ['test_adapter.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'532': 'test_rename_type(test_adapter.py)', '517': 'adapt(test_adapter.py)', '525': 'test_execute_request(test_adapter.py)'}}, {'key': 907, 'parent': 2488, 'tfidf_word': 'EP: 907, Name: test_default_version &rarr; Session', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 909, 'parent': 2488, 'tfidf_word': 'EP: 909, Name: test_code_to_line_no_code &rarr; code_to_line', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 719, 'parent': 2520, 'tfidf_word': 'EP: 719, Name: test_inspect &rarr; _check_reply', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2519, 'parent': 2520, 'tfidf_word': 'set up check history kernel no reply stop such test ', 'tfidf_method': 'setUp NoSuchKernel _check_reply test_history stop ', 'lda_word': ' check,test,history,reply,set,', 'lda_method': ' setup,nosuchkernel,stop,check_reply,test_history,', 'lsi_word': ' check,test,reply,history,set,', 'lsi_method': ' setup,stop,nosuchkernel,test_history,check_reply,', 'spm_method': ' ', 'text_summary': 'Empty', 'files_count': 3, 'files': ['test_client.py', 'utils.py', 'kernelspec.py'], 'execution_path_count': 3, 'function_id_to_name_file': {'553': 'test_history(test_client.py)', '548': '_check_reply(test_client.py)', '549': 'setUp(test_client.py)', '712': 'stop(utils.py)', '255': 'NoSuchKernel(kernelspec.py)'}}, {'key': 629, 'parent': 2516, 'tfidf_word': 'EP: 629, Name: BlockingKernelClient &rarr; reqrep &rarr; wrapped', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 695, 'parent': 2516, 'tfidf_word': 'EP: 695, Name: wait_for_ready &rarr; _handle_kernel_info_reply', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 584, 'parent': 2531, 'tfidf_word': 'EP: 584, Name: wait_for_ready &rarr; _handle_kernel_info_reply', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2530, 'parent': 2531, 'tfidf_word': 'async client control kernel close ioloop reqrep socket wrap zmq ', 'tfidf_method': 'control_channel AsyncKernelClient hb_channel wrapped HBChannel hb_channel ioloop ZMQSocketChannel close reqrep ', 'lda_word': ' channel,close,socket,zmq,url,', 'lda_method': ' hbchannel,asynckernelclient,make_url,hb_channel,control_channel,', 'lsi_word': ' channel,make,url,hb,control,', 'lsi_method': ' make_url,hb_channel,control_channel,ioloop,asynckernelclient,', 'spm_method': ' ', 'text_summary': '', 'files_count': 4, 'files': ['client.py', 'connect.py', 'channels.py', 'threaded.py'], 'execution_path_count': 7, 'function_id_to_name_file': {'102': 'hb_channel(client.py)', '196': '_make_url(connect.py)', '90': 'AsyncKernelClient(client.py)', '91': 'reqrep(client.py)', '105': 'wrapped(client.py)', '125': 'HBChannel(channels.py)', '80': 'ZMQSocketChannel(channels.py)', '83': 'close(channels.py)', '154': 'control_channel(client.py)', '723': 'ioloop(threaded.py)', '160': 'hb_channel(client.py)'}}, {'key': 111, 'parent': 2574, 'tfidf_word': 'EP: 111, Name: _signature_scheme_changed &rarr; _new_auth', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2573, 'parent': 2574, 'tfidf_word': 'key new auth byte change default id ', 'tfidf_method': 'new_id_bytes _key_changed _key_default _new_auth ', 'lda_word': ' key,new,default,change,auth,', 'lda_method': ' key_default,new_id_bytes,new_auth,key_changed,', 'lsi_word': ' key,new,byte,change,auth,', 'lsi_method': ' key_default,new_id_bytes,key_changed,new_auth,', 'spm_method': ' ', 'text_summary': 'Empty', 'files_count': 1, 'files': ['session.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'463': '_key_default(session.py)', '447': 'new_id_bytes(session.py)', '462': '_key_changed(session.py)', '465': '_new_auth(session.py)'}}, {'key': 1385, 'parent': 2415, 'tfidf_word': 'EP: 1385, Name: handle &rarr; close', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1386, 'parent': 2415, 'tfidf_word': 'EP: 1386, Name: handle &rarr; close', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1198, 'parent': 2438, 'tfidf_word': 'EP: 1198, Name: test_start_sequence_tcp_kernels &rarr; _run_lifecycle', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2437, 'parent': 2438, 'tfidf_word': 'test ipc run localhost tcp cinfo lifecycle ', 'tfidf_method': 'localhost _run_cinfo _run_lifecycle test_ipc_cinfo test_ipc_lifecycle test_tcp_cinfo ', 'lda_word': ' lifecycle,run,test,ipc,cinfo,', 'lda_method': ' test_tcp_cinfo,run_cinfo,test_ipc_cinfo,localhost,test_ipc_lifecycle,', 'lsi_word': ' cinfo,test,ipc,run,lifecycle,', 'lsi_method': ' run_cinfo,test_ipc_cinfo,test_tcp_cinfo,localhost,run_lifecycle,', 'spm_method': ' ', 'text_summary': 'Empty', 'files_count': 2, 'files': ['test_multikernelmanager.py', 'localinterfaces.py'], 'execution_path_count': 3, 'function_id_to_name_file': {'644': 'test_ipc_cinfo(test_multikernelmanager.py)', '640': '_run_cinfo(test_multikernelmanager.py)', '651': 'test_tcp_cinfo(test_multikernelmanager.py)', '315': 'localhost(localinterfaces.py)', '645': 'test_ipc_lifecycle(test_multikernelmanager.py)', '641': '_run_lifecycle(test_multikernelmanager.py)'}}, {'key': 929, 'parent': 2466, 'tfidf_word': 'EP: 929, Name: test_rename_type &rarr; adapt', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 934, 'parent': 2466, 'tfidf_word': 'EP: 934, Name: test_execute_request &rarr; adapt', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 718, 'parent': 2519, 'tfidf_word': 'EP: 718, Name: test_history &rarr; _check_reply', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2518, 'parent': 2519, 'tfidf_word': 'set up kernel no stop such ', 'tfidf_method': 'setUp NoSuchKernel stop ', 'lda_word': ' set,kernel,stop,', 'lda_method': ' setup,stop,nosuchkernel,', 'lsi_word': ' set,stop,kernel,', 'lsi_method': ' setup,nosuchkernel,stop,', 'spm_method': ' ', 'text_summary': 'Empty', 'files_count': 3, 'files': ['test_client.py', 'utils.py', 'kernelspec.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'549': 'setUp(test_client.py)', '712': 'stop(utils.py)', '255': 'NoSuchKernel(kernelspec.py)'}}, {'key': 583, 'parent': 2530, 'tfidf_word': 'EP: 583, Name: hb_channel &rarr; _make_url', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2529, 'parent': 2530, 'tfidf_word': 'hb kernel make url close ioloop reqrep socket wrap zmq ', 'tfidf_method': 'control_channel _make_url AsyncKernelClient wrapped HBChannel hb_channel ioloop ZMQSocketChannel close reqrep ', 'lda_word': ' async,client,kernel,reqrep,wrap,', 'lda_method': ' zmqsocketchannel,close,control_channel,hb_channel,make_url,', 'lsi_word': ' channel,hb,make,url,kernel,', 'lsi_method': ' asynckernelclient,reqrep,wrap,hbchannel,zmqsocketchannel,', 'spm_method': ' ', 'text_summary': '', 'files_count': 4, 'files': ['client.py', 'channels.py', 'threaded.py', 'connect.py'], 'execution_path_count': 6, 'function_id_to_name_file': {'90': 'AsyncKernelClient(client.py)', '91': 'reqrep(client.py)', '105': 'wrapped(client.py)', '125': 'HBChannel(channels.py)', '80': 'ZMQSocketChannel(channels.py)', '83': 'close(channels.py)', '154': 'control_channel(client.py)', '723': 'ioloop(threaded.py)', '160': 'hb_channel(client.py)', '196': '_make_url(connect.py)'}}, {'key': 109, 'parent': 2573, 'tfidf_word': 'EP: 109, Name: _key_default &rarr; new_id_bytes', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 110, 'parent': 2573, 'tfidf_word': 'EP: 110, Name: _key_changed &rarr; _new_auth', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1195, 'parent': 2437, 'tfidf_word': 'EP: 1195, Name: test_ipc_cinfo &rarr; _run_cinfo', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2436, 'parent': 2437, 'tfidf_word': 'test cinfo ipc localhost run tcp lifecycle ', 'tfidf_method': 'localhost _run_lifecycle test_ipc_lifecycle test_tcp_cinfo ', 'lda_word': ' test,cinfo,localhost,tcp,lifecycle,', 'lda_method': ' run_lifecycle,test_ipc_lifecycle,test_tcp_cinfo,localhost,', 'lsi_word': ' lifecycle,test,ipc,run,cinfo,', 'lsi_method': ' run_lifecycle,test_ipc_lifecycle,localhost,test_tcp_cinfo,', 'spm_method': ' ', 'text_summary': 'Empty', 'files_count': 2, 'files': ['test_multikernelmanager.py', 'localinterfaces.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'651': 'test_tcp_cinfo(test_multikernelmanager.py)', '315': 'localhost(localinterfaces.py)', '645': 'test_ipc_lifecycle(test_multikernelmanager.py)', '641': '_run_lifecycle(test_multikernelmanager.py)'}}, {'key': 706, 'parent': 2518, 'tfidf_word': 'EP: 706, Name: setUp &rarr; stop', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 712, 'parent': 2518, 'tfidf_word': 'EP: 712, Name: setUp &rarr; NoSuchKernel', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 557, 'parent': 2529, 'tfidf_word': 'EP: 557, Name: AsyncKernelClient &rarr; reqrep &rarr; wrapped', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2528, 'parent': 2529, 'tfidf_word': 'hb make url async client close ioloop kernel socket zmq ', 'tfidf_method': 'control_channel _make_url HBChannel hb_channel ioloop ZMQSocketChannel close AsyncKernelClient ', 'lda_word': ' channel,make,url,control,ioloop,', 'lda_method': ' make_url,asynckernelclient,hb_channel,hbchannel,control_channel,', 'lsi_word': ' channel,url,make,hb,control,', 'lsi_method': ' make_url,control_channel,ioloop,hb_channel,hbchannel,', 'spm_method': ' ', 'text_summary': '', 'files_count': 4, 'files': ['client.py', 'channels.py', 'threaded.py', 'connect.py'], 'execution_path_count': 5, 'function_id_to_name_file': {'90': 'AsyncKernelClient(client.py)', '125': 'HBChannel(channels.py)', '80': 'ZMQSocketChannel(channels.py)', '83': 'close(channels.py)', '154': 'control_channel(client.py)', '723': 'ioloop(threaded.py)', '160': 'hb_channel(client.py)', '196': '_make_url(connect.py)'}}, {'key': 1189, 'parent': 2436, 'tfidf_word': 'EP: 1189, Name: test_tcp_cinfo &rarr; localhost', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1190, 'parent': 2436, 'tfidf_word': 'EP: 1190, Name: test_ipc_lifecycle &rarr; _run_lifecycle', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 502, 'parent': 2528, 'tfidf_word': 'EP: 502, Name: AsyncKernelClient &rarr; HBChannel', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2527, 'parent': 2528, 'tfidf_word': 'channel control make url close hb ioloop socket zmq ', 'tfidf_method': 'control_channel _make_url hb_channel ioloop ZMQSocketChannel close ', 'lda_word': ' channel,control,make,url,ioloop,', 'lda_method': ' make_url,control_channel,ioloop,close,zmqsocketchannel,', 'lsi_word': ' channel,make,url,control,hb,', 'lsi_method': ' make_url,control_channel,hb_channel,ioloop,close,', 'spm_method': ' ', 'text_summary': '', 'files_count': 4, 'files': ['channels.py', 'client.py', 'threaded.py', 'connect.py'], 'execution_path_count': 4, 'function_id_to_name_file': {'80': 'ZMQSocketChannel(channels.py)', '83': 'close(channels.py)', '154': 'control_channel(client.py)', '723': 'ioloop(threaded.py)', '160': 'hb_channel(client.py)', '196': '_make_url(connect.py)'}}, {'key': 500, 'parent': 2527, 'tfidf_word': 'EP: 500, Name: ZMQSocketChannel &rarr; close', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2526, 'parent': 2527, 'tfidf_word': 'channel control make url hb ioloop ', 'tfidf_method': 'control_channel _make_url hb_channel ioloop ', 'lda_word': ' control,channel,ioloop,make,url,', 'lda_method': ' control_channel,ioloop,make_url,hb_channel,', 'lsi_word': ' channel,make,url,control,hb,', 'lsi_method': ' make_url,control_channel,hb_channel,ioloop,', 'spm_method': ' ', 'text_summary': '', 'files_count': 3, 'files': ['client.py', 'threaded.py', 'connect.py'], 'execution_path_count': 3, 'function_id_to_name_file': {'154': 'control_channel(client.py)', '723': 'ioloop(threaded.py)', '160': 'hb_channel(client.py)', '196': '_make_url(connect.py)'}}, {'key': 488, 'parent': 2526, 'tfidf_word': 'EP: 488, Name: control_channel &rarr; ioloop', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 2525, 'parent': 2526, 'tfidf_word': 'channel make url control hb ', 'tfidf_method': '_make_url control_channel hb_channel ', 'lda_word': ' channel,make,url,control,hb,', 'lda_method': ' make_url,hb_channel,control_channel,', 'lsi_word': ' channel,make,url,control,hb,', 'lsi_method': ' make_url,hb_channel,control_channel,', 'spm_method': ' ', 'text_summary': '', 'files_count': 2, 'files': ['client.py', 'connect.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'160': 'hb_channel(client.py)', '196': '_make_url(connect.py)', '154': 'control_channel(client.py)'}}, {'key': 486, 'parent': 2525, 'tfidf_word': 'EP: 486, Name: hb_channel &rarr; _make_url', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 487, 'parent': 2525, 'tfidf_word': 'EP: 487, Name: control_channel &rarr; _make_url', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}]
