[{'key': 80, 'parent': -1, 'tfidf_word': 'function pair count loc ep leaf get pattern node docstring ', 'tfidf_method': 'tgf_to_networkX count_files_in_node execution_path_to_sentence function_id_to_file_name_of_execution_path initalize_graph_related_data_structures make_documents_for_a_cluster_tfidf_method test_strike_a_match mining_sequential_patterns summarize_clusters_using_docstring ClusteringCallGraph ', 'lda_word': ' topic,model,python,analysis,lda,', 'lda_method': ' get_function_to_comment_ratio,get_all_method_docstring_pair_of_a_project,random_sample_execution_paths,process_docstring,file_to_function_docstring_pair,', 'lsi_word': ' cluster,scipy,analysis,python,using,', 'lsi_method': ' python_analysis,clustering_using_scipy,labeling_cluster,topic_model_lsi,topic_model_lda,', 'spm_method': '  &#187; python_analysis(ClusteringCallGraph.py) &rarr; clustering_using_scipy(ClusteringCallGraph.py) &rarr; labeling_cluster(DocumentNodes.py) . <br> &#187; clustering_using_scipy(ClusteringCallGraph.py) &rarr; labeling_cluster(DocumentNodes.py) &rarr; topic_model_lda(DocumentNodes.py) . <br> &#187; clustering_using_scipy(ClusteringCallGraph.py) &rarr; labeling_cluster(DocumentNodes.py) &rarr; topic_model_lsi(DocumentNodes.py) . <br> &#187; python_analysis(ClusteringCallGraph.py) &rarr; clustering_using_scipy(ClusteringCallGraph.py) &rarr; labeling_cluster(DocumentNodes.py) &rarr; topic_model_lda(DocumentNodes.py) . <br> &#187; python_analysis(ClusteringCallGraph.py) &rarr; clustering_using_scipy(ClusteringCallGraph.py) &rarr; labeling_cluster(DocumentNodes.py) &rarr; topic_model_lsi(DocumentNodes.py) . <br> &#187; python_analysis(ClusteringCallGraph.py) &rarr; clustering_using_scipy(ClusteringCallGraph.py) &rarr; topic_model_lda(DocumentNodes.py) . <br> &#187; python_analysis(ClusteringCallGraph.py) &rarr; clustering_using_scipy(ClusteringCallGraph.py) &rarr; topic_model_lsi(DocumentNodes.py) . <br> &#187; python_analysis(ClusteringCallGraph.py) &rarr; labeling_cluster(DocumentNodes.py) &rarr; topic_model_lda(DocumentNodes.py) . <br> &#187; python_analysis(ClusteringCallGraph.py) &rarr; labeling_cluster(DocumentNodes.py) &rarr; topic_model_lsi(DocumentNodes.py) . <br> &#187; python_analysis(ClusteringCallGraph.py) &rarr; clustering_using_scipy(ClusteringCallGraph.py) &rarr; prepare_text_for_lda(DocumentNodes.py) . <br>', 'text_summary': 'This function takes execution paths of a cluster. Making documents using execution paths of a cluster for tfidf word variant. Then creates a printable string with execution paths with function names. clustering execution paths using scipy. This function takes a single execution path and maps its function id with names. Making documents using execution paths of a cluster for topic model method variant. Making documents using execution paths of a cluster for tfidf method variant. LDA algorithm for method and word variants. Returns printable sentence of a execution path. Making documents using execution paths of a cluster for topic model word variant. extracting function names from TGF file. LSI algorithm for both method and word variant. Extracting execution paths from networkX call graph. This function mines sequential patterns from execution paths.', 'files_count': 5, 'files': ['ClusteringCallGraph.py', 'util.py', 'PlayingWithAST.py', 'mine_repositories_with_comment_and_loc.py', 'DocumentNodes.py'], 'execution_path_count': 41, 'function_id_to_name_file': {'19': 'python_analysis(ClusteringCallGraph.py)', '13': 'distance_matrix(ClusteringCallGraph.py)', '62': 'compare_execution_paths(util.py)', '66': 'method_pairs(util.py)', '68': 'test_strike_a_match(util.py)', '51': 'get_function_to_comment_ratio(PlayingWithAST.py)', '49': 'get_all_method_docstring_pair_of_a_project(PlayingWithAST.py)', '48': 'file_to_function_docstring_pair(PlayingWithAST.py)', '52': 'process_docstring(PlayingWithAST.py)', '50': 'get_all_py_files(PlayingWithAST.py)', '58': 'count_comment_loc_for_repo(mine_repositories_with_comment_and_loc.py)', '47': 'PlayingWithAST(PlayingWithAST.py)', '59': 'count_total_loc(mine_repositories_with_comment_and_loc.py)', '20': 'remove_redundant_ep(ClusteringCallGraph.py)', '67': 'random_sample_execution_paths(util.py)', '17': 'id_to_sentence(ClusteringCallGraph.py)', '11': 'check_ep_overlap_from_start(ClusteringCallGraph.py)', '29': 'initalize_graph_related_data_structures(DocumentNodes.py)', '15': 'extracting_execution_paths(ClusteringCallGraph.py)', '16': 'extracting_source_and_exit_node(ClusteringCallGraph.py)', '8': 'ClusteringCallGraph(ClusteringCallGraph.py)', '22': 'tgf_to_networkX(ClusteringCallGraph.py)', '14': 'extract_function_name(ClusteringCallGraph.py)', '12': 'clustering_using_scipy(ClusteringCallGraph.py)', '64': 'find_leaf_nodes_for_nodes(util.py)', '63': 'dfs_for_leaf_nodes(util.py)', '10': 'bfs_with_parent(ClusteringCallGraph.py)', '18': 'pretty_print_leaf_node(ClusteringCallGraph.py)', '31': 'labeling_cluster(DocumentNodes.py)', '45': 'topic_model_lsi(DocumentNodes.py)', '39': 'prepare_text_for_lda(DocumentNodes.py)', '43': 'tokenize(DocumentNodes.py)', '28': 'get_lemma(DocumentNodes.py)', '24': '__init__(DocumentNodes.py)', '30': 'initalize_sheet(DocumentNodes.py)', '35': 'make_documents_for_a_cluster_tm_word(DocumentNodes.py)', '36': 'merge_words_as_sentence(DocumentNodes.py)', '34': 'make_documents_for_a_cluster_tm_method(DocumentNodes.py)', '46': 'topic_model_output(DocumentNodes.py)', '44': 'topic_model_lda(DocumentNodes.py)', '42': 'tf_idf_score_for_scipy_cluster(DocumentNodes.py)', '33': 'make_documents_for_a_cluster_tfidf_word(DocumentNodes.py)', '32': 'make_documents_for_a_cluster_tfidf_method(DocumentNodes.py)', '37': 'mining_sequential_patterns(DocumentNodes.py)', '40': 'remove_similar_patterns(DocumentNodes.py)', '41': 'summarize_clusters_using_docstring(DocumentNodes.py)', '25': 'count_files_in_node(DocumentNodes.py)', '27': 'function_id_to_file_name_of_execution_path(DocumentNodes.py)', '26': 'execution_path_to_sentence(DocumentNodes.py)'}}, {'key': 78, 'parent': 80, 'tfidf_word': 'total execution path pair function loc count ep get docstring ', 'tfidf_method': 'file_to_function_docstring_pair initalize_graph_related_data_structures tgf_to_networkX id_to_sentence extracting_source_and_exit_node extracting_execution_paths extract_function_name distance_matrix test_strike_a_match ClusteringCallGraph ', 'lda_word': ' method,path,pair,execution,compare,', 'lda_method': ' random_sample_execution_paths,python_analysis,get_function_to_comment_ratio,get_all_method_docstring_pair_of_a_project,remove_redundant_ep,', 'lsi_word': ' get,docstring,pair,function,method,', 'lsi_method': ' python_analysis,random_sample_execution_paths,compare_execution_paths,method_pairs,distance_matrix,', 'spm_method': '  &#187; python_analysis(ClusteringCallGraph.py) &rarr; distance_matrix(ClusteringCallGraph.py) &rarr; compare_execution_paths(util.py) . <br> &#187; python_analysis(ClusteringCallGraph.py) &rarr; distance_matrix(ClusteringCallGraph.py) &rarr; compare_execution_paths(util.py) &rarr; method_pairs(util.py) . <br> &#187; python_analysis(ClusteringCallGraph.py) &rarr; distance_matrix(ClusteringCallGraph.py) &rarr; method_pairs(util.py) . <br> &#187; python_analysis(ClusteringCallGraph.py) &rarr; extracting_execution_paths(ClusteringCallGraph.py) &rarr; random_sample_execution_paths(util.py) . <br> &#187; python_analysis(ClusteringCallGraph.py) &rarr; tgf_to_networkX(ClusteringCallGraph.py) &rarr; extract_function_name(ClusteringCallGraph.py) . <br> &#187; python_analysis(ClusteringCallGraph.py) &rarr; compare_execution_paths(util.py) &rarr; method_pairs(util.py) . <br> &#187; get_function_to_comment_ratio(PlayingWithAST.py) &rarr; get_all_method_docstring_pair_of_a_project(PlayingWithAST.py) &rarr; file_to_function_docstring_pair(PlayingWithAST.py) . <br> &#187; get_function_to_comment_ratio(PlayingWithAST.py) &rarr; get_all_method_docstring_pair_of_a_project(PlayingWithAST.py) &rarr; file_to_function_docstring_pair(PlayingWithAST.py) &rarr; process_docstring(PlayingWithAST.py) . <br> &#187; get_function_to_comment_ratio(PlayingWithAST.py) &rarr; get_all_method_docstring_pair_of_a_project(PlayingWithAST.py) &rarr; get_all_py_files(PlayingWithAST.py) . <br> &#187; get_function_to_comment_ratio(PlayingWithAST.py) &rarr; get_all_method_docstring_pair_of_a_project(PlayingWithAST.py) &rarr; process_docstring(PlayingWithAST.py) . <br>', 'text_summary': 'Finding source and exit nodes from networkX graph. analyzing python programs to build cluster tree of execution paths. converting tgf file to a networkX graph. This function takes a single execution path and maps its function id with names. Returns printable sentence of a execution path. extracting function names from TGF file. Extracting execution paths from networkX call graph.', 'files_count': 5, 'files': ['ClusteringCallGraph.py', 'util.py', 'PlayingWithAST.py', 'mine_repositories_with_comment_and_loc.py', 'DocumentNodes.py'], 'execution_path_count': 16, 'function_id_to_name_file': {'19': 'python_analysis(ClusteringCallGraph.py)', '13': 'distance_matrix(ClusteringCallGraph.py)', '62': 'compare_execution_paths(util.py)', '66': 'method_pairs(util.py)', '68': 'test_strike_a_match(util.py)', '51': 'get_function_to_comment_ratio(PlayingWithAST.py)', '49': 'get_all_method_docstring_pair_of_a_project(PlayingWithAST.py)', '48': 'file_to_function_docstring_pair(PlayingWithAST.py)', '52': 'process_docstring(PlayingWithAST.py)', '50': 'get_all_py_files(PlayingWithAST.py)', '58': 'count_comment_loc_for_repo(mine_repositories_with_comment_and_loc.py)', '47': 'PlayingWithAST(PlayingWithAST.py)', '59': 'count_total_loc(mine_repositories_with_comment_and_loc.py)', '20': 'remove_redundant_ep(ClusteringCallGraph.py)', '67': 'random_sample_execution_paths(util.py)', '17': 'id_to_sentence(ClusteringCallGraph.py)', '11': 'check_ep_overlap_from_start(ClusteringCallGraph.py)', '29': 'initalize_graph_related_data_structures(DocumentNodes.py)', '15': 'extracting_execution_paths(ClusteringCallGraph.py)', '16': 'extracting_source_and_exit_node(ClusteringCallGraph.py)', '8': 'ClusteringCallGraph(ClusteringCallGraph.py)', '22': 'tgf_to_networkX(ClusteringCallGraph.py)', '14': 'extract_function_name(ClusteringCallGraph.py)'}}, {'key': 79, 'parent': 80, 'tfidf_word': 'pretty function parent mining id sample lda leaf pattern node ', 'tfidf_method': 'bfs_with_parent mining_sequential_patterns find_leaf_nodes_for_nodes make_documents_for_a_cluster_tfidf_method function_id_to_file_name_of_execution_path execution_path_to_sentence count_files_in_node pretty_print_leaf_node remove_similar_patterns random_sample_execution_paths ', 'lda_word': ' cluster,scipy,python,clustering,using,', 'lda_method': ' clustering_using_scipy,python_analysis,labeling_cluster,prepare_text_for_lda,topic_model_lsi,', 'lsi_word': ' cluster,scipy,using,python,clustering,', 'lsi_method': ' python_analysis,clustering_using_scipy,labeling_cluster,topic_model_lda,topic_model_lsi,', 'spm_method': '  &#187; python_analysis(ClusteringCallGraph.py) &rarr; clustering_using_scipy(ClusteringCallGraph.py) &rarr; labeling_cluster(DocumentNodes.py) . <br> &#187; clustering_using_scipy(ClusteringCallGraph.py) &rarr; labeling_cluster(DocumentNodes.py) &rarr; topic_model_lda(DocumentNodes.py) . <br> &#187; clustering_using_scipy(ClusteringCallGraph.py) &rarr; labeling_cluster(DocumentNodes.py) &rarr; topic_model_lsi(DocumentNodes.py) . <br> &#187; python_analysis(ClusteringCallGraph.py) &rarr; clustering_using_scipy(ClusteringCallGraph.py) &rarr; labeling_cluster(DocumentNodes.py) &rarr; topic_model_lda(DocumentNodes.py) . <br> &#187; python_analysis(ClusteringCallGraph.py) &rarr; clustering_using_scipy(ClusteringCallGraph.py) &rarr; labeling_cluster(DocumentNodes.py) &rarr; topic_model_lsi(DocumentNodes.py) . <br> &#187; python_analysis(ClusteringCallGraph.py) &rarr; clustering_using_scipy(ClusteringCallGraph.py) &rarr; topic_model_lda(DocumentNodes.py) . <br> &#187; python_analysis(ClusteringCallGraph.py) &rarr; clustering_using_scipy(ClusteringCallGraph.py) &rarr; topic_model_lsi(DocumentNodes.py) . <br> &#187; python_analysis(ClusteringCallGraph.py) &rarr; labeling_cluster(DocumentNodes.py) &rarr; topic_model_lda(DocumentNodes.py) . <br> &#187; python_analysis(ClusteringCallGraph.py) &rarr; labeling_cluster(DocumentNodes.py) &rarr; topic_model_lsi(DocumentNodes.py) . <br> &#187; python_analysis(ClusteringCallGraph.py) &rarr; clustering_using_scipy(ClusteringCallGraph.py) &rarr; prepare_text_for_lda(DocumentNodes.py) . <br>', 'text_summary': 'automatic text summarization for docstring of function names. This function takes execution paths of a cluster. Making documents using execution paths of a cluster for tfidf word variant. Then creates a printable string with execution paths with function names. Merging word as sentence. clustering execution paths using scipy. Key of the returned dict is parent node and values are their child nodes. This function takes a single execution path and maps its function id with names. Making documents using execution paths of a cluster for topic model method variant. This function mines sequential patterns from execution paths. Making documents using execution paths of a cluster for tfidf method variant. Returns printable sentence of a execution path. Making documents using execution paths of a cluster for topic model word variant. LSI algorithm for both method and word variant. LDA algorithm for method and word variants. BFS to get parent nodes from cluster tree with their child nodes.', 'files_count': 3, 'files': ['ClusteringCallGraph.py', 'util.py', 'DocumentNodes.py'], 'execution_path_count': 25, 'function_id_to_name_file': {'19': 'python_analysis(ClusteringCallGraph.py)', '12': 'clustering_using_scipy(ClusteringCallGraph.py)', '64': 'find_leaf_nodes_for_nodes(util.py)', '63': 'dfs_for_leaf_nodes(util.py)', '10': 'bfs_with_parent(ClusteringCallGraph.py)', '18': 'pretty_print_leaf_node(ClusteringCallGraph.py)', '67': 'random_sample_execution_paths(util.py)', '31': 'labeling_cluster(DocumentNodes.py)', '45': 'topic_model_lsi(DocumentNodes.py)', '39': 'prepare_text_for_lda(DocumentNodes.py)', '43': 'tokenize(DocumentNodes.py)', '28': 'get_lemma(DocumentNodes.py)', '24': '__init__(DocumentNodes.py)', '30': 'initalize_sheet(DocumentNodes.py)', '35': 'make_documents_for_a_cluster_tm_word(DocumentNodes.py)', '36': 'merge_words_as_sentence(DocumentNodes.py)', '34': 'make_documents_for_a_cluster_tm_method(DocumentNodes.py)', '46': 'topic_model_output(DocumentNodes.py)', '44': 'topic_model_lda(DocumentNodes.py)', '42': 'tf_idf_score_for_scipy_cluster(DocumentNodes.py)', '33': 'make_documents_for_a_cluster_tfidf_word(DocumentNodes.py)', '32': 'make_documents_for_a_cluster_tfidf_method(DocumentNodes.py)', '37': 'mining_sequential_patterns(DocumentNodes.py)', '40': 'remove_similar_patterns(DocumentNodes.py)', '41': 'summarize_clusters_using_docstring(DocumentNodes.py)', '25': 'count_files_in_node(DocumentNodes.py)', '27': 'function_id_to_file_name_of_execution_path(DocumentNodes.py)', '26': 'execution_path_to_sentence(DocumentNodes.py)'}}, {'key': 60, 'parent': 78, 'tfidf_word': 'method pair path analysis distance match matrix python strike test ', 'tfidf_method': 'compare_execution_paths method_pairs distance_matrix python_analysis test_strike_a_match ', 'lda_word': ' method,distance,pair,analysis,path,', 'lda_method': ' compare_execution_paths,method_pairs,test_strike_a_match,distance_matrix,python_analysis,', 'lsi_word': ' path,pair,compare,method,execution,', 'lsi_method': ' compare_execution_paths,method_pairs,distance_matrix,python_analysis,test_strike_a_match,', 'spm_method': '  &#187; distance_matrix(ClusteringCallGraph.py) &rarr; compare_execution_paths(util.py) &rarr; method_pairs(util.py) . <br> &#187; python_analysis(ClusteringCallGraph.py) &rarr; distance_matrix(ClusteringCallGraph.py) &rarr; compare_execution_paths(util.py) . <br> &#187; python_analysis(ClusteringCallGraph.py) &rarr; distance_matrix(ClusteringCallGraph.py) &rarr; compare_execution_paths(util.py) &rarr; method_pairs(util.py) . <br> &#187; python_analysis(ClusteringCallGraph.py) &rarr; distance_matrix(ClusteringCallGraph.py) &rarr; method_pairs(util.py) . <br> &#187; python_analysis(ClusteringCallGraph.py) &rarr; compare_execution_paths(util.py) &rarr; method_pairs(util.py) . <br> &#187; test_strike_a_match(util.py) &rarr; compare_execution_paths(util.py) &rarr; method_pairs(util.py) . <br>', 'text_summary': 'creating distance matrix using jaccard similarity value.', 'files_count': 2, 'files': ['ClusteringCallGraph.py', 'util.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'19': 'python_analysis(ClusteringCallGraph.py)', '13': 'distance_matrix(ClusteringCallGraph.py)', '62': 'compare_execution_paths(util.py)', '66': 'method_pairs(util.py)', '68': 'test_strike_a_match(util.py)'}}, {'key': 77, 'parent': 78, 'tfidf_word': 'total path function execution loc count ep pair get docstring ', 'tfidf_method': 'get_all_py_files check_ep_overlap_from_start initalize_graph_related_data_structures tgf_to_networkX id_to_sentence extracting_source_and_exit_node extracting_execution_paths extract_function_name file_to_function_docstring_pair ClusteringCallGraph ', 'lda_word': ' get,comment,pair,file,docstring,', 'lda_method': ' python_analysis,extract_function_name,tgf_to_networkx,extracting_source_and_exit_node,initalize_graph_related_data_structures,', 'lsi_word': ' get,docstring,function,pair,comment,', 'lsi_method': ' python_analysis,random_sample_execution_paths,playingwithast,extracting_execution_paths,extract_function_name,', 'spm_method': '  &#187; python_analysis(ClusteringCallGraph.py) &rarr; extracting_execution_paths(ClusteringCallGraph.py) &rarr; random_sample_execution_paths(util.py) . <br> &#187; python_analysis(ClusteringCallGraph.py) &rarr; tgf_to_networkX(ClusteringCallGraph.py) &rarr; extract_function_name(ClusteringCallGraph.py) . <br> &#187; get_all_method_docstring_pair_of_a_project(PlayingWithAST.py) &rarr; file_to_function_docstring_pair(PlayingWithAST.py) &rarr; process_docstring(PlayingWithAST.py) . <br> &#187; get_function_to_comment_ratio(PlayingWithAST.py) &rarr; file_to_function_docstring_pair(PlayingWithAST.py) &rarr; process_docstring(PlayingWithAST.py) . <br> &#187; get_function_to_comment_ratio(PlayingWithAST.py) &rarr; get_all_method_docstring_pair_of_a_project(PlayingWithAST.py) &rarr; file_to_function_docstring_pair(PlayingWithAST.py) . <br> &#187; get_function_to_comment_ratio(PlayingWithAST.py) &rarr; get_all_method_docstring_pair_of_a_project(PlayingWithAST.py) &rarr; file_to_function_docstring_pair(PlayingWithAST.py) &rarr; process_docstring(PlayingWithAST.py) . <br> &#187; get_function_to_comment_ratio(PlayingWithAST.py) &rarr; get_all_method_docstring_pair_of_a_project(PlayingWithAST.py) &rarr; get_all_py_files(PlayingWithAST.py) . <br> &#187; get_function_to_comment_ratio(PlayingWithAST.py) &rarr; get_all_method_docstring_pair_of_a_project(PlayingWithAST.py) &rarr; process_docstring(PlayingWithAST.py) . <br>', 'text_summary': 'converting tgf file to a networkX graph. This function takes a single execution path and maps its function id with names. Returns printable sentence of a execution path. extracting function names from TGF file. Extracting execution paths from networkX call graph.', 'files_count': 5, 'files': ['PlayingWithAST.py', 'mine_repositories_with_comment_and_loc.py', 'ClusteringCallGraph.py', 'util.py', 'DocumentNodes.py'], 'execution_path_count': 14, 'function_id_to_name_file': {'51': 'get_function_to_comment_ratio(PlayingWithAST.py)', '49': 'get_all_method_docstring_pair_of_a_project(PlayingWithAST.py)', '48': 'file_to_function_docstring_pair(PlayingWithAST.py)', '52': 'process_docstring(PlayingWithAST.py)', '50': 'get_all_py_files(PlayingWithAST.py)', '58': 'count_comment_loc_for_repo(mine_repositories_with_comment_and_loc.py)', '47': 'PlayingWithAST(PlayingWithAST.py)', '59': 'count_total_loc(mine_repositories_with_comment_and_loc.py)', '20': 'remove_redundant_ep(ClusteringCallGraph.py)', '67': 'random_sample_execution_paths(util.py)', '19': 'python_analysis(ClusteringCallGraph.py)', '17': 'id_to_sentence(ClusteringCallGraph.py)', '11': 'check_ep_overlap_from_start(ClusteringCallGraph.py)', '29': 'initalize_graph_related_data_structures(DocumentNodes.py)', '15': 'extracting_execution_paths(ClusteringCallGraph.py)', '16': 'extracting_source_and_exit_node(ClusteringCallGraph.py)', '8': 'ClusteringCallGraph(ClusteringCallGraph.py)', '22': 'tgf_to_networkX(ClusteringCallGraph.py)', '14': 'extract_function_name(ClusteringCallGraph.py)'}}, {'key': 62, 'parent': 79, 'tfidf_word': 'path pretty print bfs random sample dfs parent leaf node ', 'tfidf_method': 'clustering_using_scipy python_analysis bfs_with_parent pretty_print_leaf_node dfs_for_leaf_nodes find_leaf_nodes_for_nodes random_sample_execution_paths ', 'lda_word': ' node,leaf,analysis,dfs,find,', 'lda_method': ' clustering_using_scipy,python_analysis,pretty_print_leaf_node,bfs_with_parent,find_leaf_nodes_for_nodes,', 'lsi_word': ' node,leaf,python,using,clustering,', 'lsi_method': ' clustering_using_scipy,python_analysis,find_leaf_nodes_for_nodes,dfs_for_leaf_nodes,pretty_print_leaf_node,', 'spm_method': '  &#187; clustering_using_scipy(ClusteringCallGraph.py) &rarr; find_leaf_nodes_for_nodes(util.py) &rarr; dfs_for_leaf_nodes(util.py) . <br> &#187; python_analysis(ClusteringCallGraph.py) &rarr; clustering_using_scipy(ClusteringCallGraph.py) &rarr; bfs_with_parent(ClusteringCallGraph.py) . <br> &#187; python_analysis(ClusteringCallGraph.py) &rarr; clustering_using_scipy(ClusteringCallGraph.py) &rarr; pretty_print_leaf_node(ClusteringCallGraph.py) . <br> &#187; python_analysis(ClusteringCallGraph.py) &rarr; clustering_using_scipy(ClusteringCallGraph.py) &rarr; dfs_for_leaf_nodes(util.py) . <br> &#187; python_analysis(ClusteringCallGraph.py) &rarr; clustering_using_scipy(ClusteringCallGraph.py) &rarr; find_leaf_nodes_for_nodes(util.py) . <br> &#187; python_analysis(ClusteringCallGraph.py) &rarr; clustering_using_scipy(ClusteringCallGraph.py) &rarr; find_leaf_nodes_for_nodes(util.py) &rarr; dfs_for_leaf_nodes(util.py) . <br> &#187; python_analysis(ClusteringCallGraph.py) &rarr; clustering_using_scipy(ClusteringCallGraph.py) &rarr; random_sample_execution_paths(util.py) . <br> &#187; python_analysis(ClusteringCallGraph.py) &rarr; find_leaf_nodes_for_nodes(util.py) &rarr; dfs_for_leaf_nodes(util.py) . <br>', 'text_summary': 'Key of the returned dict is parent node and values are their child nodes. Returns printable sentence of a execution path. BFS to get parent nodes from cluster tree with their child nodes. analyzing python programs to build cluster tree of execution paths.', 'files_count': 2, 'files': ['ClusteringCallGraph.py', 'util.py'], 'execution_path_count': 4, 'function_id_to_name_file': {'19': 'python_analysis(ClusteringCallGraph.py)', '12': 'clustering_using_scipy(ClusteringCallGraph.py)', '64': 'find_leaf_nodes_for_nodes(util.py)', '63': 'dfs_for_leaf_nodes(util.py)', '10': 'bfs_with_parent(ClusteringCallGraph.py)', '18': 'pretty_print_leaf_node(ClusteringCallGraph.py)', '67': 'random_sample_execution_paths(util.py)'}}, {'key': 76, 'parent': 79, 'tfidf_word': 'function similar sequential remove id node mining summarize name pattern ', 'tfidf_method': '__init__ make_documents_for_a_cluster_tfidf_word topic_model_output make_documents_for_a_cluster_tfidf_method mining_sequential_patterns function_id_to_file_name_of_execution_path remove_similar_patterns summarize_clusters_using_docstring execution_path_to_sentence count_files_in_node ', 'lda_word': ' name,function,file,path,execution,', 'lda_method': ' clustering_using_scipy,labeling_cluster,python_analysis,topic_model_lsi,merge_words_as_sentence,', 'lsi_word': ' cluster,scipy,using,analysis,python,', 'lsi_method': ' clustering_using_scipy,python_analysis,labeling_cluster,topic_model_lda,topic_model_lsi,', 'spm_method': '  &#187; python_analysis(ClusteringCallGraph.py) &rarr; clustering_using_scipy(ClusteringCallGraph.py) &rarr; labeling_cluster(DocumentNodes.py) . <br> &#187; clustering_using_scipy(ClusteringCallGraph.py) &rarr; labeling_cluster(DocumentNodes.py) &rarr; topic_model_lda(DocumentNodes.py) . <br> &#187; clustering_using_scipy(ClusteringCallGraph.py) &rarr; labeling_cluster(DocumentNodes.py) &rarr; topic_model_lsi(DocumentNodes.py) . <br> &#187; python_analysis(ClusteringCallGraph.py) &rarr; clustering_using_scipy(ClusteringCallGraph.py) &rarr; labeling_cluster(DocumentNodes.py) &rarr; topic_model_lda(DocumentNodes.py) . <br> &#187; python_analysis(ClusteringCallGraph.py) &rarr; clustering_using_scipy(ClusteringCallGraph.py) &rarr; labeling_cluster(DocumentNodes.py) &rarr; topic_model_lsi(DocumentNodes.py) . <br> &#187; python_analysis(ClusteringCallGraph.py) &rarr; clustering_using_scipy(ClusteringCallGraph.py) &rarr; topic_model_lda(DocumentNodes.py) . <br> &#187; python_analysis(ClusteringCallGraph.py) &rarr; clustering_using_scipy(ClusteringCallGraph.py) &rarr; topic_model_lsi(DocumentNodes.py) . <br> &#187; python_analysis(ClusteringCallGraph.py) &rarr; labeling_cluster(DocumentNodes.py) &rarr; topic_model_lda(DocumentNodes.py) . <br> &#187; python_analysis(ClusteringCallGraph.py) &rarr; labeling_cluster(DocumentNodes.py) &rarr; topic_model_lsi(DocumentNodes.py) . <br> &#187; python_analysis(ClusteringCallGraph.py) &rarr; clustering_using_scipy(ClusteringCallGraph.py) &rarr; prepare_text_for_lda(DocumentNodes.py) . <br>', 'text_summary': 'automatic text summarization for docstring of function names. This function takes execution paths of a cluster. Making documents using execution paths of a cluster for tfidf word variant. Then creates a printable string with execution paths with function names. clustering execution paths using scipy. Making documents using execution paths of a cluster for topic model method variant. Making documents using execution paths of a cluster for tfidf method variant. Making documents using execution paths of a cluster for topic model word variant. LSI algorithm for both method and word variant. LDA algorithm for method and word variants. This function mines sequential patterns from execution paths.', 'files_count': 2, 'files': ['ClusteringCallGraph.py', 'DocumentNodes.py'], 'execution_path_count': 21, 'function_id_to_name_file': {'19': 'python_analysis(ClusteringCallGraph.py)', '12': 'clustering_using_scipy(ClusteringCallGraph.py)', '31': 'labeling_cluster(DocumentNodes.py)', '45': 'topic_model_lsi(DocumentNodes.py)', '39': 'prepare_text_for_lda(DocumentNodes.py)', '43': 'tokenize(DocumentNodes.py)', '28': 'get_lemma(DocumentNodes.py)', '24': '__init__(DocumentNodes.py)', '30': 'initalize_sheet(DocumentNodes.py)', '35': 'make_documents_for_a_cluster_tm_word(DocumentNodes.py)', '36': 'merge_words_as_sentence(DocumentNodes.py)', '34': 'make_documents_for_a_cluster_tm_method(DocumentNodes.py)', '46': 'topic_model_output(DocumentNodes.py)', '44': 'topic_model_lda(DocumentNodes.py)', '42': 'tf_idf_score_for_scipy_cluster(DocumentNodes.py)', '33': 'make_documents_for_a_cluster_tfidf_word(DocumentNodes.py)', '32': 'make_documents_for_a_cluster_tfidf_method(DocumentNodes.py)', '37': 'mining_sequential_patterns(DocumentNodes.py)', '40': 'remove_similar_patterns(DocumentNodes.py)', '41': 'summarize_clusters_using_docstring(DocumentNodes.py)', '25': 'count_files_in_node(DocumentNodes.py)', '27': 'function_id_to_file_name_of_execution_path(DocumentNodes.py)', '26': 'execution_path_to_sentence(DocumentNodes.py)'}}, {'key': 3, 'parent': 60, 'tfidf_word': 'EP: 3, Name: python_analysis &rarr; distance_matrix &rarr; compare_execution_paths &rarr; method_pairs', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 40, 'parent': 60, 'tfidf_word': 'EP: 40, Name: test_strike_a_match &rarr; compare_execution_paths &rarr; method_pairs', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 61, 'parent': 77, 'tfidf_word': 'file method project ratio process py function pair docstring get ', 'tfidf_method': 'get_all_method_docstring_pair_of_a_project get_function_to_comment_ratio file_to_function_docstring_pair get_all_py_files process_docstring ', 'lda_word': ' get,docstring,pair,ratio,function,', 'lda_method': ' get_function_to_comment_ratio,get_all_method_docstring_pair_of_a_project,process_docstring,get_all_py_files,file_to_function_docstring_pair,', 'lsi_word': ' get,docstring,function,pair,comment,', 'lsi_method': ' get_function_to_comment_ratio,get_all_method_docstring_pair_of_a_project,process_docstring,file_to_function_docstring_pair,get_all_py_files,', 'spm_method': '  &#187; get_all_method_docstring_pair_of_a_project(PlayingWithAST.py) &rarr; file_to_function_docstring_pair(PlayingWithAST.py) &rarr; process_docstring(PlayingWithAST.py) . <br> &#187; get_function_to_comment_ratio(PlayingWithAST.py) &rarr; file_to_function_docstring_pair(PlayingWithAST.py) &rarr; process_docstring(PlayingWithAST.py) . <br> &#187; get_function_to_comment_ratio(PlayingWithAST.py) &rarr; get_all_method_docstring_pair_of_a_project(PlayingWithAST.py) &rarr; file_to_function_docstring_pair(PlayingWithAST.py) . <br> &#187; get_function_to_comment_ratio(PlayingWithAST.py) &rarr; get_all_method_docstring_pair_of_a_project(PlayingWithAST.py) &rarr; file_to_function_docstring_pair(PlayingWithAST.py) &rarr; process_docstring(PlayingWithAST.py) . <br> &#187; get_function_to_comment_ratio(PlayingWithAST.py) &rarr; get_all_method_docstring_pair_of_a_project(PlayingWithAST.py) &rarr; get_all_py_files(PlayingWithAST.py) . <br> &#187; get_function_to_comment_ratio(PlayingWithAST.py) &rarr; get_all_method_docstring_pair_of_a_project(PlayingWithAST.py) &rarr; process_docstring(PlayingWithAST.py) . <br>', 'text_summary': 'Empty', 'files_count': 1, 'files': ['PlayingWithAST.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'51': 'get_function_to_comment_ratio(PlayingWithAST.py)', '49': 'get_all_method_docstring_pair_of_a_project(PlayingWithAST.py)', '48': 'file_to_function_docstring_pair(PlayingWithAST.py)', '52': 'process_docstring(PlayingWithAST.py)', '50': 'get_all_py_files(PlayingWithAST.py)'}}, {'key': 74, 'parent': 77, 'tfidf_word': 'initalize id function exit clustering execution path count loc ep ', 'tfidf_method': 'count_comment_loc_for_repo check_ep_overlap_from_start extract_function_name extracting_execution_paths extracting_source_and_exit_node id_to_sentence tgf_to_networkX initalize_graph_related_data_structures count_total_loc ClusteringCallGraph ', 'lda_word': ' python,analysis,playing,ast,path,', 'lda_method': ' python_analysis,random_sample_execution_paths,remove_redundant_ep,extracting_execution_paths,extracting_source_and_exit_node,', 'lsi_word': ' python,analysis,path,execution,random,', 'lsi_method': ' python_analysis,random_sample_execution_paths,playingwithast,extracting_execution_paths,extract_function_name,', 'spm_method': '  &#187; python_analysis(ClusteringCallGraph.py) &rarr; extracting_execution_paths(ClusteringCallGraph.py) &rarr; random_sample_execution_paths(util.py) . <br> &#187; python_analysis(ClusteringCallGraph.py) &rarr; tgf_to_networkX(ClusteringCallGraph.py) &rarr; extract_function_name(ClusteringCallGraph.py) . <br>', 'text_summary': 'Finding source and exit nodes from networkX graph. converting tgf file to a networkX graph. This function takes a single execution path and maps its function id with names. extracting function names from TGF file. Extracting execution paths from networkX call graph.', 'files_count': 5, 'files': ['mine_repositories_with_comment_and_loc.py', 'PlayingWithAST.py', 'ClusteringCallGraph.py', 'util.py', 'DocumentNodes.py'], 'execution_path_count': 12, 'function_id_to_name_file': {'58': 'count_comment_loc_for_repo(mine_repositories_with_comment_and_loc.py)', '47': 'PlayingWithAST(PlayingWithAST.py)', '59': 'count_total_loc(mine_repositories_with_comment_and_loc.py)', '20': 'remove_redundant_ep(ClusteringCallGraph.py)', '67': 'random_sample_execution_paths(util.py)', '19': 'python_analysis(ClusteringCallGraph.py)', '17': 'id_to_sentence(ClusteringCallGraph.py)', '11': 'check_ep_overlap_from_start(ClusteringCallGraph.py)', '29': 'initalize_graph_related_data_structures(DocumentNodes.py)', '15': 'extracting_execution_paths(ClusteringCallGraph.py)', '16': 'extracting_source_and_exit_node(ClusteringCallGraph.py)', '8': 'ClusteringCallGraph(ClusteringCallGraph.py)', '22': 'tgf_to_networkX(ClusteringCallGraph.py)', '14': 'extract_function_name(ClusteringCallGraph.py)'}}, {'key': 12, 'parent': 62, 'tfidf_word': 'EP: 12, Name: python_analysis &rarr; clustering_using_scipy &rarr; find_leaf_nodes_for_nodes &rarr; dfs_for_leaf_nodes', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 59, 'parent': 62, 'tfidf_word': 'bfs execution leaf node parent path pretty print random sample ', 'tfidf_method': 'clustering_using_scipy python_analysis bfs_with_parent pretty_print_leaf_node random_sample_execution_paths ', 'lda_word': ' analysis,python,using,leaf,scipy,', 'lda_method': ' clustering_using_scipy,python_analysis,pretty_print_leaf_node,random_sample_execution_paths,bfs_with_parent,', 'lsi_word': ' scipy,clustering,python,using,analysis,', 'lsi_method': ' python_analysis,clustering_using_scipy,bfs_with_parent,random_sample_execution_paths,pretty_print_leaf_node,', 'spm_method': '  &#187; python_analysis(ClusteringCallGraph.py) &rarr; clustering_using_scipy(ClusteringCallGraph.py) &rarr; bfs_with_parent(ClusteringCallGraph.py) . <br> &#187; python_analysis(ClusteringCallGraph.py) &rarr; clustering_using_scipy(ClusteringCallGraph.py) &rarr; pretty_print_leaf_node(ClusteringCallGraph.py) . <br> &#187; python_analysis(ClusteringCallGraph.py) &rarr; clustering_using_scipy(ClusteringCallGraph.py) &rarr; random_sample_execution_paths(util.py) . <br>', 'text_summary': 'Key of the returned dict is parent node and values are their child nodes. Returns printable sentence of a execution path. BFS to get parent nodes from cluster tree with their child nodes.', 'files_count': 2, 'files': ['ClusteringCallGraph.py', 'util.py'], 'execution_path_count': 3, 'function_id_to_name_file': {'19': 'python_analysis(ClusteringCallGraph.py)', '12': 'clustering_using_scipy(ClusteringCallGraph.py)', '10': 'bfs_with_parent(ClusteringCallGraph.py)', '18': 'pretty_print_leaf_node(ClusteringCallGraph.py)', '67': 'random_sample_execution_paths(util.py)'}}, {'key': 56, 'parent': 76, 'tfidf_word': 'sentence method word merge lemma initalize init get output words ', 'tfidf_method': 'topic_model_lsi prepare_text_for_lda __init__ get_lemma initalize_sheet make_documents_for_a_cluster_tm_method make_documents_for_a_cluster_tm_word merge_words_as_sentence tokenize topic_model_output ', 'lda_word': ' prepare,scipy,using,cluster,lda,', 'lda_method': ' labeling_cluster,topic_model_lsi,python_analysis,clustering_using_scipy,prepare_text_for_lda,', 'lsi_word': ' cluster,topic,model,analysis,label,', 'lsi_method': ' topic_model_lsi,labeling_cluster,python_analysis,clustering_using_scipy,prepare_text_for_lda,', 'spm_method': '  &#187; clustering_using_scipy(ClusteringCallGraph.py) &rarr; labeling_cluster(DocumentNodes.py) &rarr; topic_model_lsi(DocumentNodes.py) . <br> &#187; python_analysis(ClusteringCallGraph.py) &rarr; clustering_using_scipy(ClusteringCallGraph.py) &rarr; labeling_cluster(DocumentNodes.py) . <br> &#187; python_analysis(ClusteringCallGraph.py) &rarr; clustering_using_scipy(ClusteringCallGraph.py) &rarr; labeling_cluster(DocumentNodes.py) &rarr; topic_model_lsi(DocumentNodes.py) . <br> &#187; python_analysis(ClusteringCallGraph.py) &rarr; clustering_using_scipy(ClusteringCallGraph.py) &rarr; topic_model_lsi(DocumentNodes.py) . <br> &#187; python_analysis(ClusteringCallGraph.py) &rarr; labeling_cluster(DocumentNodes.py) &rarr; topic_model_lsi(DocumentNodes.py) . <br> &#187; python_analysis(ClusteringCallGraph.py) &rarr; clustering_using_scipy(ClusteringCallGraph.py) &rarr; labeling_cluster(DocumentNodes.py) &rarr; topic_model_lsi(DocumentNodes.py) &rarr; prepare_text_for_lda(DocumentNodes.py) . <br> &#187; python_analysis(ClusteringCallGraph.py) &rarr; clustering_using_scipy(ClusteringCallGraph.py) &rarr; prepare_text_for_lda(DocumentNodes.py) . <br> &#187; python_analysis(ClusteringCallGraph.py) &rarr; clustering_using_scipy(ClusteringCallGraph.py) &rarr; topic_model_lsi(DocumentNodes.py) &rarr; prepare_text_for_lda(DocumentNodes.py) . <br> &#187; python_analysis(ClusteringCallGraph.py) &rarr; labeling_cluster(DocumentNodes.py) &rarr; prepare_text_for_lda(DocumentNodes.py) . <br> &#187; python_analysis(ClusteringCallGraph.py) &rarr; labeling_cluster(DocumentNodes.py) &rarr; topic_model_lsi(DocumentNodes.py) &rarr; prepare_text_for_lda(DocumentNodes.py) . <br>', 'text_summary': 'analyzing python programs to build cluster tree of execution paths. Making documents using execution paths of a cluster for topic model method variant. Making documents using execution paths of a cluster for topic model word variant. LSI algorithm for both method and word variant. formatting topic model outputs.', 'files_count': 2, 'files': ['ClusteringCallGraph.py', 'DocumentNodes.py'], 'execution_path_count': 6, 'function_id_to_name_file': {'19': 'python_analysis(ClusteringCallGraph.py)', '12': 'clustering_using_scipy(ClusteringCallGraph.py)', '31': 'labeling_cluster(DocumentNodes.py)', '45': 'topic_model_lsi(DocumentNodes.py)', '39': 'prepare_text_for_lda(DocumentNodes.py)', '43': 'tokenize(DocumentNodes.py)', '28': 'get_lemma(DocumentNodes.py)', '24': '__init__(DocumentNodes.py)', '30': 'initalize_sheet(DocumentNodes.py)', '35': 'make_documents_for_a_cluster_tm_word(DocumentNodes.py)', '36': 'merge_words_as_sentence(DocumentNodes.py)', '34': 'make_documents_for_a_cluster_tm_method(DocumentNodes.py)', '46': 'topic_model_output(DocumentNodes.py)'}}, {'key': 75, 'parent': 76, 'tfidf_word': 'node id mining init initalize name model topic lda pattern ', 'tfidf_method': 'make_documents_for_a_cluster_tm_word execution_path_to_sentence mining_sequential_patterns count_files_in_node remove_similar_patterns summarize_clusters_using_docstring __init__ tokenize initalize_sheet topic_model_output ', 'lda_word': ' cluster,scipy,python,clustering,label,', 'lda_method': ' labeling_cluster,clustering_using_scipy,python_analysis,topic_model_lda,tf_idf_score_for_scipy_cluster,', 'lsi_word': ' cluster,scipy,using,python,clustering,', 'lsi_method': ' clustering_using_scipy,python_analysis,labeling_cluster,topic_model_lda,tf_idf_score_for_scipy_cluster,', 'spm_method': '  &#187; python_analysis(ClusteringCallGraph.py) &rarr; clustering_using_scipy(ClusteringCallGraph.py) &rarr; labeling_cluster(DocumentNodes.py) . <br> &#187; clustering_using_scipy(ClusteringCallGraph.py) &rarr; labeling_cluster(DocumentNodes.py) &rarr; topic_model_lda(DocumentNodes.py) . <br> &#187; python_analysis(ClusteringCallGraph.py) &rarr; clustering_using_scipy(ClusteringCallGraph.py) &rarr; labeling_cluster(DocumentNodes.py) &rarr; topic_model_lda(DocumentNodes.py) . <br> &#187; python_analysis(ClusteringCallGraph.py) &rarr; clustering_using_scipy(ClusteringCallGraph.py) &rarr; topic_model_lda(DocumentNodes.py) . <br> &#187; python_analysis(ClusteringCallGraph.py) &rarr; labeling_cluster(DocumentNodes.py) &rarr; topic_model_lda(DocumentNodes.py) . <br> &#187; clustering_using_scipy(ClusteringCallGraph.py) &rarr; labeling_cluster(DocumentNodes.py) &rarr; tf_idf_score_for_scipy_cluster(DocumentNodes.py) . <br> &#187; python_analysis(ClusteringCallGraph.py) &rarr; clustering_using_scipy(ClusteringCallGraph.py) &rarr; labeling_cluster(DocumentNodes.py) &rarr; tf_idf_score_for_scipy_cluster(DocumentNodes.py) . <br> &#187; python_analysis(ClusteringCallGraph.py) &rarr; clustering_using_scipy(ClusteringCallGraph.py) &rarr; tf_idf_score_for_scipy_cluster(DocumentNodes.py) . <br> &#187; python_analysis(ClusteringCallGraph.py) &rarr; labeling_cluster(DocumentNodes.py) &rarr; tf_idf_score_for_scipy_cluster(DocumentNodes.py) . <br> &#187; python_analysis(ClusteringCallGraph.py) &rarr; labeling_cluster(DocumentNodes.py) &rarr; merge_words_as_sentence(DocumentNodes.py) . <br>', 'text_summary': 'automatic text summarization for docstring of function names. This function takes execution paths of a cluster. Making documents using execution paths of a cluster for tfidf word variant. Then creates a printable string with execution paths with function names. Tfidf score calculation for a scipy cluster. clustering execution paths using scipy. Making documents using execution paths of a cluster for topic model method variant. Making documents using execution paths of a cluster for tfidf method variant. Making documents using execution paths of a cluster for topic model word variant. LDA algorithm for method and word variants. This function mines sequential patterns from execution paths. formatting topic model outputs.', 'files_count': 2, 'files': ['ClusteringCallGraph.py', 'DocumentNodes.py'], 'execution_path_count': 15, 'function_id_to_name_file': {'19': 'python_analysis(ClusteringCallGraph.py)', '12': 'clustering_using_scipy(ClusteringCallGraph.py)', '31': 'labeling_cluster(DocumentNodes.py)', '44': 'topic_model_lda(DocumentNodes.py)', '39': 'prepare_text_for_lda(DocumentNodes.py)', '43': 'tokenize(DocumentNodes.py)', '28': 'get_lemma(DocumentNodes.py)', '24': '__init__(DocumentNodes.py)', '30': 'initalize_sheet(DocumentNodes.py)', '35': 'make_documents_for_a_cluster_tm_word(DocumentNodes.py)', '36': 'merge_words_as_sentence(DocumentNodes.py)', '34': 'make_documents_for_a_cluster_tm_method(DocumentNodes.py)', '46': 'topic_model_output(DocumentNodes.py)', '42': 'tf_idf_score_for_scipy_cluster(DocumentNodes.py)', '33': 'make_documents_for_a_cluster_tfidf_word(DocumentNodes.py)', '32': 'make_documents_for_a_cluster_tfidf_method(DocumentNodes.py)', '37': 'mining_sequential_patterns(DocumentNodes.py)', '40': 'remove_similar_patterns(DocumentNodes.py)', '41': 'summarize_clusters_using_docstring(DocumentNodes.py)', '25': 'count_files_in_node(DocumentNodes.py)', '27': 'function_id_to_file_name_of_execution_path(DocumentNodes.py)', '26': 'execution_path_to_sentence(DocumentNodes.py)'}}, {'key': 36, 'parent': 61, 'tfidf_word': 'EP: 36, Name: get_function_to_comment_ratio &rarr; get_all_method_docstring_pair_of_a_project &rarr; file_to_function_docstring_pair &rarr; process_docstring', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 37, 'parent': 61, 'tfidf_word': 'EP: 37, Name: get_function_to_comment_ratio &rarr; get_all_method_docstring_pair_of_a_project &rarr; get_all_py_files', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 70, 'parent': 74, 'tfidf_word': 'relate id data total overlap initalize graph ep loc count ', 'tfidf_method': 'python_analysis remove_redundant_ep PlayingWithAST count_comment_loc_for_repo random_sample_execution_paths check_ep_overlap_from_start id_to_sentence initalize_graph_related_data_structures count_total_loc ', 'lda_word': ' loc,count,repo,comment,total,', 'lda_method': ' python_analysis,playingwithast,random_sample_execution_paths,count_comment_loc_for_repo,remove_redundant_ep,', 'lsi_word': ' count,loc,comment,repo,total,', 'lsi_method': ' python_analysis,random_sample_execution_paths,playingwithast,id_to_sentence,initalize_graph_related_data_structures,', 'spm_method': ' ', 'text_summary': 'this function removes redundant execution paths from list of execution paths. This function checks whether 2nd list is a sublist starting from start of 1st list. Returns printable sentence of a execution path.', 'files_count': 5, 'files': ['mine_repositories_with_comment_and_loc.py', 'PlayingWithAST.py', 'ClusteringCallGraph.py', 'util.py', 'DocumentNodes.py'], 'execution_path_count': 8, 'function_id_to_name_file': {'58': 'count_comment_loc_for_repo(mine_repositories_with_comment_and_loc.py)', '47': 'PlayingWithAST(PlayingWithAST.py)', '59': 'count_total_loc(mine_repositories_with_comment_and_loc.py)', '20': 'remove_redundant_ep(ClusteringCallGraph.py)', '67': 'random_sample_execution_paths(util.py)', '19': 'python_analysis(ClusteringCallGraph.py)', '17': 'id_to_sentence(ClusteringCallGraph.py)', '11': 'check_ep_overlap_from_start(ClusteringCallGraph.py)', '29': 'initalize_graph_related_data_structures(DocumentNodes.py)'}}, {'key': 73, 'parent': 74, 'tfidf_word': 'graph function exit clustering call ast tgf with path execution ', 'tfidf_method': 'python_analysis extract_function_name extracting_execution_paths extracting_source_and_exit_node tgf_to_networkX PlayingWithAST random_sample_execution_paths ClusteringCallGraph ', 'lda_word': ' extract,python,analysis,source,execution,', 'lda_method': ' python_analysis,clusteringcallgraph,extracting_source_and_exit_node,extract_function_name,random_sample_execution_paths,', 'lsi_word': ' execution,path,python,extract,analysis,', 'lsi_method': ' python_analysis,random_sample_execution_paths,extract_function_name,tgf_to_networkx,extracting_execution_paths,', 'spm_method': '  &#187; python_analysis(ClusteringCallGraph.py) &rarr; extracting_execution_paths(ClusteringCallGraph.py) &rarr; random_sample_execution_paths(util.py) . <br> &#187; python_analysis(ClusteringCallGraph.py) &rarr; tgf_to_networkX(ClusteringCallGraph.py) &rarr; extract_function_name(ClusteringCallGraph.py) . <br>', 'text_summary': 'converting tgf file to a networkX graph. Extracting execution paths from networkX call graph.', 'files_count': 3, 'files': ['ClusteringCallGraph.py', 'util.py', 'PlayingWithAST.py'], 'execution_path_count': 4, 'function_id_to_name_file': {'19': 'python_analysis(ClusteringCallGraph.py)', '15': 'extracting_execution_paths(ClusteringCallGraph.py)', '67': 'random_sample_execution_paths(util.py)', '16': 'extracting_source_and_exit_node(ClusteringCallGraph.py)', '8': 'ClusteringCallGraph(ClusteringCallGraph.py)', '47': 'PlayingWithAST(PlayingWithAST.py)', '22': 'tgf_to_networkX(ClusteringCallGraph.py)', '14': 'extract_function_name(ClusteringCallGraph.py)'}}, {'key': 11, 'parent': 59, 'tfidf_word': 'EP: 11, Name: python_analysis &rarr; clustering_using_scipy &rarr; bfs_with_parent', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 58, 'parent': 59, 'tfidf_word': 'scipy using execution leaf node path pretty print random sample ', 'tfidf_method': 'clustering_using_scipy python_analysis pretty_print_leaf_node random_sample_execution_paths ', 'lda_word': ' python,using,scipy,clustering,analysis,', 'lda_method': ' clustering_using_scipy,python_analysis,random_sample_execution_paths,pretty_print_leaf_node,', 'lsi_word': ' clustering,python,scipy,using,analysis,', 'lsi_method': ' python_analysis,clustering_using_scipy,pretty_print_leaf_node,random_sample_execution_paths,', 'spm_method': '  &#187; python_analysis(ClusteringCallGraph.py) &rarr; clustering_using_scipy(ClusteringCallGraph.py) &rarr; pretty_print_leaf_node(ClusteringCallGraph.py) . <br> &#187; python_analysis(ClusteringCallGraph.py) &rarr; clustering_using_scipy(ClusteringCallGraph.py) &rarr; random_sample_execution_paths(util.py) . <br>', 'text_summary': 'Returns printable sentence of a execution path. clustering execution paths using scipy.', 'files_count': 2, 'files': ['ClusteringCallGraph.py', 'util.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'19': 'python_analysis(ClusteringCallGraph.py)', '12': 'clustering_using_scipy(ClusteringCallGraph.py)', '18': 'pretty_print_leaf_node(ClusteringCallGraph.py)', '67': 'random_sample_execution_paths(util.py)'}}, {'key': 43, 'parent': 56, 'tfidf_word': 'model prepare python scipy text topic using get lemma tokenize ', 'tfidf_method': 'clustering_using_scipy python_analysis labeling_cluster prepare_text_for_lda topic_model_lsi get_lemma tokenize ', 'lda_word': ' prepare,using,scipy,text,python,', 'lda_method': ' labeling_cluster,topic_model_lsi,prepare_text_for_lda,clustering_using_scipy,python_analysis,', 'lsi_word': ' analysis,lsi,clustering,using,scipy,', 'lsi_method': ' labeling_cluster,python_analysis,clustering_using_scipy,prepare_text_for_lda,topic_model_lsi,', 'spm_method': '  &#187; python_analysis(ClusteringCallGraph.py) &rarr; clustering_using_scipy(ClusteringCallGraph.py) &rarr; labeling_cluster(DocumentNodes.py) . <br> &#187; python_analysis(ClusteringCallGraph.py) &rarr; clustering_using_scipy(ClusteringCallGraph.py) &rarr; labeling_cluster(DocumentNodes.py) &rarr; prepare_text_for_lda(DocumentNodes.py) . <br> &#187; python_analysis(ClusteringCallGraph.py) &rarr; clustering_using_scipy(ClusteringCallGraph.py) &rarr; labeling_cluster(DocumentNodes.py) &rarr; topic_model_lsi(DocumentNodes.py) . <br> &#187; python_analysis(ClusteringCallGraph.py) &rarr; clustering_using_scipy(ClusteringCallGraph.py) &rarr; labeling_cluster(DocumentNodes.py) &rarr; topic_model_lsi(DocumentNodes.py) &rarr; prepare_text_for_lda(DocumentNodes.py) . <br> &#187; python_analysis(ClusteringCallGraph.py) &rarr; clustering_using_scipy(ClusteringCallGraph.py) &rarr; prepare_text_for_lda(DocumentNodes.py) . <br> &#187; python_analysis(ClusteringCallGraph.py) &rarr; clustering_using_scipy(ClusteringCallGraph.py) &rarr; topic_model_lsi(DocumentNodes.py) . <br> &#187; python_analysis(ClusteringCallGraph.py) &rarr; clustering_using_scipy(ClusteringCallGraph.py) &rarr; topic_model_lsi(DocumentNodes.py) &rarr; prepare_text_for_lda(DocumentNodes.py) . <br> &#187; python_analysis(ClusteringCallGraph.py) &rarr; labeling_cluster(DocumentNodes.py) &rarr; prepare_text_for_lda(DocumentNodes.py) . <br> &#187; python_analysis(ClusteringCallGraph.py) &rarr; labeling_cluster(DocumentNodes.py) &rarr; topic_model_lsi(DocumentNodes.py) . <br> &#187; python_analysis(ClusteringCallGraph.py) &rarr; labeling_cluster(DocumentNodes.py) &rarr; topic_model_lsi(DocumentNodes.py) &rarr; prepare_text_for_lda(DocumentNodes.py) . <br>', 'text_summary': 'clustering execution paths using scipy. analyzing python programs to build cluster tree of execution paths.', 'files_count': 2, 'files': ['ClusteringCallGraph.py', 'DocumentNodes.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'19': 'python_analysis(ClusteringCallGraph.py)', '12': 'clustering_using_scipy(ClusteringCallGraph.py)', '31': 'labeling_cluster(DocumentNodes.py)', '45': 'topic_model_lsi(DocumentNodes.py)', '39': 'prepare_text_for_lda(DocumentNodes.py)', '43': 'tokenize(DocumentNodes.py)', '28': 'get_lemma(DocumentNodes.py)'}}, {'key': 53, 'parent': 56, 'tfidf_word': 'model sheet sentence method word merge initalize init output words ', 'tfidf_method': 'clustering_using_scipy python_analysis labeling_cluster topic_model_lsi __init__ initalize_sheet make_documents_for_a_cluster_tm_method make_documents_for_a_cluster_tm_word merge_words_as_sentence topic_model_output ', 'lda_word': ' model,cluster,label,clustering,using,', 'lda_method': ' clustering_using_scipy,python_analysis,topic_model_lsi,labeling_cluster,topic_model_output,', 'lsi_word': ' cluster,model,topic,python,lsi,', 'lsi_method': ' clustering_using_scipy,labeling_cluster,python_analysis,topic_model_lsi,initalize_sheet,', 'spm_method': '  &#187; clustering_using_scipy(ClusteringCallGraph.py) &rarr; labeling_cluster(DocumentNodes.py) &rarr; topic_model_lsi(DocumentNodes.py) . <br> &#187; python_analysis(ClusteringCallGraph.py) &rarr; clustering_using_scipy(ClusteringCallGraph.py) &rarr; labeling_cluster(DocumentNodes.py) . <br> &#187; python_analysis(ClusteringCallGraph.py) &rarr; clustering_using_scipy(ClusteringCallGraph.py) &rarr; labeling_cluster(DocumentNodes.py) &rarr; topic_model_lsi(DocumentNodes.py) . <br> &#187; python_analysis(ClusteringCallGraph.py) &rarr; clustering_using_scipy(ClusteringCallGraph.py) &rarr; topic_model_lsi(DocumentNodes.py) . <br> &#187; python_analysis(ClusteringCallGraph.py) &rarr; labeling_cluster(DocumentNodes.py) &rarr; topic_model_lsi(DocumentNodes.py) . <br> &#187; python_analysis(ClusteringCallGraph.py) &rarr; clustering_using_scipy(ClusteringCallGraph.py) &rarr; labeling_cluster(DocumentNodes.py) &rarr; topic_model_lsi(DocumentNodes.py) &rarr; make_documents_for_a_cluster_tm_method(DocumentNodes.py) . <br> &#187; python_analysis(ClusteringCallGraph.py) &rarr; clustering_using_scipy(ClusteringCallGraph.py) &rarr; labeling_cluster(DocumentNodes.py) &rarr; topic_model_lsi(DocumentNodes.py) &rarr; make_documents_for_a_cluster_tm_word(DocumentNodes.py) . <br> &#187; python_analysis(ClusteringCallGraph.py) &rarr; clustering_using_scipy(ClusteringCallGraph.py) &rarr; labeling_cluster(DocumentNodes.py) &rarr; topic_model_lsi(DocumentNodes.py) &rarr; make_documents_for_a_cluster_tm_word(DocumentNodes.py) &rarr; merge_words_as_sentence(DocumentNodes.py) . <br> &#187; python_analysis(ClusteringCallGraph.py) &rarr; clustering_using_scipy(ClusteringCallGraph.py) &rarr; labeling_cluster(DocumentNodes.py) &rarr; topic_model_lsi(DocumentNodes.py) &rarr; merge_words_as_sentence(DocumentNodes.py) . <br> &#187; python_analysis(ClusteringCallGraph.py) &rarr; clustering_using_scipy(ClusteringCallGraph.py) &rarr; labeling_cluster(DocumentNodes.py) &rarr; topic_model_lsi(DocumentNodes.py) &rarr; topic_model_output(DocumentNodes.py) . <br>', 'text_summary': 'Making documents using execution paths of a cluster for topic model method variant. LSI algorithm for both method and word variant. Making documents using execution paths of a cluster for topic model word variant. formatting topic model outputs.', 'files_count': 2, 'files': ['ClusteringCallGraph.py', 'DocumentNodes.py'], 'execution_path_count': 4, 'function_id_to_name_file': {'19': 'python_analysis(ClusteringCallGraph.py)', '12': 'clustering_using_scipy(ClusteringCallGraph.py)', '31': 'labeling_cluster(DocumentNodes.py)', '45': 'topic_model_lsi(DocumentNodes.py)', '24': '__init__(DocumentNodes.py)', '30': 'initalize_sheet(DocumentNodes.py)', '35': 'make_documents_for_a_cluster_tm_word(DocumentNodes.py)', '36': 'merge_words_as_sentence(DocumentNodes.py)', '34': 'make_documents_for_a_cluster_tm_method(DocumentNodes.py)', '46': 'topic_model_output(DocumentNodes.py)'}}, {'key': 55, 'parent': 75, 'tfidf_word': 'sheet get initalize init output word method merge sentence words ', 'tfidf_method': 'topic_model_lda prepare_text_for_lda __init__ get_lemma initalize_sheet make_documents_for_a_cluster_tm_method make_documents_for_a_cluster_tm_word merge_words_as_sentence tokenize topic_model_output ', 'lda_word': ' lda,model,topic,scipy,clustering,', 'lda_method': ' topic_model_lda,clustering_using_scipy,python_analysis,labeling_cluster,topic_model_output,', 'lsi_word': ' cluster,lda,model,topic,analysis,', 'lsi_method': ' clustering_using_scipy,topic_model_lda,labeling_cluster,python_analysis,prepare_text_for_lda,', 'spm_method': '  &#187; clustering_using_scipy(ClusteringCallGraph.py) &rarr; labeling_cluster(DocumentNodes.py) &rarr; topic_model_lda(DocumentNodes.py) . <br> &#187; python_analysis(ClusteringCallGraph.py) &rarr; clustering_using_scipy(ClusteringCallGraph.py) &rarr; labeling_cluster(DocumentNodes.py) . <br> &#187; python_analysis(ClusteringCallGraph.py) &rarr; clustering_using_scipy(ClusteringCallGraph.py) &rarr; labeling_cluster(DocumentNodes.py) &rarr; topic_model_lda(DocumentNodes.py) . <br> &#187; python_analysis(ClusteringCallGraph.py) &rarr; clustering_using_scipy(ClusteringCallGraph.py) &rarr; topic_model_lda(DocumentNodes.py) . <br> &#187; python_analysis(ClusteringCallGraph.py) &rarr; labeling_cluster(DocumentNodes.py) &rarr; topic_model_lda(DocumentNodes.py) . <br> &#187; python_analysis(ClusteringCallGraph.py) &rarr; clustering_using_scipy(ClusteringCallGraph.py) &rarr; labeling_cluster(DocumentNodes.py) &rarr; topic_model_lda(DocumentNodes.py) &rarr; prepare_text_for_lda(DocumentNodes.py) . <br> &#187; python_analysis(ClusteringCallGraph.py) &rarr; clustering_using_scipy(ClusteringCallGraph.py) &rarr; prepare_text_for_lda(DocumentNodes.py) . <br> &#187; python_analysis(ClusteringCallGraph.py) &rarr; clustering_using_scipy(ClusteringCallGraph.py) &rarr; topic_model_lda(DocumentNodes.py) &rarr; prepare_text_for_lda(DocumentNodes.py) . <br> &#187; python_analysis(ClusteringCallGraph.py) &rarr; labeling_cluster(DocumentNodes.py) &rarr; prepare_text_for_lda(DocumentNodes.py) . <br> &#187; python_analysis(ClusteringCallGraph.py) &rarr; labeling_cluster(DocumentNodes.py) &rarr; topic_model_lda(DocumentNodes.py) &rarr; prepare_text_for_lda(DocumentNodes.py) . <br>', 'text_summary': 'clustering execution paths using scipy. Making documents using execution paths of a cluster for topic model method variant. Making documents using execution paths of a cluster for topic model word variant. LDA algorithm for method and word variants. formatting topic model outputs.', 'files_count': 2, 'files': ['ClusteringCallGraph.py', 'DocumentNodes.py'], 'execution_path_count': 6, 'function_id_to_name_file': {'19': 'python_analysis(ClusteringCallGraph.py)', '12': 'clustering_using_scipy(ClusteringCallGraph.py)', '31': 'labeling_cluster(DocumentNodes.py)', '44': 'topic_model_lda(DocumentNodes.py)', '39': 'prepare_text_for_lda(DocumentNodes.py)', '43': 'tokenize(DocumentNodes.py)', '28': 'get_lemma(DocumentNodes.py)', '24': '__init__(DocumentNodes.py)', '30': 'initalize_sheet(DocumentNodes.py)', '35': 'make_documents_for_a_cluster_tm_word(DocumentNodes.py)', '36': 'merge_words_as_sentence(DocumentNodes.py)', '34': 'make_documents_for_a_cluster_tm_method(DocumentNodes.py)', '46': 'topic_model_output(DocumentNodes.py)'}}, {'key': 63, 'parent': 75, 'tfidf_word': 'method remove get id node name lemma function mining pattern ', 'tfidf_method': 'make_documents_for_a_cluster_tfidf_word merge_words_as_sentence count_files_in_node execution_path_to_sentence function_id_to_file_name_of_execution_path get_lemma make_documents_for_a_cluster_tfidf_method mining_sequential_patterns remove_similar_patterns summarize_clusters_using_docstring ', 'lda_word': ' sentence,path,execution,python,clustering,', 'lda_method': ' remove_similar_patterns,clustering_using_scipy,mining_sequential_patterns,labeling_cluster,python_analysis,', 'lsi_word': ' cluster,scipy,using,python,clustering,', 'lsi_method': ' clustering_using_scipy,labeling_cluster,python_analysis,tf_idf_score_for_scipy_cluster,make_documents_for_a_cluster_tfidf_word,', 'spm_method': '  &#187; python_analysis(ClusteringCallGraph.py) &rarr; clustering_using_scipy(ClusteringCallGraph.py) &rarr; labeling_cluster(DocumentNodes.py) . <br> &#187; clustering_using_scipy(ClusteringCallGraph.py) &rarr; labeling_cluster(DocumentNodes.py) &rarr; tf_idf_score_for_scipy_cluster(DocumentNodes.py) . <br> &#187; python_analysis(ClusteringCallGraph.py) &rarr; clustering_using_scipy(ClusteringCallGraph.py) &rarr; labeling_cluster(DocumentNodes.py) &rarr; tf_idf_score_for_scipy_cluster(DocumentNodes.py) . <br> &#187; python_analysis(ClusteringCallGraph.py) &rarr; clustering_using_scipy(ClusteringCallGraph.py) &rarr; tf_idf_score_for_scipy_cluster(DocumentNodes.py) . <br> &#187; python_analysis(ClusteringCallGraph.py) &rarr; labeling_cluster(DocumentNodes.py) &rarr; tf_idf_score_for_scipy_cluster(DocumentNodes.py) . <br> &#187; python_analysis(ClusteringCallGraph.py) &rarr; clustering_using_scipy(ClusteringCallGraph.py) &rarr; labeling_cluster(DocumentNodes.py) &rarr; tf_idf_score_for_scipy_cluster(DocumentNodes.py) &rarr; make_documents_for_a_cluster_tfidf_word(DocumentNodes.py) . <br> &#187; python_analysis(ClusteringCallGraph.py) &rarr; clustering_using_scipy(ClusteringCallGraph.py) &rarr; labeling_cluster(DocumentNodes.py) &rarr; tf_idf_score_for_scipy_cluster(DocumentNodes.py) &rarr; merge_words_as_sentence(DocumentNodes.py) . <br> &#187; python_analysis(ClusteringCallGraph.py) &rarr; clustering_using_scipy(ClusteringCallGraph.py) &rarr; make_documents_for_a_cluster_tfidf_word(DocumentNodes.py) . <br> &#187; python_analysis(ClusteringCallGraph.py) &rarr; clustering_using_scipy(ClusteringCallGraph.py) &rarr; tf_idf_score_for_scipy_cluster(DocumentNodes.py) &rarr; make_documents_for_a_cluster_tfidf_word(DocumentNodes.py) . <br> &#187; python_analysis(ClusteringCallGraph.py) &rarr; clustering_using_scipy(ClusteringCallGraph.py) &rarr; tf_idf_score_for_scipy_cluster(DocumentNodes.py) &rarr; merge_words_as_sentence(DocumentNodes.py) . <br>', 'text_summary': 'This function takes execution paths of a cluster. Making documents using execution paths of a cluster for tfidf word variant. clustering execution paths using scipy. Making documents using execution paths of a cluster for tfidf method variant. This function mines sequential patterns from execution paths.', 'files_count': 2, 'files': ['ClusteringCallGraph.py', 'DocumentNodes.py'], 'execution_path_count': 9, 'function_id_to_name_file': {'19': 'python_analysis(ClusteringCallGraph.py)', '12': 'clustering_using_scipy(ClusteringCallGraph.py)', '31': 'labeling_cluster(DocumentNodes.py)', '42': 'tf_idf_score_for_scipy_cluster(DocumentNodes.py)', '33': 'make_documents_for_a_cluster_tfidf_word(DocumentNodes.py)', '28': 'get_lemma(DocumentNodes.py)', '36': 'merge_words_as_sentence(DocumentNodes.py)', '32': 'make_documents_for_a_cluster_tfidf_method(DocumentNodes.py)', '37': 'mining_sequential_patterns(DocumentNodes.py)', '40': 'remove_similar_patterns(DocumentNodes.py)', '41': 'summarize_clusters_using_docstring(DocumentNodes.py)', '25': 'count_files_in_node(DocumentNodes.py)', '27': 'function_id_to_file_name_of_execution_path(DocumentNodes.py)', '26': 'execution_path_to_sentence(DocumentNodes.py)'}}, {'key': 39, 'parent': 70, 'tfidf_word': 'EP: 39, Name: count_comment_loc_for_repo &rarr; PlayingWithAST', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 69, 'parent': 70, 'tfidf_word': 'data playing total overlap initalize id with ep loc count ', 'tfidf_method': 'python_analysis remove_redundant_ep random_sample_execution_paths check_ep_overlap_from_start id_to_sentence initalize_graph_related_data_structures PlayingWithAST count_comment_loc_for_repo count_total_loc ', 'lda_word': ' analysis,python,ep,remove,random,', 'lda_method': ' python_analysis,playingwithast,id_to_sentence,initalize_graph_related_data_structures,remove_redundant_ep,', 'lsi_word': ' ep,redundant,remove,python,analysis,', 'lsi_method': ' python_analysis,random_sample_execution_paths,initalize_graph_related_data_structures,playingwithast,id_to_sentence,', 'spm_method': ' ', 'text_summary': 'this function removes redundant execution paths from list of execution paths. This function checks whether 2nd list is a sublist starting from start of 1st list. Returns printable sentence of a execution path.', 'files_count': 5, 'files': ['mine_repositories_with_comment_and_loc.py', 'ClusteringCallGraph.py', 'util.py', 'PlayingWithAST.py', 'DocumentNodes.py'], 'execution_path_count': 7, 'function_id_to_name_file': {'58': 'count_comment_loc_for_repo(mine_repositories_with_comment_and_loc.py)', '59': 'count_total_loc(mine_repositories_with_comment_and_loc.py)', '20': 'remove_redundant_ep(ClusteringCallGraph.py)', '67': 'random_sample_execution_paths(util.py)', '19': 'python_analysis(ClusteringCallGraph.py)', '17': 'id_to_sentence(ClusteringCallGraph.py)', '11': 'check_ep_overlap_from_start(ClusteringCallGraph.py)', '47': 'PlayingWithAST(PlayingWithAST.py)', '29': 'initalize_graph_related_data_structures(DocumentNodes.py)'}}, {'key': 4, 'parent': 73, 'tfidf_word': 'EP: 4, Name: python_analysis &rarr; extracting_execution_paths &rarr; random_sample_execution_paths', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 72, 'parent': 73, 'tfidf_word': 'exit function graph name networkx node playing source tgf with ', 'tfidf_method': 'python_analysis extract_function_name extracting_source_and_exit_node tgf_to_networkX PlayingWithAST ClusteringCallGraph ', 'lda_word': ' analysis,extract,python,ast,playing,', 'lda_method': ' python_analysis,playingwithast,clusteringcallgraph,extracting_source_and_exit_node,extract_function_name,', 'lsi_word': ' analysis,extract,python,name,networkx,', 'lsi_method': ' python_analysis,tgf_to_networkx,extract_function_name,extracting_source_and_exit_node,playingwithast,', 'spm_method': '  &#187; python_analysis(ClusteringCallGraph.py) &rarr; tgf_to_networkX(ClusteringCallGraph.py) &rarr; extract_function_name(ClusteringCallGraph.py) . <br>', 'text_summary': 'converting tgf file to a networkX graph.', 'files_count': 2, 'files': ['ClusteringCallGraph.py', 'PlayingWithAST.py'], 'execution_path_count': 3, 'function_id_to_name_file': {'19': 'python_analysis(ClusteringCallGraph.py)', '16': 'extracting_source_and_exit_node(ClusteringCallGraph.py)', '8': 'ClusteringCallGraph(ClusteringCallGraph.py)', '47': 'PlayingWithAST(PlayingWithAST.py)', '22': 'tgf_to_networkX(ClusteringCallGraph.py)', '14': 'extract_function_name(ClusteringCallGraph.py)'}}, {'key': 9, 'parent': 58, 'tfidf_word': 'EP: 9, Name: python_analysis &rarr; clustering_using_scipy &rarr; pretty_print_leaf_node', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 10, 'parent': 58, 'tfidf_word': 'EP: 10, Name: python_analysis &rarr; clustering_using_scipy &rarr; random_sample_execution_paths', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 26, 'parent': 43, 'tfidf_word': 'EP: 26, Name: python_analysis &rarr; clustering_using_scipy &rarr; labeling_cluster &rarr; topic_model_lsi &rarr; prepare_text_for_lda &rarr; tokenize', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 27, 'parent': 43, 'tfidf_word': 'EP: 27, Name: python_analysis &rarr; clustering_using_scipy &rarr; labeling_cluster &rarr; topic_model_lsi &rarr; prepare_text_for_lda &rarr; get_lemma', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 30, 'parent': 53, 'tfidf_word': 'EP: 30, Name: python_analysis &rarr; clustering_using_scipy &rarr; labeling_cluster &rarr; topic_model_lsi &rarr; __init__ &rarr; initalize_sheet', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 51, 'parent': 53, 'tfidf_word': 'tm topic model cluster word sentence method merge output words ', 'tfidf_method': 'clustering_using_scipy python_analysis labeling_cluster topic_model_lsi make_documents_for_a_cluster_tm_method make_documents_for_a_cluster_tm_word merge_words_as_sentence topic_model_output ', 'lda_word': ' topic,lsi,clustering,model,output,', 'lda_method': ' make_documents_for_a_cluster_tm_word,merge_words_as_sentence,clustering_using_scipy,topic_model_lsi,python_analysis,', 'lsi_word': ' cluster,topic,model,scipy,lsi,', 'lsi_method': ' topic_model_lsi,labeling_cluster,python_analysis,clustering_using_scipy,make_documents_for_a_cluster_tm_word,', 'spm_method': '  &#187; clustering_using_scipy(ClusteringCallGraph.py) &rarr; labeling_cluster(DocumentNodes.py) &rarr; topic_model_lsi(DocumentNodes.py) . <br> &#187; python_analysis(ClusteringCallGraph.py) &rarr; clustering_using_scipy(ClusteringCallGraph.py) &rarr; labeling_cluster(DocumentNodes.py) . <br> &#187; python_analysis(ClusteringCallGraph.py) &rarr; clustering_using_scipy(ClusteringCallGraph.py) &rarr; labeling_cluster(DocumentNodes.py) &rarr; topic_model_lsi(DocumentNodes.py) . <br> &#187; python_analysis(ClusteringCallGraph.py) &rarr; clustering_using_scipy(ClusteringCallGraph.py) &rarr; topic_model_lsi(DocumentNodes.py) . <br> &#187; python_analysis(ClusteringCallGraph.py) &rarr; labeling_cluster(DocumentNodes.py) &rarr; topic_model_lsi(DocumentNodes.py) . <br> &#187; python_analysis(ClusteringCallGraph.py) &rarr; clustering_using_scipy(ClusteringCallGraph.py) &rarr; labeling_cluster(DocumentNodes.py) &rarr; topic_model_lsi(DocumentNodes.py) &rarr; make_documents_for_a_cluster_tm_method(DocumentNodes.py) . <br> &#187; python_analysis(ClusteringCallGraph.py) &rarr; clustering_using_scipy(ClusteringCallGraph.py) &rarr; labeling_cluster(DocumentNodes.py) &rarr; topic_model_lsi(DocumentNodes.py) &rarr; make_documents_for_a_cluster_tm_word(DocumentNodes.py) . <br> &#187; python_analysis(ClusteringCallGraph.py) &rarr; clustering_using_scipy(ClusteringCallGraph.py) &rarr; labeling_cluster(DocumentNodes.py) &rarr; topic_model_lsi(DocumentNodes.py) &rarr; make_documents_for_a_cluster_tm_word(DocumentNodes.py) &rarr; merge_words_as_sentence(DocumentNodes.py) . <br> &#187; python_analysis(ClusteringCallGraph.py) &rarr; clustering_using_scipy(ClusteringCallGraph.py) &rarr; labeling_cluster(DocumentNodes.py) &rarr; topic_model_lsi(DocumentNodes.py) &rarr; merge_words_as_sentence(DocumentNodes.py) . <br> &#187; python_analysis(ClusteringCallGraph.py) &rarr; clustering_using_scipy(ClusteringCallGraph.py) &rarr; labeling_cluster(DocumentNodes.py) &rarr; topic_model_lsi(DocumentNodes.py) &rarr; topic_model_output(DocumentNodes.py) . <br>', 'text_summary': 'Making documents using execution paths of a cluster for topic model method variant. LSI algorithm for both method and word variant. Making documents using execution paths of a cluster for topic model word variant. formatting topic model outputs.', 'files_count': 2, 'files': ['ClusteringCallGraph.py', 'DocumentNodes.py'], 'execution_path_count': 3, 'function_id_to_name_file': {'19': 'python_analysis(ClusteringCallGraph.py)', '12': 'clustering_using_scipy(ClusteringCallGraph.py)', '31': 'labeling_cluster(DocumentNodes.py)', '45': 'topic_model_lsi(DocumentNodes.py)', '35': 'make_documents_for_a_cluster_tm_word(DocumentNodes.py)', '36': 'merge_words_as_sentence(DocumentNodes.py)', '34': 'make_documents_for_a_cluster_tm_method(DocumentNodes.py)', '46': 'topic_model_output(DocumentNodes.py)'}}, {'key': 42, 'parent': 55, 'tfidf_word': 'prepare python scipy text topic using get lemma tokenize lda ', 'tfidf_method': 'clustering_using_scipy python_analysis labeling_cluster prepare_text_for_lda topic_model_lda get_lemma tokenize ', 'lda_word': ' prepare,analysis,lda,cluster,text,', 'lda_method': ' clustering_using_scipy,labeling_cluster,prepare_text_for_lda,topic_model_lda,python_analysis,', 'lsi_word': ' lda,label,analysis,topic,scipy,', 'lsi_method': ' clustering_using_scipy,labeling_cluster,topic_model_lda,python_analysis,prepare_text_for_lda,', 'spm_method': '  &#187; python_analysis(ClusteringCallGraph.py) &rarr; clustering_using_scipy(ClusteringCallGraph.py) &rarr; labeling_cluster(DocumentNodes.py) . <br> &#187; python_analysis(ClusteringCallGraph.py) &rarr; clustering_using_scipy(ClusteringCallGraph.py) &rarr; labeling_cluster(DocumentNodes.py) &rarr; prepare_text_for_lda(DocumentNodes.py) . <br> &#187; python_analysis(ClusteringCallGraph.py) &rarr; clustering_using_scipy(ClusteringCallGraph.py) &rarr; labeling_cluster(DocumentNodes.py) &rarr; topic_model_lda(DocumentNodes.py) . <br> &#187; python_analysis(ClusteringCallGraph.py) &rarr; clustering_using_scipy(ClusteringCallGraph.py) &rarr; labeling_cluster(DocumentNodes.py) &rarr; topic_model_lda(DocumentNodes.py) &rarr; prepare_text_for_lda(DocumentNodes.py) . <br> &#187; python_analysis(ClusteringCallGraph.py) &rarr; clustering_using_scipy(ClusteringCallGraph.py) &rarr; prepare_text_for_lda(DocumentNodes.py) . <br> &#187; python_analysis(ClusteringCallGraph.py) &rarr; clustering_using_scipy(ClusteringCallGraph.py) &rarr; topic_model_lda(DocumentNodes.py) . <br> &#187; python_analysis(ClusteringCallGraph.py) &rarr; clustering_using_scipy(ClusteringCallGraph.py) &rarr; topic_model_lda(DocumentNodes.py) &rarr; prepare_text_for_lda(DocumentNodes.py) . <br> &#187; python_analysis(ClusteringCallGraph.py) &rarr; labeling_cluster(DocumentNodes.py) &rarr; prepare_text_for_lda(DocumentNodes.py) . <br> &#187; python_analysis(ClusteringCallGraph.py) &rarr; labeling_cluster(DocumentNodes.py) &rarr; topic_model_lda(DocumentNodes.py) . <br> &#187; python_analysis(ClusteringCallGraph.py) &rarr; labeling_cluster(DocumentNodes.py) &rarr; topic_model_lda(DocumentNodes.py) &rarr; prepare_text_for_lda(DocumentNodes.py) . <br>', 'text_summary': 'LDA algorithm for method and word variants. clustering execution paths using scipy. analyzing python programs to build cluster tree of execution paths.', 'files_count': 2, 'files': ['ClusteringCallGraph.py', 'DocumentNodes.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'19': 'python_analysis(ClusteringCallGraph.py)', '12': 'clustering_using_scipy(ClusteringCallGraph.py)', '31': 'labeling_cluster(DocumentNodes.py)', '44': 'topic_model_lda(DocumentNodes.py)', '39': 'prepare_text_for_lda(DocumentNodes.py)', '43': 'tokenize(DocumentNodes.py)', '28': 'get_lemma(DocumentNodes.py)'}}, {'key': 52, 'parent': 55, 'tfidf_word': 'model sheet sentence method word merge initalize init output words ', 'tfidf_method': 'clustering_using_scipy python_analysis labeling_cluster topic_model_lda __init__ initalize_sheet make_documents_for_a_cluster_tm_method make_documents_for_a_cluster_tm_word merge_words_as_sentence topic_model_output ', 'lda_word': ' topic,cluster,analysis,label,python,', 'lda_method': ' labeling_cluster,clustering_using_scipy,python_analysis,topic_model_lda,topic_model_output,', 'lsi_word': ' cluster,model,topic,lda,clustering,', 'lsi_method': ' topic_model_lda,python_analysis,clustering_using_scipy,labeling_cluster,initalize_sheet,', 'spm_method': '  &#187; clustering_using_scipy(ClusteringCallGraph.py) &rarr; labeling_cluster(DocumentNodes.py) &rarr; topic_model_lda(DocumentNodes.py) . <br> &#187; python_analysis(ClusteringCallGraph.py) &rarr; clustering_using_scipy(ClusteringCallGraph.py) &rarr; labeling_cluster(DocumentNodes.py) . <br> &#187; python_analysis(ClusteringCallGraph.py) &rarr; clustering_using_scipy(ClusteringCallGraph.py) &rarr; labeling_cluster(DocumentNodes.py) &rarr; topic_model_lda(DocumentNodes.py) . <br> &#187; python_analysis(ClusteringCallGraph.py) &rarr; clustering_using_scipy(ClusteringCallGraph.py) &rarr; topic_model_lda(DocumentNodes.py) . <br> &#187; python_analysis(ClusteringCallGraph.py) &rarr; labeling_cluster(DocumentNodes.py) &rarr; topic_model_lda(DocumentNodes.py) . <br> &#187; python_analysis(ClusteringCallGraph.py) &rarr; clustering_using_scipy(ClusteringCallGraph.py) &rarr; labeling_cluster(DocumentNodes.py) &rarr; topic_model_lda(DocumentNodes.py) &rarr; make_documents_for_a_cluster_tm_method(DocumentNodes.py) . <br> &#187; python_analysis(ClusteringCallGraph.py) &rarr; clustering_using_scipy(ClusteringCallGraph.py) &rarr; labeling_cluster(DocumentNodes.py) &rarr; topic_model_lda(DocumentNodes.py) &rarr; make_documents_for_a_cluster_tm_word(DocumentNodes.py) . <br> &#187; python_analysis(ClusteringCallGraph.py) &rarr; clustering_using_scipy(ClusteringCallGraph.py) &rarr; labeling_cluster(DocumentNodes.py) &rarr; topic_model_lda(DocumentNodes.py) &rarr; make_documents_for_a_cluster_tm_word(DocumentNodes.py) &rarr; merge_words_as_sentence(DocumentNodes.py) . <br> &#187; python_analysis(ClusteringCallGraph.py) &rarr; clustering_using_scipy(ClusteringCallGraph.py) &rarr; labeling_cluster(DocumentNodes.py) &rarr; topic_model_lda(DocumentNodes.py) &rarr; merge_words_as_sentence(DocumentNodes.py) . <br> &#187; python_analysis(ClusteringCallGraph.py) &rarr; clustering_using_scipy(ClusteringCallGraph.py) &rarr; labeling_cluster(DocumentNodes.py) &rarr; topic_model_lda(DocumentNodes.py) &rarr; topic_model_output(DocumentNodes.py) . <br>', 'text_summary': 'Making documents using execution paths of a cluster for topic model method variant. LDA algorithm for method and word variants. Making documents using execution paths of a cluster for topic model word variant. formatting topic model outputs.', 'files_count': 2, 'files': ['ClusteringCallGraph.py', 'DocumentNodes.py'], 'execution_path_count': 4, 'function_id_to_name_file': {'19': 'python_analysis(ClusteringCallGraph.py)', '12': 'clustering_using_scipy(ClusteringCallGraph.py)', '31': 'labeling_cluster(DocumentNodes.py)', '44': 'topic_model_lda(DocumentNodes.py)', '24': '__init__(DocumentNodes.py)', '30': 'initalize_sheet(DocumentNodes.py)', '35': 'make_documents_for_a_cluster_tm_word(DocumentNodes.py)', '36': 'merge_words_as_sentence(DocumentNodes.py)', '34': 'make_documents_for_a_cluster_tm_method(DocumentNodes.py)', '46': 'topic_model_output(DocumentNodes.py)'}}, {'key': 54, 'parent': 63, 'tfidf_word': 'make sentence merge word words scipy method lemma get cluster ', 'tfidf_method': 'clustering_using_scipy python_analysis labeling_cluster tf_idf_score_for_scipy_cluster make_documents_for_a_cluster_tfidf_word merge_words_as_sentence get_lemma make_documents_for_a_cluster_tfidf_method ', 'lda_word': ' cluster,scipy,using,clustering,analysis,', 'lda_method': ' clustering_using_scipy,labeling_cluster,python_analysis,tf_idf_score_for_scipy_cluster,merge_words_as_sentence,', 'lsi_word': ' cluster,scipy,analysis,tf,using,', 'lsi_method': ' clustering_using_scipy,tf_idf_score_for_scipy_cluster,labeling_cluster,python_analysis,make_documents_for_a_cluster_tfidf_word,', 'spm_method': '  &#187; clustering_using_scipy(ClusteringCallGraph.py) &rarr; labeling_cluster(DocumentNodes.py) &rarr; tf_idf_score_for_scipy_cluster(DocumentNodes.py) . <br> &#187; python_analysis(ClusteringCallGraph.py) &rarr; clustering_using_scipy(ClusteringCallGraph.py) &rarr; labeling_cluster(DocumentNodes.py) . <br> &#187; python_analysis(ClusteringCallGraph.py) &rarr; clustering_using_scipy(ClusteringCallGraph.py) &rarr; labeling_cluster(DocumentNodes.py) &rarr; tf_idf_score_for_scipy_cluster(DocumentNodes.py) . <br> &#187; python_analysis(ClusteringCallGraph.py) &rarr; clustering_using_scipy(ClusteringCallGraph.py) &rarr; tf_idf_score_for_scipy_cluster(DocumentNodes.py) . <br> &#187; python_analysis(ClusteringCallGraph.py) &rarr; labeling_cluster(DocumentNodes.py) &rarr; tf_idf_score_for_scipy_cluster(DocumentNodes.py) . <br> &#187; python_analysis(ClusteringCallGraph.py) &rarr; clustering_using_scipy(ClusteringCallGraph.py) &rarr; labeling_cluster(DocumentNodes.py) &rarr; tf_idf_score_for_scipy_cluster(DocumentNodes.py) &rarr; make_documents_for_a_cluster_tfidf_word(DocumentNodes.py) . <br> &#187; python_analysis(ClusteringCallGraph.py) &rarr; clustering_using_scipy(ClusteringCallGraph.py) &rarr; labeling_cluster(DocumentNodes.py) &rarr; tf_idf_score_for_scipy_cluster(DocumentNodes.py) &rarr; merge_words_as_sentence(DocumentNodes.py) . <br> &#187; python_analysis(ClusteringCallGraph.py) &rarr; clustering_using_scipy(ClusteringCallGraph.py) &rarr; make_documents_for_a_cluster_tfidf_word(DocumentNodes.py) . <br> &#187; python_analysis(ClusteringCallGraph.py) &rarr; clustering_using_scipy(ClusteringCallGraph.py) &rarr; tf_idf_score_for_scipy_cluster(DocumentNodes.py) &rarr; make_documents_for_a_cluster_tfidf_word(DocumentNodes.py) . <br> &#187; python_analysis(ClusteringCallGraph.py) &rarr; clustering_using_scipy(ClusteringCallGraph.py) &rarr; tf_idf_score_for_scipy_cluster(DocumentNodes.py) &rarr; merge_words_as_sentence(DocumentNodes.py) . <br>', 'text_summary': 'Making documents using execution paths of a cluster for tfidf method variant. Making documents using execution paths of a cluster for tfidf word variant. Tfidf score calculation for a scipy cluster.', 'files_count': 2, 'files': ['ClusteringCallGraph.py', 'DocumentNodes.py'], 'execution_path_count': 4, 'function_id_to_name_file': {'19': 'python_analysis(ClusteringCallGraph.py)', '12': 'clustering_using_scipy(ClusteringCallGraph.py)', '31': 'labeling_cluster(DocumentNodes.py)', '42': 'tf_idf_score_for_scipy_cluster(DocumentNodes.py)', '33': 'make_documents_for_a_cluster_tfidf_word(DocumentNodes.py)', '28': 'get_lemma(DocumentNodes.py)', '36': 'merge_words_as_sentence(DocumentNodes.py)', '32': 'make_documents_for_a_cluster_tfidf_method(DocumentNodes.py)'}}, {'key': 57, 'parent': 63, 'tfidf_word': 'node docstring count remove sentence sequential similar id name pattern ', 'tfidf_method': 'clustering_using_scipy python_analysis labeling_cluster count_files_in_node execution_path_to_sentence function_id_to_file_name_of_execution_path mining_sequential_patterns remove_similar_patterns summarize_clusters_using_docstring ', 'lda_word': ' scipy,file,clustering,python,using,', 'lda_method': ' clustering_using_scipy,labeling_cluster,python_analysis,count_files_in_node,execution_path_to_sentence,', 'lsi_word': ' using,cluster,python,clustering,scipy,', 'lsi_method': ' python_analysis,labeling_cluster,clustering_using_scipy,mining_sequential_patterns,remove_similar_patterns,', 'spm_method': '  &#187; python_analysis(ClusteringCallGraph.py) &rarr; clustering_using_scipy(ClusteringCallGraph.py) &rarr; labeling_cluster(DocumentNodes.py) . <br> &#187; python_analysis(ClusteringCallGraph.py) &rarr; clustering_using_scipy(ClusteringCallGraph.py) &rarr; labeling_cluster(DocumentNodes.py) &rarr; count_files_in_node(DocumentNodes.py) . <br> &#187; python_analysis(ClusteringCallGraph.py) &rarr; clustering_using_scipy(ClusteringCallGraph.py) &rarr; labeling_cluster(DocumentNodes.py) &rarr; execution_path_to_sentence(DocumentNodes.py) . <br> &#187; python_analysis(ClusteringCallGraph.py) &rarr; clustering_using_scipy(ClusteringCallGraph.py) &rarr; labeling_cluster(DocumentNodes.py) &rarr; function_id_to_file_name_of_execution_path(DocumentNodes.py) . <br> &#187; python_analysis(ClusteringCallGraph.py) &rarr; clustering_using_scipy(ClusteringCallGraph.py) &rarr; labeling_cluster(DocumentNodes.py) &rarr; mining_sequential_patterns(DocumentNodes.py) . <br> &#187; python_analysis(ClusteringCallGraph.py) &rarr; clustering_using_scipy(ClusteringCallGraph.py) &rarr; labeling_cluster(DocumentNodes.py) &rarr; mining_sequential_patterns(DocumentNodes.py) &rarr; remove_similar_patterns(DocumentNodes.py) . <br> &#187; python_analysis(ClusteringCallGraph.py) &rarr; clustering_using_scipy(ClusteringCallGraph.py) &rarr; labeling_cluster(DocumentNodes.py) &rarr; remove_similar_patterns(DocumentNodes.py) . <br> &#187; python_analysis(ClusteringCallGraph.py) &rarr; clustering_using_scipy(ClusteringCallGraph.py) &rarr; labeling_cluster(DocumentNodes.py) &rarr; summarize_clusters_using_docstring(DocumentNodes.py) . <br> &#187; python_analysis(ClusteringCallGraph.py) &rarr; clustering_using_scipy(ClusteringCallGraph.py) &rarr; mining_sequential_patterns(DocumentNodes.py) . <br> &#187; python_analysis(ClusteringCallGraph.py) &rarr; clustering_using_scipy(ClusteringCallGraph.py) &rarr; mining_sequential_patterns(DocumentNodes.py) &rarr; remove_similar_patterns(DocumentNodes.py) . <br>', 'text_summary': 'Then creates a printable string with execution paths with function names. This function mines sequential patterns from execution paths. clustering execution paths using scipy.', 'files_count': 2, 'files': ['ClusteringCallGraph.py', 'DocumentNodes.py'], 'execution_path_count': 5, 'function_id_to_name_file': {'19': 'python_analysis(ClusteringCallGraph.py)', '12': 'clustering_using_scipy(ClusteringCallGraph.py)', '31': 'labeling_cluster(DocumentNodes.py)', '37': 'mining_sequential_patterns(DocumentNodes.py)', '40': 'remove_similar_patterns(DocumentNodes.py)', '41': 'summarize_clusters_using_docstring(DocumentNodes.py)', '25': 'count_files_in_node(DocumentNodes.py)', '27': 'function_id_to_file_name_of_execution_path(DocumentNodes.py)', '26': 'execution_path_to_sentence(DocumentNodes.py)'}}, {'key': 38, 'parent': 69, 'tfidf_word': 'EP: 38, Name: count_comment_loc_for_repo &rarr; count_total_loc', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 68, 'parent': 69, 'tfidf_word': 'playing data relate check ast sentence start graph with ep ', 'tfidf_method': 'python_analysis remove_redundant_ep random_sample_execution_paths check_ep_overlap_from_start id_to_sentence initalize_graph_related_data_structures PlayingWithAST ', 'lda_word': ' ep,remove,redundant,check,start,', 'lda_method': ' python_analysis,id_to_sentence,playingwithast,random_sample_execution_paths,remove_redundant_ep,', 'lsi_word': ' ep,remove,redundant,analysis,python,', 'lsi_method': ' python_analysis,random_sample_execution_paths,playingwithast,initalize_graph_related_data_structures,id_to_sentence,', 'spm_method': ' ', 'text_summary': 'this function removes redundant execution paths from list of execution paths. Returns printable sentence of a execution path.', 'files_count': 4, 'files': ['ClusteringCallGraph.py', 'util.py', 'PlayingWithAST.py', 'DocumentNodes.py'], 'execution_path_count': 6, 'function_id_to_name_file': {'20': 'remove_redundant_ep(ClusteringCallGraph.py)', '67': 'random_sample_execution_paths(util.py)', '19': 'python_analysis(ClusteringCallGraph.py)', '17': 'id_to_sentence(ClusteringCallGraph.py)', '11': 'check_ep_overlap_from_start(ClusteringCallGraph.py)', '47': 'PlayingWithAST(PlayingWithAST.py)', '29': 'initalize_graph_related_data_structures(DocumentNodes.py)'}}, {'key': 2, 'parent': 72, 'tfidf_word': 'EP: 2, Name: python_analysis &rarr; extracting_source_and_exit_node', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 71, 'parent': 72, 'tfidf_word': 'clustering extract function graph name networkx playing python tgf with ', 'tfidf_method': 'extract_function_name python_analysis tgf_to_networkX PlayingWithAST ClusteringCallGraph ', 'lda_word': ' networkx,tgf,analysis,extract,name,', 'lda_method': ' clusteringcallgraph,playingwithast,tgf_to_networkx,python_analysis,extract_function_name,', 'lsi_word': ' tgf,function,python,networkx,name,', 'lsi_method': ' extract_function_name,python_analysis,tgf_to_networkx,playingwithast,clusteringcallgraph,', 'spm_method': '  &#187; python_analysis(ClusteringCallGraph.py) &rarr; tgf_to_networkX(ClusteringCallGraph.py) &rarr; extract_function_name(ClusteringCallGraph.py) . <br>', 'text_summary': '', 'files_count': 2, 'files': ['ClusteringCallGraph.py', 'PlayingWithAST.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'8': 'ClusteringCallGraph(ClusteringCallGraph.py)', '47': 'PlayingWithAST(PlayingWithAST.py)', '19': 'python_analysis(ClusteringCallGraph.py)', '22': 'tgf_to_networkX(ClusteringCallGraph.py)', '14': 'extract_function_name(ClusteringCallGraph.py)'}}, {'key': 29, 'parent': 51, 'tfidf_word': 'EP: 29, Name: python_analysis &rarr; clustering_using_scipy &rarr; labeling_cluster &rarr; topic_model_lsi &rarr; make_documents_for_a_cluster_tm_word &rarr; merge_words_as_sentence', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 46, 'parent': 51, 'tfidf_word': 'scipy using document make method output tm cluster model topic ', 'tfidf_method': 'clustering_using_scipy python_analysis labeling_cluster topic_model_lsi make_documents_for_a_cluster_tm_method topic_model_output ', 'lda_word': ' topic,model,cluster,python,using,', 'lda_method': ' python_analysis,labeling_cluster,topic_model_lsi,clustering_using_scipy,make_documents_for_a_cluster_tm_method,', 'lsi_word': ' cluster,topic,model,scipy,python,', 'lsi_method': ' clustering_using_scipy,labeling_cluster,python_analysis,topic_model_lsi,topic_model_output,', 'spm_method': '  &#187; clustering_using_scipy(ClusteringCallGraph.py) &rarr; labeling_cluster(DocumentNodes.py) &rarr; topic_model_lsi(DocumentNodes.py) . <br> &#187; python_analysis(ClusteringCallGraph.py) &rarr; clustering_using_scipy(ClusteringCallGraph.py) &rarr; labeling_cluster(DocumentNodes.py) . <br> &#187; python_analysis(ClusteringCallGraph.py) &rarr; clustering_using_scipy(ClusteringCallGraph.py) &rarr; labeling_cluster(DocumentNodes.py) &rarr; topic_model_lsi(DocumentNodes.py) . <br> &#187; python_analysis(ClusteringCallGraph.py) &rarr; clustering_using_scipy(ClusteringCallGraph.py) &rarr; topic_model_lsi(DocumentNodes.py) . <br> &#187; python_analysis(ClusteringCallGraph.py) &rarr; labeling_cluster(DocumentNodes.py) &rarr; topic_model_lsi(DocumentNodes.py) . <br> &#187; python_analysis(ClusteringCallGraph.py) &rarr; clustering_using_scipy(ClusteringCallGraph.py) &rarr; labeling_cluster(DocumentNodes.py) &rarr; topic_model_lsi(DocumentNodes.py) &rarr; topic_model_output(DocumentNodes.py) . <br> &#187; python_analysis(ClusteringCallGraph.py) &rarr; clustering_using_scipy(ClusteringCallGraph.py) &rarr; labeling_cluster(DocumentNodes.py) &rarr; topic_model_output(DocumentNodes.py) . <br> &#187; python_analysis(ClusteringCallGraph.py) &rarr; clustering_using_scipy(ClusteringCallGraph.py) &rarr; make_documents_for_a_cluster_tm_method(DocumentNodes.py) . <br> &#187; python_analysis(ClusteringCallGraph.py) &rarr; clustering_using_scipy(ClusteringCallGraph.py) &rarr; topic_model_lsi(DocumentNodes.py) &rarr; make_documents_for_a_cluster_tm_method(DocumentNodes.py) . <br> &#187; python_analysis(ClusteringCallGraph.py) &rarr; clustering_using_scipy(ClusteringCallGraph.py) &rarr; topic_model_lsi(DocumentNodes.py) &rarr; topic_model_output(DocumentNodes.py) . <br>', 'text_summary': 'Making documents using execution paths of a cluster for topic model method variant. Labelling a cluster using six variants. formatting topic model outputs.', 'files_count': 2, 'files': ['ClusteringCallGraph.py', 'DocumentNodes.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'19': 'python_analysis(ClusteringCallGraph.py)', '12': 'clustering_using_scipy(ClusteringCallGraph.py)', '31': 'labeling_cluster(DocumentNodes.py)', '45': 'topic_model_lsi(DocumentNodes.py)', '34': 'make_documents_for_a_cluster_tm_method(DocumentNodes.py)', '46': 'topic_model_output(DocumentNodes.py)'}}, {'key': 20, 'parent': 42, 'tfidf_word': 'EP: 20, Name: python_analysis &rarr; clustering_using_scipy &rarr; labeling_cluster &rarr; topic_model_lda &rarr; prepare_text_for_lda &rarr; tokenize', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 21, 'parent': 42, 'tfidf_word': 'EP: 21, Name: python_analysis &rarr; clustering_using_scipy &rarr; labeling_cluster &rarr; topic_model_lda &rarr; prepare_text_for_lda &rarr; get_lemma', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 24, 'parent': 52, 'tfidf_word': 'EP: 24, Name: python_analysis &rarr; clustering_using_scipy &rarr; labeling_cluster &rarr; topic_model_lda &rarr; __init__ &rarr; initalize_sheet', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 50, 'parent': 52, 'tfidf_word': 'tm topic model cluster word sentence method merge output words ', 'tfidf_method': 'clustering_using_scipy python_analysis labeling_cluster topic_model_lda make_documents_for_a_cluster_tm_method make_documents_for_a_cluster_tm_word merge_words_as_sentence topic_model_output ', 'lda_word': ' model,topic,cluster,using,python,', 'lda_method': ' python_analysis,topic_model_lda,clustering_using_scipy,labeling_cluster,topic_model_output,', 'lsi_word': ' cluster,topic,model,scipy,lda,', 'lsi_method': ' clustering_using_scipy,python_analysis,topic_model_lda,labeling_cluster,merge_words_as_sentence,', 'spm_method': '  &#187; clustering_using_scipy(ClusteringCallGraph.py) &rarr; labeling_cluster(DocumentNodes.py) &rarr; topic_model_lda(DocumentNodes.py) . <br> &#187; python_analysis(ClusteringCallGraph.py) &rarr; clustering_using_scipy(ClusteringCallGraph.py) &rarr; labeling_cluster(DocumentNodes.py) . <br> &#187; python_analysis(ClusteringCallGraph.py) &rarr; clustering_using_scipy(ClusteringCallGraph.py) &rarr; labeling_cluster(DocumentNodes.py) &rarr; topic_model_lda(DocumentNodes.py) . <br> &#187; python_analysis(ClusteringCallGraph.py) &rarr; clustering_using_scipy(ClusteringCallGraph.py) &rarr; topic_model_lda(DocumentNodes.py) . <br> &#187; python_analysis(ClusteringCallGraph.py) &rarr; labeling_cluster(DocumentNodes.py) &rarr; topic_model_lda(DocumentNodes.py) . <br> &#187; python_analysis(ClusteringCallGraph.py) &rarr; clustering_using_scipy(ClusteringCallGraph.py) &rarr; labeling_cluster(DocumentNodes.py) &rarr; topic_model_lda(DocumentNodes.py) &rarr; make_documents_for_a_cluster_tm_method(DocumentNodes.py) . <br> &#187; python_analysis(ClusteringCallGraph.py) &rarr; clustering_using_scipy(ClusteringCallGraph.py) &rarr; labeling_cluster(DocumentNodes.py) &rarr; topic_model_lda(DocumentNodes.py) &rarr; make_documents_for_a_cluster_tm_word(DocumentNodes.py) . <br> &#187; python_analysis(ClusteringCallGraph.py) &rarr; clustering_using_scipy(ClusteringCallGraph.py) &rarr; labeling_cluster(DocumentNodes.py) &rarr; topic_model_lda(DocumentNodes.py) &rarr; make_documents_for_a_cluster_tm_word(DocumentNodes.py) &rarr; merge_words_as_sentence(DocumentNodes.py) . <br> &#187; python_analysis(ClusteringCallGraph.py) &rarr; clustering_using_scipy(ClusteringCallGraph.py) &rarr; labeling_cluster(DocumentNodes.py) &rarr; topic_model_lda(DocumentNodes.py) &rarr; merge_words_as_sentence(DocumentNodes.py) . <br> &#187; python_analysis(ClusteringCallGraph.py) &rarr; clustering_using_scipy(ClusteringCallGraph.py) &rarr; labeling_cluster(DocumentNodes.py) &rarr; topic_model_lda(DocumentNodes.py) &rarr; topic_model_output(DocumentNodes.py) . <br>', 'text_summary': 'Making documents using execution paths of a cluster for topic model method variant. LDA algorithm for method and word variants. Making documents using execution paths of a cluster for topic model word variant. formatting topic model outputs.', 'files_count': 2, 'files': ['ClusteringCallGraph.py', 'DocumentNodes.py'], 'execution_path_count': 3, 'function_id_to_name_file': {'19': 'python_analysis(ClusteringCallGraph.py)', '12': 'clustering_using_scipy(ClusteringCallGraph.py)', '31': 'labeling_cluster(DocumentNodes.py)', '44': 'topic_model_lda(DocumentNodes.py)', '35': 'make_documents_for_a_cluster_tm_word(DocumentNodes.py)', '36': 'merge_words_as_sentence(DocumentNodes.py)', '34': 'make_documents_for_a_cluster_tm_method(DocumentNodes.py)', '46': 'topic_model_output(DocumentNodes.py)'}}, {'key': 41, 'parent': 54, 'tfidf_word': 'word python score sentence merge lemma get words scipy cluster ', 'tfidf_method': 'clustering_using_scipy python_analysis labeling_cluster make_documents_for_a_cluster_tfidf_word tf_idf_score_for_scipy_cluster get_lemma merge_words_as_sentence ', 'lda_word': ' cluster,scipy,python,tfidf,document,', 'lda_method': ' tf_idf_score_for_scipy_cluster,make_documents_for_a_cluster_tfidf_word,labeling_cluster,clustering_using_scipy,merge_words_as_sentence,', 'lsi_word': ' cluster,scipy,using,score,label,', 'lsi_method': ' clustering_using_scipy,labeling_cluster,make_documents_for_a_cluster_tfidf_word,tf_idf_score_for_scipy_cluster,python_analysis,', 'spm_method': '  &#187; python_analysis(ClusteringCallGraph.py) &rarr; clustering_using_scipy(ClusteringCallGraph.py) &rarr; labeling_cluster(DocumentNodes.py) . <br> &#187; python_analysis(ClusteringCallGraph.py) &rarr; clustering_using_scipy(ClusteringCallGraph.py) &rarr; labeling_cluster(DocumentNodes.py) &rarr; make_documents_for_a_cluster_tfidf_word(DocumentNodes.py) . <br> &#187; python_analysis(ClusteringCallGraph.py) &rarr; clustering_using_scipy(ClusteringCallGraph.py) &rarr; labeling_cluster(DocumentNodes.py) &rarr; tf_idf_score_for_scipy_cluster(DocumentNodes.py) . <br> &#187; python_analysis(ClusteringCallGraph.py) &rarr; clustering_using_scipy(ClusteringCallGraph.py) &rarr; labeling_cluster(DocumentNodes.py) &rarr; tf_idf_score_for_scipy_cluster(DocumentNodes.py) &rarr; make_documents_for_a_cluster_tfidf_word(DocumentNodes.py) . <br> &#187; python_analysis(ClusteringCallGraph.py) &rarr; clustering_using_scipy(ClusteringCallGraph.py) &rarr; make_documents_for_a_cluster_tfidf_word(DocumentNodes.py) . <br> &#187; python_analysis(ClusteringCallGraph.py) &rarr; clustering_using_scipy(ClusteringCallGraph.py) &rarr; tf_idf_score_for_scipy_cluster(DocumentNodes.py) . <br> &#187; python_analysis(ClusteringCallGraph.py) &rarr; clustering_using_scipy(ClusteringCallGraph.py) &rarr; tf_idf_score_for_scipy_cluster(DocumentNodes.py) &rarr; make_documents_for_a_cluster_tfidf_word(DocumentNodes.py) . <br> &#187; python_analysis(ClusteringCallGraph.py) &rarr; labeling_cluster(DocumentNodes.py) &rarr; make_documents_for_a_cluster_tfidf_word(DocumentNodes.py) . <br> &#187; python_analysis(ClusteringCallGraph.py) &rarr; labeling_cluster(DocumentNodes.py) &rarr; tf_idf_score_for_scipy_cluster(DocumentNodes.py) . <br> &#187; python_analysis(ClusteringCallGraph.py) &rarr; labeling_cluster(DocumentNodes.py) &rarr; tf_idf_score_for_scipy_cluster(DocumentNodes.py) &rarr; make_documents_for_a_cluster_tfidf_word(DocumentNodes.py) . <br>', 'text_summary': 'Making documents using execution paths of a cluster for tfidf word variant. clustering execution paths using scipy.', 'files_count': 2, 'files': ['ClusteringCallGraph.py', 'DocumentNodes.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'19': 'python_analysis(ClusteringCallGraph.py)', '12': 'clustering_using_scipy(ClusteringCallGraph.py)', '31': 'labeling_cluster(DocumentNodes.py)', '42': 'tf_idf_score_for_scipy_cluster(DocumentNodes.py)', '33': 'make_documents_for_a_cluster_tfidf_word(DocumentNodes.py)', '28': 'get_lemma(DocumentNodes.py)', '36': 'merge_words_as_sentence(DocumentNodes.py)'}}, {'key': 44, 'parent': 54, 'tfidf_word': 'python tfidf sentence method merge make document words scipy cluster ', 'tfidf_method': 'clustering_using_scipy python_analysis labeling_cluster tf_idf_score_for_scipy_cluster make_documents_for_a_cluster_tfidf_method merge_words_as_sentence ', 'lda_word': ' cluster,scipy,using,score,tf,', 'lda_method': ' labeling_cluster,python_analysis,tf_idf_score_for_scipy_cluster,clustering_using_scipy,merge_words_as_sentence,', 'lsi_word': ' cluster,scipy,python,label,clustering,', 'lsi_method': ' clustering_using_scipy,labeling_cluster,python_analysis,tf_idf_score_for_scipy_cluster,make_documents_for_a_cluster_tfidf_method,', 'spm_method': '  &#187; clustering_using_scipy(ClusteringCallGraph.py) &rarr; labeling_cluster(DocumentNodes.py) &rarr; tf_idf_score_for_scipy_cluster(DocumentNodes.py) . <br> &#187; python_analysis(ClusteringCallGraph.py) &rarr; clustering_using_scipy(ClusteringCallGraph.py) &rarr; labeling_cluster(DocumentNodes.py) . <br> &#187; python_analysis(ClusteringCallGraph.py) &rarr; clustering_using_scipy(ClusteringCallGraph.py) &rarr; labeling_cluster(DocumentNodes.py) &rarr; tf_idf_score_for_scipy_cluster(DocumentNodes.py) . <br> &#187; python_analysis(ClusteringCallGraph.py) &rarr; clustering_using_scipy(ClusteringCallGraph.py) &rarr; tf_idf_score_for_scipy_cluster(DocumentNodes.py) . <br> &#187; python_analysis(ClusteringCallGraph.py) &rarr; labeling_cluster(DocumentNodes.py) &rarr; tf_idf_score_for_scipy_cluster(DocumentNodes.py) . <br> &#187; python_analysis(ClusteringCallGraph.py) &rarr; clustering_using_scipy(ClusteringCallGraph.py) &rarr; labeling_cluster(DocumentNodes.py) &rarr; tf_idf_score_for_scipy_cluster(DocumentNodes.py) &rarr; make_documents_for_a_cluster_tfidf_method(DocumentNodes.py) . <br> &#187; python_analysis(ClusteringCallGraph.py) &rarr; clustering_using_scipy(ClusteringCallGraph.py) &rarr; labeling_cluster(DocumentNodes.py) &rarr; tf_idf_score_for_scipy_cluster(DocumentNodes.py) &rarr; merge_words_as_sentence(DocumentNodes.py) . <br> &#187; python_analysis(ClusteringCallGraph.py) &rarr; clustering_using_scipy(ClusteringCallGraph.py) &rarr; merge_words_as_sentence(DocumentNodes.py) . <br> &#187; python_analysis(ClusteringCallGraph.py) &rarr; clustering_using_scipy(ClusteringCallGraph.py) &rarr; tf_idf_score_for_scipy_cluster(DocumentNodes.py) &rarr; make_documents_for_a_cluster_tfidf_method(DocumentNodes.py) . <br> &#187; python_analysis(ClusteringCallGraph.py) &rarr; clustering_using_scipy(ClusteringCallGraph.py) &rarr; tf_idf_score_for_scipy_cluster(DocumentNodes.py) &rarr; merge_words_as_sentence(DocumentNodes.py) . <br>', 'text_summary': 'Making documents using execution paths of a cluster for tfidf method variant. Tfidf score calculation for a scipy cluster.', 'files_count': 2, 'files': ['ClusteringCallGraph.py', 'DocumentNodes.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'19': 'python_analysis(ClusteringCallGraph.py)', '12': 'clustering_using_scipy(ClusteringCallGraph.py)', '31': 'labeling_cluster(DocumentNodes.py)', '42': 'tf_idf_score_for_scipy_cluster(DocumentNodes.py)', '36': 'merge_words_as_sentence(DocumentNodes.py)', '32': 'make_documents_for_a_cluster_tfidf_method(DocumentNodes.py)'}}, {'key': 15, 'parent': 57, 'tfidf_word': 'EP: 15, Name: python_analysis &rarr; clustering_using_scipy &rarr; labeling_cluster &rarr; mining_sequential_patterns &rarr; remove_similar_patterns', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 49, 'parent': 57, 'tfidf_word': 'using cluster function name node docstring count sentence summarize id ', 'tfidf_method': 'clustering_using_scipy python_analysis labeling_cluster count_files_in_node execution_path_to_sentence function_id_to_file_name_of_execution_path summarize_clusters_using_docstring ', 'lda_word': ' cluster,clustering,using,analysis,label,', 'lda_method': ' labeling_cluster,clustering_using_scipy,python_analysis,summarize_clusters_using_docstring,function_id_to_file_name_of_execution_path,', 'lsi_word': ' cluster,using,clustering,scipy,label,', 'lsi_method': ' labeling_cluster,python_analysis,clustering_using_scipy,summarize_clusters_using_docstring,count_files_in_node,', 'spm_method': '  &#187; python_analysis(ClusteringCallGraph.py) &rarr; clustering_using_scipy(ClusteringCallGraph.py) &rarr; labeling_cluster(DocumentNodes.py) . <br> &#187; python_analysis(ClusteringCallGraph.py) &rarr; clustering_using_scipy(ClusteringCallGraph.py) &rarr; count_files_in_node(DocumentNodes.py) . <br> &#187; python_analysis(ClusteringCallGraph.py) &rarr; clustering_using_scipy(ClusteringCallGraph.py) &rarr; execution_path_to_sentence(DocumentNodes.py) . <br> &#187; python_analysis(ClusteringCallGraph.py) &rarr; clustering_using_scipy(ClusteringCallGraph.py) &rarr; function_id_to_file_name_of_execution_path(DocumentNodes.py) . <br> &#187; python_analysis(ClusteringCallGraph.py) &rarr; clustering_using_scipy(ClusteringCallGraph.py) &rarr; labeling_cluster(DocumentNodes.py) &rarr; count_files_in_node(DocumentNodes.py) . <br> &#187; python_analysis(ClusteringCallGraph.py) &rarr; clustering_using_scipy(ClusteringCallGraph.py) &rarr; labeling_cluster(DocumentNodes.py) &rarr; execution_path_to_sentence(DocumentNodes.py) . <br> &#187; python_analysis(ClusteringCallGraph.py) &rarr; clustering_using_scipy(ClusteringCallGraph.py) &rarr; labeling_cluster(DocumentNodes.py) &rarr; function_id_to_file_name_of_execution_path(DocumentNodes.py) . <br> &#187; python_analysis(ClusteringCallGraph.py) &rarr; clustering_using_scipy(ClusteringCallGraph.py) &rarr; labeling_cluster(DocumentNodes.py) &rarr; summarize_clusters_using_docstring(DocumentNodes.py) . <br> &#187; python_analysis(ClusteringCallGraph.py) &rarr; clustering_using_scipy(ClusteringCallGraph.py) &rarr; summarize_clusters_using_docstring(DocumentNodes.py) . <br> &#187; python_analysis(ClusteringCallGraph.py) &rarr; labeling_cluster(DocumentNodes.py) &rarr; summarize_clusters_using_docstring(DocumentNodes.py) . <br>', 'text_summary': 'clustering execution paths using scipy. analyzing python programs to build cluster tree of execution paths.', 'files_count': 2, 'files': ['ClusteringCallGraph.py', 'DocumentNodes.py'], 'execution_path_count': 4, 'function_id_to_name_file': {'19': 'python_analysis(ClusteringCallGraph.py)', '12': 'clustering_using_scipy(ClusteringCallGraph.py)', '31': 'labeling_cluster(DocumentNodes.py)', '41': 'summarize_clusters_using_docstring(DocumentNodes.py)', '25': 'count_files_in_node(DocumentNodes.py)', '27': 'function_id_to_file_name_of_execution_path(DocumentNodes.py)', '26': 'execution_path_to_sentence(DocumentNodes.py)'}}, {'key': 65, 'parent': 68, 'tfidf_word': 'execution id overlap path python random sample sentence start ep ', 'tfidf_method': 'remove_redundant_ep check_ep_overlap_from_start id_to_sentence python_analysis random_sample_execution_paths ', 'lda_word': ' remove,sentence,redundant,python,ep,', 'lda_method': ' remove_redundant_ep,id_to_sentence,check_ep_overlap_from_start,random_sample_execution_paths,python_analysis,', 'lsi_word': ' ep,remove,redundant,overlap,check,', 'lsi_method': ' remove_redundant_ep,check_ep_overlap_from_start,random_sample_execution_paths,python_analysis,id_to_sentence,', 'spm_method': ' ', 'text_summary': 'This function checks whether 2nd list is a sublist starting from start of 1st list. Returns printable sentence of a execution path.', 'files_count': 2, 'files': ['ClusteringCallGraph.py', 'util.py'], 'execution_path_count': 3, 'function_id_to_name_file': {'20': 'remove_redundant_ep(ClusteringCallGraph.py)', '67': 'random_sample_execution_paths(util.py)', '19': 'python_analysis(ClusteringCallGraph.py)', '17': 'id_to_sentence(ClusteringCallGraph.py)', '11': 'check_ep_overlap_from_start(ClusteringCallGraph.py)'}}, {'key': 67, 'parent': 68, 'tfidf_word': 'execution graph initalize path playing random relate sample structure with ', 'tfidf_method': 'python_analysis initalize_graph_related_data_structures PlayingWithAST random_sample_execution_paths ', 'lda_word': ' analysis,python,graph,data,initalize,', 'lda_method': ' python_analysis,playingwithast,initalize_graph_related_data_structures,random_sample_execution_paths,', 'lsi_word': ' python,analysis,relate,structure,initalize,', 'lsi_method': ' python_analysis,playingwithast,initalize_graph_related_data_structures,random_sample_execution_paths,', 'spm_method': ' ', 'text_summary': '', 'files_count': 4, 'files': ['ClusteringCallGraph.py', 'PlayingWithAST.py', 'DocumentNodes.py', 'util.py'], 'execution_path_count': 3, 'function_id_to_name_file': {'19': 'python_analysis(ClusteringCallGraph.py)', '47': 'PlayingWithAST(PlayingWithAST.py)', '29': 'initalize_graph_related_data_structures(DocumentNodes.py)', '67': 'random_sample_execution_paths(util.py)'}}, {'key': 0, 'parent': 71, 'tfidf_word': 'EP: 0, Name: ClusteringCallGraph &rarr; PlayingWithAST', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 1, 'parent': 71, 'tfidf_word': 'EP: 1, Name: python_analysis &rarr; tgf_to_networkX &rarr; extract_function_name', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 28, 'parent': 46, 'tfidf_word': 'EP: 28, Name: python_analysis &rarr; clustering_using_scipy &rarr; labeling_cluster &rarr; topic_model_lsi &rarr; make_documents_for_a_cluster_tm_method', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 31, 'parent': 46, 'tfidf_word': 'EP: 31, Name: python_analysis &rarr; clustering_using_scipy &rarr; labeling_cluster &rarr; topic_model_lsi &rarr; topic_model_output', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 23, 'parent': 50, 'tfidf_word': 'EP: 23, Name: python_analysis &rarr; clustering_using_scipy &rarr; labeling_cluster &rarr; topic_model_lda &rarr; make_documents_for_a_cluster_tm_word &rarr; merge_words_as_sentence', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 45, 'parent': 50, 'tfidf_word': 'scipy using document make method output tm cluster model topic ', 'tfidf_method': 'clustering_using_scipy python_analysis labeling_cluster topic_model_lda make_documents_for_a_cluster_tm_method topic_model_output ', 'lda_word': ' topic,using,clustering,python,analysis,', 'lda_method': ' python_analysis,labeling_cluster,clustering_using_scipy,topic_model_lda,make_documents_for_a_cluster_tm_method,', 'lsi_word': ' cluster,topic,model,label,python,', 'lsi_method': ' clustering_using_scipy,labeling_cluster,python_analysis,topic_model_lda,make_documents_for_a_cluster_tm_method,', 'spm_method': '  &#187; clustering_using_scipy(ClusteringCallGraph.py) &rarr; labeling_cluster(DocumentNodes.py) &rarr; topic_model_lda(DocumentNodes.py) . <br> &#187; python_analysis(ClusteringCallGraph.py) &rarr; clustering_using_scipy(ClusteringCallGraph.py) &rarr; labeling_cluster(DocumentNodes.py) . <br> &#187; python_analysis(ClusteringCallGraph.py) &rarr; clustering_using_scipy(ClusteringCallGraph.py) &rarr; labeling_cluster(DocumentNodes.py) &rarr; topic_model_lda(DocumentNodes.py) . <br> &#187; python_analysis(ClusteringCallGraph.py) &rarr; clustering_using_scipy(ClusteringCallGraph.py) &rarr; topic_model_lda(DocumentNodes.py) . <br> &#187; python_analysis(ClusteringCallGraph.py) &rarr; labeling_cluster(DocumentNodes.py) &rarr; topic_model_lda(DocumentNodes.py) . <br> &#187; python_analysis(ClusteringCallGraph.py) &rarr; clustering_using_scipy(ClusteringCallGraph.py) &rarr; labeling_cluster(DocumentNodes.py) &rarr; topic_model_lda(DocumentNodes.py) &rarr; topic_model_output(DocumentNodes.py) . <br> &#187; python_analysis(ClusteringCallGraph.py) &rarr; clustering_using_scipy(ClusteringCallGraph.py) &rarr; labeling_cluster(DocumentNodes.py) &rarr; topic_model_output(DocumentNodes.py) . <br> &#187; python_analysis(ClusteringCallGraph.py) &rarr; clustering_using_scipy(ClusteringCallGraph.py) &rarr; make_documents_for_a_cluster_tm_method(DocumentNodes.py) . <br> &#187; python_analysis(ClusteringCallGraph.py) &rarr; clustering_using_scipy(ClusteringCallGraph.py) &rarr; topic_model_lda(DocumentNodes.py) &rarr; make_documents_for_a_cluster_tm_method(DocumentNodes.py) . <br> &#187; python_analysis(ClusteringCallGraph.py) &rarr; clustering_using_scipy(ClusteringCallGraph.py) &rarr; topic_model_lda(DocumentNodes.py) &rarr; topic_model_output(DocumentNodes.py) . <br>', 'text_summary': 'Making documents using execution paths of a cluster for topic model method variant. Labelling a cluster using six variants. formatting topic model outputs.', 'files_count': 2, 'files': ['ClusteringCallGraph.py', 'DocumentNodes.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'19': 'python_analysis(ClusteringCallGraph.py)', '12': 'clustering_using_scipy(ClusteringCallGraph.py)', '31': 'labeling_cluster(DocumentNodes.py)', '44': 'topic_model_lda(DocumentNodes.py)', '34': 'make_documents_for_a_cluster_tm_method(DocumentNodes.py)', '46': 'topic_model_output(DocumentNodes.py)'}}, {'key': 16, 'parent': 41, 'tfidf_word': 'EP: 16, Name: python_analysis &rarr; clustering_using_scipy &rarr; labeling_cluster &rarr; tf_idf_score_for_scipy_cluster &rarr; make_documents_for_a_cluster_tfidf_word &rarr; get_lemma', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 17, 'parent': 41, 'tfidf_word': 'EP: 17, Name: python_analysis &rarr; clustering_using_scipy &rarr; labeling_cluster &rarr; tf_idf_score_for_scipy_cluster &rarr; make_documents_for_a_cluster_tfidf_word &rarr; merge_words_as_sentence', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 18, 'parent': 44, 'tfidf_word': 'EP: 18, Name: python_analysis &rarr; clustering_using_scipy &rarr; labeling_cluster &rarr; tf_idf_score_for_scipy_cluster &rarr; merge_words_as_sentence', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 19, 'parent': 44, 'tfidf_word': 'EP: 19, Name: python_analysis &rarr; clustering_using_scipy &rarr; labeling_cluster &rarr; tf_idf_score_for_scipy_cluster &rarr; make_documents_for_a_cluster_tfidf_method', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 47, 'parent': 49, 'tfidf_word': 'label python scipy count docstring file node summarize cluster using ', 'tfidf_method': 'clustering_using_scipy python_analysis labeling_cluster count_files_in_node summarize_clusters_using_docstring ', 'lda_word': ' using,cluster,clustering,analysis,label,', 'lda_method': ' clustering_using_scipy,python_analysis,labeling_cluster,summarize_clusters_using_docstring,count_files_in_node,', 'lsi_word': ' using,cluster,label,scipy,analysis,', 'lsi_method': ' clustering_using_scipy,labeling_cluster,python_analysis,summarize_clusters_using_docstring,count_files_in_node,', 'spm_method': '  &#187; python_analysis(ClusteringCallGraph.py) &rarr; clustering_using_scipy(ClusteringCallGraph.py) &rarr; labeling_cluster(DocumentNodes.py) . <br> &#187; clustering_using_scipy(ClusteringCallGraph.py) &rarr; labeling_cluster(DocumentNodes.py) &rarr; count_files_in_node(DocumentNodes.py) . <br> &#187; clustering_using_scipy(ClusteringCallGraph.py) &rarr; labeling_cluster(DocumentNodes.py) &rarr; summarize_clusters_using_docstring(DocumentNodes.py) . <br> &#187; python_analysis(ClusteringCallGraph.py) &rarr; clustering_using_scipy(ClusteringCallGraph.py) &rarr; count_files_in_node(DocumentNodes.py) . <br> &#187; python_analysis(ClusteringCallGraph.py) &rarr; clustering_using_scipy(ClusteringCallGraph.py) &rarr; labeling_cluster(DocumentNodes.py) &rarr; count_files_in_node(DocumentNodes.py) . <br> &#187; python_analysis(ClusteringCallGraph.py) &rarr; clustering_using_scipy(ClusteringCallGraph.py) &rarr; labeling_cluster(DocumentNodes.py) &rarr; summarize_clusters_using_docstring(DocumentNodes.py) . <br> &#187; python_analysis(ClusteringCallGraph.py) &rarr; clustering_using_scipy(ClusteringCallGraph.py) &rarr; summarize_clusters_using_docstring(DocumentNodes.py) . <br> &#187; python_analysis(ClusteringCallGraph.py) &rarr; labeling_cluster(DocumentNodes.py) &rarr; count_files_in_node(DocumentNodes.py) . <br> &#187; python_analysis(ClusteringCallGraph.py) &rarr; labeling_cluster(DocumentNodes.py) &rarr; summarize_clusters_using_docstring(DocumentNodes.py) . <br>', 'text_summary': 'Labelling a cluster using six variants.', 'files_count': 2, 'files': ['ClusteringCallGraph.py', 'DocumentNodes.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'19': 'python_analysis(ClusteringCallGraph.py)', '12': 'clustering_using_scipy(ClusteringCallGraph.py)', '31': 'labeling_cluster(DocumentNodes.py)', '41': 'summarize_clusters_using_docstring(DocumentNodes.py)', '25': 'count_files_in_node(DocumentNodes.py)'}}, {'key': 48, 'parent': 49, 'tfidf_word': 'label path python scipy using file function id name sentence ', 'tfidf_method': 'clustering_using_scipy python_analysis labeling_cluster execution_path_to_sentence function_id_to_file_name_of_execution_path ', 'lda_word': ' clustering,using,scipy,label,cluster,', 'lda_method': ' clustering_using_scipy,python_analysis,labeling_cluster,function_id_to_file_name_of_execution_path,execution_path_to_sentence,', 'lsi_word': ' analysis,execution,scipy,path,using,', 'lsi_method': ' labeling_cluster,python_analysis,clustering_using_scipy,function_id_to_file_name_of_execution_path,execution_path_to_sentence,', 'spm_method': '  &#187; python_analysis(ClusteringCallGraph.py) &rarr; clustering_using_scipy(ClusteringCallGraph.py) &rarr; labeling_cluster(DocumentNodes.py) . <br> &#187; clustering_using_scipy(ClusteringCallGraph.py) &rarr; labeling_cluster(DocumentNodes.py) &rarr; execution_path_to_sentence(DocumentNodes.py) . <br> &#187; clustering_using_scipy(ClusteringCallGraph.py) &rarr; labeling_cluster(DocumentNodes.py) &rarr; function_id_to_file_name_of_execution_path(DocumentNodes.py) . <br> &#187; python_analysis(ClusteringCallGraph.py) &rarr; clustering_using_scipy(ClusteringCallGraph.py) &rarr; execution_path_to_sentence(DocumentNodes.py) . <br> &#187; python_analysis(ClusteringCallGraph.py) &rarr; clustering_using_scipy(ClusteringCallGraph.py) &rarr; function_id_to_file_name_of_execution_path(DocumentNodes.py) . <br> &#187; python_analysis(ClusteringCallGraph.py) &rarr; clustering_using_scipy(ClusteringCallGraph.py) &rarr; labeling_cluster(DocumentNodes.py) &rarr; execution_path_to_sentence(DocumentNodes.py) . <br> &#187; python_analysis(ClusteringCallGraph.py) &rarr; clustering_using_scipy(ClusteringCallGraph.py) &rarr; labeling_cluster(DocumentNodes.py) &rarr; function_id_to_file_name_of_execution_path(DocumentNodes.py) . <br> &#187; python_analysis(ClusteringCallGraph.py) &rarr; labeling_cluster(DocumentNodes.py) &rarr; execution_path_to_sentence(DocumentNodes.py) . <br> &#187; python_analysis(ClusteringCallGraph.py) &rarr; labeling_cluster(DocumentNodes.py) &rarr; function_id_to_file_name_of_execution_path(DocumentNodes.py) . <br>', 'text_summary': 'This function takes execution paths of a cluster. analyzing python programs to build cluster tree of execution paths.', 'files_count': 2, 'files': ['ClusteringCallGraph.py', 'DocumentNodes.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'19': 'python_analysis(ClusteringCallGraph.py)', '12': 'clustering_using_scipy(ClusteringCallGraph.py)', '31': 'labeling_cluster(DocumentNodes.py)', '27': 'function_id_to_file_name_of_execution_path(DocumentNodes.py)', '26': 'execution_path_to_sentence(DocumentNodes.py)'}}, {'key': 35, 'parent': 65, 'tfidf_word': 'EP: 35, Name: remove_redundant_ep &rarr; random_sample_execution_paths', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 64, 'parent': 65, 'tfidf_word': 'analysis check id overlap python redundant remove sentence start ep ', 'tfidf_method': 'check_ep_overlap_from_start id_to_sentence python_analysis remove_redundant_ep ', 'lda_word': ' analysis,sentence,python,ep,remove,', 'lda_method': ' id_to_sentence,remove_redundant_ep,check_ep_overlap_from_start,python_analysis,', 'lsi_word': ' ep,remove,start,redundant,overlap,', 'lsi_method': ' check_ep_overlap_from_start,remove_redundant_ep,id_to_sentence,python_analysis,', 'spm_method': ' ', 'text_summary': 'Returns printable sentence of a execution path.', 'files_count': 1, 'files': ['ClusteringCallGraph.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'19': 'python_analysis(ClusteringCallGraph.py)', '17': 'id_to_sentence(ClusteringCallGraph.py)', '20': 'remove_redundant_ep(ClusteringCallGraph.py)', '11': 'check_ep_overlap_from_start(ClusteringCallGraph.py)'}}, {'key': 7, 'parent': 67, 'tfidf_word': 'EP: 7, Name: python_analysis &rarr; PlayingWithAST', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 66, 'parent': 67, 'tfidf_word': 'python data execution graph initalize path random relate sample structure ', 'tfidf_method': 'python_analysis initalize_graph_related_data_structures random_sample_execution_paths ', 'lda_word': ' python,analysis,random,execution,structure,', 'lda_method': ' python_analysis,random_sample_execution_paths,initalize_graph_related_data_structures,', 'lsi_word': ' analysis,python,data,graph,structure,', 'lsi_method': ' python_analysis,random_sample_execution_paths,initalize_graph_related_data_structures,', 'spm_method': ' ', 'text_summary': '', 'files_count': 3, 'files': ['ClusteringCallGraph.py', 'DocumentNodes.py', 'util.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'19': 'python_analysis(ClusteringCallGraph.py)', '29': 'initalize_graph_related_data_structures(DocumentNodes.py)', '67': 'random_sample_execution_paths(util.py)'}}, {'key': 22, 'parent': 45, 'tfidf_word': 'EP: 22, Name: python_analysis &rarr; clustering_using_scipy &rarr; labeling_cluster &rarr; topic_model_lda &rarr; make_documents_for_a_cluster_tm_method', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 25, 'parent': 45, 'tfidf_word': 'EP: 25, Name: python_analysis &rarr; clustering_using_scipy &rarr; labeling_cluster &rarr; topic_model_lda &rarr; topic_model_output', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 32, 'parent': 47, 'tfidf_word': 'EP: 32, Name: python_analysis &rarr; clustering_using_scipy &rarr; labeling_cluster &rarr; summarize_clusters_using_docstring', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 33, 'parent': 47, 'tfidf_word': 'EP: 33, Name: python_analysis &rarr; clustering_using_scipy &rarr; labeling_cluster &rarr; count_files_in_node', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 13, 'parent': 48, 'tfidf_word': 'EP: 13, Name: python_analysis &rarr; clustering_using_scipy &rarr; labeling_cluster &rarr; function_id_to_file_name_of_execution_path', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 14, 'parent': 48, 'tfidf_word': 'EP: 14, Name: python_analysis &rarr; clustering_using_scipy &rarr; labeling_cluster &rarr; execution_path_to_sentence', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 8, 'parent': 64, 'tfidf_word': 'EP: 8, Name: python_analysis &rarr; id_to_sentence', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 34, 'parent': 64, 'tfidf_word': 'EP: 34, Name: remove_redundant_ep &rarr; check_ep_overlap_from_start', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 5, 'parent': 66, 'tfidf_word': 'EP: 5, Name: python_analysis &rarr; initalize_graph_related_data_structures', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}, {'key': 6, 'parent': 66, 'tfidf_word': 'EP: 6, Name: python_analysis &rarr; random_sample_execution_paths', 'tfidf_method': '', 'lda_word': '', 'lda_method': '', 'lsi_word': '', 'lsi_method': '', 'spm_method': '', 'text_summary': 'hello summary', 'files': [], 'files_count': 0, 'execution_path_count': 0, 'function_id_to_name_file': []}]
